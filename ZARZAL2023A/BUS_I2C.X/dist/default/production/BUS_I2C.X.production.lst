

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 12 09:55:18 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _SSPCON2bits	set	4037
    54  0000                     _SSPSTAT	set	4039
    55  0000                     _TRISBbits	set	3987
    56  0000                     _ADCON1	set	4033
    57  0000                     _SSPCON2	set	4037
    58  0000                     _SSPCON1bits	set	4038
    59  0000                     _SSPSTATbits	set	4039
    60  0000                     _SSPBUF	set	4041
    61  0000                     _SSPADD	set	4040
    62                           
    63                           ; #config settings
    64                           
    65                           	psect	cinit
    66  007F36                     __pcinit:
    67                           	callstack 0
    68  007F36                     start_initialization:
    69                           	callstack 0
    70  007F36                     __initialization:
    71                           	callstack 0
    72  007F36                     end_of_initialization:
    73                           	callstack 0
    74  007F36                     __end_of__initialization:
    75                           	callstack 0
    76  007F36  0100               	movlb	0
    77  007F38  EFCC  F03F         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMRAM
    80  000001                     __pcstackCOMRAM:
    81                           	callstack 0
    82  000001                     ??_I2C_Condiciones_Espera:
    83                           
    84                           ; 1 bytes @ 0x0
    85  000001                     	ds	1
    86  000002                     I2C_Wr@data:
    87                           	callstack 0
    88                           
    89                           ; 1 bytes @ 0x1
    90  000002                     	ds	1
    91  000003                     ??_main:
    92                           
    93                           ; 1 bytes @ 0x2
    94  000003                     	ds	2
    95                           
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 7 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, status,0, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   115 ;;      Params:         0       0       0       0       0       0       0       0       0
   116 ;;      Locals:         0       0       0       0       0       0       0       0       0
   117 ;;      Temps:          2       0       0       0       0       0       0       0       0
   118 ;;      Totals:         2       0       0       0       0       0       0       0       0
   119 ;;Total ram usage:        2 bytes
   120 ;; Hardware stack levels required when called: 2
   121 ;; This function calls:
   122 ;;		_I2C_Init
   123 ;;		_I2C_Start
   124 ;;		_I2C_Stop
   125 ;;		_I2C_Wr
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132  007F98                     __ptext0:
   133                           	callstack 0
   134  007F98                     _main:
   135                           	callstack 29
   136  007F98                     
   137                           ;main.c: 9:     ADCON1 = 0x0F;
   138  007F98  0E0F               	movlw	15
   139  007F9A  6EC1               	movwf	193,c	;volatile
   140  007F9C                     
   141                           ;main.c: 11:     I2C_Init();
   142  007F9C  ECAC  F03F         	call	_I2C_Init	;wreg free
   143  007FA0                     l762:
   144                           
   145                           ;main.c: 14:         I2C_Start();
   146  007FA0  EC9E  F03F         	call	_I2C_Start	;wreg free
   147  007FA4                     
   148                           ;main.c: 15:         I2C_Wr(0b0100111<<1 | 0);
   149  007FA4  0E4E               	movlw	78
   150  007FA6  ECA6  F03F         	call	_I2C_Wr
   151  007FAA                     
   152                           ;main.c: 16:         I2C_Wr(0x0F);
   153  007FAA  0E0F               	movlw	15
   154  007FAC  ECA6  F03F         	call	_I2C_Wr
   155  007FB0                     
   156                           ;main.c: 17:         I2C_Stop();
   157  007FB0  ECA2  F03F         	call	_I2C_Stop	;wreg free
   158  007FB4                     
   159                           ;main.c: 18:         _delay((unsigned long)((500)*(20000000UL/4000.0)));
   160  007FB4  0E0D               	movlw	13
   161  007FB6  6E04               	movwf	(??_main+1)^0,c
   162  007FB8  0EAF               	movlw	175
   163  007FBA  6E03               	movwf	??_main^0,c
   164  007FBC  0EB6               	movlw	182
   165  007FBE                     u37:
   166  007FBE  2EE8               	decfsz	wreg,f,c
   167  007FC0  D7FE               	bra	u37
   168  007FC2  2E03               	decfsz	??_main^0,f,c
   169  007FC4  D7FC               	bra	u37
   170  007FC6  2E04               	decfsz	(??_main+1)^0,f,c
   171  007FC8  D7FA               	bra	u37
   172  007FCA  D000               	nop2	
   173  007FCC                     
   174                           ;main.c: 20:         I2C_Start();
   175  007FCC  EC9E  F03F         	call	_I2C_Start	;wreg free
   176  007FD0                     
   177                           ;main.c: 21:         I2C_Wr(0b0100111<<1 | 0);
   178  007FD0  0E4E               	movlw	78
   179  007FD2  ECA6  F03F         	call	_I2C_Wr
   180  007FD6                     
   181                           ;main.c: 22:         I2C_Wr(0xF0);
   182  007FD6  0EF0               	movlw	240
   183  007FD8  ECA6  F03F         	call	_I2C_Wr
   184  007FDC                     
   185                           ;main.c: 23:         I2C_Stop();
   186  007FDC  ECA2  F03F         	call	_I2C_Stop	;wreg free
   187  007FE0                     
   188                           ;main.c: 24:         _delay((unsigned long)((500)*(20000000UL/4000.0)));
   189  007FE0  0E0D               	movlw	13
   190  007FE2  6E04               	movwf	(??_main+1)^0,c
   191  007FE4  0EAF               	movlw	175
   192  007FE6  6E03               	movwf	??_main^0,c
   193  007FE8  0EB6               	movlw	182
   194  007FEA                     u47:
   195  007FEA  2EE8               	decfsz	wreg,f,c
   196  007FEC  D7FE               	bra	u47
   197  007FEE  2E03               	decfsz	??_main^0,f,c
   198  007FF0  D7FC               	bra	u47
   199  007FF2  2E04               	decfsz	(??_main+1)^0,f,c
   200  007FF4  D7FA               	bra	u47
   201  007FF6  D000               	nop2	
   202  007FF8  EFD0  F03F         	goto	l762
   203  007FFC  EF00  F000         	goto	start
   204  008000                     __end_of_main:
   205                           	callstack 0
   206                           
   207 ;; *************** function _I2C_Wr *****************
   208 ;; Defined at:
   209 ;;		line 33 in file "I2C_LIB.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;  data            1    wreg     unsigned char 
   212 ;; Auto vars:     Size  Location     Type
   213 ;;  data            1    1[COMRAM] unsigned char 
   214 ;; Return value:  Size  Location     Type
   215 ;;                  1    wreg      void 
   216 ;; Registers used:
   217 ;;		wreg, status,2, status,0, cstack
   218 ;; Tracked objects:
   219 ;;		On entry : 0/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   223 ;;      Params:         0       0       0       0       0       0       0       0       0
   224 ;;      Locals:         1       0       0       0       0       0       0       0       0
   225 ;;      Temps:          0       0       0       0       0       0       0       0       0
   226 ;;      Totals:         1       0       0       0       0       0       0       0       0
   227 ;;Total ram usage:        1 bytes
   228 ;; Hardware stack levels used: 1
   229 ;; Hardware stack levels required when called: 1
   230 ;; This function calls:
   231 ;;		_I2C_Condiciones_Espera
   232 ;; This function is called by:
   233 ;;		_main
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	text1
   238  007F4C                     __ptext1:
   239                           	callstack 0
   240  007F4C                     _I2C_Wr:
   241                           	callstack 29
   242                           
   243                           ;incstack = 0
   244                           ;I2C_Wr@data stored from wreg
   245  007F4C  6E02               	movwf	I2C_Wr@data^0,c
   246  007F4E                     
   247                           ;I2C_LIB.c: 34:     I2C_Condiciones_Espera();
   248  007F4E  ECB9  F03F         	call	_I2C_Condiciones_Espera	;wreg free
   249  007F52                     
   250                           ;I2C_LIB.c: 35:     SSPBUF = data;
   251  007F52  C002  FFC9         	movff	I2C_Wr@data,4041	;volatile
   252  007F56  0012               	return		;funcret
   253  007F58                     __end_of_I2C_Wr:
   254                           	callstack 0
   255                           
   256 ;; *************** function _I2C_Stop *****************
   257 ;; Defined at:
   258 ;;		line 25 in file "I2C_LIB.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   272 ;;      Params:         0       0       0       0       0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels used: 1
   278 ;; Hardware stack levels required when called: 1
   279 ;; This function calls:
   280 ;;		_I2C_Condiciones_Espera
   281 ;; This function is called by:
   282 ;;		_main
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text2
   287  007F44                     __ptext2:
   288                           	callstack 0
   289  007F44                     _I2C_Stop:
   290                           	callstack 29
   291  007F44                     
   292                           ;I2C_LIB.c: 26:     I2C_Condiciones_Espera();
   293  007F44  ECB9  F03F         	call	_I2C_Condiciones_Espera	;wreg free
   294  007F48                     
   295                           ;I2C_LIB.c: 27:     SSPCON2bits.PEN = 1;
   296  007F48  84C5               	bsf	197,2,c	;volatile
   297  007F4A  0012               	return		;funcret
   298  007F4C                     __end_of_I2C_Stop:
   299                           	callstack 0
   300                           
   301 ;; *************** function _I2C_Start *****************
   302 ;; Defined at:
   303 ;;		line 21 in file "I2C_LIB.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		wreg, status,2, status,0, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   317 ;;      Params:         0       0       0       0       0       0       0       0       0
   318 ;;      Locals:         0       0       0       0       0       0       0       0       0
   319 ;;      Temps:          0       0       0       0       0       0       0       0       0
   320 ;;      Totals:         0       0       0       0       0       0       0       0       0
   321 ;;Total ram usage:        0 bytes
   322 ;; Hardware stack levels used: 1
   323 ;; Hardware stack levels required when called: 1
   324 ;; This function calls:
   325 ;;		_I2C_Condiciones_Espera
   326 ;; This function is called by:
   327 ;;		_main
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text3
   332  007F3C                     __ptext3:
   333                           	callstack 0
   334  007F3C                     _I2C_Start:
   335                           	callstack 29
   336  007F3C                     
   337                           ;I2C_LIB.c: 22:     I2C_Condiciones_Espera();
   338  007F3C  ECB9  F03F         	call	_I2C_Condiciones_Espera	;wreg free
   339  007F40                     
   340                           ;I2C_LIB.c: 23:     SSPCON2bits.SEN = 1;
   341  007F40  80C5               	bsf	197,0,c	;volatile
   342  007F42  0012               	return		;funcret
   343  007F44                     __end_of_I2C_Start:
   344                           	callstack 0
   345                           
   346 ;; *************** function _I2C_Condiciones_Espera *****************
   347 ;; Defined at:
   348 ;;		line 18 in file "I2C_LIB.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   362 ;;      Params:         0       0       0       0       0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0       0       0       0       0
   364 ;;      Temps:          1       0       0       0       0       0       0       0       0
   365 ;;      Totals:         1       0       0       0       0       0       0       0       0
   366 ;;Total ram usage:        1 bytes
   367 ;; Hardware stack levels used: 1
   368 ;; This function calls:
   369 ;;		Nothing
   370 ;; This function is called by:
   371 ;;		_I2C_Start
   372 ;;		_I2C_Stop
   373 ;;		_I2C_Wr
   374 ;;		_I2C_Restart
   375 ;;		_I2C_Rd
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text4
   380  007F72                     __ptext4:
   381                           	callstack 0
   382  007F72                     _I2C_Condiciones_Espera:
   383                           	callstack 29
   384  007F72                     l738:
   385  007F72  CFC5 F001          	movff	4037,??_I2C_Condiciones_Espera	;volatile
   386  007F76  0E1F               	movlw	31
   387  007F78  1601               	andwf	??_I2C_Condiciones_Espera^0,f,c
   388  007F7A  A4D8               	btfss	status,2,c
   389  007F7C  EFC2  F03F         	goto	u11
   390  007F80  EFC4  F03F         	goto	u10
   391  007F84                     u11:
   392  007F84  EFB9  F03F         	goto	l738
   393  007F88                     u10:
   394  007F88  B4C7               	btfsc	199,2,c	;volatile
   395  007F8A  EFC9  F03F         	goto	u21
   396  007F8E  EFCB  F03F         	goto	u20
   397  007F92                     u21:
   398  007F92  EFB9  F03F         	goto	l738
   399  007F96                     u20:
   400  007F96  0012               	return		;funcret
   401  007F98                     __end_of_I2C_Condiciones_Espera:
   402                           	callstack 0
   403                           
   404 ;; *************** function _I2C_Init *****************
   405 ;; Defined at:
   406 ;;		line 6 in file "I2C_LIB.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   420 ;;      Params:         0       0       0       0       0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels used: 1
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text5
   434  007F58                     __ptext5:
   435                           	callstack 0
   436  007F58                     _I2C_Init:
   437                           	callstack 30
   438  007F58                     
   439                           ;I2C_LIB.c: 7:     TRISBbits.RB0 = 1;
   440  007F58  8093               	bsf	147,0,c	;volatile
   441                           
   442                           ;I2C_LIB.c: 8:     TRISBbits.RB1 = 1;
   443  007F5A  8293               	bsf	147,1,c	;volatile
   444                           
   445                           ;I2C_LIB.c: 10:     SSPSTATbits.SMP = 1;
   446  007F5C  8EC7               	bsf	199,7,c	;volatile
   447                           
   448                           ;I2C_LIB.c: 11:     SSPCON1bits.SSPEN = 1;
   449  007F5E  8AC6               	bsf	198,5,c	;volatile
   450  007F60                     
   451                           ;I2C_LIB.c: 12:     SSPCON1bits.SSPM = 0b1000;
   452  007F60  50C6               	movf	198,w,c	;volatile
   453  007F62  0BF0               	andlw	-16
   454  007F64  0908               	iorlw	8
   455  007F66  6EC6               	movwf	198,c	;volatile
   456                           
   457                           ;I2C_LIB.c: 14:     SSPADD = (unsigned int)((20000000UL/(4.0*100000UL))-1.0);
   458  007F68  0E31               	movlw	49
   459  007F6A  6EC8               	movwf	200,c	;volatile
   460                           
   461                           ;I2C_LIB.c: 16:     SSPCON2 = 0x00;
   462  007F6C  0E00               	movlw	0
   463  007F6E  6EC5               	movwf	197,c	;volatile
   464  007F70  0012               	return		;funcret
   465  007F72                     __end_of_I2C_Init:
   466                           	callstack 0
   467  0000                     
   468                           	psect	rparam
   469  0000                     
   470                           	psect	idloc
   471                           
   472                           ;Config register IDLOC0 @ 0x200000
   473                           ;	unspecified, using default values
   474  200000                     	org	2097152
   475  200000  FF                 	db	255
   476                           
   477                           ;Config register IDLOC1 @ 0x200001
   478                           ;	unspecified, using default values
   479  200001                     	org	2097153
   480  200001  FF                 	db	255
   481                           
   482                           ;Config register IDLOC2 @ 0x200002
   483                           ;	unspecified, using default values
   484  200002                     	org	2097154
   485  200002  FF                 	db	255
   486                           
   487                           ;Config register IDLOC3 @ 0x200003
   488                           ;	unspecified, using default values
   489  200003                     	org	2097155
   490  200003  FF                 	db	255
   491                           
   492                           ;Config register IDLOC4 @ 0x200004
   493                           ;	unspecified, using default values
   494  200004                     	org	2097156
   495  200004  FF                 	db	255
   496                           
   497                           ;Config register IDLOC5 @ 0x200005
   498                           ;	unspecified, using default values
   499  200005                     	org	2097157
   500  200005  FF                 	db	255
   501                           
   502                           ;Config register IDLOC6 @ 0x200006
   503                           ;	unspecified, using default values
   504  200006                     	org	2097158
   505  200006  FF                 	db	255
   506                           
   507                           ;Config register IDLOC7 @ 0x200007
   508                           ;	unspecified, using default values
   509  200007                     	org	2097159
   510  200007  FF                 	db	255
   511                           
   512                           	psect	config
   513                           
   514                           ;Config register CONFIG1L @ 0x300000
   515                           ;	PLL Prescaler Selection bits
   516                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   517                           ;	System Clock Postscaler Selection bits
   518                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   519                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   520                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   521  300000                     	org	3145728
   522  300000  00                 	db	0
   523                           
   524                           ;Config register CONFIG1H @ 0x300001
   525                           ;	Oscillator Selection bits
   526                           ;	FOSC = HS, HS oscillator (HS)
   527                           ;	Fail-Safe Clock Monitor Enable bit
   528                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   529                           ;	Internal/External Oscillator Switchover bit
   530                           ;	IESO = OFF, Oscillator Switchover mode disabled
   531  300001                     	org	3145729
   532  300001  0C                 	db	12
   533                           
   534                           ;Config register CONFIG2L @ 0x300002
   535                           ;	Power-up Timer Enable bit
   536                           ;	PWRT = OFF, PWRT disabled
   537                           ;	Brown-out Reset Enable bits
   538                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   539                           ;	Brown-out Reset Voltage bits
   540                           ;	BORV = 3, Minimum setting 2.05V
   541                           ;	USB Voltage Regulator Enable bit
   542                           ;	VREGEN = OFF, USB voltage regulator disabled
   543  300002                     	org	3145730
   544  300002  1F                 	db	31
   545                           
   546                           ;Config register CONFIG2H @ 0x300003
   547                           ;	Watchdog Timer Enable bit
   548                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   549                           ;	Watchdog Timer Postscale Select bits
   550                           ;	WDTPS = 32768, 1:32768
   551  300003                     	org	3145731
   552  300003  1E                 	db	30
   553                           
   554                           ; Padding undefined space
   555  300004                     	org	3145732
   556  300004  FF                 	db	255
   557                           
   558                           ;Config register CONFIG3H @ 0x300005
   559                           ;	CCP2 MUX bit
   560                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   561                           ;	PORTB A/D Enable bit
   562                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   563                           ;	Low-Power Timer 1 Oscillator Enable bit
   564                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   565                           ;	MCLR Pin Enable bit
   566                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   567  300005                     	org	3145733
   568  300005  81                 	db	129
   569                           
   570                           ;Config register CONFIG4L @ 0x300006
   571                           ;	Stack Full/Underflow Reset Enable bit
   572                           ;	STVREN = ON, Stack full/underflow will cause Reset
   573                           ;	Single-Supply ICSP Enable bit
   574                           ;	LVP = ON, Single-Supply ICSP enabled
   575                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   576                           ;	ICPRT = OFF, ICPORT disabled
   577                           ;	Extended Instruction Set Enable bit
   578                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   579                           ;	Background Debugger Enable bit
   580                           ;	DEBUG = 0x1, unprogrammed default
   581  300006                     	org	3145734
   582  300006  85                 	db	133
   583                           
   584                           ; Padding undefined space
   585  300007                     	org	3145735
   586  300007  FF                 	db	255
   587                           
   588                           ;Config register CONFIG5L @ 0x300008
   589                           ;	Code Protection bit
   590                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   591                           ;	Code Protection bit
   592                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   593                           ;	Code Protection bit
   594                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   595                           ;	Code Protection bit
   596                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   597  300008                     	org	3145736
   598  300008  0F                 	db	15
   599                           
   600                           ;Config register CONFIG5H @ 0x300009
   601                           ;	Boot Block Code Protection bit
   602                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   603                           ;	Data EEPROM Code Protection bit
   604                           ;	CPD = OFF, Data EEPROM is not code-protected
   605  300009                     	org	3145737
   606  300009  C0                 	db	192
   607                           
   608                           ;Config register CONFIG6L @ 0x30000A
   609                           ;	Write Protection bit
   610                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   611                           ;	Write Protection bit
   612                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   613                           ;	Write Protection bit
   614                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   615                           ;	Write Protection bit
   616                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   617  30000A                     	org	3145738
   618  30000A  0F                 	db	15
   619                           
   620                           ;Config register CONFIG6H @ 0x30000B
   621                           ;	Configuration Register Write Protection bit
   622                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   623                           ;	Boot Block Write Protection bit
   624                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   625                           ;	Data EEPROM Write Protection bit
   626                           ;	WRTD = OFF, Data EEPROM is not write-protected
   627  30000B                     	org	3145739
   628  30000B  E0                 	db	224
   629                           
   630                           ;Config register CONFIG7L @ 0x30000C
   631                           ;	Table Read Protection bit
   632                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   633                           ;	Table Read Protection bit
   634                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   635                           ;	Table Read Protection bit
   636                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   637                           ;	Table Read Protection bit
   638                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   639  30000C                     	org	3145740
   640  30000C  0F                 	db	15
   641                           
   642                           ;Config register CONFIG7H @ 0x30000D
   643                           ;	Boot Block Table Read Protection bit
   644                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   645  30000D                     	org	3145741
   646  30000D  40                 	db	64
   647                           tosu	equ	0xFFF
   648                           tosh	equ	0xFFE
   649                           tosl	equ	0xFFD
   650                           stkptr	equ	0xFFC
   651                           pclatu	equ	0xFFB
   652                           pclath	equ	0xFFA
   653                           pcl	equ	0xFF9
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           tblptrl	equ	0xFF6
   657                           tablat	equ	0xFF5
   658                           prodh	equ	0xFF4
   659                           prodl	equ	0xFF3
   660                           indf0	equ	0xFEF
   661                           postinc0	equ	0xFEE
   662                           postdec0	equ	0xFED
   663                           preinc0	equ	0xFEC
   664                           plusw0	equ	0xFEB
   665                           fsr0h	equ	0xFEA
   666                           fsr0l	equ	0xFE9
   667                           wreg	equ	0xFE8
   668                           indf1	equ	0xFE7
   669                           postinc1	equ	0xFE6
   670                           postdec1	equ	0xFE5
   671                           preinc1	equ	0xFE4
   672                           plusw1	equ	0xFE3
   673                           fsr1h	equ	0xFE2
   674                           fsr1l	equ	0xFE1
   675                           bsr	equ	0xFE0
   676                           indf2	equ	0xFDF
   677                           postinc2	equ	0xFDE
   678                           postdec2	equ	0xFDD
   679                           preinc2	equ	0xFDC
   680                           plusw2	equ	0xFDB
   681                           fsr2h	equ	0xFDA
   682                           fsr2l	equ	0xFD9
   683                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_I2C_Wr
    _I2C_Wr->_I2C_Condiciones_Espera
    _I2C_Stop->_I2C_Condiciones_Espera
    _I2C_Start->_I2C_Condiciones_Espera

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              2 COMRAM     2     2      0
                           _I2C_Init
                          _I2C_Start
                           _I2C_Stop
                             _I2C_Wr
 ---------------------------------------------------------------------------------
 (1) _I2C_Wr                                               1     1      0      15
                                              1 COMRAM     1     1      0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (2) _I2C_Condiciones_Espera                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Start
     _I2C_Condiciones_Espera
   _I2C_Stop
     _I2C_Condiciones_Espera
   _I2C_Wr
     _I2C_Condiciones_Espera

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh         36      0       0      20        0.0%
BITBIGSFRhl          3      0       0      21        0.0%
BITBIGSFRlh         2D      0       0      22        0.0%
BITBIGSFRll         33      0       0      23        0.0%
ABS                  0      0       0      24        0.0%
BIGRAM             7FF      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 12 09:55:18 2023

                   _SSPSTATbits 000FC7                              l51 7F4A                              l45 7F96  
                            l39 7F70                              l48 7F42                              l57 7F56  
                            u10 7F88                              u11 7F84                              u20 7F96  
                            u21 7F92                              u37 7FBE                              u47 7FEA  
                           l740 7F88                             l742 7F58                             l750 7F4E  
                           l744 7F60                             l736 7F72                             l752 7F52  
                           l760 7F9C                             l738 7F72                             l746 7F3C  
                           l754 7F44                             l770 7FB4                             l762 7FA0  
                           l748 7F40                             l756 7F48                             l780 7FE0  
                           l772 7FCC                             l764 7FA4                             l774 7FD0  
                           l766 7FAA                             l758 7F98                             l776 7FD6  
                           l768 7FB0                             l778 7FDC                             wreg 000FE8  
                          _main 7F98                __end_of_I2C_Init 7F72                __end_of_I2C_Stop 7F4C  
                          start 0000                    ___param_bank 000000                           ?_main 0001  
             __end_of_I2C_Start 7F44                           status 000FD8                 __initialization 7F36  
                  __end_of_main 8000                          ??_main 0003                   __activetblptr 000000  
       ?_I2C_Condiciones_Espera 0001                          _ADCON1 000FC1                          _I2C_Wr 7F4C  
                        _SSPADD 000FC8                          _SSPBUF 000FC9                          isa$std 000001  
__end_of_I2C_Condiciones_Espera 7F98                       ?_I2C_Init 0001                       ?_I2C_Stop 0001  
                    __accesstop 0060         __end_of__initialization 7F36                   ___rparam_used 000001  
                __pcstackCOMRAM 0001                      ??_I2C_Init 0001                      ??_I2C_Stop 0002  
                       ?_I2C_Wr 0001                      I2C_Wr@data 0002                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7                       _I2C_Start 7F3C                         __Hparam 0000  
                       __Lparam 0000                         __pcinit 7F36                         __ramtop 0800  
                       __ptext0 7F98                         __ptext1 7F4C                         __ptext2 7F44  
                       __ptext3 7F3C                         __ptext4 7F72                         __ptext5 7F58  
          end_of_initialization 7F36                      ?_I2C_Start 0001                       _TRISBbits 000F93  
                __end_of_I2C_Wr 7F58             start_initialization 7F36                        ??_I2C_Wr 0002  
                   ??_I2C_Start 0002        ??_I2C_Condiciones_Espera 0001                        _I2C_Init 7F58  
                      _I2C_Stop 7F44                        __Hrparam 0000                        __Lrparam 0000  
                      isa$xinst 000000          _I2C_Condiciones_Espera 7F72                     _SSPCON1bits 000FC6  
                   _SSPCON2bits 000FC5  
