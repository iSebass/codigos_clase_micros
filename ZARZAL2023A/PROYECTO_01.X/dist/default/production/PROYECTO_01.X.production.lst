

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Mar 31 10:59:58 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.40
    42                           ; Generated 17/11/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4550 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  0014F6                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for _strLCD
    82  0014F6  20                 	db	32
    83  0014F7  00                 	db	0
    84  0014F8  00                 	db	0
    85  0014F9  00                 	db	0
    86  0014FA  00                 	db	0
    87  0014FB  00                 	db	0
    88  0014FC  00                 	db	0
    89  0014FD  00                 	db	0
    90  0014FE  00                 	db	0
    91  0014FF  00                 	db	0
    92  001500  00                 	db	0
    93  001501  00                 	db	0
    94  001502  00                 	db	0
    95  001503  00                 	db	0
    96  001504  00                 	db	0
    97  001505  00                 	db	0
    98  001506  00                 	db	0
    99  001507  00                 	db	0
   100  001508  00                 	db	0
   101  001509  00                 	db	0
   102                           
   103                           ;initializer for _menuOp
   104  00150A  0001               	dw	1
   105                           
   106                           ;initializer for _currentMenu
   107  00150C  0001               	dw	1
   108  0000                     _ADRESL	set	4035
   109  0000                     _ADRESH	set	4036
   110  0000                     _ADCON0bits	set	4034
   111  0000                     _ADCON1bits	set	4033
   112  0000                     _TRISD	set	3989
   113  0000                     _PORTD	set	3971
   114  0000                     _PORTBbits	set	3969
   115  0000                     _PORTDbits	set	3971
   116  0000                     _TRISBbits	set	3987
   117  0000                     _ADCON1	set	4033
   118  0000                     _TRISDbits	set	3989
   119  0000                     _ADCON2bits	set	4032
   120                           
   121                           	psect	smallconst
   122  000800                     __psmallconst:
   123                           	callstack 0
   124  000800  00                 	db	0
   125  000801                     STR_2:
   126  000801  31                 	db	49	;'1'
   127  000802  2E                 	db	46
   128  000803  4D                 	db	77	;'M'
   129  000804  4F                 	db	79	;'O'
   130  000805  54                 	db	84	;'T'
   131  000806  4F                 	db	79	;'O'
   132  000807  52                 	db	82	;'R'
   133  000808  20                 	db	32
   134  000809  20                 	db	32
   135  00080A  20                 	db	32
   136  00080B  20                 	db	32
   137  00080C  20                 	db	32
   138  00080D  20                 	db	32
   139  00080E  20                 	db	32
   140  00080F  20                 	db	32
   141  000810  20                 	db	32
   142  000811  20                 	db	32
   143  000812  20                 	db	32
   144  000813  20                 	db	32
   145  000814  20                 	db	32
   146  000815  00                 	db	0
   147  000816                     STR_3:
   148  000816  32                 	db	50	;'2'
   149  000817  2E                 	db	46
   150  000818  53                 	db	83	;'S'
   151  000819  45                 	db	69	;'E'
   152  00081A  4E                 	db	78	;'N'
   153  00081B  53                 	db	83	;'S'
   154  00081C  4F                 	db	79	;'O'
   155  00081D  52                 	db	82	;'R'
   156  00081E  45                 	db	69	;'E'
   157  00081F  53                 	db	83	;'S'
   158  000820  20                 	db	32
   159  000821  20                 	db	32
   160  000822  20                 	db	32
   161  000823  20                 	db	32
   162  000824  20                 	db	32
   163  000825  20                 	db	32
   164  000826  20                 	db	32
   165  000827  20                 	db	32
   166  000828  20                 	db	32
   167  000829  20                 	db	32
   168  00082A  00                 	db	0
   169  00082B                     STR_9:
   170  00082B  20                 	db	32
   171  00082C  20                 	db	32
   172  00082D  4D                 	db	77	;'M'
   173  00082E  45                 	db	69	;'E'
   174  00082F  4E                 	db	78	;'N'
   175  000830  55                 	db	85	;'U'
   176  000831  20                 	db	32
   177  000832  4D                 	db	77	;'M'
   178  000833  4F                 	db	79	;'O'
   179  000834  54                 	db	84	;'T'
   180  000835  4F                 	db	79	;'O'
   181  000836  52                 	db	82	;'R'
   182  000837  20                 	db	32
   183  000838  31                 	db	49	;'1'
   184  000839  20                 	db	32
   185  00083A  20                 	db	32
   186  00083B  20                 	db	32
   187  00083C  20                 	db	32
   188  00083D  20                 	db	32
   189  00083E  20                 	db	32
   190  00083F  00                 	db	0
   191  000840                     STR_13:
   192  000840  20                 	db	32
   193  000841  20                 	db	32
   194  000842  4D                 	db	77	;'M'
   195  000843  45                 	db	69	;'E'
   196  000844  4E                 	db	78	;'N'
   197  000845  55                 	db	85	;'U'
   198  000846  20                 	db	32
   199  000847  4D                 	db	77	;'M'
   200  000848  4F                 	db	79	;'O'
   201  000849  54                 	db	84	;'T'
   202  00084A  4F                 	db	79	;'O'
   203  00084B  52                 	db	82	;'R'
   204  00084C  20                 	db	32
   205  00084D  32                 	db	50	;'2'
   206  00084E  20                 	db	32
   207  00084F  20                 	db	32
   208  000850  20                 	db	32
   209  000851  20                 	db	32
   210  000852  20                 	db	32
   211  000853  20                 	db	32
   212  000854  00                 	db	0
   213  000855                     STR_6:
   214  000855  31                 	db	49	;'1'
   215  000856  2E                 	db	46
   216  000857  20                 	db	32
   217  000858  4D                 	db	77	;'M'
   218  000859  31                 	db	49	;'1'
   219  00085A  20                 	db	32
   220  00085B  20                 	db	32
   221  00085C  20                 	db	32
   222  00085D  20                 	db	32
   223  00085E  20                 	db	32
   224  00085F  32                 	db	50	;'2'
   225  000860  2E                 	db	46
   226  000861  20                 	db	32
   227  000862  4D                 	db	77	;'M'
   228  000863  32                 	db	50	;'2'
   229  000864  20                 	db	32
   230  000865  20                 	db	32
   231  000866  20                 	db	32
   232  000867  20                 	db	32
   233  000868  20                 	db	32
   234  000869  00                 	db	0
   235  00086A                     STR_5:
   236  00086A  20                 	db	32
   237  00086B  20                 	db	32
   238  00086C  4D                 	db	77	;'M'
   239  00086D  45                 	db	69	;'E'
   240  00086E  4E                 	db	78	;'N'
   241  00086F  55                 	db	85	;'U'
   242  000870  20                 	db	32
   243  000871  53                 	db	83	;'S'
   244  000872  45                 	db	69	;'E'
   245  000873  4C                 	db	76	;'L'
   246  000874  20                 	db	32
   247  000875  4D                 	db	77	;'M'
   248  000876  4F                 	db	79	;'O'
   249  000877  54                 	db	84	;'T'
   250  000878  4F                 	db	79	;'O'
   251  000879  52                 	db	82	;'R'
   252  00087A  20                 	db	32
   253  00087B  20                 	db	32
   254  00087C  20                 	db	32
   255  00087D  20                 	db	32
   256  00087E  00                 	db	0
   257  00087F                     STR_1:
   258  00087F  20                 	db	32
   259  000880  20                 	db	32
   260  000881  20                 	db	32
   261  000882  4D                 	db	77	;'M'
   262  000883  45                 	db	69	;'E'
   263  000884  4E                 	db	78	;'N'
   264  000885  55                 	db	85	;'U'
   265  000886  20                 	db	32
   266  000887  50                 	db	80	;'P'
   267  000888  52                 	db	82	;'R'
   268  000889  49                 	db	73	;'I'
   269  00088A  4E                 	db	78	;'N'
   270  00088B  43                 	db	67	;'C'
   271  00088C  49                 	db	73	;'I'
   272  00088D  50                 	db	80	;'P'
   273  00088E  41                 	db	65	;'A'
   274  00088F  4C                 	db	76	;'L'
   275  000890  20                 	db	32
   276  000891  20                 	db	32
   277  000892  20                 	db	32
   278  000893  00                 	db	0
   279  000894                     STR_11:
   280  000894  33                 	db	51	;'3'
   281  000895  2E                 	db	46
   282  000896  50                 	db	80	;'P'
   283  000897  61                 	db	97	;'a'
   284  000898  72                 	db	114	;'r'
   285  000899  61                 	db	97	;'a'
   286  00089A  72                 	db	114	;'r'
   287  00089B  20                 	db	32
   288  00089C  20                 	db	32
   289  00089D  20                 	db	32
   290  00089E  20                 	db	32
   291  00089F  34                 	db	52	;'4'
   292  0008A0  2E                 	db	46
   293  0008A1  20                 	db	32
   294  0008A2  42                 	db	66	;'B'
   295  0008A3  41                 	db	65	;'A'
   296  0008A4  43                 	db	67	;'C'
   297  0008A5  4B                 	db	75	;'K'
   298  0008A6  20                 	db	32
   299  0008A7  20                 	db	32
   300  0008A8  00                 	db	0
   301  0008A9                     STR_10:
   302  0008A9  31                 	db	49	;'1'
   303  0008AA  2E                 	db	46
   304  0008AB  47                 	db	71	;'G'
   305  0008AC  69                 	db	105	;'i'
   306  0008AD  72                 	db	114	;'r'
   307  0008AE  61                 	db	97	;'a'
   308  0008AF  72                 	db	114	;'r'
   309  0008B0  44                 	db	68	;'D'
   310  0008B1  20                 	db	32
   311  0008B2  20                 	db	32
   312  0008B3  20                 	db	32
   313  0008B4  32                 	db	50	;'2'
   314  0008B5  2E                 	db	46
   315  0008B6  47                 	db	71	;'G'
   316  0008B7  69                 	db	105	;'i'
   317  0008B8  72                 	db	114	;'r'
   318  0008B9  61                 	db	97	;'a'
   319  0008BA  72                 	db	114	;'r'
   320  0008BB  49                 	db	73	;'I'
   321  0008BC  20                 	db	32
   322  0008BD  00                 	db	0
   323  0008BE                     STR_7:
   324  0008BE  33                 	db	51	;'3'
   325  0008BF  2E                 	db	46
   326  0008C0  20                 	db	32
   327  0008C1  42                 	db	66	;'B'
   328  0008C2  41                 	db	65	;'A'
   329  0008C3  43                 	db	67	;'C'
   330  0008C4  4B                 	db	75	;'K'
   331  0008C5  20                 	db	32
   332  0008C6  20                 	db	32
   333  0008C7  20                 	db	32
   334  0008C8  20                 	db	32
   335  0008C9  20                 	db	32
   336  0008CA  20                 	db	32
   337  0008CB  20                 	db	32
   338  0008CC  20                 	db	32
   339  0008CD  20                 	db	32
   340  0008CE  00                 	db	0
   341  0008CF                     STR_4:
   342  0008CF  4F                 	db	79	;'O'
   343  0008D0  50                 	db	80	;'P'
   344  0008D1  3A                 	db	58	;':'
   345  0008D2  00                 	db	0
   346  0008D3  00                 	db	0	; dummy byte at the end
   347  0000                     
   348                           ; #config settings
   349                           
   350                           	psect	cinit
   351  00149C                     __pcinit:
   352                           	callstack 0
   353  00149C                     start_initialization:
   354                           	callstack 0
   355  00149C                     __initialization:
   356                           	callstack 0
   357                           
   358                           ; Initialize objects allocated to COMRAM (24 bytes)
   359                           ; load TBLPTR registers with __pidataCOMRAM
   360  00149C  0EF6               	movlw	low __pidataCOMRAM
   361  00149E  6EF6               	movwf	tblptrl,c
   362  0014A0  0E14               	movlw	high __pidataCOMRAM
   363  0014A2  6EF7               	movwf	tblptrh,c
   364  0014A4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   365  0014A6  6EF8               	movwf	tblptru,c
   366  0014A8  EE00  F001         	lfsr	0,__pdataCOMRAM
   367  0014AC  EE10 F018          	lfsr	1,24
   368  0014B0                     copy_data0:
   369  0014B0  0009               	tblrd		*+
   370  0014B2  CFF5 FFEE          	movff	tablat,postinc0
   371  0014B6  50E5               	movf	postdec1,w,c
   372  0014B8  50E1               	movf	fsr1l,w,c
   373  0014BA  E1FA               	bnz	copy_data0
   374                           
   375                           ; Clear objects allocated to COMRAM (13 bytes)
   376  0014BC  EE00  F02B         	lfsr	0,__pbssCOMRAM
   377  0014C0  0E0D               	movlw	13
   378  0014C2                     clear_0:
   379  0014C2  6AEE               	clrf	postinc0,c
   380  0014C4  06E8               	decf	wreg,f,c
   381  0014C6  E1FD               	bnz	clear_0
   382  0014C8                     end_of_initialization:
   383                           	callstack 0
   384  0014C8                     __end_of__initialization:
   385                           	callstack 0
   386  0014C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   387  0014CA  6EF8               	movwf	tblptru,c
   388  0014CC  0100               	movlb	0
   389  0014CE  EF5C  F009         	goto	_main	;jump to C main() function
   390                           
   391                           	psect	bssCOMRAM
   392  00002B                     __pbssCOMRAM:
   393                           	callstack 0
   394  00002B                     _lm35:
   395                           	callstack 0
   396  00002B                     	ds	4
   397  00002F                     _mcp:
   398                           	callstack 0
   399  00002F                     	ds	4
   400  000033                     _pot:
   401                           	callstack 0
   402  000033                     	ds	4
   403  000037                     __lcd_params:
   404                           	callstack 0
   405  000037                     	ds	1
   406                           
   407                           	psect	dataCOMRAM
   408  000001                     __pdataCOMRAM:
   409                           	callstack 0
   410  000001                     _strLCD:
   411                           	callstack 0
   412  000001                     	ds	20
   413  000015                     _menuOp:
   414                           	callstack 0
   415  000015                     	ds	2
   416  000017                     _currentMenu:
   417                           	callstack 0
   418  000017                     	ds	2
   419                           
   420                           	psect	cstackCOMRAM
   421  000019                     __pcstackCOMRAM:
   422                           	callstack 0
   423  000019                     __write_nibble@nibble:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x0
   427  000019                     	ds	1
   428  00001A                     __send_byte@mode:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x1
   432  00001A                     	ds	1
   433  00001B                     ??__send_byte:
   434                           
   435                           ; 1 bytes @ 0x2
   436  00001B                     	ds	2
   437  00001D                     __send_byte@value:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x4
   441  00001D                     	ds	1
   442  00001E                     lcd_write@letra:
   443                           	callstack 0
   444  00001E                     lcd_command@cmd:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0x5
   448  00001E                     	ds	1
   449  00001F                     ??_lcd_init:
   450  00001F                     ??_lcd_clear:
   451  00001F                     lcd_set_cursor@col:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x6
   455  00001F                     	ds	1
   456  000020                     ??_lcd_set_cursor:
   457                           
   458                           ; 1 bytes @ 0x7
   459  000020                     	ds	2
   460  000022                     lcd_set_cursor@row:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0x9
   464  000022                     	ds	1
   465  000023                     lcd_out@col:
   466                           	callstack 0
   467  000023                     lcd_char@col:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0xA
   471  000023                     	ds	1
   472  000024                     lcd_char@letra:
   473                           	callstack 0
   474  000024                     lcd_out@str:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xB
   478  000024                     	ds	1
   479  000025                     lcd_char@row:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0xC
   483  000025                     	ds	1
   484  000026                     lcd_out@row:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0xD
   488  000026                     	ds	1
   489  000027                     ??_menuPPAL:
   490  000027                     ??_menuSelM:
   491  000027                     ??_menuM1:
   492  000027                     ??_menuM2:
   493                           
   494                           ; 1 bytes @ 0xE
   495  000027                     	ds	2
   496  000029                     ??_main:
   497                           
   498                           ; 1 bytes @ 0x10
   499  000029                     	ds	2
   500                           
   501 ;;
   502 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   503 ;;
   504 ;; *************** function _main *****************
   505 ;; Defined at:
   506 ;;		line 20 in file "main.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   520 ;;      Params:         0       0       0       0       0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0       0       0       0       0
   522 ;;      Temps:          2       0       0       0       0       0       0       0       0
   523 ;;      Totals:         2       0       0       0       0       0       0       0       0
   524 ;;Total ram usage:        2 bytes
   525 ;; Hardware stack levels required when called: 6
   526 ;; This function calls:
   527 ;;		_SystemInit
   528 ;;		_menuM1
   529 ;;		_menuM2
   530 ;;		_menuPPAL
   531 ;;		_menuSelM
   532 ;;		_menuSensores
   533 ;; This function is called by:
   534 ;;		Startup code after reset
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text0
   539  0012B8                     __ptext0:
   540                           	callstack 0
   541  0012B8                     _main:
   542                           	callstack 25
   543  0012B8                     
   544                           ;main.c: 21:     SystemInit();
   545  0012B8  EC69  F00A         	call	_SystemInit	;wreg free
   546  0012BC  EF72  F009         	goto	l1933
   547  0012C0                     l1921:
   548  0012C0  EC34  F008         	call	_menuPPAL	;wreg free
   549  0012C4  EF72  F009         	goto	l1933
   550  0012C8                     l1923:
   551  0012C8  EC18  F007         	call	_menuSelM	;wreg free
   552  0012CC  EF72  F009         	goto	l1933
   553  0012D0                     l1925:
   554  0012D0  ECC1  F005         	call	_menuM1	;wreg free
   555  0012D4  EF72  F009         	goto	l1933
   556  0012D8                     l1927:
   557  0012D8  EC6A  F004         	call	_menuM2	;wreg free
   558  0012DC  EF72  F009         	goto	l1933
   559  0012E0                     l1929:
   560  0012E0  ECDB  F00A         	call	_menuSensores	;wreg free
   561  0012E4                     l1933:
   562  0012E4  C017  F029         	movff	_currentMenu,??_main
   563  0012E8  C018  F02A         	movff	_currentMenu+1,??_main+1
   564                           
   565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   566                           ; Switch size 1, requested type "simple"
   567                           ; Number of cases is 1, Range of values is 0 to 0
   568                           ; switch strategies available:
   569                           ; Name         Instructions Cycles
   570                           ; simple_byte            4     3 (average)
   571                           ;	Chosen strategy is simple_byte
   572  0012EC  502A               	movf	(??_main+1)^0,w,c
   573  0012EE  0A00               	xorlw	0	; case 0
   574  0012F0  B4D8               	btfsc	status,2,c
   575  0012F2  EF7D  F009         	goto	l2045
   576  0012F6  EF72  F009         	goto	l1933
   577  0012FA                     l2045:
   578                           
   579                           ; Switch size 1, requested type "simple"
   580                           ; Number of cases is 5, Range of values is 1 to 5
   581                           ; switch strategies available:
   582                           ; Name         Instructions Cycles
   583                           ; simple_byte           16     9 (average)
   584                           ;	Chosen strategy is simple_byte
   585  0012FA  5029               	movf	??_main^0,w,c
   586  0012FC  0A01               	xorlw	1	; case 1
   587  0012FE  B4D8               	btfsc	status,2,c
   588  001300  EF60  F009         	goto	l1921
   589  001304  0A03               	xorlw	3	; case 2
   590  001306  B4D8               	btfsc	status,2,c
   591  001308  EF64  F009         	goto	l1923
   592  00130C  0A01               	xorlw	1	; case 3
   593  00130E  B4D8               	btfsc	status,2,c
   594  001310  EF68  F009         	goto	l1925
   595  001314  0A07               	xorlw	7	; case 4
   596  001316  B4D8               	btfsc	status,2,c
   597  001318  EF6C  F009         	goto	l1927
   598  00131C  0A01               	xorlw	1	; case 5
   599  00131E  B4D8               	btfsc	status,2,c
   600  001320  EF70  F009         	goto	l1929
   601  001324  EF72  F009         	goto	l1933
   602  001328  EF00  F000         	goto	start
   603  00132C                     __end_of_main:
   604                           	callstack 0
   605                           
   606 ;; *************** function _menuSensores *****************
   607 ;; Defined at:
   608 ;;		line 366 in file "config.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		None
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   622 ;;      Params:         0       0       0       0       0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text1
   636  0015B6                     __ptext1:
   637                           	callstack 0
   638  0015B6                     _menuSensores:
   639                           	callstack 30
   640  0015B6  0012               	return		;funcret
   641  0015B8                     __end_of_menuSensores:
   642                           	callstack 0
   643                           
   644 ;; *************** function _menuSelM *****************
   645 ;; Defined at:
   646 ;;		line 194 in file "config.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   660 ;;      Params:         0       0       0       0       0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0       0       0       0       0
   662 ;;      Temps:          2       0       0       0       0       0       0       0       0
   663 ;;      Totals:         2       0       0       0       0       0       0       0       0
   664 ;;Total ram usage:        2 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; Hardware stack levels required when called: 5
   667 ;; This function calls:
   668 ;;		_lcd_char
   669 ;;		_lcd_clear
   670 ;;		_lcd_out
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text2
   677  000E30                     __ptext2:
   678                           	callstack 0
   679  000E30                     _menuSelM:
   680                           	callstack 25
   681  000E30                     
   682                           ;config.c: 195:     lcd_out(1,1,"  MENU SEL MOTOR    ");
   683  000E30  0E01               	movlw	1
   684  000E32  6E23               	movwf	lcd_out@col^0,c
   685  000E34  0E6A               	movlw	low STR_5
   686  000E36  6E24               	movwf	lcd_out@str^0,c
   687  000E38  0E08               	movlw	high STR_5
   688  000E3A  6E25               	movwf	(lcd_out@str+1)^0,c
   689  000E3C  0E01               	movlw	1
   690  000E3E  EC2D  F00A         	call	_lcd_out
   691                           
   692                           ;config.c: 196:     lcd_out(2,1,"1. M1     2. M2     ");
   693  000E42  0E01               	movlw	1
   694  000E44  6E23               	movwf	lcd_out@col^0,c
   695  000E46  0E55               	movlw	low STR_6
   696  000E48  6E24               	movwf	lcd_out@str^0,c
   697  000E4A  0E08               	movlw	high STR_6
   698  000E4C  6E25               	movwf	(lcd_out@str+1)^0,c
   699  000E4E  0E02               	movlw	2
   700  000E50  EC2D  F00A         	call	_lcd_out
   701                           
   702                           ;config.c: 197:     lcd_out(3,1,"3. BACK         ");
   703  000E54  0E01               	movlw	1
   704  000E56  6E23               	movwf	lcd_out@col^0,c
   705  000E58  0EBE               	movlw	low STR_7
   706  000E5A  6E24               	movwf	lcd_out@str^0,c
   707  000E5C  0E08               	movlw	high STR_7
   708  000E5E  6E25               	movwf	(lcd_out@str+1)^0,c
   709  000E60  0E03               	movlw	3
   710  000E62  EC2D  F00A         	call	_lcd_out
   711                           
   712                           ;config.c: 198:     lcd_out(4,1,"OP:");
   713  000E66  0E01               	movlw	1
   714  000E68  6E23               	movwf	lcd_out@col^0,c
   715  000E6A  0ECF               	movlw	low STR_4
   716  000E6C  6E24               	movwf	lcd_out@str^0,c
   717  000E6E  0E08               	movlw	high STR_4
   718  000E70  6E25               	movwf	(lcd_out@str+1)^0,c
   719  000E72  0E04               	movlw	4
   720  000E74  EC2D  F00A         	call	_lcd_out
   721                           
   722                           ;config.c: 200:     switch(menuOp){
   723  000E78  EF83  F007         	goto	l1741
   724  000E7C                     l1733:
   725  000E7C  0E06               	movlw	6
   726  000E7E  6E23               	movwf	lcd_char@col^0,c
   727  000E80  0E3C               	movlw	60
   728  000E82  6E24               	movwf	lcd_char@letra^0,c
   729  000E84  0E02               	movlw	2
   730  000E86  EC9D  F00A         	call	_lcd_char
   731                           
   732                           ;config.c: 202:                 lcd_char(2,16,' ');
   733  000E8A  0E10               	movlw	16
   734  000E8C  6E23               	movwf	lcd_char@col^0,c
   735  000E8E  0E20               	movlw	32
   736  000E90  6E24               	movwf	lcd_char@letra^0,c
   737  000E92  0E02               	movlw	2
   738  000E94  EC9D  F00A         	call	_lcd_char
   739                           
   740                           ;config.c: 203:                 lcd_char(3,8,' ');
   741  000E98  0E08               	movlw	8
   742  000E9A  6E23               	movwf	lcd_char@col^0,c
   743  000E9C  0E20               	movlw	32
   744  000E9E  6E24               	movwf	lcd_char@letra^0,c
   745  000EA0  0E03               	movlw	3
   746  000EA2  EC9D  F00A         	call	_lcd_char
   747                           
   748                           ;config.c: 204:                 break;
   749  000EA6  EF9D  F007         	goto	l129
   750  000EAA                     l1735:
   751  000EAA  0E06               	movlw	6
   752  000EAC  6E23               	movwf	lcd_char@col^0,c
   753  000EAE  0E20               	movlw	32
   754  000EB0  6E24               	movwf	lcd_char@letra^0,c
   755  000EB2  0E02               	movlw	2
   756  000EB4  EC9D  F00A         	call	_lcd_char
   757                           
   758                           ;config.c: 206:                 lcd_char(2,16,'<');
   759  000EB8  0E10               	movlw	16
   760  000EBA  6E23               	movwf	lcd_char@col^0,c
   761  000EBC  0E3C               	movlw	60
   762  000EBE  6E24               	movwf	lcd_char@letra^0,c
   763  000EC0  0E02               	movlw	2
   764  000EC2  EC9D  F00A         	call	_lcd_char
   765                           
   766                           ;config.c: 207:                 lcd_char(3,8,' ');
   767  000EC6  0E08               	movlw	8
   768  000EC8  6E23               	movwf	lcd_char@col^0,c
   769  000ECA  0E20               	movlw	32
   770  000ECC  6E24               	movwf	lcd_char@letra^0,c
   771  000ECE  0E03               	movlw	3
   772  000ED0  EC9D  F00A         	call	_lcd_char
   773                           
   774                           ;config.c: 208:                 break;
   775  000ED4  EF9D  F007         	goto	l129
   776  000ED8                     l1737:
   777  000ED8  0E06               	movlw	6
   778  000EDA  6E23               	movwf	lcd_char@col^0,c
   779  000EDC  0E20               	movlw	32
   780  000EDE  6E24               	movwf	lcd_char@letra^0,c
   781  000EE0  0E02               	movlw	2
   782  000EE2  EC9D  F00A         	call	_lcd_char
   783                           
   784                           ;config.c: 210:                 lcd_char(2,16,' ');
   785  000EE6  0E10               	movlw	16
   786  000EE8  6E23               	movwf	lcd_char@col^0,c
   787  000EEA  0E20               	movlw	32
   788  000EEC  6E24               	movwf	lcd_char@letra^0,c
   789  000EEE  0E02               	movlw	2
   790  000EF0  EC9D  F00A         	call	_lcd_char
   791                           
   792                           ;config.c: 211:                 lcd_char(3,8,'<');
   793  000EF4  0E08               	movlw	8
   794  000EF6  6E23               	movwf	lcd_char@col^0,c
   795  000EF8  0E3C               	movlw	60
   796  000EFA  6E24               	movwf	lcd_char@letra^0,c
   797  000EFC  0E03               	movlw	3
   798  000EFE  EC9D  F00A         	call	_lcd_char
   799                           
   800                           ;config.c: 212:                 break;
   801  000F02  EF9D  F007         	goto	l129
   802  000F06                     l1741:
   803  000F06  C015  F027         	movff	_menuOp,??_menuSelM
   804  000F0A  C016  F028         	movff	_menuOp+1,??_menuSelM+1
   805                           
   806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   807                           ; Switch size 1, requested type "simple"
   808                           ; Number of cases is 1, Range of values is 0 to 0
   809                           ; switch strategies available:
   810                           ; Name         Instructions Cycles
   811                           ; simple_byte            4     3 (average)
   812                           ;	Chosen strategy is simple_byte
   813  000F0E  5028               	movf	(??_menuSelM+1)^0,w,c
   814  000F10  0A00               	xorlw	0	; case 0
   815  000F12  B4D8               	btfsc	status,2,c
   816  000F14  EF8E  F007         	goto	l2047
   817  000F18  EF9D  F007         	goto	l129
   818  000F1C                     l2047:
   819                           
   820                           ; Switch size 1, requested type "simple"
   821                           ; Number of cases is 3, Range of values is 1 to 3
   822                           ; switch strategies available:
   823                           ; Name         Instructions Cycles
   824                           ; simple_byte           10     6 (average)
   825                           ;	Chosen strategy is simple_byte
   826  000F1C  5027               	movf	??_menuSelM^0,w,c
   827  000F1E  0A01               	xorlw	1	; case 1
   828  000F20  B4D8               	btfsc	status,2,c
   829  000F22  EF3E  F007         	goto	l1733
   830  000F26  0A03               	xorlw	3	; case 2
   831  000F28  B4D8               	btfsc	status,2,c
   832  000F2A  EF55  F007         	goto	l1735
   833  000F2E  0A01               	xorlw	1	; case 3
   834  000F30  B4D8               	btfsc	status,2,c
   835  000F32  EF6C  F007         	goto	l1737
   836  000F36  EF9D  F007         	goto	l129
   837  000F3A                     l129:
   838                           
   839                           ;config.c: 215:     if(PORTBbits.RB0== 0){
   840  000F3A  B081               	btfsc	129,0,c	;volatile
   841  000F3C  EFA2  F007         	goto	u501
   842  000F40  EFA4  F007         	goto	u500
   843  000F44                     u501:
   844  000F44  EFC7  F007         	goto	l1753
   845  000F48                     u500:
   846  000F48                     l133:
   847  000F48  A081               	btfss	129,0,c	;volatile
   848  000F4A  EFA9  F007         	goto	u511
   849  000F4E  EFAB  F007         	goto	u510
   850  000F52                     u511:
   851  000F52  EFA4  F007         	goto	l133
   852  000F56                     u510:
   853  000F56                     
   854                           ;config.c: 217:         menuOp += 1;
   855  000F56  4A15               	infsnz	_menuOp^0,f,c
   856  000F58  2A16               	incf	(_menuOp+1)^0,f,c
   857  000F5A                     
   858                           ;config.c: 218:         if(menuOp>3){
   859  000F5A  BE16               	btfsc	(_menuOp+1)^0,7,c
   860  000F5C  EFB9  F007         	goto	u521
   861  000F60  5016               	movf	(_menuOp+1)^0,w,c
   862  000F62  E109               	bnz	u520
   863  000F64  0E04               	movlw	4
   864  000F66  5C15               	subwf	_menuOp^0,w,c
   865  000F68  A0D8               	btfss	status,0,c
   866  000F6A  EFB9  F007         	goto	u521
   867  000F6E  EFBB  F007         	goto	u520
   868  000F72                     u521:
   869  000F72  EFBF  F007         	goto	l1751
   870  000F76                     u520:
   871  000F76                     
   872                           ;config.c: 219:             menuOp=1;
   873  000F76  0E00               	movlw	0
   874  000F78  6E16               	movwf	(_menuOp+1)^0,c
   875  000F7A  0E01               	movlw	1
   876  000F7C  6E15               	movwf	_menuOp^0,c
   877  000F7E                     l1751:
   878                           
   879                           ;config.c: 221:         lcd_char(4,5,menuOp+48);
   880  000F7E  0E05               	movlw	5
   881  000F80  6E23               	movwf	lcd_char@col^0,c
   882  000F82  5015               	movf	_menuOp^0,w,c
   883  000F84  0F30               	addlw	48
   884  000F86  6E24               	movwf	lcd_char@letra^0,c
   885  000F88  0E04               	movlw	4
   886  000F8A  EC9D  F00A         	call	_lcd_char
   887  000F8E                     l1753:
   888                           
   889                           ;config.c: 223:     if(PORTBbits.RB1== 0){
   890  000F8E  B281               	btfsc	129,1,c	;volatile
   891  000F90  EFCC  F007         	goto	u531
   892  000F94  EFCE  F007         	goto	u530
   893  000F98                     u531:
   894  000F98  EFF1  F007         	goto	l1765
   895  000F9C                     u530:
   896  000F9C                     l138:
   897  000F9C  A281               	btfss	129,1,c	;volatile
   898  000F9E  EFD3  F007         	goto	u541
   899  000FA2  EFD5  F007         	goto	u540
   900  000FA6                     u541:
   901  000FA6  EFCE  F007         	goto	l138
   902  000FAA                     u540:
   903  000FAA                     
   904                           ;config.c: 225:         menuOp -= 1;
   905  000FAA  0615               	decf	_menuOp^0,f,c
   906  000FAC  A0D8               	btfss	status,0,c
   907  000FAE  0616               	decf	(_menuOp+1)^0,f,c
   908  000FB0                     
   909                           ;config.c: 226:         if(menuOp<1){
   910  000FB0  BE16               	btfsc	(_menuOp+1)^0,7,c
   911  000FB2  EFE5  F007         	goto	u550
   912  000FB6  5016               	movf	(_menuOp+1)^0,w,c
   913  000FB8  E106               	bnz	u551
   914  000FBA  0415               	decf	_menuOp^0,w,c
   915  000FBC  B0D8               	btfsc	status,0,c
   916  000FBE  EFE3  F007         	goto	u551
   917  000FC2  EFE5  F007         	goto	u550
   918  000FC6                     u551:
   919  000FC6  EFE9  F007         	goto	l1763
   920  000FCA                     u550:
   921  000FCA                     
   922                           ;config.c: 227:             menuOp=3;
   923  000FCA  0E00               	movlw	0
   924  000FCC  6E16               	movwf	(_menuOp+1)^0,c
   925  000FCE  0E03               	movlw	3
   926  000FD0  6E15               	movwf	_menuOp^0,c
   927  000FD2                     l1763:
   928                           
   929                           ;config.c: 229:         lcd_char(4,5,menuOp+48);
   930  000FD2  0E05               	movlw	5
   931  000FD4  6E23               	movwf	lcd_char@col^0,c
   932  000FD6  5015               	movf	_menuOp^0,w,c
   933  000FD8  0F30               	addlw	48
   934  000FDA  6E24               	movwf	lcd_char@letra^0,c
   935  000FDC  0E04               	movlw	4
   936  000FDE  EC9D  F00A         	call	_lcd_char
   937  000FE2                     l1765:
   938                           
   939                           ;config.c: 231:     if(PORTBbits.RB2 == 0){
   940  000FE2  B481               	btfsc	129,2,c	;volatile
   941  000FE4  EFF6  F007         	goto	u561
   942  000FE8  EFF8  F007         	goto	u560
   943  000FEC                     u561:
   944  000FEC  EF33  F008         	goto	l151
   945  000FF0                     u560:
   946  000FF0                     l143:
   947  000FF0  A481               	btfss	129,2,c	;volatile
   948  000FF2  EFFD  F007         	goto	u571
   949  000FF6  EFFF  F007         	goto	u570
   950  000FFA                     u571:
   951  000FFA  EFF8  F007         	goto	l143
   952  000FFE                     u570:
   953  000FFE  EF13  F008         	goto	l1777
   954  001002                     l1769:
   955  001002  0E00               	movlw	0
   956  001004  6E18               	movwf	(_currentMenu+1)^0,c
   957  001006  0E03               	movlw	3
   958  001008  6E17               	movwf	_currentMenu^0,c
   959  00100A  EF2D  F008         	goto	l1779
   960  00100E                     l1771:
   961  00100E  0E00               	movlw	0
   962  001010  6E18               	movwf	(_currentMenu+1)^0,c
   963  001012  0E04               	movlw	4
   964  001014  6E17               	movwf	_currentMenu^0,c
   965  001016  EF2D  F008         	goto	l1779
   966  00101A                     l1773:
   967  00101A  0E00               	movlw	0
   968  00101C  6E18               	movwf	(_currentMenu+1)^0,c
   969  00101E  0E01               	movlw	1
   970  001020  6E17               	movwf	_currentMenu^0,c
   971  001022  EF2D  F008         	goto	l1779
   972  001026                     l1777:
   973  001026  C015  F027         	movff	_menuOp,??_menuSelM
   974  00102A  C016  F028         	movff	_menuOp+1,??_menuSelM+1
   975                           
   976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   977                           ; Switch size 1, requested type "simple"
   978                           ; Number of cases is 1, Range of values is 0 to 0
   979                           ; switch strategies available:
   980                           ; Name         Instructions Cycles
   981                           ; simple_byte            4     3 (average)
   982                           ;	Chosen strategy is simple_byte
   983  00102E  5028               	movf	(??_menuSelM+1)^0,w,c
   984  001030  0A00               	xorlw	0	; case 0
   985  001032  B4D8               	btfsc	status,2,c
   986  001034  EF1E  F008         	goto	l2049
   987  001038  EF2D  F008         	goto	l1779
   988  00103C                     l2049:
   989                           
   990                           ; Switch size 1, requested type "simple"
   991                           ; Number of cases is 3, Range of values is 1 to 3
   992                           ; switch strategies available:
   993                           ; Name         Instructions Cycles
   994                           ; simple_byte           10     6 (average)
   995                           ;	Chosen strategy is simple_byte
   996  00103C  5027               	movf	??_menuSelM^0,w,c
   997  00103E  0A01               	xorlw	1	; case 1
   998  001040  B4D8               	btfsc	status,2,c
   999  001042  EF01  F008         	goto	l1769
  1000  001046  0A03               	xorlw	3	; case 2
  1001  001048  B4D8               	btfsc	status,2,c
  1002  00104A  EF07  F008         	goto	l1771
  1003  00104E  0A01               	xorlw	1	; case 3
  1004  001050  B4D8               	btfsc	status,2,c
  1005  001052  EF0D  F008         	goto	l1773
  1006  001056  EF2D  F008         	goto	l1779
  1007  00105A                     l1779:
  1008                           
  1009                           ;config.c: 239:         lcd_clear();
  1010  00105A  EC87  F00A         	call	_lcd_clear	;wreg free
  1011  00105E                     
  1012                           ;config.c: 240:         menuOp=1;
  1013  00105E  0E00               	movlw	0
  1014  001060  6E16               	movwf	(_menuOp+1)^0,c
  1015  001062  0E01               	movlw	1
  1016  001064  6E15               	movwf	_menuOp^0,c
  1017  001066                     l151:
  1018  001066  0012               	return		;funcret
  1019  001068                     __end_of_menuSelM:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _menuPPAL *****************
  1023 ;; Defined at:
  1024 ;;		line 151 in file "config.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1038 ;;      Params:         0       0       0       0       0       0       0       0       0
  1039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1040 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1041 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1042 ;;Total ram usage:        2 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; Hardware stack levels required when called: 5
  1045 ;; This function calls:
  1046 ;;		_lcd_char
  1047 ;;		_lcd_clear
  1048 ;;		_lcd_out
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text3
  1055  001068                     __ptext3:
  1056                           	callstack 0
  1057  001068                     _menuPPAL:
  1058                           	callstack 25
  1059  001068                     
  1060                           ;config.c: 152:     lcd_out(1,1,"   MENU PRINCIPAL   ");
  1061  001068  0E01               	movlw	1
  1062  00106A  6E23               	movwf	lcd_out@col^0,c
  1063  00106C  0E7F               	movlw	low STR_1
  1064  00106E  6E24               	movwf	lcd_out@str^0,c
  1065  001070  0E08               	movlw	high STR_1
  1066  001072  6E25               	movwf	(lcd_out@str+1)^0,c
  1067  001074  0E01               	movlw	1
  1068  001076  EC2D  F00A         	call	_lcd_out
  1069                           
  1070                           ;config.c: 153:     lcd_out(2,1,"1.MOTOR             ");
  1071  00107A  0E01               	movlw	1
  1072  00107C  6E23               	movwf	lcd_out@col^0,c
  1073  00107E  0E01               	movlw	low STR_2
  1074  001080  6E24               	movwf	lcd_out@str^0,c
  1075  001082  0E08               	movlw	high STR_2
  1076  001084  6E25               	movwf	(lcd_out@str+1)^0,c
  1077  001086  0E02               	movlw	2
  1078  001088  EC2D  F00A         	call	_lcd_out
  1079                           
  1080                           ;config.c: 154:     lcd_out(3,1,"2.SENSORES          ");
  1081  00108C  0E01               	movlw	1
  1082  00108E  6E23               	movwf	lcd_out@col^0,c
  1083  001090  0E16               	movlw	low STR_3
  1084  001092  6E24               	movwf	lcd_out@str^0,c
  1085  001094  0E08               	movlw	high STR_3
  1086  001096  6E25               	movwf	(lcd_out@str+1)^0,c
  1087  001098  0E03               	movlw	3
  1088  00109A  EC2D  F00A         	call	_lcd_out
  1089                           
  1090                           ;config.c: 155:     lcd_out(4,1,"OP:");
  1091  00109E  0E01               	movlw	1
  1092  0010A0  6E23               	movwf	lcd_out@col^0,c
  1093  0010A2  0ECF               	movlw	low STR_4
  1094  0010A4  6E24               	movwf	lcd_out@str^0,c
  1095  0010A6  0E08               	movlw	high STR_4
  1096  0010A8  6E25               	movwf	(lcd_out@str+1)^0,c
  1097  0010AA  0E04               	movlw	4
  1098  0010AC  EC2D  F00A         	call	_lcd_out
  1099                           
  1100                           ;config.c: 157:     switch(menuOp){
  1101  0010B0  EF7A  F008         	goto	l1683
  1102  0010B4                     l1677:
  1103  0010B4  0E08               	movlw	8
  1104  0010B6  6E23               	movwf	lcd_char@col^0,c
  1105  0010B8  0E3C               	movlw	60
  1106  0010BA  6E24               	movwf	lcd_char@letra^0,c
  1107  0010BC  0E02               	movlw	2
  1108  0010BE  EC9D  F00A         	call	_lcd_char
  1109                           
  1110                           ;config.c: 159:                 lcd_char(3,11,' ');
  1111  0010C2  0E0B               	movlw	11
  1112  0010C4  6E23               	movwf	lcd_char@col^0,c
  1113  0010C6  0E20               	movlw	32
  1114  0010C8  6E24               	movwf	lcd_char@letra^0,c
  1115  0010CA  0E03               	movlw	3
  1116  0010CC  EC9D  F00A         	call	_lcd_char
  1117                           
  1118                           ;config.c: 160:                 break;
  1119  0010D0  EF90  F008         	goto	l104
  1120  0010D4                     l1679:
  1121  0010D4  0E08               	movlw	8
  1122  0010D6  6E23               	movwf	lcd_char@col^0,c
  1123  0010D8  0E20               	movlw	32
  1124  0010DA  6E24               	movwf	lcd_char@letra^0,c
  1125  0010DC  0E02               	movlw	2
  1126  0010DE  EC9D  F00A         	call	_lcd_char
  1127                           
  1128                           ;config.c: 162:                 lcd_char(3,11,'<');
  1129  0010E2  0E0B               	movlw	11
  1130  0010E4  6E23               	movwf	lcd_char@col^0,c
  1131  0010E6  0E3C               	movlw	60
  1132  0010E8  6E24               	movwf	lcd_char@letra^0,c
  1133  0010EA  0E03               	movlw	3
  1134  0010EC  EC9D  F00A         	call	_lcd_char
  1135                           
  1136                           ;config.c: 163:                 break;
  1137  0010F0  EF90  F008         	goto	l104
  1138  0010F4                     l1683:
  1139  0010F4  C015  F027         	movff	_menuOp,??_menuPPAL
  1140  0010F8  C016  F028         	movff	_menuOp+1,??_menuPPAL+1
  1141                           
  1142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1143                           ; Switch size 1, requested type "simple"
  1144                           ; Number of cases is 1, Range of values is 0 to 0
  1145                           ; switch strategies available:
  1146                           ; Name         Instructions Cycles
  1147                           ; simple_byte            4     3 (average)
  1148                           ;	Chosen strategy is simple_byte
  1149  0010FC  5028               	movf	(??_menuPPAL+1)^0,w,c
  1150  0010FE  0A00               	xorlw	0	; case 0
  1151  001100  B4D8               	btfsc	status,2,c
  1152  001102  EF85  F008         	goto	l2051
  1153  001106  EF90  F008         	goto	l104
  1154  00110A                     l2051:
  1155                           
  1156                           ; Switch size 1, requested type "simple"
  1157                           ; Number of cases is 2, Range of values is 1 to 2
  1158                           ; switch strategies available:
  1159                           ; Name         Instructions Cycles
  1160                           ; simple_byte            7     4 (average)
  1161                           ;	Chosen strategy is simple_byte
  1162  00110A  5027               	movf	??_menuPPAL^0,w,c
  1163  00110C  0A01               	xorlw	1	; case 1
  1164  00110E  B4D8               	btfsc	status,2,c
  1165  001110  EF5A  F008         	goto	l1677
  1166  001114  0A03               	xorlw	3	; case 2
  1167  001116  B4D8               	btfsc	status,2,c
  1168  001118  EF6A  F008         	goto	l1679
  1169  00111C  EF90  F008         	goto	l104
  1170  001120                     l104:
  1171                           
  1172                           ;config.c: 166:     if(PORTBbits.RB0== 0){
  1173  001120  B081               	btfsc	129,0,c	;volatile
  1174  001122  EF95  F008         	goto	u421
  1175  001126  EF97  F008         	goto	u420
  1176  00112A                     u421:
  1177  00112A  EFBA  F008         	goto	l1695
  1178  00112E                     u420:
  1179  00112E                     l107:
  1180  00112E  A081               	btfss	129,0,c	;volatile
  1181  001130  EF9C  F008         	goto	u431
  1182  001134  EF9E  F008         	goto	u430
  1183  001138                     u431:
  1184  001138  EF97  F008         	goto	l107
  1185  00113C                     u430:
  1186  00113C                     
  1187                           ;config.c: 168:         menuOp += 1;
  1188  00113C  4A15               	infsnz	_menuOp^0,f,c
  1189  00113E  2A16               	incf	(_menuOp+1)^0,f,c
  1190  001140                     
  1191                           ;config.c: 169:         if(menuOp>2){
  1192  001140  BE16               	btfsc	(_menuOp+1)^0,7,c
  1193  001142  EFAC  F008         	goto	u441
  1194  001146  5016               	movf	(_menuOp+1)^0,w,c
  1195  001148  E109               	bnz	u440
  1196  00114A  0E03               	movlw	3
  1197  00114C  5C15               	subwf	_menuOp^0,w,c
  1198  00114E  A0D8               	btfss	status,0,c
  1199  001150  EFAC  F008         	goto	u441
  1200  001154  EFAE  F008         	goto	u440
  1201  001158                     u441:
  1202  001158  EFB2  F008         	goto	l1693
  1203  00115C                     u440:
  1204  00115C                     
  1205                           ;config.c: 170:             menuOp=2;
  1206  00115C  0E00               	movlw	0
  1207  00115E  6E16               	movwf	(_menuOp+1)^0,c
  1208  001160  0E02               	movlw	2
  1209  001162  6E15               	movwf	_menuOp^0,c
  1210  001164                     l1693:
  1211                           
  1212                           ;config.c: 172:         lcd_char(4,5,menuOp+48);
  1213  001164  0E05               	movlw	5
  1214  001166  6E23               	movwf	lcd_char@col^0,c
  1215  001168  5015               	movf	_menuOp^0,w,c
  1216  00116A  0F30               	addlw	48
  1217  00116C  6E24               	movwf	lcd_char@letra^0,c
  1218  00116E  0E04               	movlw	4
  1219  001170  EC9D  F00A         	call	_lcd_char
  1220  001174                     l1695:
  1221                           
  1222                           ;config.c: 174:     if(PORTBbits.RB1== 0){
  1223  001174  B281               	btfsc	129,1,c	;volatile
  1224  001176  EFBF  F008         	goto	u451
  1225  00117A  EFC1  F008         	goto	u450
  1226  00117E                     u451:
  1227  00117E  EFE4  F008         	goto	l1707
  1228  001182                     u450:
  1229  001182                     l112:
  1230  001182  A281               	btfss	129,1,c	;volatile
  1231  001184  EFC6  F008         	goto	u461
  1232  001188  EFC8  F008         	goto	u460
  1233  00118C                     u461:
  1234  00118C  EFC1  F008         	goto	l112
  1235  001190                     u460:
  1236  001190                     
  1237                           ;config.c: 176:         menuOp -= 1;
  1238  001190  0615               	decf	_menuOp^0,f,c
  1239  001192  A0D8               	btfss	status,0,c
  1240  001194  0616               	decf	(_menuOp+1)^0,f,c
  1241  001196                     
  1242                           ;config.c: 177:         if(menuOp<1){
  1243  001196  BE16               	btfsc	(_menuOp+1)^0,7,c
  1244  001198  EFD8  F008         	goto	u470
  1245  00119C  5016               	movf	(_menuOp+1)^0,w,c
  1246  00119E  E106               	bnz	u471
  1247  0011A0  0415               	decf	_menuOp^0,w,c
  1248  0011A2  B0D8               	btfsc	status,0,c
  1249  0011A4  EFD6  F008         	goto	u471
  1250  0011A8  EFD8  F008         	goto	u470
  1251  0011AC                     u471:
  1252  0011AC  EFDC  F008         	goto	l1705
  1253  0011B0                     u470:
  1254  0011B0                     
  1255                           ;config.c: 178:             menuOp=1;
  1256  0011B0  0E00               	movlw	0
  1257  0011B2  6E16               	movwf	(_menuOp+1)^0,c
  1258  0011B4  0E01               	movlw	1
  1259  0011B6  6E15               	movwf	_menuOp^0,c
  1260  0011B8                     l1705:
  1261                           
  1262                           ;config.c: 180:         lcd_char(4,5,menuOp+48);
  1263  0011B8  0E05               	movlw	5
  1264  0011BA  6E23               	movwf	lcd_char@col^0,c
  1265  0011BC  5015               	movf	_menuOp^0,w,c
  1266  0011BE  0F30               	addlw	48
  1267  0011C0  6E24               	movwf	lcd_char@letra^0,c
  1268  0011C2  0E04               	movlw	4
  1269  0011C4  EC9D  F00A         	call	_lcd_char
  1270  0011C8                     l1707:
  1271                           
  1272                           ;config.c: 182:     if(PORTBbits.RB2 == 0){
  1273  0011C8  B481               	btfsc	129,2,c	;volatile
  1274  0011CA  EFE9  F008         	goto	u481
  1275  0011CE  EFEB  F008         	goto	u480
  1276  0011D2                     u481:
  1277  0011D2  EF1C  F009         	goto	l124
  1278  0011D6                     u480:
  1279  0011D6                     l117:
  1280  0011D6  A481               	btfss	129,2,c	;volatile
  1281  0011D8  EFF0  F008         	goto	u491
  1282  0011DC  EFF2  F008         	goto	u490
  1283  0011E0                     u491:
  1284  0011E0  EFEB  F008         	goto	l117
  1285  0011E4                     u490:
  1286  0011E4  EF00  F009         	goto	l1717
  1287  0011E8                     l1711:
  1288  0011E8  0E00               	movlw	0
  1289  0011EA  6E18               	movwf	(_currentMenu+1)^0,c
  1290  0011EC  0E02               	movlw	2
  1291  0011EE  6E17               	movwf	_currentMenu^0,c
  1292  0011F0  EF16  F009         	goto	l1719
  1293  0011F4                     l1713:
  1294  0011F4  0E00               	movlw	0
  1295  0011F6  6E18               	movwf	(_currentMenu+1)^0,c
  1296  0011F8  0E05               	movlw	5
  1297  0011FA  6E17               	movwf	_currentMenu^0,c
  1298  0011FC  EF16  F009         	goto	l1719
  1299  001200                     l1717:
  1300  001200  C015  F027         	movff	_menuOp,??_menuPPAL
  1301  001204  C016  F028         	movff	_menuOp+1,??_menuPPAL+1
  1302                           
  1303                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1304                           ; Switch size 1, requested type "simple"
  1305                           ; Number of cases is 1, Range of values is 0 to 0
  1306                           ; switch strategies available:
  1307                           ; Name         Instructions Cycles
  1308                           ; simple_byte            4     3 (average)
  1309                           ;	Chosen strategy is simple_byte
  1310  001208  5028               	movf	(??_menuPPAL+1)^0,w,c
  1311  00120A  0A00               	xorlw	0	; case 0
  1312  00120C  B4D8               	btfsc	status,2,c
  1313  00120E  EF0B  F009         	goto	l2053
  1314  001212  EF16  F009         	goto	l1719
  1315  001216                     l2053:
  1316                           
  1317                           ; Switch size 1, requested type "simple"
  1318                           ; Number of cases is 2, Range of values is 1 to 2
  1319                           ; switch strategies available:
  1320                           ; Name         Instructions Cycles
  1321                           ; simple_byte            7     4 (average)
  1322                           ;	Chosen strategy is simple_byte
  1323  001216  5027               	movf	??_menuPPAL^0,w,c
  1324  001218  0A01               	xorlw	1	; case 1
  1325  00121A  B4D8               	btfsc	status,2,c
  1326  00121C  EFF4  F008         	goto	l1711
  1327  001220  0A03               	xorlw	3	; case 2
  1328  001222  B4D8               	btfsc	status,2,c
  1329  001224  EFFA  F008         	goto	l1713
  1330  001228  EF16  F009         	goto	l1719
  1331  00122C                     l1719:
  1332                           
  1333                           ;config.c: 189:         lcd_clear();
  1334  00122C  EC87  F00A         	call	_lcd_clear	;wreg free
  1335  001230                     
  1336                           ;config.c: 190:         menuOp=1;
  1337  001230  0E00               	movlw	0
  1338  001232  6E16               	movwf	(_menuOp+1)^0,c
  1339  001234  0E01               	movlw	1
  1340  001236  6E15               	movwf	_menuOp^0,c
  1341  001238                     l124:
  1342  001238  0012               	return		;funcret
  1343  00123A                     __end_of_menuPPAL:
  1344                           	callstack 0
  1345                           
  1346 ;; *************** function _menuM2 *****************
  1347 ;; Defined at:
  1348 ;;		line 306 in file "config.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1362 ;;      Params:         0       0       0       0       0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1364 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1365 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1366 ;;Total ram usage:        2 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 5
  1369 ;; This function calls:
  1370 ;;		_girarMB_Derecha
  1371 ;;		_girarMB_Izquierda
  1372 ;;		_lcd_char
  1373 ;;		_lcd_clear
  1374 ;;		_lcd_out
  1375 ;;		_pararMB
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text4
  1382  0008D4                     __ptext4:
  1383                           	callstack 0
  1384  0008D4                     _menuM2:
  1385                           	callstack 25
  1386  0008D4                     
  1387                           ;config.c: 307:     lcd_out(1,1,"  MENU MOTOR 2      ");
  1388  0008D4  0E01               	movlw	1
  1389  0008D6  6E23               	movwf	lcd_out@col^0,c
  1390  0008D8  0E40               	movlw	low STR_13
  1391  0008DA  6E24               	movwf	lcd_out@str^0,c
  1392  0008DC  0E08               	movlw	high STR_13
  1393  0008DE  6E25               	movwf	(lcd_out@str+1)^0,c
  1394  0008E0  0E01               	movlw	1
  1395  0008E2  EC2D  F00A         	call	_lcd_out
  1396                           
  1397                           ;config.c: 308:     lcd_out(2,1,"1.GirarD   2.GirarI ");
  1398  0008E6  0E01               	movlw	1
  1399  0008E8  6E23               	movwf	lcd_out@col^0,c
  1400  0008EA  0EA9               	movlw	low STR_10
  1401  0008EC  6E24               	movwf	lcd_out@str^0,c
  1402  0008EE  0E08               	movlw	high STR_10
  1403  0008F0  6E25               	movwf	(lcd_out@str+1)^0,c
  1404  0008F2  0E02               	movlw	2
  1405  0008F4  EC2D  F00A         	call	_lcd_out
  1406                           
  1407                           ;config.c: 309:     lcd_out(3,1,"3.Parar    4. BACK  ");
  1408  0008F8  0E01               	movlw	1
  1409  0008FA  6E23               	movwf	lcd_out@col^0,c
  1410  0008FC  0E94               	movlw	low STR_11
  1411  0008FE  6E24               	movwf	lcd_out@str^0,c
  1412  000900  0E08               	movlw	high STR_11
  1413  000902  6E25               	movwf	(lcd_out@str+1)^0,c
  1414  000904  0E03               	movlw	3
  1415  000906  EC2D  F00A         	call	_lcd_out
  1416                           
  1417                           ;config.c: 311:      lcd_out(4,1,"OP:");
  1418  00090A  0E01               	movlw	1
  1419  00090C  6E23               	movwf	lcd_out@col^0,c
  1420  00090E  0ECF               	movlw	low STR_4
  1421  000910  6E24               	movwf	lcd_out@str^0,c
  1422  000912  0E08               	movlw	high STR_4
  1423  000914  6E25               	movwf	(lcd_out@str+1)^0,c
  1424  000916  0E04               	movlw	4
  1425  000918  EC2D  F00A         	call	_lcd_out
  1426                           
  1427                           ;config.c: 313:     switch(menuOp){
  1428  00091C  EF08  F005         	goto	l1867
  1429  000920                     l1857:
  1430  000920  0E09               	movlw	9
  1431  000922  6E23               	movwf	lcd_char@col^0,c
  1432  000924  0E3C               	movlw	60
  1433  000926  6E24               	movwf	lcd_char@letra^0,c
  1434  000928  0E02               	movlw	2
  1435  00092A  EC9D  F00A         	call	_lcd_char
  1436                           
  1437                           ;config.c: 315:                 lcd_char(2,20,' ');
  1438  00092E  0E14               	movlw	20
  1439  000930  6E23               	movwf	lcd_char@col^0,c
  1440  000932  0E20               	movlw	32
  1441  000934  6E24               	movwf	lcd_char@letra^0,c
  1442  000936  0E02               	movlw	2
  1443  000938  EC9D  F00A         	call	_lcd_char
  1444                           
  1445                           ;config.c: 316:                 lcd_char(3,8,' ');
  1446  00093C  0E08               	movlw	8
  1447  00093E  6E23               	movwf	lcd_char@col^0,c
  1448  000940  0E20               	movlw	32
  1449  000942  6E24               	movwf	lcd_char@letra^0,c
  1450  000944  0E03               	movlw	3
  1451  000946  EC9D  F00A         	call	_lcd_char
  1452                           
  1453                           ;config.c: 317:                 lcd_char(3,20,' ');
  1454  00094A  0E14               	movlw	20
  1455  00094C  6E23               	movwf	lcd_char@col^0,c
  1456  00094E  0E20               	movlw	32
  1457  000950  6E24               	movwf	lcd_char@letra^0,c
  1458  000952  0E03               	movlw	3
  1459  000954  EC9D  F00A         	call	_lcd_char
  1460                           
  1461                           ;config.c: 318:                 break;
  1462  000958  EF26  F005         	goto	l185
  1463  00095C                     l1859:
  1464  00095C  0E09               	movlw	9
  1465  00095E  6E23               	movwf	lcd_char@col^0,c
  1466  000960  0E20               	movlw	32
  1467  000962  6E24               	movwf	lcd_char@letra^0,c
  1468  000964  0E02               	movlw	2
  1469  000966  EC9D  F00A         	call	_lcd_char
  1470                           
  1471                           ;config.c: 320:                 lcd_char(2,20,'<');
  1472  00096A  0E14               	movlw	20
  1473  00096C  6E23               	movwf	lcd_char@col^0,c
  1474  00096E  0E3C               	movlw	60
  1475  000970  6E24               	movwf	lcd_char@letra^0,c
  1476  000972  0E02               	movlw	2
  1477  000974  EC9D  F00A         	call	_lcd_char
  1478                           
  1479                           ;config.c: 321:                 lcd_char(3,8,' ');
  1480  000978  0E08               	movlw	8
  1481  00097A  6E23               	movwf	lcd_char@col^0,c
  1482  00097C  0E20               	movlw	32
  1483  00097E  6E24               	movwf	lcd_char@letra^0,c
  1484  000980  0E03               	movlw	3
  1485  000982  EC9D  F00A         	call	_lcd_char
  1486                           
  1487                           ;config.c: 322:                 lcd_char(3,20,' ');
  1488  000986  0E14               	movlw	20
  1489  000988  6E23               	movwf	lcd_char@col^0,c
  1490  00098A  0E20               	movlw	32
  1491  00098C  6E24               	movwf	lcd_char@letra^0,c
  1492  00098E  0E03               	movlw	3
  1493  000990  EC9D  F00A         	call	_lcd_char
  1494                           
  1495                           ;config.c: 323:                 break;
  1496  000994  EF26  F005         	goto	l185
  1497  000998                     l1861:
  1498  000998  0E09               	movlw	9
  1499  00099A  6E23               	movwf	lcd_char@col^0,c
  1500  00099C  0E20               	movlw	32
  1501  00099E  6E24               	movwf	lcd_char@letra^0,c
  1502  0009A0  0E02               	movlw	2
  1503  0009A2  EC9D  F00A         	call	_lcd_char
  1504                           
  1505                           ;config.c: 325:                 lcd_char(2,20,' ');
  1506  0009A6  0E14               	movlw	20
  1507  0009A8  6E23               	movwf	lcd_char@col^0,c
  1508  0009AA  0E20               	movlw	32
  1509  0009AC  6E24               	movwf	lcd_char@letra^0,c
  1510  0009AE  0E02               	movlw	2
  1511  0009B0  EC9D  F00A         	call	_lcd_char
  1512                           
  1513                           ;config.c: 326:                 lcd_char(3,8,'<');
  1514  0009B4  0E08               	movlw	8
  1515  0009B6  6E23               	movwf	lcd_char@col^0,c
  1516  0009B8  0E3C               	movlw	60
  1517  0009BA  6E24               	movwf	lcd_char@letra^0,c
  1518  0009BC  0E03               	movlw	3
  1519  0009BE  EC9D  F00A         	call	_lcd_char
  1520                           
  1521                           ;config.c: 327:                 lcd_char(3,20,' ');
  1522  0009C2  0E14               	movlw	20
  1523  0009C4  6E23               	movwf	lcd_char@col^0,c
  1524  0009C6  0E20               	movlw	32
  1525  0009C8  6E24               	movwf	lcd_char@letra^0,c
  1526  0009CA  0E03               	movlw	3
  1527  0009CC  EC9D  F00A         	call	_lcd_char
  1528                           
  1529                           ;config.c: 328:                 break;
  1530  0009D0  EF26  F005         	goto	l185
  1531  0009D4                     l1863:
  1532  0009D4  0E09               	movlw	9
  1533  0009D6  6E23               	movwf	lcd_char@col^0,c
  1534  0009D8  0E20               	movlw	32
  1535  0009DA  6E24               	movwf	lcd_char@letra^0,c
  1536  0009DC  0E02               	movlw	2
  1537  0009DE  EC9D  F00A         	call	_lcd_char
  1538                           
  1539                           ;config.c: 330:                 lcd_char(2,20,' ');
  1540  0009E2  0E14               	movlw	20
  1541  0009E4  6E23               	movwf	lcd_char@col^0,c
  1542  0009E6  0E20               	movlw	32
  1543  0009E8  6E24               	movwf	lcd_char@letra^0,c
  1544  0009EA  0E02               	movlw	2
  1545  0009EC  EC9D  F00A         	call	_lcd_char
  1546                           
  1547                           ;config.c: 331:                 lcd_char(3,8,' ');
  1548  0009F0  0E08               	movlw	8
  1549  0009F2  6E23               	movwf	lcd_char@col^0,c
  1550  0009F4  0E20               	movlw	32
  1551  0009F6  6E24               	movwf	lcd_char@letra^0,c
  1552  0009F8  0E03               	movlw	3
  1553  0009FA  EC9D  F00A         	call	_lcd_char
  1554                           
  1555                           ;config.c: 332:                 lcd_char(3,20,'<');
  1556  0009FE  0E14               	movlw	20
  1557  000A00  6E23               	movwf	lcd_char@col^0,c
  1558  000A02  0E3C               	movlw	60
  1559  000A04  6E24               	movwf	lcd_char@letra^0,c
  1560  000A06  0E03               	movlw	3
  1561  000A08  EC9D  F00A         	call	_lcd_char
  1562                           
  1563                           ;config.c: 333:                 break;
  1564  000A0C  EF26  F005         	goto	l185
  1565  000A10                     l1867:
  1566  000A10  C015  F027         	movff	_menuOp,??_menuM2
  1567  000A14  C016  F028         	movff	_menuOp+1,??_menuM2+1
  1568                           
  1569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1570                           ; Switch size 1, requested type "simple"
  1571                           ; Number of cases is 1, Range of values is 0 to 0
  1572                           ; switch strategies available:
  1573                           ; Name         Instructions Cycles
  1574                           ; simple_byte            4     3 (average)
  1575                           ;	Chosen strategy is simple_byte
  1576  000A18  5028               	movf	(??_menuM2+1)^0,w,c
  1577  000A1A  0A00               	xorlw	0	; case 0
  1578  000A1C  B4D8               	btfsc	status,2,c
  1579  000A1E  EF13  F005         	goto	l2055
  1580  000A22  EF26  F005         	goto	l185
  1581  000A26                     l2055:
  1582                           
  1583                           ; Switch size 1, requested type "simple"
  1584                           ; Number of cases is 4, Range of values is 1 to 4
  1585                           ; switch strategies available:
  1586                           ; Name         Instructions Cycles
  1587                           ; simple_byte           13     7 (average)
  1588                           ;	Chosen strategy is simple_byte
  1589  000A26  5027               	movf	??_menuM2^0,w,c
  1590  000A28  0A01               	xorlw	1	; case 1
  1591  000A2A  B4D8               	btfsc	status,2,c
  1592  000A2C  EF90  F004         	goto	l1857
  1593  000A30  0A03               	xorlw	3	; case 2
  1594  000A32  B4D8               	btfsc	status,2,c
  1595  000A34  EFAE  F004         	goto	l1859
  1596  000A38  0A01               	xorlw	1	; case 3
  1597  000A3A  B4D8               	btfsc	status,2,c
  1598  000A3C  EFCC  F004         	goto	l1861
  1599  000A40  0A07               	xorlw	7	; case 4
  1600  000A42  B4D8               	btfsc	status,2,c
  1601  000A44  EFEA  F004         	goto	l1863
  1602  000A48  EF26  F005         	goto	l185
  1603  000A4C                     l185:
  1604                           
  1605                           ;config.c: 336:     if(PORTBbits.RB0== 0){
  1606  000A4C  B081               	btfsc	129,0,c	;volatile
  1607  000A4E  EF2B  F005         	goto	u661
  1608  000A52  EF2D  F005         	goto	u660
  1609  000A56                     u661:
  1610  000A56  EF50  F005         	goto	l1879
  1611  000A5A                     u660:
  1612  000A5A                     l190:
  1613  000A5A  A081               	btfss	129,0,c	;volatile
  1614  000A5C  EF32  F005         	goto	u671
  1615  000A60  EF34  F005         	goto	u670
  1616  000A64                     u671:
  1617  000A64  EF2D  F005         	goto	l190
  1618  000A68                     u670:
  1619  000A68                     
  1620                           ;config.c: 338:         menuOp += 1;
  1621  000A68  4A15               	infsnz	_menuOp^0,f,c
  1622  000A6A  2A16               	incf	(_menuOp+1)^0,f,c
  1623  000A6C                     
  1624                           ;config.c: 339:         if(menuOp>4){
  1625  000A6C  BE16               	btfsc	(_menuOp+1)^0,7,c
  1626  000A6E  EF42  F005         	goto	u681
  1627  000A72  5016               	movf	(_menuOp+1)^0,w,c
  1628  000A74  E109               	bnz	u680
  1629  000A76  0E05               	movlw	5
  1630  000A78  5C15               	subwf	_menuOp^0,w,c
  1631  000A7A  A0D8               	btfss	status,0,c
  1632  000A7C  EF42  F005         	goto	u681
  1633  000A80  EF44  F005         	goto	u680
  1634  000A84                     u681:
  1635  000A84  EF48  F005         	goto	l1877
  1636  000A88                     u680:
  1637  000A88                     
  1638                           ;config.c: 340:             menuOp=1;
  1639  000A88  0E00               	movlw	0
  1640  000A8A  6E16               	movwf	(_menuOp+1)^0,c
  1641  000A8C  0E01               	movlw	1
  1642  000A8E  6E15               	movwf	_menuOp^0,c
  1643  000A90                     l1877:
  1644                           
  1645                           ;config.c: 342:         lcd_char(4,5,menuOp+48);
  1646  000A90  0E05               	movlw	5
  1647  000A92  6E23               	movwf	lcd_char@col^0,c
  1648  000A94  5015               	movf	_menuOp^0,w,c
  1649  000A96  0F30               	addlw	48
  1650  000A98  6E24               	movwf	lcd_char@letra^0,c
  1651  000A9A  0E04               	movlw	4
  1652  000A9C  EC9D  F00A         	call	_lcd_char
  1653  000AA0                     l1879:
  1654                           
  1655                           ;config.c: 344:     if(PORTBbits.RB1== 0){
  1656  000AA0  B281               	btfsc	129,1,c	;volatile
  1657  000AA2  EF55  F005         	goto	u691
  1658  000AA6  EF57  F005         	goto	u690
  1659  000AAA                     u691:
  1660  000AAA  EF7A  F005         	goto	l1891
  1661  000AAE                     u690:
  1662  000AAE                     l195:
  1663  000AAE  A281               	btfss	129,1,c	;volatile
  1664  000AB0  EF5C  F005         	goto	u701
  1665  000AB4  EF5E  F005         	goto	u700
  1666  000AB8                     u701:
  1667  000AB8  EF57  F005         	goto	l195
  1668  000ABC                     u700:
  1669  000ABC                     
  1670                           ;config.c: 346:         menuOp -= 1;
  1671  000ABC  0615               	decf	_menuOp^0,f,c
  1672  000ABE  A0D8               	btfss	status,0,c
  1673  000AC0  0616               	decf	(_menuOp+1)^0,f,c
  1674  000AC2                     
  1675                           ;config.c: 347:         if(menuOp<1){
  1676  000AC2  BE16               	btfsc	(_menuOp+1)^0,7,c
  1677  000AC4  EF6E  F005         	goto	u710
  1678  000AC8  5016               	movf	(_menuOp+1)^0,w,c
  1679  000ACA  E106               	bnz	u711
  1680  000ACC  0415               	decf	_menuOp^0,w,c
  1681  000ACE  B0D8               	btfsc	status,0,c
  1682  000AD0  EF6C  F005         	goto	u711
  1683  000AD4  EF6E  F005         	goto	u710
  1684  000AD8                     u711:
  1685  000AD8  EF72  F005         	goto	l1889
  1686  000ADC                     u710:
  1687  000ADC                     
  1688                           ;config.c: 348:             menuOp=4;
  1689  000ADC  0E00               	movlw	0
  1690  000ADE  6E16               	movwf	(_menuOp+1)^0,c
  1691  000AE0  0E04               	movlw	4
  1692  000AE2  6E15               	movwf	_menuOp^0,c
  1693  000AE4                     l1889:
  1694                           
  1695                           ;config.c: 350:         lcd_char(4,5,menuOp+48);
  1696  000AE4  0E05               	movlw	5
  1697  000AE6  6E23               	movwf	lcd_char@col^0,c
  1698  000AE8  5015               	movf	_menuOp^0,w,c
  1699  000AEA  0F30               	addlw	48
  1700  000AEC  6E24               	movwf	lcd_char@letra^0,c
  1701  000AEE  0E04               	movlw	4
  1702  000AF0  EC9D  F00A         	call	_lcd_char
  1703  000AF4                     l1891:
  1704                           
  1705                           ;config.c: 352:     if(PORTBbits.RB2 == 0){
  1706  000AF4  B481               	btfsc	129,2,c	;volatile
  1707  000AF6  EF7F  F005         	goto	u721
  1708  000AFA  EF81  F005         	goto	u720
  1709  000AFE                     u721:
  1710  000AFE  EFC0  F005         	goto	l209
  1711  000B02                     u720:
  1712  000B02                     l200:
  1713  000B02  A481               	btfss	129,2,c	;volatile
  1714  000B04  EF86  F005         	goto	u731
  1715  000B08  EF88  F005         	goto	u730
  1716  000B0C                     u731:
  1717  000B0C  EF81  F005         	goto	l200
  1718  000B10                     u730:
  1719  000B10  EF9C  F005         	goto	l1905
  1720  000B14                     l1895:
  1721  000B14  ECCF  F00A         	call	_girarMB_Derecha	;wreg free
  1722  000B18  EFBA  F005         	goto	l1907
  1723  000B1C                     l1897:
  1724  000B1C  ECCC  F00A         	call	_girarMB_Izquierda	;wreg free
  1725  000B20  EFBA  F005         	goto	l1907
  1726  000B24                     l1899:
  1727  000B24  ECC9  F00A         	call	_pararMB	;wreg free
  1728  000B28  EFBA  F005         	goto	l1907
  1729  000B2C                     l1901:
  1730  000B2C  0E00               	movlw	0
  1731  000B2E  6E18               	movwf	(_currentMenu+1)^0,c
  1732  000B30  0E02               	movlw	2
  1733  000B32  6E17               	movwf	_currentMenu^0,c
  1734  000B34  EFBA  F005         	goto	l1907
  1735  000B38                     l1905:
  1736  000B38  C015  F027         	movff	_menuOp,??_menuM2
  1737  000B3C  C016  F028         	movff	_menuOp+1,??_menuM2+1
  1738                           
  1739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1740                           ; Switch size 1, requested type "simple"
  1741                           ; Number of cases is 1, Range of values is 0 to 0
  1742                           ; switch strategies available:
  1743                           ; Name         Instructions Cycles
  1744                           ; simple_byte            4     3 (average)
  1745                           ;	Chosen strategy is simple_byte
  1746  000B40  5028               	movf	(??_menuM2+1)^0,w,c
  1747  000B42  0A00               	xorlw	0	; case 0
  1748  000B44  B4D8               	btfsc	status,2,c
  1749  000B46  EFA7  F005         	goto	l2057
  1750  000B4A  EFBA  F005         	goto	l1907
  1751  000B4E                     l2057:
  1752                           
  1753                           ; Switch size 1, requested type "simple"
  1754                           ; Number of cases is 4, Range of values is 1 to 4
  1755                           ; switch strategies available:
  1756                           ; Name         Instructions Cycles
  1757                           ; simple_byte           13     7 (average)
  1758                           ;	Chosen strategy is simple_byte
  1759  000B4E  5027               	movf	??_menuM2^0,w,c
  1760  000B50  0A01               	xorlw	1	; case 1
  1761  000B52  B4D8               	btfsc	status,2,c
  1762  000B54  EF8A  F005         	goto	l1895
  1763  000B58  0A03               	xorlw	3	; case 2
  1764  000B5A  B4D8               	btfsc	status,2,c
  1765  000B5C  EF8E  F005         	goto	l1897
  1766  000B60  0A01               	xorlw	1	; case 3
  1767  000B62  B4D8               	btfsc	status,2,c
  1768  000B64  EF92  F005         	goto	l1899
  1769  000B68  0A07               	xorlw	7	; case 4
  1770  000B6A  B4D8               	btfsc	status,2,c
  1771  000B6C  EF96  F005         	goto	l1901
  1772  000B70  EFBA  F005         	goto	l1907
  1773  000B74                     l1907:
  1774                           
  1775                           ;config.c: 361:         lcd_clear();
  1776  000B74  EC87  F00A         	call	_lcd_clear	;wreg free
  1777  000B78                     
  1778                           ;config.c: 362:         menuOp=1;
  1779  000B78  0E00               	movlw	0
  1780  000B7A  6E16               	movwf	(_menuOp+1)^0,c
  1781  000B7C  0E01               	movlw	1
  1782  000B7E  6E15               	movwf	_menuOp^0,c
  1783  000B80                     l209:
  1784  000B80  0012               	return		;funcret
  1785  000B82                     __end_of_menuM2:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function _pararMB *****************
  1789 ;; Defined at:
  1790 ;;		line 129 in file "config.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		None
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1804 ;;      Params:         0       0       0       0       0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1807 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_menuM2
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text5
  1818  001592                     __ptext5:
  1819                           	callstack 0
  1820  001592                     _pararMB:
  1821                           	callstack 29
  1822  001592                     
  1823                           ;config.c: 130:     PORTBbits.RB5 = 0;
  1824  001592  9A81               	bcf	129,5,c	;volatile
  1825                           
  1826                           ;config.c: 131:     PORTBbits.RB6 = 0;
  1827  001594  9C81               	bcf	129,6,c	;volatile
  1828  001596  0012               	return		;funcret
  1829  001598                     __end_of_pararMB:
  1830                           	callstack 0
  1831                           
  1832 ;; *************** function _girarMB_Izquierda *****************
  1833 ;; Defined at:
  1834 ;;		line 125 in file "config.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		None
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1848 ;;      Params:         0       0       0       0       0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1851 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_menuM2
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text6
  1862  001598                     __ptext6:
  1863                           	callstack 0
  1864  001598                     _girarMB_Izquierda:
  1865                           	callstack 29
  1866  001598                     
  1867                           ;config.c: 126:     PORTBbits.RB5 = 0;
  1868  001598  9A81               	bcf	129,5,c	;volatile
  1869                           
  1870                           ;config.c: 127:     PORTBbits.RB6 = 1;
  1871  00159A  8C81               	bsf	129,6,c	;volatile
  1872  00159C  0012               	return		;funcret
  1873  00159E                     __end_of_girarMB_Izquierda:
  1874                           	callstack 0
  1875                           
  1876 ;; *************** function _girarMB_Derecha *****************
  1877 ;; Defined at:
  1878 ;;		line 121 in file "config.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		None
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1892 ;;      Params:         0       0       0       0       0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_menuM2
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text7
  1906  00159E                     __ptext7:
  1907                           	callstack 0
  1908  00159E                     _girarMB_Derecha:
  1909                           	callstack 29
  1910  00159E                     
  1911                           ;config.c: 122:     PORTBbits.RB5 = 1;
  1912  00159E  8A81               	bsf	129,5,c	;volatile
  1913                           
  1914                           ;config.c: 123:     PORTBbits.RB6 = 0;
  1915  0015A0  9C81               	bcf	129,6,c	;volatile
  1916  0015A2  0012               	return		;funcret
  1917  0015A4                     __end_of_girarMB_Derecha:
  1918                           	callstack 0
  1919                           
  1920 ;; *************** function _menuM1 *****************
  1921 ;; Defined at:
  1922 ;;		line 245 in file "config.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1936 ;;      Params:         0       0       0       0       0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1938 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1939 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1940 ;;Total ram usage:        2 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 5
  1943 ;; This function calls:
  1944 ;;		_girarMA_Derecha
  1945 ;;		_girarMA_Izquierda
  1946 ;;		_lcd_char
  1947 ;;		_lcd_clear
  1948 ;;		_lcd_out
  1949 ;;		_pararMA
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text8
  1956  000B82                     __ptext8:
  1957                           	callstack 0
  1958  000B82                     _menuM1:
  1959                           	callstack 25
  1960  000B82                     
  1961                           ;config.c: 246:     lcd_out(1,1,"  MENU MOTOR 1      ");
  1962  000B82  0E01               	movlw	1
  1963  000B84  6E23               	movwf	lcd_out@col^0,c
  1964  000B86  0E2B               	movlw	low STR_9
  1965  000B88  6E24               	movwf	lcd_out@str^0,c
  1966  000B8A  0E08               	movlw	high STR_9
  1967  000B8C  6E25               	movwf	(lcd_out@str+1)^0,c
  1968  000B8E  0E01               	movlw	1
  1969  000B90  EC2D  F00A         	call	_lcd_out
  1970                           
  1971                           ;config.c: 247:     lcd_out(2,1,"1.GirarD   2.GirarI ");
  1972  000B94  0E01               	movlw	1
  1973  000B96  6E23               	movwf	lcd_out@col^0,c
  1974  000B98  0EA9               	movlw	low STR_10
  1975  000B9A  6E24               	movwf	lcd_out@str^0,c
  1976  000B9C  0E08               	movlw	high STR_10
  1977  000B9E  6E25               	movwf	(lcd_out@str+1)^0,c
  1978  000BA0  0E02               	movlw	2
  1979  000BA2  EC2D  F00A         	call	_lcd_out
  1980                           
  1981                           ;config.c: 248:     lcd_out(3,1,"3.Parar    4. BACK  ");
  1982  000BA6  0E01               	movlw	1
  1983  000BA8  6E23               	movwf	lcd_out@col^0,c
  1984  000BAA  0E94               	movlw	low STR_11
  1985  000BAC  6E24               	movwf	lcd_out@str^0,c
  1986  000BAE  0E08               	movlw	high STR_11
  1987  000BB0  6E25               	movwf	(lcd_out@str+1)^0,c
  1988  000BB2  0E03               	movlw	3
  1989  000BB4  EC2D  F00A         	call	_lcd_out
  1990                           
  1991                           ;config.c: 249:     lcd_out(4,1,"OP:");
  1992  000BB8  0E01               	movlw	1
  1993  000BBA  6E23               	movwf	lcd_out@col^0,c
  1994  000BBC  0ECF               	movlw	low STR_4
  1995  000BBE  6E24               	movwf	lcd_out@str^0,c
  1996  000BC0  0E08               	movlw	high STR_4
  1997  000BC2  6E25               	movwf	(lcd_out@str+1)^0,c
  1998  000BC4  0E04               	movlw	4
  1999  000BC6  EC2D  F00A         	call	_lcd_out
  2000                           
  2001                           ;config.c: 251:     switch(menuOp){
  2002  000BCA  EF5F  F006         	goto	l1803
  2003  000BCE                     l1793:
  2004  000BCE  0E09               	movlw	9
  2005  000BD0  6E23               	movwf	lcd_char@col^0,c
  2006  000BD2  0E3C               	movlw	60
  2007  000BD4  6E24               	movwf	lcd_char@letra^0,c
  2008  000BD6  0E02               	movlw	2
  2009  000BD8  EC9D  F00A         	call	_lcd_char
  2010                           
  2011                           ;config.c: 253:                 lcd_char(2,20,' ');
  2012  000BDC  0E14               	movlw	20
  2013  000BDE  6E23               	movwf	lcd_char@col^0,c
  2014  000BE0  0E20               	movlw	32
  2015  000BE2  6E24               	movwf	lcd_char@letra^0,c
  2016  000BE4  0E02               	movlw	2
  2017  000BE6  EC9D  F00A         	call	_lcd_char
  2018                           
  2019                           ;config.c: 254:                 lcd_char(3,8,' ');
  2020  000BEA  0E08               	movlw	8
  2021  000BEC  6E23               	movwf	lcd_char@col^0,c
  2022  000BEE  0E20               	movlw	32
  2023  000BF0  6E24               	movwf	lcd_char@letra^0,c
  2024  000BF2  0E03               	movlw	3
  2025  000BF4  EC9D  F00A         	call	_lcd_char
  2026                           
  2027                           ;config.c: 255:                 lcd_char(3,20,' ');
  2028  000BF8  0E14               	movlw	20
  2029  000BFA  6E23               	movwf	lcd_char@col^0,c
  2030  000BFC  0E20               	movlw	32
  2031  000BFE  6E24               	movwf	lcd_char@letra^0,c
  2032  000C00  0E03               	movlw	3
  2033  000C02  EC9D  F00A         	call	_lcd_char
  2034                           
  2035                           ;config.c: 256:                 break;
  2036  000C06  EF7D  F006         	goto	l156
  2037  000C0A                     l1795:
  2038  000C0A  0E09               	movlw	9
  2039  000C0C  6E23               	movwf	lcd_char@col^0,c
  2040  000C0E  0E20               	movlw	32
  2041  000C10  6E24               	movwf	lcd_char@letra^0,c
  2042  000C12  0E02               	movlw	2
  2043  000C14  EC9D  F00A         	call	_lcd_char
  2044                           
  2045                           ;config.c: 258:                 lcd_char(2,20,'<');
  2046  000C18  0E14               	movlw	20
  2047  000C1A  6E23               	movwf	lcd_char@col^0,c
  2048  000C1C  0E3C               	movlw	60
  2049  000C1E  6E24               	movwf	lcd_char@letra^0,c
  2050  000C20  0E02               	movlw	2
  2051  000C22  EC9D  F00A         	call	_lcd_char
  2052                           
  2053                           ;config.c: 259:                 lcd_char(3,8,' ');
  2054  000C26  0E08               	movlw	8
  2055  000C28  6E23               	movwf	lcd_char@col^0,c
  2056  000C2A  0E20               	movlw	32
  2057  000C2C  6E24               	movwf	lcd_char@letra^0,c
  2058  000C2E  0E03               	movlw	3
  2059  000C30  EC9D  F00A         	call	_lcd_char
  2060                           
  2061                           ;config.c: 260:                 lcd_char(3,20,' ');
  2062  000C34  0E14               	movlw	20
  2063  000C36  6E23               	movwf	lcd_char@col^0,c
  2064  000C38  0E20               	movlw	32
  2065  000C3A  6E24               	movwf	lcd_char@letra^0,c
  2066  000C3C  0E03               	movlw	3
  2067  000C3E  EC9D  F00A         	call	_lcd_char
  2068                           
  2069                           ;config.c: 261:                 break;
  2070  000C42  EF7D  F006         	goto	l156
  2071  000C46                     l1797:
  2072  000C46  0E09               	movlw	9
  2073  000C48  6E23               	movwf	lcd_char@col^0,c
  2074  000C4A  0E20               	movlw	32
  2075  000C4C  6E24               	movwf	lcd_char@letra^0,c
  2076  000C4E  0E02               	movlw	2
  2077  000C50  EC9D  F00A         	call	_lcd_char
  2078                           
  2079                           ;config.c: 263:                 lcd_char(2,20,' ');
  2080  000C54  0E14               	movlw	20
  2081  000C56  6E23               	movwf	lcd_char@col^0,c
  2082  000C58  0E20               	movlw	32
  2083  000C5A  6E24               	movwf	lcd_char@letra^0,c
  2084  000C5C  0E02               	movlw	2
  2085  000C5E  EC9D  F00A         	call	_lcd_char
  2086                           
  2087                           ;config.c: 264:                 lcd_char(3,8,'<');
  2088  000C62  0E08               	movlw	8
  2089  000C64  6E23               	movwf	lcd_char@col^0,c
  2090  000C66  0E3C               	movlw	60
  2091  000C68  6E24               	movwf	lcd_char@letra^0,c
  2092  000C6A  0E03               	movlw	3
  2093  000C6C  EC9D  F00A         	call	_lcd_char
  2094                           
  2095                           ;config.c: 265:                 lcd_char(3,20,' ');
  2096  000C70  0E14               	movlw	20
  2097  000C72  6E23               	movwf	lcd_char@col^0,c
  2098  000C74  0E20               	movlw	32
  2099  000C76  6E24               	movwf	lcd_char@letra^0,c
  2100  000C78  0E03               	movlw	3
  2101  000C7A  EC9D  F00A         	call	_lcd_char
  2102                           
  2103                           ;config.c: 266:                 break;
  2104  000C7E  EF7D  F006         	goto	l156
  2105  000C82                     l1799:
  2106  000C82  0E09               	movlw	9
  2107  000C84  6E23               	movwf	lcd_char@col^0,c
  2108  000C86  0E20               	movlw	32
  2109  000C88  6E24               	movwf	lcd_char@letra^0,c
  2110  000C8A  0E02               	movlw	2
  2111  000C8C  EC9D  F00A         	call	_lcd_char
  2112                           
  2113                           ;config.c: 268:                 lcd_char(2,20,' ');
  2114  000C90  0E14               	movlw	20
  2115  000C92  6E23               	movwf	lcd_char@col^0,c
  2116  000C94  0E20               	movlw	32
  2117  000C96  6E24               	movwf	lcd_char@letra^0,c
  2118  000C98  0E02               	movlw	2
  2119  000C9A  EC9D  F00A         	call	_lcd_char
  2120                           
  2121                           ;config.c: 269:                 lcd_char(3,8,' ');
  2122  000C9E  0E08               	movlw	8
  2123  000CA0  6E23               	movwf	lcd_char@col^0,c
  2124  000CA2  0E20               	movlw	32
  2125  000CA4  6E24               	movwf	lcd_char@letra^0,c
  2126  000CA6  0E03               	movlw	3
  2127  000CA8  EC9D  F00A         	call	_lcd_char
  2128                           
  2129                           ;config.c: 270:                 lcd_char(3,20,'<');
  2130  000CAC  0E14               	movlw	20
  2131  000CAE  6E23               	movwf	lcd_char@col^0,c
  2132  000CB0  0E3C               	movlw	60
  2133  000CB2  6E24               	movwf	lcd_char@letra^0,c
  2134  000CB4  0E03               	movlw	3
  2135  000CB6  EC9D  F00A         	call	_lcd_char
  2136                           
  2137                           ;config.c: 271:                 break;
  2138  000CBA  EF7D  F006         	goto	l156
  2139  000CBE                     l1803:
  2140  000CBE  C015  F027         	movff	_menuOp,??_menuM1
  2141  000CC2  C016  F028         	movff	_menuOp+1,??_menuM1+1
  2142                           
  2143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2144                           ; Switch size 1, requested type "simple"
  2145                           ; Number of cases is 1, Range of values is 0 to 0
  2146                           ; switch strategies available:
  2147                           ; Name         Instructions Cycles
  2148                           ; simple_byte            4     3 (average)
  2149                           ;	Chosen strategy is simple_byte
  2150  000CC6  5028               	movf	(??_menuM1+1)^0,w,c
  2151  000CC8  0A00               	xorlw	0	; case 0
  2152  000CCA  B4D8               	btfsc	status,2,c
  2153  000CCC  EF6A  F006         	goto	l2059
  2154  000CD0  EF7D  F006         	goto	l156
  2155  000CD4                     l2059:
  2156                           
  2157                           ; Switch size 1, requested type "simple"
  2158                           ; Number of cases is 4, Range of values is 1 to 4
  2159                           ; switch strategies available:
  2160                           ; Name         Instructions Cycles
  2161                           ; simple_byte           13     7 (average)
  2162                           ;	Chosen strategy is simple_byte
  2163  000CD4  5027               	movf	??_menuM1^0,w,c
  2164  000CD6  0A01               	xorlw	1	; case 1
  2165  000CD8  B4D8               	btfsc	status,2,c
  2166  000CDA  EFE7  F005         	goto	l1793
  2167  000CDE  0A03               	xorlw	3	; case 2
  2168  000CE0  B4D8               	btfsc	status,2,c
  2169  000CE2  EF05  F006         	goto	l1795
  2170  000CE6  0A01               	xorlw	1	; case 3
  2171  000CE8  B4D8               	btfsc	status,2,c
  2172  000CEA  EF23  F006         	goto	l1797
  2173  000CEE  0A07               	xorlw	7	; case 4
  2174  000CF0  B4D8               	btfsc	status,2,c
  2175  000CF2  EF41  F006         	goto	l1799
  2176  000CF6  EF7D  F006         	goto	l156
  2177  000CFA                     l156:
  2178                           
  2179                           ;config.c: 274:     if(PORTBbits.RB0== 0){
  2180  000CFA  B081               	btfsc	129,0,c	;volatile
  2181  000CFC  EF82  F006         	goto	u581
  2182  000D00  EF84  F006         	goto	u580
  2183  000D04                     u581:
  2184  000D04  EFA7  F006         	goto	l1815
  2185  000D08                     u580:
  2186  000D08                     l161:
  2187  000D08  A081               	btfss	129,0,c	;volatile
  2188  000D0A  EF89  F006         	goto	u591
  2189  000D0E  EF8B  F006         	goto	u590
  2190  000D12                     u591:
  2191  000D12  EF84  F006         	goto	l161
  2192  000D16                     u590:
  2193  000D16                     
  2194                           ;config.c: 276:         menuOp += 1;
  2195  000D16  4A15               	infsnz	_menuOp^0,f,c
  2196  000D18  2A16               	incf	(_menuOp+1)^0,f,c
  2197  000D1A                     
  2198                           ;config.c: 277:         if(menuOp>4){
  2199  000D1A  BE16               	btfsc	(_menuOp+1)^0,7,c
  2200  000D1C  EF99  F006         	goto	u601
  2201  000D20  5016               	movf	(_menuOp+1)^0,w,c
  2202  000D22  E109               	bnz	u600
  2203  000D24  0E05               	movlw	5
  2204  000D26  5C15               	subwf	_menuOp^0,w,c
  2205  000D28  A0D8               	btfss	status,0,c
  2206  000D2A  EF99  F006         	goto	u601
  2207  000D2E  EF9B  F006         	goto	u600
  2208  000D32                     u601:
  2209  000D32  EF9F  F006         	goto	l1813
  2210  000D36                     u600:
  2211  000D36                     
  2212                           ;config.c: 278:             menuOp=1;
  2213  000D36  0E00               	movlw	0
  2214  000D38  6E16               	movwf	(_menuOp+1)^0,c
  2215  000D3A  0E01               	movlw	1
  2216  000D3C  6E15               	movwf	_menuOp^0,c
  2217  000D3E                     l1813:
  2218                           
  2219                           ;config.c: 280:         lcd_char(4,5,menuOp+48);
  2220  000D3E  0E05               	movlw	5
  2221  000D40  6E23               	movwf	lcd_char@col^0,c
  2222  000D42  5015               	movf	_menuOp^0,w,c
  2223  000D44  0F30               	addlw	48
  2224  000D46  6E24               	movwf	lcd_char@letra^0,c
  2225  000D48  0E04               	movlw	4
  2226  000D4A  EC9D  F00A         	call	_lcd_char
  2227  000D4E                     l1815:
  2228                           
  2229                           ;config.c: 282:     if(PORTBbits.RB1== 0){
  2230  000D4E  B281               	btfsc	129,1,c	;volatile
  2231  000D50  EFAC  F006         	goto	u611
  2232  000D54  EFAE  F006         	goto	u610
  2233  000D58                     u611:
  2234  000D58  EFD1  F006         	goto	l1827
  2235  000D5C                     u610:
  2236  000D5C                     l166:
  2237  000D5C  A281               	btfss	129,1,c	;volatile
  2238  000D5E  EFB3  F006         	goto	u621
  2239  000D62  EFB5  F006         	goto	u620
  2240  000D66                     u621:
  2241  000D66  EFAE  F006         	goto	l166
  2242  000D6A                     u620:
  2243  000D6A                     
  2244                           ;config.c: 284:         menuOp -= 1;
  2245  000D6A  0615               	decf	_menuOp^0,f,c
  2246  000D6C  A0D8               	btfss	status,0,c
  2247  000D6E  0616               	decf	(_menuOp+1)^0,f,c
  2248  000D70                     
  2249                           ;config.c: 285:         if(menuOp<1){
  2250  000D70  BE16               	btfsc	(_menuOp+1)^0,7,c
  2251  000D72  EFC5  F006         	goto	u630
  2252  000D76  5016               	movf	(_menuOp+1)^0,w,c
  2253  000D78  E106               	bnz	u631
  2254  000D7A  0415               	decf	_menuOp^0,w,c
  2255  000D7C  B0D8               	btfsc	status,0,c
  2256  000D7E  EFC3  F006         	goto	u631
  2257  000D82  EFC5  F006         	goto	u630
  2258  000D86                     u631:
  2259  000D86  EFC9  F006         	goto	l1825
  2260  000D8A                     u630:
  2261  000D8A                     
  2262                           ;config.c: 286:             menuOp=4;
  2263  000D8A  0E00               	movlw	0
  2264  000D8C  6E16               	movwf	(_menuOp+1)^0,c
  2265  000D8E  0E04               	movlw	4
  2266  000D90  6E15               	movwf	_menuOp^0,c
  2267  000D92                     l1825:
  2268                           
  2269                           ;config.c: 288:         lcd_char(4,5,menuOp+48);
  2270  000D92  0E05               	movlw	5
  2271  000D94  6E23               	movwf	lcd_char@col^0,c
  2272  000D96  5015               	movf	_menuOp^0,w,c
  2273  000D98  0F30               	addlw	48
  2274  000D9A  6E24               	movwf	lcd_char@letra^0,c
  2275  000D9C  0E04               	movlw	4
  2276  000D9E  EC9D  F00A         	call	_lcd_char
  2277  000DA2                     l1827:
  2278                           
  2279                           ;config.c: 290:     if(PORTBbits.RB2 == 0){
  2280  000DA2  B481               	btfsc	129,2,c	;volatile
  2281  000DA4  EFD6  F006         	goto	u641
  2282  000DA8  EFD8  F006         	goto	u640
  2283  000DAC                     u641:
  2284  000DAC  EF17  F007         	goto	l180
  2285  000DB0                     u640:
  2286  000DB0                     l171:
  2287  000DB0  A481               	btfss	129,2,c	;volatile
  2288  000DB2  EFDD  F006         	goto	u651
  2289  000DB6  EFDF  F006         	goto	u650
  2290  000DBA                     u651:
  2291  000DBA  EFD8  F006         	goto	l171
  2292  000DBE                     u650:
  2293  000DBE  EFF3  F006         	goto	l1841
  2294  000DC2                     l1831:
  2295  000DC2  ECD8  F00A         	call	_girarMA_Derecha	;wreg free
  2296  000DC6  EF11  F007         	goto	l1843
  2297  000DCA                     l1833:
  2298  000DCA  ECD5  F00A         	call	_girarMA_Izquierda	;wreg free
  2299  000DCE  EF11  F007         	goto	l1843
  2300  000DD2                     l1835:
  2301  000DD2  ECD2  F00A         	call	_pararMA	;wreg free
  2302  000DD6  EF11  F007         	goto	l1843
  2303  000DDA                     l1837:
  2304  000DDA  0E00               	movlw	0
  2305  000DDC  6E18               	movwf	(_currentMenu+1)^0,c
  2306  000DDE  0E02               	movlw	2
  2307  000DE0  6E17               	movwf	_currentMenu^0,c
  2308  000DE2  EF11  F007         	goto	l1843
  2309  000DE6                     l1841:
  2310  000DE6  C015  F027         	movff	_menuOp,??_menuM1
  2311  000DEA  C016  F028         	movff	_menuOp+1,??_menuM1+1
  2312                           
  2313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2314                           ; Switch size 1, requested type "simple"
  2315                           ; Number of cases is 1, Range of values is 0 to 0
  2316                           ; switch strategies available:
  2317                           ; Name         Instructions Cycles
  2318                           ; simple_byte            4     3 (average)
  2319                           ;	Chosen strategy is simple_byte
  2320  000DEE  5028               	movf	(??_menuM1+1)^0,w,c
  2321  000DF0  0A00               	xorlw	0	; case 0
  2322  000DF2  B4D8               	btfsc	status,2,c
  2323  000DF4  EFFE  F006         	goto	l2061
  2324  000DF8  EF11  F007         	goto	l1843
  2325  000DFC                     l2061:
  2326                           
  2327                           ; Switch size 1, requested type "simple"
  2328                           ; Number of cases is 4, Range of values is 1 to 4
  2329                           ; switch strategies available:
  2330                           ; Name         Instructions Cycles
  2331                           ; simple_byte           13     7 (average)
  2332                           ;	Chosen strategy is simple_byte
  2333  000DFC  5027               	movf	??_menuM1^0,w,c
  2334  000DFE  0A01               	xorlw	1	; case 1
  2335  000E00  B4D8               	btfsc	status,2,c
  2336  000E02  EFE1  F006         	goto	l1831
  2337  000E06  0A03               	xorlw	3	; case 2
  2338  000E08  B4D8               	btfsc	status,2,c
  2339  000E0A  EFE5  F006         	goto	l1833
  2340  000E0E  0A01               	xorlw	1	; case 3
  2341  000E10  B4D8               	btfsc	status,2,c
  2342  000E12  EFE9  F006         	goto	l1835
  2343  000E16  0A07               	xorlw	7	; case 4
  2344  000E18  B4D8               	btfsc	status,2,c
  2345  000E1A  EFED  F006         	goto	l1837
  2346  000E1E  EF11  F007         	goto	l1843
  2347  000E22                     l1843:
  2348                           
  2349                           ;config.c: 299:         lcd_clear();
  2350  000E22  EC87  F00A         	call	_lcd_clear	;wreg free
  2351  000E26                     
  2352                           ;config.c: 300:         menuOp=1;
  2353  000E26  0E00               	movlw	0
  2354  000E28  6E16               	movwf	(_menuOp+1)^0,c
  2355  000E2A  0E01               	movlw	1
  2356  000E2C  6E15               	movwf	_menuOp^0,c
  2357  000E2E                     l180:
  2358  000E2E  0012               	return		;funcret
  2359  000E30                     __end_of_menuM1:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _pararMA *****************
  2363 ;; Defined at:
  2364 ;;		line 116 in file "config.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		None
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2381 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2382 ;;Total ram usage:        0 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_menuM1
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text9
  2392  0015A4                     __ptext9:
  2393                           	callstack 0
  2394  0015A4                     _pararMA:
  2395                           	callstack 29
  2396  0015A4                     
  2397                           ;config.c: 117:     PORTDbits.RD2 = 0;
  2398  0015A4  9483               	bcf	131,2,c	;volatile
  2399                           
  2400                           ;config.c: 118:     PORTBbits.RB4 = 0;
  2401  0015A6  9881               	bcf	129,4,c	;volatile
  2402  0015A8  0012               	return		;funcret
  2403  0015AA                     __end_of_pararMA:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _lcd_out *****************
  2407 ;; Defined at:
  2408 ;;		line 156 in file "LCD_LIB.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  row             1    wreg     unsigned char 
  2411 ;;  col             1   10[COMRAM] unsigned char 
  2412 ;;  str             2   11[COMRAM] PTR unsigned char 
  2413 ;;		 -> STR_16(4), STR_15(21), STR_14(21), STR_13(21), 
  2414 ;;		 -> STR_12(4), STR_11(21), STR_10(21), STR_9(21), 
  2415 ;;		 -> STR_8(4), STR_7(17), STR_6(21), STR_5(21), 
  2416 ;;		 -> STR_4(4), STR_3(21), STR_2(21), STR_1(21), 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  row             1   13[COMRAM] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2428 ;;      Params:         3       0       0       0       0       0       0       0       0
  2429 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2431 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2432 ;;Total ram usage:        4 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 4
  2435 ;; This function calls:
  2436 ;;		_lcd_set_cursor
  2437 ;;		_lcd_write
  2438 ;; This function is called by:
  2439 ;;		_menuPPAL
  2440 ;;		_menuSelM
  2441 ;;		_menuM1
  2442 ;;		_menuM2
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text10
  2447  00145A                     __ptext10:
  2448                           	callstack 0
  2449  00145A                     _lcd_out:
  2450                           	callstack 25
  2451                           
  2452                           ;incstack = 0
  2453                           ;lcd_out@row stored from wreg
  2454  00145A  6E26               	movwf	lcd_out@row^0,c
  2455  00145C                     
  2456                           ;LCD_LIB.c: 157:     lcd_set_cursor(row,col);
  2457  00145C  C023  F01F         	movff	lcd_out@col,lcd_set_cursor@col
  2458  001460  5026               	movf	lcd_out@row^0,w,c
  2459  001462  EC96  F009         	call	_lcd_set_cursor
  2460                           
  2461                           ;LCD_LIB.c: 158:     while(*str){
  2462  001466  EF3F  F00A         	goto	l1643
  2463  00146A                     l1639:
  2464                           
  2465                           ;LCD_LIB.c: 159:         lcd_write(*str);
  2466  00146A  C024  FFF6         	movff	lcd_out@str,tblptrl
  2467  00146E  C025  FFF7         	movff	lcd_out@str+1,tblptrh
  2468  001472                     	if	0	;tblptru may be non-zero
  2469  001472                     	endif
  2470  001472                     	if	0	;tblptru may be non-zero
  2471  001472                     	endif
  2472  001472  0008               	tblrd		*
  2473  001474  50F5               	movf	tablat,w,c
  2474  001476  ECBB  F00A         	call	_lcd_write
  2475  00147A                     
  2476                           ;LCD_LIB.c: 160:         str++;
  2477  00147A  4A24               	infsnz	lcd_out@str^0,f,c
  2478  00147C  2A25               	incf	(lcd_out@str+1)^0,f,c
  2479  00147E                     l1643:
  2480                           
  2481                           ;LCD_LIB.c: 158:     while(*str){
  2482  00147E  C024  FFF6         	movff	lcd_out@str,tblptrl
  2483  001482  C025  FFF7         	movff	lcd_out@str+1,tblptrh
  2484  001486                     	if	0	;tblptru may be non-zero
  2485  001486                     	endif
  2486  001486                     	if	0	;tblptru may be non-zero
  2487  001486                     	endif
  2488  001486  0008               	tblrd		*
  2489  001488  50F5               	movf	tablat,w,c
  2490  00148A  0900               	iorlw	0
  2491  00148C  A4D8               	btfss	status,2,c
  2492  00148E  EF4B  F00A         	goto	u411
  2493  001492  EF4D  F00A         	goto	u410
  2494  001496                     u411:
  2495  001496  EF35  F00A         	goto	l1639
  2496  00149A                     u410:
  2497  00149A  0012               	return		;funcret
  2498  00149C                     __end_of_lcd_out:
  2499                           	callstack 0
  2500                           
  2501 ;; *************** function _lcd_clear *****************
  2502 ;; Defined at:
  2503 ;;		line 97 in file "LCD_LIB.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2517 ;;      Params:         0       0       0       0       0       0       0       0       0
  2518 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2519 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2520 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2521 ;;Total ram usage:        1 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 3
  2524 ;; This function calls:
  2525 ;;		_lcd_command
  2526 ;; This function is called by:
  2527 ;;		_menuPPAL
  2528 ;;		_menuSelM
  2529 ;;		_menuM1
  2530 ;;		_menuM2
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text11
  2535  00150E                     __ptext11:
  2536                           	callstack 0
  2537  00150E                     _lcd_clear:
  2538                           	callstack 26
  2539  00150E                     
  2540                           ;LCD_LIB.c: 98:  lcd_command(0x01);
  2541  00150E  0E01               	movlw	1
  2542  001510  ECC2  F00A         	call	_lcd_command
  2543  001514                     
  2544                           ;LCD_LIB.c: 99:  _delay((unsigned long)((2)*(20000000UL/4000.0)));
  2545  001514  0E0D               	movlw	13
  2546  001516  6E1F               	movwf	??_lcd_clear^0,c
  2547  001518  0EFC               	movlw	252
  2548  00151A                     u767:
  2549  00151A  2EE8               	decfsz	wreg,f,c
  2550  00151C  D7FE               	bra	u767
  2551  00151E  2E1F               	decfsz	??_lcd_clear^0,f,c
  2552  001520  D7FC               	bra	u767
  2553  001522  0012               	return		;funcret
  2554  001524                     __end_of_lcd_clear:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function _lcd_char *****************
  2558 ;; Defined at:
  2559 ;;		line 164 in file "LCD_LIB.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  row             1    wreg     unsigned char 
  2562 ;;  col             1   10[COMRAM] unsigned char 
  2563 ;;  letra           1   11[COMRAM] unsigned char 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  row             1   12[COMRAM] unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2575 ;;      Params:         2       0       0       0       0       0       0       0       0
  2576 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2578 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2579 ;;Total ram usage:        3 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 4
  2582 ;; This function calls:
  2583 ;;		_lcd_set_cursor
  2584 ;;		_lcd_write
  2585 ;; This function is called by:
  2586 ;;		_menuPPAL
  2587 ;;		_menuSelM
  2588 ;;		_menuM1
  2589 ;;		_menuM2
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text12
  2594  00153A                     __ptext12:
  2595                           	callstack 0
  2596  00153A                     _lcd_char:
  2597                           	callstack 25
  2598                           
  2599                           ;incstack = 0
  2600                           ;lcd_char@row stored from wreg
  2601  00153A  6E25               	movwf	lcd_char@row^0,c
  2602  00153C                     
  2603                           ;LCD_LIB.c: 165:     lcd_set_cursor(row,col);
  2604  00153C  C023  F01F         	movff	lcd_char@col,lcd_set_cursor@col
  2605  001540  5025               	movf	lcd_char@row^0,w,c
  2606  001542  EC96  F009         	call	_lcd_set_cursor
  2607                           
  2608                           ;LCD_LIB.c: 166:     lcd_write(letra);
  2609  001546  5024               	movf	lcd_char@letra^0,w,c
  2610  001548  ECBB  F00A         	call	_lcd_write
  2611  00154C  0012               	return		;funcret
  2612  00154E                     __end_of_lcd_char:
  2613                           	callstack 0
  2614                           
  2615 ;; *************** function _lcd_write *****************
  2616 ;; Defined at:
  2617 ;;		line 33 in file "LCD_LIB.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  letra           1    wreg     unsigned char 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  letra           1    5[COMRAM] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2631 ;;      Params:         0       0       0       0       0       0       0       0       0
  2632 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2634 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2635 ;;Total ram usage:        1 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; Hardware stack levels required when called: 2
  2638 ;; This function calls:
  2639 ;;		__send_byte
  2640 ;; This function is called by:
  2641 ;;		_lcd_out
  2642 ;;		_lcd_char
  2643 ;;		_lcd_puts
  2644 ;;		_lcd_custom_char
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text13
  2649  001576                     __ptext13:
  2650                           	callstack 0
  2651  001576                     _lcd_write:
  2652                           	callstack 26
  2653                           
  2654                           ;incstack = 0
  2655                           ;lcd_write@letra stored from wreg
  2656  001576  6E1E               	movwf	lcd_write@letra^0,c
  2657  001578                     
  2658                           ;LCD_LIB.c: 34:     _send_byte(letra,1);
  2659  001578  0E01               	movlw	1
  2660  00157A  6E1A               	movwf	__send_byte@mode^0,c
  2661  00157C  501E               	movf	lcd_write@letra^0,w,c
  2662  00157E  EC06  F00A         	call	__send_byte
  2663  001582  0012               	return		;funcret
  2664  001584                     __end_of_lcd_write:
  2665                           	callstack 0
  2666                           
  2667 ;; *************** function _lcd_set_cursor *****************
  2668 ;; Defined at:
  2669 ;;		line 86 in file "LCD_LIB.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  row             1    wreg     unsigned char 
  2672 ;;  col             1    6[COMRAM] unsigned char 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  row             1    9[COMRAM] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2684 ;;      Params:         1       0       0       0       0       0       0       0       0
  2685 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2686 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2687 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2688 ;;Total ram usage:        4 bytes
  2689 ;; Hardware stack levels used: 1
  2690 ;; Hardware stack levels required when called: 3
  2691 ;; This function calls:
  2692 ;;		_lcd_command
  2693 ;; This function is called by:
  2694 ;;		_lcd_out
  2695 ;;		_lcd_char
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text14
  2700  00132C                     __ptext14:
  2701                           	callstack 0
  2702  00132C                     _lcd_set_cursor:
  2703                           	callstack 25
  2704                           
  2705                           ;incstack = 0
  2706                           ;lcd_set_cursor@row stored from wreg
  2707  00132C  6E22               	movwf	lcd_set_cursor@row^0,c
  2708  00132E                     
  2709                           ;LCD_LIB.c: 88:  switch(row){
  2710  00132E  EFB1  F009         	goto	l1589
  2711  001332                     l1579:
  2712  001332  501F               	movf	lcd_set_cursor@col^0,w,c
  2713  001334  0F7F               	addlw	127
  2714  001336  ECC2  F00A         	call	_lcd_command
  2715  00133A  EFCE  F009         	goto	l262
  2716  00133E                     l1581:
  2717  00133E  501F               	movf	lcd_set_cursor@col^0,w,c
  2718  001340  0FBF               	addlw	191
  2719  001342  ECC2  F00A         	call	_lcd_command
  2720  001346  EFCE  F009         	goto	l262
  2721  00134A                     l1583:
  2722  00134A  501F               	movf	lcd_set_cursor@col^0,w,c
  2723  00134C  0F93               	addlw	147
  2724  00134E  ECC2  F00A         	call	_lcd_command
  2725  001352  EFCE  F009         	goto	l262
  2726  001356                     l1585:
  2727  001356  501F               	movf	lcd_set_cursor@col^0,w,c
  2728  001358  0FD3               	addlw	211
  2729  00135A  ECC2  F00A         	call	_lcd_command
  2730  00135E  EFCE  F009         	goto	l262
  2731  001362                     l1589:
  2732  001362  5022               	movf	lcd_set_cursor@row^0,w,c
  2733  001364  6E20               	movwf	??_lcd_set_cursor^0,c
  2734  001366  6A21               	clrf	(??_lcd_set_cursor+1)^0,c
  2735                           
  2736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2737                           ; Switch size 1, requested type "simple"
  2738                           ; Number of cases is 1, Range of values is 0 to 0
  2739                           ; switch strategies available:
  2740                           ; Name         Instructions Cycles
  2741                           ; simple_byte            4     3 (average)
  2742                           ;	Chosen strategy is simple_byte
  2743  001368  5021               	movf	(??_lcd_set_cursor+1)^0,w,c
  2744  00136A  0A00               	xorlw	0	; case 0
  2745  00136C  B4D8               	btfsc	status,2,c
  2746  00136E  EFBB  F009         	goto	l2063
  2747  001372  EFCE  F009         	goto	l262
  2748  001376                     l2063:
  2749                           
  2750                           ; Switch size 1, requested type "simple"
  2751                           ; Number of cases is 4, Range of values is 1 to 4
  2752                           ; switch strategies available:
  2753                           ; Name         Instructions Cycles
  2754                           ; simple_byte           13     7 (average)
  2755                           ;	Chosen strategy is simple_byte
  2756  001376  5020               	movf	??_lcd_set_cursor^0,w,c
  2757  001378  0A01               	xorlw	1	; case 1
  2758  00137A  B4D8               	btfsc	status,2,c
  2759  00137C  EF99  F009         	goto	l1579
  2760  001380  0A03               	xorlw	3	; case 2
  2761  001382  B4D8               	btfsc	status,2,c
  2762  001384  EF9F  F009         	goto	l1581
  2763  001388  0A01               	xorlw	1	; case 3
  2764  00138A  B4D8               	btfsc	status,2,c
  2765  00138C  EFA5  F009         	goto	l1583
  2766  001390  0A07               	xorlw	7	; case 4
  2767  001392  B4D8               	btfsc	status,2,c
  2768  001394  EFAB  F009         	goto	l1585
  2769  001398  EFCE  F009         	goto	l262
  2770  00139C                     l262:
  2771  00139C  0012               	return		;funcret
  2772  00139E                     __end_of_lcd_set_cursor:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function _girarMA_Izquierda *****************
  2776 ;; Defined at:
  2777 ;;		line 112 in file "config.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		None
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2791 ;;      Params:         0       0       0       0       0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2794 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_menuM1
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text15
  2805  0015AA                     __ptext15:
  2806                           	callstack 0
  2807  0015AA                     _girarMA_Izquierda:
  2808                           	callstack 29
  2809  0015AA                     
  2810                           ;config.c: 113:     PORTDbits.RD2 = 0;
  2811  0015AA  9483               	bcf	131,2,c	;volatile
  2812                           
  2813                           ;config.c: 114:     PORTBbits.RB4 = 1;
  2814  0015AC  8881               	bsf	129,4,c	;volatile
  2815  0015AE  0012               	return		;funcret
  2816  0015B0                     __end_of_girarMA_Izquierda:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _girarMA_Derecha *****************
  2820 ;; Defined at:
  2821 ;;		line 108 in file "config.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		None
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_menuM1
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text16
  2849  0015B0                     __ptext16:
  2850                           	callstack 0
  2851  0015B0                     _girarMA_Derecha:
  2852                           	callstack 29
  2853  0015B0                     
  2854                           ;config.c: 109:     PORTDbits.RD2 = 1;
  2855  0015B0  8483               	bsf	131,2,c	;volatile
  2856                           
  2857                           ;config.c: 110:     PORTBbits.RB4 = 0;
  2858  0015B2  9881               	bcf	129,4,c	;volatile
  2859  0015B4  0012               	return		;funcret
  2860  0015B6                     __end_of_girarMA_Derecha:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _SystemInit *****************
  2864 ;; Defined at:
  2865 ;;		line 92 in file "config.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2882 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 4
  2886 ;; This function calls:
  2887 ;;		_ADC_Init
  2888 ;;		_lcd_disable_blink
  2889 ;;		_lcd_disable_cursor
  2890 ;;		_lcd_init
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text17
  2897  0014D2                     __ptext17:
  2898                           	callstack 0
  2899  0014D2                     _SystemInit:
  2900                           	callstack 26
  2901  0014D2                     
  2902                           ;config.c: 93:     ADCON1 = 12;
  2903  0014D2  0E0C               	movlw	12
  2904  0014D4  6EC1               	movwf	193,c	;volatile
  2905  0014D6                     
  2906                           ;config.c: 94:     ADC_Init();
  2907  0014D6  EC92  F00A         	call	_ADC_Init	;wreg free
  2908  0014DA                     
  2909                           ;config.c: 95:     lcd_init();
  2910  0014DA  EC1D  F009         	call	_lcd_init	;wreg free
  2911  0014DE                     
  2912                           ;config.c: 96:     lcd_disable_blink();
  2913  0014DE  ECB1  F00A         	call	_lcd_disable_blink	;wreg free
  2914  0014E2                     
  2915                           ;config.c: 97:     lcd_disable_cursor();
  2916  0014E2  ECA7  F00A         	call	_lcd_disable_cursor	;wreg free
  2917  0014E6                     
  2918                           ;config.c: 98:     TRISBbits.TRISB0 = 1;
  2919  0014E6  8093               	bsf	147,0,c	;volatile
  2920  0014E8                     
  2921                           ;config.c: 99:     TRISBbits.TRISB1 = 1;
  2922  0014E8  8293               	bsf	147,1,c	;volatile
  2923  0014EA                     
  2924                           ;config.c: 100:     TRISBbits.TRISB2 = 1;
  2925  0014EA  8493               	bsf	147,2,c	;volatile
  2926  0014EC                     
  2927                           ;config.c: 101:     TRISDbits.TRISD2 = 0;
  2928  0014EC  9495               	bcf	149,2,c	;volatile
  2929  0014EE                     
  2930                           ;config.c: 102:     TRISBbits.TRISB4 = 0;
  2931  0014EE  9893               	bcf	147,4,c	;volatile
  2932  0014F0                     
  2933                           ;config.c: 103:     TRISBbits.TRISB5 = 0;
  2934  0014F0  9A93               	bcf	147,5,c	;volatile
  2935  0014F2                     
  2936                           ;config.c: 104:     TRISBbits.TRISB6 = 0;
  2937  0014F2  9C93               	bcf	147,6,c	;volatile
  2938  0014F4  0012               	return		;funcret
  2939  0014F6                     __end_of_SystemInit:
  2940                           	callstack 0
  2941                           
  2942 ;; *************** function _lcd_init *****************
  2943 ;; Defined at:
  2944 ;;		line 40 in file "LCD_LIB.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2, status,0, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2958 ;;      Params:         0       0       0       0       0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2960 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2961 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2962 ;;Total ram usage:        1 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 3
  2965 ;; This function calls:
  2966 ;;		__write_nibble
  2967 ;;		_lcd_command
  2968 ;; This function is called by:
  2969 ;;		_SystemInit
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text18
  2974  00123A                     __ptext18:
  2975                           	callstack 0
  2976  00123A                     _lcd_init:
  2977                           	callstack 26
  2978  00123A                     
  2979                           ;LCD_LIB.c: 42:     TRISD &= ~( (1<<0)|
  2980  00123A  0E0C               	movlw	12
  2981  00123C  1695               	andwf	149,f,c	;volatile
  2982                           
  2983                           ;LCD_LIB.c: 49:     PORTD &= ~( (1<<0)|
  2984  00123E  0E0C               	movlw	12
  2985  001240  1683               	andwf	131,f,c	;volatile
  2986  001242                     
  2987                           ;LCD_LIB.c: 58:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
  2988  001242  0E62               	movlw	98
  2989  001244  6E1F               	movwf	??_lcd_init^0,c
  2990  001246  0E66               	movlw	102
  2991  001248                     u777:
  2992  001248  2EE8               	decfsz	wreg,f,c
  2993  00124A  D7FE               	bra	u777
  2994  00124C  2E1F               	decfsz	??_lcd_init^0,f,c
  2995  00124E  D7FC               	bra	u777
  2996  001250                     
  2997                           ;LCD_LIB.c: 59:     _write_nibble(0x03);
  2998  001250  0E03               	movlw	3
  2999  001252  ECCF  F009         	call	__write_nibble
  3000  001256                     
  3001                           ;LCD_LIB.c: 60:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  3002  001256  0E21               	movlw	33
  3003  001258  6E1F               	movwf	??_lcd_init^0,c
  3004  00125A  0E76               	movlw	118
  3005  00125C                     u787:
  3006  00125C  2EE8               	decfsz	wreg,f,c
  3007  00125E  D7FE               	bra	u787
  3008  001260  2E1F               	decfsz	??_lcd_init^0,f,c
  3009  001262  D7FC               	bra	u787
  3010  001264  D000               	nop2	
  3011  001266                     
  3012                           ;LCD_LIB.c: 61:     _write_nibble(0x03);
  3013  001266  0E03               	movlw	3
  3014  001268  ECCF  F009         	call	__write_nibble
  3015  00126C                     
  3016                           ;LCD_LIB.c: 62:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  3017  00126C  0EA6               	movlw	166
  3018  00126E                     u797:
  3019  00126E  2EE8               	decfsz	wreg,f,c
  3020  001270  D7FE               	bra	u797
  3021  001272  D000               	nop2	
  3022  001274                     
  3023                           ;LCD_LIB.c: 63:     _write_nibble(0x03);
  3024  001274  0E03               	movlw	3
  3025  001276  ECCF  F009         	call	__write_nibble
  3026  00127A                     
  3027                           ;LCD_LIB.c: 64:     _write_nibble(0x02);
  3028  00127A  0E02               	movlw	2
  3029  00127C  ECCF  F009         	call	__write_nibble
  3030  001280                     
  3031                           ;LCD_LIB.c: 66:     lcd_command( 0x20 | 0x00 | 0x08 | 0x00 );
  3032  001280  0E28               	movlw	40
  3033  001282  ECC2  F00A         	call	_lcd_command
  3034  001286                     
  3035                           ;LCD_LIB.c: 67:     _delay((unsigned long)((37)*(20000000UL/4000000.0)));
  3036  001286  0E3D               	movlw	61
  3037  001288                     u807:
  3038  001288  2EE8               	decfsz	wreg,f,c
  3039  00128A  D7FE               	bra	u807
  3040  00128C  D000               	nop2	
  3041  00128E                     
  3042                           ;LCD_LIB.c: 69:     _lcd_params = 0x04 | 0x02 | 0x01;
  3043  00128E  0E07               	movlw	7
  3044  001290  6E37               	movwf	__lcd_params^0,c
  3045  001292                     
  3046                           ;LCD_LIB.c: 70:     lcd_command(0x08 | _lcd_params);
  3047  001292  5037               	movf	__lcd_params^0,w,c
  3048  001294  0908               	iorlw	8
  3049  001296  ECC2  F00A         	call	_lcd_command
  3050  00129A                     
  3051                           ;LCD_LIB.c: 71:     _delay((unsigned long)((37)*(20000000UL/4000000.0)));
  3052  00129A  0E3D               	movlw	61
  3053  00129C                     u817:
  3054  00129C  2EE8               	decfsz	wreg,f,c
  3055  00129E  D7FE               	bra	u817
  3056  0012A0  D000               	nop2	
  3057  0012A2                     
  3058                           ;LCD_LIB.c: 73:     lcd_command(0x01);
  3059  0012A2  0E01               	movlw	1
  3060  0012A4  ECC2  F00A         	call	_lcd_command
  3061  0012A8                     
  3062                           ;LCD_LIB.c: 74:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
  3063  0012A8  0E0D               	movlw	13
  3064  0012AA  6E1F               	movwf	??_lcd_init^0,c
  3065  0012AC  0EFC               	movlw	252
  3066  0012AE                     u827:
  3067  0012AE  2EE8               	decfsz	wreg,f,c
  3068  0012B0  D7FE               	bra	u827
  3069  0012B2  2E1F               	decfsz	??_lcd_init^0,f,c
  3070  0012B4  D7FC               	bra	u827
  3071  0012B6  0012               	return		;funcret
  3072  0012B8                     __end_of_lcd_init:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _lcd_disable_cursor *****************
  3076 ;; Defined at:
  3077 ;;		line 133 in file "LCD_LIB.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3091 ;;      Params:         0       0       0       0       0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 3
  3098 ;; This function calls:
  3099 ;;		_lcd_command
  3100 ;; This function is called by:
  3101 ;;		_SystemInit
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text19
  3106  00154E                     __ptext19:
  3107                           	callstack 0
  3108  00154E                     _lcd_disable_cursor:
  3109                           	callstack 26
  3110  00154E                     
  3111                           ;LCD_LIB.c: 134:  _lcd_params &= ~0x02;
  3112  00154E  9237               	bcf	__lcd_params^0,1,c
  3113  001550                     
  3114                           ;LCD_LIB.c: 135:  lcd_command(0x08 |_lcd_params);
  3115  001550  5037               	movf	__lcd_params^0,w,c
  3116  001552  0908               	iorlw	8
  3117  001554  ECC2  F00A         	call	_lcd_command
  3118  001558                     
  3119                           ;LCD_LIB.c: 136:  _delay((unsigned long)((37)*(20000000UL/4000000.0)));
  3120  001558  0E3D               	movlw	61
  3121  00155A                     u837:
  3122  00155A  2EE8               	decfsz	wreg,f,c
  3123  00155C  D7FE               	bra	u837
  3124  00155E  D000               	nop2	
  3125  001560  0012               	return		;funcret
  3126  001562                     __end_of_lcd_disable_cursor:
  3127                           	callstack 0
  3128                           
  3129 ;; *************** function _lcd_disable_blink *****************
  3130 ;; Defined at:
  3131 ;;		line 122 in file "LCD_LIB.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2, status,0, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3145 ;;      Params:         0       0       0       0       0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3148 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; Hardware stack levels required when called: 3
  3152 ;; This function calls:
  3153 ;;		_lcd_command
  3154 ;; This function is called by:
  3155 ;;		_SystemInit
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text20
  3160  001562                     __ptext20:
  3161                           	callstack 0
  3162  001562                     _lcd_disable_blink:
  3163                           	callstack 26
  3164  001562                     
  3165                           ;LCD_LIB.c: 123:  _lcd_params &= ~0x01;
  3166  001562  9037               	bcf	__lcd_params^0,0,c
  3167  001564                     
  3168                           ;LCD_LIB.c: 124:  lcd_command(0x08 |_lcd_params);
  3169  001564  5037               	movf	__lcd_params^0,w,c
  3170  001566  0908               	iorlw	8
  3171  001568  ECC2  F00A         	call	_lcd_command
  3172  00156C                     
  3173                           ;LCD_LIB.c: 125:  _delay((unsigned long)((37)*(20000000UL/4000000.0)));
  3174  00156C  0E3D               	movlw	61
  3175  00156E                     u847:
  3176  00156E  2EE8               	decfsz	wreg,f,c
  3177  001570  D7FE               	bra	u847
  3178  001572  D000               	nop2	
  3179  001574  0012               	return		;funcret
  3180  001576                     __end_of_lcd_disable_blink:
  3181                           	callstack 0
  3182                           
  3183 ;; *************** function _lcd_command *****************
  3184 ;; Defined at:
  3185 ;;		line 36 in file "LCD_LIB.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  cmd             1    wreg     unsigned char 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  cmd             1    5[COMRAM] unsigned char 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3199 ;;      Params:         0       0       0       0       0       0       0       0       0
  3200 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3202 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3203 ;;Total ram usage:        1 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; Hardware stack levels required when called: 2
  3206 ;; This function calls:
  3207 ;;		__send_byte
  3208 ;; This function is called by:
  3209 ;;		_lcd_init
  3210 ;;		_lcd_set_cursor
  3211 ;;		_lcd_clear
  3212 ;;		_lcd_disable_blink
  3213 ;;		_lcd_disable_cursor
  3214 ;;		_lcd_return_home
  3215 ;;		_lcd_on
  3216 ;;		_lcd_off
  3217 ;;		_lcd_enable_blink
  3218 ;;		_lcd_enable_cursor
  3219 ;;		_lcd_scroll_left
  3220 ;;		_lcd_scroll_right
  3221 ;;		_lcd_custom_char
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text21
  3226  001584                     __ptext21:
  3227                           	callstack 0
  3228  001584                     _lcd_command:
  3229                           	callstack 25
  3230                           
  3231                           ;incstack = 0
  3232                           ;lcd_command@cmd stored from wreg
  3233  001584  6E1E               	movwf	lcd_command@cmd^0,c
  3234  001586                     
  3235                           ;LCD_LIB.c: 37:     _send_byte(cmd,0);
  3236  001586  0E00               	movlw	0
  3237  001588  6E1A               	movwf	__send_byte@mode^0,c
  3238  00158A  501E               	movf	lcd_command@cmd^0,w,c
  3239  00158C  EC06  F00A         	call	__send_byte
  3240  001590  0012               	return		;funcret
  3241  001592                     __end_of_lcd_command:
  3242                           	callstack 0
  3243                           
  3244 ;; *************** function __send_byte *****************
  3245 ;; Defined at:
  3246 ;;		line 23 in file "LCD_LIB.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  value           1    wreg     unsigned char 
  3249 ;;  mode            1    1[COMRAM] unsigned char 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  value           1    4[COMRAM] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3261 ;;      Params:         1       0       0       0       0       0       0       0       0
  3262 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3263 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3264 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3265 ;;Total ram usage:        4 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 1
  3268 ;; This function calls:
  3269 ;;		__write_nibble
  3270 ;; This function is called by:
  3271 ;;		_lcd_write
  3272 ;;		_lcd_command
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text22
  3277  00140C                     __ptext22:
  3278                           	callstack 0
  3279  00140C                     __send_byte:
  3280                           	callstack 26
  3281                           
  3282                           ;incstack = 0
  3283                           ;__send_byte@value stored from wreg
  3284  00140C  6E1D               	movwf	__send_byte@value^0,c
  3285  00140E                     
  3286                           ;LCD_LIB.c: 25:     switch(mode){
  3287  00140E  EF0F  F00A         	goto	l1565
  3288  001412                     l1559:
  3289  001412  9083               	bcf	131,0,c	;volatile
  3290  001414  EF24  F00A         	goto	l1567
  3291  001418                     l1561:
  3292  001418  8083               	bsf	131,0,c	;volatile
  3293  00141A  EF24  F00A         	goto	l1567
  3294  00141E                     l1565:
  3295  00141E  501A               	movf	__send_byte@mode^0,w,c
  3296  001420  6E1B               	movwf	??__send_byte^0,c
  3297  001422  6A1C               	clrf	(??__send_byte+1)^0,c
  3298                           
  3299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3300                           ; Switch size 1, requested type "simple"
  3301                           ; Number of cases is 1, Range of values is 0 to 0
  3302                           ; switch strategies available:
  3303                           ; Name         Instructions Cycles
  3304                           ; simple_byte            4     3 (average)
  3305                           ;	Chosen strategy is simple_byte
  3306  001424  501C               	movf	(??__send_byte+1)^0,w,c
  3307  001426  0A00               	xorlw	0	; case 0
  3308  001428  B4D8               	btfsc	status,2,c
  3309  00142A  EF19  F00A         	goto	l2065
  3310  00142E  EF24  F00A         	goto	l1567
  3311  001432                     l2065:
  3312                           
  3313                           ; Switch size 1, requested type "simple"
  3314                           ; Number of cases is 2, Range of values is 0 to 1
  3315                           ; switch strategies available:
  3316                           ; Name         Instructions Cycles
  3317                           ; simple_byte            7     4 (average)
  3318                           ;	Chosen strategy is simple_byte
  3319  001432  501B               	movf	??__send_byte^0,w,c
  3320  001434  0A00               	xorlw	0	; case 0
  3321  001436  B4D8               	btfsc	status,2,c
  3322  001438  EF09  F00A         	goto	l1559
  3323  00143C  0A01               	xorlw	1	; case 1
  3324  00143E  B4D8               	btfsc	status,2,c
  3325  001440  EF0C  F00A         	goto	l1561
  3326  001444  EF24  F00A         	goto	l1567
  3327  001448                     l1567:
  3328                           
  3329                           ;LCD_LIB.c: 29:     _write_nibble(value>>4);
  3330  001448  381D               	swapf	__send_byte@value^0,w,c
  3331  00144A  0B0F               	andlw	15
  3332  00144C  ECCF  F009         	call	__write_nibble
  3333                           
  3334                           ;LCD_LIB.c: 30:     _write_nibble(value&0x0F);
  3335  001450  501D               	movf	__send_byte@value^0,w,c
  3336  001452  0B0F               	andlw	15
  3337  001454  ECCF  F009         	call	__write_nibble
  3338  001458  0012               	return		;funcret
  3339  00145A                     __end_of__send_byte:
  3340                           	callstack 0
  3341                           
  3342 ;; *************** function __write_nibble *****************
  3343 ;; Defined at:
  3344 ;;		line 10 in file "LCD_LIB.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  nibble          1    wreg     unsigned char 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  nibble          1    0[COMRAM] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3358 ;;      Params:         0       0       0       0       0       0       0       0       0
  3359 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3361 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3362 ;;Total ram usage:        1 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		__send_byte
  3368 ;;		_lcd_init
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text23
  3373  00139E                     __ptext23:
  3374                           	callstack 0
  3375  00139E                     __write_nibble:
  3376                           	callstack 26
  3377                           
  3378                           ;incstack = 0
  3379                           ;__write_nibble@nibble stored from wreg
  3380  00139E  6E19               	movwf	__write_nibble@nibble^0,c
  3381  0013A0                     
  3382                           ;LCD_LIB.c: 11:     if( (nibble & 0x01) == 0) PORTD &= ~(1<<4); else PORTD |= (1<<4);
  3383  0013A0  B019               	btfsc	__write_nibble@nibble^0,0,c
  3384  0013A2  EFD5  F009         	goto	u11
  3385  0013A6  EFD7  F009         	goto	u10
  3386  0013AA                     u11:
  3387  0013AA  EFDA  F009         	goto	l1005
  3388  0013AE                     u10:
  3389  0013AE  9883               	bcf	131,4,c	;volatile
  3390  0013B0  EFDB  F009         	goto	l1007
  3391  0013B4                     l1005:
  3392  0013B4  8883               	bsf	131,4,c	;volatile
  3393  0013B6                     l1007:
  3394                           
  3395                           ;LCD_LIB.c: 12:     if( (nibble & 0x02) == 0) PORTD &= ~(1<<5); else PORTD |= (1<<5);
  3396  0013B6  B219               	btfsc	__write_nibble@nibble^0,1,c
  3397  0013B8  EFE0  F009         	goto	u21
  3398  0013BC  EFE2  F009         	goto	u20
  3399  0013C0                     u21:
  3400  0013C0  EFE5  F009         	goto	l1011
  3401  0013C4                     u20:
  3402  0013C4  9A83               	bcf	131,5,c	;volatile
  3403  0013C6  EFE6  F009         	goto	l1013
  3404  0013CA                     l1011:
  3405  0013CA  8A83               	bsf	131,5,c	;volatile
  3406  0013CC                     l1013:
  3407                           
  3408                           ;LCD_LIB.c: 13:     if( (nibble & 0x04) == 0) PORTD &= ~(1<<6); else PORTD |= (1<<6);
  3409  0013CC  B419               	btfsc	__write_nibble@nibble^0,2,c
  3410  0013CE  EFEB  F009         	goto	u31
  3411  0013D2  EFED  F009         	goto	u30
  3412  0013D6                     u31:
  3413  0013D6  EFF0  F009         	goto	l1017
  3414  0013DA                     u30:
  3415  0013DA  9C83               	bcf	131,6,c	;volatile
  3416  0013DC  EFF1  F009         	goto	l1019
  3417  0013E0                     l1017:
  3418  0013E0  8C83               	bsf	131,6,c	;volatile
  3419  0013E2                     l1019:
  3420                           
  3421                           ;LCD_LIB.c: 14:     if( (nibble & 0x08) == 0) PORTD &= ~(1<<7); else PORTD |= (1<<7);
  3422  0013E2  B619               	btfsc	__write_nibble@nibble^0,3,c
  3423  0013E4  EFF6  F009         	goto	u41
  3424  0013E8  EFF8  F009         	goto	u40
  3425  0013EC                     u41:
  3426  0013EC  EFFB  F009         	goto	l1023
  3427  0013F0                     u40:
  3428  0013F0  9E83               	bcf	131,7,c	;volatile
  3429  0013F2  EFFC  F009         	goto	l230
  3430  0013F6                     l1023:
  3431  0013F6  8E83               	bsf	131,7,c	;volatile
  3432  0013F8                     l230:
  3433                           
  3434                           ;LCD_LIB.c: 16:     PORTD &= ~(1<<1);
  3435  0013F8  9283               	bcf	131,1,c	;volatile
  3436                           
  3437                           ;LCD_LIB.c: 17:     PORTD |= (1<<1);
  3438  0013FA  8283               	bsf	131,1,c	;volatile
  3439                           
  3440                           ;LCD_LIB.c: 18:     PORTD &= ~(1<<1);
  3441  0013FC  9283               	bcf	131,1,c	;volatile
  3442  0013FE                     
  3443                           ;LCD_LIB.c: 20:     _delay((unsigned long)((300)*(20000000UL/4000000.0)));
  3444  0013FE  0ED6               	movlw	214
  3445  001400                     u857:
  3446  001400  D000               	nop2	
  3447  001402  D000               	nop2	
  3448  001404  2EE8               	decfsz	wreg,f,c
  3449  001406  D7FC               	bra	u857
  3450  001408  D000               	nop2	
  3451  00140A  0012               	return		;funcret
  3452  00140C                     __end_of__write_nibble:
  3453                           	callstack 0
  3454                           
  3455 ;; *************** function _ADC_Init *****************
  3456 ;; Defined at:
  3457 ;;		line 4 in file "ADC_LIB.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3471 ;;      Params:         0       0       0       0       0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3474 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used: 1
  3477 ;; This function calls:
  3478 ;;		Nothing
  3479 ;; This function is called by:
  3480 ;;		_SystemInit
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text24
  3485  001524                     __ptext24:
  3486                           	callstack 0
  3487  001524                     _ADC_Init:
  3488                           	callstack 29
  3489  001524                     
  3490                           ;ADC_LIB.c: 5:     ADCON1bits.VCFG = 0b00;
  3491  001524  0ECF               	movlw	-49
  3492  001526  16C1               	andwf	193,f,c	;volatile
  3493  001528                     
  3494                           ;ADC_LIB.c: 6:     ADCON2bits.ADFM = 1;
  3495  001528  8EC0               	bsf	192,7,c	;volatile
  3496                           
  3497                           ;ADC_LIB.c: 7:     ADCON2bits.ADCS = 6;
  3498  00152A  50C0               	movf	192,w,c	;volatile
  3499  00152C  0BF8               	andlw	-8
  3500  00152E  0906               	iorlw	6
  3501  001530  6EC0               	movwf	192,c	;volatile
  3502                           
  3503                           ;ADC_LIB.c: 8:     ADCON2bits.ACQT = 7;
  3504  001532  0E38               	movlw	56
  3505  001534  12C0               	iorwf	192,f,c	;volatile
  3506  001536                     
  3507                           ;ADC_LIB.c: 9:     ADCON0bits.ADON = 1;
  3508  001536  80C2               	bsf	194,0,c	;volatile
  3509  001538  0012               	return		;funcret
  3510  00153A                     __end_of_ADC_Init:
  3511                           	callstack 0
  3512                           
  3513                           	psect	rparam
  3514  0000                     
  3515                           	psect	idloc
  3516                           
  3517                           ;Config register IDLOC0 @ 0x200000
  3518                           ;	unspecified, using default values
  3519  200000                     	org	2097152
  3520  200000  FF                 	db	255
  3521                           
  3522                           ;Config register IDLOC1 @ 0x200001
  3523                           ;	unspecified, using default values
  3524  200001                     	org	2097153
  3525  200001  FF                 	db	255
  3526                           
  3527                           ;Config register IDLOC2 @ 0x200002
  3528                           ;	unspecified, using default values
  3529  200002                     	org	2097154
  3530  200002  FF                 	db	255
  3531                           
  3532                           ;Config register IDLOC3 @ 0x200003
  3533                           ;	unspecified, using default values
  3534  200003                     	org	2097155
  3535  200003  FF                 	db	255
  3536                           
  3537                           ;Config register IDLOC4 @ 0x200004
  3538                           ;	unspecified, using default values
  3539  200004                     	org	2097156
  3540  200004  FF                 	db	255
  3541                           
  3542                           ;Config register IDLOC5 @ 0x200005
  3543                           ;	unspecified, using default values
  3544  200005                     	org	2097157
  3545  200005  FF                 	db	255
  3546                           
  3547                           ;Config register IDLOC6 @ 0x200006
  3548                           ;	unspecified, using default values
  3549  200006                     	org	2097158
  3550  200006  FF                 	db	255
  3551                           
  3552                           ;Config register IDLOC7 @ 0x200007
  3553                           ;	unspecified, using default values
  3554  200007                     	org	2097159
  3555  200007  FF                 	db	255
  3556                           
  3557                           	psect	config
  3558                           
  3559                           ;Config register CONFIG1L @ 0x300000
  3560                           ;	PLL Prescaler Selection bits
  3561                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3562                           ;	System Clock Postscaler Selection bits
  3563                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3564                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3565                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3566  300000                     	org	3145728
  3567  300000  00                 	db	0
  3568                           
  3569                           ;Config register CONFIG1H @ 0x300001
  3570                           ;	Oscillator Selection bits
  3571                           ;	FOSC = HS, HS oscillator (HS)
  3572                           ;	Fail-Safe Clock Monitor Enable bit
  3573                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3574                           ;	Internal/External Oscillator Switchover bit
  3575                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3576  300001                     	org	3145729
  3577  300001  0C                 	db	12
  3578                           
  3579                           ;Config register CONFIG2L @ 0x300002
  3580                           ;	Power-up Timer Enable bit
  3581                           ;	PWRT = ON, PWRT enabled
  3582                           ;	Brown-out Reset Enable bits
  3583                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3584                           ;	Brown-out Reset Voltage bits
  3585                           ;	BORV = 3, Minimum setting 2.05V
  3586                           ;	USB Voltage Regulator Enable bit
  3587                           ;	VREGEN = OFF, USB voltage regulator disabled
  3588  300002                     	org	3145730
  3589  300002  18                 	db	24
  3590                           
  3591                           ;Config register CONFIG2H @ 0x300003
  3592                           ;	Watchdog Timer Enable bit
  3593                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3594                           ;	Watchdog Timer Postscale Select bits
  3595                           ;	WDTPS = 32768, 1:32768
  3596  300003                     	org	3145731
  3597  300003  1E                 	db	30
  3598                           
  3599                           ; Padding undefined space
  3600  300004                     	org	3145732
  3601  300004  FF                 	db	255
  3602                           
  3603                           ;Config register CONFIG3H @ 0x300005
  3604                           ;	CCP2 MUX bit
  3605                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3606                           ;	PORTB A/D Enable bit
  3607                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3608                           ;	Low-Power Timer 1 Oscillator Enable bit
  3609                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3610                           ;	MCLR Pin Enable bit
  3611                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3612  300005                     	org	3145733
  3613  300005  81                 	db	129
  3614                           
  3615                           ;Config register CONFIG4L @ 0x300006
  3616                           ;	Stack Full/Underflow Reset Enable bit
  3617                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3618                           ;	Single-Supply ICSP Enable bit
  3619                           ;	LVP = OFF, Single-Supply ICSP disabled
  3620                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3621                           ;	ICPRT = OFF, ICPORT disabled
  3622                           ;	Extended Instruction Set Enable bit
  3623                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3624                           ;	Background Debugger Enable bit
  3625                           ;	DEBUG = 0x1, unprogrammed default
  3626  300006                     	org	3145734
  3627  300006  81                 	db	129
  3628                           
  3629                           ; Padding undefined space
  3630  300007                     	org	3145735
  3631  300007  FF                 	db	255
  3632                           
  3633                           ;Config register CONFIG5L @ 0x300008
  3634                           ;	Code Protection bit
  3635                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3636                           ;	Code Protection bit
  3637                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3638                           ;	Code Protection bit
  3639                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3640                           ;	Code Protection bit
  3641                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3642  300008                     	org	3145736
  3643  300008  0F                 	db	15
  3644                           
  3645                           ;Config register CONFIG5H @ 0x300009
  3646                           ;	Boot Block Code Protection bit
  3647                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3648                           ;	Data EEPROM Code Protection bit
  3649                           ;	CPD = OFF, Data EEPROM is not code-protected
  3650  300009                     	org	3145737
  3651  300009  C0                 	db	192
  3652                           
  3653                           ;Config register CONFIG6L @ 0x30000A
  3654                           ;	Write Protection bit
  3655                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3656                           ;	Write Protection bit
  3657                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3658                           ;	Write Protection bit
  3659                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3660                           ;	Write Protection bit
  3661                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3662  30000A                     	org	3145738
  3663  30000A  0F                 	db	15
  3664                           
  3665                           ;Config register CONFIG6H @ 0x30000B
  3666                           ;	Configuration Register Write Protection bit
  3667                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3668                           ;	Boot Block Write Protection bit
  3669                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3670                           ;	Data EEPROM Write Protection bit
  3671                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3672  30000B                     	org	3145739
  3673  30000B  E0                 	db	224
  3674                           
  3675                           ;Config register CONFIG7L @ 0x30000C
  3676                           ;	Table Read Protection bit
  3677                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3678                           ;	Table Read Protection bit
  3679                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3680                           ;	Table Read Protection bit
  3681                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3682                           ;	Table Read Protection bit
  3683                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3684  30000C                     	org	3145740
  3685  30000C  0F                 	db	15
  3686                           
  3687                           ;Config register CONFIG7H @ 0x30000D
  3688                           ;	Boot Block Table Read Protection bit
  3689                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3690  30000D                     	org	3145741
  3691  30000D  40                 	db	64
  3692                           tosu	equ	0xFFF
  3693                           tosh	equ	0xFFE
  3694                           tosl	equ	0xFFD
  3695                           stkptr	equ	0xFFC
  3696                           pclatu	equ	0xFFB
  3697                           pclath	equ	0xFFA
  3698                           pcl	equ	0xFF9
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           prodh	equ	0xFF4
  3704                           prodl	equ	0xFF3
  3705                           indf0	equ	0xFEF
  3706                           postinc0	equ	0xFEE
  3707                           postdec0	equ	0xFED
  3708                           preinc0	equ	0xFEC
  3709                           plusw0	equ	0xFEB
  3710                           fsr0h	equ	0xFEA
  3711                           fsr0l	equ	0xFE9
  3712                           wreg	equ	0xFE8
  3713                           indf1	equ	0xFE7
  3714                           postinc1	equ	0xFE6
  3715                           postdec1	equ	0xFE5
  3716                           preinc1	equ	0xFE4
  3717                           plusw1	equ	0xFE3
  3718                           fsr1h	equ	0xFE2
  3719                           fsr1l	equ	0xFE1
  3720                           bsr	equ	0xFE0
  3721                           indf2	equ	0xFDF
  3722                           postinc2	equ	0xFDE
  3723                           postdec2	equ	0xFDD
  3724                           preinc2	equ	0xFDC
  3725                           plusw2	equ	0xFDB
  3726                           fsr2h	equ	0xFDA
  3727                           fsr2l	equ	0xFD9
  3728                           status	equ	0xFD8

Data Sizes:
    Strings     210
    Constant    0
    Data        24
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_out@str	PTR unsigned char  size(2) Largest target is 21
		 -> STR_16(CODE[4]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[4]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[4]), STR_7(CODE[17]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[4]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _main->_menuM1
    _main->_menuM2
    _main->_menuPPAL
    _main->_menuSelM
    _menuSelM->_lcd_out
    _menuPPAL->_lcd_out
    _menuM2->_lcd_out
    _menuM1->_lcd_out
    _lcd_out->_lcd_set_cursor
    _lcd_clear->_lcd_command
    _lcd_char->_lcd_set_cursor
    _lcd_write->__send_byte
    _lcd_set_cursor->_lcd_command
    _SystemInit->_lcd_init
    _lcd_init->_lcd_command
    _lcd_disable_cursor->_lcd_command
    _lcd_disable_blink->_lcd_command
    _lcd_command->__send_byte
    __send_byte->__write_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   51628
                                             16 COMRAM     2     2      0
                         _SystemInit
                             _menuM1
                             _menuM2
                           _menuPPAL
                           _menuSelM
                       _menuSensores
 ---------------------------------------------------------------------------------
 (1) _menuSensores                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuSelM                                             2     2      0   12667
                                             14 COMRAM     2     2      0
                           _lcd_char
                          _lcd_clear
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _menuPPAL                                             2     2      0   12667
                                             14 COMRAM     2     2      0
                           _lcd_char
                          _lcd_clear
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _menuM2                                               2     2      0   12667
                                             14 COMRAM     2     2      0
                    _girarMB_Derecha
                  _girarMB_Izquierda
                           _lcd_char
                          _lcd_clear
                            _lcd_out
                            _pararMB
 ---------------------------------------------------------------------------------
 (2) _pararMB                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _girarMB_Izquierda                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _girarMB_Derecha                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuM1                                               2     2      0   12667
                                             14 COMRAM     2     2      0
                    _girarMA_Derecha
                  _girarMA_Izquierda
                           _lcd_char
                          _lcd_clear
                            _lcd_out
                            _pararMA
 ---------------------------------------------------------------------------------
 (2) _pararMA                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_out                                              4     1      3    3383
                                             10 COMRAM     4     1      3
                     _lcd_set_cursor
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     300
                                              6 COMRAM     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             3     1      2    8984
                                             10 COMRAM     3     1      2
                     _lcd_set_cursor
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            1     1      0     300
                                              5 COMRAM     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     3      1     562
                                              6 COMRAM     4     3      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _girarMA_Izquierda                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _girarMA_Derecha                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0     960
                           _ADC_Init
                  _lcd_disable_blink
                 _lcd_disable_cursor
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     360
                                              6 COMRAM     1     1      0
                      __write_nibble
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_disable_cursor                                   0     0      0     300
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_disable_blink                                    0     0      0     300
                        _lcd_command
 ---------------------------------------------------------------------------------
 (4) _lcd_command                                          1     1      0     300
                                              5 COMRAM     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (4) __send_byte                                           4     3      1     278
                                              1 COMRAM     4     3      1
                      __write_nibble
 ---------------------------------------------------------------------------------
 (5) __write_nibble                                        1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SystemInit
     _ADC_Init
     _lcd_disable_blink
       _lcd_command
         __send_byte
           __write_nibble
     _lcd_disable_cursor
       _lcd_command
     _lcd_init
       __write_nibble
       _lcd_command
   _menuM1
     _girarMA_Derecha
     _girarMA_Izquierda
     _lcd_char
       _lcd_set_cursor
         _lcd_command
       _lcd_write
         __send_byte
     _lcd_clear
       _lcd_command
     _lcd_out
       _lcd_set_cursor
       _lcd_write
     _pararMA
   _menuM2
     _girarMB_Derecha
     _girarMB_Izquierda
     _lcd_char
     _lcd_clear
     _lcd_out
     _pararMB
   _menuPPAL
     _lcd_char
     _lcd_clear
     _lcd_out
   _menuSelM
     _lcd_char
     _lcd_clear
     _lcd_out
   _menuSensores

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      37       1       57.9%
BITBIGSFRhh         3B      0       0      21        0.0%
BITBIGSFRlhh        2A      0       0      22        0.0%
BITBIGSFRllll       21      0       0      26        0.0%
BITBIGSFRllh         F      0       0      24        0.0%
BITBIGSFRlllh        1      0       0      25        0.0%
BITBIGSFRlhl         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37       3        0.0%
DATA                 0      0      37       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Mar 31 10:59:58 2023

               lcd_char@col 0023                 lcd_char@row 0025                          l72 14F4  
                        l81 15A8                          l90 1596                          l75 15B4  
                        l84 15A2                          l78 15AE                          l87 159C  
                        u10 13AE                          u11 13AA                          u20 13C4  
                        u21 13C0                          u30 13DA                          u31 13D6  
                        u40 13F0                          u41 13EC               lcd_char@letra 0024  
                       l200 0B02                         l112 1182                         l104 1120  
                       l107 112E                         l124 1238                         l212 15B6  
                       l117 11D6                         l133 0F48                         l230 13F8  
                       l231 140A                         l303 149A                         l143 0FF0  
                       l151 1066                         l241 1582                         l161 0D08  
                       l209 0B80                         l129 0F3A                         l306 154C  
                       l138 0F9C                         l171 0DB0                         l244 1590  
                       l180 0E2E                         l156 0CFA                         l238 1458  
                       l262 139C                         l166 0D5C                         l190 0A5A  
                       l319 1538                         l247 12B6                         l280 1574  
                       l265 1522                         l185 0A4C                         l195 0AAE  
                       l286 1560                         u410 149A                         u411 1496  
                       u420 112E                         u500 0F48                         u421 112A  
                       u501 0F44                         u430 113C                         u510 0F56  
                       u431 1138                         u511 0F52                         u600 0D36  
                       u440 115C                         u520 0F76                         u601 0D32  
                       u441 1158                         u521 0F72                         u610 0D5C  
                       u450 1182                         u530 0F9C                         u611 0D58  
                       u451 117E                         u531 0F98                         u620 0D6A  
                       u700 0ABC                         u460 1190                         u540 0FAA  
                       u621 0D66                         u701 0AB8                         u461 118C  
                       u541 0FA6                         u630 0D8A                         u710 0ADC  
                       u470 11B0                         u550 0FCA                         u631 0D86  
                       u711 0AD8                         u471 11AC                         u551 0FC6  
                       u640 0DB0                         u720 0B02                         u480 11D6  
                       u560 0FF0                         u641 0DAC                         u721 0AFE  
                       u481 11D2                         u561 0FEC                         u650 0DBE  
                       u730 0B10                         u490 11E4                         u570 0FFE  
                       u651 0DBA                         u731 0B0C                         u491 11E0  
                       u571 0FFA                         u580 0D08                         u660 0A5A  
                       u581 0D04                         u661 0A56                         u590 0D16  
                       u670 0A68                         u807 1288                         u591 0D12  
                       u671 0A64                         u680 0A88                         u817 129C  
                       u681 0A84                         u690 0AAE                         u827 12AE  
                       u691 0AAA                         u837 155A                         u847 156E  
                       u767 151A                         u857 1400                         u777 1248  
                       u787 125C                         u797 126E                         _mcp 002F  
                       _pot 0033                         wreg 000FE8             ?_lcd_set_cursor 001F  
                      l1001 13A0                        l1011 13CA                        l1003 13AE  
                      l1021 13F0                        l1013 13CC                        l1005 13B4  
                      l1023 13F6                        l1015 13DA                        l1007 13B6  
                      l1025 13FE                        l1017 13E0                        l1009 13C4  
                      l1113 15B0                        l1121 1598                        l1019 13E2  
                      l1115 15AA                        l1123 1592                        l1117 15A4  
                      l1119 159E                        l1065 1524                        l1067 1528  
                      l2051 110A                        l1069 1536                        l2061 0DFC  
                      l2053 1216                        l2045 12FA                        l2063 1376  
                      l2055 0A26                        l2047 0F1C                        l2065 1432  
                      l1601 1256                        l2057 0B4E                        l2049 103C  
                      l1611 1280                        l1603 1266                        l2059 0CD4  
                      l1621 12A2                        l1613 1286                        l1605 126C  
                      l1701 1196                        l1631 154E                        l1623 12A8  
                      l1615 128E                        l1607 1274                        l1711 11E8  
                      l1703 11B0                        l1561 1418                        l1625 1562  
                      l1633 1550                        l1617 1292                        l1609 127A  
                      l1641 147A                        l1721 1230                        l1713 11F4  
                      l1705 11B8                        l1627 1564                        l1635 1558  
                      l1619 129A                        l1651 14D2                        l1643 147E  
                      l1811 0D36                        l1803 0CBE                        l1707 11C8  
                      l1731 0E30                        l1565 141E                        l1557 140E  
                      l1573 1586                        l1629 156C                        l1661 14E6  
                      l1653 14D6                        l1581 133E                        l1645 153C  
                      l1637 145C                        l1821 0D70                        l1813 0D3E  
                      l1901 0B2C                        l1717 1200                        l1733 0E7C  
                      l1741 0F06                        l1567 1448                        l1559 1412  
                      l1671 14F0                        l1663 14E8                        l1655 14DA  
                      l1583 134A                        l1575 1578                        l1647 150E  
                      l1639 146A                        l1831 0DC2                        l1823 0D8A  
                      l1807 0D16                        l1815 0D4E                        l1719 122C  
                      l1751 0F7E                        l1735 0EAA                        l1673 14F2  
                      l1665 14EA                        l1657 14DE                        l1585 1356  
                      l1577 132E                        l1649 1514                        l1833 0DCA  
                      l1841 0DE6                        l1825 0D92                        l1809 0D1A  
                      l1905 0B38                        l1761 0FCA                        l1745 0F56  
                      l1753 0F8E                        l1737 0ED8                        l1921 12C0  
                      l1595 123A                        l1667 14EC                        l1659 14E2  
                      l1579 1332                        l1835 0DD2                        l1843 0E22  
                      l1819 0D6A                        l1827 0DA2                        l1907 0B74  
                      l1691 115C                        l1683 10F4                        l1675 1068  
                      l1771 100E                        l1763 0FD2                        l1747 0F5A  
                      l1923 12C8                        l1597 1242                        l1669 14EE  
                      l1589 1362                        l1845 0E26                        l1837 0DDA  
                      l1909 0B78                        l1861 0998                        l1693 1164  
                      l1677 10B4                        l1781 105E                        l1773 101A  
                      l1757 0FAA                        l1765 0FE2                        l1749 0F76  
                      l1925 12D0                        l1933 12E4                        l1599 1250  
                      l1791 0B82                        l1871 0A68                        l1863 09D4  
                      l1855 08D4                        l1687 113C                        l1695 1174  
                      l1679 10D4                        l1759 0FB0                        l1927 12D8  
                      l1919 12B8                        l1793 0BCE                        l1873 0A6C  
                      l1857 0920                        l1689 1140                        l1769 1002  
                      l1777 1026                        l1929 12E0                        l1795 0C0A  
                      l1883 0ABC                        l1891 0AF4                        l1875 0A88  
                      l1859 095C                        l1867 0A10                        l1699 1190  
                      l1779 105A                        l1797 0C46                        l1885 0AC2  
                      l1877 0A90                        l1799 0C82                        l1895 0B14  
                      l1887 0ADC                        l1879 0AA0                        l1897 0B1C  
                      l1889 0AE4                        l1899 0B24                        STR_1 087F  
                      STR_2 0801                        STR_3 0816                        STR_4 08CF  
                      STR_5 086A                        STR_6 0855                        STR_7 08BE  
                      STR_8 08CF                        STR_9 082B                        _lm35 002B  
                      _main 12B8                        fsr1l 000FE1            __end_of_ADC_Init 153A  
                      start 0000               __write_nibble 139E                ___param_bank 000000  
          ?_girarMA_Derecha 0019            ?_girarMB_Derecha 0019                       ?_main 0019  
                     STR_10 08A9                       STR_11 0894                       STR_12 08CF  
                     STR_13 0840                       STR_14 08A9                       STR_15 0894  
                     STR_16 08CF                       _PORTD 000F83                       _TRISD 000F95  
           __end_of_lcd_out 149C             __end_of_pararMA 15AA             __end_of_pararMB 1598  
                     tablat 000FF5                       status 000FD8              ?__write_nibble 0019  
           __initialization 149C                __end_of_main 132C                      ??_main 0029  
             __activetblptr 000002              lcd_command@cmd 001E                      _ADCON1 000FC1  
                    _ADRESH 000FC4                      _ADRESL 000FC3               ?_menuSensores 0019  
          __end_of_lcd_char 154E            __end_of_lcd_init 12B8            __end_of_menuPPAL 123A  
                    _menuM1 0B82                      _menuM2 08D4            __end_of_menuSelM 1068  
                    _menuOp 0015                      clear_0 14C2                      isa$std 000001  
                    _strLCD 0001                   ??_lcd_out 0026                   ??_pararMA 0019  
                 ??_pararMB 0019                __pdataCOMRAM 0001                   ?_ADC_Init 0019  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                  __accesstop 0060     __end_of__initialization 14C8  
           ??__write_nibble 0019              ??_menuSensores 0019               ___rparam_used 000001  
            __pcstackCOMRAM 0019            ??_lcd_set_cursor 0020                  _SystemInit 14D2  
                ??_ADC_Init 0019                  __send_byte 140C                     ?_menuM1 0019  
                   ?_menuM2 0019           _girarMA_Izquierda 15AA          ?_girarMA_Izquierda 0019  
         _girarMB_Izquierda 1598           _lcd_disable_blink 1562         ??_girarMA_Izquierda 0019  
        ?_girarMB_Izquierda 0019                   ?_lcd_char 0023          ?_lcd_disable_blink 0019  
                 ?_lcd_init 0019                   ?_menuPPAL 0019                   ?_menuSelM 0019  
       ??_girarMB_Izquierda 0019         ??_lcd_disable_blink 001F                     __Hparam 0000  
                   __Lparam 0000           __end_of_lcd_clear 1524   __end_of_girarMA_Izquierda 15B0  
         __end_of_lcd_write 1584                __psmallconst 0800                     __pcinit 149C  
                   __ramtop 0800                     __ptext0 12B8                     __ptext1 15B6  
                   __ptext2 0E30                     __ptext3 1068                     __ptext4 08D4  
                   __ptext5 1592                     __ptext6 1598                     __ptext7 159E  
                   __ptext8 0B82                     __ptext9 15A4                     _lcd_out 145A  
      __end_of_menuSensores 15B8   __end_of_girarMB_Izquierda 159E   __end_of_lcd_disable_blink 1576  
                   _pararMA 15A4                     _pararMB 1592                 ?_SystemInit 0019  
          __send_byte@value 001D                  ??_lcd_char 0025                  ??_lcd_init 001F  
      end_of_initialization 14C8  __end_of_lcd_disable_cursor 1562                  ??_menuPPAL 0027  
                ??_menuSelM 0027               __Lmediumconst 0000                 ?__send_byte 001A  
                   postdec1 000FE5                     postinc0 000FEE                   _PORTBbits 000F81  
                 _PORTDbits 000F83                   _TRISBbits 000F93                   _TRISDbits 000F95  
            lcd_write@letra 001E                  lcd_out@col 0023                  lcd_out@row 0026  
                lcd_out@str 0024               ??_lcd_command 001E               __pidataCOMRAM 14F6  
            __end_of_menuM1 0E30              __end_of_menuM2 0B82         start_initialization 149C  
         ??_girarMA_Derecha 0019           ??_girarMB_Derecha 0019                 __lcd_params 0037  
     __end_of__write_nibble 140C         __end_of_lcd_command 1592                    ??_menuM1 0027  
                  ??_menuM2 0027                 __pbssCOMRAM 002B                _menuSensores 15B6  
                 _lcd_clear 150E                   _lcd_write 1576                    ?_lcd_out 0023  
               __smallconst 0800                    ?_pararMA 0019                    ?_pararMB 0019  
              ??_SystemInit 0020                    _ADC_Init 1524             __send_byte@mode 001A  
               _lcd_command 1584                ??__send_byte 001B          __end_of_SystemInit 14F6  
        _lcd_disable_cursor 154E                  ?_lcd_clear 0019                  _ADCON0bits 000FC2  
                _ADCON1bits 000FC1                  _ADCON2bits 000FC0         ?_lcd_disable_cursor 0019  
                ?_lcd_write 0019                   copy_data0 14B0          __end_of__send_byte 145A  
      ??_lcd_disable_cursor 001F                    __Hrparam 0000                    __Lrparam 0000  
           _girarMA_Derecha 15B0             _girarMB_Derecha 159E                 _currentMenu 0017  
                  __ptext10 145A                    __ptext11 150E                    __ptext20 1562  
                  __ptext12 153A                    __ptext21 1584                    __ptext13 1576  
                  __ptext22 140C                    __ptext14 132C                    __ptext23 139E  
                  __ptext15 15AA                    __ptext24 1524                    __ptext16 15B0  
                  __ptext17 14D2                    __ptext18 123A                    __ptext19 154E  
                  _lcd_char 153A                    _lcd_init 123A                    _menuPPAL 1068  
                  _menuSelM 0E30                    isa$xinst 000000                 ??_lcd_clear 001F  
               ??_lcd_write 001E        __write_nibble@nibble 0019              _lcd_set_cursor 132C  
         lcd_set_cursor@col 001F           lcd_set_cursor@row 0022     __end_of_girarMA_Derecha 15B6  
   __end_of_girarMB_Derecha 15A4      __end_of_lcd_set_cursor 139E                ?_lcd_command 0019  
