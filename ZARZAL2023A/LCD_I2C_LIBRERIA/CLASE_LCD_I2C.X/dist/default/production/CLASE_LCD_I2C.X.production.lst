

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 09 09:46:57 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  000ACC                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _LED_STATUS
    72  000ACC  08                 	db	8
    73  0000                     _SSPCON2bits	set	4037
    74  0000                     _SSPSTAT	set	4039
    75  0000                     _TRISBbits	set	3987
    76  0000                     _ADCON1	set	4033
    77  0000                     _SSPCON2	set	4037
    78  0000                     _SSPCON1bits	set	4038
    79  0000                     _SSPSTATbits	set	4039
    80  0000                     _SSPBUF	set	4041
    81  0000                     _SSPADD	set	4040
    82                           
    83                           	psect	smallconst
    84  000800                     __psmallconst:
    85                           	callstack 0
    86  000800  00                 	db	0
    87  000801                     STR_1:
    88  000801  48                 	db	72	;'H'
    89  000802  6F                 	db	111	;'o'
    90  000803  6C                 	db	108	;'l'
    91  000804  61                 	db	97	;'a'
    92  000805  20                 	db	32
    93  000806  55                 	db	85	;'U'
    94  000807  4E                 	db	78	;'N'
    95  000808  49                 	db	73	;'I'
    96  000809  56                 	db	86	;'V'
    97  00080A  41                 	db	65	;'A'
    98  00080B  4C                 	db	76	;'L'
    99  00080C  4C                 	db	76	;'L'
   100  00080D  45                 	db	69	;'E'
   101  00080E  00                 	db	0
   102  00080F                     STR_2:
   103  00080F  5A                 	db	90	;'Z'
   104  000810  61                 	db	97	;'a'
   105  000811  72                 	db	114	;'r'
   106  000812  7A                 	db	122	;'z'
   107  000813  61                 	db	97	;'a'
   108  000814  6C                 	db	108	;'l'
   109  000815  00                 	db	0
   110  000816  00                 	db	0	; dummy byte at the end
   111  0000                     
   112                           ; #config settings
   113                           
   114                           	psect	cinit
   115  000A4A                     __pcinit:
   116                           	callstack 0
   117  000A4A                     start_initialization:
   118                           	callstack 0
   119  000A4A                     __initialization:
   120                           	callstack 0
   121                           
   122                           ; Initialize objects allocated to COMRAM (1 bytes)
   123                           ; load TBLPTR registers with __pidataCOMRAM
   124  000A4A  0ECC               	movlw	low __pidataCOMRAM
   125  000A4C  6EF6               	movwf	tblptrl,c
   126  000A4E  0E0A               	movlw	high __pidataCOMRAM
   127  000A50  6EF7               	movwf	tblptrh,c
   128  000A52  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   129  000A54  6EF8               	movwf	tblptru,c
   130  000A56  0009               	tblrd		*+	;fetch initializer
   131  000A58  CFF5 F012          	movff	tablat,__pdataCOMRAM
   132                           
   133                           ; Clear objects allocated to COMRAM (1 bytes)
   134  000A5C  6A11               	clrf	__pbssCOMRAM& (0+255),c
   135  000A5E                     end_of_initialization:
   136                           	callstack 0
   137  000A5E                     __end_of__initialization:
   138                           	callstack 0
   139  000A5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   140  000A60  6EF8               	movwf	tblptru,c
   141  000A62  0100               	movlb	0
   142  000A64  EFB0  F004         	goto	_main	;jump to C main() function
   143                           
   144                           	psect	bssCOMRAM
   145  000011                     __pbssCOMRAM:
   146                           	callstack 0
   147  000011                     __lcd_params:
   148                           	callstack 0
   149  000011                     	ds	1
   150                           
   151                           	psect	dataCOMRAM
   152  000012                     __pdataCOMRAM:
   153                           	callstack 0
   154  000012                     _LED_STATUS:
   155                           	callstack 0
   156  000012                     	ds	1
   157                           
   158                           	psect	cstackCOMRAM
   159  000001                     __pcstackCOMRAM:
   160                           	callstack 0
   161  000001                     ??_I2C_Condiciones_Espera:
   162                           
   163                           ; 1 bytes @ 0x0
   164  000001                     	ds	1
   165  000002                     I2C_Wr@data:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0x1
   169  000002                     	ds	1
   170  000003                     PCF_Wr@dato:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x2
   174  000003                     	ds	1
   175  000004                     loadPCF@mode:
   176                           	callstack 0
   177                           
   178                           ; 1 bytes @ 0x3
   179  000004                     	ds	1
   180  000005                     ??_loadPCF:
   181                           
   182                           ; 1 bytes @ 0x4
   183  000005                     	ds	2
   184  000007                     loadPCF@dato:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x6
   188  000007                     	ds	1
   189  000008                     ??_sendDATA:
   190  000008                     ??_sendCMD:
   191                           
   192                           ; 1 bytes @ 0x7
   193  000008                     	ds	1
   194  000009                     sendDATA@nibbleH:
   195                           	callstack 0
   196  000009                     sendCMD@nibbleH:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x8
   200  000009                     	ds	1
   201  00000A                     sendDATA@nibbleL:
   202                           	callstack 0
   203  00000A                     sendCMD@nibbleL:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0x9
   207  00000A                     	ds	1
   208  00000B                     sendDATA@dato:
   209                           	callstack 0
   210  00000B                     sendCMD@cmd:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0xA
   214  00000B                     	ds	1
   215  00000C                     i2c_lcd_write@letra:
   216                           	callstack 0
   217  00000C                     i2c_lcd_command@cmd:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0xB
   221  00000C                     	ds	1
   222  00000D                     ??_i2c_lcd_init:
   223  00000D                     i2c_lcd_set_cursor@col:
   224                           	callstack 0
   225  00000D                     i2c_lcd_puts@str:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0xC
   229  00000D                     	ds	1
   230  00000E                     ??_i2c_lcd_set_cursor:
   231                           
   232                           ; 1 bytes @ 0xD
   233  00000E                     	ds	1
   234  00000F                     
   235                           ; 1 bytes @ 0xE
   236  00000F                     	ds	1
   237  000010                     i2c_lcd_set_cursor@row:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0xF
   241  000010                     	ds	1
   242  000011                     
   243                           ; 1 bytes @ 0x10
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   246 ;;
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 7 in file "main.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  1    wreg      void 
   256 ;; Registers used:
   257 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   258 ;; Tracked objects:
   259 ;;		On entry : 0/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   263 ;;      Params:         0       0       0       0       0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0       0       0       0       0
   265 ;;      Temps:          0       0       0       0       0       0       0       0       0
   266 ;;      Totals:         0       0       0       0       0       0       0       0       0
   267 ;;Total ram usage:        0 bytes
   268 ;; Hardware stack levels required when called: 7
   269 ;; This function calls:
   270 ;;		_I2C_Init
   271 ;;		_i2c_lcd_init
   272 ;;		_i2c_lcd_puts
   273 ;;		_i2c_lcd_set_cursor
   274 ;; This function is called by:
   275 ;;		Startup code after reset
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           	psect	text0
   280  000960                     __ptext0:
   281                           	callstack 0
   282  000960                     _main:
   283                           	callstack 24
   284  000960                     
   285                           ;main.c: 9:     ADCON1 = 0x0F;
   286  000960  0E0F               	movlw	15
   287  000962  6EC1               	movwf	193,c	;volatile
   288  000964                     
   289                           ;main.c: 11:     I2C_Init();
   290  000964  EC41  F005         	call	_I2C_Init	;wreg free
   291  000968                     
   292                           ;main.c: 12:     i2c_lcd_init();
   293  000968  EC0C  F004         	call	_i2c_lcd_init	;wreg free
   294  00096C                     
   295                           ;main.c: 13:     i2c_lcd_puts("Hola UNIVALLE");
   296  00096C  0E01               	movlw	low STR_1
   297  00096E  6E0D               	movwf	i2c_lcd_puts@str^0,c
   298  000970  0E08               	movlw	high STR_1
   299  000972  6E0E               	movwf	(i2c_lcd_puts@str+1)^0,c
   300  000974  ECCB  F004         	call	_i2c_lcd_puts	;wreg free
   301  000978                     
   302                           ;main.c: 14:     i2c_lcd_set_cursor(2,1);
   303  000978  0E01               	movlw	1
   304  00097A  6E0D               	movwf	i2c_lcd_set_cursor@col^0,c
   305  00097C  0E02               	movlw	2
   306  00097E  EC4A  F004         	call	_i2c_lcd_set_cursor
   307  000982                     
   308                           ;main.c: 15:     i2c_lcd_puts("Zarzal");
   309  000982  0E0F               	movlw	low STR_2
   310  000984  6E0D               	movwf	i2c_lcd_puts@str^0,c
   311  000986  0E08               	movlw	high STR_2
   312  000988  6E0E               	movwf	(i2c_lcd_puts@str+1)^0,c
   313  00098A  ECCB  F004         	call	_i2c_lcd_puts	;wreg free
   314  00098E                     l15:
   315  00098E  EFC7  F004         	goto	l15
   316  000992  EF00  F000         	goto	start
   317  000996                     __end_of_main:
   318                           	callstack 0
   319                           
   320 ;; *************** function _i2c_lcd_set_cursor *****************
   321 ;; Defined at:
   322 ;;		line 92 in file "LCD_I2C_LIB.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;  row             1    wreg     unsigned char 
   325 ;;  col             1   12[COMRAM] unsigned char 
   326 ;; Auto vars:     Size  Location     Type
   327 ;;  row             1   15[COMRAM] unsigned char 
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2, status,0, cstack
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   337 ;;      Params:         1       0       0       0       0       0       0       0       0
   338 ;;      Locals:         1       0       0       0       0       0       0       0       0
   339 ;;      Temps:          2       0       0       0       0       0       0       0       0
   340 ;;      Totals:         4       0       0       0       0       0       0       0       0
   341 ;;Total ram usage:        4 bytes
   342 ;; Hardware stack levels used: 1
   343 ;; Hardware stack levels required when called: 6
   344 ;; This function calls:
   345 ;;		_i2c_lcd_command
   346 ;; This function is called by:
   347 ;;		_main
   348 ;;		_i2c_lcd_out
   349 ;;		_i2c_lcd_char
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           	psect	text1
   354  000894                     __ptext1:
   355                           	callstack 0
   356  000894                     _i2c_lcd_set_cursor:
   357                           	callstack 24
   358                           
   359                           ;incstack = 0
   360                           ;i2c_lcd_set_cursor@row stored from wreg
   361  000894  6E10               	movwf	i2c_lcd_set_cursor@row^0,c
   362  000896                     
   363                           ;LCD_I2C_LIB.c: 94:  switch(row){
   364  000896  EF65  F004         	goto	l1156
   365  00089A                     l1146:
   366  00089A  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   367  00089C  0F7F               	addlw	127
   368  00089E  EC59  F005         	call	_i2c_lcd_command
   369  0008A2  EF82  F004         	goto	l72
   370  0008A6                     l1148:
   371  0008A6  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   372  0008A8  0FBF               	addlw	191
   373  0008AA  EC59  F005         	call	_i2c_lcd_command
   374  0008AE  EF82  F004         	goto	l72
   375  0008B2                     l1150:
   376  0008B2  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   377  0008B4  0F93               	addlw	147
   378  0008B6  EC59  F005         	call	_i2c_lcd_command
   379  0008BA  EF82  F004         	goto	l72
   380  0008BE                     l1152:
   381  0008BE  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   382  0008C0  0FD3               	addlw	211
   383  0008C2  EC59  F005         	call	_i2c_lcd_command
   384  0008C6  EF82  F004         	goto	l72
   385  0008CA                     l1156:
   386  0008CA  5010               	movf	i2c_lcd_set_cursor@row^0,w,c
   387  0008CC  6E0E               	movwf	??_i2c_lcd_set_cursor^0,c
   388  0008CE  6A0F               	clrf	(??_i2c_lcd_set_cursor+1)^0,c
   389                           
   390                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   391                           ; Switch size 1, requested type "simple"
   392                           ; Number of cases is 1, Range of values is 0 to 0
   393                           ; switch strategies available:
   394                           ; Name         Instructions Cycles
   395                           ; simple_byte            4     3 (average)
   396                           ;	Chosen strategy is simple_byte
   397  0008D0  500F               	movf	(??_i2c_lcd_set_cursor+1)^0,w,c
   398  0008D2  0A00               	xorlw	0	; case 0
   399  0008D4  B4D8               	btfsc	status,2,c
   400  0008D6  EF6F  F004         	goto	l1262
   401  0008DA  EF82  F004         	goto	l72
   402  0008DE                     l1262:
   403                           
   404                           ; Switch size 1, requested type "simple"
   405                           ; Number of cases is 4, Range of values is 1 to 4
   406                           ; switch strategies available:
   407                           ; Name         Instructions Cycles
   408                           ; simple_byte           13     7 (average)
   409                           ;	Chosen strategy is simple_byte
   410  0008DE  500E               	movf	??_i2c_lcd_set_cursor^0,w,c
   411  0008E0  0A01               	xorlw	1	; case 1
   412  0008E2  B4D8               	btfsc	status,2,c
   413  0008E4  EF4D  F004         	goto	l1146
   414  0008E8  0A03               	xorlw	3	; case 2
   415  0008EA  B4D8               	btfsc	status,2,c
   416  0008EC  EF53  F004         	goto	l1148
   417  0008F0  0A01               	xorlw	1	; case 3
   418  0008F2  B4D8               	btfsc	status,2,c
   419  0008F4  EF59  F004         	goto	l1150
   420  0008F8  0A07               	xorlw	7	; case 4
   421  0008FA  B4D8               	btfsc	status,2,c
   422  0008FC  EF5F  F004         	goto	l1152
   423  000900  EF82  F004         	goto	l72
   424  000904                     l72:
   425  000904  0012               	return		;funcret
   426  000906                     __end_of_i2c_lcd_set_cursor:
   427                           	callstack 0
   428                           
   429 ;; *************** function _i2c_lcd_puts *****************
   430 ;; Defined at:
   431 ;;		line 85 in file "LCD_I2C_LIB.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;  str             2   12[COMRAM] PTR unsigned char 
   434 ;;		 -> STR_2(7), STR_1(14), 
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   446 ;;      Params:         2       0       0       0       0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0       0       0       0       0
   448 ;;      Temps:          0       0       0       0       0       0       0       0       0
   449 ;;      Totals:         2       0       0       0       0       0       0       0       0
   450 ;;Total ram usage:        2 bytes
   451 ;; Hardware stack levels used: 1
   452 ;; Hardware stack levels required when called: 6
   453 ;; This function calls:
   454 ;;		_i2c_lcd_write
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           	psect	text2
   461  000996                     __ptext2:
   462                           	callstack 0
   463  000996                     _i2c_lcd_puts:
   464                           	callstack 24
   465  000996                     
   466                           ;LCD_I2C_LIB.c: 86:     while(*str){
   467  000996  EFD7  F004         	goto	l1142
   468  00099A                     l1138:
   469                           
   470                           ;LCD_I2C_LIB.c: 87:         i2c_lcd_write(*str);
   471  00099A  C00D  FFF6         	movff	i2c_lcd_puts@str,tblptrl
   472  00099E  C00E  FFF7         	movff	i2c_lcd_puts@str+1,tblptrh
   473  0009A2                     	if	0	;tblptru may be non-zero
   474  0009A2                     	endif
   475  0009A2                     	if	0	;tblptru may be non-zero
   476  0009A2                     	endif
   477  0009A2  0008               	tblrd		*
   478  0009A4  50F5               	movf	tablat,w,c
   479  0009A6  EC54  F005         	call	_i2c_lcd_write
   480  0009AA                     
   481                           ;LCD_I2C_LIB.c: 88:         str++;
   482  0009AA  4A0D               	infsnz	i2c_lcd_puts@str^0,f,c
   483  0009AC  2A0E               	incf	(i2c_lcd_puts@str+1)^0,f,c
   484  0009AE                     l1142:
   485                           
   486                           ;LCD_I2C_LIB.c: 86:     while(*str){
   487  0009AE  C00D  FFF6         	movff	i2c_lcd_puts@str,tblptrl
   488  0009B2  C00E  FFF7         	movff	i2c_lcd_puts@str+1,tblptrh
   489  0009B6                     	if	0	;tblptru may be non-zero
   490  0009B6                     	endif
   491  0009B6                     	if	0	;tblptru may be non-zero
   492  0009B6                     	endif
   493  0009B6  0008               	tblrd		*
   494  0009B8  50F5               	movf	tablat,w,c
   495  0009BA  0900               	iorlw	0
   496  0009BC  A4D8               	btfss	status,2,c
   497  0009BE  EFE3  F004         	goto	u61
   498  0009C2  EFE5  F004         	goto	u60
   499  0009C6                     u61:
   500  0009C6  EFCD  F004         	goto	l1138
   501  0009CA                     u60:
   502  0009CA  0012               	return		;funcret
   503  0009CC                     __end_of_i2c_lcd_puts:
   504                           	callstack 0
   505                           
   506 ;; *************** function _i2c_lcd_write *****************
   507 ;; Defined at:
   508 ;;		line 54 in file "LCD_I2C_LIB.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;  letra           1    wreg     unsigned char 
   511 ;; Auto vars:     Size  Location     Type
   512 ;;  letra           1   11[COMRAM] unsigned char 
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2, status,0, cstack
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   522 ;;      Params:         0       0       0       0       0       0       0       0       0
   523 ;;      Locals:         1       0       0       0       0       0       0       0       0
   524 ;;      Temps:          0       0       0       0       0       0       0       0       0
   525 ;;      Totals:         1       0       0       0       0       0       0       0       0
   526 ;;Total ram usage:        1 bytes
   527 ;; Hardware stack levels used: 1
   528 ;; Hardware stack levels required when called: 5
   529 ;; This function calls:
   530 ;;		_sendDATA
   531 ;; This function is called by:
   532 ;;		_i2c_lcd_puts
   533 ;;		_i2c_lcd_out
   534 ;;		_i2c_lcd_char
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text3
   539  000AA8                     __ptext3:
   540                           	callstack 0
   541  000AA8                     _i2c_lcd_write:
   542                           	callstack 24
   543                           
   544                           ;incstack = 0
   545                           ;i2c_lcd_write@letra stored from wreg
   546  000AA8  6E0C               	movwf	i2c_lcd_write@letra^0,c
   547  000AAA                     
   548                           ;LCD_I2C_LIB.c: 55:     sendDATA(letra);
   549  000AAA  500C               	movf	i2c_lcd_write@letra^0,w,c
   550  000AAC  ECE6  F004         	call	_sendDATA
   551  000AB0  0012               	return		;funcret
   552  000AB2                     __end_of_i2c_lcd_write:
   553                           	callstack 0
   554                           
   555 ;; *************** function _sendDATA *****************
   556 ;; Defined at:
   557 ;;		line 35 in file "LCD_I2C_LIB.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  dato            1    wreg     char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  dato            1   10[COMRAM] char 
   562 ;;  nibbleL         1    9[COMRAM] unsigned char 
   563 ;;  nibbleH         1    8[COMRAM] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   573 ;;      Params:         0       0       0       0       0       0       0       0       0
   574 ;;      Locals:         3       0       0       0       0       0       0       0       0
   575 ;;      Temps:          1       0       0       0       0       0       0       0       0
   576 ;;      Totals:         4       0       0       0       0       0       0       0       0
   577 ;;Total ram usage:        4 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; Hardware stack levels required when called: 4
   580 ;; This function calls:
   581 ;;		_loadPCF
   582 ;; This function is called by:
   583 ;;		_i2c_lcd_write
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text4
   588  0009CC                     __ptext4:
   589                           	callstack 0
   590  0009CC                     _sendDATA:
   591                           	callstack 24
   592                           
   593                           ;incstack = 0
   594                           ;sendDATA@dato stored from wreg
   595  0009CC  6E0B               	movwf	sendDATA@dato^0,c
   596  0009CE                     
   597                           ;LCD_I2C_LIB.c: 36:     char nibbleH, nibbleL;;LCD_I2C_LIB.c: 38:     nibbleH = (dato & 
      +                          0xF0)<<0;
   598  0009CE  500B               	movf	sendDATA@dato^0,w,c
   599  0009D0  0BF0               	andlw	240
   600  0009D2  6E09               	movwf	sendDATA@nibbleH^0,c
   601                           
   602                           ;LCD_I2C_LIB.c: 39:     nibbleL = (dato & 0x0F)<<4;
   603  0009D4  C00B  F008         	movff	sendDATA@dato,??_sendDATA
   604  0009D8  0E0F               	movlw	15
   605  0009DA  1608               	andwf	??_sendDATA^0,f,c
   606  0009DC  3808               	swapf	??_sendDATA^0,w,c
   607  0009DE  0BF0               	andlw	240
   608  0009E0  6E0A               	movwf	sendDATA@nibbleL^0,c
   609  0009E2                     
   610                           ;LCD_I2C_LIB.c: 41:     loadPCF(nibbleH,1);
   611  0009E2  0E01               	movlw	1
   612  0009E4  6E04               	movwf	loadPCF@mode^0,c
   613  0009E6  5009               	movf	sendDATA@nibbleH^0,w,c
   614  0009E8  EC83  F004         	call	_loadPCF
   615  0009EC                     
   616                           ;LCD_I2C_LIB.c: 42:     loadPCF(nibbleL,1);
   617  0009EC  0E01               	movlw	1
   618  0009EE  6E04               	movwf	loadPCF@mode^0,c
   619  0009F0  500A               	movf	sendDATA@nibbleL^0,w,c
   620  0009F2  EC83  F004         	call	_loadPCF
   621  0009F6  0012               	return		;funcret
   622  0009F8                     __end_of_sendDATA:
   623                           	callstack 0
   624                           
   625 ;; *************** function _i2c_lcd_init *****************
   626 ;; Defined at:
   627 ;;		line 61 in file "LCD_I2C_LIB.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   641 ;;      Params:         0       0       0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0       0       0
   643 ;;      Temps:          1       0       0       0       0       0       0       0       0
   644 ;;      Totals:         1       0       0       0       0       0       0       0       0
   645 ;;Total ram usage:        1 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 6
   648 ;; This function calls:
   649 ;;		_PCF_Wr
   650 ;;		_i2c_lcd_command
   651 ;;		_sendCMD
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text5
   658  000818                     __ptext5:
   659                           	callstack 0
   660  000818                     _i2c_lcd_init:
   661                           	callstack 24
   662  000818                     
   663                           ;LCD_I2C_LIB.c: 63:     PCF_Wr(0x00);
   664  000818  0E00               	movlw	0
   665  00081A  EC34  F005         	call	_PCF_Wr
   666  00081E                     
   667                           ;LCD_I2C_LIB.c: 64:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
   668  00081E  0E62               	movlw	98
   669  000820  6E0D               	movwf	??_i2c_lcd_init^0,c
   670  000822  0E66               	movlw	102
   671  000824                     u97:
   672  000824  2EE8               	decfsz	wreg,f,c
   673  000826  D7FE               	bra	u97
   674  000828  2E0D               	decfsz	??_i2c_lcd_init^0,f,c
   675  00082A  D7FC               	bra	u97
   676  00082C                     
   677                           ;LCD_I2C_LIB.c: 65:     sendCMD(0x03);
   678  00082C  0E03               	movlw	3
   679  00082E  ECFC  F004         	call	_sendCMD
   680                           
   681                           ;LCD_I2C_LIB.c: 66:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   682  000832  0E21               	movlw	33
   683  000834  6E0D               	movwf	??_i2c_lcd_init^0,c
   684  000836  0E76               	movlw	118
   685  000838                     u107:
   686  000838  2EE8               	decfsz	wreg,f,c
   687  00083A  D7FE               	bra	u107
   688  00083C  2E0D               	decfsz	??_i2c_lcd_init^0,f,c
   689  00083E  D7FC               	bra	u107
   690  000840  D000               	nop2	
   691  000842                     
   692                           ;LCD_I2C_LIB.c: 67:     sendCMD(0x03);
   693  000842  0E03               	movlw	3
   694  000844  ECFC  F004         	call	_sendCMD
   695  000848                     
   696                           ;LCD_I2C_LIB.c: 68:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   697  000848  0EA6               	movlw	166
   698  00084A                     u117:
   699  00084A  2EE8               	decfsz	wreg,f,c
   700  00084C  D7FE               	bra	u117
   701  00084E  D000               	nop2	
   702                           
   703                           ;LCD_I2C_LIB.c: 69:     sendCMD(0x03);
   704  000850  0E03               	movlw	3
   705  000852  ECFC  F004         	call	_sendCMD
   706                           
   707                           ;LCD_I2C_LIB.c: 70:     sendCMD(0x02);
   708  000856  0E02               	movlw	2
   709  000858  ECFC  F004         	call	_sendCMD
   710                           
   711                           ;LCD_I2C_LIB.c: 72:     i2c_lcd_command( 0x20 | 0x00 | 0x08 | 0x00 );
   712  00085C  0E28               	movlw	40
   713  00085E  EC59  F005         	call	_i2c_lcd_command
   714  000862                     
   715                           ;LCD_I2C_LIB.c: 73:     _delay((unsigned long)((37)*(20000000UL/4000000.0)));
   716  000862  0E3D               	movlw	61
   717  000864                     u127:
   718  000864  2EE8               	decfsz	wreg,f,c
   719  000866  D7FE               	bra	u127
   720  000868  D000               	nop2	
   721  00086A                     
   722                           ;LCD_I2C_LIB.c: 75:     _lcd_params = 0x04 | 0x02 | 0x01;
   723  00086A  0E07               	movlw	7
   724  00086C  6E11               	movwf	__lcd_params^0,c
   725  00086E                     
   726                           ;LCD_I2C_LIB.c: 76:     i2c_lcd_command(0x08 | _lcd_params);
   727  00086E  5011               	movf	__lcd_params^0,w,c
   728  000870  0908               	iorlw	8
   729  000872  EC59  F005         	call	_i2c_lcd_command
   730  000876                     
   731                           ;LCD_I2C_LIB.c: 77:     _delay((unsigned long)((37)*(20000000UL/4000000.0)));
   732  000876  0E3D               	movlw	61
   733  000878                     u137:
   734  000878  2EE8               	decfsz	wreg,f,c
   735  00087A  D7FE               	bra	u137
   736  00087C  D000               	nop2	
   737  00087E                     
   738                           ;LCD_I2C_LIB.c: 79:     i2c_lcd_command(0x01);
   739  00087E  0E01               	movlw	1
   740  000880  EC59  F005         	call	_i2c_lcd_command
   741  000884                     
   742                           ;LCD_I2C_LIB.c: 80:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
   743  000884  0E0D               	movlw	13
   744  000886  6E0D               	movwf	??_i2c_lcd_init^0,c
   745  000888  0EFC               	movlw	252
   746  00088A                     u147:
   747  00088A  2EE8               	decfsz	wreg,f,c
   748  00088C  D7FE               	bra	u147
   749  00088E  2E0D               	decfsz	??_i2c_lcd_init^0,f,c
   750  000890  D7FC               	bra	u147
   751  000892  0012               	return		;funcret
   752  000894                     __end_of_i2c_lcd_init:
   753                           	callstack 0
   754                           
   755 ;; *************** function _i2c_lcd_command *****************
   756 ;; Defined at:
   757 ;;		line 57 in file "LCD_I2C_LIB.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  cmd             1    wreg     unsigned char 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  cmd             1   11[COMRAM] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   771 ;;      Params:         0       0       0       0       0       0       0       0       0
   772 ;;      Locals:         1       0       0       0       0       0       0       0       0
   773 ;;      Temps:          0       0       0       0       0       0       0       0       0
   774 ;;      Totals:         1       0       0       0       0       0       0       0       0
   775 ;;Total ram usage:        1 bytes
   776 ;; Hardware stack levels used: 1
   777 ;; Hardware stack levels required when called: 5
   778 ;; This function calls:
   779 ;;		_sendCMD
   780 ;; This function is called by:
   781 ;;		_i2c_lcd_init
   782 ;;		_i2c_lcd_set_cursor
   783 ;;		_i2c_lcd_clear
   784 ;;		_i2c_lcd_return_home
   785 ;;		_i2c_lcd_on
   786 ;;		_i2c_lcd_off
   787 ;;		_i2c_lcd_enable_blink
   788 ;;		_i2c_lcd_disable_blink
   789 ;;		_i2c_lcd_enable_cursor
   790 ;;		_i2c_lcd_disable_cursor
   791 ;;		_i2c_lcd_scroll_left
   792 ;;		_i2c_lcd_scroll_right
   793 ;;		_i2c_lcd_custom_char
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text6
   798  000AB2                     __ptext6:
   799                           	callstack 0
   800  000AB2                     _i2c_lcd_command:
   801                           	callstack 24
   802                           
   803                           ;incstack = 0
   804                           ;i2c_lcd_command@cmd stored from wreg
   805  000AB2  6E0C               	movwf	i2c_lcd_command@cmd^0,c
   806  000AB4                     
   807                           ;LCD_I2C_LIB.c: 58:     sendCMD(cmd);
   808  000AB4  500C               	movf	i2c_lcd_command@cmd^0,w,c
   809  000AB6  ECFC  F004         	call	_sendCMD
   810  000ABA  0012               	return		;funcret
   811  000ABC                     __end_of_i2c_lcd_command:
   812                           	callstack 0
   813                           
   814 ;; *************** function _sendCMD *****************
   815 ;; Defined at:
   816 ;;		line 44 in file "LCD_I2C_LIB.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  cmd             1    wreg     char 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  cmd             1   10[COMRAM] char 
   821 ;;  nibbleL         1    9[COMRAM] unsigned char 
   822 ;;  nibbleH         1    8[COMRAM] unsigned char 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   832 ;;      Params:         0       0       0       0       0       0       0       0       0
   833 ;;      Locals:         3       0       0       0       0       0       0       0       0
   834 ;;      Temps:          1       0       0       0       0       0       0       0       0
   835 ;;      Totals:         4       0       0       0       0       0       0       0       0
   836 ;;Total ram usage:        4 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 4
   839 ;; This function calls:
   840 ;;		_loadPCF
   841 ;; This function is called by:
   842 ;;		_i2c_lcd_command
   843 ;;		_i2c_lcd_init
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text7
   848  0009F8                     __ptext7:
   849                           	callstack 0
   850  0009F8                     _sendCMD:
   851                           	callstack 24
   852                           
   853                           ;incstack = 0
   854                           ;sendCMD@cmd stored from wreg
   855  0009F8  6E0B               	movwf	sendCMD@cmd^0,c
   856  0009FA                     
   857                           ;LCD_I2C_LIB.c: 45:     char nibbleH, nibbleL;;LCD_I2C_LIB.c: 47:     nibbleH = (cmd & 0
      +                          xF0)<<0;
   858  0009FA  500B               	movf	sendCMD@cmd^0,w,c
   859  0009FC  0BF0               	andlw	240
   860  0009FE  6E09               	movwf	sendCMD@nibbleH^0,c
   861                           
   862                           ;LCD_I2C_LIB.c: 48:     nibbleL = (cmd & 0x0F)<<4;
   863  000A00  C00B  F008         	movff	sendCMD@cmd,??_sendCMD
   864  000A04  0E0F               	movlw	15
   865  000A06  1608               	andwf	??_sendCMD^0,f,c
   866  000A08  3808               	swapf	??_sendCMD^0,w,c
   867  000A0A  0BF0               	andlw	240
   868  000A0C  6E0A               	movwf	sendCMD@nibbleL^0,c
   869  000A0E                     
   870                           ;LCD_I2C_LIB.c: 50:     loadPCF(nibbleH,0);
   871  000A0E  0E00               	movlw	0
   872  000A10  6E04               	movwf	loadPCF@mode^0,c
   873  000A12  5009               	movf	sendCMD@nibbleH^0,w,c
   874  000A14  EC83  F004         	call	_loadPCF
   875  000A18                     
   876                           ;LCD_I2C_LIB.c: 51:     loadPCF(nibbleL,0);
   877  000A18  0E00               	movlw	0
   878  000A1A  6E04               	movwf	loadPCF@mode^0,c
   879  000A1C  500A               	movf	sendCMD@nibbleL^0,w,c
   880  000A1E  EC83  F004         	call	_loadPCF
   881  000A22  0012               	return		;funcret
   882  000A24                     __end_of_sendCMD:
   883                           	callstack 0
   884                           
   885 ;; *************** function _loadPCF *****************
   886 ;; Defined at:
   887 ;;		line 19 in file "LCD_I2C_LIB.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  dato            1    wreg     char 
   890 ;;  mode            1    3[COMRAM] unsigned char 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  dato            1    6[COMRAM] char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   902 ;;      Params:         1       0       0       0       0       0       0       0       0
   903 ;;      Locals:         1       0       0       0       0       0       0       0       0
   904 ;;      Temps:          2       0       0       0       0       0       0       0       0
   905 ;;      Totals:         4       0       0       0       0       0       0       0       0
   906 ;;Total ram usage:        4 bytes
   907 ;; Hardware stack levels used: 1
   908 ;; Hardware stack levels required when called: 3
   909 ;; This function calls:
   910 ;;		_PCF_Wr
   911 ;; This function is called by:
   912 ;;		_sendDATA
   913 ;;		_sendCMD
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text8
   918  000906                     __ptext8:
   919                           	callstack 0
   920  000906                     _loadPCF:
   921                           	callstack 24
   922                           
   923                           ;incstack = 0
   924                           ;loadPCF@dato stored from wreg
   925  000906  6E07               	movwf	loadPCF@dato^0,c
   926  000908                     
   927                           ;LCD_I2C_LIB.c: 21:     switch(mode){
   928  000908  EF8C  F004         	goto	l1082
   929  00090C                     l1076:
   930  00090C  9007               	bcf	loadPCF@dato^0,0,c
   931  00090E  EFA1  F004         	goto	l1084
   932  000912                     l1078:
   933  000912  8007               	bsf	loadPCF@dato^0,0,c
   934  000914  EFA1  F004         	goto	l1084
   935  000918                     l1082:
   936  000918  5004               	movf	loadPCF@mode^0,w,c
   937  00091A  6E05               	movwf	??_loadPCF^0,c
   938  00091C  6A06               	clrf	(??_loadPCF+1)^0,c
   939                           
   940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   941                           ; Switch size 1, requested type "simple"
   942                           ; Number of cases is 1, Range of values is 0 to 0
   943                           ; switch strategies available:
   944                           ; Name         Instructions Cycles
   945                           ; simple_byte            4     3 (average)
   946                           ;	Chosen strategy is simple_byte
   947  00091E  5006               	movf	(??_loadPCF+1)^0,w,c
   948  000920  0A00               	xorlw	0	; case 0
   949  000922  B4D8               	btfsc	status,2,c
   950  000924  EF96  F004         	goto	l1264
   951  000928  EFA1  F004         	goto	l1084
   952  00092C                     l1264:
   953                           
   954                           ; Switch size 1, requested type "simple"
   955                           ; Number of cases is 2, Range of values is 0 to 1
   956                           ; switch strategies available:
   957                           ; Name         Instructions Cycles
   958                           ; simple_byte            7     4 (average)
   959                           ;	Chosen strategy is simple_byte
   960  00092C  5005               	movf	??_loadPCF^0,w,c
   961  00092E  0A00               	xorlw	0	; case 0
   962  000930  B4D8               	btfsc	status,2,c
   963  000932  EF86  F004         	goto	l1076
   964  000936  0A01               	xorlw	1	; case 1
   965  000938  B4D8               	btfsc	status,2,c
   966  00093A  EF89  F004         	goto	l1078
   967  00093E  EFA1  F004         	goto	l1084
   968  000942                     l1084:
   969                           
   970                           ;LCD_I2C_LIB.c: 26:     PCF_Wr(dato);
   971  000942  5007               	movf	loadPCF@dato^0,w,c
   972  000944  EC34  F005         	call	_PCF_Wr
   973  000948                     
   974                           ;LCD_I2C_LIB.c: 27:     dato |= (1<<2);
   975  000948  8407               	bsf	loadPCF@dato^0,2,c
   976  00094A                     
   977                           ;LCD_I2C_LIB.c: 28:     PCF_Wr(dato);
   978  00094A  5007               	movf	loadPCF@dato^0,w,c
   979  00094C  EC34  F005         	call	_PCF_Wr
   980                           
   981                           ;LCD_I2C_LIB.c: 29:     dato &= ~(1<<2);
   982  000950  9407               	bcf	loadPCF@dato^0,2,c
   983  000952                     
   984                           ;LCD_I2C_LIB.c: 30:     PCF_Wr(dato);
   985  000952  5007               	movf	loadPCF@dato^0,w,c
   986  000954  EC34  F005         	call	_PCF_Wr
   987  000958                     
   988                           ;LCD_I2C_LIB.c: 31:     _delay((unsigned long)((30)*(20000000UL/4000000.0)));
   989  000958  0E32               	movlw	50
   990  00095A                     u157:
   991  00095A  2EE8               	decfsz	wreg,f,c
   992  00095C  D7FE               	bra	u157
   993  00095E  0012               	return		;funcret
   994  000960                     __end_of_loadPCF:
   995                           	callstack 0
   996                           
   997 ;; *************** function _PCF_Wr *****************
   998 ;; Defined at:
   999 ;;		line 13 in file "LCD_I2C_LIB.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  dato            1    wreg     char 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  dato            1    2[COMRAM] char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1013 ;;      Params:         0       0       0       0       0       0       0       0       0
  1014 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1016 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1017 ;;Total ram usage:        1 bytes
  1018 ;; Hardware stack levels used: 1
  1019 ;; Hardware stack levels required when called: 2
  1020 ;; This function calls:
  1021 ;;		_I2C_Start
  1022 ;;		_I2C_Stop
  1023 ;;		_I2C_Wr
  1024 ;; This function is called by:
  1025 ;;		_loadPCF
  1026 ;;		_i2c_lcd_init
  1027 ;;		_i2c_lcd_backlight_on
  1028 ;;		_i2c_lcd_backlight_off
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text9
  1033  000A68                     __ptext9:
  1034                           	callstack 0
  1035  000A68                     _PCF_Wr:
  1036                           	callstack 24
  1037                           
  1038                           ;incstack = 0
  1039                           ;PCF_Wr@dato stored from wreg
  1040  000A68  6E03               	movwf	PCF_Wr@dato^0,c
  1041  000A6A                     
  1042                           ;LCD_I2C_LIB.c: 14:     I2C_Start();
  1043  000A6A  EC62  F005         	call	_I2C_Start	;wreg free
  1044                           
  1045                           ;LCD_I2C_LIB.c: 15:     I2C_Wr( (0x27<<1)|0);
  1046  000A6E  0E4E               	movlw	78
  1047  000A70  EC4E  F005         	call	_I2C_Wr
  1048                           
  1049                           ;LCD_I2C_LIB.c: 16:     I2C_Wr(dato | LED_STATUS);
  1050  000A74  5003               	movf	PCF_Wr@dato^0,w,c
  1051  000A76  1012               	iorwf	_LED_STATUS^0,w,c
  1052  000A78  EC4E  F005         	call	_I2C_Wr
  1053                           
  1054                           ;LCD_I2C_LIB.c: 17:     I2C_Stop();
  1055  000A7C  EC5E  F005         	call	_I2C_Stop	;wreg free
  1056  000A80  0012               	return		;funcret
  1057  000A82                     __end_of_PCF_Wr:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function _I2C_Wr *****************
  1061 ;; Defined at:
  1062 ;;		line 33 in file "I2C_LIB.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  data            1    wreg     unsigned char 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  data            1    1[COMRAM] unsigned char 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2, status,0, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1076 ;;      Params:         0       0       0       0       0       0       0       0       0
  1077 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1079 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1080 ;;Total ram usage:        1 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; Hardware stack levels required when called: 1
  1083 ;; This function calls:
  1084 ;;		_I2C_Condiciones_Espera
  1085 ;; This function is called by:
  1086 ;;		_PCF_Wr
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text10
  1091  000A9C                     __ptext10:
  1092                           	callstack 0
  1093  000A9C                     _I2C_Wr:
  1094                           	callstack 24
  1095                           
  1096                           ;incstack = 0
  1097                           ;I2C_Wr@data stored from wreg
  1098  000A9C  6E02               	movwf	I2C_Wr@data^0,c
  1099  000A9E                     
  1100                           ;I2C_LIB.c: 34:     I2C_Condiciones_Espera();
  1101  000A9E  EC12  F005         	call	_I2C_Condiciones_Espera	;wreg free
  1102  000AA2                     
  1103                           ;I2C_LIB.c: 35:     SSPBUF = data;
  1104  000AA2  C002  FFC9         	movff	I2C_Wr@data,4041	;volatile
  1105  000AA6  0012               	return		;funcret
  1106  000AA8                     __end_of_I2C_Wr:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _I2C_Stop *****************
  1110 ;; Defined at:
  1111 ;;		line 25 in file "I2C_LIB.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1125 ;;      Params:         0       0       0       0       0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1128 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 1
  1132 ;; This function calls:
  1133 ;;		_I2C_Condiciones_Espera
  1134 ;; This function is called by:
  1135 ;;		_PCF_Wr
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text11
  1140  000ABC                     __ptext11:
  1141                           	callstack 0
  1142  000ABC                     _I2C_Stop:
  1143                           	callstack 24
  1144  000ABC                     
  1145                           ;I2C_LIB.c: 26:     I2C_Condiciones_Espera();
  1146  000ABC  EC12  F005         	call	_I2C_Condiciones_Espera	;wreg free
  1147  000AC0                     
  1148                           ;I2C_LIB.c: 27:     SSPCON2bits.PEN = 1;
  1149  000AC0  84C5               	bsf	197,2,c	;volatile
  1150  000AC2  0012               	return		;funcret
  1151  000AC4                     __end_of_I2C_Stop:
  1152                           	callstack 0
  1153                           
  1154 ;; *************** function _I2C_Start *****************
  1155 ;; Defined at:
  1156 ;;		line 21 in file "I2C_LIB.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1170 ;;      Params:         0       0       0       0       0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 1
  1177 ;; This function calls:
  1178 ;;		_I2C_Condiciones_Espera
  1179 ;; This function is called by:
  1180 ;;		_PCF_Wr
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           	psect	text12
  1185  000AC4                     __ptext12:
  1186                           	callstack 0
  1187  000AC4                     _I2C_Start:
  1188                           	callstack 24
  1189  000AC4                     
  1190                           ;I2C_LIB.c: 22:     I2C_Condiciones_Espera();
  1191  000AC4  EC12  F005         	call	_I2C_Condiciones_Espera	;wreg free
  1192  000AC8                     
  1193                           ;I2C_LIB.c: 23:     SSPCON2bits.SEN = 1;
  1194  000AC8  80C5               	bsf	197,0,c	;volatile
  1195  000ACA  0012               	return		;funcret
  1196  000ACC                     __end_of_I2C_Start:
  1197                           	callstack 0
  1198                           
  1199 ;; *************** function _I2C_Condiciones_Espera *****************
  1200 ;; Defined at:
  1201 ;;		line 18 in file "I2C_LIB.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1215 ;;      Params:         0       0       0       0       0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1217 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1218 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1219 ;;Total ram usage:        1 bytes
  1220 ;; Hardware stack levels used: 1
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_I2C_Start
  1225 ;;		_I2C_Stop
  1226 ;;		_I2C_Wr
  1227 ;;		_I2C_Restart
  1228 ;;		_I2C_Rd
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text13
  1233  000A24                     __ptext13:
  1234                           	callstack 0
  1235  000A24                     _I2C_Condiciones_Espera:
  1236                           	callstack 24
  1237  000A24                     l840:
  1238  000A24  CFC5 F001          	movff	4037,??_I2C_Condiciones_Espera	;volatile
  1239  000A28  0E1F               	movlw	31
  1240  000A2A  1601               	andwf	??_I2C_Condiciones_Espera^0,f,c
  1241  000A2C  A4D8               	btfss	status,2,c
  1242  000A2E  EF1B  F005         	goto	u11
  1243  000A32  EF1D  F005         	goto	u10
  1244  000A36                     u11:
  1245  000A36  EF12  F005         	goto	l840
  1246  000A3A                     u10:
  1247  000A3A  B4C7               	btfsc	199,2,c	;volatile
  1248  000A3C  EF22  F005         	goto	u21
  1249  000A40  EF24  F005         	goto	u20
  1250  000A44                     u21:
  1251  000A44  EF12  F005         	goto	l840
  1252  000A48                     u20:
  1253  000A48  0012               	return		;funcret
  1254  000A4A                     __end_of_I2C_Condiciones_Espera:
  1255                           	callstack 0
  1256                           
  1257 ;; *************** function _I2C_Init *****************
  1258 ;; Defined at:
  1259 ;;		line 6 in file "I2C_LIB.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1273 ;;      Params:         0       0       0       0       0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1276 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text14
  1287  000A82                     __ptext14:
  1288                           	callstack 0
  1289  000A82                     _I2C_Init:
  1290                           	callstack 30
  1291  000A82                     
  1292                           ;I2C_LIB.c: 7:     TRISBbits.RB0 = 1;
  1293  000A82  8093               	bsf	147,0,c	;volatile
  1294                           
  1295                           ;I2C_LIB.c: 8:     TRISBbits.RB1 = 1;
  1296  000A84  8293               	bsf	147,1,c	;volatile
  1297                           
  1298                           ;I2C_LIB.c: 10:     SSPSTATbits.SMP = 1;
  1299  000A86  8EC7               	bsf	199,7,c	;volatile
  1300                           
  1301                           ;I2C_LIB.c: 11:     SSPCON1bits.SSPEN = 1;
  1302  000A88  8AC6               	bsf	198,5,c	;volatile
  1303  000A8A                     
  1304                           ;I2C_LIB.c: 12:     SSPCON1bits.SSPM = 0b1000;
  1305  000A8A  50C6               	movf	198,w,c	;volatile
  1306  000A8C  0BF0               	andlw	-16
  1307  000A8E  0908               	iorlw	8
  1308  000A90  6EC6               	movwf	198,c	;volatile
  1309                           
  1310                           ;I2C_LIB.c: 14:     SSPADD = (unsigned int)((20000000UL/(4.0*100000UL))-1.0);
  1311  000A92  0E31               	movlw	49
  1312  000A94  6EC8               	movwf	200,c	;volatile
  1313                           
  1314                           ;I2C_LIB.c: 16:     SSPCON2 = 0x00;
  1315  000A96  0E00               	movlw	0
  1316  000A98  6EC5               	movwf	197,c	;volatile
  1317  000A9A  0012               	return		;funcret
  1318  000A9C                     __end_of_I2C_Init:
  1319                           	callstack 0
  1320                           
  1321                           	psect	rparam
  1322  0000                     
  1323                           	psect	idloc
  1324                           
  1325                           ;Config register IDLOC0 @ 0x200000
  1326                           ;	unspecified, using default values
  1327  200000                     	org	2097152
  1328  200000  FF                 	db	255
  1329                           
  1330                           ;Config register IDLOC1 @ 0x200001
  1331                           ;	unspecified, using default values
  1332  200001                     	org	2097153
  1333  200001  FF                 	db	255
  1334                           
  1335                           ;Config register IDLOC2 @ 0x200002
  1336                           ;	unspecified, using default values
  1337  200002                     	org	2097154
  1338  200002  FF                 	db	255
  1339                           
  1340                           ;Config register IDLOC3 @ 0x200003
  1341                           ;	unspecified, using default values
  1342  200003                     	org	2097155
  1343  200003  FF                 	db	255
  1344                           
  1345                           ;Config register IDLOC4 @ 0x200004
  1346                           ;	unspecified, using default values
  1347  200004                     	org	2097156
  1348  200004  FF                 	db	255
  1349                           
  1350                           ;Config register IDLOC5 @ 0x200005
  1351                           ;	unspecified, using default values
  1352  200005                     	org	2097157
  1353  200005  FF                 	db	255
  1354                           
  1355                           ;Config register IDLOC6 @ 0x200006
  1356                           ;	unspecified, using default values
  1357  200006                     	org	2097158
  1358  200006  FF                 	db	255
  1359                           
  1360                           ;Config register IDLOC7 @ 0x200007
  1361                           ;	unspecified, using default values
  1362  200007                     	org	2097159
  1363  200007  FF                 	db	255
  1364                           
  1365                           	psect	config
  1366                           
  1367                           ;Config register CONFIG1L @ 0x300000
  1368                           ;	PLL Prescaler Selection bits
  1369                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1370                           ;	System Clock Postscaler Selection bits
  1371                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1372                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1373                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1374  300000                     	org	3145728
  1375  300000  00                 	db	0
  1376                           
  1377                           ;Config register CONFIG1H @ 0x300001
  1378                           ;	Oscillator Selection bits
  1379                           ;	FOSC = HS, HS oscillator (HS)
  1380                           ;	Fail-Safe Clock Monitor Enable bit
  1381                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1382                           ;	Internal/External Oscillator Switchover bit
  1383                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1384  300001                     	org	3145729
  1385  300001  0C                 	db	12
  1386                           
  1387                           ;Config register CONFIG2L @ 0x300002
  1388                           ;	Power-up Timer Enable bit
  1389                           ;	PWRT = OFF, PWRT disabled
  1390                           ;	Brown-out Reset Enable bits
  1391                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1392                           ;	Brown-out Reset Voltage bits
  1393                           ;	BORV = 3, Minimum setting 2.05V
  1394                           ;	USB Voltage Regulator Enable bit
  1395                           ;	VREGEN = OFF, USB voltage regulator disabled
  1396  300002                     	org	3145730
  1397  300002  1F                 	db	31
  1398                           
  1399                           ;Config register CONFIG2H @ 0x300003
  1400                           ;	Watchdog Timer Enable bit
  1401                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1402                           ;	Watchdog Timer Postscale Select bits
  1403                           ;	WDTPS = 32768, 1:32768
  1404  300003                     	org	3145731
  1405  300003  1E                 	db	30
  1406                           
  1407                           ; Padding undefined space
  1408  300004                     	org	3145732
  1409  300004  FF                 	db	255
  1410                           
  1411                           ;Config register CONFIG3H @ 0x300005
  1412                           ;	CCP2 MUX bit
  1413                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1414                           ;	PORTB A/D Enable bit
  1415                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1416                           ;	Low-Power Timer 1 Oscillator Enable bit
  1417                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1418                           ;	MCLR Pin Enable bit
  1419                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1420  300005                     	org	3145733
  1421  300005  81                 	db	129
  1422                           
  1423                           ;Config register CONFIG4L @ 0x300006
  1424                           ;	Stack Full/Underflow Reset Enable bit
  1425                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1426                           ;	Single-Supply ICSP Enable bit
  1427                           ;	LVP = ON, Single-Supply ICSP enabled
  1428                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1429                           ;	ICPRT = OFF, ICPORT disabled
  1430                           ;	Extended Instruction Set Enable bit
  1431                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1432                           ;	Background Debugger Enable bit
  1433                           ;	DEBUG = 0x1, unprogrammed default
  1434  300006                     	org	3145734
  1435  300006  85                 	db	133
  1436                           
  1437                           ; Padding undefined space
  1438  300007                     	org	3145735
  1439  300007  FF                 	db	255
  1440                           
  1441                           ;Config register CONFIG5L @ 0x300008
  1442                           ;	Code Protection bit
  1443                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1444                           ;	Code Protection bit
  1445                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1446                           ;	Code Protection bit
  1447                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1448                           ;	Code Protection bit
  1449                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1450  300008                     	org	3145736
  1451  300008  0F                 	db	15
  1452                           
  1453                           ;Config register CONFIG5H @ 0x300009
  1454                           ;	Boot Block Code Protection bit
  1455                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1456                           ;	Data EEPROM Code Protection bit
  1457                           ;	CPD = OFF, Data EEPROM is not code-protected
  1458  300009                     	org	3145737
  1459  300009  C0                 	db	192
  1460                           
  1461                           ;Config register CONFIG6L @ 0x30000A
  1462                           ;	Write Protection bit
  1463                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1464                           ;	Write Protection bit
  1465                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1466                           ;	Write Protection bit
  1467                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1468                           ;	Write Protection bit
  1469                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1470  30000A                     	org	3145738
  1471  30000A  0F                 	db	15
  1472                           
  1473                           ;Config register CONFIG6H @ 0x30000B
  1474                           ;	Configuration Register Write Protection bit
  1475                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1476                           ;	Boot Block Write Protection bit
  1477                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1478                           ;	Data EEPROM Write Protection bit
  1479                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1480  30000B                     	org	3145739
  1481  30000B  E0                 	db	224
  1482                           
  1483                           ;Config register CONFIG7L @ 0x30000C
  1484                           ;	Table Read Protection bit
  1485                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1486                           ;	Table Read Protection bit
  1487                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1488                           ;	Table Read Protection bit
  1489                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1490                           ;	Table Read Protection bit
  1491                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1492  30000C                     	org	3145740
  1493  30000C  0F                 	db	15
  1494                           
  1495                           ;Config register CONFIG7H @ 0x30000D
  1496                           ;	Boot Block Table Read Protection bit
  1497                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1498  30000D                     	org	3145741
  1499  30000D  40                 	db	64
  1500                           tosu	equ	0xFFF
  1501                           tosh	equ	0xFFE
  1502                           tosl	equ	0xFFD
  1503                           stkptr	equ	0xFFC
  1504                           pclatu	equ	0xFFB
  1505                           pclath	equ	0xFFA
  1506                           pcl	equ	0xFF9
  1507                           tblptru	equ	0xFF8
  1508                           tblptrh	equ	0xFF7
  1509                           tblptrl	equ	0xFF6
  1510                           tablat	equ	0xFF5
  1511                           prodh	equ	0xFF4
  1512                           prodl	equ	0xFF3
  1513                           indf0	equ	0xFEF
  1514                           postinc0	equ	0xFEE
  1515                           postdec0	equ	0xFED
  1516                           preinc0	equ	0xFEC
  1517                           plusw0	equ	0xFEB
  1518                           fsr0h	equ	0xFEA
  1519                           fsr0l	equ	0xFE9
  1520                           wreg	equ	0xFE8
  1521                           indf1	equ	0xFE7
  1522                           postinc1	equ	0xFE6
  1523                           postdec1	equ	0xFE5
  1524                           preinc1	equ	0xFE4
  1525                           plusw1	equ	0xFE3
  1526                           fsr1h	equ	0xFE2
  1527                           fsr1l	equ	0xFE1
  1528                           bsr	equ	0xFE0
  1529                           indf2	equ	0xFDF
  1530                           postinc2	equ	0xFDE
  1531                           postdec2	equ	0xFDD
  1532                           preinc2	equ	0xFDC
  1533                           plusw2	equ	0xFDB
  1534                           fsr2h	equ	0xFDA
  1535                           fsr2l	equ	0xFD9
  1536                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2c_lcd_puts@str	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[7]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_i2c_lcd_set_cursor
    _i2c_lcd_set_cursor->_i2c_lcd_command
    _i2c_lcd_puts->_i2c_lcd_write
    _i2c_lcd_write->_sendDATA
    _sendDATA->_loadPCF
    _i2c_lcd_init->_i2c_lcd_command
    _i2c_lcd_command->_sendCMD
    _sendCMD->_loadPCF
    _loadPCF->_PCF_Wr
    _PCF_Wr->_I2C_Wr
    _I2C_Wr->_I2C_Condiciones_Espera
    _I2C_Stop->_I2C_Condiciones_Espera
    _I2C_Start->_I2C_Condiciones_Espera

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2695
                           _I2C_Init
                       _i2c_lcd_init
                       _i2c_lcd_puts
                 _i2c_lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_set_cursor                                   4     3      1     876
                                             12 COMRAM     4     3      1
                    _i2c_lcd_command
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_puts                                         2     0      2     735
                                             12 COMRAM     2     0      2
                      _i2c_lcd_write
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_write                                        1     1      0     538
                                             11 COMRAM     1     1      0
                           _sendDATA
 ---------------------------------------------------------------------------------
 (3) _sendDATA                                             4     4      0     516
                                              7 COMRAM     4     4      0
                            _loadPCF
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_init                                         1     1      0    1084
                                             12 COMRAM     1     1      0
                             _PCF_Wr
                    _i2c_lcd_command
                            _sendCMD
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_command                                      1     1      0     538
                                             11 COMRAM     1     1      0
                            _sendCMD
 ---------------------------------------------------------------------------------
 (3) _sendCMD                                              4     4      0     516
                                              7 COMRAM     4     4      0
                            _loadPCF
 ---------------------------------------------------------------------------------
 (4) _loadPCF                                              4     3      1     426
                                              3 COMRAM     4     3      1
                             _PCF_Wr
 ---------------------------------------------------------------------------------
 (5) _PCF_Wr                                               1     1      0      30
                                              2 COMRAM     1     1      0
                          _I2C_Start
                           _I2C_Stop
                             _I2C_Wr
 ---------------------------------------------------------------------------------
 (6) _I2C_Wr                                               1     1      0      15
                                              1 COMRAM     1     1      0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0       0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            0     0      0       0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (7) _I2C_Condiciones_Espera                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _i2c_lcd_init
     _PCF_Wr
       _I2C_Start
         _I2C_Condiciones_Espera
       _I2C_Stop
         _I2C_Condiciones_Espera
       _I2C_Wr
         _I2C_Condiciones_Espera
     _i2c_lcd_command
       _sendCMD
         _loadPCF
           _PCF_Wr
     _sendCMD
   _i2c_lcd_puts
     _i2c_lcd_write
       _sendDATA
         _loadPCF
   _i2c_lcd_set_cursor
     _i2c_lcd_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      12       1       18.9%
BITBIGSFRhh         36      0       0      20        0.0%
BITBIGSFRll         33      0       0      23        0.0%
BITBIGSFRlh         2D      0       0      22        0.0%
BITBIGSFRhl          3      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      12      24        0.0%
DATA                 0      0      12       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 09 09:46:57 2023

                   _SSPSTATbits 000FC7                              l15 098E                              l16 098E  
                            l42 095E                              l35 0A80                              l51 0AB0  
                            l45 09F6                              l54 0ABA                              l63 09CA  
                            l48 0A22                              l72 0904                              l57 0892  
                            u10 0A3A                              u11 0A36                              u20 0A48  
                            u21 0A44                              u60 09CA                              u61 09C6  
                            u97 0824                             l141 0A9A                             l150 0ACA  
                           l153 0AC2                             l147 0A48                             l159 0AA6  
                           l900 0A8A                             l840 0A24                             l842 0A3A  
                           l850 0AA2                             l844 0AC4                             l852 0ABC  
                           l838 0A24                             l846 0AC8                             l854 0AC0  
                           l848 0A9E                             l856 0A6A                             l898 0A82  
                           u107 0838                             u117 084A                             u127 0864  
                           u137 0878                             u147 088A                             u157 095A  
                           wreg 000FE8                   _i2c_lcd_write 0AA8                            l1100 09E2  
                          l1102 09EC                            l1110 0AAA                            l1104 09FA  
                          l1112 0AB4                            l1120 0842                            l1106 0A0E  
                          l1130 0876                            l1122 0848                            l1114 0818  
                          l1108 0A18                            l1132 087E                            l1124 0862  
                          l1116 081E                            l1140 09AA                            l1134 0884  
                          l1126 086A                            l1118 082C                            l1142 09AE  
                          l1150 08B2                            l1128 086E                            l1136 0996  
                          l1152 08BE                            l1144 0896                            l1090 0952  
                          l1082 0918                            l1074 0908                            l1138 099A  
                          l1146 089A                            l1170 0978                            l1162 0960  
                          l1092 0958                            l1084 0942                            l1076 090C  
                          l1148 08A6                            l1156 08CA                            l1172 0982  
                          l1164 0964                            l1086 0948                            l1078 0912  
                          l1262 08DE                            l1166 0968                            l1088 094A  
                          l1264 092C                            l1168 096C                            l1098 09CE  
                          STR_1 0801                            STR_2 080F                   ?_i2c_lcd_init 0001  
                 ?_i2c_lcd_puts 000D                            _main 0960                __end_of_I2C_Init 0A9C  
              __end_of_I2C_Stop 0AC4                            start 0000                 sendDATA@nibbleH 0009  
               sendDATA@nibbleL 000A                    ___param_bank 000000                           ?_main 0001  
                sendCMD@nibbleH 0009                  sendCMD@nibbleL 000A                  ?_i2c_lcd_write 0001  
               _i2c_lcd_command 0AB2                     loadPCF@dato 0007                     loadPCF@mode 0004  
               __end_of_loadPCF 0960                  ??_i2c_lcd_init 000D                 __end_of_sendCMD 0A24  
                ??_i2c_lcd_puts 000F               __end_of_I2C_Start 0ACC                           tablat 000FF5  
                         status 000FD8                 __initialization 0A4A                    __end_of_main 0996  
                        ??_main 0011                   __activetblptr 000002         ?_I2C_Condiciones_Espera 0001  
                        _ADCON1 000FC1                          _I2C_Wr 0A9C                          _PCF_Wr 0A68  
                        _SSPADD 000FC8                          _SSPBUF 000FC9                __end_of_sendDATA 09F8  
       __end_of_i2c_lcd_command 0ABC                          isa$std 000001  __end_of_I2C_Condiciones_Espera 0A4A  
               ??_i2c_lcd_write 000C                       ??_loadPCF 0005              i2c_lcd_command@cmd 000C  
                  __pdataCOMRAM 0012                       ?_I2C_Init 0001                       ??_sendCMD 0008  
                     ?_I2C_Stop 0001                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                      __accesstop 0060  
       __end_of__initialization 0A5E                   ___rparam_used 000001                  __pcstackCOMRAM 0001  
          __end_of_i2c_lcd_init 0894            __end_of_i2c_lcd_puts 09CC                      ??_I2C_Init 0001  
                    ??_I2C_Stop 0002                         ?_I2C_Wr 0001                 i2c_lcd_puts@str 000D  
                       ?_PCF_Wr 0001                      I2C_Wr@data 0002                ?_i2c_lcd_command 0001  
                       _SSPCON2 000FC5                         _SSPSTAT 000FC7                       ?_sendDATA 0001  
                     _I2C_Start 0AC4                         __Hparam 0000                         __Lparam 0000  
                  __psmallconst 0800           i2c_lcd_set_cursor@col 000D                         __pcinit 0A4A  
         i2c_lcd_set_cursor@row 0010                         __ramtop 0800                         __ptext0 0960  
                       __ptext1 0894                         __ptext2 0996                         __ptext3 0AA8  
                       __ptext4 09CC                         __ptext5 0818                         __ptext6 0AB2  
                       __ptext7 09F8                         __ptext8 0906                         __ptext9 0A68  
                       _loadPCF 0906                         _sendCMD 09F8            end_of_initialization 0A5E  
                 __Lmediumconst 0000                      ??_sendDATA 0008                      ?_I2C_Start 0001  
                     _TRISBbits 000F93                    sendDATA@dato 000B                    _i2c_lcd_init 0818  
                __end_of_I2C_Wr 0AA8                    _i2c_lcd_puts 0996                  __end_of_PCF_Wr 0A82  
                 __pidataCOMRAM 0ACC           __end_of_i2c_lcd_write 0AB2             start_initialization 0A4A  
                      ??_I2C_Wr 0002              i2c_lcd_write@letra 000C                        ??_PCF_Wr 0003  
                   __lcd_params 0011                     ??_I2C_Start 0002      __end_of_i2c_lcd_set_cursor 0906  
                    PCF_Wr@dato 0003                     __pbssCOMRAM 0011                      sendCMD@cmd 000B  
      ??_I2C_Condiciones_Espera 0001                        ?_loadPCF 0004                     __smallconst 0800  
                      _I2C_Init 0A82                        ?_sendCMD 0001                        _I2C_Stop 0ABC  
                      __Hrparam 0000                        __Lrparam 0000                        __ptext10 0A9C  
                      __ptext11 0ABC                        __ptext12 0AC4                        __ptext13 0A24  
                      __ptext14 0A82               ??_i2c_lcd_command 000C                        _sendDATA 09CC  
                      isa$xinst 000000                      _LED_STATUS 0012              _i2c_lcd_set_cursor 0894  
        _I2C_Condiciones_Espera 0A24             ?_i2c_lcd_set_cursor 000D            ??_i2c_lcd_set_cursor 000E  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
