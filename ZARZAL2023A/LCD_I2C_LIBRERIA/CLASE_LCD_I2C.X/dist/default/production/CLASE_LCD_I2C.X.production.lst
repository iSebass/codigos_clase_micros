

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 09 09:39:14 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28  0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     _SSPCON2bits	set	4037
    65  0000                     _SSPSTAT	set	4039
    66  0000                     _TRISBbits	set	3987
    67  0000                     _ADCON1	set	4033
    68  0000                     _SSPCON2	set	4037
    69  0000                     _SSPCON1bits	set	4038
    70  0000                     _SSPSTATbits	set	4039
    71  0000                     _SSPBUF	set	4041
    72  0000                     _SSPADD	set	4040
    73                           
    74                           	psect	smallconst
    75  000800                     __psmallconst:
    76                           	callstack 0
    77  000800  00                 	db	0
    78  000801                     STR_1:
    79  000801  48                 	db	72	;'H'
    80  000802  6F                 	db	111	;'o'
    81  000803  6C                 	db	108	;'l'
    82  000804  61                 	db	97	;'a'
    83  000805  20                 	db	32
    84  000806  55                 	db	85	;'U'
    85  000807  4E                 	db	78	;'N'
    86  000808  49                 	db	73	;'I'
    87  000809  56                 	db	86	;'V'
    88  00080A  41                 	db	65	;'A'
    89  00080B  4C                 	db	76	;'L'
    90  00080C  4C                 	db	76	;'L'
    91  00080D  45                 	db	69	;'E'
    92  00080E  00                 	db	0
    93  00080F                     STR_2:
    94  00080F  5A                 	db	90	;'Z'
    95  000810  61                 	db	97	;'a'
    96  000811  72                 	db	114	;'r'
    97  000812  7A                 	db	122	;'z'
    98  000813  61                 	db	97	;'a'
    99  000814  6C                 	db	108	;'l'
   100  000815  00                 	db	0
   101  000816  00                 	db	0	; dummy byte at the end
   102  0000                     
   103                           ; #config settings
   104                           
   105                           	psect	cinit
   106  000A7C                     __pcinit:
   107                           	callstack 0
   108  000A7C                     start_initialization:
   109                           	callstack 0
   110  000A7C                     __initialization:
   111                           	callstack 0
   112                           
   113                           ; Clear objects allocated to COMRAM (1 bytes)
   114  000A7C  6A11               	clrf	__pbssCOMRAM& (0+255),c
   115  000A7E                     end_of_initialization:
   116                           	callstack 0
   117  000A7E                     __end_of__initialization:
   118                           	callstack 0
   119  000A7E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   120  000A80  6EF8               	movwf	tblptru,c
   121  000A82  0100               	movlb	0
   122  000A84  EFB0  F004         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	bssCOMRAM
   125  000011                     __pbssCOMRAM:
   126                           	callstack 0
   127  000011                     __lcd_params:
   128                           	callstack 0
   129  000011                     	ds	1
   130                           
   131                           	psect	cstackCOMRAM
   132  000001                     __pcstackCOMRAM:
   133                           	callstack 0
   134  000001                     ??_I2C_Condiciones_Espera:
   135                           
   136                           ; 1 bytes @ 0x0
   137  000001                     	ds	1
   138  000002                     I2C_Wr@data:
   139                           	callstack 0
   140                           
   141                           ; 1 bytes @ 0x1
   142  000002                     	ds	1
   143  000003                     PCF_Wr@dato:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x2
   147  000003                     	ds	1
   148  000004                     loadPCF@mode:
   149                           	callstack 0
   150                           
   151                           ; 1 bytes @ 0x3
   152  000004                     	ds	1
   153  000005                     ??_loadPCF:
   154                           
   155                           ; 1 bytes @ 0x4
   156  000005                     	ds	2
   157  000007                     loadPCF@dato:
   158                           	callstack 0
   159                           
   160                           ; 1 bytes @ 0x6
   161  000007                     	ds	1
   162  000008                     ??_sendDATA:
   163  000008                     ??_sendCMD:
   164                           
   165                           ; 1 bytes @ 0x7
   166  000008                     	ds	1
   167  000009                     sendDATA@nibbleH:
   168                           	callstack 0
   169  000009                     sendCMD@nibbleH:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x8
   173  000009                     	ds	1
   174  00000A                     sendDATA@nibbleL:
   175                           	callstack 0
   176  00000A                     sendCMD@nibbleL:
   177                           	callstack 0
   178                           
   179                           ; 1 bytes @ 0x9
   180  00000A                     	ds	1
   181  00000B                     sendDATA@dato:
   182                           	callstack 0
   183  00000B                     sendCMD@cmd:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0xA
   187  00000B                     	ds	1
   188  00000C                     i2c_lcd_write@letra:
   189                           	callstack 0
   190  00000C                     i2c_lcd_command@cmd:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0xB
   194  00000C                     	ds	1
   195  00000D                     ??_i2c_lcd_init:
   196  00000D                     i2c_lcd_set_cursor@col:
   197                           	callstack 0
   198  00000D                     i2c_lcd_puts@str:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0xC
   202  00000D                     	ds	1
   203  00000E                     ??_i2c_lcd_set_cursor:
   204                           
   205                           ; 1 bytes @ 0xD
   206  00000E                     	ds	1
   207  00000F                     
   208                           ; 1 bytes @ 0xE
   209  00000F                     	ds	1
   210  000010                     i2c_lcd_set_cursor@row:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0xF
   214  000010                     	ds	1
   215  000011                     
   216                           ; 1 bytes @ 0x10
   217 ;;
   218 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   219 ;;
   220 ;; *************** function _main *****************
   221 ;; Defined at:
   222 ;;		line 7 in file "main.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   236 ;;      Params:         0       0       0       0       0       0       0       0       0
   237 ;;      Locals:         0       0       0       0       0       0       0       0       0
   238 ;;      Temps:          0       0       0       0       0       0       0       0       0
   239 ;;      Totals:         0       0       0       0       0       0       0       0       0
   240 ;;Total ram usage:        0 bytes
   241 ;; Hardware stack levels required when called: 7
   242 ;; This function calls:
   243 ;;		_I2C_Init
   244 ;;		_i2c_lcd_init
   245 ;;		_i2c_lcd_puts
   246 ;;		_i2c_lcd_set_cursor
   247 ;; This function is called by:
   248 ;;		Startup code after reset
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252                           	psect	text0
   253  000960                     __ptext0:
   254                           	callstack 0
   255  000960                     _main:
   256                           	callstack 24
   257  000960                     
   258                           ;main.c: 9:     ADCON1 = 0x0F;
   259  000960  0E0F               	movlw	15
   260  000962  6EC1               	movwf	193,c	;volatile
   261  000964                     
   262                           ;main.c: 11:     I2C_Init();
   263  000964  EC25  F005         	call	_I2C_Init	;wreg free
   264  000968                     
   265                           ;main.c: 12:     i2c_lcd_init();
   266  000968  EC0C  F004         	call	_i2c_lcd_init	;wreg free
   267  00096C                     
   268                           ;main.c: 13:     i2c_lcd_puts("Hola UNIVALLE");
   269  00096C  0E01               	movlw	low STR_1
   270  00096E  6E0D               	movwf	i2c_lcd_puts@str^0,c
   271  000970  0E08               	movlw	high STR_1
   272  000972  6E0E               	movwf	(i2c_lcd_puts@str+1)^0,c
   273  000974  ECCB  F004         	call	_i2c_lcd_puts	;wreg free
   274  000978                     
   275                           ;main.c: 14:     i2c_lcd_set_cursor(2,1);
   276  000978  0E01               	movlw	1
   277  00097A  6E0D               	movwf	i2c_lcd_set_cursor@col^0,c
   278  00097C  0E02               	movlw	2
   279  00097E  EC4A  F004         	call	_i2c_lcd_set_cursor
   280  000982                     
   281                           ;main.c: 15:     i2c_lcd_puts("Zarzal");
   282  000982  0E0F               	movlw	low STR_2
   283  000984  6E0D               	movwf	i2c_lcd_puts@str^0,c
   284  000986  0E08               	movlw	high STR_2
   285  000988  6E0E               	movwf	(i2c_lcd_puts@str+1)^0,c
   286  00098A  ECCB  F004         	call	_i2c_lcd_puts	;wreg free
   287  00098E                     l15:
   288  00098E  EFC7  F004         	goto	l15
   289  000992  EF00  F000         	goto	start
   290  000996                     __end_of_main:
   291                           	callstack 0
   292                           
   293 ;; *************** function _i2c_lcd_set_cursor *****************
   294 ;; Defined at:
   295 ;;		line 87 in file "LCD_I2C_LIB.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;  row             1    wreg     unsigned char 
   298 ;;  col             1   12[COMRAM] unsigned char 
   299 ;; Auto vars:     Size  Location     Type
   300 ;;  row             1   15[COMRAM] unsigned char 
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   310 ;;      Params:         1       0       0       0       0       0       0       0       0
   311 ;;      Locals:         1       0       0       0       0       0       0       0       0
   312 ;;      Temps:          2       0       0       0       0       0       0       0       0
   313 ;;      Totals:         4       0       0       0       0       0       0       0       0
   314 ;;Total ram usage:        4 bytes
   315 ;; Hardware stack levels used: 1
   316 ;; Hardware stack levels required when called: 6
   317 ;; This function calls:
   318 ;;		_i2c_lcd_command
   319 ;; This function is called by:
   320 ;;		_main
   321 ;;		_i2c_lcd_out
   322 ;;		_i2c_lcd_char
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text1
   327  000894                     __ptext1:
   328                           	callstack 0
   329  000894                     _i2c_lcd_set_cursor:
   330                           	callstack 24
   331                           
   332                           ;incstack = 0
   333                           ;i2c_lcd_set_cursor@row stored from wreg
   334  000894  6E10               	movwf	i2c_lcd_set_cursor@row^0,c
   335  000896                     
   336                           ;LCD_I2C_LIB.c: 89:  switch(row){
   337  000896  EF65  F004         	goto	l1140
   338  00089A                     l1130:
   339  00089A  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   340  00089C  0F7F               	addlw	127
   341  00089E  EC4F  F005         	call	_i2c_lcd_command
   342  0008A2  EF82  F004         	goto	l70
   343  0008A6                     l1132:
   344  0008A6  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   345  0008A8  0FBF               	addlw	191
   346  0008AA  EC4F  F005         	call	_i2c_lcd_command
   347  0008AE  EF82  F004         	goto	l70
   348  0008B2                     l1134:
   349  0008B2  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   350  0008B4  0F93               	addlw	147
   351  0008B6  EC4F  F005         	call	_i2c_lcd_command
   352  0008BA  EF82  F004         	goto	l70
   353  0008BE                     l1136:
   354  0008BE  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   355  0008C0  0FD3               	addlw	211
   356  0008C2  EC4F  F005         	call	_i2c_lcd_command
   357  0008C6  EF82  F004         	goto	l70
   358  0008CA                     l1140:
   359  0008CA  5010               	movf	i2c_lcd_set_cursor@row^0,w,c
   360  0008CC  6E0E               	movwf	??_i2c_lcd_set_cursor^0,c
   361  0008CE  6A0F               	clrf	(??_i2c_lcd_set_cursor+1)^0,c
   362                           
   363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   364                           ; Switch size 1, requested type "simple"
   365                           ; Number of cases is 1, Range of values is 0 to 0
   366                           ; switch strategies available:
   367                           ; Name         Instructions Cycles
   368                           ; simple_byte            4     3 (average)
   369                           ;	Chosen strategy is simple_byte
   370  0008D0  500F               	movf	(??_i2c_lcd_set_cursor+1)^0,w,c
   371  0008D2  0A00               	xorlw	0	; case 0
   372  0008D4  B4D8               	btfsc	status,2,c
   373  0008D6  EF6F  F004         	goto	l1246
   374  0008DA  EF82  F004         	goto	l70
   375  0008DE                     l1246:
   376                           
   377                           ; Switch size 1, requested type "simple"
   378                           ; Number of cases is 4, Range of values is 1 to 4
   379                           ; switch strategies available:
   380                           ; Name         Instructions Cycles
   381                           ; simple_byte           13     7 (average)
   382                           ;	Chosen strategy is simple_byte
   383  0008DE  500E               	movf	??_i2c_lcd_set_cursor^0,w,c
   384  0008E0  0A01               	xorlw	1	; case 1
   385  0008E2  B4D8               	btfsc	status,2,c
   386  0008E4  EF4D  F004         	goto	l1130
   387  0008E8  0A03               	xorlw	3	; case 2
   388  0008EA  B4D8               	btfsc	status,2,c
   389  0008EC  EF53  F004         	goto	l1132
   390  0008F0  0A01               	xorlw	1	; case 3
   391  0008F2  B4D8               	btfsc	status,2,c
   392  0008F4  EF59  F004         	goto	l1134
   393  0008F8  0A07               	xorlw	7	; case 4
   394  0008FA  B4D8               	btfsc	status,2,c
   395  0008FC  EF5F  F004         	goto	l1136
   396  000900  EF82  F004         	goto	l70
   397  000904                     l70:
   398  000904  0012               	return		;funcret
   399  000906                     __end_of_i2c_lcd_set_cursor:
   400                           	callstack 0
   401                           
   402 ;; *************** function _i2c_lcd_puts *****************
   403 ;; Defined at:
   404 ;;		line 80 in file "LCD_I2C_LIB.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;  str             2   12[COMRAM] PTR unsigned char 
   407 ;;		 -> STR_2(7), STR_1(14), 
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   419 ;;      Params:         2       0       0       0       0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0       0       0       0       0
   422 ;;      Totals:         2       0       0       0       0       0       0       0       0
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels used: 1
   425 ;; Hardware stack levels required when called: 6
   426 ;; This function calls:
   427 ;;		_i2c_lcd_write
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text2
   434  000996                     __ptext2:
   435                           	callstack 0
   436  000996                     _i2c_lcd_puts:
   437                           	callstack 24
   438  000996                     
   439                           ;LCD_I2C_LIB.c: 81:     while(*str){
   440  000996  EFD7  F004         	goto	l1126
   441  00099A                     l1122:
   442                           
   443                           ;LCD_I2C_LIB.c: 82:         i2c_lcd_write(*str);
   444  00099A  C00D  FFF6         	movff	i2c_lcd_puts@str,tblptrl
   445  00099E  C00E  FFF7         	movff	i2c_lcd_puts@str+1,tblptrh
   446  0009A2                     	if	0	;tblptru may be non-zero
   447  0009A2                     	endif
   448  0009A2                     	if	0	;tblptru may be non-zero
   449  0009A2                     	endif
   450  0009A2  0008               	tblrd		*
   451  0009A4  50F5               	movf	tablat,w,c
   452  0009A6  EC4A  F005         	call	_i2c_lcd_write
   453  0009AA                     
   454                           ;LCD_I2C_LIB.c: 83:         str++;
   455  0009AA  4A0D               	infsnz	i2c_lcd_puts@str^0,f,c
   456  0009AC  2A0E               	incf	(i2c_lcd_puts@str+1)^0,f,c
   457  0009AE                     l1126:
   458                           
   459                           ;LCD_I2C_LIB.c: 81:     while(*str){
   460  0009AE  C00D  FFF6         	movff	i2c_lcd_puts@str,tblptrl
   461  0009B2  C00E  FFF7         	movff	i2c_lcd_puts@str+1,tblptrh
   462  0009B6                     	if	0	;tblptru may be non-zero
   463  0009B6                     	endif
   464  0009B6                     	if	0	;tblptru may be non-zero
   465  0009B6                     	endif
   466  0009B6  0008               	tblrd		*
   467  0009B8  50F5               	movf	tablat,w,c
   468  0009BA  0900               	iorlw	0
   469  0009BC  A4D8               	btfss	status,2,c
   470  0009BE  EFE3  F004         	goto	u61
   471  0009C2  EFE5  F004         	goto	u60
   472  0009C6                     u61:
   473  0009C6  EFCD  F004         	goto	l1122
   474  0009CA                     u60:
   475  0009CA  0012               	return		;funcret
   476  0009CC                     __end_of_i2c_lcd_puts:
   477                           	callstack 0
   478                           
   479 ;; *************** function _i2c_lcd_write *****************
   480 ;; Defined at:
   481 ;;		line 49 in file "LCD_I2C_LIB.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;  letra           1    wreg     unsigned char 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  letra           1   11[COMRAM] unsigned char 
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   495 ;;      Params:         0       0       0       0       0       0       0       0       0
   496 ;;      Locals:         1       0       0       0       0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0       0       0       0       0
   498 ;;      Totals:         1       0       0       0       0       0       0       0       0
   499 ;;Total ram usage:        1 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; Hardware stack levels required when called: 5
   502 ;; This function calls:
   503 ;;		_sendDATA
   504 ;; This function is called by:
   505 ;;		_i2c_lcd_puts
   506 ;;		_i2c_lcd_out
   507 ;;		_i2c_lcd_char
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text3
   512  000A94                     __ptext3:
   513                           	callstack 0
   514  000A94                     _i2c_lcd_write:
   515                           	callstack 24
   516                           
   517                           ;incstack = 0
   518                           ;i2c_lcd_write@letra stored from wreg
   519  000A94  6E0C               	movwf	i2c_lcd_write@letra^0,c
   520  000A96                     
   521                           ;LCD_I2C_LIB.c: 50:     sendDATA(letra);
   522  000A96  500C               	movf	i2c_lcd_write@letra^0,w,c
   523  000A98  ECE6  F004         	call	_sendDATA
   524  000A9C  0012               	return		;funcret
   525  000A9E                     __end_of_i2c_lcd_write:
   526                           	callstack 0
   527                           
   528 ;; *************** function _sendDATA *****************
   529 ;; Defined at:
   530 ;;		line 30 in file "LCD_I2C_LIB.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  dato            1    wreg     char 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  dato            1   10[COMRAM] char 
   535 ;;  nibbleL         1    9[COMRAM] unsigned char 
   536 ;;  nibbleH         1    8[COMRAM] unsigned char 
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, status,2, status,0, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   546 ;;      Params:         0       0       0       0       0       0       0       0       0
   547 ;;      Locals:         3       0       0       0       0       0       0       0       0
   548 ;;      Temps:          1       0       0       0       0       0       0       0       0
   549 ;;      Totals:         4       0       0       0       0       0       0       0       0
   550 ;;Total ram usage:        4 bytes
   551 ;; Hardware stack levels used: 1
   552 ;; Hardware stack levels required when called: 4
   553 ;; This function calls:
   554 ;;		_loadPCF
   555 ;; This function is called by:
   556 ;;		_i2c_lcd_write
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text4
   561  0009CC                     __ptext4:
   562                           	callstack 0
   563  0009CC                     _sendDATA:
   564                           	callstack 24
   565                           
   566                           ;incstack = 0
   567                           ;sendDATA@dato stored from wreg
   568  0009CC  6E0B               	movwf	sendDATA@dato^0,c
   569  0009CE                     
   570                           ;LCD_I2C_LIB.c: 31:     char nibbleH, nibbleL;;LCD_I2C_LIB.c: 33:     nibbleH = (dato & 
      +                          0xF0)<<0;
   571  0009CE  500B               	movf	sendDATA@dato^0,w,c
   572  0009D0  0BF0               	andlw	240
   573  0009D2  6E09               	movwf	sendDATA@nibbleH^0,c
   574                           
   575                           ;LCD_I2C_LIB.c: 34:     nibbleL = (dato & 0x0F)<<4;
   576  0009D4  C00B  F008         	movff	sendDATA@dato,??_sendDATA
   577  0009D8  0E0F               	movlw	15
   578  0009DA  1608               	andwf	??_sendDATA^0,f,c
   579  0009DC  3808               	swapf	??_sendDATA^0,w,c
   580  0009DE  0BF0               	andlw	240
   581  0009E0  6E0A               	movwf	sendDATA@nibbleL^0,c
   582  0009E2                     
   583                           ;LCD_I2C_LIB.c: 36:     loadPCF(nibbleH,1);
   584  0009E2  0E01               	movlw	1
   585  0009E4  6E04               	movwf	loadPCF@mode^0,c
   586  0009E6  5009               	movf	sendDATA@nibbleH^0,w,c
   587  0009E8  EC83  F004         	call	_loadPCF
   588  0009EC                     
   589                           ;LCD_I2C_LIB.c: 37:     loadPCF(nibbleL,1);
   590  0009EC  0E01               	movlw	1
   591  0009EE  6E04               	movwf	loadPCF@mode^0,c
   592  0009F0  500A               	movf	sendDATA@nibbleL^0,w,c
   593  0009F2  EC83  F004         	call	_loadPCF
   594  0009F6  0012               	return		;funcret
   595  0009F8                     __end_of_sendDATA:
   596                           	callstack 0
   597                           
   598 ;; *************** function _i2c_lcd_init *****************
   599 ;; Defined at:
   600 ;;		line 56 in file "LCD_I2C_LIB.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   614 ;;      Params:         0       0       0       0       0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0       0       0
   616 ;;      Temps:          1       0       0       0       0       0       0       0       0
   617 ;;      Totals:         1       0       0       0       0       0       0       0       0
   618 ;;Total ram usage:        1 bytes
   619 ;; Hardware stack levels used: 1
   620 ;; Hardware stack levels required when called: 6
   621 ;; This function calls:
   622 ;;		_PCF_Wr
   623 ;;		_i2c_lcd_command
   624 ;;		_sendCMD
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text5
   631  000818                     __ptext5:
   632                           	callstack 0
   633  000818                     _i2c_lcd_init:
   634                           	callstack 24
   635  000818                     
   636                           ;LCD_I2C_LIB.c: 58:     PCF_Wr(0x00);
   637  000818  0E00               	movlw	0
   638  00081A  EC32  F005         	call	_PCF_Wr
   639  00081E                     
   640                           ;LCD_I2C_LIB.c: 59:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
   641  00081E  0E62               	movlw	98
   642  000820  6E0D               	movwf	??_i2c_lcd_init^0,c
   643  000822  0E66               	movlw	102
   644  000824                     u97:
   645  000824  2EE8               	decfsz	wreg,f,c
   646  000826  D7FE               	bra	u97
   647  000828  2E0D               	decfsz	??_i2c_lcd_init^0,f,c
   648  00082A  D7FC               	bra	u97
   649  00082C                     
   650                           ;LCD_I2C_LIB.c: 60:     sendCMD(0x03);
   651  00082C  0E03               	movlw	3
   652  00082E  ECFC  F004         	call	_sendCMD
   653                           
   654                           ;LCD_I2C_LIB.c: 61:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   655  000832  0E21               	movlw	33
   656  000834  6E0D               	movwf	??_i2c_lcd_init^0,c
   657  000836  0E76               	movlw	118
   658  000838                     u107:
   659  000838  2EE8               	decfsz	wreg,f,c
   660  00083A  D7FE               	bra	u107
   661  00083C  2E0D               	decfsz	??_i2c_lcd_init^0,f,c
   662  00083E  D7FC               	bra	u107
   663  000840  D000               	nop2	
   664  000842                     
   665                           ;LCD_I2C_LIB.c: 62:     sendCMD(0x03);
   666  000842  0E03               	movlw	3
   667  000844  ECFC  F004         	call	_sendCMD
   668  000848                     
   669                           ;LCD_I2C_LIB.c: 63:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   670  000848  0EA6               	movlw	166
   671  00084A                     u117:
   672  00084A  2EE8               	decfsz	wreg,f,c
   673  00084C  D7FE               	bra	u117
   674  00084E  D000               	nop2	
   675                           
   676                           ;LCD_I2C_LIB.c: 64:     sendCMD(0x03);
   677  000850  0E03               	movlw	3
   678  000852  ECFC  F004         	call	_sendCMD
   679                           
   680                           ;LCD_I2C_LIB.c: 65:     sendCMD(0x02);
   681  000856  0E02               	movlw	2
   682  000858  ECFC  F004         	call	_sendCMD
   683                           
   684                           ;LCD_I2C_LIB.c: 67:     i2c_lcd_command( 0x20 | 0x00 | 0x08 | 0x00 );
   685  00085C  0E28               	movlw	40
   686  00085E  EC4F  F005         	call	_i2c_lcd_command
   687  000862                     
   688                           ;LCD_I2C_LIB.c: 68:     _delay((unsigned long)((37)*(20000000UL/4000000.0)));
   689  000862  0E3D               	movlw	61
   690  000864                     u127:
   691  000864  2EE8               	decfsz	wreg,f,c
   692  000866  D7FE               	bra	u127
   693  000868  D000               	nop2	
   694  00086A                     
   695                           ;LCD_I2C_LIB.c: 70:     _lcd_params = 0x04 | 0x02 | 0x01;
   696  00086A  0E07               	movlw	7
   697  00086C  6E11               	movwf	__lcd_params^0,c
   698  00086E                     
   699                           ;LCD_I2C_LIB.c: 71:     i2c_lcd_command(0x08 | _lcd_params);
   700  00086E  5011               	movf	__lcd_params^0,w,c
   701  000870  0908               	iorlw	8
   702  000872  EC4F  F005         	call	_i2c_lcd_command
   703  000876                     
   704                           ;LCD_I2C_LIB.c: 72:     _delay((unsigned long)((37)*(20000000UL/4000000.0)));
   705  000876  0E3D               	movlw	61
   706  000878                     u137:
   707  000878  2EE8               	decfsz	wreg,f,c
   708  00087A  D7FE               	bra	u137
   709  00087C  D000               	nop2	
   710  00087E                     
   711                           ;LCD_I2C_LIB.c: 74:     i2c_lcd_command(0x01);
   712  00087E  0E01               	movlw	1
   713  000880  EC4F  F005         	call	_i2c_lcd_command
   714  000884                     
   715                           ;LCD_I2C_LIB.c: 75:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
   716  000884  0E0D               	movlw	13
   717  000886  6E0D               	movwf	??_i2c_lcd_init^0,c
   718  000888  0EFC               	movlw	252
   719  00088A                     u147:
   720  00088A  2EE8               	decfsz	wreg,f,c
   721  00088C  D7FE               	bra	u147
   722  00088E  2E0D               	decfsz	??_i2c_lcd_init^0,f,c
   723  000890  D7FC               	bra	u147
   724  000892  0012               	return		;funcret
   725  000894                     __end_of_i2c_lcd_init:
   726                           	callstack 0
   727                           
   728 ;; *************** function _i2c_lcd_command *****************
   729 ;; Defined at:
   730 ;;		line 52 in file "LCD_I2C_LIB.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  cmd             1    wreg     unsigned char 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  cmd             1   11[COMRAM] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   744 ;;      Params:         0       0       0       0       0       0       0       0       0
   745 ;;      Locals:         1       0       0       0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0
   747 ;;      Totals:         1       0       0       0       0       0       0       0       0
   748 ;;Total ram usage:        1 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 5
   751 ;; This function calls:
   752 ;;		_sendCMD
   753 ;; This function is called by:
   754 ;;		_i2c_lcd_init
   755 ;;		_i2c_lcd_set_cursor
   756 ;;		_i2c_lcd_clear
   757 ;;		_i2c_lcd_return_home
   758 ;;		_i2c_lcd_on
   759 ;;		_i2c_lcd_off
   760 ;;		_i2c_lcd_enable_blink
   761 ;;		_i2c_lcd_disable_blink
   762 ;;		_i2c_lcd_enable_cursor
   763 ;;		_i2c_lcd_disable_cursor
   764 ;;		_i2c_lcd_scroll_left
   765 ;;		_i2c_lcd_scroll_right
   766 ;;		_i2c_lcd_custom_char
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text6
   771  000A9E                     __ptext6:
   772                           	callstack 0
   773  000A9E                     _i2c_lcd_command:
   774                           	callstack 24
   775                           
   776                           ;incstack = 0
   777                           ;i2c_lcd_command@cmd stored from wreg
   778  000A9E  6E0C               	movwf	i2c_lcd_command@cmd^0,c
   779  000AA0                     
   780                           ;LCD_I2C_LIB.c: 53:     sendCMD(cmd);
   781  000AA0  500C               	movf	i2c_lcd_command@cmd^0,w,c
   782  000AA2  ECFC  F004         	call	_sendCMD
   783  000AA6  0012               	return		;funcret
   784  000AA8                     __end_of_i2c_lcd_command:
   785                           	callstack 0
   786                           
   787 ;; *************** function _sendCMD *****************
   788 ;; Defined at:
   789 ;;		line 39 in file "LCD_I2C_LIB.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  cmd             1    wreg     char 
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  cmd             1   10[COMRAM] char 
   794 ;;  nibbleL         1    9[COMRAM] unsigned char 
   795 ;;  nibbleH         1    8[COMRAM] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   805 ;;      Params:         0       0       0       0       0       0       0       0       0
   806 ;;      Locals:         3       0       0       0       0       0       0       0       0
   807 ;;      Temps:          1       0       0       0       0       0       0       0       0
   808 ;;      Totals:         4       0       0       0       0       0       0       0       0
   809 ;;Total ram usage:        4 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 4
   812 ;; This function calls:
   813 ;;		_loadPCF
   814 ;; This function is called by:
   815 ;;		_i2c_lcd_command
   816 ;;		_i2c_lcd_init
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text7
   821  0009F8                     __ptext7:
   822                           	callstack 0
   823  0009F8                     _sendCMD:
   824                           	callstack 24
   825                           
   826                           ;incstack = 0
   827                           ;sendCMD@cmd stored from wreg
   828  0009F8  6E0B               	movwf	sendCMD@cmd^0,c
   829  0009FA                     
   830                           ;LCD_I2C_LIB.c: 40:     char nibbleH, nibbleL;;LCD_I2C_LIB.c: 42:     nibbleH = (cmd & 0
      +                          xF0)<<0;
   831  0009FA  500B               	movf	sendCMD@cmd^0,w,c
   832  0009FC  0BF0               	andlw	240
   833  0009FE  6E09               	movwf	sendCMD@nibbleH^0,c
   834                           
   835                           ;LCD_I2C_LIB.c: 43:     nibbleL = (cmd & 0x0F)<<4;
   836  000A00  C00B  F008         	movff	sendCMD@cmd,??_sendCMD
   837  000A04  0E0F               	movlw	15
   838  000A06  1608               	andwf	??_sendCMD^0,f,c
   839  000A08  3808               	swapf	??_sendCMD^0,w,c
   840  000A0A  0BF0               	andlw	240
   841  000A0C  6E0A               	movwf	sendCMD@nibbleL^0,c
   842  000A0E                     
   843                           ;LCD_I2C_LIB.c: 45:     loadPCF(nibbleH,0);
   844  000A0E  0E00               	movlw	0
   845  000A10  6E04               	movwf	loadPCF@mode^0,c
   846  000A12  5009               	movf	sendCMD@nibbleH^0,w,c
   847  000A14  EC83  F004         	call	_loadPCF
   848  000A18                     
   849                           ;LCD_I2C_LIB.c: 46:     loadPCF(nibbleL,0);
   850  000A18  0E00               	movlw	0
   851  000A1A  6E04               	movwf	loadPCF@mode^0,c
   852  000A1C  500A               	movf	sendCMD@nibbleL^0,w,c
   853  000A1E  EC83  F004         	call	_loadPCF
   854  000A22  0012               	return		;funcret
   855  000A24                     __end_of_sendCMD:
   856                           	callstack 0
   857                           
   858 ;; *************** function _loadPCF *****************
   859 ;; Defined at:
   860 ;;		line 14 in file "LCD_I2C_LIB.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  dato            1    wreg     char 
   863 ;;  mode            1    3[COMRAM] unsigned char 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  dato            1    6[COMRAM] char 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   875 ;;      Params:         1       0       0       0       0       0       0       0       0
   876 ;;      Locals:         1       0       0       0       0       0       0       0       0
   877 ;;      Temps:          2       0       0       0       0       0       0       0       0
   878 ;;      Totals:         4       0       0       0       0       0       0       0       0
   879 ;;Total ram usage:        4 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 3
   882 ;; This function calls:
   883 ;;		_PCF_Wr
   884 ;; This function is called by:
   885 ;;		_sendDATA
   886 ;;		_sendCMD
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text8
   891  000906                     __ptext8:
   892                           	callstack 0
   893  000906                     _loadPCF:
   894                           	callstack 24
   895                           
   896                           ;incstack = 0
   897                           ;loadPCF@dato stored from wreg
   898  000906  6E07               	movwf	loadPCF@dato^0,c
   899  000908                     
   900                           ;LCD_I2C_LIB.c: 16:     switch(mode){
   901  000908  EF8C  F004         	goto	l1066
   902  00090C                     l1060:
   903  00090C  9007               	bcf	loadPCF@dato^0,0,c
   904  00090E  EFA1  F004         	goto	l1068
   905  000912                     l1062:
   906  000912  8007               	bsf	loadPCF@dato^0,0,c
   907  000914  EFA1  F004         	goto	l1068
   908  000918                     l1066:
   909  000918  5004               	movf	loadPCF@mode^0,w,c
   910  00091A  6E05               	movwf	??_loadPCF^0,c
   911  00091C  6A06               	clrf	(??_loadPCF+1)^0,c
   912                           
   913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   914                           ; Switch size 1, requested type "simple"
   915                           ; Number of cases is 1, Range of values is 0 to 0
   916                           ; switch strategies available:
   917                           ; Name         Instructions Cycles
   918                           ; simple_byte            4     3 (average)
   919                           ;	Chosen strategy is simple_byte
   920  00091E  5006               	movf	(??_loadPCF+1)^0,w,c
   921  000920  0A00               	xorlw	0	; case 0
   922  000922  B4D8               	btfsc	status,2,c
   923  000924  EF96  F004         	goto	l1248
   924  000928  EFA1  F004         	goto	l1068
   925  00092C                     l1248:
   926                           
   927                           ; Switch size 1, requested type "simple"
   928                           ; Number of cases is 2, Range of values is 0 to 1
   929                           ; switch strategies available:
   930                           ; Name         Instructions Cycles
   931                           ; simple_byte            7     4 (average)
   932                           ;	Chosen strategy is simple_byte
   933  00092C  5005               	movf	??_loadPCF^0,w,c
   934  00092E  0A00               	xorlw	0	; case 0
   935  000930  B4D8               	btfsc	status,2,c
   936  000932  EF86  F004         	goto	l1060
   937  000936  0A01               	xorlw	1	; case 1
   938  000938  B4D8               	btfsc	status,2,c
   939  00093A  EF89  F004         	goto	l1062
   940  00093E  EFA1  F004         	goto	l1068
   941  000942                     l1068:
   942                           
   943                           ;LCD_I2C_LIB.c: 21:     PCF_Wr(dato);
   944  000942  5007               	movf	loadPCF@dato^0,w,c
   945  000944  EC32  F005         	call	_PCF_Wr
   946  000948                     
   947                           ;LCD_I2C_LIB.c: 22:     dato |= (1<<2);
   948  000948  8407               	bsf	loadPCF@dato^0,2,c
   949  00094A                     
   950                           ;LCD_I2C_LIB.c: 23:     PCF_Wr(dato);
   951  00094A  5007               	movf	loadPCF@dato^0,w,c
   952  00094C  EC32  F005         	call	_PCF_Wr
   953                           
   954                           ;LCD_I2C_LIB.c: 24:     dato &= ~(1<<2);
   955  000950  9407               	bcf	loadPCF@dato^0,2,c
   956  000952                     
   957                           ;LCD_I2C_LIB.c: 25:     PCF_Wr(dato);
   958  000952  5007               	movf	loadPCF@dato^0,w,c
   959  000954  EC32  F005         	call	_PCF_Wr
   960  000958                     
   961                           ;LCD_I2C_LIB.c: 26:     _delay((unsigned long)((30)*(20000000UL/4000000.0)));
   962  000958  0E32               	movlw	50
   963  00095A                     u157:
   964  00095A  2EE8               	decfsz	wreg,f,c
   965  00095C  D7FE               	bra	u157
   966  00095E  0012               	return		;funcret
   967  000960                     __end_of_loadPCF:
   968                           	callstack 0
   969                           
   970 ;; *************** function _PCF_Wr *****************
   971 ;; Defined at:
   972 ;;		line 8 in file "LCD_I2C_LIB.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  dato            1    wreg     char 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  dato            1    2[COMRAM] char 
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   986 ;;      Params:         0       0       0       0       0       0       0       0       0
   987 ;;      Locals:         1       0       0       0       0       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0       0       0       0       0
   989 ;;      Totals:         1       0       0       0       0       0       0       0       0
   990 ;;Total ram usage:        1 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; Hardware stack levels required when called: 2
   993 ;; This function calls:
   994 ;;		_I2C_Start
   995 ;;		_I2C_Stop
   996 ;;		_I2C_Wr
   997 ;; This function is called by:
   998 ;;		_loadPCF
   999 ;;		_i2c_lcd_init
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text9
  1004  000A64                     __ptext9:
  1005                           	callstack 0
  1006  000A64                     _PCF_Wr:
  1007                           	callstack 24
  1008                           
  1009                           ;incstack = 0
  1010                           ;PCF_Wr@dato stored from wreg
  1011  000A64  6E03               	movwf	PCF_Wr@dato^0,c
  1012  000A66                     
  1013                           ;LCD_I2C_LIB.c: 9:     I2C_Start();
  1014  000A66  EC58  F005         	call	_I2C_Start	;wreg free
  1015                           
  1016                           ;LCD_I2C_LIB.c: 10:     I2C_Wr( (0x27<<1)|0);
  1017  000A6A  0E4E               	movlw	78
  1018  000A6C  EC44  F005         	call	_I2C_Wr
  1019                           
  1020                           ;LCD_I2C_LIB.c: 11:     I2C_Wr(dato);
  1021  000A70  5003               	movf	PCF_Wr@dato^0,w,c
  1022  000A72  EC44  F005         	call	_I2C_Wr
  1023                           
  1024                           ;LCD_I2C_LIB.c: 12:     I2C_Stop();
  1025  000A76  EC54  F005         	call	_I2C_Stop	;wreg free
  1026  000A7A  0012               	return		;funcret
  1027  000A7C                     __end_of_PCF_Wr:
  1028                           	callstack 0
  1029                           
  1030 ;; *************** function _I2C_Wr *****************
  1031 ;; Defined at:
  1032 ;;		line 33 in file "I2C_LIB.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  data            1    wreg     unsigned char 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  data            1    1[COMRAM] unsigned char 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2, status,0, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0
  1047 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1048 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1049 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1050 ;;Total ram usage:        1 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 1
  1053 ;; This function calls:
  1054 ;;		_I2C_Condiciones_Espera
  1055 ;; This function is called by:
  1056 ;;		_PCF_Wr
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text10
  1061  000A88                     __ptext10:
  1062                           	callstack 0
  1063  000A88                     _I2C_Wr:
  1064                           	callstack 24
  1065                           
  1066                           ;incstack = 0
  1067                           ;I2C_Wr@data stored from wreg
  1068  000A88  6E02               	movwf	I2C_Wr@data^0,c
  1069  000A8A                     
  1070                           ;I2C_LIB.c: 34:     I2C_Condiciones_Espera();
  1071  000A8A  EC12  F005         	call	_I2C_Condiciones_Espera	;wreg free
  1072  000A8E                     
  1073                           ;I2C_LIB.c: 35:     SSPBUF = data;
  1074  000A8E  C002  FFC9         	movff	I2C_Wr@data,4041	;volatile
  1075  000A92  0012               	return		;funcret
  1076  000A94                     __end_of_I2C_Wr:
  1077                           	callstack 0
  1078                           
  1079 ;; *************** function _I2C_Stop *****************
  1080 ;; Defined at:
  1081 ;;		line 25 in file "I2C_LIB.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1095 ;;      Params:         0       0       0       0       0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1098 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1099 ;;Total ram usage:        0 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; Hardware stack levels required when called: 1
  1102 ;; This function calls:
  1103 ;;		_I2C_Condiciones_Espera
  1104 ;; This function is called by:
  1105 ;;		_PCF_Wr
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text11
  1110  000AA8                     __ptext11:
  1111                           	callstack 0
  1112  000AA8                     _I2C_Stop:
  1113                           	callstack 24
  1114  000AA8                     
  1115                           ;I2C_LIB.c: 26:     I2C_Condiciones_Espera();
  1116  000AA8  EC12  F005         	call	_I2C_Condiciones_Espera	;wreg free
  1117  000AAC                     
  1118                           ;I2C_LIB.c: 27:     SSPCON2bits.PEN = 1;
  1119  000AAC  84C5               	bsf	197,2,c	;volatile
  1120  000AAE  0012               	return		;funcret
  1121  000AB0                     __end_of_I2C_Stop:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function _I2C_Start *****************
  1125 ;; Defined at:
  1126 ;;		line 21 in file "I2C_LIB.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1140 ;;      Params:         0       0       0       0       0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1143 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; Hardware stack levels required when called: 1
  1147 ;; This function calls:
  1148 ;;		_I2C_Condiciones_Espera
  1149 ;; This function is called by:
  1150 ;;		_PCF_Wr
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text12
  1155  000AB0                     __ptext12:
  1156                           	callstack 0
  1157  000AB0                     _I2C_Start:
  1158                           	callstack 24
  1159  000AB0                     
  1160                           ;I2C_LIB.c: 22:     I2C_Condiciones_Espera();
  1161  000AB0  EC12  F005         	call	_I2C_Condiciones_Espera	;wreg free
  1162  000AB4                     
  1163                           ;I2C_LIB.c: 23:     SSPCON2bits.SEN = 1;
  1164  000AB4  80C5               	bsf	197,0,c	;volatile
  1165  000AB6  0012               	return		;funcret
  1166  000AB8                     __end_of_I2C_Start:
  1167                           	callstack 0
  1168                           
  1169 ;; *************** function _I2C_Condiciones_Espera *****************
  1170 ;; Defined at:
  1171 ;;		line 18 in file "I2C_LIB.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, status,0
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1185 ;;      Params:         0       0       0       0       0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1187 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1188 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1189 ;;Total ram usage:        1 bytes
  1190 ;; Hardware stack levels used: 1
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_I2C_Start
  1195 ;;		_I2C_Stop
  1196 ;;		_I2C_Wr
  1197 ;;		_I2C_Restart
  1198 ;;		_I2C_Rd
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text13
  1203  000A24                     __ptext13:
  1204                           	callstack 0
  1205  000A24                     _I2C_Condiciones_Espera:
  1206                           	callstack 24
  1207  000A24                     l832:
  1208  000A24  CFC5 F001          	movff	4037,??_I2C_Condiciones_Espera	;volatile
  1209  000A28  0E1F               	movlw	31
  1210  000A2A  1601               	andwf	??_I2C_Condiciones_Espera^0,f,c
  1211  000A2C  A4D8               	btfss	status,2,c
  1212  000A2E  EF1B  F005         	goto	u11
  1213  000A32  EF1D  F005         	goto	u10
  1214  000A36                     u11:
  1215  000A36  EF12  F005         	goto	l832
  1216  000A3A                     u10:
  1217  000A3A  B4C7               	btfsc	199,2,c	;volatile
  1218  000A3C  EF22  F005         	goto	u21
  1219  000A40  EF24  F005         	goto	u20
  1220  000A44                     u21:
  1221  000A44  EF12  F005         	goto	l832
  1222  000A48                     u20:
  1223  000A48  0012               	return		;funcret
  1224  000A4A                     __end_of_I2C_Condiciones_Espera:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _I2C_Init *****************
  1228 ;; Defined at:
  1229 ;;		line 6 in file "I2C_LIB.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1243 ;;      Params:         0       0       0       0       0       0       0       0       0
  1244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1246 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1247 ;;Total ram usage:        0 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text14
  1257  000A4A                     __ptext14:
  1258                           	callstack 0
  1259  000A4A                     _I2C_Init:
  1260                           	callstack 30
  1261  000A4A                     
  1262                           ;I2C_LIB.c: 7:     TRISBbits.RB0 = 1;
  1263  000A4A  8093               	bsf	147,0,c	;volatile
  1264                           
  1265                           ;I2C_LIB.c: 8:     TRISBbits.RB1 = 1;
  1266  000A4C  8293               	bsf	147,1,c	;volatile
  1267                           
  1268                           ;I2C_LIB.c: 10:     SSPSTATbits.SMP = 1;
  1269  000A4E  8EC7               	bsf	199,7,c	;volatile
  1270                           
  1271                           ;I2C_LIB.c: 11:     SSPCON1bits.SSPEN = 1;
  1272  000A50  8AC6               	bsf	198,5,c	;volatile
  1273  000A52                     
  1274                           ;I2C_LIB.c: 12:     SSPCON1bits.SSPM = 0b1000;
  1275  000A52  50C6               	movf	198,w,c	;volatile
  1276  000A54  0BF0               	andlw	-16
  1277  000A56  0908               	iorlw	8
  1278  000A58  6EC6               	movwf	198,c	;volatile
  1279                           
  1280                           ;I2C_LIB.c: 14:     SSPADD = (unsigned int)((20000000UL/(4.0*100000UL))-1.0);
  1281  000A5A  0E31               	movlw	49
  1282  000A5C  6EC8               	movwf	200,c	;volatile
  1283                           
  1284                           ;I2C_LIB.c: 16:     SSPCON2 = 0x00;
  1285  000A5E  0E00               	movlw	0
  1286  000A60  6EC5               	movwf	197,c	;volatile
  1287  000A62  0012               	return		;funcret
  1288  000A64                     __end_of_I2C_Init:
  1289                           	callstack 0
  1290                           
  1291                           	psect	rparam
  1292  0000                     
  1293                           	psect	idloc
  1294                           
  1295                           ;Config register IDLOC0 @ 0x200000
  1296                           ;	unspecified, using default values
  1297  200000                     	org	2097152
  1298  200000  FF                 	db	255
  1299                           
  1300                           ;Config register IDLOC1 @ 0x200001
  1301                           ;	unspecified, using default values
  1302  200001                     	org	2097153
  1303  200001  FF                 	db	255
  1304                           
  1305                           ;Config register IDLOC2 @ 0x200002
  1306                           ;	unspecified, using default values
  1307  200002                     	org	2097154
  1308  200002  FF                 	db	255
  1309                           
  1310                           ;Config register IDLOC3 @ 0x200003
  1311                           ;	unspecified, using default values
  1312  200003                     	org	2097155
  1313  200003  FF                 	db	255
  1314                           
  1315                           ;Config register IDLOC4 @ 0x200004
  1316                           ;	unspecified, using default values
  1317  200004                     	org	2097156
  1318  200004  FF                 	db	255
  1319                           
  1320                           ;Config register IDLOC5 @ 0x200005
  1321                           ;	unspecified, using default values
  1322  200005                     	org	2097157
  1323  200005  FF                 	db	255
  1324                           
  1325                           ;Config register IDLOC6 @ 0x200006
  1326                           ;	unspecified, using default values
  1327  200006                     	org	2097158
  1328  200006  FF                 	db	255
  1329                           
  1330                           ;Config register IDLOC7 @ 0x200007
  1331                           ;	unspecified, using default values
  1332  200007                     	org	2097159
  1333  200007  FF                 	db	255
  1334                           
  1335                           	psect	config
  1336                           
  1337                           ;Config register CONFIG1L @ 0x300000
  1338                           ;	PLL Prescaler Selection bits
  1339                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1340                           ;	System Clock Postscaler Selection bits
  1341                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1342                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1343                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1344  300000                     	org	3145728
  1345  300000  00                 	db	0
  1346                           
  1347                           ;Config register CONFIG1H @ 0x300001
  1348                           ;	Oscillator Selection bits
  1349                           ;	FOSC = HS, HS oscillator (HS)
  1350                           ;	Fail-Safe Clock Monitor Enable bit
  1351                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1352                           ;	Internal/External Oscillator Switchover bit
  1353                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1354  300001                     	org	3145729
  1355  300001  0C                 	db	12
  1356                           
  1357                           ;Config register CONFIG2L @ 0x300002
  1358                           ;	Power-up Timer Enable bit
  1359                           ;	PWRT = OFF, PWRT disabled
  1360                           ;	Brown-out Reset Enable bits
  1361                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1362                           ;	Brown-out Reset Voltage bits
  1363                           ;	BORV = 3, Minimum setting 2.05V
  1364                           ;	USB Voltage Regulator Enable bit
  1365                           ;	VREGEN = OFF, USB voltage regulator disabled
  1366  300002                     	org	3145730
  1367  300002  1F                 	db	31
  1368                           
  1369                           ;Config register CONFIG2H @ 0x300003
  1370                           ;	Watchdog Timer Enable bit
  1371                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1372                           ;	Watchdog Timer Postscale Select bits
  1373                           ;	WDTPS = 32768, 1:32768
  1374  300003                     	org	3145731
  1375  300003  1E                 	db	30
  1376                           
  1377                           ; Padding undefined space
  1378  300004                     	org	3145732
  1379  300004  FF                 	db	255
  1380                           
  1381                           ;Config register CONFIG3H @ 0x300005
  1382                           ;	CCP2 MUX bit
  1383                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1384                           ;	PORTB A/D Enable bit
  1385                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1386                           ;	Low-Power Timer 1 Oscillator Enable bit
  1387                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1388                           ;	MCLR Pin Enable bit
  1389                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1390  300005                     	org	3145733
  1391  300005  81                 	db	129
  1392                           
  1393                           ;Config register CONFIG4L @ 0x300006
  1394                           ;	Stack Full/Underflow Reset Enable bit
  1395                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1396                           ;	Single-Supply ICSP Enable bit
  1397                           ;	LVP = ON, Single-Supply ICSP enabled
  1398                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1399                           ;	ICPRT = OFF, ICPORT disabled
  1400                           ;	Extended Instruction Set Enable bit
  1401                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1402                           ;	Background Debugger Enable bit
  1403                           ;	DEBUG = 0x1, unprogrammed default
  1404  300006                     	org	3145734
  1405  300006  85                 	db	133
  1406                           
  1407                           ; Padding undefined space
  1408  300007                     	org	3145735
  1409  300007  FF                 	db	255
  1410                           
  1411                           ;Config register CONFIG5L @ 0x300008
  1412                           ;	Code Protection bit
  1413                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1414                           ;	Code Protection bit
  1415                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1416                           ;	Code Protection bit
  1417                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1418                           ;	Code Protection bit
  1419                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1420  300008                     	org	3145736
  1421  300008  0F                 	db	15
  1422                           
  1423                           ;Config register CONFIG5H @ 0x300009
  1424                           ;	Boot Block Code Protection bit
  1425                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1426                           ;	Data EEPROM Code Protection bit
  1427                           ;	CPD = OFF, Data EEPROM is not code-protected
  1428  300009                     	org	3145737
  1429  300009  C0                 	db	192
  1430                           
  1431                           ;Config register CONFIG6L @ 0x30000A
  1432                           ;	Write Protection bit
  1433                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1434                           ;	Write Protection bit
  1435                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1436                           ;	Write Protection bit
  1437                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1438                           ;	Write Protection bit
  1439                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1440  30000A                     	org	3145738
  1441  30000A  0F                 	db	15
  1442                           
  1443                           ;Config register CONFIG6H @ 0x30000B
  1444                           ;	Configuration Register Write Protection bit
  1445                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1446                           ;	Boot Block Write Protection bit
  1447                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1448                           ;	Data EEPROM Write Protection bit
  1449                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1450  30000B                     	org	3145739
  1451  30000B  E0                 	db	224
  1452                           
  1453                           ;Config register CONFIG7L @ 0x30000C
  1454                           ;	Table Read Protection bit
  1455                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1456                           ;	Table Read Protection bit
  1457                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1458                           ;	Table Read Protection bit
  1459                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1460                           ;	Table Read Protection bit
  1461                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1462  30000C                     	org	3145740
  1463  30000C  0F                 	db	15
  1464                           
  1465                           ;Config register CONFIG7H @ 0x30000D
  1466                           ;	Boot Block Table Read Protection bit
  1467                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1468  30000D                     	org	3145741
  1469  30000D  40                 	db	64
  1470                           tosu	equ	0xFFF
  1471                           tosh	equ	0xFFE
  1472                           tosl	equ	0xFFD
  1473                           stkptr	equ	0xFFC
  1474                           pclatu	equ	0xFFB
  1475                           pclath	equ	0xFFA
  1476                           pcl	equ	0xFF9
  1477                           tblptru	equ	0xFF8
  1478                           tblptrh	equ	0xFF7
  1479                           tblptrl	equ	0xFF6
  1480                           tablat	equ	0xFF5
  1481                           prodh	equ	0xFF4
  1482                           prodl	equ	0xFF3
  1483                           indf0	equ	0xFEF
  1484                           postinc0	equ	0xFEE
  1485                           postdec0	equ	0xFED
  1486                           preinc0	equ	0xFEC
  1487                           plusw0	equ	0xFEB
  1488                           fsr0h	equ	0xFEA
  1489                           fsr0l	equ	0xFE9
  1490                           wreg	equ	0xFE8
  1491                           indf1	equ	0xFE7
  1492                           postinc1	equ	0xFE6
  1493                           postdec1	equ	0xFE5
  1494                           preinc1	equ	0xFE4
  1495                           plusw1	equ	0xFE3
  1496                           fsr1h	equ	0xFE2
  1497                           fsr1l	equ	0xFE1
  1498                           bsr	equ	0xFE0
  1499                           indf2	equ	0xFDF
  1500                           postinc2	equ	0xFDE
  1501                           postdec2	equ	0xFDD
  1502                           preinc2	equ	0xFDC
  1503                           plusw2	equ	0xFDB
  1504                           fsr2h	equ	0xFDA
  1505                           fsr2l	equ	0xFD9
  1506                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2c_lcd_puts@str	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[7]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_i2c_lcd_set_cursor
    _i2c_lcd_set_cursor->_i2c_lcd_command
    _i2c_lcd_puts->_i2c_lcd_write
    _i2c_lcd_write->_sendDATA
    _sendDATA->_loadPCF
    _i2c_lcd_init->_i2c_lcd_command
    _i2c_lcd_command->_sendCMD
    _sendCMD->_loadPCF
    _loadPCF->_PCF_Wr
    _PCF_Wr->_I2C_Wr
    _I2C_Wr->_I2C_Condiciones_Espera
    _I2C_Stop->_I2C_Condiciones_Espera
    _I2C_Start->_I2C_Condiciones_Espera

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2695
                           _I2C_Init
                       _i2c_lcd_init
                       _i2c_lcd_puts
                 _i2c_lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_set_cursor                                   4     3      1     876
                                             12 COMRAM     4     3      1
                    _i2c_lcd_command
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_puts                                         2     0      2     735
                                             12 COMRAM     2     0      2
                      _i2c_lcd_write
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_write                                        1     1      0     538
                                             11 COMRAM     1     1      0
                           _sendDATA
 ---------------------------------------------------------------------------------
 (3) _sendDATA                                             4     4      0     516
                                              7 COMRAM     4     4      0
                            _loadPCF
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_init                                         1     1      0    1084
                                             12 COMRAM     1     1      0
                             _PCF_Wr
                    _i2c_lcd_command
                            _sendCMD
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_command                                      1     1      0     538
                                             11 COMRAM     1     1      0
                            _sendCMD
 ---------------------------------------------------------------------------------
 (3) _sendCMD                                              4     4      0     516
                                              7 COMRAM     4     4      0
                            _loadPCF
 ---------------------------------------------------------------------------------
 (4) _loadPCF                                              4     3      1     426
                                              3 COMRAM     4     3      1
                             _PCF_Wr
 ---------------------------------------------------------------------------------
 (5) _PCF_Wr                                               1     1      0      30
                                              2 COMRAM     1     1      0
                          _I2C_Start
                           _I2C_Stop
                             _I2C_Wr
 ---------------------------------------------------------------------------------
 (6) _I2C_Wr                                               1     1      0      15
                                              1 COMRAM     1     1      0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0       0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            0     0      0       0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (7) _I2C_Condiciones_Espera                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _i2c_lcd_init
     _PCF_Wr
       _I2C_Start
         _I2C_Condiciones_Espera
       _I2C_Stop
         _I2C_Condiciones_Espera
       _I2C_Wr
         _I2C_Condiciones_Espera
     _i2c_lcd_command
       _sendCMD
         _loadPCF
           _PCF_Wr
     _sendCMD
   _i2c_lcd_puts
     _i2c_lcd_write
       _sendDATA
         _loadPCF
   _i2c_lcd_set_cursor
     _i2c_lcd_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      11       1       17.9%
BITBIGSFRhh         36      0       0      20        0.0%
BITBIGSFRll         33      0       0      23        0.0%
BITBIGSFRlh         2D      0       0      22        0.0%
BITBIGSFRhl          3      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      24        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 09 09:39:14 2023

                   _SSPSTATbits 000FC7                              l15 098E                              l40 095E  
                            l16 098E                              l33 0A7A                              l43 09F6  
                            l52 0AA6                              l61 09CA                              l46 0A22  
                            l70 0904                              l55 0892                              l49 0A9C  
                            u10 0A3A                              u11 0A36                              u20 0A48  
                            u21 0A44                              u60 09CA                              u61 09C6  
                            u97 0824                             l133 0A62                             l142 0AB6  
                           l151 0A92                             l145 0AAE                             l139 0A48  
                           l830 0A24                             l832 0A24                             l840 0A8A  
                           l834 0A3A                             l842 0A8E                             l836 0AB0  
                           l844 0AA8                             l838 0AB4                             l846 0AAC  
                           l848 0A66                             l890 0A4A                             l892 0A52  
                           u107 0838                             u117 084A                             u127 0864  
                           u137 0878                             u147 088A                             u157 095A  
                           wreg 000FE8                   _i2c_lcd_write 0A94                            l1100 081E  
                          l1110 086A                            l1102 082C                            l1112 086E  
                          l1104 0842                            l1120 0996                            l1114 0876  
                          l1106 0848                            l1122 099A                            l1130 089A  
                          l1060 090C                            l1116 087E                            l1108 0862  
                          l1124 09AA                            l1132 08A6                            l1140 08CA  
                          l1070 0948                            l1062 0912                            l1118 0884  
                          l1126 09AE                            l1134 08B2                            l1150 0968  
                          l1072 094A                            l1136 08BE                            l1128 0896  
                          l1152 096C                            l1074 0952                            l1066 0918  
                          l1058 0908                            l1090 0A0E                            l1082 09CE  
                          l1154 0978                            l1146 0960                            l1076 0958  
                          l1068 0942                            l1092 0A18                            l1084 09E2  
                          l1156 0982                            l1148 0964                            l1086 09EC  
                          l1094 0A96                            l1246 08DE                            l1248 092C  
                          l1088 09FA                            l1096 0AA0                            l1098 0818  
                          STR_1 0801                            STR_2 080F                   ?_i2c_lcd_init 0001  
                 ?_i2c_lcd_puts 000D                            _main 0960                __end_of_I2C_Init 0A64  
              __end_of_I2C_Stop 0AB0                            start 0000                 sendDATA@nibbleH 0009  
               sendDATA@nibbleL 000A                    ___param_bank 000000                           ?_main 0001  
                sendCMD@nibbleH 0009                  sendCMD@nibbleL 000A                  ?_i2c_lcd_write 0001  
               _i2c_lcd_command 0A9E                     loadPCF@dato 0007                     loadPCF@mode 0004  
               __end_of_loadPCF 0960                  ??_i2c_lcd_init 000D                 __end_of_sendCMD 0A24  
                ??_i2c_lcd_puts 000F               __end_of_I2C_Start 0AB8                           tablat 000FF5  
                         status 000FD8                 __initialization 0A7C                    __end_of_main 0996  
                        ??_main 0011                   __activetblptr 000002         ?_I2C_Condiciones_Espera 0001  
                        _ADCON1 000FC1                          _I2C_Wr 0A88                          _PCF_Wr 0A64  
                        _SSPADD 000FC8                          _SSPBUF 000FC9                __end_of_sendDATA 09F8  
       __end_of_i2c_lcd_command 0AA8                          isa$std 000001  __end_of_I2C_Condiciones_Espera 0A4A  
               ??_i2c_lcd_write 000C                       ??_loadPCF 0005              i2c_lcd_command@cmd 000C  
                     ?_I2C_Init 0001                       ??_sendCMD 0008                       ?_I2C_Stop 0001  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                      __accesstop 0060         __end_of__initialization 0A7E  
                 ___rparam_used 000001                  __pcstackCOMRAM 0001            __end_of_i2c_lcd_init 0894  
          __end_of_i2c_lcd_puts 09CC                      ??_I2C_Init 0001                      ??_I2C_Stop 0002  
                       ?_I2C_Wr 0001                 i2c_lcd_puts@str 000D                         ?_PCF_Wr 0001  
                    I2C_Wr@data 0002                ?_i2c_lcd_command 0001                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7                       ?_sendDATA 0001                       _I2C_Start 0AB0  
                       __Hparam 0000                         __Lparam 0000                    __psmallconst 0800  
         i2c_lcd_set_cursor@col 000D                         __pcinit 0A7C           i2c_lcd_set_cursor@row 0010  
                       __ramtop 0800                         __ptext0 0960                         __ptext1 0894  
                       __ptext2 0996                         __ptext3 0A94                         __ptext4 09CC  
                       __ptext5 0818                         __ptext6 0A9E                         __ptext7 09F8  
                       __ptext8 0906                         __ptext9 0A64                         _loadPCF 0906  
                       _sendCMD 09F8            end_of_initialization 0A7E                   __Lmediumconst 0000  
                    ??_sendDATA 0008                      ?_I2C_Start 0001                       _TRISBbits 000F93  
                  sendDATA@dato 000B                    _i2c_lcd_init 0818                  __end_of_I2C_Wr 0A94  
                  _i2c_lcd_puts 0996                  __end_of_PCF_Wr 0A7C           __end_of_i2c_lcd_write 0A9E  
           start_initialization 0A7C                        ??_I2C_Wr 0002              i2c_lcd_write@letra 000C  
                      ??_PCF_Wr 0003                     __lcd_params 0011                     ??_I2C_Start 0002  
    __end_of_i2c_lcd_set_cursor 0906                      PCF_Wr@dato 0003                     __pbssCOMRAM 0011  
                    sendCMD@cmd 000B        ??_I2C_Condiciones_Espera 0001                        ?_loadPCF 0004  
                   __smallconst 0800                        _I2C_Init 0A4A                        ?_sendCMD 0001  
                      _I2C_Stop 0AA8                        __Hrparam 0000                        __Lrparam 0000  
                      __ptext10 0A88                        __ptext11 0AA8                        __ptext12 0AB0  
                      __ptext13 0A24                        __ptext14 0A4A               ??_i2c_lcd_command 000C  
                      _sendDATA 09CC                        isa$xinst 000000              _i2c_lcd_set_cursor 0894  
        _I2C_Condiciones_Espera 0A24             ?_i2c_lcd_set_cursor 000D            ??_i2c_lcd_set_cursor 000E  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
