

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jun 10 19:55:58 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  000AFC                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _DIR_PCF
    72  000AFC  27                 	db	39
    73                           
    74                           ;initializer for _LED_STATUS
    75  000AFD  08                 	db	8
    76  0000                     _SSPCON2bits	set	4037
    77  0000                     _SSPSTAT	set	4039
    78  0000                     _PORTDbits	set	3971
    79  0000                     _TRISDbits	set	3989
    80  0000                     _ADCON1	set	4033
    81  0000                     _SSPCON2	set	4037
    82  0000                     _SSPCON1bits	set	4038
    83  0000                     _SSPSTATbits	set	4039
    84  0000                     _TRISBbits	set	3987
    85  0000                     _SSPBUF	set	4041
    86  0000                     _SSPADD	set	4040
    87                           
    88                           	psect	smallconst
    89  000800                     __psmallconst:
    90                           	callstack 0
    91  000800  00                 	db	0
    92  000801                     STR_2:
    93  000801  20                 	db	32
    94  000802  46                 	db	70	;'F'
    95  000803  55                 	db	85	;'U'
    96  000804  4E                 	db	78	;'N'
    97  000805  43                 	db	67	;'C'
    98  000806  49                 	db	73	;'I'
    99  000807  4F                 	db	79	;'O'
   100  000808  4E                 	db	78	;'N'
   101  000809  41                 	db	65	;'A'
   102  00080A  20                 	db	32
   103  00080B  3A                 	db	58	;':'
   104  00080C  29                 	db	41
   105  00080D  00                 	db	0
   106  00080E                     STR_1:
   107  00080E  45                 	db	69	;'E'
   108  00080F  4E                 	db	78	;'N'
   109  000810  20                 	db	32
   110  000811  50                 	db	80	;'P'
   111  000812  43                 	db	67	;'C'
   112  000813  42                 	db	66	;'B'
   113  000814  20                 	db	32
   114  000815  53                 	db	83	;'S'
   115  000816  49                 	db	73	;'I'
   116  000817  20                 	db	32
   117  000818  00                 	db	0
   118  000819  00                 	db	0	; dummy byte at the end
   119  0000                     
   120                           ; #config settings
   121                           
   122                           	psect	cinit
   123  000A74                     __pcinit:
   124                           	callstack 0
   125  000A74                     start_initialization:
   126                           	callstack 0
   127  000A74                     __initialization:
   128                           	callstack 0
   129                           
   130                           ; Initialize objects allocated to COMRAM (2 bytes)
   131                           ; load TBLPTR registers with __pidataCOMRAM
   132  000A74  0EFC               	movlw	low __pidataCOMRAM
   133  000A76  6EF6               	movwf	tblptrl,c
   134  000A78  0E0A               	movlw	high __pidataCOMRAM
   135  000A7A  6EF7               	movwf	tblptrh,c
   136  000A7C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   137  000A7E  6EF8               	movwf	tblptru,c
   138  000A80  0009               	tblrd		*+	;fetch initializer
   139  000A82  CFF5 F013          	movff	tablat,__pdataCOMRAM
   140  000A86  0009               	tblrd		*+	;fetch initializer
   141  000A88  CFF5 F014          	movff	tablat,__pdataCOMRAM+1
   142                           
   143                           ; Clear objects allocated to COMRAM (1 bytes)
   144  000A8C  6A15               	clrf	__pbssCOMRAM& (0+255),c
   145  000A8E                     end_of_initialization:
   146                           	callstack 0
   147  000A8E                     __end_of__initialization:
   148                           	callstack 0
   149  000A8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150  000A90  6EF8               	movwf	tblptru,c
   151  000A92  0100               	movlb	0
   152  000A94  EF84  F004         	goto	_main	;jump to C main() function
   153                           
   154                           	psect	bssCOMRAM
   155  000015                     __pbssCOMRAM:
   156                           	callstack 0
   157  000015                     __lcd_params:
   158                           	callstack 0
   159  000015                     	ds	1
   160                           
   161                           	psect	dataCOMRAM
   162  000013                     __pdataCOMRAM:
   163                           	callstack 0
   164  000013                     _DIR_PCF:
   165                           	callstack 0
   166  000013                     	ds	1
   167  000014                     _LED_STATUS:
   168                           	callstack 0
   169  000014                     	ds	1
   170                           
   171                           	psect	cstackCOMRAM
   172  000001                     __pcstackCOMRAM:
   173                           	callstack 0
   174  000001                     ??_I2C_Condiciones_Espera:
   175                           
   176                           ; 1 bytes @ 0x0
   177  000001                     	ds	1
   178  000002                     I2C_Wr@data:
   179                           	callstack 0
   180                           
   181                           ; 1 bytes @ 0x1
   182  000002                     	ds	1
   183  000003                     PCF_Wr@dato:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x2
   187  000003                     	ds	1
   188  000004                     loadPCF@mode:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x3
   192  000004                     	ds	1
   193  000005                     ??_loadPCF:
   194                           
   195                           ; 1 bytes @ 0x4
   196  000005                     	ds	2
   197  000007                     loadPCF@dato:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0x6
   201  000007                     	ds	1
   202  000008                     ??_sendDATA:
   203  000008                     ??_sendCMD:
   204                           
   205                           ; 1 bytes @ 0x7
   206  000008                     	ds	1
   207  000009                     sendDATA@nibbleH:
   208                           	callstack 0
   209  000009                     sendCMD@nibbleH:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x8
   213  000009                     	ds	1
   214  00000A                     sendDATA@nibbleL:
   215                           	callstack 0
   216  00000A                     sendCMD@nibbleL:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x9
   220  00000A                     	ds	1
   221  00000B                     sendDATA@dato:
   222                           	callstack 0
   223  00000B                     sendCMD@cmd:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0xA
   227  00000B                     	ds	1
   228  00000C                     i2c_lcd_write@letra:
   229                           	callstack 0
   230  00000C                     i2c_lcd_command@cmd:
   231                           	callstack 0
   232                           
   233                           ; 1 bytes @ 0xB
   234  00000C                     	ds	1
   235  00000D                     ??_i2c_lcd_init:
   236  00000D                     i2c_lcd_set_cursor@col:
   237                           	callstack 0
   238  00000D                     i2c_lcd_puts@str:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0xC
   242  00000D                     	ds	1
   243  00000E                     ??_i2c_lcd_set_cursor:
   244                           
   245                           ; 1 bytes @ 0xD
   246  00000E                     	ds	1
   247  00000F                     
   248                           ; 1 bytes @ 0xE
   249  00000F                     	ds	1
   250  000010                     i2c_lcd_set_cursor@row:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0xF
   254  000010                     	ds	1
   255  000011                     ??_main:
   256                           
   257                           ; 1 bytes @ 0x10
   258  000011                     	ds	2
   259                           
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   262 ;;
   263 ;; *************** function _main *****************
   264 ;; Defined at:
   265 ;;		line 8 in file "main.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   279 ;;      Params:         0       0       0       0       0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0       0       0       0       0
   281 ;;      Temps:          2       0       0       0       0       0       0       0       0
   282 ;;      Totals:         2       0       0       0       0       0       0       0       0
   283 ;;Total ram usage:        2 bytes
   284 ;; Hardware stack levels required when called: 7
   285 ;; This function calls:
   286 ;;		_I2C_Init
   287 ;;		_i2c_lcd_init
   288 ;;		_i2c_lcd_puts
   289 ;;		_i2c_lcd_set_cursor
   290 ;; This function is called by:
   291 ;;		Startup code after reset
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text0
   296  000908                     __ptext0:
   297                           	callstack 0
   298  000908                     _main:
   299                           	callstack 24
   300  000908                     
   301                           ;main.c: 10:     ADCON1 = 0x0F;
   302  000908  0E0F               	movlw	15
   303  00090A  6EC1               	movwf	193,c	;volatile
   304  00090C                     
   305                           ;main.c: 13:     I2C_Init();
   306  00090C  EC59  F005         	call	_I2C_Init	;wreg free
   307  000910                     
   308                           ;main.c: 15:     i2c_lcd_init();
   309  000910  EC0D  F004         	call	_i2c_lcd_init	;wreg free
   310  000914                     
   311                           ;main.c: 17:     i2c_lcd_set_cursor(1,1);
   312  000914  0E01               	movlw	1
   313  000916  6E0D               	movwf	i2c_lcd_set_cursor@col^0,c
   314  000918  0E01               	movlw	1
   315  00091A  EC4B  F004         	call	_i2c_lcd_set_cursor
   316  00091E                     
   317                           ;main.c: 18:     i2c_lcd_puts("EN PCB SI ");
   318  00091E  0E0E               	movlw	low STR_1
   319  000920  6E0D               	movwf	i2c_lcd_puts@str^0,c
   320  000922  0E08               	movlw	high STR_1
   321  000924  6E0E               	movwf	(i2c_lcd_puts@str+1)^0,c
   322  000926  ECE0  F004         	call	_i2c_lcd_puts	;wreg free
   323  00092A                     
   324                           ;main.c: 21:     i2c_lcd_set_cursor(2,1);
   325  00092A  0E01               	movlw	1
   326  00092C  6E0D               	movwf	i2c_lcd_set_cursor@col^0,c
   327  00092E  0E02               	movlw	2
   328  000930  EC4B  F004         	call	_i2c_lcd_set_cursor
   329  000934                     
   330                           ;main.c: 22:     i2c_lcd_puts(" FUNCIONA :)");
   331  000934  0E01               	movlw	low STR_2
   332  000936  6E0D               	movwf	i2c_lcd_puts@str^0,c
   333  000938  0E08               	movlw	high STR_2
   334  00093A  6E0E               	movwf	(i2c_lcd_puts@str+1)^0,c
   335  00093C  ECE0  F004         	call	_i2c_lcd_puts	;wreg free
   336  000940                     
   337                           ;main.c: 25:     TRISDbits.TRISD0 = 0;
   338  000940  9095               	bcf	149,0,c	;volatile
   339  000942                     
   340                           ;main.c: 26:     PORTDbits.RD0 = 1;
   341  000942  8083               	bsf	131,0,c	;volatile
   342  000944                     l21:
   343                           
   344                           ;main.c: 35:         PORTDbits.RD0 ^= 1;
   345  000944  7083               	btg	131,0,c	;volatile
   346  000946                     
   347                           ;main.c: 36:         _delay((unsigned long)((1000)*(20000000UL/4000.0)));
   348  000946  0E1A               	movlw	26
   349  000948  6E12               	movwf	(??_main+1)^0,c
   350  00094A  0E5E               	movlw	94
   351  00094C  6E11               	movwf	??_main^0,c
   352  00094E  0E6E               	movlw	110
   353  000950                     u97:
   354  000950  2EE8               	decfsz	wreg,f,c
   355  000952  D7FE               	bra	u97
   356  000954  2E11               	decfsz	??_main^0,f,c
   357  000956  D7FC               	bra	u97
   358  000958  2E12               	decfsz	(??_main+1)^0,f,c
   359  00095A  D7FA               	bra	u97
   360  00095C  D000               	nop2	
   361  00095E  EFA2  F004         	goto	l21
   362  000962  EF00  F000         	goto	start
   363  000966                     __end_of_main:
   364                           	callstack 0
   365                           
   366 ;; *************** function _i2c_lcd_set_cursor *****************
   367 ;; Defined at:
   368 ;;		line 94 in file "LCD_I2C_LIB.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;  row             1    wreg     unsigned char 
   371 ;;  col             1   12[COMRAM] unsigned char 
   372 ;; Auto vars:     Size  Location     Type
   373 ;;  row             1   15[COMRAM] unsigned char 
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2, status,0, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   383 ;;      Params:         1       0       0       0       0       0       0       0       0
   384 ;;      Locals:         1       0       0       0       0       0       0       0       0
   385 ;;      Temps:          2       0       0       0       0       0       0       0       0
   386 ;;      Totals:         4       0       0       0       0       0       0       0       0
   387 ;;Total ram usage:        4 bytes
   388 ;; Hardware stack levels used: 1
   389 ;; Hardware stack levels required when called: 6
   390 ;; This function calls:
   391 ;;		_i2c_lcd_command
   392 ;; This function is called by:
   393 ;;		_main
   394 ;;		_i2c_lcd_out
   395 ;;		_i2c_lcd_char
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text1
   400  000896                     __ptext1:
   401                           	callstack 0
   402  000896                     _i2c_lcd_set_cursor:
   403                           	callstack 24
   404                           
   405                           ;incstack = 0
   406                           ;i2c_lcd_set_cursor@row stored from wreg
   407  000896  6E10               	movwf	i2c_lcd_set_cursor@row^0,c
   408  000898                     
   409                           ;LCD_I2C_LIB.c: 96:  switch(row){
   410  000898  EF66  F004         	goto	l1164
   411  00089C                     l1154:
   412  00089C  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   413  00089E  0F7F               	addlw	127
   414  0008A0  EC71  F005         	call	_i2c_lcd_command
   415  0008A4  EF83  F004         	goto	l80
   416  0008A8                     l1156:
   417  0008A8  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   418  0008AA  0FBF               	addlw	191
   419  0008AC  EC71  F005         	call	_i2c_lcd_command
   420  0008B0  EF83  F004         	goto	l80
   421  0008B4                     l1158:
   422  0008B4  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   423  0008B6  0F93               	addlw	147
   424  0008B8  EC71  F005         	call	_i2c_lcd_command
   425  0008BC  EF83  F004         	goto	l80
   426  0008C0                     l1160:
   427  0008C0  500D               	movf	i2c_lcd_set_cursor@col^0,w,c
   428  0008C2  0FD3               	addlw	211
   429  0008C4  EC71  F005         	call	_i2c_lcd_command
   430  0008C8  EF83  F004         	goto	l80
   431  0008CC                     l1164:
   432  0008CC  5010               	movf	i2c_lcd_set_cursor@row^0,w,c
   433  0008CE  6E0E               	movwf	??_i2c_lcd_set_cursor^0,c
   434  0008D0  6A0F               	clrf	(??_i2c_lcd_set_cursor+1)^0,c
   435                           
   436                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   437                           ; Switch size 1, requested type "simple"
   438                           ; Number of cases is 1, Range of values is 0 to 0
   439                           ; switch strategies available:
   440                           ; Name         Instructions Cycles
   441                           ; simple_byte            4     3 (average)
   442                           ;	Chosen strategy is simple_byte
   443  0008D2  500F               	movf	(??_i2c_lcd_set_cursor+1)^0,w,c
   444  0008D4  0A00               	xorlw	0	; case 0
   445  0008D6  B4D8               	btfsc	status,2,c
   446  0008D8  EF70  F004         	goto	l1286
   447  0008DC  EF83  F004         	goto	l80
   448  0008E0                     l1286:
   449                           
   450                           ; Switch size 1, requested type "simple"
   451                           ; Number of cases is 4, Range of values is 1 to 4
   452                           ; switch strategies available:
   453                           ; Name         Instructions Cycles
   454                           ; simple_byte           13     7 (average)
   455                           ;	Chosen strategy is simple_byte
   456  0008E0  500E               	movf	??_i2c_lcd_set_cursor^0,w,c
   457  0008E2  0A01               	xorlw	1	; case 1
   458  0008E4  B4D8               	btfsc	status,2,c
   459  0008E6  EF4E  F004         	goto	l1154
   460  0008EA  0A03               	xorlw	3	; case 2
   461  0008EC  B4D8               	btfsc	status,2,c
   462  0008EE  EF54  F004         	goto	l1156
   463  0008F2  0A01               	xorlw	1	; case 3
   464  0008F4  B4D8               	btfsc	status,2,c
   465  0008F6  EF5A  F004         	goto	l1158
   466  0008FA  0A07               	xorlw	7	; case 4
   467  0008FC  B4D8               	btfsc	status,2,c
   468  0008FE  EF60  F004         	goto	l1160
   469  000902  EF83  F004         	goto	l80
   470  000906                     l80:
   471  000906  0012               	return		;funcret
   472  000908                     __end_of_i2c_lcd_set_cursor:
   473                           	callstack 0
   474                           
   475 ;; *************** function _i2c_lcd_puts *****************
   476 ;; Defined at:
   477 ;;		line 87 in file "LCD_I2C_LIB.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;  str             2   12[COMRAM] PTR unsigned char 
   480 ;;		 -> STR_2(13), STR_1(11), 
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   492 ;;      Params:         2       0       0       0       0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0       0       0       0       0
   494 ;;      Temps:          0       0       0       0       0       0       0       0       0
   495 ;;      Totals:         2       0       0       0       0       0       0       0       0
   496 ;;Total ram usage:        2 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; Hardware stack levels required when called: 6
   499 ;; This function calls:
   500 ;;		_i2c_lcd_write
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text2
   507  0009C0                     __ptext2:
   508                           	callstack 0
   509  0009C0                     _i2c_lcd_puts:
   510                           	callstack 24
   511  0009C0                     
   512                           ;LCD_I2C_LIB.c: 88:     while(*str){
   513  0009C0  EFEC  F004         	goto	l1176
   514  0009C4                     l1172:
   515                           
   516                           ;LCD_I2C_LIB.c: 89:         i2c_lcd_write(*str);
   517  0009C4  C00D  FFF6         	movff	i2c_lcd_puts@str,tblptrl
   518  0009C8  C00E  FFF7         	movff	i2c_lcd_puts@str+1,tblptrh
   519  0009CC                     	if	0	;tblptru may be non-zero
   520  0009CC                     	endif
   521  0009CC                     	if	0	;tblptru may be non-zero
   522  0009CC                     	endif
   523  0009CC  0008               	tblrd		*
   524  0009CE  50F5               	movf	tablat,w,c
   525  0009D0  EC6C  F005         	call	_i2c_lcd_write
   526  0009D4                     
   527                           ;LCD_I2C_LIB.c: 90:         str++;
   528  0009D4  4A0D               	infsnz	i2c_lcd_puts@str^0,f,c
   529  0009D6  2A0E               	incf	(i2c_lcd_puts@str+1)^0,f,c
   530  0009D8                     l1176:
   531                           
   532                           ;LCD_I2C_LIB.c: 88:     while(*str){
   533  0009D8  C00D  FFF6         	movff	i2c_lcd_puts@str,tblptrl
   534  0009DC  C00E  FFF7         	movff	i2c_lcd_puts@str+1,tblptrh
   535  0009E0                     	if	0	;tblptru may be non-zero
   536  0009E0                     	endif
   537  0009E0                     	if	0	;tblptru may be non-zero
   538  0009E0                     	endif
   539  0009E0  0008               	tblrd		*
   540  0009E2  50F5               	movf	tablat,w,c
   541  0009E4  0900               	iorlw	0
   542  0009E6  A4D8               	btfss	status,2,c
   543  0009E8  EFF8  F004         	goto	u61
   544  0009EC  EFFA  F004         	goto	u60
   545  0009F0                     u61:
   546  0009F0  EFE2  F004         	goto	l1172
   547  0009F4                     u60:
   548  0009F4  0012               	return		;funcret
   549  0009F6                     __end_of_i2c_lcd_puts:
   550                           	callstack 0
   551                           
   552 ;; *************** function _i2c_lcd_write *****************
   553 ;; Defined at:
   554 ;;		line 56 in file "LCD_I2C_LIB.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  letra           1    wreg     unsigned char 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  letra           1   11[COMRAM] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   568 ;;      Params:         0       0       0       0       0       0       0       0       0
   569 ;;      Locals:         1       0       0       0       0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0
   571 ;;      Totals:         1       0       0       0       0       0       0       0       0
   572 ;;Total ram usage:        1 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 5
   575 ;; This function calls:
   576 ;;		_sendDATA
   577 ;; This function is called by:
   578 ;;		_i2c_lcd_puts
   579 ;;		_i2c_lcd_out
   580 ;;		_i2c_lcd_char
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text3
   585  000AD8                     __ptext3:
   586                           	callstack 0
   587  000AD8                     _i2c_lcd_write:
   588                           	callstack 24
   589                           
   590                           ;incstack = 0
   591                           ;i2c_lcd_write@letra stored from wreg
   592  000AD8  6E0C               	movwf	i2c_lcd_write@letra^0,c
   593  000ADA                     
   594                           ;LCD_I2C_LIB.c: 57:     sendDATA(letra);
   595  000ADA  500C               	movf	i2c_lcd_write@letra^0,w,c
   596  000ADC  ECFB  F004         	call	_sendDATA
   597  000AE0  0012               	return		;funcret
   598  000AE2                     __end_of_i2c_lcd_write:
   599                           	callstack 0
   600                           
   601 ;; *************** function _sendDATA *****************
   602 ;; Defined at:
   603 ;;		line 37 in file "LCD_I2C_LIB.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  dato            1    wreg     char 
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  dato            1   10[COMRAM] char 
   608 ;;  nibbleL         1    9[COMRAM] unsigned char 
   609 ;;  nibbleH         1    8[COMRAM] unsigned char 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   619 ;;      Params:         0       0       0       0       0       0       0       0       0
   620 ;;      Locals:         3       0       0       0       0       0       0       0       0
   621 ;;      Temps:          1       0       0       0       0       0       0       0       0
   622 ;;      Totals:         4       0       0       0       0       0       0       0       0
   623 ;;Total ram usage:        4 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 4
   626 ;; This function calls:
   627 ;;		_loadPCF
   628 ;; This function is called by:
   629 ;;		_i2c_lcd_write
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text4
   634  0009F6                     __ptext4:
   635                           	callstack 0
   636  0009F6                     _sendDATA:
   637                           	callstack 24
   638                           
   639                           ;incstack = 0
   640                           ;sendDATA@dato stored from wreg
   641  0009F6  6E0B               	movwf	sendDATA@dato^0,c
   642  0009F8                     
   643                           ;LCD_I2C_LIB.c: 38:     char nibbleH, nibbleL;;LCD_I2C_LIB.c: 40:     nibbleH = (dato & 
      +                          0xF0)<<0;
   644  0009F8  500B               	movf	sendDATA@dato^0,w,c
   645  0009FA  0BF0               	andlw	240
   646  0009FC  6E09               	movwf	sendDATA@nibbleH^0,c
   647                           
   648                           ;LCD_I2C_LIB.c: 41:     nibbleL = (dato & 0x0F)<<4;
   649  0009FE  C00B  F008         	movff	sendDATA@dato,??_sendDATA
   650  000A02  0E0F               	movlw	15
   651  000A04  1608               	andwf	??_sendDATA^0,f,c
   652  000A06  3808               	swapf	??_sendDATA^0,w,c
   653  000A08  0BF0               	andlw	240
   654  000A0A  6E0A               	movwf	sendDATA@nibbleL^0,c
   655  000A0C                     
   656                           ;LCD_I2C_LIB.c: 43:     loadPCF(nibbleH,1);
   657  000A0C  0E01               	movlw	1
   658  000A0E  6E04               	movwf	loadPCF@mode^0,c
   659  000A10  5009               	movf	sendDATA@nibbleH^0,w,c
   660  000A12  ECB3  F004         	call	_loadPCF
   661  000A16                     
   662                           ;LCD_I2C_LIB.c: 44:     loadPCF(nibbleL,1);
   663  000A16  0E01               	movlw	1
   664  000A18  6E04               	movwf	loadPCF@mode^0,c
   665  000A1A  500A               	movf	sendDATA@nibbleL^0,w,c
   666  000A1C  ECB3  F004         	call	_loadPCF
   667  000A20  0012               	return		;funcret
   668  000A22                     __end_of_sendDATA:
   669                           	callstack 0
   670                           
   671 ;; *************** function _i2c_lcd_init *****************
   672 ;; Defined at:
   673 ;;		line 63 in file "LCD_I2C_LIB.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   687 ;;      Params:         0       0       0       0       0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0       0       0       0       0
   689 ;;      Temps:          1       0       0       0       0       0       0       0       0
   690 ;;      Totals:         1       0       0       0       0       0       0       0       0
   691 ;;Total ram usage:        1 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; Hardware stack levels required when called: 6
   694 ;; This function calls:
   695 ;;		_PCF_Wr
   696 ;;		_i2c_lcd_command
   697 ;;		_sendCMD
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text5
   704  00081A                     __ptext5:
   705                           	callstack 0
   706  00081A                     _i2c_lcd_init:
   707                           	callstack 24
   708  00081A                     
   709                           ;LCD_I2C_LIB.c: 65:     PCF_Wr(0x00);
   710  00081A  0E00               	movlw	0
   711  00081C  EC4C  F005         	call	_PCF_Wr
   712  000820                     
   713                           ;LCD_I2C_LIB.c: 66:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
   714  000820  0E62               	movlw	98
   715  000822  6E0D               	movwf	??_i2c_lcd_init^0,c
   716  000824  0E66               	movlw	102
   717  000826                     u107:
   718  000826  2EE8               	decfsz	wreg,f,c
   719  000828  D7FE               	bra	u107
   720  00082A  2E0D               	decfsz	??_i2c_lcd_init^0,f,c
   721  00082C  D7FC               	bra	u107
   722  00082E                     
   723                           ;LCD_I2C_LIB.c: 67:     sendCMD(0x03);
   724  00082E  0E03               	movlw	3
   725  000830  EC11  F005         	call	_sendCMD
   726                           
   727                           ;LCD_I2C_LIB.c: 68:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   728  000834  0E21               	movlw	33
   729  000836  6E0D               	movwf	??_i2c_lcd_init^0,c
   730  000838  0E76               	movlw	118
   731  00083A                     u117:
   732  00083A  2EE8               	decfsz	wreg,f,c
   733  00083C  D7FE               	bra	u117
   734  00083E  2E0D               	decfsz	??_i2c_lcd_init^0,f,c
   735  000840  D7FC               	bra	u117
   736  000842  D000               	nop2	
   737  000844                     
   738                           ;LCD_I2C_LIB.c: 69:     sendCMD(0x03);
   739  000844  0E03               	movlw	3
   740  000846  EC11  F005         	call	_sendCMD
   741  00084A                     
   742                           ;LCD_I2C_LIB.c: 70:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   743  00084A  0EA6               	movlw	166
   744  00084C                     u127:
   745  00084C  2EE8               	decfsz	wreg,f,c
   746  00084E  D7FE               	bra	u127
   747  000850  D000               	nop2	
   748                           
   749                           ;LCD_I2C_LIB.c: 71:     sendCMD(0x03);
   750  000852  0E03               	movlw	3
   751  000854  EC11  F005         	call	_sendCMD
   752                           
   753                           ;LCD_I2C_LIB.c: 72:     sendCMD(0x02);
   754  000858  0E02               	movlw	2
   755  00085A  EC11  F005         	call	_sendCMD
   756                           
   757                           ;LCD_I2C_LIB.c: 74:     i2c_lcd_command( 0x20 | 0x00 | 0x08 | 0x00 );
   758  00085E  0E28               	movlw	40
   759  000860  EC71  F005         	call	_i2c_lcd_command
   760  000864                     
   761                           ;LCD_I2C_LIB.c: 75:     _delay((unsigned long)((37)*(20000000UL/4000000.0)));
   762  000864  0E3D               	movlw	61
   763  000866                     u137:
   764  000866  2EE8               	decfsz	wreg,f,c
   765  000868  D7FE               	bra	u137
   766  00086A  D000               	nop2	
   767  00086C                     
   768                           ;LCD_I2C_LIB.c: 77:     _lcd_params = 0x04 | 0x02 | 0x01;
   769  00086C  0E07               	movlw	7
   770  00086E  6E15               	movwf	__lcd_params^0,c
   771  000870                     
   772                           ;LCD_I2C_LIB.c: 78:     i2c_lcd_command(0x08 | _lcd_params);
   773  000870  5015               	movf	__lcd_params^0,w,c
   774  000872  0908               	iorlw	8
   775  000874  EC71  F005         	call	_i2c_lcd_command
   776  000878                     
   777                           ;LCD_I2C_LIB.c: 79:     _delay((unsigned long)((37)*(20000000UL/4000000.0)));
   778  000878  0E3D               	movlw	61
   779  00087A                     u147:
   780  00087A  2EE8               	decfsz	wreg,f,c
   781  00087C  D7FE               	bra	u147
   782  00087E  D000               	nop2	
   783  000880                     
   784                           ;LCD_I2C_LIB.c: 81:     i2c_lcd_command(0x01);
   785  000880  0E01               	movlw	1
   786  000882  EC71  F005         	call	_i2c_lcd_command
   787  000886                     
   788                           ;LCD_I2C_LIB.c: 82:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
   789  000886  0E0D               	movlw	13
   790  000888  6E0D               	movwf	??_i2c_lcd_init^0,c
   791  00088A  0EFC               	movlw	252
   792  00088C                     u157:
   793  00088C  2EE8               	decfsz	wreg,f,c
   794  00088E  D7FE               	bra	u157
   795  000890  2E0D               	decfsz	??_i2c_lcd_init^0,f,c
   796  000892  D7FC               	bra	u157
   797  000894  0012               	return		;funcret
   798  000896                     __end_of_i2c_lcd_init:
   799                           	callstack 0
   800                           
   801 ;; *************** function _i2c_lcd_command *****************
   802 ;; Defined at:
   803 ;;		line 59 in file "LCD_I2C_LIB.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  cmd             1    wreg     unsigned char 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  cmd             1   11[COMRAM] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   817 ;;      Params:         0       0       0       0       0       0       0       0       0
   818 ;;      Locals:         1       0       0       0       0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0       0       0       0       0
   820 ;;      Totals:         1       0       0       0       0       0       0       0       0
   821 ;;Total ram usage:        1 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 5
   824 ;; This function calls:
   825 ;;		_sendCMD
   826 ;; This function is called by:
   827 ;;		_i2c_lcd_init
   828 ;;		_i2c_lcd_set_cursor
   829 ;;		_i2c_lcd_clear
   830 ;;		_i2c_lcd_return_home
   831 ;;		_i2c_lcd_on
   832 ;;		_i2c_lcd_off
   833 ;;		_i2c_lcd_enable_blink
   834 ;;		_i2c_lcd_disable_blink
   835 ;;		_i2c_lcd_enable_cursor
   836 ;;		_i2c_lcd_disable_cursor
   837 ;;		_i2c_lcd_scroll_left
   838 ;;		_i2c_lcd_scroll_right
   839 ;;		_i2c_lcd_custom_char
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text6
   844  000AE2                     __ptext6:
   845                           	callstack 0
   846  000AE2                     _i2c_lcd_command:
   847                           	callstack 24
   848                           
   849                           ;incstack = 0
   850                           ;i2c_lcd_command@cmd stored from wreg
   851  000AE2  6E0C               	movwf	i2c_lcd_command@cmd^0,c
   852  000AE4                     
   853                           ;LCD_I2C_LIB.c: 60:     sendCMD(cmd);
   854  000AE4  500C               	movf	i2c_lcd_command@cmd^0,w,c
   855  000AE6  EC11  F005         	call	_sendCMD
   856  000AEA  0012               	return		;funcret
   857  000AEC                     __end_of_i2c_lcd_command:
   858                           	callstack 0
   859                           
   860 ;; *************** function _sendCMD *****************
   861 ;; Defined at:
   862 ;;		line 46 in file "LCD_I2C_LIB.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  cmd             1    wreg     char 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  cmd             1   10[COMRAM] char 
   867 ;;  nibbleL         1    9[COMRAM] unsigned char 
   868 ;;  nibbleH         1    8[COMRAM] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   878 ;;      Params:         0       0       0       0       0       0       0       0       0
   879 ;;      Locals:         3       0       0       0       0       0       0       0       0
   880 ;;      Temps:          1       0       0       0       0       0       0       0       0
   881 ;;      Totals:         4       0       0       0       0       0       0       0       0
   882 ;;Total ram usage:        4 bytes
   883 ;; Hardware stack levels used: 1
   884 ;; Hardware stack levels required when called: 4
   885 ;; This function calls:
   886 ;;		_loadPCF
   887 ;; This function is called by:
   888 ;;		_i2c_lcd_command
   889 ;;		_i2c_lcd_init
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text7
   894  000A22                     __ptext7:
   895                           	callstack 0
   896  000A22                     _sendCMD:
   897                           	callstack 24
   898                           
   899                           ;incstack = 0
   900                           ;sendCMD@cmd stored from wreg
   901  000A22  6E0B               	movwf	sendCMD@cmd^0,c
   902  000A24                     
   903                           ;LCD_I2C_LIB.c: 47:     char nibbleH, nibbleL;;LCD_I2C_LIB.c: 49:     nibbleH = (cmd & 0
      +                          xF0)<<0;
   904  000A24  500B               	movf	sendCMD@cmd^0,w,c
   905  000A26  0BF0               	andlw	240
   906  000A28  6E09               	movwf	sendCMD@nibbleH^0,c
   907                           
   908                           ;LCD_I2C_LIB.c: 50:     nibbleL = (cmd & 0x0F)<<4;
   909  000A2A  C00B  F008         	movff	sendCMD@cmd,??_sendCMD
   910  000A2E  0E0F               	movlw	15
   911  000A30  1608               	andwf	??_sendCMD^0,f,c
   912  000A32  3808               	swapf	??_sendCMD^0,w,c
   913  000A34  0BF0               	andlw	240
   914  000A36  6E0A               	movwf	sendCMD@nibbleL^0,c
   915  000A38                     
   916                           ;LCD_I2C_LIB.c: 52:     loadPCF(nibbleH,0);
   917  000A38  0E00               	movlw	0
   918  000A3A  6E04               	movwf	loadPCF@mode^0,c
   919  000A3C  5009               	movf	sendCMD@nibbleH^0,w,c
   920  000A3E  ECB3  F004         	call	_loadPCF
   921  000A42                     
   922                           ;LCD_I2C_LIB.c: 53:     loadPCF(nibbleL,0);
   923  000A42  0E00               	movlw	0
   924  000A44  6E04               	movwf	loadPCF@mode^0,c
   925  000A46  500A               	movf	sendCMD@nibbleL^0,w,c
   926  000A48  ECB3  F004         	call	_loadPCF
   927  000A4C  0012               	return		;funcret
   928  000A4E                     __end_of_sendCMD:
   929                           	callstack 0
   930                           
   931 ;; *************** function _loadPCF *****************
   932 ;; Defined at:
   933 ;;		line 21 in file "LCD_I2C_LIB.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  dato            1    wreg     char 
   936 ;;  mode            1    3[COMRAM] unsigned char 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  dato            1    6[COMRAM] char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   948 ;;      Params:         1       0       0       0       0       0       0       0       0
   949 ;;      Locals:         1       0       0       0       0       0       0       0       0
   950 ;;      Temps:          2       0       0       0       0       0       0       0       0
   951 ;;      Totals:         4       0       0       0       0       0       0       0       0
   952 ;;Total ram usage:        4 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; Hardware stack levels required when called: 3
   955 ;; This function calls:
   956 ;;		_PCF_Wr
   957 ;; This function is called by:
   958 ;;		_sendDATA
   959 ;;		_sendCMD
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text8
   964  000966                     __ptext8:
   965                           	callstack 0
   966  000966                     _loadPCF:
   967                           	callstack 24
   968                           
   969                           ;incstack = 0
   970                           ;loadPCF@dato stored from wreg
   971  000966  6E07               	movwf	loadPCF@dato^0,c
   972  000968                     
   973                           ;LCD_I2C_LIB.c: 23:     switch(mode){
   974  000968  EFBC  F004         	goto	l1098
   975  00096C                     l1092:
   976  00096C  9007               	bcf	loadPCF@dato^0,0,c
   977  00096E  EFD1  F004         	goto	l1100
   978  000972                     l1094:
   979  000972  8007               	bsf	loadPCF@dato^0,0,c
   980  000974  EFD1  F004         	goto	l1100
   981  000978                     l1098:
   982  000978  5004               	movf	loadPCF@mode^0,w,c
   983  00097A  6E05               	movwf	??_loadPCF^0,c
   984  00097C  6A06               	clrf	(??_loadPCF+1)^0,c
   985                           
   986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 1, Range of values is 0 to 0
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte            4     3 (average)
   992                           ;	Chosen strategy is simple_byte
   993  00097E  5006               	movf	(??_loadPCF+1)^0,w,c
   994  000980  0A00               	xorlw	0	; case 0
   995  000982  B4D8               	btfsc	status,2,c
   996  000984  EFC6  F004         	goto	l1288
   997  000988  EFD1  F004         	goto	l1100
   998  00098C                     l1288:
   999                           
  1000                           ; Switch size 1, requested type "simple"
  1001                           ; Number of cases is 2, Range of values is 0 to 1
  1002                           ; switch strategies available:
  1003                           ; Name         Instructions Cycles
  1004                           ; simple_byte            7     4 (average)
  1005                           ;	Chosen strategy is simple_byte
  1006  00098C  5005               	movf	??_loadPCF^0,w,c
  1007  00098E  0A00               	xorlw	0	; case 0
  1008  000990  B4D8               	btfsc	status,2,c
  1009  000992  EFB6  F004         	goto	l1092
  1010  000996  0A01               	xorlw	1	; case 1
  1011  000998  B4D8               	btfsc	status,2,c
  1012  00099A  EFB9  F004         	goto	l1094
  1013  00099E  EFD1  F004         	goto	l1100
  1014  0009A2                     l1100:
  1015                           
  1016                           ;LCD_I2C_LIB.c: 28:     PCF_Wr(dato);
  1017  0009A2  5007               	movf	loadPCF@dato^0,w,c
  1018  0009A4  EC4C  F005         	call	_PCF_Wr
  1019  0009A8                     
  1020                           ;LCD_I2C_LIB.c: 29:     dato |= (1<<2);
  1021  0009A8  8407               	bsf	loadPCF@dato^0,2,c
  1022  0009AA                     
  1023                           ;LCD_I2C_LIB.c: 30:     PCF_Wr(dato);
  1024  0009AA  5007               	movf	loadPCF@dato^0,w,c
  1025  0009AC  EC4C  F005         	call	_PCF_Wr
  1026                           
  1027                           ;LCD_I2C_LIB.c: 31:     dato &= ~(1<<2);
  1028  0009B0  9407               	bcf	loadPCF@dato^0,2,c
  1029  0009B2                     
  1030                           ;LCD_I2C_LIB.c: 32:     PCF_Wr(dato);
  1031  0009B2  5007               	movf	loadPCF@dato^0,w,c
  1032  0009B4  EC4C  F005         	call	_PCF_Wr
  1033  0009B8                     
  1034                           ;LCD_I2C_LIB.c: 33:     _delay((unsigned long)((30)*(20000000UL/4000000.0)));
  1035  0009B8  0E32               	movlw	50
  1036  0009BA                     u167:
  1037  0009BA  2EE8               	decfsz	wreg,f,c
  1038  0009BC  D7FE               	bra	u167
  1039  0009BE  0012               	return		;funcret
  1040  0009C0                     __end_of_loadPCF:
  1041                           	callstack 0
  1042                           
  1043 ;; *************** function _PCF_Wr *****************
  1044 ;; Defined at:
  1045 ;;		line 15 in file "LCD_I2C_LIB.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  dato            1    wreg     char 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  dato            1    2[COMRAM] char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0
  1060 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1062 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1063 ;;Total ram usage:        1 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 2
  1066 ;; This function calls:
  1067 ;;		_I2C_Start
  1068 ;;		_I2C_Stop
  1069 ;;		_I2C_Wr
  1070 ;; This function is called by:
  1071 ;;		_loadPCF
  1072 ;;		_i2c_lcd_init
  1073 ;;		_i2c_lcd_backlight_on
  1074 ;;		_i2c_lcd_backlight_off
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text9
  1079  000A98                     __ptext9:
  1080                           	callstack 0
  1081  000A98                     _PCF_Wr:
  1082                           	callstack 24
  1083                           
  1084                           ;incstack = 0
  1085                           ;PCF_Wr@dato stored from wreg
  1086  000A98  6E03               	movwf	PCF_Wr@dato^0,c
  1087  000A9A                     
  1088                           ;LCD_I2C_LIB.c: 16:     I2C_Start();
  1089  000A9A  EC7A  F005         	call	_I2C_Start	;wreg free
  1090                           
  1091                           ;LCD_I2C_LIB.c: 17:     I2C_Wr( DIR_PCF<<1 );
  1092  000A9E  0E4E               	movlw	78
  1093  000AA0  EC66  F005         	call	_I2C_Wr
  1094                           
  1095                           ;LCD_I2C_LIB.c: 18:     I2C_Wr(dato | LED_STATUS);
  1096  000AA4  5003               	movf	PCF_Wr@dato^0,w,c
  1097  000AA6  1014               	iorwf	_LED_STATUS^0,w,c
  1098  000AA8  EC66  F005         	call	_I2C_Wr
  1099                           
  1100                           ;LCD_I2C_LIB.c: 19:     I2C_Stop();
  1101  000AAC  EC76  F005         	call	_I2C_Stop	;wreg free
  1102  000AB0  0012               	return		;funcret
  1103  000AB2                     __end_of_PCF_Wr:
  1104                           	callstack 0
  1105                           
  1106 ;; *************** function _I2C_Wr *****************
  1107 ;; Defined at:
  1108 ;;		line 33 in file "I2C_LIB.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  data            1    wreg     unsigned char 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  data            1    1[COMRAM] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1122 ;;      Params:         0       0       0       0       0       0       0       0       0
  1123 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1125 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1126 ;;Total ram usage:        1 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; Hardware stack levels required when called: 1
  1129 ;; This function calls:
  1130 ;;		_I2C_Condiciones_Espera
  1131 ;; This function is called by:
  1132 ;;		_PCF_Wr
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text10
  1137  000ACC                     __ptext10:
  1138                           	callstack 0
  1139  000ACC                     _I2C_Wr:
  1140                           	callstack 24
  1141                           
  1142                           ;incstack = 0
  1143                           ;I2C_Wr@data stored from wreg
  1144  000ACC  6E02               	movwf	I2C_Wr@data^0,c
  1145  000ACE                     
  1146                           ;I2C_LIB.c: 34:     I2C_Condiciones_Espera();
  1147  000ACE  EC27  F005         	call	_I2C_Condiciones_Espera	;wreg free
  1148  000AD2                     
  1149                           ;I2C_LIB.c: 35:     SSPBUF = data;
  1150  000AD2  C002  FFC9         	movff	I2C_Wr@data,4041	;volatile
  1151  000AD6  0012               	return		;funcret
  1152  000AD8                     __end_of_I2C_Wr:
  1153                           	callstack 0
  1154                           
  1155 ;; *************** function _I2C_Stop *****************
  1156 ;; Defined at:
  1157 ;;		line 25 in file "I2C_LIB.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;		None
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      void 
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1171 ;;      Params:         0       0       0       0       0       0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1174 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1175 ;;Total ram usage:        0 bytes
  1176 ;; Hardware stack levels used: 1
  1177 ;; Hardware stack levels required when called: 1
  1178 ;; This function calls:
  1179 ;;		_I2C_Condiciones_Espera
  1180 ;; This function is called by:
  1181 ;;		_PCF_Wr
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text11
  1186  000AEC                     __ptext11:
  1187                           	callstack 0
  1188  000AEC                     _I2C_Stop:
  1189                           	callstack 24
  1190  000AEC                     
  1191                           ;I2C_LIB.c: 26:     I2C_Condiciones_Espera();
  1192  000AEC  EC27  F005         	call	_I2C_Condiciones_Espera	;wreg free
  1193  000AF0                     
  1194                           ;I2C_LIB.c: 27:     SSPCON2bits.PEN = 1;
  1195  000AF0  84C5               	bsf	197,2,c	;volatile
  1196  000AF2  0012               	return		;funcret
  1197  000AF4                     __end_of_I2C_Stop:
  1198                           	callstack 0
  1199                           
  1200 ;; *************** function _I2C_Start *****************
  1201 ;; Defined at:
  1202 ;;		line 21 in file "I2C_LIB.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1219 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used: 1
  1222 ;; Hardware stack levels required when called: 1
  1223 ;; This function calls:
  1224 ;;		_I2C_Condiciones_Espera
  1225 ;; This function is called by:
  1226 ;;		_PCF_Wr
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text12
  1231  000AF4                     __ptext12:
  1232                           	callstack 0
  1233  000AF4                     _I2C_Start:
  1234                           	callstack 24
  1235  000AF4                     
  1236                           ;I2C_LIB.c: 22:     I2C_Condiciones_Espera();
  1237  000AF4  EC27  F005         	call	_I2C_Condiciones_Espera	;wreg free
  1238  000AF8                     
  1239                           ;I2C_LIB.c: 23:     SSPCON2bits.SEN = 1;
  1240  000AF8  80C5               	bsf	197,0,c	;volatile
  1241  000AFA  0012               	return		;funcret
  1242  000AFC                     __end_of_I2C_Start:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function _I2C_Condiciones_Espera *****************
  1246 ;; Defined at:
  1247 ;;		line 18 in file "I2C_LIB.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1263 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1264 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1265 ;;Total ram usage:        1 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_I2C_Start
  1271 ;;		_I2C_Stop
  1272 ;;		_I2C_Wr
  1273 ;;		_I2C_Restart
  1274 ;;		_I2C_Rd
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text13
  1279  000A4E                     __ptext13:
  1280                           	callstack 0
  1281  000A4E                     _I2C_Condiciones_Espera:
  1282                           	callstack 24
  1283  000A4E                     l848:
  1284  000A4E  CFC5 F001          	movff	4037,??_I2C_Condiciones_Espera	;volatile
  1285  000A52  0E1F               	movlw	31
  1286  000A54  1601               	andwf	??_I2C_Condiciones_Espera^0,f,c
  1287  000A56  A4D8               	btfss	status,2,c
  1288  000A58  EF30  F005         	goto	u11
  1289  000A5C  EF32  F005         	goto	u10
  1290  000A60                     u11:
  1291  000A60  EF27  F005         	goto	l848
  1292  000A64                     u10:
  1293  000A64  B4C7               	btfsc	199,2,c	;volatile
  1294  000A66  EF37  F005         	goto	u21
  1295  000A6A  EF39  F005         	goto	u20
  1296  000A6E                     u21:
  1297  000A6E  EF27  F005         	goto	l848
  1298  000A72                     u20:
  1299  000A72  0012               	return		;funcret
  1300  000A74                     __end_of_I2C_Condiciones_Espera:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _I2C_Init *****************
  1304 ;; Defined at:
  1305 ;;		line 6 in file "I2C_LIB.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1322 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text14
  1333  000AB2                     __ptext14:
  1334                           	callstack 0
  1335  000AB2                     _I2C_Init:
  1336                           	callstack 30
  1337  000AB2                     
  1338                           ;I2C_LIB.c: 7:     TRISBbits.RB0 = 1;
  1339  000AB2  8093               	bsf	147,0,c	;volatile
  1340                           
  1341                           ;I2C_LIB.c: 8:     TRISBbits.RB1 = 1;
  1342  000AB4  8293               	bsf	147,1,c	;volatile
  1343                           
  1344                           ;I2C_LIB.c: 10:     SSPSTATbits.SMP = 1;
  1345  000AB6  8EC7               	bsf	199,7,c	;volatile
  1346                           
  1347                           ;I2C_LIB.c: 11:     SSPCON1bits.SSPEN = 1;
  1348  000AB8  8AC6               	bsf	198,5,c	;volatile
  1349  000ABA                     
  1350                           ;I2C_LIB.c: 12:     SSPCON1bits.SSPM = 0b1000;
  1351  000ABA  50C6               	movf	198,w,c	;volatile
  1352  000ABC  0BF0               	andlw	-16
  1353  000ABE  0908               	iorlw	8
  1354  000AC0  6EC6               	movwf	198,c	;volatile
  1355                           
  1356                           ;I2C_LIB.c: 14:     SSPADD = (unsigned int)((20000000UL/(4.0*100000UL))-1.0);
  1357  000AC2  0E31               	movlw	49
  1358  000AC4  6EC8               	movwf	200,c	;volatile
  1359                           
  1360                           ;I2C_LIB.c: 16:     SSPCON2 = 0x00;
  1361  000AC6  0E00               	movlw	0
  1362  000AC8  6EC5               	movwf	197,c	;volatile
  1363  000ACA  0012               	return		;funcret
  1364  000ACC                     __end_of_I2C_Init:
  1365                           	callstack 0
  1366                           
  1367                           	psect	rparam
  1368  0000                     
  1369                           	psect	idloc
  1370                           
  1371                           ;Config register IDLOC0 @ 0x200000
  1372                           ;	unspecified, using default values
  1373  200000                     	org	2097152
  1374  200000  FF                 	db	255
  1375                           
  1376                           ;Config register IDLOC1 @ 0x200001
  1377                           ;	unspecified, using default values
  1378  200001                     	org	2097153
  1379  200001  FF                 	db	255
  1380                           
  1381                           ;Config register IDLOC2 @ 0x200002
  1382                           ;	unspecified, using default values
  1383  200002                     	org	2097154
  1384  200002  FF                 	db	255
  1385                           
  1386                           ;Config register IDLOC3 @ 0x200003
  1387                           ;	unspecified, using default values
  1388  200003                     	org	2097155
  1389  200003  FF                 	db	255
  1390                           
  1391                           ;Config register IDLOC4 @ 0x200004
  1392                           ;	unspecified, using default values
  1393  200004                     	org	2097156
  1394  200004  FF                 	db	255
  1395                           
  1396                           ;Config register IDLOC5 @ 0x200005
  1397                           ;	unspecified, using default values
  1398  200005                     	org	2097157
  1399  200005  FF                 	db	255
  1400                           
  1401                           ;Config register IDLOC6 @ 0x200006
  1402                           ;	unspecified, using default values
  1403  200006                     	org	2097158
  1404  200006  FF                 	db	255
  1405                           
  1406                           ;Config register IDLOC7 @ 0x200007
  1407                           ;	unspecified, using default values
  1408  200007                     	org	2097159
  1409  200007  FF                 	db	255
  1410                           
  1411                           	psect	config
  1412                           
  1413                           ;Config register CONFIG1L @ 0x300000
  1414                           ;	PLL Prescaler Selection bits
  1415                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1416                           ;	System Clock Postscaler Selection bits
  1417                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1418                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1419                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1420  300000                     	org	3145728
  1421  300000  00                 	db	0
  1422                           
  1423                           ;Config register CONFIG1H @ 0x300001
  1424                           ;	Oscillator Selection bits
  1425                           ;	FOSC = HS, HS oscillator (HS)
  1426                           ;	Fail-Safe Clock Monitor Enable bit
  1427                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1428                           ;	Internal/External Oscillator Switchover bit
  1429                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1430  300001                     	org	3145729
  1431  300001  0C                 	db	12
  1432                           
  1433                           ;Config register CONFIG2L @ 0x300002
  1434                           ;	Power-up Timer Enable bit
  1435                           ;	PWRT = OFF, PWRT disabled
  1436                           ;	Brown-out Reset Enable bits
  1437                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1438                           ;	Brown-out Reset Voltage bits
  1439                           ;	BORV = 3, Minimum setting 2.05V
  1440                           ;	USB Voltage Regulator Enable bit
  1441                           ;	VREGEN = OFF, USB voltage regulator disabled
  1442  300002                     	org	3145730
  1443  300002  19                 	db	25
  1444                           
  1445                           ;Config register CONFIG2H @ 0x300003
  1446                           ;	Watchdog Timer Enable bit
  1447                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1448                           ;	Watchdog Timer Postscale Select bits
  1449                           ;	WDTPS = 32768, 1:32768
  1450  300003                     	org	3145731
  1451  300003  1E                 	db	30
  1452                           
  1453                           ; Padding undefined space
  1454  300004                     	org	3145732
  1455  300004  FF                 	db	255
  1456                           
  1457                           ;Config register CONFIG3H @ 0x300005
  1458                           ;	CCP2 MUX bit
  1459                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1460                           ;	PORTB A/D Enable bit
  1461                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1462                           ;	Low-Power Timer 1 Oscillator Enable bit
  1463                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1464                           ;	MCLR Pin Enable bit
  1465                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1466  300005                     	org	3145733
  1467  300005  81                 	db	129
  1468                           
  1469                           ;Config register CONFIG4L @ 0x300006
  1470                           ;	Stack Full/Underflow Reset Enable bit
  1471                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1472                           ;	Single-Supply ICSP Enable bit
  1473                           ;	LVP = ON, Single-Supply ICSP enabled
  1474                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1475                           ;	ICPRT = OFF, ICPORT disabled
  1476                           ;	Extended Instruction Set Enable bit
  1477                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1478                           ;	Background Debugger Enable bit
  1479                           ;	DEBUG = 0x1, unprogrammed default
  1480  300006                     	org	3145734
  1481  300006  85                 	db	133
  1482                           
  1483                           ; Padding undefined space
  1484  300007                     	org	3145735
  1485  300007  FF                 	db	255
  1486                           
  1487                           ;Config register CONFIG5L @ 0x300008
  1488                           ;	Code Protection bit
  1489                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1490                           ;	Code Protection bit
  1491                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1492                           ;	Code Protection bit
  1493                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1494                           ;	Code Protection bit
  1495                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1496  300008                     	org	3145736
  1497  300008  0F                 	db	15
  1498                           
  1499                           ;Config register CONFIG5H @ 0x300009
  1500                           ;	Boot Block Code Protection bit
  1501                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1502                           ;	Data EEPROM Code Protection bit
  1503                           ;	CPD = OFF, Data EEPROM is not code-protected
  1504  300009                     	org	3145737
  1505  300009  C0                 	db	192
  1506                           
  1507                           ;Config register CONFIG6L @ 0x30000A
  1508                           ;	Write Protection bit
  1509                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1510                           ;	Write Protection bit
  1511                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1512                           ;	Write Protection bit
  1513                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1514                           ;	Write Protection bit
  1515                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1516  30000A                     	org	3145738
  1517  30000A  0F                 	db	15
  1518                           
  1519                           ;Config register CONFIG6H @ 0x30000B
  1520                           ;	Configuration Register Write Protection bit
  1521                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1522                           ;	Boot Block Write Protection bit
  1523                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1524                           ;	Data EEPROM Write Protection bit
  1525                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1526  30000B                     	org	3145739
  1527  30000B  E0                 	db	224
  1528                           
  1529                           ;Config register CONFIG7L @ 0x30000C
  1530                           ;	Table Read Protection bit
  1531                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1532                           ;	Table Read Protection bit
  1533                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1534                           ;	Table Read Protection bit
  1535                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1536                           ;	Table Read Protection bit
  1537                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1538  30000C                     	org	3145740
  1539  30000C  0F                 	db	15
  1540                           
  1541                           ;Config register CONFIG7H @ 0x30000D
  1542                           ;	Boot Block Table Read Protection bit
  1543                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1544  30000D                     	org	3145741
  1545  30000D  40                 	db	64
  1546                           tosu	equ	0xFFF
  1547                           tosh	equ	0xFFE
  1548                           tosl	equ	0xFFD
  1549                           stkptr	equ	0xFFC
  1550                           pclatu	equ	0xFFB
  1551                           pclath	equ	0xFFA
  1552                           pcl	equ	0xFF9
  1553                           tblptru	equ	0xFF8
  1554                           tblptrh	equ	0xFF7
  1555                           tblptrl	equ	0xFF6
  1556                           tablat	equ	0xFF5
  1557                           prodh	equ	0xFF4
  1558                           prodl	equ	0xFF3
  1559                           indf0	equ	0xFEF
  1560                           postinc0	equ	0xFEE
  1561                           postdec0	equ	0xFED
  1562                           preinc0	equ	0xFEC
  1563                           plusw0	equ	0xFEB
  1564                           fsr0h	equ	0xFEA
  1565                           fsr0l	equ	0xFE9
  1566                           wreg	equ	0xFE8
  1567                           indf1	equ	0xFE7
  1568                           postinc1	equ	0xFE6
  1569                           postdec1	equ	0xFE5
  1570                           preinc1	equ	0xFE4
  1571                           plusw1	equ	0xFE3
  1572                           fsr1h	equ	0xFE2
  1573                           fsr1l	equ	0xFE1
  1574                           bsr	equ	0xFE0
  1575                           indf2	equ	0xFDF
  1576                           postinc2	equ	0xFDE
  1577                           postdec2	equ	0xFDD
  1578                           preinc2	equ	0xFDC
  1579                           plusw2	equ	0xFDB
  1580                           fsr2h	equ	0xFDA
  1581                           fsr2l	equ	0xFD9
  1582                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        2
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    i2c_lcd_puts@str	PTR unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_i2c_lcd_set_cursor
    _i2c_lcd_set_cursor->_i2c_lcd_command
    _i2c_lcd_puts->_i2c_lcd_write
    _i2c_lcd_write->_sendDATA
    _sendDATA->_loadPCF
    _i2c_lcd_init->_i2c_lcd_command
    _i2c_lcd_command->_sendCMD
    _sendCMD->_loadPCF
    _loadPCF->_PCF_Wr
    _PCF_Wr->_I2C_Wr
    _I2C_Wr->_I2C_Condiciones_Espera
    _I2C_Stop->_I2C_Condiciones_Espera
    _I2C_Start->_I2C_Condiciones_Espera

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2771
                                             16 COMRAM     2     2      0
                           _I2C_Init
                       _i2c_lcd_init
                       _i2c_lcd_puts
                 _i2c_lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_set_cursor                                   4     3      1     952
                                             12 COMRAM     4     3      1
                    _i2c_lcd_command
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_puts                                         2     0      2     735
                                             12 COMRAM     2     0      2
                      _i2c_lcd_write
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_write                                        1     1      0     538
                                             11 COMRAM     1     1      0
                           _sendDATA
 ---------------------------------------------------------------------------------
 (3) _sendDATA                                             4     4      0     516
                                              7 COMRAM     4     4      0
                            _loadPCF
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_init                                         1     1      0    1084
                                             12 COMRAM     1     1      0
                             _PCF_Wr
                    _i2c_lcd_command
                            _sendCMD
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_command                                      1     1      0     538
                                             11 COMRAM     1     1      0
                            _sendCMD
 ---------------------------------------------------------------------------------
 (3) _sendCMD                                              4     4      0     516
                                              7 COMRAM     4     4      0
                            _loadPCF
 ---------------------------------------------------------------------------------
 (4) _loadPCF                                              4     3      1     426
                                              3 COMRAM     4     3      1
                             _PCF_Wr
 ---------------------------------------------------------------------------------
 (5) _PCF_Wr                                               1     1      0      30
                                              2 COMRAM     1     1      0
                          _I2C_Start
                           _I2C_Stop
                             _I2C_Wr
 ---------------------------------------------------------------------------------
 (6) _I2C_Wr                                               1     1      0      15
                                              1 COMRAM     1     1      0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0       0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (6) _I2C_Start                                            0     0      0       0
             _I2C_Condiciones_Espera
 ---------------------------------------------------------------------------------
 (7) _I2C_Condiciones_Espera                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _i2c_lcd_init
     _PCF_Wr
       _I2C_Start
         _I2C_Condiciones_Espera
       _I2C_Stop
         _I2C_Condiciones_Espera
       _I2C_Wr
         _I2C_Condiciones_Espera
     _i2c_lcd_command
       _sendCMD
         _loadPCF
           _PCF_Wr
     _sendCMD
   _i2c_lcd_puts
     _i2c_lcd_write
       _sendDATA
         _loadPCF
   _i2c_lcd_set_cursor
     _i2c_lcd_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      15       1       22.1%
BITBIGSFRhh         36      0       0      21        0.0%
BITBIGSFRlh         2B      0       0      23        0.0%
BITBIGSFRlll        23      0       0      26        0.0%
BITBIGSFRllhl        F      0       0      25        0.0%
BITBIGSFRhl          3      0       0      22        0.0%
BITBIGSFRllhh        1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15       3        0.0%
DATA                 0      0      15       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jun 10 19:55:58 2023

                   _SSPSTATbits 000FC7                              l21 0944                              l50 09BE  
                            l43 0AB0                              l53 0A20                              l62 0AEA  
                            l71 09F4                              l56 0A4C                              l80 0906  
                            l65 0894                              l59 0AE0                              u10 0A64  
                            u11 0A60                              u20 0A72                              u21 0A6E  
                            u60 09F4                              u61 09F0                              u97 0950  
                           l161 0AF2                             l155 0A72                             l149 0ACA  
                           l158 0AFA                             l167 0AD6                             l906 0AB2  
                           l850 0A64                             l908 0ABA                             l852 0AF4  
                           l860 0AEC                             l846 0A4E                             l854 0AF8  
                           l862 0AF0                             l848 0A4E                             l856 0ACE  
                           l864 0A9A                             l858 0AD2                             u107 0826  
                           u117 083A                             u127 084C                             u137 0866  
                           u147 087A                             u157 088C                             u167 09BA  
                           wreg 000FE8                   _i2c_lcd_write 0AD8                            l1100 09A2  
                          l1102 09A8                            l1104 09AA                            l1120 0A24  
                          l1106 09B2                            l1122 0A38                            l1130 081A  
                          l1114 09F8                            l1108 09B8                            l1124 0A42  
                          l1140 0864                            l1132 0820                            l1116 0A0C  
                          l1150 0886                            l1142 086C                            l1134 082E  
                          l1118 0A16                            l1126 0ADA                            l1128 0AE4  
                          l1144 0870                            l1136 0844                            l1160 08C0  
                          l1152 0898                            l1090 0968                            l1146 0878  
                          l1138 084A                            l1170 09C0                            l1154 089C  
                          l1092 096C                            l1148 0880                            l1172 09C4  
                          l1156 08A8                            l1164 08CC                            l1180 090C  
                          l1094 0972                            l1174 09D4                            l1158 08B4  
                          l1190 0934                            l1182 0910                            l1176 09D8  
                          l1192 0940                            l1184 0914                            l1098 0978  
                          l1194 0942                            l1186 091E                            l1178 0908  
                          l1196 0946                            l1188 092A                            l1286 08E0  
                          l1288 098C                            STR_1 080E                            STR_2 0801  
                 ?_i2c_lcd_init 0001                   ?_i2c_lcd_puts 000D                            _main 0908  
              __end_of_I2C_Init 0ACC                __end_of_I2C_Stop 0AF4                            start 0000  
               sendDATA@nibbleH 0009                 sendDATA@nibbleL 000A                    ___param_bank 000000  
                         ?_main 0001                  sendCMD@nibbleH 0009                  sendCMD@nibbleL 000A  
                ?_i2c_lcd_write 0001                 _i2c_lcd_command 0AE2                     loadPCF@dato 0007  
                   loadPCF@mode 0004                 __end_of_loadPCF 09C0                  ??_i2c_lcd_init 000D  
               __end_of_sendCMD 0A4E                  ??_i2c_lcd_puts 000F               __end_of_I2C_Start 0AFC  
                         tablat 000FF5                           status 000FD8                 __initialization 0A74  
                  __end_of_main 0966                          ??_main 0011                   __activetblptr 000002  
       ?_I2C_Condiciones_Espera 0001                          _ADCON1 000FC1                          _I2C_Wr 0ACC  
                        _PCF_Wr 0A98                          _SSPADD 000FC8                          _SSPBUF 000FC9  
              __end_of_sendDATA 0A22         __end_of_i2c_lcd_command 0AEC                          isa$std 000001  
__end_of_I2C_Condiciones_Espera 0A74                 ??_i2c_lcd_write 000C                       ??_loadPCF 0005  
            i2c_lcd_command@cmd 000C                    __pdataCOMRAM 0013                       ?_I2C_Init 0001  
                     ??_sendCMD 0008                       ?_I2C_Stop 0001                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                    __accesstop 0060         __end_of__initialization 0A8E                   ___rparam_used 000001  
                __pcstackCOMRAM 0001            __end_of_i2c_lcd_init 0896            __end_of_i2c_lcd_puts 09F6  
                    ??_I2C_Init 0001                      ??_I2C_Stop 0002                         ?_I2C_Wr 0001  
               i2c_lcd_puts@str 000D                         ?_PCF_Wr 0001                      I2C_Wr@data 0002  
              ?_i2c_lcd_command 0001                         _DIR_PCF 0013                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7                       ?_sendDATA 0001                       _I2C_Start 0AF4  
                       __Hparam 0000                         __Lparam 0000                    __psmallconst 0800  
         i2c_lcd_set_cursor@col 000D                         __pcinit 0A74           i2c_lcd_set_cursor@row 0010  
                       __ramtop 0800                         __ptext0 0908                         __ptext1 0896  
                       __ptext2 09C0                         __ptext3 0AD8                         __ptext4 09F6  
                       __ptext5 081A                         __ptext6 0AE2                         __ptext7 0A22  
                       __ptext8 0966                         __ptext9 0A98                         _loadPCF 0966  
                       _sendCMD 0A22            end_of_initialization 0A8E                   __Lmediumconst 0000  
                    ??_sendDATA 0008                      ?_I2C_Start 0001                       _PORTDbits 000F83  
                     _TRISBbits 000F93                       _TRISDbits 000F95                    sendDATA@dato 000B  
                  _i2c_lcd_init 081A                  __end_of_I2C_Wr 0AD8                    _i2c_lcd_puts 09C0  
                __end_of_PCF_Wr 0AB2                   __pidataCOMRAM 0AFC           __end_of_i2c_lcd_write 0AE2  
           start_initialization 0A74                        ??_I2C_Wr 0002              i2c_lcd_write@letra 000C  
                      ??_PCF_Wr 0003                     __lcd_params 0015                     ??_I2C_Start 0002  
    __end_of_i2c_lcd_set_cursor 0908                      PCF_Wr@dato 0003                     __pbssCOMRAM 0015  
                    sendCMD@cmd 000B        ??_I2C_Condiciones_Espera 0001                        ?_loadPCF 0004  
                   __smallconst 0800                        _I2C_Init 0AB2                        ?_sendCMD 0001  
                      _I2C_Stop 0AEC                        __Hrparam 0000                        __Lrparam 0000  
                      __ptext10 0ACC                        __ptext11 0AEC                        __ptext12 0AF4  
                      __ptext13 0A4E                        __ptext14 0AB2               ??_i2c_lcd_command 000C  
                      _sendDATA 09F6                        isa$xinst 000000                      _LED_STATUS 0014  
            _i2c_lcd_set_cursor 0896          _I2C_Condiciones_Espera 0A4E             ?_i2c_lcd_set_cursor 000D  
          ??_i2c_lcd_set_cursor 000E                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
