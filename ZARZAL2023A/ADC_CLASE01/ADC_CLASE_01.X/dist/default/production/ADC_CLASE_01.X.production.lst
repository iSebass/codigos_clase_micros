

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Mar 17 11:31:28 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.40
    62                           ; Generated 17/11/2021 GMT
    63                           ; 
    64                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F4550 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     
    97                           	psect	idataBANK0
    98  0038DA                     __pidataBANK0:
    99                           	callstack 0
   100                           
   101                           ;initializer for _strLCD
   102  0038DA  20                 	db	32
   103  0038DB  00                 	db	0
   104  0038DC  00                 	db	0
   105  0038DD  00                 	db	0
   106  0038DE  00                 	db	0
   107  0038DF  00                 	db	0
   108  0038E0  00                 	db	0
   109  0038E1  00                 	db	0
   110  0038E2  00                 	db	0
   111  0038E3  00                 	db	0
   112  0038E4  00                 	db	0
   113  0038E5  00                 	db	0
   114  0038E6  00                 	db	0
   115  0038E7  00                 	db	0
   116  0038E8  00                 	db	0
   117  0038E9  00                 	db	0
   118  0038EA  00                 	db	0
   119  0038EB  00                 	db	0
   120  0038EC  00                 	db	0
   121  0038ED  00                 	db	0
   122  0000                     _ADRESL	set	4035
   123  0000                     _ADRESH	set	4036
   124  0000                     _ADCON0bits	set	4034
   125  0000                     _PORTD	set	3971
   126  0000                     _ADCON2bits	set	4032
   127  0000                     _ADCON1bits	set	4033
   128  0000                     _TRISD	set	3989
   129                           
   130                           	psect	smallconst
   131  000800                     __psmallconst:
   132                           	callstack 0
   133  000800  00                 	db	0
   134  000801                     STR_1:
   135  000801  76                 	db	118	;'v'
   136  000802  6F                 	db	111	;'o'
   137  000803  6C                 	db	108	;'l'
   138  000804  74                 	db	116	;'t'
   139  000805  3A                 	db	58	;':'
   140  000806  20                 	db	32
   141  000807  25                 	db	37
   142  000808  33                 	db	51	;'3'
   143  000809  2E                 	db	46
   144  00080A  31                 	db	49	;'1'
   145  00080B  66                 	db	102	;'f'
   146  00080C  00                 	db	0
   147  00080D                     STR_2:
   148  00080D  49                 	db	73	;'I'
   149  00080E  4E                 	db	78	;'N'
   150  00080F  46                 	db	70	;'F'
   151  000810  00                 	db	0
   152  000811                     STR_6:
   153  000811  4E                 	db	78	;'N'
   154  000812  41                 	db	65	;'A'
   155  000813  4E                 	db	78	;'N'
   156  000814  00                 	db	0
   157  000815                     STR_3:
   158  000815  69                 	db	105	;'i'
   159  000816  6E                 	db	110	;'n'
   160  000817  66                 	db	102	;'f'
   161  000818  00                 	db	0
   162  000819                     STR_7:
   163  000819  6E                 	db	110	;'n'
   164  00081A  61                 	db	97	;'a'
   165  00081B  6E                 	db	110	;'n'
   166  00081C  00                 	db	0
   167  00081D                     STR_10:
   168  00081D  6C                 	db	108	;'l'
   169  00081E  66                 	db	102	;'f'
   170  00081F  00                 	db	0
   171  000820  00                 	db	0	; dummy byte at the end
   172  0000                     
   173                           ; #config settings
   174                           
   175                           	psect	cinit
   176  003628                     __pcinit:
   177                           	callstack 0
   178  003628                     start_initialization:
   179                           	callstack 0
   180  003628                     __initialization:
   181                           	callstack 0
   182                           
   183                           ; Initialize objects allocated to BANK0 (20 bytes)
   184                           ; load TBLPTR registers with __pidataBANK0
   185  003628  0EDA               	movlw	low __pidataBANK0
   186  00362A  6EF6               	movwf	tblptrl,c
   187  00362C  0E38               	movlw	high __pidataBANK0
   188  00362E  6EF7               	movwf	tblptrh,c
   189  003630  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   190  003632  6EF8               	movwf	tblptru,c
   191  003634  EE00  F0A7         	lfsr	0,__pdataBANK0
   192  003638  EE10 F014          	lfsr	1,20
   193  00363C                     copy_data0:
   194  00363C  0009               	tblrd		*+
   195  00363E  CFF5 FFEE          	movff	tablat,postinc0
   196  003642  50E5               	movf	postdec1,w,c
   197  003644  50E1               	movf	fsr1l,w,c
   198  003646  E1FA               	bnz	copy_data0
   199                           
   200                           ; Clear objects allocated to BANK1 (80 bytes)
   201  003648  EE01  F000         	lfsr	0,__pbssBANK1
   202  00364C  0E50               	movlw	80
   203  00364E                     clear_0:
   204  00364E  6AEE               	clrf	postinc0,c
   205  003650  06E8               	decf	wreg,f,c
   206  003652  E1FD               	bnz	clear_0
   207                           
   208                           ; Clear objects allocated to BANK0 (18 bytes)
   209  003654  EE00  F0BB         	lfsr	0,__pbssBANK0
   210  003658  0E12               	movlw	18
   211  00365A                     clear_1:
   212  00365A  6AEE               	clrf	postinc0,c
   213  00365C  06E8               	decf	wreg,f,c
   214  00365E  E1FD               	bnz	clear_1
   215                           
   216                           ; Clear objects allocated to COMRAM (5 bytes)
   217  003660  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   218  003662  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   219  003664  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   220  003666  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   221  003668  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   222  00366A                     end_of_initialization:
   223                           	callstack 0
   224  00366A                     __end_of__initialization:
   225                           	callstack 0
   226  00366A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   227  00366C  6EF8               	movwf	tblptru,c
   228  00366E  0100               	movlb	0
   229  003670  EF87  F018         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMRAM
   232  00005A                     __pbssCOMRAM:
   233                           	callstack 0
   234  00005A                     _prec:
   235                           	callstack 0
   236  00005A                     	ds	2
   237  00005C                     _flags:
   238                           	callstack 0
   239  00005C                     	ds	2
   240  00005E                     __lcd_params:
   241                           	callstack 0
   242  00005E                     	ds	1
   243                           
   244                           	psect	bssBANK0
   245  0000BB                     __pbssBANK0:
   246                           	callstack 0
   247  0000BB                     floorf@F526:
   248                           	callstack 0
   249  0000BB                     	ds	4
   250  0000BF                     ___fpclassifyf@F465:
   251                           	callstack 0
   252  0000BF                     	ds	4
   253  0000C3                     _volt:
   254                           	callstack 0
   255  0000C3                     	ds	4
   256  0000C7                     _nout:
   257                           	callstack 0
   258  0000C7                     	ds	2
   259  0000C9                     _width:
   260                           	callstack 0
   261  0000C9                     	ds	2
   262  0000CB                     _conver:
   263                           	callstack 0
   264  0000CB                     	ds	2
   265                           
   266                           	psect	dataBANK0
   267  0000A7                     __pdataBANK0:
   268                           	callstack 0
   269  0000A7                     _strLCD:
   270                           	callstack 0
   271  0000A7                     	ds	20
   272                           
   273                           	psect	bssBANK1
   274  000100                     __pbssBANK1:
   275                           	callstack 0
   276  000100                     _dbuf:
   277                           	callstack 0
   278  000100                     	ds	80
   279                           
   280                           	psect	cstackBANK0
   281  000060                     __pcstackBANK0:
   282                           	callstack 0
   283  000060                     _efgtoa$856:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x0
   287  000060                     	ds	2
   288  000062                     _efgtoa$864:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x2
   292  000062                     	ds	2
   293  000064                     _efgtoa$865:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x4
   297  000064                     	ds	2
   298  000066                     efgtoa@t:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x6
   302  000066                     	ds	2
   303  000068                     efgtoa@pp:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x8
   307  000068                     	ds	2
   308  00006A                     efgtoa@ne:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0xA
   312  00006A                     	ds	2
   313  00006C                     efgtoa@m:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0xC
   317  00006C                     	ds	2
   318  00006E                     efgtoa@ou:
   319                           	callstack 0
   320                           
   321                           ; 4 bytes @ 0xE
   322  00006E                     	ds	4
   323  000072                     efgtoa@d:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x12
   327  000072                     	ds	2
   328  000074                     efgtoa@sign:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x14
   332  000074                     	ds	2
   333  000076                     efgtoa@p:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x16
   337  000076                     	ds	2
   338  000078                     efgtoa@w:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x18
   342  000078                     	ds	2
   343  00007A                     efgtoa@nmode:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x1A
   347  00007A                     	ds	1
   348  00007B                     efgtoa@mode:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x1B
   352  00007B                     	ds	1
   353  00007C                     efgtoa@h:
   354                           	callstack 0
   355                           
   356                           ; 4 bytes @ 0x1C
   357  00007C                     	ds	4
   358  000080                     efgtoa@l:
   359                           	callstack 0
   360                           
   361                           ; 4 bytes @ 0x20
   362  000080                     	ds	4
   363  000084                     efgtoa@i:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x24
   367  000084                     	ds	2
   368  000086                     efgtoa@g:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x26
   372  000086                     	ds	4
   373  00008A                     efgtoa@e:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x2A
   377  00008A                     	ds	2
   378  00008C                     efgtoa@n:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x2C
   382  00008C                     	ds	2
   383  00008E                     efgtoa@u:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x2E
   387  00008E                     	ds	4
   388  000092                     ?_sprintf:
   389                           	callstack 0
   390  000092                     sprintf@s:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x32
   394  000092                     	ds	2
   395  000094                     sprintf@fmt:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x34
   399  000094                     	ds	6
   400  00009A                     sprintf@ap:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x3A
   404  00009A                     	ds	2
   405  00009C                     sprintf@f:
   406                           	callstack 0
   407                           
   408                           ; 11 bytes @ 0x3C
   409  00009C                     	ds	11
   410                           
   411                           	psect	cstackCOMRAM
   412  000001                     __pcstackCOMRAM:
   413                           	callstack 0
   414  000001                     ?_ADC_Read:
   415                           	callstack 0
   416  000001                     ?_strlen:
   417                           	callstack 0
   418  000001                     ?___fpclassifyf:
   419                           	callstack 0
   420  000001                     ?_isupper:
   421                           	callstack 0
   422  000001                     ?_isdigit:
   423                           	callstack 0
   424  000001                     ?_strncmp:
   425                           	callstack 0
   426  000001                     ?_isspace:
   427                           	callstack 0
   428  000001                     ?___wmul:
   429                           	callstack 0
   430  000001                     ?___awdiv:
   431                           	callstack 0
   432  000001                     ?___awmod:
   433                           	callstack 0
   434  000001                     ?___fladd:
   435                           	callstack 0
   436  000001                     ?___fldiv:
   437                           	callstack 0
   438  000001                     ?___flneg:
   439                           	callstack 0
   440  000001                     ?___fltol:
   441                           	callstack 0
   442  000001                     ?___xxtofl:
   443                           	callstack 0
   444  000001                     __write_nibble@nibble:
   445                           	callstack 0
   446  000001                     ___wmul@multiplier:
   447                           	callstack 0
   448  000001                     ___awdiv@dividend:
   449                           	callstack 0
   450  000001                     ___awmod@dividend:
   451                           	callstack 0
   452  000001                     isdigit@c:
   453                           	callstack 0
   454  000001                     isspace@c:
   455                           	callstack 0
   456  000001                     isupper@c:
   457                           	callstack 0
   458  000001                     fputc@c:
   459                           	callstack 0
   460  000001                     strcpy@dest:
   461                           	callstack 0
   462  000001                     strlen@s:
   463                           	callstack 0
   464  000001                     strncmp@_l:
   465                           	callstack 0
   466  000001                     ___fleq@ff1:
   467                           	callstack 0
   468  000001                     ___flneg@f1:
   469                           	callstack 0
   470  000001                     ___fltol@f1:
   471                           	callstack 0
   472  000001                     ___fladd@b:
   473                           	callstack 0
   474  000001                     ___fldiv@b:
   475                           	callstack 0
   476  000001                     ___xxtofl@val:
   477                           	callstack 0
   478  000001                     ___fpclassifyf@x:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x0
   482  000001                     	ds	1
   483  000002                     __send_byte@mode:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x1
   487  000002                     	ds	1
   488  000003                     ??_ADC_Read:
   489  000003                     ??_isupper:
   490  000003                     ??_isdigit:
   491  000003                     ??_isspace:
   492  000003                     ??__send_byte:
   493  000003                     ___wmul@multiplicand:
   494                           	callstack 0
   495  000003                     ___awdiv@divisor:
   496                           	callstack 0
   497  000003                     ___awmod@divisor:
   498                           	callstack 0
   499  000003                     fputc@fp:
   500                           	callstack 0
   501  000003                     strcpy@src:
   502                           	callstack 0
   503  000003                     strlen@a:
   504                           	callstack 0
   505  000003                     strncmp@_r:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x2
   509  000003                     	ds	2
   510  000005                     ??_fputc:
   511  000005                     ??___fpclassifyf:
   512  000005                     ??_strcpy:
   513  000005                     ??___fltol:
   514  000005                     ??___xxtofl:
   515  000005                     ADC_Read@channel:
   516                           	callstack 0
   517  000005                     __send_byte@value:
   518                           	callstack 0
   519  000005                     ___awdiv@counter:
   520                           	callstack 0
   521  000005                     ___awmod@counter:
   522                           	callstack 0
   523  000005                     ___wmul@product:
   524                           	callstack 0
   525  000005                     strncmp@n:
   526                           	callstack 0
   527  000005                     ___fleq@ff2:
   528                           	callstack 0
   529  000005                     ___fladd@a:
   530                           	callstack 0
   531  000005                     ___fldiv@a:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x4
   535  000005                     	ds	1
   536  000006                     lcd_write@letra:
   537                           	callstack 0
   538  000006                     lcd_command@cmd:
   539                           	callstack 0
   540  000006                     ___awdiv@sign:
   541                           	callstack 0
   542  000006                     ___awmod@sign:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x5
   546  000006                     	ds	1
   547  000007                     ??_lcd_init:
   548  000007                     ??_strncmp:
   549  000007                     ?_tolower:
   550                           	callstack 0
   551  000007                     lcd_set_cursor@col:
   552                           	callstack 0
   553  000007                     _isspace$943:
   554                           	callstack 0
   555  000007                     ___awdiv@quotient:
   556                           	callstack 0
   557  000007                     strcpy@s:
   558                           	callstack 0
   559  000007                     tolower@c:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x6
   563  000007                     	ds	1
   564  000008                     ??_lcd_set_cursor:
   565  000008                     ?_atoi:
   566                           	callstack 0
   567  000008                     atoi@s:
   568                           	callstack 0
   569  000008                     strncmp@l:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x7
   573  000008                     	ds	1
   574  000009                     ??___fladd:
   575  000009                     ??___fldiv:
   576  000009                     ??_tolower:
   577  000009                     ??___fleq:
   578  000009                     ___fltol@sign1:
   579                           	callstack 0
   580  000009                     ___xxtofl@sign:
   581                           	callstack 0
   582  000009                     ___fpclassifyf@e:
   583                           	callstack 0
   584  000009                     strcpy@d:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x8
   588  000009                     	ds	1
   589  00000A                     ??_atoi:
   590  00000A                     lcd_set_cursor@row:
   591                           	callstack 0
   592  00000A                     ___fltol@exp1:
   593                           	callstack 0
   594  00000A                     ___xxtofl@exp:
   595                           	callstack 0
   596  00000A                     fputs@s:
   597                           	callstack 0
   598  00000A                     strncmp@r:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x9
   602  00000A                     	ds	1
   603  00000B                     lcd_out@col:
   604                           	callstack 0
   605  00000B                     ___xxtofl@arg:
   606                           	callstack 0
   607  00000B                     ___fpclassifyf@u:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0xA
   611  00000B                     	ds	1
   612  00000C                     lcd_out@str:
   613                           	callstack 0
   614  00000C                     fputs@fp:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0xB
   618  00000C                     	ds	1
   619  00000D                     ___fladd@signs:
   620                           	callstack 0
   621  00000D                     ___fldiv@rem:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0xC
   625  00000D                     	ds	1
   626  00000E                     lcd_out@row:
   627                           	callstack 0
   628  00000E                     ___fladd@aexp:
   629                           	callstack 0
   630  00000E                     fputs@c:
   631                           	callstack 0
   632  00000E                     atoi@neg:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0xD
   636  00000E                     	ds	1
   637  00000F                     ?___flmul:
   638                           	callstack 0
   639  00000F                     ___fladd@bexp:
   640                           	callstack 0
   641  00000F                     fputs@i:
   642                           	callstack 0
   643  00000F                     ___flmul@b:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0xE
   647  00000F                     	ds	1
   648  000010                     ___fladd@grs:
   649                           	callstack 0
   650  000010                     atoi@n:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0xF
   654  000010                     	ds	1
   655  000011                     ?_pad:
   656                           	callstack 0
   657  000011                     ___fldiv@sign:
   658                           	callstack 0
   659  000011                     pad@fp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x10
   663  000011                     	ds	1
   664  000012                     ___fldiv@new_exp:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x11
   668  000012                     	ds	1
   669  000013                     pad@buf:
   670                           	callstack 0
   671  000013                     ___flmul@a:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x12
   675  000013                     	ds	1
   676  000014                     ___fldiv@grs:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x13
   680  000014                     	ds	1
   681  000015                     pad@p:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x14
   685  000015                     	ds	2
   686  000017                     ??___flmul:
   687  000017                     ??_pad:
   688                           
   689                           ; 1 bytes @ 0x16
   690  000017                     	ds	1
   691  000018                     ___fldiv@bexp:
   692                           	callstack 0
   693  000018                     pad@i:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x17
   697  000018                     	ds	1
   698  000019                     ___fldiv@aexp:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x18
   702  000019                     	ds	1
   703  00001A                     ?_floorf:
   704                           	callstack 0
   705  00001A                     pad@w:
   706                           	callstack 0
   707  00001A                     floorf@x:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x19
   711  00001A                     	ds	1
   712  00001B                     ___flmul@sign:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x1A
   716  00001B                     	ds	1
   717  00001C                     ___flmul@grs:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x1B
   721  00001C                     	ds	2
   722  00001E                     ??_floorf:
   723                           
   724                           ; 1 bytes @ 0x1D
   725  00001E                     	ds	2
   726  000020                     ___flmul@aexp:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x1F
   730  000020                     	ds	1
   731  000021                     ___flmul@bexp:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x20
   735  000021                     	ds	1
   736  000022                     ___flmul@prod:
   737                           	callstack 0
   738                           
   739                           ; 4 bytes @ 0x21
   740  000022                     	ds	2
   741  000024                     floorf@m:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x23
   745  000024                     	ds	2
   746  000026                     ___flmul@temp:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x25
   750  000026                     	ds	2
   751  000028                     ?___flsub:
   752                           	callstack 0
   753  000028                     floorf@e:
   754                           	callstack 0
   755  000028                     ___flge@ff1:
   756                           	callstack 0
   757  000028                     ___flsub@b:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x27
   761  000028                     	ds	2
   762  00002A                     floorf@u:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x29
   766  00002A                     	ds	2
   767  00002C                     ___flge@ff2:
   768                           	callstack 0
   769  00002C                     ___flsub@a:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x2B
   773  00002C                     	ds	4
   774  000030                     ??___flge:
   775                           
   776                           ; 1 bytes @ 0x2F
   777  000030                     	ds	4
   778  000034                     ?_efgtoa:
   779                           	callstack 0
   780  000034                     efgtoa@fp:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x33
   784  000034                     	ds	2
   785  000036                     efgtoa@f:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x35
   789  000036                     	ds	4
   790  00003A                     efgtoa@c:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x39
   794  00003A                     	ds	1
   795  00003B                     ??_efgtoa:
   796                           
   797                           ; 1 bytes @ 0x3A
   798  00003B                     	ds	5
   799  000040                     ?_vfpfcnvrt:
   800                           	callstack 0
   801  000040                     vfpfcnvrt@fp:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x3F
   805  000040                     	ds	2
   806  000042                     vfpfcnvrt@fmt:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x41
   810  000042                     	ds	2
   811  000044                     vfpfcnvrt@ap:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x43
   815  000044                     	ds	2
   816  000046                     ??_vfpfcnvrt:
   817                           
   818                           ; 1 bytes @ 0x45
   819  000046                     	ds	4
   820  00004A                     vfpfcnvrt@f:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x49
   824  00004A                     	ds	4
   825  00004E                     vfpfcnvrt@ct:
   826                           	callstack 0
   827                           
   828                           ; 3 bytes @ 0x4D
   829  00004E                     	ds	3
   830  000051                     vfpfcnvrt@c:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x50
   834  000051                     	ds	1
   835  000052                     ?_vfprintf:
   836                           	callstack 0
   837  000052                     vfprintf@fp:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x51
   841  000052                     	ds	2
   842  000054                     vfprintf@fmt:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x53
   846  000054                     	ds	2
   847  000056                     vfprintf@ap:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x55
   851  000056                     	ds	2
   852  000058                     vfprintf@cfmt:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x57
   856  000058                     	ds	2
   857  00005A                     
   858                           ; 1 bytes @ 0x59
   859 ;;
   860 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   861 ;;
   862 ;; *************** function _main *****************
   863 ;; Defined at:
   864 ;;		line 11 in file "main.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   878 ;;      Params:         0       0       0       0       0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels required when called: 8
   884 ;; This function calls:
   885 ;;		_ADC_Init
   886 ;;		_ADC_Read
   887 ;;		___flmul
   888 ;;		___xxtofl
   889 ;;		_lcd_disable_blink
   890 ;;		_lcd_disable_cursor
   891 ;;		_lcd_init
   892 ;;		_lcd_out
   893 ;;		_sprintf
   894 ;; This function is called by:
   895 ;;		Startup code after reset
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text0
   900  00310E                     __ptext0:
   901                           	callstack 0
   902  00310E                     _main:
   903                           	callstack 23
   904  00310E                     
   905                           ;main.c: 12:     ADCON1bits.PCFG = 13;
   906  00310E  50C1               	movf	193,w,c	;volatile
   907  003110  0BF0               	andlw	-16
   908  003112  090D               	iorlw	13
   909  003114  6EC1               	movwf	193,c	;volatile
   910  003116                     
   911                           ;main.c: 13:     ADC_Init();
   912  003116  EC62  F01C         	call	_ADC_Init	;wreg free
   913  00311A                     
   914                           ;main.c: 14:     lcd_init();
   915  00311A  EC8D  F019         	call	_lcd_init	;wreg free
   916  00311E                     
   917                           ;main.c: 15:     lcd_disable_blink();
   918  00311E  EC81  F01C         	call	_lcd_disable_blink	;wreg free
   919  003122                     
   920                           ;main.c: 16:     lcd_disable_cursor();
   921  003122  EC77  F01C         	call	_lcd_disable_cursor	;wreg free
   922  003126                     l4166:
   923                           
   924                           ;main.c: 19:         conver = ADC_Read(0);
   925  003126  0E00               	movlw	0
   926  003128  ECA2  F01B         	call	_ADC_Read
   927  00312C  C001  F0CB         	movff	?_ADC_Read,_conver
   928  003130  C002  F0CC         	movff	?_ADC_Read+1,_conver+1
   929  003134                     
   930                           ;main.c: 20:         volt = (5.0/1023.0)*conver;
   931  003134  C0CB  F001         	movff	_conver,___xxtofl@val
   932  003138  C0CC  F002         	movff	_conver+1,___xxtofl@val+1
   933  00313C  0E00               	movlw	0
   934  00313E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   935  003140  0EFF               	movlw	-1
   936  003142  6E03               	movwf	(___xxtofl@val+2)^0,c
   937  003144  6E04               	movwf	(___xxtofl@val+3)^0,c
   938  003146  0E01               	movlw	1
   939  003148  ECEB  F013         	call	___xxtofl
   940  00314C  C001  F00F         	movff	?___xxtofl,___flmul@b
   941  003150  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   942  003154  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   943  003158  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   944  00315C  0E0A               	movlw	10
   945  00315E  6E13               	movwf	___flmul@a^0,c
   946  003160  0E28               	movlw	40
   947  003162  6E14               	movwf	(___flmul@a+1)^0,c
   948  003164  0EA0               	movlw	160
   949  003166  6E15               	movwf	(___flmul@a+2)^0,c
   950  003168  0E3B               	movlw	59
   951  00316A  6E16               	movwf	(___flmul@a+3)^0,c
   952  00316C  EC00  F00F         	call	___flmul	;wreg free
   953  003170  C00F  F0C3         	movff	?___flmul,_volt
   954  003174  C010  F0C4         	movff	?___flmul+1,_volt+1
   955  003178  C011  F0C5         	movff	?___flmul+2,_volt+2
   956  00317C  C012  F0C6         	movff	?___flmul+3,_volt+3
   957  003180                     
   958                           ;main.c: 21:         sprintf(strLCD,"volt: %3.1f",volt );
   959  003180  0EA7               	movlw	low _strLCD
   960  003182  0100               	movlb	0	; () banked
   961  003184  6F92               	movwf	sprintf@s& (0+255),b
   962  003186  0E00               	movlw	high _strLCD
   963  003188  6F93               	movwf	(sprintf@s+1)& (0+255),b
   964  00318A  0E01               	movlw	low STR_1
   965  00318C  6F94               	movwf	sprintf@fmt& (0+255),b
   966  00318E  0E08               	movlw	high STR_1
   967  003190  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
   968  003192  C0C3  F096         	movff	_volt,?_sprintf+4
   969  003196  C0C4  F097         	movff	_volt+1,?_sprintf+5
   970  00319A  C0C5  F098         	movff	_volt+2,?_sprintf+6
   971  00319E  C0C6  F099         	movff	_volt+3,?_sprintf+7
   972  0031A2  EC9B  F01A         	call	_sprintf	;wreg free
   973  0031A6                     
   974                           ;main.c: 22:         lcd_out(1,1,strLCD);
   975  0031A6  0E01               	movlw	1
   976  0031A8  6E0B               	movwf	lcd_out@col^0,c
   977  0031AA  0EA7               	movlw	low _strLCD
   978  0031AC  6E0C               	movwf	lcd_out@str^0,c
   979  0031AE  0E00               	movlw	high _strLCD
   980  0031B0  6E0D               	movwf	(lcd_out@str+1)^0,c
   981  0031B2  0E01               	movlw	1
   982  0031B4  ECC2  F01B         	call	_lcd_out
   983  0031B8  EF93  F018         	goto	l4166
   984  0031BC  EF00  F000         	goto	start
   985  0031C0                     __end_of_main:
   986                           	callstack 0
   987                           
   988 ;; *************** function _sprintf *****************
   989 ;; Defined at:
   990 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  s               2   50[BANK0 ] PTR unsigned char 
   993 ;;		 -> strLCD(20), 
   994 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
   995 ;;		 -> STR_1(12), 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  f              11   60[BANK0 ] struct _IO_FILE
   998 ;;  ap              2   58[BANK0 ] PTR void [1]
   999 ;;		 -> ?_sprintf(2), 
  1000 ;;  ret             2    0        int 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  2   50[BANK0 ] int 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1010 ;;      Params:         0       8       0       0       0       0       0       0       0
  1011 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1013 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1014 ;;Total ram usage:       21 bytes
  1015 ;; Hardware stack levels used: 1
  1016 ;; Hardware stack levels required when called: 7
  1017 ;; This function calls:
  1018 ;;		_vfprintf
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text1
  1025  003536                     __ptext1:
  1026                           	callstack 0
  1027  003536                     _sprintf:
  1028                           	callstack 23
  1029  003536  0E96               	movlw	low (?_sprintf+4)
  1030  003538  0100               	movlb	0	; () banked
  1031  00353A  6F9A               	movwf	sprintf@ap& (0+255),b
  1032  00353C  0E00               	movlw	high (?_sprintf+4)
  1033  00353E  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
  1034  003540  C092  F09C         	movff	sprintf@s,sprintf@f
  1035  003544  C093  F09D         	movff	sprintf@s+1,sprintf@f+1
  1036  003548                     
  1037                           ; BSR set to: 0
  1038  003548  0E00               	movlw	0
  1039  00354A  6FA0               	movwf	(sprintf@f+4)& (0+255),b
  1040  00354C  0E00               	movlw	0
  1041  00354E  6F9F               	movwf	(sprintf@f+3)& (0+255),b
  1042  003550                     
  1043                           ; BSR set to: 0
  1044  003550  0E00               	movlw	0
  1045  003552  6FA6               	movwf	(sprintf@f+10)& (0+255),b
  1046  003554  0E00               	movlw	0
  1047  003556  6FA5               	movwf	(sprintf@f+9)& (0+255),b
  1048  003558                     
  1049                           ; BSR set to: 0
  1050  003558  0E9C               	movlw	low sprintf@f
  1051  00355A  6E52               	movwf	vfprintf@fp^0,c
  1052  00355C  0E00               	movlw	high sprintf@f
  1053  00355E  6E53               	movwf	(vfprintf@fp+1)^0,c
  1054  003560  C094  F054         	movff	sprintf@fmt,vfprintf@fmt
  1055  003564  C095  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1056  003568  0E9A               	movlw	low sprintf@ap
  1057  00356A  6E56               	movwf	vfprintf@ap^0,c
  1058  00356C  0E00               	movlw	high sprintf@ap
  1059  00356E  6E57               	movwf	(vfprintf@ap+1)^0,c
  1060  003570  EC3C  F01A         	call	_vfprintf	;wreg free
  1061  003574  0100               	movlb	0	; () banked
  1062  003576  519F               	movf	(sprintf@f+3)& (0+255),w,b
  1063  003578  2592               	addwf	sprintf@s& (0+255),w,b
  1064  00357A  6ED9               	movwf	fsr2l,c
  1065  00357C  51A0               	movf	(sprintf@f+4)& (0+255),w,b
  1066  00357E  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  1067  003580  6EDA               	movwf	fsr2h,c
  1068  003582  0E00               	movlw	0
  1069  003584  6EDF               	movwf	indf2,c
  1070  003586                     
  1071                           ; BSR set to: 0
  1072  003586  0012               	return		;funcret
  1073  003588                     __end_of_sprintf:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _vfprintf *****************
  1077 ;; Defined at:
  1078 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1081 ;;		 -> sprintf@f(11), 
  1082 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1083 ;;		 -> STR_1(12), 
  1084 ;;  ap              2   85[COMRAM] PTR PTR void 
  1085 ;;		 -> sprintf@ap(2), 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1088 ;;		 -> STR_1(12), 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  2   81[COMRAM] int 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1098 ;;      Params:         6       0       0       0       0       0       0       0       0
  1099 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1101 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1102 ;;Total ram usage:        8 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 6
  1105 ;; This function calls:
  1106 ;;		_vfpfcnvrt
  1107 ;; This function is called by:
  1108 ;;		_sprintf
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text2
  1113  003478                     __ptext2:
  1114                           	callstack 0
  1115  003478                     _vfprintf:
  1116                           	callstack 23
  1117  003478                     
  1118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1119  003478  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1120  00347C  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1121  003480                     
  1122                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1123  003480  0E00               	movlw	0
  1124  003482  0100               	movlb	0	; () banked
  1125  003484  6FC8               	movwf	(_nout+1)& (0+255),b
  1126  003486  0E00               	movlw	0
  1127  003488  6FC7               	movwf	_nout& (0+255),b
  1128                           
  1129                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1130  00348A  EF5A  F01A         	goto	l4032
  1131  00348E                     l4030:
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1135  00348E  C052  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1136  003492  C053  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1137  003496  0E58               	movlw	low vfprintf@cfmt
  1138  003498  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1139  00349A  0E00               	movlw	high vfprintf@cfmt
  1140  00349C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1141  00349E  C056  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1142  0034A2  C057  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1143  0034A6  EC19  F00A         	call	_vfpfcnvrt	;wreg free
  1144  0034AA  5040               	movf	?_vfpfcnvrt^0,w,c
  1145  0034AC  0100               	movlb	0	; () banked
  1146  0034AE  27C7               	addwf	_nout& (0+255),f,b
  1147  0034B0  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1148  0034B2  23C8               	addwfc	(_nout+1)& (0+255),f,b
  1149  0034B4                     l4032:
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1153  0034B4  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  1154  0034B8  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1155  0034BC                     	if	0	;tblptru may be non-zero
  1156  0034BC                     	endif
  1157  0034BC                     	if	0	;tblptru may be non-zero
  1158  0034BC                     	endif
  1159  0034BC  0008               	tblrd		*
  1160  0034BE  50F5               	movf	tablat,w,c
  1161  0034C0  0900               	iorlw	0
  1162  0034C2  A4D8               	btfss	status,2,c
  1163  0034C4  EF66  F01A         	goto	u4541
  1164  0034C8  EF68  F01A         	goto	u4540
  1165  0034CC                     u4541:
  1166  0034CC  EF47  F01A         	goto	l4030
  1167  0034D0                     u4540:
  1168  0034D0                     
  1169                           ; BSR set to: 0
  1170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1171  0034D0  C0C7  F052         	movff	_nout,?_vfprintf
  1172  0034D4  C0C8  F053         	movff	_nout+1,?_vfprintf+1
  1173  0034D8                     
  1174                           ; BSR set to: 0
  1175  0034D8  0012               	return		;funcret
  1176  0034DA                     __end_of_vfprintf:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _vfpfcnvrt *****************
  1180 ;; Defined at:
  1181 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1184 ;;		 -> sprintf@f(11), 
  1185 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1186 ;;		 -> vfprintf@cfmt(2), 
  1187 ;;  ap              2   67[COMRAM] PTR PTR void 
  1188 ;;		 -> sprintf@ap(2), 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  llu             8    0        unsigned long long 
  1191 ;;  ll              8    0        long long 
  1192 ;;  f               4   73[COMRAM] long long 
  1193 ;;  ct              3   77[COMRAM] unsigned char [3]
  1194 ;;  vp              3    0        PTR void 
  1195 ;;  cp              3    0        PTR unsigned char 
  1196 ;;  i               2    0        int 
  1197 ;;  done            2    0        int 
  1198 ;;  c               1   80[COMRAM] unsigned char 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  2   63[COMRAM] int 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1208 ;;      Params:         6       0       0       0       0       0       0       0       0
  1209 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1210 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1211 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1212 ;;Total ram usage:       18 bytes
  1213 ;; Hardware stack levels used: 1
  1214 ;; Hardware stack levels required when called: 5
  1215 ;; This function calls:
  1216 ;;		_atoi
  1217 ;;		_efgtoa
  1218 ;;		_fputc
  1219 ;;		_isdigit
  1220 ;;		_isupper
  1221 ;;		_strncmp
  1222 ;;		_tolower
  1223 ;; This function is called by:
  1224 ;;		_vfprintf
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text3
  1229  001432                     __ptext3:
  1230                           	callstack 0
  1231  001432                     _vfpfcnvrt:
  1232                           	callstack 23
  1233  001432                     
  1234                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1235  001432  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1236  001436  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1237  00143A  CFDE FFF6          	movff	postinc2,tblptrl
  1238  00143E  CFDD FFF7          	movff	postdec2,tblptrh
  1239  001442                     	if	0	;tblptru may be non-zero
  1240  001442                     	endif
  1241  001442                     	if	0	;tblptru may be non-zero
  1242  001442                     	endif
  1243  001442  0008               	tblrd		*
  1244  001444  50F5               	movf	tablat,w,c
  1245  001446  0A25               	xorlw	37
  1246  001448  A4D8               	btfss	status,2,c
  1247  00144A  EF29  F00A         	goto	u4411
  1248  00144E  EF2B  F00A         	goto	u4410
  1249  001452                     u4411:
  1250  001452  EF84  F00C         	goto	l3998
  1251  001456                     u4410:
  1252  001456                     
  1253                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1254  001456  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1255  00145A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1256  00145E  2ADE               	incf	postinc2,f,c
  1257  001460  0E00               	movlw	0
  1258  001462  22DD               	addwfc	postdec2,f,c
  1259  001464                     
  1260                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1261  001464  0E00               	movlw	0
  1262  001466  0100               	movlb	0	; () banked
  1263  001468  6FCA               	movwf	(_width+1)& (0+255),b
  1264  00146A  0E00               	movlw	0
  1265  00146C  6FC9               	movwf	_width& (0+255),b
  1266  00146E  C0C9  F05C         	movff	_width,_flags
  1267  001472  C0CA  F05D         	movff	_width+1,_flags+1
  1268  001476                     
  1269                           ; BSR set to: 0
  1270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1271  001476  685A               	setf	_prec^0,c
  1272  001478  685B               	setf	(_prec+1)^0,c
  1273  00147A                     
  1274                           ; BSR set to: 0
  1275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1276  00147A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1277  00147E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1278  001482  CFDE FFF6          	movff	postinc2,tblptrl
  1279  001486  CFDD FFF7          	movff	postdec2,tblptrh
  1280  00148A                     	if	0	;tblptru may be non-zero
  1281  00148A                     	endif
  1282  00148A                     	if	0	;tblptru may be non-zero
  1283  00148A                     	endif
  1284  00148A  0008               	tblrd		*
  1285  00148C  50F5               	movf	tablat,w,c
  1286  00148E  0A2A               	xorlw	42
  1287  001490  A4D8               	btfss	status,2,c
  1288  001492  EF4D  F00A         	goto	u4421
  1289  001496  EF4F  F00A         	goto	u4420
  1290  00149A                     u4421:
  1291  00149A  EF78  F00A         	goto	l3918
  1292  00149E                     u4420:
  1293  00149E                     
  1294                           ; BSR set to: 0
  1295                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1296  00149E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1297  0014A2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1298  0014A6  2ADE               	incf	postinc2,f,c
  1299  0014A8  0E00               	movlw	0
  1300  0014AA  22DD               	addwfc	postdec2,f,c
  1301                           
  1302                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1303  0014AC  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1304  0014B0  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1305  0014B4  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1306  0014B8  0E02               	movlw	2
  1307  0014BA  26DE               	addwf	postinc2,f,c
  1308  0014BC  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1309  0014C0  0E00               	movlw	0
  1310  0014C2  22DD               	addwfc	postdec2,f,c
  1311  0014C4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1312  0014C8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1313  0014CC  CFDE F0C9          	movff	postinc2,_width
  1314  0014D0  CFDD F0CA          	movff	postdec2,_width+1
  1315  0014D4                     
  1316                           ; BSR set to: 0
  1317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1318  0014D4  BFCA               	btfsc	(_width+1)& (0+255),7,b
  1319  0014D6  EF71  F00A         	goto	u4430
  1320  0014DA  EF6F  F00A         	goto	u4431
  1321  0014DE                     u4431:
  1322  0014DE  EFAE  F00A         	goto	l3926
  1323  0014E2                     u4430:
  1324  0014E2                     
  1325                           ; BSR set to: 0
  1326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1327  0014E2  805C               	bsf	_flags^0,0,c
  1328                           
  1329                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1330  0014E4  6DC9               	negf	_width& (0+255),b
  1331  0014E6  1FCA               	comf	(_width+1)& (0+255),f,b
  1332  0014E8  B0D8               	btfsc	status,0,c
  1333  0014EA  2BCA               	incf	(_width+1)& (0+255),f,b
  1334  0014EC  EFAE  F00A         	goto	l3926
  1335  0014F0                     l3918:
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1339  0014F0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1340  0014F4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1341  0014F8  CFDE F008          	movff	postinc2,atoi@s
  1342  0014FC  CFDD F009          	movff	postdec2,atoi@s+1
  1343  001500  ECC5  F014         	call	_atoi	;wreg free
  1344  001504  C008  F0C9         	movff	?_atoi,_width
  1345  001508  C009  F0CA         	movff	?_atoi+1,_width+1
  1346                           
  1347                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1348  00150C  EF8F  F00A         	goto	l3924
  1349  001510                     l3920:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1352  001510  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1353  001514  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1354  001518  2ADE               	incf	postinc2,f,c
  1355  00151A  0E00               	movlw	0
  1356  00151C  22DD               	addwfc	postdec2,f,c
  1357  00151E                     l3924:
  1358  00151E  0ED0               	movlw	208
  1359  001520  6E46               	movwf	??_vfpfcnvrt^0,c
  1360  001522  0EFF               	movlw	255
  1361  001524  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1362  001526  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1363  00152A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1364  00152E  CFDE FFF6          	movff	postinc2,tblptrl
  1365  001532  CFDD FFF7          	movff	postdec2,tblptrh
  1366  001536                     	if	0	;tblptru may be non-zero
  1367  001536                     	endif
  1368  001536                     	if	0	;tblptru may be non-zero
  1369  001536                     	endif
  1370  001536  0008               	tblrd		*
  1371  001538  50F5               	movf	tablat,w,c
  1372  00153A  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1373  00153C  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1374  00153E  5046               	movf	??_vfpfcnvrt^0,w,c
  1375  001540  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1376  001542  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1377  001544  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1378  001546  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1379  001548  E109               	bnz	u4440
  1380  00154A  0E0A               	movlw	10
  1381  00154C  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1382  00154E  A0D8               	btfss	status,0,c
  1383  001550  EFAC  F00A         	goto	u4441
  1384  001554  EFAE  F00A         	goto	u4440
  1385  001558                     u4441:
  1386  001558  EF88  F00A         	goto	l3920
  1387  00155C                     u4440:
  1388  00155C                     l3926:
  1389                           
  1390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1391  00155C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1392  001560  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1393  001564  CFDE FFF6          	movff	postinc2,tblptrl
  1394  001568  CFDD FFF7          	movff	postdec2,tblptrh
  1395  00156C                     	if	0	;tblptru may be non-zero
  1396  00156C                     	endif
  1397  00156C                     	if	0	;tblptru may be non-zero
  1398  00156C                     	endif
  1399  00156C  0008               	tblrd		*
  1400  00156E  50F5               	movf	tablat,w,c
  1401  001570  0A2E               	xorlw	46
  1402  001572  A4D8               	btfss	status,2,c
  1403  001574  EFBE  F00A         	goto	u4451
  1404  001578  EFC0  F00A         	goto	u4450
  1405  00157C                     u4451:
  1406  00157C  EF30  F00B         	goto	l3944
  1407  001580                     u4450:
  1408  001580                     
  1409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1410  001580  0E00               	movlw	0
  1411  001582  6E5B               	movwf	(_prec+1)^0,c
  1412  001584  0E00               	movlw	0
  1413  001586  6E5A               	movwf	_prec^0,c
  1414  001588                     
  1415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1416  001588  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1417  00158C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1418  001590  2ADE               	incf	postinc2,f,c
  1419  001592  0E00               	movlw	0
  1420  001594  22DD               	addwfc	postdec2,f,c
  1421  001596                     
  1422                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1423  001596  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1424  00159A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1425  00159E  CFDE FFF6          	movff	postinc2,tblptrl
  1426  0015A2  CFDD FFF7          	movff	postdec2,tblptrh
  1427  0015A6                     	if	0	;tblptru may be non-zero
  1428  0015A6                     	endif
  1429  0015A6                     	if	0	;tblptru may be non-zero
  1430  0015A6                     	endif
  1431  0015A6  0008               	tblrd		*
  1432  0015A8  50F5               	movf	tablat,w,c
  1433  0015AA  0A2A               	xorlw	42
  1434  0015AC  A4D8               	btfss	status,2,c
  1435  0015AE  EFDB  F00A         	goto	u4461
  1436  0015B2  EFDD  F00A         	goto	u4460
  1437  0015B6                     u4461:
  1438  0015B6  EFFA  F00A         	goto	l3936
  1439  0015BA                     u4460:
  1440  0015BA                     
  1441                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1442  0015BA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1443  0015BE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1444  0015C2  2ADE               	incf	postinc2,f,c
  1445  0015C4  0E00               	movlw	0
  1446  0015C6  22DD               	addwfc	postdec2,f,c
  1447                           
  1448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1449  0015C8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1450  0015CC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1451  0015D0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1452  0015D4  0E02               	movlw	2
  1453  0015D6  26DE               	addwf	postinc2,f,c
  1454  0015D8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1455  0015DC  0E00               	movlw	0
  1456  0015DE  22DD               	addwfc	postdec2,f,c
  1457  0015E0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1458  0015E4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1459  0015E8  CFDE F05A          	movff	postinc2,_prec
  1460  0015EC  CFDD F05B          	movff	postdec2,_prec+1
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1463  0015F0  EF30  F00B         	goto	l3944
  1464  0015F4                     l3936:
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1467  0015F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1468  0015F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1469  0015FC  CFDE F008          	movff	postinc2,atoi@s
  1470  001600  CFDD F009          	movff	postdec2,atoi@s+1
  1471  001604  ECC5  F014         	call	_atoi	;wreg free
  1472  001608  C008  F05A         	movff	?_atoi,_prec
  1473  00160C  C009  F05B         	movff	?_atoi+1,_prec+1
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1476  001610  EF11  F00B         	goto	l3942
  1477  001614                     l3938:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1480  001614  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1481  001618  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1482  00161C  2ADE               	incf	postinc2,f,c
  1483  00161E  0E00               	movlw	0
  1484  001620  22DD               	addwfc	postdec2,f,c
  1485  001622                     l3942:
  1486  001622  0ED0               	movlw	208
  1487  001624  6E46               	movwf	??_vfpfcnvrt^0,c
  1488  001626  0EFF               	movlw	255
  1489  001628  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1490  00162A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1491  00162E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1492  001632  CFDE FFF6          	movff	postinc2,tblptrl
  1493  001636  CFDD FFF7          	movff	postdec2,tblptrh
  1494  00163A                     	if	0	;tblptru may be non-zero
  1495  00163A                     	endif
  1496  00163A                     	if	0	;tblptru may be non-zero
  1497  00163A                     	endif
  1498  00163A  0008               	tblrd		*
  1499  00163C  50F5               	movf	tablat,w,c
  1500  00163E  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1501  001640  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1502  001642  5046               	movf	??_vfpfcnvrt^0,w,c
  1503  001644  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1504  001646  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1505  001648  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1506  00164A  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1507  00164C  E109               	bnz	u4470
  1508  00164E  0E0A               	movlw	10
  1509  001650  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1510  001652  A0D8               	btfss	status,0,c
  1511  001654  EF2E  F00B         	goto	u4471
  1512  001658  EF30  F00B         	goto	u4470
  1513  00165C                     u4471:
  1514  00165C  EF0A  F00B         	goto	l3938
  1515  001660                     u4470:
  1516  001660                     l3944:
  1517                           
  1518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1519  001660  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1520  001664  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1521  001668  CFDE FFF6          	movff	postinc2,tblptrl
  1522  00166C  CFDD FFF7          	movff	postdec2,tblptrh
  1523  001670                     	if	0	;tblptru may be non-zero
  1524  001670                     	endif
  1525  001670                     	if	0	;tblptru may be non-zero
  1526  001670                     	endif
  1527  001670  0008               	tblrd		*
  1528  001672  50F5               	movf	tablat,w,c
  1529  001674  6E07               	movwf	tolower@c^0,c
  1530  001676  6A08               	clrf	(tolower@c+1)^0,c
  1531  001678  EC3A  F01B         	call	_tolower	;wreg free
  1532  00167C  5007               	movf	?_tolower^0,w,c
  1533  00167E  6E4E               	movwf	vfpfcnvrt@ct^0,c
  1534  001680                     
  1535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1536  001680  504E               	movf	vfpfcnvrt@ct^0,w,c
  1537  001682  B4D8               	btfsc	status,2,c
  1538  001684  EF46  F00B         	goto	u4481
  1539  001688  EF48  F00B         	goto	u4480
  1540  00168C                     u4481:
  1541  00168C  EF80  F00B         	goto	l3954
  1542  001690                     u4480:
  1543  001690                     
  1544                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1545  001690  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1546  001694  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1547  001698  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1548  00169C  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1549  0016A0  0E01               	movlw	1
  1550  0016A2  2646               	addwf	??_vfpfcnvrt^0,f,c
  1551  0016A4  0E00               	movlw	0
  1552  0016A6  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1553  0016A8  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1554  0016AC  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1555  0016B0                     	if	0	;tblptru may be non-zero
  1556  0016B0                     	endif
  1557  0016B0                     	if	0	;tblptru may be non-zero
  1558  0016B0                     	endif
  1559  0016B0  0008               	tblrd		*
  1560  0016B2  50F5               	movf	tablat,w,c
  1561  0016B4  6E07               	movwf	tolower@c^0,c
  1562  0016B6  6A08               	clrf	(tolower@c+1)^0,c
  1563  0016B8  EC3A  F01B         	call	_tolower	;wreg free
  1564  0016BC  5007               	movf	?_tolower^0,w,c
  1565  0016BE  6E4F               	movwf	(vfpfcnvrt@ct+1)^0,c
  1566  0016C0                     
  1567                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1568  0016C0  504F               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1569  0016C2  B4D8               	btfsc	status,2,c
  1570  0016C4  EF66  F00B         	goto	u4491
  1571  0016C8  EF68  F00B         	goto	u4490
  1572  0016CC                     u4491:
  1573  0016CC  EF80  F00B         	goto	l3954
  1574  0016D0                     u4490:
  1575  0016D0                     
  1576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1577  0016D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1578  0016D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1579  0016D8  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1580  0016DC  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1581  0016E0  0E02               	movlw	2
  1582  0016E2  2646               	addwf	??_vfpfcnvrt^0,f,c
  1583  0016E4  0E00               	movlw	0
  1584  0016E6  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1585  0016E8  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1586  0016EC  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1587  0016F0                     	if	0	;tblptru may be non-zero
  1588  0016F0                     	endif
  1589  0016F0                     	if	0	;tblptru may be non-zero
  1590  0016F0                     	endif
  1591  0016F0  0008               	tblrd		*
  1592  0016F2  50F5               	movf	tablat,w,c
  1593  0016F4  6E07               	movwf	tolower@c^0,c
  1594  0016F6  6A08               	clrf	(tolower@c+1)^0,c
  1595  0016F8  EC3A  F01B         	call	_tolower	;wreg free
  1596  0016FC  5007               	movf	?_tolower^0,w,c
  1597  0016FE  6E50               	movwf	(vfpfcnvrt@ct+2)^0,c
  1598  001700                     l3954:
  1599                           
  1600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1601  001700  0E66               	movlw	102
  1602  001702  184E               	xorwf	vfpfcnvrt@ct^0,w,c
  1603  001704  A4D8               	btfss	status,2,c
  1604  001706  EF87  F00B         	goto	u4501
  1605  00170A  EF89  F00B         	goto	u4500
  1606  00170E                     u4501:
  1607  00170E  EFC9  F00B         	goto	l3966
  1608  001712                     u4500:
  1609  001712                     
  1610                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1611  001712  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1612  001716  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1613  00171A  CFDE FFF6          	movff	postinc2,tblptrl
  1614  00171E  CFDD FFF7          	movff	postdec2,tblptrh
  1615  001722                     	if	0	;tblptru may be non-zero
  1616  001722                     	endif
  1617  001722                     	if	0	;tblptru may be non-zero
  1618  001722                     	endif
  1619  001722  0008               	tblrd		*
  1620  001724  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  1621  001728                     
  1622                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1623  001728  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1624  00172C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1625  001730  2ADE               	incf	postinc2,f,c
  1626  001732  0E00               	movlw	0
  1627  001734  22DD               	addwfc	postdec2,f,c
  1628  001736                     
  1629                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1630  001736  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1631  00173A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1632  00173E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1633  001742  0E04               	movlw	4
  1634  001744  26DE               	addwf	postinc2,f,c
  1635  001746  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1636  00174A  0E00               	movlw	0
  1637  00174C  22DD               	addwfc	postdec2,f,c
  1638  00174E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1639  001752  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1640  001756  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  1641  00175A  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  1642  00175E  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  1643  001762  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  1644  001766                     l3962:
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1647  001766  C040  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  1648  00176A  C041  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1649  00176E  C04A  F036         	movff	vfpfcnvrt@f,efgtoa@f
  1650  001772  C04B  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1651  001776  C04C  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1652  00177A  C04D  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1653  00177E  C051  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  1654  001782  EC11  F004         	call	_efgtoa	;wreg free
  1655  001786  C034  F040         	movff	?_efgtoa,?_vfpfcnvrt
  1656  00178A  C035  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1657  00178E  EF9F  F00C         	goto	l980
  1658  001792                     l3966:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1661  001792  0E4E               	movlw	low vfpfcnvrt@ct
  1662  001794  6E01               	movwf	strncmp@_l^0,c
  1663  001796  0E00               	movlw	high vfpfcnvrt@ct
  1664  001798  6E02               	movwf	(strncmp@_l+1)^0,c
  1665  00179A  0E1D               	movlw	low STR_10
  1666  00179C  6E03               	movwf	strncmp@_r^0,c
  1667  00179E  0E08               	movlw	high STR_10
  1668  0017A0  6E04               	movwf	(strncmp@_r+1)^0,c
  1669  0017A2  0E00               	movlw	0
  1670  0017A4  6E06               	movwf	(strncmp@n+1)^0,c
  1671  0017A6  0E02               	movlw	2
  1672  0017A8  6E05               	movwf	strncmp@n^0,c
  1673  0017AA  ECF4  F016         	call	_strncmp	;wreg free
  1674  0017AE  5001               	movf	?_strncmp^0,w,c
  1675  0017B0  1002               	iorwf	(?_strncmp+1)^0,w,c
  1676  0017B2  A4D8               	btfss	status,2,c
  1677  0017B4  EFDE  F00B         	goto	u4511
  1678  0017B8  EFE0  F00B         	goto	u4510
  1679  0017BC                     u4511:
  1680  0017BC  EF4E  F00C         	goto	l3982
  1681  0017C0                     u4510:
  1682  0017C0                     
  1683                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  1684  0017C0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1685  0017C4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1686  0017C8  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1687  0017CC  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1688  0017D0  0E01               	movlw	1
  1689  0017D2  2646               	addwf	??_vfpfcnvrt^0,f,c
  1690  0017D4  0E00               	movlw	0
  1691  0017D6  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1692  0017D8  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1693  0017DC  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1694  0017E0                     	if	0	;tblptru may be non-zero
  1695  0017E0                     	endif
  1696  0017E0                     	if	0	;tblptru may be non-zero
  1697  0017E0                     	endif
  1698  0017E0  0008               	tblrd		*
  1699  0017E2  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  1700  0017E6  0EBF               	movlw	191
  1701  0017E8  6E46               	movwf	??_vfpfcnvrt^0,c
  1702  0017EA  0EFF               	movlw	255
  1703  0017EC  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1704  0017EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1705  0017F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1706  0017F6  CFDE FFF6          	movff	postinc2,tblptrl
  1707  0017FA  CFDD FFF7          	movff	postdec2,tblptrh
  1708  0017FE                     	if	0	;tblptru may be non-zero
  1709  0017FE                     	endif
  1710  0017FE                     	if	0	;tblptru may be non-zero
  1711  0017FE                     	endif
  1712  0017FE  0008               	tblrd		*
  1713  001800  50F5               	movf	tablat,w,c
  1714  001802  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1715  001804  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1716  001806  5046               	movf	??_vfpfcnvrt^0,w,c
  1717  001808  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1718  00180A  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1719  00180C  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1720  00180E  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1721  001810  E107               	bnz	u4521
  1722  001812  0E1A               	movlw	26
  1723  001814  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1724  001816  B0D8               	btfsc	status,0,c
  1725  001818  EF10  F00C         	goto	u4521
  1726  00181C  EF12  F00C         	goto	u4520
  1727  001820                     u4521:
  1728  001820  EF2C  F00C         	goto	l3976
  1729  001824                     u4520:
  1730  001824                     
  1731                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1732  001824  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1733  001828  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1734  00182C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1735  001830  0E04               	movlw	4
  1736  001832  26DE               	addwf	postinc2,f,c
  1737  001834  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1738  001838  0E00               	movlw	0
  1739  00183A  22DD               	addwfc	postdec2,f,c
  1740  00183C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1741  001840  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1742  001844  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  1743  001848  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  1744  00184C  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  1745  001850  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1748  001854  EF44  F00C         	goto	l985
  1749  001858                     l3976:
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1752  001858  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1753  00185C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1754  001860  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1755  001864  0E04               	movlw	4
  1756  001866  26DE               	addwf	postinc2,f,c
  1757  001868  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1758  00186C  0E00               	movlw	0
  1759  00186E  22DD               	addwfc	postdec2,f,c
  1760  001870  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1761  001874  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1762  001878  CFDE F04A          	movff	postinc2,vfpfcnvrt@f
  1763  00187C  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+1
  1764  001880  CFDE F04C          	movff	postinc2,vfpfcnvrt@f+2
  1765  001884  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+3
  1766  001888                     l985:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1769  001888  0E02               	movlw	2
  1770  00188A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1771  00188E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1772  001892  26DE               	addwf	postinc2,f,c
  1773  001894  0E00               	movlw	0
  1774  001896  22DD               	addwfc	postdec2,f,c
  1775  001898  EFB3  F00B         	goto	l3962
  1776  00189C                     l3982:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1779  00189C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1780  0018A0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1781  0018A4  CFDE FFF6          	movff	postinc2,tblptrl
  1782  0018A8  CFDD FFF7          	movff	postdec2,tblptrh
  1783  0018AC                     	if	0	;tblptru may be non-zero
  1784  0018AC                     	endif
  1785  0018AC                     	if	0	;tblptru may be non-zero
  1786  0018AC                     	endif
  1787  0018AC  0008               	tblrd		*
  1788  0018AE  50F5               	movf	tablat,w,c
  1789  0018B0  0A25               	xorlw	37
  1790  0018B2  A4D8               	btfss	status,2,c
  1791  0018B4  EF5E  F00C         	goto	u4531
  1792  0018B8  EF60  F00C         	goto	u4530
  1793  0018BC                     u4531:
  1794  0018BC  EF77  F00C         	goto	l3992
  1795  0018C0                     u4530:
  1796  0018C0                     
  1797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1798  0018C0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1799  0018C4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1800  0018C8  2ADE               	incf	postinc2,f,c
  1801  0018CA  0E00               	movlw	0
  1802  0018CC  22DD               	addwfc	postdec2,f,c
  1803  0018CE                     
  1804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1805  0018CE  0E00               	movlw	0
  1806  0018D0  6E02               	movwf	(fputc@c+1)^0,c
  1807  0018D2  0E25               	movlw	37
  1808  0018D4  6E01               	movwf	fputc@c^0,c
  1809  0018D6  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1810  0018DA  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1811  0018DE  EC5F  F017         	call	_fputc	;wreg free
  1812  0018E2                     l3988:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1815  0018E2  0E00               	movlw	0
  1816  0018E4  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1817  0018E6  0E01               	movlw	1
  1818  0018E8  6E40               	movwf	?_vfpfcnvrt^0,c
  1819  0018EA  EF9F  F00C         	goto	l980
  1820  0018EE                     l3992:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1823  0018EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1824  0018F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1825  0018F6  2ADE               	incf	postinc2,f,c
  1826  0018F8  0E00               	movlw	0
  1827  0018FA  22DD               	addwfc	postdec2,f,c
  1828  0018FC                     
  1829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1830  0018FC  0E00               	movlw	0
  1831  0018FE  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1832  001900  0E00               	movlw	0
  1833  001902  6E40               	movwf	?_vfpfcnvrt^0,c
  1834  001904  EF9F  F00C         	goto	l980
  1835  001908                     l3998:
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1838  001908  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1839  00190C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1840  001910  CFDE FFF6          	movff	postinc2,tblptrl
  1841  001914  CFDD FFF7          	movff	postdec2,tblptrh
  1842  001918                     	if	0	;tblptru may be non-zero
  1843  001918                     	endif
  1844  001918                     	if	0	;tblptru may be non-zero
  1845  001918                     	endif
  1846  001918  0008               	tblrd		*
  1847  00191A  50F5               	movf	tablat,w,c
  1848  00191C  6E01               	movwf	fputc@c^0,c
  1849  00191E  6A02               	clrf	(fputc@c+1)^0,c
  1850  001920  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1851  001924  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1852  001928  EC5F  F017         	call	_fputc	;wreg free
  1853  00192C                     
  1854                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1855  00192C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1856  001930  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1857  001934  2ADE               	incf	postinc2,f,c
  1858  001936  0E00               	movlw	0
  1859  001938  22DD               	addwfc	postdec2,f,c
  1860  00193A  EF71  F00C         	goto	l3988
  1861  00193E                     l980:
  1862  00193E  0012               	return		;funcret
  1863  001940                     __end_of_vfpfcnvrt:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function _strncmp *****************
  1867 ;; Defined at:
  1868 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1871 ;;		 -> vfpfcnvrt@ct(3), 
  1872 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1873 ;;		 -> STR_12(3), 
  1874 ;;  n               2    4[COMRAM] unsigned int 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1877 ;;		 -> STR_12(3), 
  1878 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1879 ;;		 -> vfpfcnvrt@ct(3), 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  2    0[COMRAM] int 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1889 ;;      Params:         6       0       0       0       0       0       0       0       0
  1890 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1891 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1892 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1893 ;;Total ram usage:       11 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_vfpfcnvrt
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text4
  1903  002DE8                     __ptext4:
  1904                           	callstack 0
  1905  002DE8                     _strncmp:
  1906                           	callstack 27
  1907  002DE8  C001  F008         	movff	strncmp@_l,strncmp@l
  1908  002DEC  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1909  002DF0  C003  F00A         	movff	strncmp@_r,strncmp@r
  1910  002DF4  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1911  002DF8  0605               	decf	strncmp@n^0,f,c
  1912  002DFA  A0D8               	btfss	status,0,c
  1913  002DFC  0606               	decf	(strncmp@n+1)^0,f,c
  1914  002DFE  2805               	incf	strncmp@n^0,w,c
  1915  002E00  E106               	bnz	u4361
  1916  002E02  2806               	incf	(strncmp@n+1)^0,w,c
  1917  002E04  A4D8               	btfss	status,2,c
  1918  002E06  EF07  F017         	goto	u4361
  1919  002E0A  EF09  F017         	goto	u4360
  1920  002E0E                     u4361:
  1921  002E0E  EF16  F017         	goto	l3888
  1922  002E12                     u4360:
  1923  002E12  0E00               	movlw	0
  1924  002E14  6E02               	movwf	(?_strncmp+1)^0,c
  1925  002E16  0E00               	movlw	0
  1926  002E18  6E01               	movwf	?_strncmp^0,c
  1927  002E1A  EF5E  F017         	goto	l1100
  1928  002E1E                     l3886:
  1929  002E1E  4A08               	infsnz	strncmp@l^0,f,c
  1930  002E20  2A09               	incf	(strncmp@l+1)^0,f,c
  1931  002E22  4A0A               	infsnz	strncmp@r^0,f,c
  1932  002E24  2A0B               	incf	(strncmp@r+1)^0,f,c
  1933  002E26  0605               	decf	strncmp@n^0,f,c
  1934  002E28  A0D8               	btfss	status,0,c
  1935  002E2A  0606               	decf	(strncmp@n+1)^0,f,c
  1936  002E2C                     l3888:
  1937  002E2C  C008  FFD9         	movff	strncmp@l,fsr2l
  1938  002E30  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1939  002E34  50DF               	movf	indf2,w,c
  1940  002E36  B4D8               	btfsc	status,2,c
  1941  002E38  EF20  F017         	goto	u4371
  1942  002E3C  EF22  F017         	goto	u4370
  1943  002E40                     u4371:
  1944  002E40  EF4D  F017         	goto	l3896
  1945  002E44                     u4370:
  1946  002E44  C00A  FFF6         	movff	strncmp@r,tblptrl
  1947  002E48  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1948  002E4C                     	if	0	;tblptru may be non-zero
  1949  002E4C                     	endif
  1950  002E4C                     	if	0	;tblptru may be non-zero
  1951  002E4C                     	endif
  1952  002E4C  0008               	tblrd		*
  1953  002E4E  50F5               	movf	tablat,w,c
  1954  002E50  0900               	iorlw	0
  1955  002E52  B4D8               	btfsc	status,2,c
  1956  002E54  EF2E  F017         	goto	u4381
  1957  002E58  EF30  F017         	goto	u4380
  1958  002E5C                     u4381:
  1959  002E5C  EF4D  F017         	goto	l3896
  1960  002E60                     u4380:
  1961  002E60  5005               	movf	strncmp@n^0,w,c
  1962  002E62  1006               	iorwf	(strncmp@n+1)^0,w,c
  1963  002E64  B4D8               	btfsc	status,2,c
  1964  002E66  EF37  F017         	goto	u4391
  1965  002E6A  EF39  F017         	goto	u4390
  1966  002E6E                     u4391:
  1967  002E6E  EF4D  F017         	goto	l3896
  1968  002E72                     u4390:
  1969  002E72  C008  FFD9         	movff	strncmp@l,fsr2l
  1970  002E76  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1971  002E7A  50DF               	movf	indf2,w,c
  1972  002E7C  6E07               	movwf	??_strncmp^0,c
  1973  002E7E  C00A  FFF6         	movff	strncmp@r,tblptrl
  1974  002E82  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1975  002E86                     	if	0	;tblptru may be non-zero
  1976  002E86                     	endif
  1977  002E86                     	if	0	;tblptru may be non-zero
  1978  002E86                     	endif
  1979  002E86  0008               	tblrd		*
  1980  002E88  50F5               	movf	tablat,w,c
  1981  002E8A  1807               	xorwf	??_strncmp^0,w,c
  1982  002E8C  B4D8               	btfsc	status,2,c
  1983  002E8E  EF4B  F017         	goto	u4401
  1984  002E92  EF4D  F017         	goto	u4400
  1985  002E96                     u4401:
  1986  002E96  EF0F  F017         	goto	l3886
  1987  002E9A                     u4400:
  1988  002E9A                     l3896:
  1989  002E9A  C008  FFD9         	movff	strncmp@l,fsr2l
  1990  002E9E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1991  002EA2  50DF               	movf	indf2,w,c
  1992  002EA4  6E07               	movwf	??_strncmp^0,c
  1993  002EA6  C00A  FFF6         	movff	strncmp@r,tblptrl
  1994  002EAA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1995  002EAE                     	if	0	;tblptru may be non-zero
  1996  002EAE                     	endif
  1997  002EAE                     	if	0	;tblptru may be non-zero
  1998  002EAE                     	endif
  1999  002EAE  0008               	tblrd		*
  2000  002EB0  50F5               	movf	tablat,w,c
  2001  002EB2  5C07               	subwf	??_strncmp^0,w,c
  2002  002EB4  6E01               	movwf	?_strncmp^0,c
  2003  002EB6  6A02               	clrf	(?_strncmp+1)^0,c
  2004  002EB8  A0D8               	btfss	status,0,c
  2005  002EBA  0602               	decf	(?_strncmp+1)^0,f,c
  2006  002EBC                     l1100:
  2007  002EBC  0012               	return		;funcret
  2008  002EBE                     __end_of_strncmp:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _efgtoa *****************
  2012 ;; Defined at:
  2013 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  2016 ;;		 -> sprintf@f(11), 
  2017 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  2018 ;;  c               1   57[COMRAM] unsigned char 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  u               4   46[BANK0 ] unsigned char 
  2021 ;;  g               4   38[BANK0 ] unsigned char 
  2022 ;;  l               4   32[BANK0 ] unsigned char 
  2023 ;;  h               4   28[BANK0 ] unsigned char 
  2024 ;;  ou              4   14[BANK0 ] unsigned char 
  2025 ;;  n               2   44[BANK0 ] int 
  2026 ;;  e               2   42[BANK0 ] int 
  2027 ;;  i               2   36[BANK0 ] int 
  2028 ;;  w               2   24[BANK0 ] int 
  2029 ;;  p               2   22[BANK0 ] int 
  2030 ;;  sign            2   20[BANK0 ] int 
  2031 ;;  d               2   18[BANK0 ] int 
  2032 ;;  m               2   12[BANK0 ] int 
  2033 ;;  ne              2   10[BANK0 ] int 
  2034 ;;  pp              2    8[BANK0 ] int 
  2035 ;;  t               2    6[BANK0 ] int 
  2036 ;;  mode            1   27[BANK0 ] unsigned char 
  2037 ;;  nmode           1   26[BANK0 ] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  2   51[COMRAM] int 
  2040 ;; Registers used:
  2041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2047 ;;      Params:         7       0       0       0       0       0       0       0       0
  2048 ;;      Locals:         0      50       0       0       0       0       0       0       0
  2049 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2050 ;;      Totals:        12      50       0       0       0       0       0       0       0
  2051 ;;Total ram usage:       62 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 4
  2054 ;; This function calls:
  2055 ;;		___awdiv
  2056 ;;		___awmod
  2057 ;;		___fladd
  2058 ;;		___fldiv
  2059 ;;		___fleq
  2060 ;;		___flge
  2061 ;;		___flmul
  2062 ;;		___flneg
  2063 ;;		___flsub
  2064 ;;		___fltol
  2065 ;;		___fpclassifyf
  2066 ;;		_floorf
  2067 ;;		_isupper
  2068 ;;		_pad
  2069 ;;		_strcpy
  2070 ;;		_tolower
  2071 ;; This function is called by:
  2072 ;;		_vfpfcnvrt
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text5
  2077  000822                     __ptext5:
  2078                           	callstack 0
  2079  000822                     _efgtoa:
  2080                           	callstack 23
  2081  000822                     
  2082                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2083  000822  0E00               	movlw	0
  2084  000824  0100               	movlb	0	; () banked
  2085  000826  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2086  000828  0E00               	movlw	0
  2087  00082A  6F74               	movwf	efgtoa@sign& (0+255),b
  2088  00082C                     
  2089                           ; BSR set to: 0
  2090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2091  00082C  C036  F086         	movff	efgtoa@f,efgtoa@g
  2092  000830  C037  F087         	movff	efgtoa@f+1,efgtoa@g+1
  2093  000834  C038  F088         	movff	efgtoa@f+2,efgtoa@g+2
  2094  000838  C039  F089         	movff	efgtoa@f+3,efgtoa@g+3
  2095  00083C                     
  2096                           ; BSR set to: 0
  2097                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2098  00083C  BF89               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2099  00083E  EF25  F004         	goto	u3840
  2100  000842  EF23  F004         	goto	u3841
  2101  000846                     u3841:
  2102  000846  EF3B  F004         	goto	l3552
  2103  00084A                     u3840:
  2104  00084A                     
  2105                           ; BSR set to: 0
  2106                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2107  00084A  0E00               	movlw	0
  2108  00084C  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2109  00084E  0E01               	movlw	1
  2110  000850  6F74               	movwf	efgtoa@sign& (0+255),b
  2111  000852                     
  2112                           ; BSR set to: 0
  2113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2114  000852  C086  F001         	movff	efgtoa@g,___flneg@f1
  2115  000856  C087  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2116  00085A  C088  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2117  00085E  C089  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2118  000862  ECFC  F01B         	call	___flneg	;wreg free
  2119  000866  C001  F086         	movff	?___flneg,efgtoa@g
  2120  00086A  C002  F087         	movff	?___flneg+1,efgtoa@g+1
  2121  00086E  C003  F088         	movff	?___flneg+2,efgtoa@g+2
  2122  000872  C004  F089         	movff	?___flneg+3,efgtoa@g+3
  2123  000876                     l3552:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2126  000876  0E00               	movlw	0
  2127  000878  0100               	movlb	0	; () banked
  2128  00087A  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  2129  00087C  0E00               	movlw	0
  2130  00087E  6F8C               	movwf	efgtoa@n& (0+255),b
  2131  000880                     
  2132                           ; BSR set to: 0
  2133                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2134  000880  C0C9  F078         	movff	_width,efgtoa@w
  2135  000884  C0CA  F079         	movff	_width+1,efgtoa@w+1
  2136  000888                     
  2137                           ; BSR set to: 0
  2138                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2139  000888  5174               	movf	efgtoa@sign& (0+255),w,b
  2140  00088A  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2141  00088C  A4D8               	btfss	status,2,c
  2142  00088E  EF4B  F004         	goto	u3851
  2143  000892  EF4D  F004         	goto	u3850
  2144  000896                     u3851:
  2145  000896  EF54  F004         	goto	l3560
  2146  00089A                     u3850:
  2147  00089A                     
  2148                           ; BSR set to: 0
  2149  00089A  A45C               	btfss	_flags^0,2,c
  2150  00089C  EF52  F004         	goto	u3861
  2151  0008A0  EF54  F004         	goto	u3860
  2152  0008A4                     u3861:
  2153  0008A4  EF6E  F004         	goto	l3572
  2154  0008A8                     u3860:
  2155  0008A8                     l3560:
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2159  0008A8  5174               	movf	efgtoa@sign& (0+255),w,b
  2160  0008AA  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2161  0008AC  A4D8               	btfss	status,2,c
  2162  0008AE  EF5B  F004         	goto	u3871
  2163  0008B2  EF5D  F004         	goto	u3870
  2164  0008B6                     u3871:
  2165  0008B6  EF63  F004         	goto	l3564
  2166  0008BA                     u3870:
  2167  0008BA                     
  2168                           ; BSR set to: 0
  2169  0008BA  0E00               	movlw	0
  2170  0008BC  6F61               	movwf	(_efgtoa$856+1)& (0+255),b
  2171  0008BE  0E2B               	movlw	43
  2172  0008C0  6F60               	movwf	_efgtoa$856& (0+255),b
  2173  0008C2  EF67  F004         	goto	l3566
  2174  0008C6                     l3564:
  2175                           
  2176                           ; BSR set to: 0
  2177  0008C6  0E00               	movlw	0
  2178  0008C8  6F61               	movwf	(_efgtoa$856+1)& (0+255),b
  2179  0008CA  0E2D               	movlw	45
  2180  0008CC  6F60               	movwf	_efgtoa$856& (0+255),b
  2181  0008CE                     l3566:
  2182                           
  2183                           ; BSR set to: 0
  2184  0008CE  C060  F100         	movff	_efgtoa$856,_dbuf
  2185  0008D2                     
  2186                           ; BSR set to: 0
  2187                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2188  0008D2  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  2189  0008D4  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  2190  0008D6                     
  2191                           ; BSR set to: 0
  2192                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2193  0008D6  0778               	decf	efgtoa@w& (0+255),f,b
  2194  0008D8  A0D8               	btfss	status,0,c
  2195  0008DA  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  2196  0008DC                     l3572:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2200  0008DC  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2201  0008E0  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2202  0008E4  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2203  0008E8  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2204  0008EC  EC75  F016         	call	___fpclassifyf	;wreg free
  2205  0008F0  0401               	decf	?___fpclassifyf^0,w,c
  2206  0008F2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2207  0008F4  A4D8               	btfss	status,2,c
  2208  0008F6  EF7F  F004         	goto	u3881
  2209  0008FA  EF81  F004         	goto	u3880
  2210  0008FE                     u3881:
  2211  0008FE  EFCC  F004         	goto	l3590
  2212  000902                     u3880:
  2213  000902  0EBF               	movlw	191
  2214  000904  6E3B               	movwf	??_efgtoa^0,c
  2215  000906  0EFF               	movlw	255
  2216  000908  6E3C               	movwf	(??_efgtoa+1)^0,c
  2217  00090A  503A               	movf	efgtoa@c^0,w,c
  2218  00090C  6E3D               	movwf	(??_efgtoa+2)^0,c
  2219  00090E  6A3E               	clrf	(??_efgtoa+3)^0,c
  2220  000910  503B               	movf	??_efgtoa^0,w,c
  2221  000912  263D               	addwf	(??_efgtoa+2)^0,f,c
  2222  000914  503C               	movf	(??_efgtoa+1)^0,w,c
  2223  000916  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2224  000918  503E               	movf	(??_efgtoa+3)^0,w,c
  2225  00091A  E107               	bnz	u3891
  2226  00091C  0E1A               	movlw	26
  2227  00091E  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2228  000920  B0D8               	btfsc	status,0,c
  2229  000922  EF95  F004         	goto	u3891
  2230  000926  EF97  F004         	goto	u3890
  2231  00092A                     u3891:
  2232  00092A  EFA6  F004         	goto	l3582
  2233  00092E                     u3890:
  2234  00092E                     
  2235                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2236  00092E  0E00               	movlw	low _dbuf
  2237  000930  0100               	movlb	0	; () banked
  2238  000932  258C               	addwf	efgtoa@n& (0+255),w,b
  2239  000934  6E01               	movwf	strcpy@dest^0,c
  2240  000936  0E01               	movlw	high _dbuf
  2241  000938  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2242  00093A  6E02               	movwf	(strcpy@dest+1)^0,c
  2243  00093C  0E0D               	movlw	low STR_2
  2244  00093E  6E03               	movwf	strcpy@src^0,c
  2245  000940  0E08               	movlw	high STR_2
  2246  000942  6E04               	movwf	(strcpy@src+1)^0,c
  2247  000944  EC6D  F01A         	call	_strcpy	;wreg free
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2250  000948  EFB3  F004         	goto	l3584
  2251  00094C                     l3582:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2254  00094C  0E00               	movlw	low _dbuf
  2255  00094E  0100               	movlb	0	; () banked
  2256  000950  258C               	addwf	efgtoa@n& (0+255),w,b
  2257  000952  6E01               	movwf	strcpy@dest^0,c
  2258  000954  0E01               	movlw	high _dbuf
  2259  000956  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2260  000958  6E02               	movwf	(strcpy@dest+1)^0,c
  2261  00095A  0E15               	movlw	low STR_3
  2262  00095C  6E03               	movwf	strcpy@src^0,c
  2263  00095E  0E08               	movlw	high STR_3
  2264  000960  6E04               	movwf	(strcpy@src+1)^0,c
  2265  000962  EC6D  F01A         	call	_strcpy	;wreg free
  2266  000966                     l3584:
  2267                           
  2268                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2269  000966  0100               	movlb	0	; () banked
  2270  000968  0EFD               	movlw	253
  2271  00096A  2778               	addwf	efgtoa@w& (0+255),f,b
  2272  00096C  0EFF               	movlw	255
  2273  00096E  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2274  000970                     l3586:
  2275                           
  2276                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2277  000970  C034  F011         	movff	efgtoa@fp,pad@fp
  2278  000974  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  2279  000978  0E00               	movlw	low _dbuf
  2280  00097A  6E13               	movwf	pad@buf^0,c
  2281  00097C  0E01               	movlw	high _dbuf
  2282  00097E  6E14               	movwf	(pad@buf+1)^0,c
  2283  000980  C078  F015         	movff	efgtoa@w,pad@p
  2284  000984  C079  F016         	movff	efgtoa@w+1,pad@p+1
  2285  000988  EC26  F018         	call	_pad	;wreg free
  2286  00098C  C011  F034         	movff	?_pad,?_efgtoa
  2287  000990  C012  F035         	movff	?_pad+1,?_efgtoa+1
  2288  000994  EF18  F00A         	goto	l886
  2289  000998                     l3590:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2292  000998  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2293  00099C  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2294  0009A0  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2295  0009A4  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2296  0009A8  EC75  F016         	call	___fpclassifyf	;wreg free
  2297  0009AC  5001               	movf	?___fpclassifyf^0,w,c
  2298  0009AE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2299  0009B0  A4D8               	btfss	status,2,c
  2300  0009B2  EFDD  F004         	goto	u3901
  2301  0009B6  EFDF  F004         	goto	u3900
  2302  0009BA                     u3901:
  2303  0009BA  EF13  F005         	goto	l3608
  2304  0009BE                     u3900:
  2305  0009BE  0EBF               	movlw	191
  2306  0009C0  6E3B               	movwf	??_efgtoa^0,c
  2307  0009C2  0EFF               	movlw	255
  2308  0009C4  6E3C               	movwf	(??_efgtoa+1)^0,c
  2309  0009C6  503A               	movf	efgtoa@c^0,w,c
  2310  0009C8  6E3D               	movwf	(??_efgtoa+2)^0,c
  2311  0009CA  6A3E               	clrf	(??_efgtoa+3)^0,c
  2312  0009CC  503B               	movf	??_efgtoa^0,w,c
  2313  0009CE  263D               	addwf	(??_efgtoa+2)^0,f,c
  2314  0009D0  503C               	movf	(??_efgtoa+1)^0,w,c
  2315  0009D2  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2316  0009D4  503E               	movf	(??_efgtoa+3)^0,w,c
  2317  0009D6  E107               	bnz	u3911
  2318  0009D8  0E1A               	movlw	26
  2319  0009DA  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2320  0009DC  B0D8               	btfsc	status,0,c
  2321  0009DE  EFF3  F004         	goto	u3911
  2322  0009E2  EFF5  F004         	goto	u3910
  2323  0009E6                     u3911:
  2324  0009E6  EF04  F005         	goto	l3600
  2325  0009EA                     u3910:
  2326  0009EA                     
  2327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2328  0009EA  0E00               	movlw	low _dbuf
  2329  0009EC  0100               	movlb	0	; () banked
  2330  0009EE  258C               	addwf	efgtoa@n& (0+255),w,b
  2331  0009F0  6E01               	movwf	strcpy@dest^0,c
  2332  0009F2  0E01               	movlw	high _dbuf
  2333  0009F4  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2334  0009F6  6E02               	movwf	(strcpy@dest+1)^0,c
  2335  0009F8  0E11               	movlw	low STR_6
  2336  0009FA  6E03               	movwf	strcpy@src^0,c
  2337  0009FC  0E08               	movlw	high STR_6
  2338  0009FE  6E04               	movwf	(strcpy@src+1)^0,c
  2339  000A00  EC6D  F01A         	call	_strcpy	;wreg free
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2342  000A04  EFB3  F004         	goto	l3584
  2343  000A08                     l3600:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2346  000A08  0E00               	movlw	low _dbuf
  2347  000A0A  0100               	movlb	0	; () banked
  2348  000A0C  258C               	addwf	efgtoa@n& (0+255),w,b
  2349  000A0E  6E01               	movwf	strcpy@dest^0,c
  2350  000A10  0E01               	movlw	high _dbuf
  2351  000A12  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2352  000A14  6E02               	movwf	(strcpy@dest+1)^0,c
  2353  000A16  0E19               	movlw	low STR_7
  2354  000A18  6E03               	movwf	strcpy@src^0,c
  2355  000A1A  0E08               	movlw	high STR_7
  2356  000A1C  6E04               	movwf	(strcpy@src+1)^0,c
  2357  000A1E  EC6D  F01A         	call	_strcpy	;wreg free
  2358  000A22  EFB3  F004         	goto	l3584
  2359  000A26                     l3608:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2362  000A26  0E00               	movlw	0
  2363  000A28  0100               	movlb	0	; () banked
  2364  000A2A  6F8E               	movwf	efgtoa@u& (0+255),b
  2365  000A2C  0E00               	movlw	0
  2366  000A2E  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2367  000A30  0E80               	movlw	128
  2368  000A32  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2369  000A34  0E3F               	movlw	63
  2370  000A36  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2371                           
  2372                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2373  000A38  0E00               	movlw	0
  2374  000A3A  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2375  000A3C  0E00               	movlw	0
  2376  000A3E  6F8A               	movwf	efgtoa@e& (0+255),b
  2377  000A40                     
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2380  000A40  C086  F001         	movff	efgtoa@g,___fleq@ff1
  2381  000A44  C087  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2382  000A48  C088  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2383  000A4C  C089  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2384  000A50  0E00               	movlw	0
  2385  000A52  6E05               	movwf	___fleq@ff2^0,c
  2386  000A54  0E00               	movlw	0
  2387  000A56  6E06               	movwf	(___fleq@ff2+1)^0,c
  2388  000A58  0E00               	movlw	0
  2389  000A5A  6E07               	movwf	(___fleq@ff2+2)^0,c
  2390  000A5C  0E00               	movlw	0
  2391  000A5E  6E08               	movwf	(___fleq@ff2+3)^0,c
  2392  000A60  EC38  F019         	call	___fleq	;wreg free
  2393  000A64  B0D8               	btfsc	status,0,c
  2394  000A66  EF37  F005         	goto	u3921
  2395  000A6A  EF39  F005         	goto	u3920
  2396  000A6E                     u3921:
  2397  000A6E  EFBC  F005         	goto	l3626
  2398  000A72                     u3920:
  2399  000A72  EF58  F005         	goto	l3618
  2400  000A76                     l3614:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2403  000A76  C08E  F00F         	movff	efgtoa@u,___flmul@b
  2404  000A7A  C08F  F010         	movff	efgtoa@u+1,___flmul@b+1
  2405  000A7E  C090  F011         	movff	efgtoa@u+2,___flmul@b+2
  2406  000A82  C091  F012         	movff	efgtoa@u+3,___flmul@b+3
  2407  000A86  0E00               	movlw	0
  2408  000A88  6E13               	movwf	___flmul@a^0,c
  2409  000A8A  0E00               	movlw	0
  2410  000A8C  6E14               	movwf	(___flmul@a+1)^0,c
  2411  000A8E  0E20               	movlw	32
  2412  000A90  6E15               	movwf	(___flmul@a+2)^0,c
  2413  000A92  0E41               	movlw	65
  2414  000A94  6E16               	movwf	(___flmul@a+3)^0,c
  2415  000A96  EC00  F00F         	call	___flmul	;wreg free
  2416  000A9A  C00F  F08E         	movff	?___flmul,efgtoa@u
  2417  000A9E  C010  F08F         	movff	?___flmul+1,efgtoa@u+1
  2418  000AA2  C011  F090         	movff	?___flmul+2,efgtoa@u+2
  2419  000AA6  C012  F091         	movff	?___flmul+3,efgtoa@u+3
  2420  000AAA                     
  2421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2422  000AAA  0100               	movlb	0	; () banked
  2423  000AAC  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  2424  000AAE  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  2425  000AB0                     l3618:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2428  000AB0  C086  F028         	movff	efgtoa@g,___flge@ff1
  2429  000AB4  C087  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2430  000AB8  C088  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2431  000ABC  C089  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2432  000AC0  0E00               	movlw	0
  2433  000AC2  6E13               	movwf	___flmul@a^0,c
  2434  000AC4  0E00               	movlw	0
  2435  000AC6  6E14               	movwf	(___flmul@a+1)^0,c
  2436  000AC8  0E20               	movlw	32
  2437  000ACA  6E15               	movwf	(___flmul@a+2)^0,c
  2438  000ACC  0E41               	movlw	65
  2439  000ACE  6E16               	movwf	(___flmul@a+3)^0,c
  2440  000AD0  C08E  F00F         	movff	efgtoa@u,___flmul@b
  2441  000AD4  C08F  F010         	movff	efgtoa@u+1,___flmul@b+1
  2442  000AD8  C090  F011         	movff	efgtoa@u+2,___flmul@b+2
  2443  000ADC  C091  F012         	movff	efgtoa@u+3,___flmul@b+3
  2444  000AE0  EC00  F00F         	call	___flmul	;wreg free
  2445  000AE4  C00F  F02C         	movff	?___flmul,___flge@ff2
  2446  000AE8  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2447  000AEC  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2448  000AF0  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2449  000AF4  ECF3  F015         	call	___flge	;wreg free
  2450  000AF8  B0D8               	btfsc	status,0,c
  2451  000AFA  EF81  F005         	goto	u3931
  2452  000AFE  EF83  F005         	goto	u3930
  2453  000B02                     u3931:
  2454  000B02  EF3B  F005         	goto	l3614
  2455  000B06                     u3930:
  2456  000B06  EFA3  F005         	goto	l3624
  2457  000B0A                     l3620:
  2458                           
  2459                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2460  000B0A  C08E  F001         	movff	efgtoa@u,___fldiv@b
  2461  000B0E  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2462  000B12  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2463  000B16  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2464  000B1A  0E00               	movlw	0
  2465  000B1C  6E05               	movwf	___fldiv@a^0,c
  2466  000B1E  0E00               	movlw	0
  2467  000B20  6E06               	movwf	(___fldiv@a+1)^0,c
  2468  000B22  0E20               	movlw	32
  2469  000B24  6E07               	movwf	(___fldiv@a+2)^0,c
  2470  000B26  0E41               	movlw	65
  2471  000B28  6E08               	movwf	(___fldiv@a+3)^0,c
  2472  000B2A  EC15  F011         	call	___fldiv	;wreg free
  2473  000B2E  C001  F08E         	movff	?___fldiv,efgtoa@u
  2474  000B32  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2475  000B36  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  2476  000B3A  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  2477  000B3E                     
  2478                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2479  000B3E  0100               	movlb	0	; () banked
  2480  000B40  078A               	decf	efgtoa@e& (0+255),f,b
  2481  000B42  A0D8               	btfss	status,0,c
  2482  000B44  078B               	decf	(efgtoa@e+1)& (0+255),f,b
  2483  000B46                     l3624:
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2486  000B46  C086  F028         	movff	efgtoa@g,___flge@ff1
  2487  000B4A  C087  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2488  000B4E  C088  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2489  000B52  C089  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2490  000B56  C08E  F02C         	movff	efgtoa@u,___flge@ff2
  2491  000B5A  C08F  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2492  000B5E  C090  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2493  000B62  C091  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2494  000B66  ECF3  F015         	call	___flge	;wreg free
  2495  000B6A  A0D8               	btfss	status,0,c
  2496  000B6C  EFBA  F005         	goto	u3941
  2497  000B70  EFBC  F005         	goto	u3940
  2498  000B74                     u3941:
  2499  000B74  EF85  F005         	goto	l3620
  2500  000B78                     u3940:
  2501  000B78                     l3626:
  2502                           
  2503                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2504  000B78  C03A  F007         	movff	efgtoa@c,tolower@c
  2505  000B7C  6A08               	clrf	(tolower@c+1)^0,c
  2506  000B7E  EC3A  F01B         	call	_tolower	;wreg free
  2507  000B82  5007               	movf	?_tolower^0,w,c
  2508  000B84  0100               	movlb	0	; () banked
  2509  000B86  6F7B               	movwf	efgtoa@mode& (0+255),b
  2510  000B88                     
  2511                           ; BSR set to: 0
  2512                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2513  000B88  C07B  F07A         	movff	efgtoa@mode,efgtoa@nmode
  2514  000B8C                     
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2517  000B8C  0E67               	movlw	103
  2518  000B8E  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2519  000B90  A4D8               	btfss	status,2,c
  2520  000B92  EFCD  F005         	goto	u3951
  2521  000B96  EFCF  F005         	goto	u3950
  2522  000B9A                     u3951:
  2523  000B9A  EFF5  F005         	goto	l3640
  2524  000B9E                     u3950:
  2525  000B9E                     
  2526                           ; BSR set to: 0
  2527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2528  000B9E  505A               	movf	_prec^0,w,c
  2529  000BA0  105B               	iorwf	(_prec+1)^0,w,c
  2530  000BA2  A4D8               	btfss	status,2,c
  2531  000BA4  EFD6  F005         	goto	u3961
  2532  000BA8  EFD8  F005         	goto	u3960
  2533  000BAC                     u3961:
  2534  000BAC  EFDC  F005         	goto	l3636
  2535  000BB0                     u3960:
  2536  000BB0                     
  2537                           ; BSR set to: 0
  2538                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2539  000BB0  0E00               	movlw	0
  2540  000BB2  6E5B               	movwf	(_prec+1)^0,c
  2541  000BB4  0E01               	movlw	1
  2542  000BB6  6E5A               	movwf	_prec^0,c
  2543  000BB8                     l3636:
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2547  000BB8  BE5B               	btfsc	(_prec+1)^0,7,c
  2548  000BBA  EFE9  F005         	goto	u3970
  2549  000BBE  505B               	movf	(_prec+1)^0,w,c
  2550  000BC0  E106               	bnz	u3971
  2551  000BC2  045A               	decf	_prec^0,w,c
  2552  000BC4  B0D8               	btfsc	status,0,c
  2553  000BC6  EFE7  F005         	goto	u3971
  2554  000BCA  EFE9  F005         	goto	u3970
  2555  000BCE                     u3971:
  2556  000BCE  EFEF  F005         	goto	l902
  2557  000BD2                     u3970:
  2558  000BD2                     l3638:
  2559                           
  2560                           ; BSR set to: 0
  2561  000BD2  0E00               	movlw	0
  2562  000BD4  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  2563  000BD6  0E06               	movlw	6
  2564  000BD8  6F76               	movwf	efgtoa@p& (0+255),b
  2565  000BDA  EFFE  F005         	goto	l3646
  2566  000BDE                     l902:
  2567                           
  2568                           ; BSR set to: 0
  2569  000BDE  C05A  F076         	movff	_prec,efgtoa@p
  2570  000BE2  C05B  F077         	movff	_prec+1,efgtoa@p+1
  2571  000BE6  EFFE  F005         	goto	l3646
  2572  000BEA                     l3640:
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2576  000BEA  BE5B               	btfsc	(_prec+1)^0,7,c
  2577  000BEC  EFFA  F005         	goto	u3981
  2578  000BF0  EFFC  F005         	goto	u3980
  2579  000BF4                     u3981:
  2580  000BF4  EFE9  F005         	goto	l3638
  2581  000BF8                     u3980:
  2582  000BF8  EFEF  F005         	goto	l902
  2583  000BFC                     l3646:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2587  000BFC  0E67               	movlw	103
  2588  000BFE  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2589  000C00  A4D8               	btfss	status,2,c
  2590  000C02  EF05  F006         	goto	u3991
  2591  000C06  EF07  F006         	goto	u3990
  2592  000C0A                     u3991:
  2593  000C0A  EF36  F006         	goto	l3656
  2594  000C0E                     u3990:
  2595  000C0E                     
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2598  000C0E  AF8B               	btfss	(efgtoa@e+1)& (0+255),7,b
  2599  000C10  EF15  F006         	goto	u4000
  2600  000C14  0EFC               	movlw	252
  2601  000C16  5D8A               	subwf	efgtoa@e& (0+255),w,b
  2602  000C18  0EFF               	movlw	255
  2603  000C1A  598B               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2604  000C1C  A0D8               	btfss	status,0,c
  2605  000C1E  EF13  F006         	goto	u4001
  2606  000C22  EF15  F006         	goto	u4000
  2607  000C26                     u4001:
  2608  000C26  EF34  F006         	goto	l3654
  2609  000C2A                     u4000:
  2610  000C2A                     
  2611                           ; BSR set to: 0
  2612  000C2A  0EFF               	movlw	255
  2613  000C2C  6E3B               	movwf	??_efgtoa^0,c
  2614  000C2E  0EFF               	movlw	255
  2615  000C30  6E3C               	movwf	(??_efgtoa+1)^0,c
  2616  000C32  C076  F03D         	movff	efgtoa@p,??_efgtoa+2
  2617  000C36  C077  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  2618  000C3A  503B               	movf	??_efgtoa^0,w,c
  2619  000C3C  263D               	addwf	(??_efgtoa+2)^0,f,c
  2620  000C3E  503C               	movf	(??_efgtoa+1)^0,w,c
  2621  000C40  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2622  000C42  518A               	movf	efgtoa@e& (0+255),w,b
  2623  000C44  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2624  000C46  503E               	movf	(??_efgtoa+3)^0,w,c
  2625  000C48  0A80               	xorlw	128
  2626  000C4A  6E3F               	movwf	(??_efgtoa+4)^0,c
  2627  000C4C  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  2628  000C4E  0A80               	xorlw	128
  2629  000C50  583F               	subwfb	(??_efgtoa+4)^0,w,c
  2630  000C52  A0D8               	btfss	status,0,c
  2631  000C54  EF2E  F006         	goto	u4011
  2632  000C58  EF30  F006         	goto	u4010
  2633  000C5C                     u4011:
  2634  000C5C  EF34  F006         	goto	l3654
  2635  000C60                     u4010:
  2636  000C60                     
  2637                           ; BSR set to: 0
  2638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2639  000C60  0E66               	movlw	102
  2640  000C62  6F7A               	movwf	efgtoa@nmode& (0+255),b
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2643  000C64  EF36  F006         	goto	l3656
  2644  000C68                     l3654:
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2648  000C68  0E65               	movlw	101
  2649  000C6A  6F7A               	movwf	efgtoa@nmode& (0+255),b
  2650  000C6C                     l3656:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2654  000C6C  C076  F06C         	movff	efgtoa@p,efgtoa@m
  2655  000C70  C077  F06D         	movff	efgtoa@p+1,efgtoa@m+1
  2656  000C74                     
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2659  000C74  0E67               	movlw	103
  2660  000C76  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2661  000C78  A4D8               	btfss	status,2,c
  2662  000C7A  EF41  F006         	goto	u4021
  2663  000C7E  EF43  F006         	goto	u4020
  2664  000C82                     u4021:
  2665  000C82  EF53  F006         	goto	l3664
  2666  000C86                     u4020:
  2667  000C86                     
  2668                           ; BSR set to: 0
  2669  000C86  0E66               	movlw	102
  2670  000C88  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2671  000C8A  A4D8               	btfss	status,2,c
  2672  000C8C  EF4A  F006         	goto	u4031
  2673  000C90  EF4C  F006         	goto	u4030
  2674  000C94                     u4031:
  2675  000C94  EF55  F006         	goto	l3666
  2676  000C98                     u4030:
  2677  000C98                     
  2678                           ; BSR set to: 0
  2679  000C98  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2680  000C9A  EF53  F006         	goto	u4040
  2681  000C9E  EF51  F006         	goto	u4041
  2682  000CA2                     u4041:
  2683  000CA2  EF55  F006         	goto	l3666
  2684  000CA6                     u4040:
  2685  000CA6                     l3664:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2689  000CA6  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  2690  000CA8  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  2691  000CAA                     l3666:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2695  000CAA  0E66               	movlw	102
  2696  000CAC  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  2697  000CAE  A4D8               	btfss	status,2,c
  2698  000CB0  EF5C  F006         	goto	u4051
  2699  000CB4  EF5E  F006         	goto	u4050
  2700  000CB8                     u4051:
  2701  000CB8  EF7E  F006         	goto	l3676
  2702  000CBC                     u4050:
  2703  000CBC                     
  2704                           ; BSR set to: 0
  2705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2706  000CBC  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2707  000CBE  EF65  F006         	goto	u4060
  2708  000CC2  EF63  F006         	goto	u4061
  2709  000CC6                     u4061:
  2710  000CC6  EF71  F006         	goto	l3672
  2711  000CCA                     u4060:
  2712  000CCA                     
  2713                           ; BSR set to: 0
  2714                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2715  000CCA  0E00               	movlw	0
  2716  000CCC  6F8E               	movwf	efgtoa@u& (0+255),b
  2717  000CCE  0E00               	movlw	0
  2718  000CD0  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2719  000CD2  0E80               	movlw	128
  2720  000CD4  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2721  000CD6  0E3F               	movlw	63
  2722  000CD8  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2725  000CDA  0E00               	movlw	0
  2726  000CDC  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2727  000CDE  0E00               	movlw	0
  2728  000CE0  6F8A               	movwf	efgtoa@e& (0+255),b
  2729  000CE2                     l3672:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2733  000CE2  0E67               	movlw	103
  2734  000CE4  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2735  000CE6  B4D8               	btfsc	status,2,c
  2736  000CE8  EF78  F006         	goto	u4071
  2737  000CEC  EF7A  F006         	goto	u4070
  2738  000CF0                     u4071:
  2739  000CF0  EF7E  F006         	goto	l3676
  2740  000CF4                     u4070:
  2741  000CF4                     
  2742                           ; BSR set to: 0
  2743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2744  000CF4  518A               	movf	efgtoa@e& (0+255),w,b
  2745  000CF6  276C               	addwf	efgtoa@m& (0+255),f,b
  2746  000CF8  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  2747  000CFA  236D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2748  000CFC                     l3676:
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2752  000CFC  0E00               	movlw	0
  2753  000CFE  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  2754  000D00  0E00               	movlw	0
  2755  000D02  6F84               	movwf	efgtoa@i& (0+255),b
  2756  000D04                     
  2757                           ; BSR set to: 0
  2758                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2759  000D04  C086  F07C         	movff	efgtoa@g,efgtoa@h
  2760  000D08  C087  F07D         	movff	efgtoa@g+1,efgtoa@h+1
  2761  000D0C  C088  F07E         	movff	efgtoa@g+2,efgtoa@h+2
  2762  000D10  C089  F07F         	movff	efgtoa@g+3,efgtoa@h+3
  2763  000D14                     
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  2766  000D14  C08E  F06E         	movff	efgtoa@u,efgtoa@ou
  2767  000D18  C08F  F06F         	movff	efgtoa@u+1,efgtoa@ou+1
  2768  000D1C  C090  F070         	movff	efgtoa@u+2,efgtoa@ou+2
  2769  000D20  C091  F071         	movff	efgtoa@u+3,efgtoa@ou+3
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2772  000D24  EF0F  F007         	goto	l3690
  2773  000D28                     l3682:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  2777  000D28  C07C  F001         	movff	efgtoa@h,___fldiv@b
  2778  000D2C  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2779  000D30  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2780  000D34  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2781  000D38  C08E  F005         	movff	efgtoa@u,___fldiv@a
  2782  000D3C  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2783  000D40  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2784  000D44  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2785  000D48  EC15  F011         	call	___fldiv	;wreg free
  2786  000D4C  C001  F01A         	movff	?___fldiv,floorf@x
  2787  000D50  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2788  000D54  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2789  000D58  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2790  000D5C  ECE2  F012         	call	_floorf	;wreg free
  2791  000D60  C01A  F080         	movff	?_floorf,efgtoa@l
  2792  000D64  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  2793  000D68  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  2794  000D6C  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  2797  000D70  C080  F001         	movff	efgtoa@l,___fltol@f1
  2798  000D74  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2799  000D78  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2800  000D7C  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2801  000D80  EC70  F015         	call	___fltol	;wreg free
  2802  000D84  C001  F072         	movff	?___fltol,efgtoa@d
  2803  000D88  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  2804  000D8C                     
  2805                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  2806  000D8C  C07C  F028         	movff	efgtoa@h,___flsub@b
  2807  000D90  C07D  F029         	movff	efgtoa@h+1,___flsub@b+1
  2808  000D94  C07E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2809  000D98  C07F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2810  000D9C  C08E  F013         	movff	efgtoa@u,___flmul@a
  2811  000DA0  C08F  F014         	movff	efgtoa@u+1,___flmul@a+1
  2812  000DA4  C090  F015         	movff	efgtoa@u+2,___flmul@a+2
  2813  000DA8  C091  F016         	movff	efgtoa@u+3,___flmul@a+3
  2814  000DAC  C080  F00F         	movff	efgtoa@l,___flmul@b
  2815  000DB0  C081  F010         	movff	efgtoa@l+1,___flmul@b+1
  2816  000DB4  C082  F011         	movff	efgtoa@l+2,___flmul@b+2
  2817  000DB8  C083  F012         	movff	efgtoa@l+3,___flmul@b+3
  2818  000DBC  EC00  F00F         	call	___flmul	;wreg free
  2819  000DC0  C00F  F02C         	movff	?___flmul,___flsub@a
  2820  000DC4  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2821  000DC8  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2822  000DCC  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2823  000DD0  EC5D  F01B         	call	___flsub	;wreg free
  2824  000DD4  C028  F07C         	movff	?___flsub,efgtoa@h
  2825  000DD8  C029  F07D         	movff	?___flsub+1,efgtoa@h+1
  2826  000DDC  C02A  F07E         	movff	?___flsub+2,efgtoa@h+2
  2827  000DE0  C02B  F07F         	movff	?___flsub+3,efgtoa@h+3
  2828  000DE4                     
  2829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  2830  000DE4  C08E  F001         	movff	efgtoa@u,___fldiv@b
  2831  000DE8  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2832  000DEC  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2833  000DF0  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2834  000DF4  0E00               	movlw	0
  2835  000DF6  6E05               	movwf	___fldiv@a^0,c
  2836  000DF8  0E00               	movlw	0
  2837  000DFA  6E06               	movwf	(___fldiv@a+1)^0,c
  2838  000DFC  0E20               	movlw	32
  2839  000DFE  6E07               	movwf	(___fldiv@a+2)^0,c
  2840  000E00  0E41               	movlw	65
  2841  000E02  6E08               	movwf	(___fldiv@a+3)^0,c
  2842  000E04  EC15  F011         	call	___fldiv	;wreg free
  2843  000E08  C001  F08E         	movff	?___fldiv,efgtoa@u
  2844  000E0C  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2845  000E10  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  2846  000E14  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  2847  000E18                     
  2848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  2849  000E18  0100               	movlb	0	; () banked
  2850  000E1A  4B84               	infsnz	efgtoa@i& (0+255),f,b
  2851  000E1C  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  2852  000E1E                     l3690:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2856  000E1E  516C               	movf	efgtoa@m& (0+255),w,b
  2857  000E20  5D84               	subwf	efgtoa@i& (0+255),w,b
  2858  000E22  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  2859  000E24  0A80               	xorlw	128
  2860  000E26  6E3B               	movwf	??_efgtoa^0,c
  2861  000E28  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  2862  000E2A  0A80               	xorlw	128
  2863  000E2C  583B               	subwfb	??_efgtoa^0,w,c
  2864  000E2E  A0D8               	btfss	status,0,c
  2865  000E30  EF1C  F007         	goto	u4081
  2866  000E34  EF1E  F007         	goto	u4080
  2867  000E38                     u4081:
  2868  000E38  EF94  F006         	goto	l3682
  2869  000E3C                     u4080:
  2870  000E3C                     
  2871                           ; BSR set to: 0
  2872                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  2873  000E3C  C08E  F00F         	movff	efgtoa@u,___flmul@b
  2874  000E40  C08F  F010         	movff	efgtoa@u+1,___flmul@b+1
  2875  000E44  C090  F011         	movff	efgtoa@u+2,___flmul@b+2
  2876  000E48  C091  F012         	movff	efgtoa@u+3,___flmul@b+3
  2877  000E4C  0E00               	movlw	0
  2878  000E4E  6E13               	movwf	___flmul@a^0,c
  2879  000E50  0E00               	movlw	0
  2880  000E52  6E14               	movwf	(___flmul@a+1)^0,c
  2881  000E54  0EA0               	movlw	160
  2882  000E56  6E15               	movwf	(___flmul@a+2)^0,c
  2883  000E58  0E40               	movlw	64
  2884  000E5A  6E16               	movwf	(___flmul@a+3)^0,c
  2885  000E5C  EC00  F00F         	call	___flmul	;wreg free
  2886  000E60  C00F  F080         	movff	?___flmul,efgtoa@l
  2887  000E64  C010  F081         	movff	?___flmul+1,efgtoa@l+1
  2888  000E68  C011  F082         	movff	?___flmul+2,efgtoa@l+2
  2889  000E6C  C012  F083         	movff	?___flmul+3,efgtoa@l+3
  2890  000E70                     
  2891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  2892  000E70  C07C  F028         	movff	efgtoa@h,___flge@ff1
  2893  000E74  C07D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2894  000E78  C07E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2895  000E7C  C07F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2896  000E80  C080  F02C         	movff	efgtoa@l,___flge@ff2
  2897  000E84  C081  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2898  000E88  C082  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2899  000E8C  C083  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2900  000E90  ECF3  F015         	call	___flge	;wreg free
  2901  000E94  B0D8               	btfsc	status,0,c
  2902  000E96  EF4F  F007         	goto	u4091
  2903  000E9A  EF51  F007         	goto	u4090
  2904  000E9E                     u4091:
  2905  000E9E  EF5C  F007         	goto	l3698
  2906  000EA2                     u4090:
  2907  000EA2                     
  2908                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  2909  000EA2  0E00               	movlw	0
  2910  000EA4  0100               	movlb	0	; () banked
  2911  000EA6  6F80               	movwf	efgtoa@l& (0+255),b
  2912  000EA8  0E00               	movlw	0
  2913  000EAA  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  2914  000EAC  0E00               	movlw	0
  2915  000EAE  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  2916  000EB0  0E00               	movlw	0
  2917  000EB2  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  2920  000EB4  EF85  F007         	goto	l3704
  2921  000EB8                     l3698:
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  2924  000EB8  C07C  F001         	movff	efgtoa@h,___fleq@ff1
  2925  000EBC  C07D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2926  000EC0  C07E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2927  000EC4  C07F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2928  000EC8  C080  F005         	movff	efgtoa@l,___fleq@ff2
  2929  000ECC  C081  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2930  000ED0  C082  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2931  000ED4  C083  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2932  000ED8  EC38  F019         	call	___fleq	;wreg free
  2933  000EDC  A0D8               	btfss	status,0,c
  2934  000EDE  EF73  F007         	goto	u4101
  2935  000EE2  EF75  F007         	goto	u4100
  2936  000EE6                     u4101:
  2937  000EE6  EF85  F007         	goto	l3704
  2938  000EEA                     u4100:
  2939  000EEA  0100               	movlb	0	; () banked
  2940  000EEC  B172               	btfsc	efgtoa@d& (0+255),0,b
  2941  000EEE  EF7B  F007         	goto	u4111
  2942  000EF2  EF7D  F007         	goto	u4110
  2943  000EF6                     u4111:
  2944  000EF6  EF85  F007         	goto	l3704
  2945  000EFA                     u4110:
  2946  000EFA                     
  2947                           ; BSR set to: 0
  2948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  2949  000EFA  0E00               	movlw	0
  2950  000EFC  6F80               	movwf	efgtoa@l& (0+255),b
  2951  000EFE  0E00               	movlw	0
  2952  000F00  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  2953  000F02  0E00               	movlw	0
  2954  000F04  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  2955  000F06  0E00               	movlw	0
  2956  000F08  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  2957  000F0A                     l3704:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  2960  000F0A  C086  F001         	movff	efgtoa@g,___fladd@b
  2961  000F0E  C087  F002         	movff	efgtoa@g+1,___fladd@b+1
  2962  000F12  C088  F003         	movff	efgtoa@g+2,___fladd@b+2
  2963  000F16  C089  F004         	movff	efgtoa@g+3,___fladd@b+3
  2964  000F1A  C080  F005         	movff	efgtoa@l,___fladd@a
  2965  000F1E  C081  F006         	movff	efgtoa@l+1,___fladd@a+1
  2966  000F22  C082  F007         	movff	efgtoa@l+2,___fladd@a+2
  2967  000F26  C083  F008         	movff	efgtoa@l+3,___fladd@a+3
  2968  000F2A  ECA0  F00C         	call	___fladd	;wreg free
  2969  000F2E  C001  F07C         	movff	?___fladd,efgtoa@h
  2970  000F32  C002  F07D         	movff	?___fladd+1,efgtoa@h+1
  2971  000F36  C003  F07E         	movff	?___fladd+2,efgtoa@h+2
  2972  000F3A  C004  F07F         	movff	?___fladd+3,efgtoa@h+3
  2973  000F3E                     
  2974                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  2975  000F3E  C07C  F028         	movff	efgtoa@h,___flge@ff1
  2976  000F42  C07D  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2977  000F46  C07E  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2978  000F4A  C07F  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2979  000F4E  0E00               	movlw	0
  2980  000F50  6E13               	movwf	___flmul@a^0,c
  2981  000F52  0E00               	movlw	0
  2982  000F54  6E14               	movwf	(___flmul@a+1)^0,c
  2983  000F56  0E20               	movlw	32
  2984  000F58  6E15               	movwf	(___flmul@a+2)^0,c
  2985  000F5A  0E41               	movlw	65
  2986  000F5C  6E16               	movwf	(___flmul@a+3)^0,c
  2987  000F5E  C06E  F00F         	movff	efgtoa@ou,___flmul@b
  2988  000F62  C06F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2989  000F66  C070  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2990  000F6A  C071  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2991  000F6E  EC00  F00F         	call	___flmul	;wreg free
  2992  000F72  C00F  F02C         	movff	?___flmul,___flge@ff2
  2993  000F76  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2994  000F7A  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2995  000F7E  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2996  000F82  ECF3  F015         	call	___flge	;wreg free
  2997  000F86  A0D8               	btfss	status,0,c
  2998  000F88  EFC8  F007         	goto	u4121
  2999  000F8C  EFCA  F007         	goto	u4120
  3000  000F90                     u4121:
  3001  000F90  EFF3  F007         	goto	l3716
  3002  000F94                     u4120:
  3003  000F94                     
  3004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3005  000F94  0100               	movlb	0	; () banked
  3006  000F96  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  3007  000F98  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3008  000F9A                     
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3011  000F9A  C06E  F00F         	movff	efgtoa@ou,___flmul@b
  3012  000F9E  C06F  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3013  000FA2  C070  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3014  000FA6  C071  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3015  000FAA  0E00               	movlw	0
  3016  000FAC  6E13               	movwf	___flmul@a^0,c
  3017  000FAE  0E00               	movlw	0
  3018  000FB0  6E14               	movwf	(___flmul@a+1)^0,c
  3019  000FB2  0E20               	movlw	32
  3020  000FB4  6E15               	movwf	(___flmul@a+2)^0,c
  3021  000FB6  0E41               	movlw	65
  3022  000FB8  6E16               	movwf	(___flmul@a+3)^0,c
  3023  000FBA  EC00  F00F         	call	___flmul	;wreg free
  3024  000FBE  C00F  F06E         	movff	?___flmul,efgtoa@ou
  3025  000FC2  C010  F06F         	movff	?___flmul+1,efgtoa@ou+1
  3026  000FC6  C011  F070         	movff	?___flmul+2,efgtoa@ou+2
  3027  000FCA  C012  F071         	movff	?___flmul+3,efgtoa@ou+3
  3028  000FCE                     
  3029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3030  000FCE  0E66               	movlw	102
  3031  000FD0  0100               	movlb	0	; () banked
  3032  000FD2  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3033  000FD4  A4D8               	btfss	status,2,c
  3034  000FD6  EFEF  F007         	goto	u4131
  3035  000FDA  EFF1  F007         	goto	u4130
  3036  000FDE                     u4131:
  3037  000FDE  EFF3  F007         	goto	l3716
  3038  000FE2                     u4130:
  3039  000FE2                     
  3040                           ; BSR set to: 0
  3041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3042  000FE2  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3043  000FE4  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3044  000FE6                     l3716:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3047  000FE6  C06E  F08E         	movff	efgtoa@ou,efgtoa@u
  3048  000FEA  C06F  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  3049  000FEE  C070  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  3050  000FF2  C071  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  3051  000FF6                     
  3052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3053  000FF6  0E65               	movlw	101
  3054  000FF8  0100               	movlb	0	; () banked
  3055  000FFA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3056  000FFC  B4D8               	btfsc	status,2,c
  3057  000FFE  EF03  F008         	goto	u4141
  3058  001002  EF05  F008         	goto	u4140
  3059  001006                     u4141:
  3060  001006  EF0B  F008         	goto	l3722
  3061  00100A                     u4140:
  3062  00100A                     
  3063                           ; BSR set to: 0
  3064  00100A  C08A  F06A         	movff	efgtoa@e,efgtoa@ne
  3065  00100E  C08B  F06B         	movff	efgtoa@e+1,efgtoa@ne+1
  3066  001012  EF0F  F008         	goto	l930
  3067  001016                     l3722:
  3068                           
  3069                           ; BSR set to: 0
  3070  001016  0E00               	movlw	0
  3071  001018  6F6B               	movwf	(efgtoa@ne+1)& (0+255),b
  3072  00101A  0E00               	movlw	0
  3073  00101C  6F6A               	movwf	efgtoa@ne& (0+255),b
  3074  00101E                     l930:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3078  00101E  0E00               	movlw	0
  3079  001020  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3080  001022  0E00               	movlw	0
  3081  001024  6F68               	movwf	efgtoa@pp& (0+255),b
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3084  001026  0E00               	movlw	0
  3085  001028  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  3086  00102A  0E00               	movlw	0
  3087  00102C  6F66               	movwf	efgtoa@t& (0+255),b
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3090  00102E  0E00               	movlw	0
  3091  001030  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3092  001032  0E00               	movlw	0
  3093  001034  6F84               	movwf	efgtoa@i& (0+255),b
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3096  001036  EF0B  F009         	goto	l3772
  3097  00103A                     l3724:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3101  00103A  C07C  F001         	movff	efgtoa@h,___fldiv@b
  3102  00103E  C07D  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3103  001042  C07E  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3104  001046  C07F  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3105  00104A  C08E  F005         	movff	efgtoa@u,___fldiv@a
  3106  00104E  C08F  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3107  001052  C090  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3108  001056  C091  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3109  00105A  EC15  F011         	call	___fldiv	;wreg free
  3110  00105E  C001  F01A         	movff	?___fldiv,floorf@x
  3111  001062  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3112  001066  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3113  00106A  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3114  00106E  ECE2  F012         	call	_floorf	;wreg free
  3115  001072  C01A  F080         	movff	?_floorf,efgtoa@l
  3116  001076  C01B  F081         	movff	?_floorf+1,efgtoa@l+1
  3117  00107A  C01C  F082         	movff	?_floorf+2,efgtoa@l+2
  3118  00107E  C01D  F083         	movff	?_floorf+3,efgtoa@l+3
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3121  001082  C080  F001         	movff	efgtoa@l,___fltol@f1
  3122  001086  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3123  00108A  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3124  00108E  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3125  001092  EC70  F015         	call	___fltol	;wreg free
  3126  001096  C001  F072         	movff	?___fltol,efgtoa@d
  3127  00109A  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3128  00109E                     
  3129                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3130  00109E  B85C               	btfsc	_flags^0,4,c
  3131  0010A0  EF54  F008         	goto	u4151
  3132  0010A4  EF56  F008         	goto	u4150
  3133  0010A8                     u4151:
  3134  0010A8  EF74  F008         	goto	l3736
  3135  0010AC                     u4150:
  3136  0010AC  0100               	movlb	0	; () banked
  3137  0010AE  5172               	movf	efgtoa@d& (0+255),w,b
  3138  0010B0  1173               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3139  0010B2  A4D8               	btfss	status,2,c
  3140  0010B4  EF5E  F008         	goto	u4161
  3141  0010B8  EF60  F008         	goto	u4160
  3142  0010BC                     u4161:
  3143  0010BC  EF74  F008         	goto	l3736
  3144  0010C0                     u4160:
  3145  0010C0                     
  3146                           ; BSR set to: 0
  3147  0010C0  0E67               	movlw	103
  3148  0010C2  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3149  0010C4  A4D8               	btfss	status,2,c
  3150  0010C6  EF67  F008         	goto	u4171
  3151  0010CA  EF69  F008         	goto	u4170
  3152  0010CE                     u4171:
  3153  0010CE  EF74  F008         	goto	l3736
  3154  0010D2                     u4170:
  3155  0010D2                     
  3156                           ; BSR set to: 0
  3157  0010D2  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3158  0010D4  EF70  F008         	goto	u4180
  3159  0010D8  EF6E  F008         	goto	u4181
  3160  0010DC                     u4181:
  3161  0010DC  EF74  F008         	goto	l3736
  3162  0010E0                     u4180:
  3163  0010E0                     
  3164                           ; BSR set to: 0
  3165                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3166  0010E0  4B66               	infsnz	efgtoa@t& (0+255),f,b
  3167  0010E2  2B67               	incf	(efgtoa@t+1)& (0+255),f,b
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3170  0010E4  EFBF  F008         	goto	l3764
  3171  0010E8                     l3736:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3174  0010E8  0100               	movlb	0	; () banked
  3175  0010EA  5168               	movf	efgtoa@pp& (0+255),w,b
  3176  0010EC  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3177  0010EE  A4D8               	btfss	status,2,c
  3178  0010F0  EF7C  F008         	goto	u4191
  3179  0010F4  EF7E  F008         	goto	u4190
  3180  0010F8                     u4191:
  3181  0010F8  EFA8  F008         	goto	l3756
  3182  0010FC                     u4190:
  3183  0010FC                     
  3184                           ; BSR set to: 0
  3185  0010FC  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3186  0010FE  EF85  F008         	goto	u4200
  3187  001102  EF83  F008         	goto	u4201
  3188  001106                     u4201:
  3189  001106  EFA8  F008         	goto	l3756
  3190  00110A                     u4200:
  3191  00110A                     
  3192                           ; BSR set to: 0
  3193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3194  00110A  0E00               	movlw	low _dbuf
  3195  00110C  258C               	addwf	efgtoa@n& (0+255),w,b
  3196  00110E  6ED9               	movwf	fsr2l,c
  3197  001110  0E01               	movlw	high _dbuf
  3198  001112  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3199  001114  6EDA               	movwf	fsr2h,c
  3200  001116  0E2E               	movlw	46
  3201  001118  6EDF               	movwf	indf2,c
  3202  00111A                     
  3203                           ; BSR set to: 0
  3204  00111A  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3205  00111C  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3206  00111E                     
  3207                           ; BSR set to: 0
  3208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3209  00111E  0778               	decf	efgtoa@w& (0+255),f,b
  3210  001120  A0D8               	btfss	status,0,c
  3211  001122  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3212  001124                     
  3213                           ; BSR set to: 0
  3214                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3215  001124  0E00               	movlw	0
  3216  001126  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3217  001128  0E01               	movlw	1
  3218  00112A  6F68               	movwf	efgtoa@pp& (0+255),b
  3219  00112C  EFA8  F008         	goto	l3756
  3220  001130                     l3748:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3224  001130  0E00               	movlw	low _dbuf
  3225  001132  258C               	addwf	efgtoa@n& (0+255),w,b
  3226  001134  6ED9               	movwf	fsr2l,c
  3227  001136  0E01               	movlw	high _dbuf
  3228  001138  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3229  00113A  6EDA               	movwf	fsr2h,c
  3230  00113C  0E30               	movlw	48
  3231  00113E  6EDF               	movwf	indf2,c
  3232  001140                     
  3233                           ; BSR set to: 0
  3234  001140  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3235  001142  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3236  001144                     
  3237                           ; BSR set to: 0
  3238                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3239  001144  0778               	decf	efgtoa@w& (0+255),f,b
  3240  001146  A0D8               	btfss	status,0,c
  3241  001148  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3242  00114A                     
  3243                           ; BSR set to: 0
  3244                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3245  00114A  0766               	decf	efgtoa@t& (0+255),f,b
  3246  00114C  A0D8               	btfss	status,0,c
  3247  00114E  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  3248  001150                     l3756:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3252  001150  5166               	movf	efgtoa@t& (0+255),w,b
  3253  001152  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3254  001154  A4D8               	btfss	status,2,c
  3255  001156  EFAF  F008         	goto	u4211
  3256  00115A  EFB1  F008         	goto	u4210
  3257  00115E                     u4211:
  3258  00115E  EF98  F008         	goto	l3748
  3259  001162                     u4210:
  3260  001162                     
  3261                           ; BSR set to: 0
  3262                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3263  001162  0E00               	movlw	low _dbuf
  3264  001164  258C               	addwf	efgtoa@n& (0+255),w,b
  3265  001166  6ED9               	movwf	fsr2l,c
  3266  001168  0E01               	movlw	high _dbuf
  3267  00116A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3268  00116C  6EDA               	movwf	fsr2h,c
  3269  00116E  5172               	movf	efgtoa@d& (0+255),w,b
  3270  001170  0F30               	addlw	48
  3271  001172  6EDF               	movwf	indf2,c
  3272  001174                     
  3273                           ; BSR set to: 0
  3274  001174  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3275  001176  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3276  001178                     
  3277                           ; BSR set to: 0
  3278                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3279  001178  0778               	decf	efgtoa@w& (0+255),f,b
  3280  00117A  A0D8               	btfss	status,0,c
  3281  00117C  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3282  00117E                     l3764:
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3286  00117E  C07C  F028         	movff	efgtoa@h,___flsub@b
  3287  001182  C07D  F029         	movff	efgtoa@h+1,___flsub@b+1
  3288  001186  C07E  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3289  00118A  C07F  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3290  00118E  C08E  F013         	movff	efgtoa@u,___flmul@a
  3291  001192  C08F  F014         	movff	efgtoa@u+1,___flmul@a+1
  3292  001196  C090  F015         	movff	efgtoa@u+2,___flmul@a+2
  3293  00119A  C091  F016         	movff	efgtoa@u+3,___flmul@a+3
  3294  00119E  C080  F00F         	movff	efgtoa@l,___flmul@b
  3295  0011A2  C081  F010         	movff	efgtoa@l+1,___flmul@b+1
  3296  0011A6  C082  F011         	movff	efgtoa@l+2,___flmul@b+2
  3297  0011AA  C083  F012         	movff	efgtoa@l+3,___flmul@b+3
  3298  0011AE  EC00  F00F         	call	___flmul	;wreg free
  3299  0011B2  C00F  F02C         	movff	?___flmul,___flsub@a
  3300  0011B6  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3301  0011BA  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3302  0011BE  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3303  0011C2  EC5D  F01B         	call	___flsub	;wreg free
  3304  0011C6  C028  F07C         	movff	?___flsub,efgtoa@h
  3305  0011CA  C029  F07D         	movff	?___flsub+1,efgtoa@h+1
  3306  0011CE  C02A  F07E         	movff	?___flsub+2,efgtoa@h+2
  3307  0011D2  C02B  F07F         	movff	?___flsub+3,efgtoa@h+3
  3308  0011D6                     
  3309                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3310  0011D6  C08E  F001         	movff	efgtoa@u,___fldiv@b
  3311  0011DA  C08F  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3312  0011DE  C090  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3313  0011E2  C091  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3314  0011E6  0E00               	movlw	0
  3315  0011E8  6E05               	movwf	___fldiv@a^0,c
  3316  0011EA  0E00               	movlw	0
  3317  0011EC  6E06               	movwf	(___fldiv@a+1)^0,c
  3318  0011EE  0E20               	movlw	32
  3319  0011F0  6E07               	movwf	(___fldiv@a+2)^0,c
  3320  0011F2  0E41               	movlw	65
  3321  0011F4  6E08               	movwf	(___fldiv@a+3)^0,c
  3322  0011F6  EC15  F011         	call	___fldiv	;wreg free
  3323  0011FA  C001  F08E         	movff	?___fldiv,efgtoa@u
  3324  0011FE  C002  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3325  001202  C003  F090         	movff	?___fldiv+2,efgtoa@u+2
  3326  001206  C004  F091         	movff	?___fldiv+3,efgtoa@u+3
  3327  00120A                     
  3328                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3329  00120A  0100               	movlb	0	; () banked
  3330  00120C  076A               	decf	efgtoa@ne& (0+255),f,b
  3331  00120E  A0D8               	btfss	status,0,c
  3332  001210  076B               	decf	(efgtoa@ne+1)& (0+255),f,b
  3333  001212                     
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3336  001212  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3337  001214  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3338  001216                     l3772:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3342  001216  516C               	movf	efgtoa@m& (0+255),w,b
  3343  001218  5D84               	subwf	efgtoa@i& (0+255),w,b
  3344  00121A  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3345  00121C  0A80               	xorlw	128
  3346  00121E  6E3B               	movwf	??_efgtoa^0,c
  3347  001220  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3348  001222  0A80               	xorlw	128
  3349  001224  583B               	subwfb	??_efgtoa^0,w,c
  3350  001226  B0D8               	btfsc	status,0,c
  3351  001228  EF18  F009         	goto	u4221
  3352  00122C  EF1A  F009         	goto	u4220
  3353  001230                     u4221:
  3354  001230  EF28  F009         	goto	l3776
  3355  001234                     u4220:
  3356  001234                     
  3357                           ; BSR set to: 0
  3358  001234  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3359  001236  EF26  F009         	goto	u4231
  3360  00123A  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  3361  00123C  E109               	bnz	u4230
  3362  00123E  0E4B               	movlw	75
  3363  001240  5D8C               	subwf	efgtoa@n& (0+255),w,b
  3364  001242  A0D8               	btfss	status,0,c
  3365  001244  EF26  F009         	goto	u4231
  3366  001248  EF28  F009         	goto	u4230
  3367  00124C                     u4231:
  3368  00124C  EF1D  F008         	goto	l3724
  3369  001250                     u4230:
  3370  001250                     l3776:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3374  001250  5168               	movf	efgtoa@pp& (0+255),w,b
  3375  001252  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3376  001254  A4D8               	btfss	status,2,c
  3377  001256  EF2F  F009         	goto	u4241
  3378  00125A  EF31  F009         	goto	u4240
  3379  00125E                     u4241:
  3380  00125E  EF42  F009         	goto	l3784
  3381  001262                     u4240:
  3382  001262                     
  3383                           ; BSR set to: 0
  3384  001262  A85C               	btfss	_flags^0,4,c
  3385  001264  EF36  F009         	goto	u4251
  3386  001268  EF38  F009         	goto	u4250
  3387  00126C                     u4251:
  3388  00126C  EF42  F009         	goto	l3784
  3389  001270                     u4250:
  3390  001270                     
  3391                           ; BSR set to: 0
  3392                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3393  001270  0E00               	movlw	low _dbuf
  3394  001272  258C               	addwf	efgtoa@n& (0+255),w,b
  3395  001274  6ED9               	movwf	fsr2l,c
  3396  001276  0E01               	movlw	high _dbuf
  3397  001278  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3398  00127A  6EDA               	movwf	fsr2h,c
  3399  00127C  0E2E               	movlw	46
  3400  00127E  6EDF               	movwf	indf2,c
  3401  001280                     
  3402                           ; BSR set to: 0
  3403  001280  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3404  001282  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3405  001284                     l3784:
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3409  001284  0E00               	movlw	low _dbuf
  3410  001286  258C               	addwf	efgtoa@n& (0+255),w,b
  3411  001288  6ED9               	movwf	fsr2l,c
  3412  00128A  0E01               	movlw	high _dbuf
  3413  00128C  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3414  00128E  6EDA               	movwf	fsr2h,c
  3415  001290  0E00               	movlw	0
  3416  001292  6EDF               	movwf	indf2,c
  3417  001294                     
  3418                           ; BSR set to: 0
  3419                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3420  001294  0E65               	movlw	101
  3421  001296  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3422  001298  A4D8               	btfss	status,2,c
  3423  00129A  EF51  F009         	goto	u4261
  3424  00129E  EF53  F009         	goto	u4260
  3425  0012A2                     u4261:
  3426  0012A2  EFB8  F004         	goto	l3586
  3427  0012A6                     u4260:
  3428  0012A6                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3431  0012A6  0E00               	movlw	0
  3432  0012A8  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3433  0012AA  0E4F               	movlw	79
  3434  0012AC  6F84               	movwf	efgtoa@i& (0+255),b
  3435  0012AE                     
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3438  0012AE  0E00               	movlw	low _dbuf
  3439  0012B0  2584               	addwf	efgtoa@i& (0+255),w,b
  3440  0012B2  6ED9               	movwf	fsr2l,c
  3441  0012B4  0E01               	movlw	high _dbuf
  3442  0012B6  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3443  0012B8  6EDA               	movwf	fsr2h,c
  3444  0012BA  0E00               	movlw	0
  3445  0012BC  6EDF               	movwf	indf2,c
  3446  0012BE                     
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3449  0012BE  0E00               	movlw	0
  3450  0012C0  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3451  0012C2  0E00               	movlw	0
  3452  0012C4  6F74               	movwf	efgtoa@sign& (0+255),b
  3453  0012C6                     
  3454                           ; BSR set to: 0
  3455                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3456  0012C6  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3457  0012C8  EF6A  F009         	goto	u4270
  3458  0012CC  EF68  F009         	goto	u4271
  3459  0012D0                     u4271:
  3460  0012D0  EF72  F009         	goto	l3800
  3461  0012D4                     u4270:
  3462  0012D4                     
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3465  0012D4  0E00               	movlw	0
  3466  0012D6  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3467  0012D8  0E01               	movlw	1
  3468  0012DA  6F74               	movwf	efgtoa@sign& (0+255),b
  3469  0012DC                     
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3472  0012DC  6D8A               	negf	efgtoa@e& (0+255),b
  3473  0012DE  1F8B               	comf	(efgtoa@e+1)& (0+255),f,b
  3474  0012E0  B0D8               	btfsc	status,0,c
  3475  0012E2  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3476  0012E4                     l3800:
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3480  0012E4  0E00               	movlw	0
  3481  0012E6  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  3482  0012E8  0E02               	movlw	2
  3483  0012EA  6F76               	movwf	efgtoa@p& (0+255),b
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3486  0012EC  EFA3  F009         	goto	l3812
  3487  0012F0                     l3802:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3491  0012F0  0784               	decf	efgtoa@i& (0+255),f,b
  3492  0012F2  A0D8               	btfss	status,0,c
  3493  0012F4  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3494  0012F6                     
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3497  0012F6  0E00               	movlw	low _dbuf
  3498  0012F8  2584               	addwf	efgtoa@i& (0+255),w,b
  3499  0012FA  6ED9               	movwf	fsr2l,c
  3500  0012FC  0E01               	movlw	high _dbuf
  3501  0012FE  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3502  001300  6EDA               	movwf	fsr2h,c
  3503  001302  C08A  F001         	movff	efgtoa@e,___awmod@dividend
  3504  001306  C08B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3505  00130A  0E00               	movlw	0
  3506  00130C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3507  00130E  0E0A               	movlw	10
  3508  001310  6E03               	movwf	___awmod@divisor^0,c
  3509  001312  ECE0  F018         	call	___awmod	;wreg free
  3510  001316  5001               	movf	?___awmod^0,w,c
  3511  001318  0F30               	addlw	48
  3512  00131A  6EDF               	movwf	indf2,c
  3513  00131C                     
  3514                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3515  00131C  C08A  F001         	movff	efgtoa@e,___awdiv@dividend
  3516  001320  C08B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3517  001324  0E00               	movlw	0
  3518  001326  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3519  001328  0E0A               	movlw	10
  3520  00132A  6E03               	movwf	___awdiv@divisor^0,c
  3521  00132C  ECC4  F017         	call	___awdiv	;wreg free
  3522  001330  C001  F08A         	movff	?___awdiv,efgtoa@e
  3523  001334  C002  F08B         	movff	?___awdiv+1,efgtoa@e+1
  3524  001338                     
  3525                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3526  001338  0100               	movlb	0	; () banked
  3527  00133A  0776               	decf	efgtoa@p& (0+255),f,b
  3528  00133C  A0D8               	btfss	status,0,c
  3529  00133E  0777               	decf	(efgtoa@p+1)& (0+255),f,b
  3530  001340                     
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3533  001340  0778               	decf	efgtoa@w& (0+255),f,b
  3534  001342  A0D8               	btfss	status,0,c
  3535  001344  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3536  001346                     l3812:
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3540  001346  518A               	movf	efgtoa@e& (0+255),w,b
  3541  001348  118B               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3542  00134A  A4D8               	btfss	status,2,c
  3543  00134C  EFAA  F009         	goto	u4281
  3544  001350  EFAC  F009         	goto	u4280
  3545  001354                     u4281:
  3546  001354  EF78  F009         	goto	l3802
  3547  001358                     u4280:
  3548  001358                     
  3549                           ; BSR set to: 0
  3550  001358  BF77               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3551  00135A  EFB9  F009         	goto	u4290
  3552  00135E  5177               	movf	(efgtoa@p+1)& (0+255),w,b
  3553  001360  E106               	bnz	u4291
  3554  001362  0576               	decf	efgtoa@p& (0+255),w,b
  3555  001364  B0D8               	btfsc	status,0,c
  3556  001366  EFB7  F009         	goto	u4291
  3557  00136A  EFB9  F009         	goto	u4290
  3558  00136E                     u4291:
  3559  00136E  EF78  F009         	goto	l3802
  3560  001372                     u4290:
  3561  001372                     
  3562                           ; BSR set to: 0
  3563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  3564  001372  0784               	decf	efgtoa@i& (0+255),f,b
  3565  001374  A0D8               	btfss	status,0,c
  3566  001376  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3567  001378                     
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3570  001378  5174               	movf	efgtoa@sign& (0+255),w,b
  3571  00137A  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3572  00137C  A4D8               	btfss	status,2,c
  3573  00137E  EFC3  F009         	goto	u4301
  3574  001382  EFC5  F009         	goto	u4300
  3575  001386                     u4301:
  3576  001386  EFCB  F009         	goto	l3822
  3577  00138A                     u4300:
  3578  00138A                     
  3579                           ; BSR set to: 0
  3580  00138A  0E00               	movlw	0
  3581  00138C  6F63               	movwf	(_efgtoa$864+1)& (0+255),b
  3582  00138E  0E2B               	movlw	43
  3583  001390  6F62               	movwf	_efgtoa$864& (0+255),b
  3584  001392  EFCF  F009         	goto	l3824
  3585  001396                     l3822:
  3586                           
  3587                           ; BSR set to: 0
  3588  001396  0E00               	movlw	0
  3589  001398  6F63               	movwf	(_efgtoa$864+1)& (0+255),b
  3590  00139A  0E2D               	movlw	45
  3591  00139C  6F62               	movwf	_efgtoa$864& (0+255),b
  3592  00139E                     l3824:
  3593                           
  3594                           ; BSR set to: 0
  3595  00139E  0E00               	movlw	low _dbuf
  3596  0013A0  2584               	addwf	efgtoa@i& (0+255),w,b
  3597  0013A2  6ED9               	movwf	fsr2l,c
  3598  0013A4  0E01               	movlw	high _dbuf
  3599  0013A6  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3600  0013A8  6EDA               	movwf	fsr2h,c
  3601  0013AA  C062  FFDF         	movff	_efgtoa$864,indf2
  3602  0013AE                     
  3603                           ; BSR set to: 0
  3604                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  3605  0013AE  0778               	decf	efgtoa@w& (0+255),f,b
  3606  0013B0  A0D8               	btfss	status,0,c
  3607  0013B2  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3608  0013B4                     
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  3611  0013B4  0784               	decf	efgtoa@i& (0+255),f,b
  3612  0013B6  A0D8               	btfss	status,0,c
  3613  0013B8  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3614  0013BA                     
  3615                           ; BSR set to: 0
  3616  0013BA  0EBF               	movlw	191
  3617  0013BC  6E3B               	movwf	??_efgtoa^0,c
  3618  0013BE  0EFF               	movlw	255
  3619  0013C0  6E3C               	movwf	(??_efgtoa+1)^0,c
  3620  0013C2  503A               	movf	efgtoa@c^0,w,c
  3621  0013C4  6E3D               	movwf	(??_efgtoa+2)^0,c
  3622  0013C6  6A3E               	clrf	(??_efgtoa+3)^0,c
  3623  0013C8  503B               	movf	??_efgtoa^0,w,c
  3624  0013CA  263D               	addwf	(??_efgtoa+2)^0,f,c
  3625  0013CC  503C               	movf	(??_efgtoa+1)^0,w,c
  3626  0013CE  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3627  0013D0  503E               	movf	(??_efgtoa+3)^0,w,c
  3628  0013D2  E109               	bnz	u4310
  3629  0013D4  0E1A               	movlw	26
  3630  0013D6  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3631  0013D8  A0D8               	btfss	status,0,c
  3632  0013DA  EFF1  F009         	goto	u4311
  3633  0013DE  EFF3  F009         	goto	u4310
  3634  0013E2                     u4311:
  3635  0013E2  EFF9  F009         	goto	l3836
  3636  0013E6                     u4310:
  3637  0013E6                     
  3638                           ; BSR set to: 0
  3639  0013E6  0E00               	movlw	0
  3640  0013E8  6F65               	movwf	(_efgtoa$865+1)& (0+255),b
  3641  0013EA  0E65               	movlw	101
  3642  0013EC  6F64               	movwf	_efgtoa$865& (0+255),b
  3643  0013EE  EFFD  F009         	goto	l3838
  3644  0013F2                     l3836:
  3645                           
  3646                           ; BSR set to: 0
  3647  0013F2  0E00               	movlw	0
  3648  0013F4  6F65               	movwf	(_efgtoa$865+1)& (0+255),b
  3649  0013F6  0E45               	movlw	69
  3650  0013F8  6F64               	movwf	_efgtoa$865& (0+255),b
  3651  0013FA                     l3838:
  3652                           
  3653                           ; BSR set to: 0
  3654  0013FA  0E00               	movlw	low _dbuf
  3655  0013FC  2584               	addwf	efgtoa@i& (0+255),w,b
  3656  0013FE  6ED9               	movwf	fsr2l,c
  3657  001400  0E01               	movlw	high _dbuf
  3658  001402  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3659  001404  6EDA               	movwf	fsr2h,c
  3660  001406  C064  FFDF         	movff	_efgtoa$865,indf2
  3661  00140A                     
  3662                           ; BSR set to: 0
  3663                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  3664  00140A  0778               	decf	efgtoa@w& (0+255),f,b
  3665  00140C  A0D8               	btfss	status,0,c
  3666  00140E  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3667  001410                     
  3668                           ; BSR set to: 0
  3669                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3670  001410  0E00               	movlw	low _dbuf
  3671  001412  258C               	addwf	efgtoa@n& (0+255),w,b
  3672  001414  6E01               	movwf	strcpy@dest^0,c
  3673  001416  0E01               	movlw	high _dbuf
  3674  001418  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3675  00141A  6E02               	movwf	(strcpy@dest+1)^0,c
  3676  00141C  0E00               	movlw	low _dbuf
  3677  00141E  2584               	addwf	efgtoa@i& (0+255),w,b
  3678  001420  6E03               	movwf	strcpy@src^0,c
  3679  001422  0E01               	movlw	high _dbuf
  3680  001424  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3681  001426  6E04               	movwf	(strcpy@src+1)^0,c
  3682  001428  EC6D  F01A         	call	_strcpy	;wreg free
  3683  00142C  EFB8  F004         	goto	l3586
  3684  001430                     l886:
  3685  001430  0012               	return		;funcret
  3686  001432                     __end_of_efgtoa:
  3687                           	callstack 0
  3688                           
  3689 ;; *************** function _tolower *****************
  3690 ;; Defined at:
  3691 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  c               2    6[COMRAM] int 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  2    6[COMRAM] int 
  3698 ;; Registers used:
  3699 ;;		wreg, status,2, status,0
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3705 ;;      Params:         2       0       0       0       0       0       0       0       0
  3706 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3707 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3708 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3709 ;;Total ram usage:        6 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 1
  3712 ;; This function calls:
  3713 ;;		_isupper
  3714 ;; This function is called by:
  3715 ;;		_efgtoa
  3716 ;;		_vfpfcnvrt
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text6
  3721  003674                     __ptext6:
  3722                           	callstack 0
  3723  003674                     _tolower:
  3724                           	callstack 26
  3725  003674  0EBF               	movlw	191
  3726  003676  6E09               	movwf	??_tolower^0,c
  3727  003678  0EFF               	movlw	255
  3728  00367A  6E0A               	movwf	(??_tolower+1)^0,c
  3729  00367C  C007  F00B         	movff	tolower@c,??_tolower+2
  3730  003680  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3731  003684  5009               	movf	??_tolower^0,w,c
  3732  003686  260B               	addwf	(??_tolower+2)^0,f,c
  3733  003688  500A               	movf	(??_tolower+1)^0,w,c
  3734  00368A  220C               	addwfc	(??_tolower+3)^0,f,c
  3735  00368C  500C               	movf	(??_tolower+3)^0,w,c
  3736  00368E  E107               	bnz	u3691
  3737  003690  0E1A               	movlw	26
  3738  003692  5C0B               	subwf	(??_tolower+2)^0,w,c
  3739  003694  B0D8               	btfsc	status,0,c
  3740  003696  EF4F  F01B         	goto	u3691
  3741  00369A  EF51  F01B         	goto	u3690
  3742  00369E                     u3691:
  3743  00369E  EF58  F01B         	goto	l1110
  3744  0036A2                     u3690:
  3745  0036A2  0E20               	movlw	32
  3746  0036A4  1007               	iorwf	tolower@c^0,w,c
  3747  0036A6  6E07               	movwf	?_tolower^0,c
  3748  0036A8  5008               	movf	(tolower@c+1)^0,w,c
  3749  0036AA  6E08               	movwf	(?_tolower+1)^0,c
  3750  0036AC  EF5C  F01B         	goto	l1113
  3751  0036B0                     l1110:
  3752  0036B0  C007  F007         	movff	tolower@c,?_tolower
  3753  0036B4  C008  F008         	movff	tolower@c+1,?_tolower+1
  3754  0036B8                     l1113:
  3755  0036B8  0012               	return		;funcret
  3756  0036BA                     __end_of_tolower:
  3757                           	callstack 0
  3758                           
  3759 ;; *************** function _isupper *****************
  3760 ;; Defined at:
  3761 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  c               2    0[COMRAM] int 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  2    0[COMRAM] int 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3775 ;;      Params:         2       0       0       0       0       0       0       0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3777 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3778 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3779 ;;Total ram usage:        6 bytes
  3780 ;; Hardware stack levels used: 1
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_efgtoa
  3785 ;;		_vfpfcnvrt
  3786 ;;		_tolower
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text7
  3791  0037C0                     __ptext7:
  3792                           	callstack 0
  3793  0037C0                     _isupper:
  3794                           	callstack 26
  3795  0037C0  0EBF               	movlw	191
  3796  0037C2  6E03               	movwf	??_isupper^0,c
  3797  0037C4  0EFF               	movlw	255
  3798  0037C6  6E04               	movwf	(??_isupper+1)^0,c
  3799  0037C8  C001  F005         	movff	isupper@c,??_isupper+2
  3800  0037CC  C002  F006         	movff	isupper@c+1,??_isupper+3
  3801  0037D0  5003               	movf	??_isupper^0,w,c
  3802  0037D2  2605               	addwf	(??_isupper+2)^0,f,c
  3803  0037D4  5004               	movf	(??_isupper+1)^0,w,c
  3804  0037D6  2206               	addwfc	(??_isupper+3)^0,f,c
  3805  0037D8  5006               	movf	(??_isupper+3)^0,w,c
  3806  0037DA  E10A               	bnz	u2800
  3807  0037DC  0E1A               	movlw	26
  3808  0037DE  5C05               	subwf	(??_isupper+2)^0,w,c
  3809  0037E0  A0D8               	btfss	status,0,c
  3810  0037E2  EFF5  F01B         	goto	u2801
  3811  0037E6  EFF8  F01B         	goto	u2800
  3812  0037EA                     u2801:
  3813  0037EA  0E01               	movlw	1
  3814  0037EC  EFF9  F01B         	goto	u2810
  3815  0037F0                     u2800:
  3816  0037F0  0E00               	movlw	0
  3817  0037F2                     u2810:
  3818  0037F2  6E01               	movwf	?_isupper^0,c
  3819  0037F4  6A02               	clrf	(?_isupper+1)^0,c
  3820  0037F6  0012               	return		;funcret
  3821  0037F8                     __end_of_isupper:
  3822                           	callstack 0
  3823                           
  3824 ;; *************** function _strcpy *****************
  3825 ;; Defined at:
  3826 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3829 ;;		 -> dbuf(80), 
  3830 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3831 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3832 ;;		 -> dbuf(80), 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  d               2    8[COMRAM] PTR unsigned char 
  3835 ;;		 -> dbuf(80), 
  3836 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3837 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3838 ;;		 -> dbuf(80), 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  2    0[COMRAM] PTR unsigned char 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3848 ;;      Params:         4       0       0       0       0       0       0       0       0
  3849 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3850 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3851 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3852 ;;Total ram usage:       10 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; This function calls:
  3855 ;;		Nothing
  3856 ;; This function is called by:
  3857 ;;		_efgtoa
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text8
  3862  0034DA                     __ptext8:
  3863                           	callstack 0
  3864  0034DA                     _strcpy:
  3865                           	callstack 26
  3866  0034DA  C003  F007         	movff	strcpy@src,strcpy@s
  3867  0034DE  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3868  0034E2  C001  F009         	movff	strcpy@dest,strcpy@d
  3869  0034E6  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3870  0034EA                     l3470:
  3871  0034EA  5007               	movf	strcpy@s^0,w,c
  3872  0034EC  6E05               	movwf	??_strcpy^0,c
  3873  0034EE  5008               	movf	(strcpy@s+1)^0,w,c
  3874  0034F0  6E06               	movwf	(??_strcpy+1)^0,c
  3875  0034F2  4A07               	infsnz	strcpy@s^0,f,c
  3876  0034F4  2A08               	incf	(strcpy@s+1)^0,f,c
  3877  0034F6  C005  FFF6         	movff	??_strcpy,tblptrl
  3878  0034FA  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3879  0034FE  6AF8               	clrf	tblptru,c
  3880  003500  C009  FFD9         	movff	strcpy@d,fsr2l
  3881  003504  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3882  003508  4A09               	infsnz	strcpy@d^0,f,c
  3883  00350A  2A0A               	incf	(strcpy@d+1)^0,f,c
  3884  00350C  0E07               	movlw	(high __ramtop+-1)
  3885  00350E  64F7               	cpfsgt	tblptrh,c
  3886  003510  D003               	bra	u3677
  3887  003512  0008               	tblrd		*
  3888  003514  50F5               	movf	tablat,w,c
  3889  003516  D005               	bra	u3670
  3890  003518                     u3677:
  3891  003518  CFF6 FFE1          	movff	tblptrl,fsr1l
  3892  00351C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3893  003520  50E7               	movf	indf1,w,c
  3894  003522                     u3670:
  3895  003522  6EDF               	movwf	indf2,c
  3896  003524  50DF               	movf	indf2,w,c
  3897  003526  A4D8               	btfss	status,2,c
  3898  003528  EF98  F01A         	goto	u3681
  3899  00352C  EF9A  F01A         	goto	u3680
  3900  003530                     u3681:
  3901  003530  EF75  F01A         	goto	l3470
  3902  003534                     u3680:
  3903  003534  0012               	return		;funcret
  3904  003536                     __end_of_strcpy:
  3905                           	callstack 0
  3906                           
  3907 ;; *************** function _pad *****************
  3908 ;; Defined at:
  3909 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3912 ;;		 -> sprintf@f(11), 
  3913 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3914 ;;		 -> dbuf(80), 
  3915 ;;  p               2   20[COMRAM] int 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  w               2   25[COMRAM] int 
  3918 ;;  i               2   23[COMRAM] int 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  2   16[COMRAM] int 
  3921 ;; Registers used:
  3922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3928 ;;      Params:         6       0       0       0       0       0       0       0       0
  3929 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3930 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3931 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3932 ;;Total ram usage:       11 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 3
  3935 ;; This function calls:
  3936 ;;		_fputc
  3937 ;;		_fputs
  3938 ;;		_strlen
  3939 ;; This function is called by:
  3940 ;;		_efgtoa
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           	psect	text9
  3945  00304C                     __ptext9:
  3946                           	callstack 0
  3947  00304C                     _pad:
  3948                           	callstack 23
  3949  00304C                     
  3950                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3951  00304C  A05C               	btfss	_flags^0,0,c
  3952  00304E  EF2B  F018         	goto	u3561
  3953  003052  EF2D  F018         	goto	u3560
  3954  003056                     u3561:
  3955  003056  EF37  F018         	goto	l3428
  3956  00305A                     u3560:
  3957  00305A                     
  3958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3959  00305A  C013  F00A         	movff	pad@buf,fputs@s
  3960  00305E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3961  003062  C011  F00C         	movff	pad@fp,fputs@fp
  3962  003066  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3963  00306A  EC80  F01B         	call	_fputs	;wreg free
  3964  00306E                     l3428:
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3967  00306E  BE16               	btfsc	(pad@p+1)^0,7,c
  3968  003070  EF3C  F018         	goto	u3571
  3969  003074  EF3E  F018         	goto	u3570
  3970  003078                     u3571:
  3971  003078  EF44  F018         	goto	l3432
  3972  00307C                     u3570:
  3973  00307C  C015  F01A         	movff	pad@p,pad@w
  3974  003080  C016  F01B         	movff	pad@p+1,pad@w+1
  3975  003084  EF48  F018         	goto	l865
  3976  003088                     l3432:
  3977  003088  0E00               	movlw	0
  3978  00308A  6E1B               	movwf	(pad@w+1)^0,c
  3979  00308C  0E00               	movlw	0
  3980  00308E  6E1A               	movwf	pad@w^0,c
  3981  003090                     l865:
  3982                           
  3983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3984  003090  0E00               	movlw	0
  3985  003092  6E19               	movwf	(pad@i+1)^0,c
  3986  003094  0E00               	movlw	0
  3987  003096  6E18               	movwf	pad@i^0,c
  3988                           
  3989                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3990  003098  EF5A  F018         	goto	l3438
  3991  00309C                     l3434:
  3992                           
  3993                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3994  00309C  0E00               	movlw	0
  3995  00309E  6E02               	movwf	(fputc@c+1)^0,c
  3996  0030A0  0E20               	movlw	32
  3997  0030A2  6E01               	movwf	fputc@c^0,c
  3998  0030A4  C011  F003         	movff	pad@fp,fputc@fp
  3999  0030A8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4000  0030AC  EC5F  F017         	call	_fputc	;wreg free
  4001  0030B0                     
  4002                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4003  0030B0  4A18               	infsnz	pad@i^0,f,c
  4004  0030B2  2A19               	incf	(pad@i+1)^0,f,c
  4005  0030B4                     l3438:
  4006                           
  4007                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4008  0030B4  501A               	movf	pad@w^0,w,c
  4009  0030B6  5C18               	subwf	pad@i^0,w,c
  4010  0030B8  5019               	movf	(pad@i+1)^0,w,c
  4011  0030BA  0A80               	xorlw	128
  4012  0030BC  6E17               	movwf	??_pad^0,c
  4013  0030BE  501B               	movf	(pad@w+1)^0,w,c
  4014  0030C0  0A80               	xorlw	128
  4015  0030C2  5817               	subwfb	??_pad^0,w,c
  4016  0030C4  A0D8               	btfss	status,0,c
  4017  0030C6  EF67  F018         	goto	u3581
  4018  0030CA  EF69  F018         	goto	u3580
  4019  0030CE                     u3581:
  4020  0030CE  EF4E  F018         	goto	l3434
  4021  0030D2                     u3580:
  4022  0030D2                     
  4023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4024  0030D2  B05C               	btfsc	_flags^0,0,c
  4025  0030D4  EF6E  F018         	goto	u3591
  4026  0030D8  EF70  F018         	goto	u3590
  4027  0030DC                     u3591:
  4028  0030DC  EF7A  F018         	goto	l3442
  4029  0030E0                     u3590:
  4030  0030E0                     
  4031                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4032  0030E0  C013  F00A         	movff	pad@buf,fputs@s
  4033  0030E4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4034  0030E8  C011  F00C         	movff	pad@fp,fputs@fp
  4035  0030EC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4036  0030F0  EC80  F01B         	call	_fputs	;wreg free
  4037  0030F4                     l3442:
  4038                           
  4039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4040  0030F4  C013  F001         	movff	pad@buf,strlen@s
  4041  0030F8  C014  F002         	movff	pad@buf+1,strlen@s+1
  4042  0030FC  EC34  F01C         	call	_strlen	;wreg free
  4043  003100  501A               	movf	pad@w^0,w,c
  4044  003102  2401               	addwf	?_strlen^0,w,c
  4045  003104  6E11               	movwf	?_pad^0,c
  4046  003106  501B               	movf	(pad@w+1)^0,w,c
  4047  003108  2002               	addwfc	(?_strlen+1)^0,w,c
  4048  00310A  6E12               	movwf	(?_pad+1)^0,c
  4049  00310C  0012               	return		;funcret
  4050  00310E                     __end_of_pad:
  4051                           	callstack 0
  4052                           
  4053 ;; *************** function _strlen *****************
  4054 ;; Defined at:
  4055 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4058 ;;		 -> dbuf(80), 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4061 ;;		 -> dbuf(80), 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  2    0[COMRAM] unsigned int 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4071 ;;      Params:         2       0       0       0       0       0       0       0       0
  4072 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4074 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4075 ;;Total ram usage:        4 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_pad
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text10
  4085  003868                     __ptext10:
  4086                           	callstack 0
  4087  003868                     _strlen:
  4088                           	callstack 25
  4089  003868  C001  F003         	movff	strlen@s,strlen@a
  4090  00386C  C002  F004         	movff	strlen@s+1,strlen@a+1
  4091  003870  EF3C  F01C         	goto	l2938
  4092  003874                     l2936:
  4093  003874  4A01               	infsnz	strlen@s^0,f,c
  4094  003876  2A02               	incf	(strlen@s+1)^0,f,c
  4095  003878                     l2938:
  4096  003878  C001  FFD9         	movff	strlen@s,fsr2l
  4097  00387C  C002  FFDA         	movff	strlen@s+1,fsr2h
  4098  003880  50DF               	movf	indf2,w,c
  4099  003882  A4D8               	btfss	status,2,c
  4100  003884  EF46  F01C         	goto	u2791
  4101  003888  EF48  F01C         	goto	u2790
  4102  00388C                     u2791:
  4103  00388C  EF3A  F01C         	goto	l2936
  4104  003890                     u2790:
  4105  003890  5003               	movf	strlen@a^0,w,c
  4106  003892  5C01               	subwf	strlen@s^0,w,c
  4107  003894  6E01               	movwf	?_strlen^0,c
  4108  003896  5004               	movf	(strlen@a+1)^0,w,c
  4109  003898  5802               	subwfb	(strlen@s+1)^0,w,c
  4110  00389A  6E02               	movwf	(?_strlen+1)^0,c
  4111  00389C  0012               	return		;funcret
  4112  00389E                     __end_of_strlen:
  4113                           	callstack 0
  4114                           
  4115 ;; *************** function _fputs *****************
  4116 ;; Defined at:
  4117 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4118 ;; Parameters:    Size  Location     Type
  4119 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4120 ;;		 -> dbuf(80), 
  4121 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4122 ;;		 -> sprintf@f(11), 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  i               2   14[COMRAM] int 
  4125 ;;  c               1   13[COMRAM] unsigned char 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  2    9[COMRAM] int 
  4128 ;; Registers used:
  4129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4135 ;;      Params:         4       0       0       0       0       0       0       0       0
  4136 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4138 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4139 ;;Total ram usage:        7 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; Hardware stack levels required when called: 2
  4142 ;; This function calls:
  4143 ;;		_fputc
  4144 ;; This function is called by:
  4145 ;;		_pad
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text11
  4150  003700                     __ptext11:
  4151                           	callstack 0
  4152  003700                     _fputs:
  4153                           	callstack 23
  4154  003700  0E00               	movlw	0
  4155  003702  6E10               	movwf	(fputs@i+1)^0,c
  4156  003704  0E00               	movlw	0
  4157  003706  6E0F               	movwf	fputs@i^0,c
  4158  003708  EF91  F01B         	goto	l2932
  4159  00370C                     l2928:
  4160  00370C  C00E  F001         	movff	fputs@c,fputc@c
  4161  003710  6A02               	clrf	(fputc@c+1)^0,c
  4162  003712  C00C  F003         	movff	fputs@fp,fputc@fp
  4163  003716  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4164  00371A  EC5F  F017         	call	_fputc	;wreg free
  4165  00371E  4A0F               	infsnz	fputs@i^0,f,c
  4166  003720  2A10               	incf	(fputs@i+1)^0,f,c
  4167  003722                     l2932:
  4168  003722  500F               	movf	fputs@i^0,w,c
  4169  003724  240A               	addwf	fputs@s^0,w,c
  4170  003726  6ED9               	movwf	fsr2l,c
  4171  003728  5010               	movf	(fputs@i+1)^0,w,c
  4172  00372A  200B               	addwfc	(fputs@s+1)^0,w,c
  4173  00372C  6EDA               	movwf	fsr2h,c
  4174  00372E  50DF               	movf	indf2,w,c
  4175  003730  6E0E               	movwf	fputs@c^0,c
  4176  003732  500E               	movf	fputs@c^0,w,c
  4177  003734  A4D8               	btfss	status,2,c
  4178  003736  EF9F  F01B         	goto	u2781
  4179  00373A  EFA1  F01B         	goto	u2780
  4180  00373E                     u2781:
  4181  00373E  EF86  F01B         	goto	l2928
  4182  003742                     u2780:
  4183  003742  0012               	return		;funcret
  4184  003744                     __end_of_fputs:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function _fputc *****************
  4188 ;; Defined at:
  4189 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  c               2    0[COMRAM] int 
  4192 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4193 ;;		 -> sprintf@f(11), 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  2    0[COMRAM] int 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4205 ;;      Params:         4       0       0       0       0       0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4207 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4208 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4209 ;;Total ram usage:        9 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: 1
  4212 ;; This function calls:
  4213 ;;		_putch
  4214 ;; This function is called by:
  4215 ;;		_pad
  4216 ;;		_vfpfcnvrt
  4217 ;;		_fputs
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text12
  4222  002EBE                     __ptext12:
  4223                           	callstack 0
  4224  002EBE                     _fputc:
  4225                           	callstack 26
  4226  002EBE  5003               	movf	fputc@fp^0,w,c
  4227  002EC0  1004               	iorwf	(fputc@fp+1)^0,w,c
  4228  002EC2  B4D8               	btfsc	status,2,c
  4229  002EC4  EF66  F017         	goto	u2351
  4230  002EC8  EF68  F017         	goto	u2350
  4231  002ECC                     u2351:
  4232  002ECC  EF71  F017         	goto	l2714
  4233  002ED0                     u2350:
  4234  002ED0  5003               	movf	fputc@fp^0,w,c
  4235  002ED2  1004               	iorwf	(fputc@fp+1)^0,w,c
  4236  002ED4  A4D8               	btfss	status,2,c
  4237  002ED6  EF6F  F017         	goto	u2361
  4238  002EDA  EF71  F017         	goto	u2360
  4239  002EDE                     u2361:
  4240  002EDE  EF76  F017         	goto	l2716
  4241  002EE2                     u2360:
  4242  002EE2                     l2714:
  4243  002EE2  5001               	movf	fputc@c^0,w,c
  4244  002EE4  EC99  F01C         	call	_putch
  4245  002EE8  EFC3  F017         	goto	l1073
  4246  002EEC                     l2716:
  4247  002EEC  EE20 F009          	lfsr	2,9
  4248  002EF0  5003               	movf	fputc@fp^0,w,c
  4249  002EF2  26D9               	addwf	fsr2l,f,c
  4250  002EF4  5004               	movf	(fputc@fp+1)^0,w,c
  4251  002EF6  22DA               	addwfc	fsr2h,f,c
  4252  002EF8  50DE               	movf	postinc2,w,c
  4253  002EFA  10DE               	iorwf	postinc2,w,c
  4254  002EFC  B4D8               	btfsc	status,2,c
  4255  002EFE  EF83  F017         	goto	u2371
  4256  002F02  EF85  F017         	goto	u2370
  4257  002F06                     u2371:
  4258  002F06  EFA0  F017         	goto	l2720
  4259  002F0A                     u2370:
  4260  002F0A  EE20 F009          	lfsr	2,9
  4261  002F0E  5003               	movf	fputc@fp^0,w,c
  4262  002F10  26D9               	addwf	fsr2l,f,c
  4263  002F12  5004               	movf	(fputc@fp+1)^0,w,c
  4264  002F14  22DA               	addwfc	fsr2h,f,c
  4265  002F16  EE10 F003          	lfsr	1,3
  4266  002F1A  5003               	movf	fputc@fp^0,w,c
  4267  002F1C  26E1               	addwf	fsr1l,f,c
  4268  002F1E  5004               	movf	(fputc@fp+1)^0,w,c
  4269  002F20  22E2               	addwfc	fsr1h,f,c
  4270  002F22  50DE               	movf	postinc2,w,c
  4271  002F24  5CE6               	subwf	postinc1,w,c
  4272  002F26  50E6               	movf	postinc1,w,c
  4273  002F28  0A80               	xorlw	128
  4274  002F2A  6E09               	movwf	(??_fputc+4)^0,c
  4275  002F2C  50DE               	movf	postinc2,w,c
  4276  002F2E  0A80               	xorlw	128
  4277  002F30  5809               	subwfb	(??_fputc+4)^0,w,c
  4278  002F32  B0D8               	btfsc	status,0,c
  4279  002F34  EF9E  F017         	goto	u2381
  4280  002F38  EFA0  F017         	goto	u2380
  4281  002F3C                     u2381:
  4282  002F3C  EFC3  F017         	goto	l1073
  4283  002F40                     u2380:
  4284  002F40                     l2720:
  4285  002F40  EE20 F003          	lfsr	2,3
  4286  002F44  5003               	movf	fputc@fp^0,w,c
  4287  002F46  26D9               	addwf	fsr2l,f,c
  4288  002F48  5004               	movf	(fputc@fp+1)^0,w,c
  4289  002F4A  22DA               	addwfc	fsr2h,f,c
  4290  002F4C  CFDE F005          	movff	postinc2,??_fputc
  4291  002F50  CFDD F006          	movff	postdec2,??_fputc+1
  4292  002F54  C003  FFD9         	movff	fputc@fp,fsr2l
  4293  002F58  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4294  002F5C  CFDE F007          	movff	postinc2,??_fputc+2
  4295  002F60  CFDD F008          	movff	postdec2,??_fputc+3
  4296  002F64  5005               	movf	??_fputc^0,w,c
  4297  002F66  2407               	addwf	(??_fputc+2)^0,w,c
  4298  002F68  6ED9               	movwf	fsr2l,c
  4299  002F6A  5006               	movf	(??_fputc+1)^0,w,c
  4300  002F6C  2008               	addwfc	(??_fputc+3)^0,w,c
  4301  002F6E  6EDA               	movwf	fsr2h,c
  4302  002F70  C001  FFDF         	movff	fputc@c,indf2
  4303  002F74  EE20 F003          	lfsr	2,3
  4304  002F78  5003               	movf	fputc@fp^0,w,c
  4305  002F7A  26D9               	addwf	fsr2l,f,c
  4306  002F7C  5004               	movf	(fputc@fp+1)^0,w,c
  4307  002F7E  22DA               	addwfc	fsr2h,f,c
  4308  002F80  2ADE               	incf	postinc2,f,c
  4309  002F82  0E00               	movlw	0
  4310  002F84  22DD               	addwfc	postdec2,f,c
  4311  002F86                     l1073:
  4312  002F86  0012               	return		;funcret
  4313  002F88                     __end_of_fputc:
  4314                           	callstack 0
  4315                           
  4316 ;; *************** function _putch *****************
  4317 ;; Defined at:
  4318 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  c               1    wreg     unsigned char 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  c               1    0[COMRAM] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4332 ;;      Params:         0       0       0       0       0       0       0       0       0
  4333 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4335 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4336 ;;Total ram usage:        0 bytes
  4337 ;; Hardware stack levels used: 1
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_fputc
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text13
  4346  003932                     __ptext13:
  4347                           	callstack 0
  4348  003932                     _putch:
  4349                           	callstack 26
  4350  003932  0012               	return		;funcret
  4351  003934                     __end_of_putch:
  4352                           	callstack 0
  4353                           
  4354 ;; *************** function _floorf *****************
  4355 ;; Defined at:
  4356 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  x               4   25[COMRAM] float 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  u               4   41[COMRAM] struct .
  4361 ;;  m               4   35[COMRAM] unsigned long 
  4362 ;;  e               2   39[COMRAM] int 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  4   25[COMRAM] float 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4372 ;;      Params:         4       0       0       0       0       0       0       0       0
  4373 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4374 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4375 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4376 ;;Total ram usage:       20 bytes
  4377 ;; Hardware stack levels used: 1
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_efgtoa
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text14
  4386  0025C4                     __ptext14:
  4387                           	callstack 0
  4388  0025C4                     _floorf:
  4389                           	callstack 26
  4390  0025C4  C0BB  F02A         	movff	floorf@F526,floorf@u
  4391  0025C8  C0BC  F02B         	movff	floorf@F526+1,floorf@u+1
  4392  0025CC  C0BD  F02C         	movff	floorf@F526+2,floorf@u+2
  4393  0025D0  C0BE  F02D         	movff	floorf@F526+3,floorf@u+3
  4394  0025D4  C01A  F02A         	movff	floorf@x,floorf@u
  4395  0025D8  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4396  0025DC  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4397  0025E0  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4398  0025E4  0E81               	movlw	129
  4399  0025E6  6E1E               	movwf	??_floorf^0,c
  4400  0025E8  0EFF               	movlw	255
  4401  0025EA  6E1F               	movwf	(??_floorf+1)^0,c
  4402  0025EC  C02A  F020         	movff	floorf@u,??_floorf+2
  4403  0025F0  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4404  0025F4  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4405  0025F8  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4406  0025FC  0E18               	movlw	24
  4407  0025FE  EF06  F013         	goto	u3700
  4408  002602                     u3705:
  4409  002602  90D8               	bcf	status,0,c
  4410  002604  3223               	rrcf	(??_floorf+5)^0,f,c
  4411  002606  3222               	rrcf	(??_floorf+4)^0,f,c
  4412  002608  3221               	rrcf	(??_floorf+3)^0,f,c
  4413  00260A  3220               	rrcf	(??_floorf+2)^0,f,c
  4414  00260C                     u3700:
  4415  00260C  2EE8               	decfsz	wreg,f,c
  4416  00260E  EF01  F013         	goto	u3705
  4417  002612  5020               	movf	(??_floorf+2)^0,w,c
  4418  002614  241E               	addwf	??_floorf^0,w,c
  4419  002616  6E28               	movwf	floorf@e^0,c
  4420  002618  0E00               	movlw	0
  4421  00261A  201F               	addwfc	(??_floorf+1)^0,w,c
  4422  00261C  6E29               	movwf	(floorf@e+1)^0,c
  4423  00261E  BE29               	btfsc	(floorf@e+1)^0,7,c
  4424  002620  EF1B  F013         	goto	u3711
  4425  002624  5029               	movf	(floorf@e+1)^0,w,c
  4426  002626  E109               	bnz	u3710
  4427  002628  0E17               	movlw	23
  4428  00262A  5C28               	subwf	floorf@e^0,w,c
  4429  00262C  A0D8               	btfss	status,0,c
  4430  00262E  EF1B  F013         	goto	u3711
  4431  002632  EF1D  F013         	goto	u3710
  4432  002636                     u3711:
  4433  002636  EF27  F013         	goto	l3488
  4434  00263A                     u3710:
  4435  00263A                     l3486:
  4436  00263A  C01A  F01A         	movff	floorf@x,?_floorf
  4437  00263E  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4438  002642  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4439  002646  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4440  00264A  EFEA  F013         	goto	l1034
  4441  00264E                     l3488:
  4442  00264E  BE29               	btfsc	(floorf@e+1)^0,7,c
  4443  002650  EF2C  F013         	goto	u3721
  4444  002654  EF2E  F013         	goto	u3720
  4445  002658                     u3721:
  4446  002658  EF9E  F013         	goto	l3498
  4447  00265C                     u3720:
  4448  00265C  C028  F01E         	movff	floorf@e,??_floorf
  4449  002660  0EFF               	movlw	255
  4450  002662  6E1F               	movwf	(??_floorf+1)^0,c
  4451  002664  0EFF               	movlw	255
  4452  002666  6E20               	movwf	(??_floorf+2)^0,c
  4453  002668  0E7F               	movlw	127
  4454  00266A  6E21               	movwf	(??_floorf+3)^0,c
  4455  00266C  0E00               	movlw	0
  4456  00266E  6E22               	movwf	(??_floorf+4)^0,c
  4457  002670                     u3735:
  4458  002670  661E               	tstfsz	??_floorf^0,c
  4459  002672  EF3D  F013         	goto	u3736
  4460  002676  EF45  F013         	goto	u3737
  4461  00267A                     u3736:
  4462  00267A  3422               	rlcf	(??_floorf+4)^0,w,c
  4463  00267C  3222               	rrcf	(??_floorf+4)^0,f,c
  4464  00267E  3221               	rrcf	(??_floorf+3)^0,f,c
  4465  002680  3220               	rrcf	(??_floorf+2)^0,f,c
  4466  002682  321F               	rrcf	(??_floorf+1)^0,f,c
  4467  002684  2E1E               	decfsz	??_floorf^0,f,c
  4468  002686  EF38  F013         	goto	u3735
  4469  00268A                     u3737:
  4470  00268A  C01F  F024         	movff	??_floorf+1,floorf@m
  4471  00268E  C020  F025         	movff	??_floorf+2,floorf@m+1
  4472  002692  C021  F026         	movff	??_floorf+3,floorf@m+2
  4473  002696  C022  F027         	movff	??_floorf+4,floorf@m+3
  4474  00269A  5024               	movf	floorf@m^0,w,c
  4475  00269C  142A               	andwf	floorf@u^0,w,c
  4476  00269E  6E1E               	movwf	??_floorf^0,c
  4477  0026A0  5025               	movf	(floorf@m+1)^0,w,c
  4478  0026A2  142B               	andwf	(floorf@u+1)^0,w,c
  4479  0026A4  6E1F               	movwf	(??_floorf+1)^0,c
  4480  0026A6  5026               	movf	(floorf@m+2)^0,w,c
  4481  0026A8  142C               	andwf	(floorf@u+2)^0,w,c
  4482  0026AA  6E20               	movwf	(??_floorf+2)^0,c
  4483  0026AC  5027               	movf	(floorf@m+3)^0,w,c
  4484  0026AE  142D               	andwf	(floorf@u+3)^0,w,c
  4485  0026B0  6E21               	movwf	(??_floorf+3)^0,c
  4486  0026B2  501E               	movf	??_floorf^0,w,c
  4487  0026B4  101F               	iorwf	(??_floorf+1)^0,w,c
  4488  0026B6  1020               	iorwf	(??_floorf+2)^0,w,c
  4489  0026B8  1021               	iorwf	(??_floorf+3)^0,w,c
  4490  0026BA  A4D8               	btfss	status,2,c
  4491  0026BC  EF62  F013         	goto	u3741
  4492  0026C0  EF64  F013         	goto	u3740
  4493  0026C4                     u3741:
  4494  0026C4  EF66  F013         	goto	l3494
  4495  0026C8                     u3740:
  4496  0026C8  EF1D  F013         	goto	l3486
  4497  0026CC                     l3494:
  4498  0026CC  C02A  F01E         	movff	floorf@u,??_floorf
  4499  0026D0  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4500  0026D4  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4501  0026D8  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4502  0026DC  0E20               	movlw	32
  4503  0026DE  EF76  F013         	goto	u3750
  4504  0026E2                     u3755:
  4505  0026E2  90D8               	bcf	status,0,c
  4506  0026E4  3221               	rrcf	(??_floorf+3)^0,f,c
  4507  0026E6  3220               	rrcf	(??_floorf+2)^0,f,c
  4508  0026E8  321F               	rrcf	(??_floorf+1)^0,f,c
  4509  0026EA  321E               	rrcf	??_floorf^0,f,c
  4510  0026EC                     u3750:
  4511  0026EC  2EE8               	decfsz	wreg,f,c
  4512  0026EE  EF71  F013         	goto	u3755
  4513  0026F2  501E               	movf	??_floorf^0,w,c
  4514  0026F4  101F               	iorwf	(??_floorf+1)^0,w,c
  4515  0026F6  1020               	iorwf	(??_floorf+2)^0,w,c
  4516  0026F8  1021               	iorwf	(??_floorf+3)^0,w,c
  4517  0026FA  B4D8               	btfsc	status,2,c
  4518  0026FC  EF82  F013         	goto	u3761
  4519  002700  EF84  F013         	goto	u3760
  4520  002704                     u3761:
  4521  002704  EF8C  F013         	goto	l1037
  4522  002708                     u3760:
  4523  002708  5024               	movf	floorf@m^0,w,c
  4524  00270A  262A               	addwf	floorf@u^0,f,c
  4525  00270C  5025               	movf	(floorf@m+1)^0,w,c
  4526  00270E  222B               	addwfc	(floorf@u+1)^0,f,c
  4527  002710  5026               	movf	(floorf@m+2)^0,w,c
  4528  002712  222C               	addwfc	(floorf@u+2)^0,f,c
  4529  002714  5027               	movf	(floorf@m+3)^0,w,c
  4530  002716  222D               	addwfc	(floorf@u+3)^0,f,c
  4531  002718                     l1037:
  4532  002718  1C24               	comf	floorf@m^0,w,c
  4533  00271A  6E1E               	movwf	??_floorf^0,c
  4534  00271C  1C25               	comf	(floorf@m+1)^0,w,c
  4535  00271E  6E1F               	movwf	(??_floorf+1)^0,c
  4536  002720  1C26               	comf	(floorf@m+2)^0,w,c
  4537  002722  6E20               	movwf	(??_floorf+2)^0,c
  4538  002724  1C27               	comf	(floorf@m+3)^0,w,c
  4539  002726  6E21               	movwf	(??_floorf+3)^0,c
  4540  002728  501E               	movf	??_floorf^0,w,c
  4541  00272A  162A               	andwf	floorf@u^0,f,c
  4542  00272C  501F               	movf	(??_floorf+1)^0,w,c
  4543  00272E  162B               	andwf	(floorf@u+1)^0,f,c
  4544  002730  5020               	movf	(??_floorf+2)^0,w,c
  4545  002732  162C               	andwf	(floorf@u+2)^0,f,c
  4546  002734  5021               	movf	(??_floorf+3)^0,w,c
  4547  002736  162D               	andwf	(floorf@u+3)^0,f,c
  4548  002738  EFE2  F013         	goto	l3506
  4549  00273C                     l3498:
  4550  00273C  C02A  F01E         	movff	floorf@u,??_floorf
  4551  002740  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4552  002744  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4553  002748  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4554  00274C  0E20               	movlw	32
  4555  00274E  EFAE  F013         	goto	u3770
  4556  002752                     u3775:
  4557  002752  90D8               	bcf	status,0,c
  4558  002754  3221               	rrcf	(??_floorf+3)^0,f,c
  4559  002756  3220               	rrcf	(??_floorf+2)^0,f,c
  4560  002758  321F               	rrcf	(??_floorf+1)^0,f,c
  4561  00275A  321E               	rrcf	??_floorf^0,f,c
  4562  00275C                     u3770:
  4563  00275C  2EE8               	decfsz	wreg,f,c
  4564  00275E  EFA9  F013         	goto	u3775
  4565  002762  501E               	movf	??_floorf^0,w,c
  4566  002764  101F               	iorwf	(??_floorf+1)^0,w,c
  4567  002766  1020               	iorwf	(??_floorf+2)^0,w,c
  4568  002768  1021               	iorwf	(??_floorf+3)^0,w,c
  4569  00276A  A4D8               	btfss	status,2,c
  4570  00276C  EFBA  F013         	goto	u3781
  4571  002770  EFBC  F013         	goto	u3780
  4572  002774                     u3781:
  4573  002774  EFC6  F013         	goto	l3502
  4574  002778                     u3780:
  4575  002778  0E00               	movlw	0
  4576  00277A  6E2A               	movwf	floorf@u^0,c
  4577  00277C  0E00               	movlw	0
  4578  00277E  6E2B               	movwf	(floorf@u+1)^0,c
  4579  002780  0E00               	movlw	0
  4580  002782  6E2C               	movwf	(floorf@u+2)^0,c
  4581  002784  0E00               	movlw	0
  4582  002786  6E2D               	movwf	(floorf@u+3)^0,c
  4583  002788  EFE2  F013         	goto	l3506
  4584  00278C                     l3502:
  4585  00278C  90D8               	bcf	status,0,c
  4586  00278E  342A               	rlcf	floorf@u^0,w,c
  4587  002790  6E1E               	movwf	??_floorf^0,c
  4588  002792  342B               	rlcf	(floorf@u+1)^0,w,c
  4589  002794  6E1F               	movwf	(??_floorf+1)^0,c
  4590  002796  342C               	rlcf	(floorf@u+2)^0,w,c
  4591  002798  6E20               	movwf	(??_floorf+2)^0,c
  4592  00279A  342D               	rlcf	(floorf@u+3)^0,w,c
  4593  00279C  6E21               	movwf	(??_floorf+3)^0,c
  4594  00279E  501E               	movf	??_floorf^0,w,c
  4595  0027A0  101F               	iorwf	(??_floorf+1)^0,w,c
  4596  0027A2  1020               	iorwf	(??_floorf+2)^0,w,c
  4597  0027A4  1021               	iorwf	(??_floorf+3)^0,w,c
  4598  0027A6  B4D8               	btfsc	status,2,c
  4599  0027A8  EFD8  F013         	goto	u3791
  4600  0027AC  EFDA  F013         	goto	u3790
  4601  0027B0                     u3791:
  4602  0027B0  EFE2  F013         	goto	l3506
  4603  0027B4                     u3790:
  4604  0027B4  0E00               	movlw	0
  4605  0027B6  6E2A               	movwf	floorf@u^0,c
  4606  0027B8  0E00               	movlw	0
  4607  0027BA  6E2B               	movwf	(floorf@u+1)^0,c
  4608  0027BC  0E80               	movlw	128
  4609  0027BE  6E2C               	movwf	(floorf@u+2)^0,c
  4610  0027C0  0EBF               	movlw	191
  4611  0027C2  6E2D               	movwf	(floorf@u+3)^0,c
  4612  0027C4                     l3506:
  4613  0027C4  C02A  F01A         	movff	floorf@u,?_floorf
  4614  0027C8  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4615  0027CC  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4616  0027D0  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4617  0027D4                     l1034:
  4618  0027D4  0012               	return		;funcret
  4619  0027D6                     __end_of_floorf:
  4620                           	callstack 0
  4621                           
  4622 ;; *************** function ___fpclassifyf *****************
  4623 ;; Defined at:
  4624 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  x               4    0[COMRAM] float 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  u               4   10[COMRAM] struct .
  4629 ;;  e               2    8[COMRAM] int 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  2    0[COMRAM] int 
  4632 ;; Registers used:
  4633 ;;		wreg, status,2, status,0
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4639 ;;      Params:         4       0       0       0       0       0       0       0       0
  4640 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4641 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4642 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4643 ;;Total ram usage:       14 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_efgtoa
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text15
  4653  002CEA                     __ptext15:
  4654                           	callstack 0
  4655  002CEA                     ___fpclassifyf:
  4656                           	callstack 26
  4657  002CEA  C0BF  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4658  002CEE  C0C0  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4659  002CF2  C0C1  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4660  002CF6  C0C2  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4661  002CFA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4662  002CFE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4663  002D02  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4664  002D06  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4665  002D0A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4666  002D0E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4667  002D12  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4668  002D16  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4669  002D1A  0E18               	movlw	24
  4670  002D1C  EF95  F016         	goto	u3600
  4671  002D20                     u3605:
  4672  002D20  90D8               	bcf	status,0,c
  4673  002D22  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4674  002D24  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4675  002D26  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4676  002D28  3205               	rrcf	??___fpclassifyf^0,f,c
  4677  002D2A                     u3600:
  4678  002D2A  2EE8               	decfsz	wreg,f,c
  4679  002D2C  EF90  F016         	goto	u3605
  4680  002D30  5005               	movf	??___fpclassifyf^0,w,c
  4681  002D32  6E09               	movwf	___fpclassifyf@e^0,c
  4682  002D34  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4683  002D36  5009               	movf	___fpclassifyf@e^0,w,c
  4684  002D38  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4685  002D3A  A4D8               	btfss	status,2,c
  4686  002D3C  EFA2  F016         	goto	u3611
  4687  002D40  EFA4  F016         	goto	u3610
  4688  002D44                     u3611:
  4689  002D44  EFC4  F016         	goto	l3458
  4690  002D48                     u3610:
  4691  002D48  90D8               	bcf	status,0,c
  4692  002D4A  340B               	rlcf	___fpclassifyf@u^0,w,c
  4693  002D4C  6E05               	movwf	??___fpclassifyf^0,c
  4694  002D4E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4695  002D50  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4696  002D52  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4697  002D54  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4698  002D56  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4699  002D58  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4700  002D5A  5005               	movf	??___fpclassifyf^0,w,c
  4701  002D5C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4702  002D5E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4703  002D60  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4704  002D62  A4D8               	btfss	status,2,c
  4705  002D64  EFB6  F016         	goto	u3621
  4706  002D68  EFB8  F016         	goto	u3620
  4707  002D6C                     u3621:
  4708  002D6C  EFBE  F016         	goto	l3454
  4709  002D70                     u3620:
  4710  002D70  0E00               	movlw	0
  4711  002D72  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4712  002D74  0E02               	movlw	2
  4713  002D76  6E01               	movwf	?___fpclassifyf^0,c
  4714  002D78  EFF3  F016         	goto	l1002
  4715  002D7C                     l3454:
  4716  002D7C  0E00               	movlw	0
  4717  002D7E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4718  002D80  0E03               	movlw	3
  4719  002D82  6E01               	movwf	?___fpclassifyf^0,c
  4720  002D84  EFF3  F016         	goto	l1002
  4721  002D88                     l3458:
  4722  002D88  2809               	incf	___fpclassifyf@e^0,w,c
  4723  002D8A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4724  002D8C  A4D8               	btfss	status,2,c
  4725  002D8E  EFCB  F016         	goto	u3631
  4726  002D92  EFCD  F016         	goto	u3630
  4727  002D96                     u3631:
  4728  002D96  EFEF  F016         	goto	l3464
  4729  002D9A                     u3630:
  4730  002D9A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4731  002D9E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4732  002DA2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4733  002DA6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4734  002DAA  0E09               	movlw	9
  4735  002DAC                     u3645:
  4736  002DAC  90D8               	bcf	status,0,c
  4737  002DAE  3605               	rlcf	??___fpclassifyf^0,f,c
  4738  002DB0  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4739  002DB2  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4740  002DB4  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4741  002DB6  2EE8               	decfsz	wreg,f,c
  4742  002DB8  EFD6  F016         	goto	u3645
  4743  002DBC  5005               	movf	??___fpclassifyf^0,w,c
  4744  002DBE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4745  002DC0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4746  002DC2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4747  002DC4  B4D8               	btfsc	status,2,c
  4748  002DC6  EFE7  F016         	goto	u3651
  4749  002DCA  EFEA  F016         	goto	u3650
  4750  002DCE                     u3651:
  4751  002DCE  0E01               	movlw	1
  4752  002DD0  EFEB  F016         	goto	u3660
  4753  002DD4                     u3650:
  4754  002DD4  0E00               	movlw	0
  4755  002DD6                     u3660:
  4756  002DD6  6E01               	movwf	?___fpclassifyf^0,c
  4757  002DD8  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4758  002DDA  EFF3  F016         	goto	l1002
  4759  002DDE                     l3464:
  4760  002DDE  0E00               	movlw	0
  4761  002DE0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4762  002DE2  0E04               	movlw	4
  4763  002DE4  6E01               	movwf	?___fpclassifyf^0,c
  4764  002DE6                     l1002:
  4765  002DE6  0012               	return		;funcret
  4766  002DE8                     __end_of___fpclassifyf:
  4767                           	callstack 0
  4768                           
  4769 ;; *************** function ___fltol *****************
  4770 ;; Defined at:
  4771 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  f1              4    0[COMRAM] int 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  exp1            1    9[COMRAM] unsigned char 
  4776 ;;  sign1           1    8[COMRAM] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  4    0[COMRAM] long 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4786 ;;      Params:         4       0       0       0       0       0       0       0       0
  4787 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4788 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4789 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4790 ;;Total ram usage:       10 bytes
  4791 ;; Hardware stack levels used: 1
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_efgtoa
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text16
  4800  002AE0                     __ptext16:
  4801                           	callstack 0
  4802  002AE0                     ___fltol:
  4803                           	callstack 26
  4804  002AE0  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4805  002AE2  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4806  002AE4  6E0A               	movwf	___fltol@exp1^0,c
  4807  002AE6  500A               	movf	___fltol@exp1^0,w,c
  4808  002AE8  A4D8               	btfss	status,2,c
  4809  002AEA  EF79  F015         	goto	u3491
  4810  002AEE  EF7B  F015         	goto	u3490
  4811  002AF2                     u3491:
  4812  002AF2  EF85  F015         	goto	l3386
  4813  002AF6                     u3490:
  4814  002AF6                     l3382:
  4815  002AF6  0E00               	movlw	0
  4816  002AF8  6E01               	movwf	?___fltol^0,c
  4817  002AFA  0E00               	movlw	0
  4818  002AFC  6E02               	movwf	(?___fltol+1)^0,c
  4819  002AFE  0E00               	movlw	0
  4820  002B00  6E03               	movwf	(?___fltol+2)^0,c
  4821  002B02  0E00               	movlw	0
  4822  002B04  6E04               	movwf	(?___fltol+3)^0,c
  4823  002B06  EFF2  F015         	goto	l443
  4824  002B0A                     l3386:
  4825  002B0A  C001  F005         	movff	___fltol@f1,??___fltol
  4826  002B0E  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4827  002B12  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4828  002B16  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4829  002B1A  0E20               	movlw	32
  4830  002B1C  EF95  F015         	goto	u3500
  4831  002B20                     u3505:
  4832  002B20  90D8               	bcf	status,0,c
  4833  002B22  3208               	rrcf	(??___fltol+3)^0,f,c
  4834  002B24  3207               	rrcf	(??___fltol+2)^0,f,c
  4835  002B26  3206               	rrcf	(??___fltol+1)^0,f,c
  4836  002B28  3205               	rrcf	??___fltol^0,f,c
  4837  002B2A                     u3500:
  4838  002B2A  2EE8               	decfsz	wreg,f,c
  4839  002B2C  EF90  F015         	goto	u3505
  4840  002B30  5005               	movf	??___fltol^0,w,c
  4841  002B32  6E09               	movwf	___fltol@sign1^0,c
  4842  002B34  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4843  002B36  0EFF               	movlw	255
  4844  002B38  1601               	andwf	___fltol@f1^0,f,c
  4845  002B3A  0EFF               	movlw	255
  4846  002B3C  1602               	andwf	(___fltol@f1+1)^0,f,c
  4847  002B3E  0EFF               	movlw	255
  4848  002B40  1603               	andwf	(___fltol@f1+2)^0,f,c
  4849  002B42  0E00               	movlw	0
  4850  002B44  1604               	andwf	(___fltol@f1+3)^0,f,c
  4851  002B46  0E96               	movlw	150
  4852  002B48  5E0A               	subwf	___fltol@exp1^0,f,c
  4853  002B4A  BE0A               	btfsc	___fltol@exp1^0,7,c
  4854  002B4C  EFAC  F015         	goto	u3510
  4855  002B50  EFAA  F015         	goto	u3511
  4856  002B54                     u3511:
  4857  002B54  EFC2  F015         	goto	l3406
  4858  002B58                     u3510:
  4859  002B58  500A               	movf	___fltol@exp1^0,w,c
  4860  002B5A  0A80               	xorlw	128
  4861  002B5C  0F97               	addlw	151
  4862  002B5E  B0D8               	btfsc	status,0,c
  4863  002B60  EFB4  F015         	goto	u3521
  4864  002B64  EFB6  F015         	goto	u3520
  4865  002B68                     u3521:
  4866  002B68  EFB8  F015         	goto	l3402
  4867  002B6C                     u3520:
  4868  002B6C  EF7B  F015         	goto	l3382
  4869  002B70                     l3402:
  4870  002B70  90D8               	bcf	status,0,c
  4871  002B72  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4872  002B74  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4873  002B76  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4874  002B78  3201               	rrcf	___fltol@f1^0,f,c
  4875  002B7A  3E0A               	incfsz	___fltol@exp1^0,f,c
  4876  002B7C  EFB8  F015         	goto	l3402
  4877  002B80  EFDA  F015         	goto	l3416
  4878  002B84                     l3406:
  4879  002B84  0E1F               	movlw	31
  4880  002B86  640A               	cpfsgt	___fltol@exp1^0,c
  4881  002B88  EFC8  F015         	goto	u3531
  4882  002B8C  EFCA  F015         	goto	u3530
  4883  002B90                     u3531:
  4884  002B90  EFD2  F015         	goto	l3414
  4885  002B94                     u3530:
  4886  002B94  EF7B  F015         	goto	l3382
  4887  002B98                     l3412:
  4888  002B98  90D8               	bcf	status,0,c
  4889  002B9A  3601               	rlcf	___fltol@f1^0,f,c
  4890  002B9C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4891  002B9E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4892  002BA0  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4893  002BA2  060A               	decf	___fltol@exp1^0,f,c
  4894  002BA4                     l3414:
  4895  002BA4  500A               	movf	___fltol@exp1^0,w,c
  4896  002BA6  A4D8               	btfss	status,2,c
  4897  002BA8  EFD8  F015         	goto	u3541
  4898  002BAC  EFDA  F015         	goto	u3540
  4899  002BB0                     u3541:
  4900  002BB0  EFCC  F015         	goto	l3412
  4901  002BB4                     u3540:
  4902  002BB4                     l3416:
  4903  002BB4  5009               	movf	___fltol@sign1^0,w,c
  4904  002BB6  B4D8               	btfsc	status,2,c
  4905  002BB8  EFE0  F015         	goto	u3551
  4906  002BBC  EFE2  F015         	goto	u3550
  4907  002BC0                     u3551:
  4908  002BC0  EFEA  F015         	goto	l3420
  4909  002BC4                     u3550:
  4910  002BC4  1E04               	comf	(___fltol@f1+3)^0,f,c
  4911  002BC6  1E03               	comf	(___fltol@f1+2)^0,f,c
  4912  002BC8  1E02               	comf	(___fltol@f1+1)^0,f,c
  4913  002BCA  6C01               	negf	___fltol@f1^0,c
  4914  002BCC  0E00               	movlw	0
  4915  002BCE  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4916  002BD0  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4917  002BD2  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4918  002BD4                     l3420:
  4919  002BD4  C001  F001         	movff	___fltol@f1,?___fltol
  4920  002BD8  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4921  002BDC  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4922  002BE0  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4923  002BE4                     l443:
  4924  002BE4  0012               	return		;funcret
  4925  002BE6                     __end_of___fltol:
  4926                           	callstack 0
  4927                           
  4928 ;; *************** function ___flsub *****************
  4929 ;; Defined at:
  4930 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  b               4   39[COMRAM] long 
  4933 ;;  a               4   43[COMRAM] long 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;		None
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  4   39[COMRAM] long 
  4938 ;; Registers used:
  4939 ;;		wreg, status,2, status,0, cstack
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4945 ;;      Params:         8       0       0       0       0       0       0       0       0
  4946 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4948 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4949 ;;Total ram usage:        8 bytes
  4950 ;; Hardware stack levels used: 1
  4951 ;; Hardware stack levels required when called: 1
  4952 ;; This function calls:
  4953 ;;		___fladd
  4954 ;; This function is called by:
  4955 ;;		_efgtoa
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text17
  4960  0036BA                     __ptext17:
  4961                           	callstack 0
  4962  0036BA                     ___flsub:
  4963                           	callstack 25
  4964  0036BA  0E00               	movlw	0
  4965  0036BC  1A2C               	xorwf	___flsub@a^0,f,c
  4966  0036BE  0E00               	movlw	0
  4967  0036C0  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4968  0036C2  0E00               	movlw	0
  4969  0036C4  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4970  0036C6  0E80               	movlw	128
  4971  0036C8  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4972  0036CA  C028  F001         	movff	___flsub@b,___fladd@b
  4973  0036CE  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4974  0036D2  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4975  0036D6  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4976  0036DA  C02C  F005         	movff	___flsub@a,___fladd@a
  4977  0036DE  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4978  0036E2  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4979  0036E6  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4980  0036EA  ECA0  F00C         	call	___fladd	;wreg free
  4981  0036EE  C001  F028         	movff	?___fladd,?___flsub
  4982  0036F2  C002  F029         	movff	?___fladd+1,?___flsub+1
  4983  0036F6  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4984  0036FA  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4985  0036FE  0012               	return		;funcret
  4986  003700                     __end_of___flsub:
  4987                           	callstack 0
  4988                           
  4989 ;; *************** function ___fladd *****************
  4990 ;; Defined at:
  4991 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  b               4    0[COMRAM] long 
  4994 ;;  a               4    4[COMRAM] long 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  grs             1   15[COMRAM] unsigned char 
  4997 ;;  bexp            1   14[COMRAM] unsigned char 
  4998 ;;  aexp            1   13[COMRAM] unsigned char 
  4999 ;;  signs           1   12[COMRAM] unsigned char 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  4    0[COMRAM] unsigned char 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5009 ;;      Params:         8       0       0       0       0       0       0       0       0
  5010 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5011 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5012 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5013 ;;Total ram usage:       16 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		___flsub
  5019 ;;		_efgtoa
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text18
  5024  001940                     __ptext18:
  5025                           	callstack 0
  5026  001940                     ___fladd:
  5027                           	callstack 25
  5028  001940  5004               	movf	(___fladd@b+3)^0,w,c
  5029  001942  0B80               	andlw	128
  5030  001944  6E0D               	movwf	___fladd@signs^0,c
  5031  001946  5004               	movf	(___fladd@b+3)^0,w,c
  5032  001948  2404               	addwf	(___fladd@b+3)^0,w,c
  5033  00194A  6E0F               	movwf	___fladd@bexp^0,c
  5034  00194C  AE03               	btfss	(___fladd@b+2)^0,7,c
  5035  00194E  EFAB  F00C         	goto	u2391
  5036  001952  EFAD  F00C         	goto	u2390
  5037  001956                     u2391:
  5038  001956  EFAE  F00C         	goto	l2730
  5039  00195A                     u2390:
  5040  00195A  800F               	bsf	___fladd@bexp^0,0,c
  5041  00195C                     l2730:
  5042  00195C  500F               	movf	___fladd@bexp^0,w,c
  5043  00195E  B4D8               	btfsc	status,2,c
  5044  001960  EFB4  F00C         	goto	u2401
  5045  001964  EFB6  F00C         	goto	u2400
  5046  001968                     u2401:
  5047  001968  EFCB  F00C         	goto	l2740
  5048  00196C                     u2400:
  5049  00196C  280F               	incf	___fladd@bexp^0,w,c
  5050  00196E  A4D8               	btfss	status,2,c
  5051  001970  EFBC  F00C         	goto	u2411
  5052  001974  EFBE  F00C         	goto	u2410
  5053  001978                     u2411:
  5054  001978  EFC6  F00C         	goto	l2736
  5055  00197C                     u2410:
  5056  00197C  0E00               	movlw	0
  5057  00197E  6E01               	movwf	___fladd@b^0,c
  5058  001980  0E00               	movlw	0
  5059  001982  6E02               	movwf	(___fladd@b+1)^0,c
  5060  001984  0E00               	movlw	0
  5061  001986  6E03               	movwf	(___fladd@b+2)^0,c
  5062  001988  0E00               	movlw	0
  5063  00198A  6E04               	movwf	(___fladd@b+3)^0,c
  5064  00198C                     l2736:
  5065  00198C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5066  00198E  0E00               	movlw	0
  5067  001990  6E04               	movwf	(___fladd@b+3)^0,c
  5068  001992  EFD3  F00C         	goto	l2742
  5069  001996                     l2740:
  5070  001996  0E00               	movlw	0
  5071  001998  6E01               	movwf	___fladd@b^0,c
  5072  00199A  0E00               	movlw	0
  5073  00199C  6E02               	movwf	(___fladd@b+1)^0,c
  5074  00199E  0E00               	movlw	0
  5075  0019A0  6E03               	movwf	(___fladd@b+2)^0,c
  5076  0019A2  0E00               	movlw	0
  5077  0019A4  6E04               	movwf	(___fladd@b+3)^0,c
  5078  0019A6                     l2742:
  5079  0019A6  5008               	movf	(___fladd@a+3)^0,w,c
  5080  0019A8  0B80               	andlw	128
  5081  0019AA  6E0E               	movwf	___fladd@aexp^0,c
  5082  0019AC  500D               	movf	___fladd@signs^0,w,c
  5083  0019AE  180E               	xorwf	___fladd@aexp^0,w,c
  5084  0019B0  B4D8               	btfsc	status,2,c
  5085  0019B2  EFDD  F00C         	goto	u2421
  5086  0019B6  EFDF  F00C         	goto	u2420
  5087  0019BA                     u2421:
  5088  0019BA  EFE0  F00C         	goto	l2748
  5089  0019BE                     u2420:
  5090  0019BE  8C0D               	bsf	___fladd@signs^0,6,c
  5091  0019C0                     l2748:
  5092  0019C0  5008               	movf	(___fladd@a+3)^0,w,c
  5093  0019C2  2408               	addwf	(___fladd@a+3)^0,w,c
  5094  0019C4  6E0E               	movwf	___fladd@aexp^0,c
  5095  0019C6  AE07               	btfss	(___fladd@a+2)^0,7,c
  5096  0019C8  EFE8  F00C         	goto	u2431
  5097  0019CC  EFEA  F00C         	goto	u2430
  5098  0019D0                     u2431:
  5099  0019D0  EFEB  F00C         	goto	l2754
  5100  0019D4                     u2430:
  5101  0019D4  800E               	bsf	___fladd@aexp^0,0,c
  5102  0019D6                     l2754:
  5103  0019D6  500E               	movf	___fladd@aexp^0,w,c
  5104  0019D8  B4D8               	btfsc	status,2,c
  5105  0019DA  EFF1  F00C         	goto	u2441
  5106  0019DE  EFF3  F00C         	goto	u2440
  5107  0019E2                     u2441:
  5108  0019E2  EF08  F00D         	goto	l2764
  5109  0019E6                     u2440:
  5110  0019E6  280E               	incf	___fladd@aexp^0,w,c
  5111  0019E8  A4D8               	btfss	status,2,c
  5112  0019EA  EFF9  F00C         	goto	u2451
  5113  0019EE  EFFB  F00C         	goto	u2450
  5114  0019F2                     u2451:
  5115  0019F2  EF03  F00D         	goto	l2760
  5116  0019F6                     u2450:
  5117  0019F6  0E00               	movlw	0
  5118  0019F8  6E05               	movwf	___fladd@a^0,c
  5119  0019FA  0E00               	movlw	0
  5120  0019FC  6E06               	movwf	(___fladd@a+1)^0,c
  5121  0019FE  0E00               	movlw	0
  5122  001A00  6E07               	movwf	(___fladd@a+2)^0,c
  5123  001A02  0E00               	movlw	0
  5124  001A04  6E08               	movwf	(___fladd@a+3)^0,c
  5125  001A06                     l2760:
  5126  001A06  8E07               	bsf	(___fladd@a+2)^0,7,c
  5127  001A08  0E00               	movlw	0
  5128  001A0A  6E08               	movwf	(___fladd@a+3)^0,c
  5129  001A0C  EF10  F00D         	goto	l2766
  5130  001A10                     l2764:
  5131  001A10  0E00               	movlw	0
  5132  001A12  6E05               	movwf	___fladd@a^0,c
  5133  001A14  0E00               	movlw	0
  5134  001A16  6E06               	movwf	(___fladd@a+1)^0,c
  5135  001A18  0E00               	movlw	0
  5136  001A1A  6E07               	movwf	(___fladd@a+2)^0,c
  5137  001A1C  0E00               	movlw	0
  5138  001A1E  6E08               	movwf	(___fladd@a+3)^0,c
  5139  001A20                     l2766:
  5140  001A20  500F               	movf	___fladd@bexp^0,w,c
  5141  001A22  5C0E               	subwf	___fladd@aexp^0,w,c
  5142  001A24  B0D8               	btfsc	status,0,c
  5143  001A26  EF17  F00D         	goto	u2461
  5144  001A2A  EF19  F00D         	goto	u2460
  5145  001A2E                     u2461:
  5146  001A2E  EF40  F00D         	goto	l2802
  5147  001A32                     u2460:
  5148  001A32  AC0D               	btfss	___fladd@signs^0,6,c
  5149  001A34  EF1E  F00D         	goto	u2471
  5150  001A38  EF20  F00D         	goto	u2470
  5151  001A3C                     u2471:
  5152  001A3C  EF22  F00D         	goto	l2772
  5153  001A40                     u2470:
  5154  001A40  0E80               	movlw	128
  5155  001A42  1A0D               	xorwf	___fladd@signs^0,f,c
  5156  001A44                     l2772:
  5157  001A44  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5158  001A48  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5159  001A4C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5160  001A50  C001  F010         	movff	___fladd@b,___fladd@grs
  5161  001A54  C005  F001         	movff	___fladd@a,___fladd@b
  5162  001A58  C010  F005         	movff	___fladd@grs,___fladd@a
  5163  001A5C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5164  001A60  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5165  001A64  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5166  001A68  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5167  001A6C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5168  001A70  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5169  001A74  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5170  001A78  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5171  001A7C  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5172  001A80                     l2802:
  5173  001A80  0E00               	movlw	0
  5174  001A82  6E10               	movwf	___fladd@grs^0,c
  5175  001A84  500F               	movf	___fladd@bexp^0,w,c
  5176  001A86  C00E  F009         	movff	___fladd@aexp,??___fladd
  5177  001A8A  6A0A               	clrf	(??___fladd+1)^0,c
  5178  001A8C  5E09               	subwf	??___fladd^0,f,c
  5179  001A8E  0E00               	movlw	0
  5180  001A90  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5181  001A92  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5182  001A94  EF55  F00D         	goto	u2481
  5183  001A98  500A               	movf	(??___fladd+1)^0,w,c
  5184  001A9A  E109               	bnz	u2480
  5185  001A9C  0E1A               	movlw	26
  5186  001A9E  5C09               	subwf	??___fladd^0,w,c
  5187  001AA0  A0D8               	btfss	status,0,c
  5188  001AA2  EF55  F00D         	goto	u2481
  5189  001AA6  EF57  F00D         	goto	u2480
  5190  001AAA                     u2481:
  5191  001AAA  EF8E  F00D         	goto	l675
  5192  001AAE                     u2480:
  5193  001AAE  5001               	movf	___fladd@b^0,w,c
  5194  001AB0  1002               	iorwf	(___fladd@b+1)^0,w,c
  5195  001AB2  1003               	iorwf	(___fladd@b+2)^0,w,c
  5196  001AB4  1004               	iorwf	(___fladd@b+3)^0,w,c
  5197  001AB6  A4D8               	btfss	status,2,c
  5198  001AB8  EF60  F00D         	goto	u2491
  5199  001ABC  EF63  F00D         	goto	u2490
  5200  001AC0                     u2491:
  5201  001AC0  0E01               	movlw	1
  5202  001AC2  EF64  F00D         	goto	u2500
  5203  001AC6                     u2490:
  5204  001AC6  0E00               	movlw	0
  5205  001AC8                     u2500:
  5206  001AC8  6E10               	movwf	___fladd@grs^0,c
  5207  001ACA  0E00               	movlw	0
  5208  001ACC  6E01               	movwf	___fladd@b^0,c
  5209  001ACE  0E00               	movlw	0
  5210  001AD0  6E02               	movwf	(___fladd@b+1)^0,c
  5211  001AD2  0E00               	movlw	0
  5212  001AD4  6E03               	movwf	(___fladd@b+2)^0,c
  5213  001AD6  0E00               	movlw	0
  5214  001AD8  6E04               	movwf	(___fladd@b+3)^0,c
  5215  001ADA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5216  001ADE  EF97  F00D         	goto	l674
  5217  001AE2                     l676:
  5218  001AE2  A010               	btfss	___fladd@grs^0,0,c
  5219  001AE4  EF76  F00D         	goto	u2511
  5220  001AE8  EF78  F00D         	goto	u2510
  5221  001AEC                     u2511:
  5222  001AEC  EF7E  F00D         	goto	l2814
  5223  001AF0                     u2510:
  5224  001AF0  90D8               	bcf	status,0,c
  5225  001AF2  3010               	rrcf	___fladd@grs^0,w,c
  5226  001AF4  0901               	iorlw	1
  5227  001AF6  6E10               	movwf	___fladd@grs^0,c
  5228  001AF8  EF80  F00D         	goto	l2816
  5229  001AFC                     l2814:
  5230  001AFC  90D8               	bcf	status,0,c
  5231  001AFE  3210               	rrcf	___fladd@grs^0,f,c
  5232  001B00                     l2816:
  5233  001B00  A001               	btfss	___fladd@b^0,0,c
  5234  001B02  EF85  F00D         	goto	u2521
  5235  001B06  EF87  F00D         	goto	u2520
  5236  001B0A                     u2521:
  5237  001B0A  EF88  F00D         	goto	l2820
  5238  001B0E                     u2520:
  5239  001B0E  8E10               	bsf	___fladd@grs^0,7,c
  5240  001B10                     l2820:
  5241  001B10  3404               	rlcf	(___fladd@b+3)^0,w,c
  5242  001B12  3204               	rrcf	(___fladd@b+3)^0,f,c
  5243  001B14  3203               	rrcf	(___fladd@b+2)^0,f,c
  5244  001B16  3202               	rrcf	(___fladd@b+1)^0,f,c
  5245  001B18  3201               	rrcf	___fladd@b^0,f,c
  5246  001B1A  2A0F               	incf	___fladd@bexp^0,f,c
  5247  001B1C                     l675:
  5248  001B1C  500E               	movf	___fladd@aexp^0,w,c
  5249  001B1E  5C0F               	subwf	___fladd@bexp^0,w,c
  5250  001B20  A0D8               	btfss	status,0,c
  5251  001B22  EF95  F00D         	goto	u2531
  5252  001B26  EF97  F00D         	goto	u2530
  5253  001B2A                     u2531:
  5254  001B2A  EF71  F00D         	goto	l676
  5255  001B2E                     u2530:
  5256  001B2E                     l674:
  5257  001B2E  BC0D               	btfsc	___fladd@signs^0,6,c
  5258  001B30  EF9C  F00D         	goto	u2541
  5259  001B34  EF9E  F00D         	goto	u2540
  5260  001B38                     u2541:
  5261  001B38  EFDE  F00D         	goto	l2848
  5262  001B3C                     u2540:
  5263  001B3C  500F               	movf	___fladd@bexp^0,w,c
  5264  001B3E  A4D8               	btfss	status,2,c
  5265  001B40  EFA4  F00D         	goto	u2551
  5266  001B44  EFA6  F00D         	goto	u2550
  5267  001B48                     u2551:
  5268  001B48  EFB0  F00D         	goto	l2830
  5269  001B4C                     u2550:
  5270  001B4C  0E00               	movlw	0
  5271  001B4E  6E01               	movwf	?___fladd^0,c
  5272  001B50  0E00               	movlw	0
  5273  001B52  6E02               	movwf	(?___fladd+1)^0,c
  5274  001B54  0E00               	movlw	0
  5275  001B56  6E03               	movwf	(?___fladd+2)^0,c
  5276  001B58  0E00               	movlw	0
  5277  001B5A  6E04               	movwf	(?___fladd+3)^0,c
  5278  001B5C  EFFF  F00E         	goto	l683
  5279  001B60                     l2830:
  5280  001B60  5005               	movf	___fladd@a^0,w,c
  5281  001B62  2601               	addwf	___fladd@b^0,f,c
  5282  001B64  5006               	movf	(___fladd@a+1)^0,w,c
  5283  001B66  2202               	addwfc	(___fladd@b+1)^0,f,c
  5284  001B68  5007               	movf	(___fladd@a+2)^0,w,c
  5285  001B6A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5286  001B6C  5008               	movf	(___fladd@a+3)^0,w,c
  5287  001B6E  2204               	addwfc	(___fladd@b+3)^0,f,c
  5288  001B70  A004               	btfss	(___fladd@b+3)^0,0,c
  5289  001B72  EFBD  F00D         	goto	u2561
  5290  001B76  EFBF  F00D         	goto	u2560
  5291  001B7A                     u2561:
  5292  001B7A  EF6B  F00E         	goto	l2884
  5293  001B7E                     u2560:
  5294  001B7E  A010               	btfss	___fladd@grs^0,0,c
  5295  001B80  EFC4  F00D         	goto	u2571
  5296  001B84  EFC6  F00D         	goto	u2570
  5297  001B88                     u2571:
  5298  001B88  EFCC  F00D         	goto	l2838
  5299  001B8C                     u2570:
  5300  001B8C  90D8               	bcf	status,0,c
  5301  001B8E  3010               	rrcf	___fladd@grs^0,w,c
  5302  001B90  0901               	iorlw	1
  5303  001B92  6E10               	movwf	___fladd@grs^0,c
  5304  001B94  EFCE  F00D         	goto	l2840
  5305  001B98                     l2838:
  5306  001B98  90D8               	bcf	status,0,c
  5307  001B9A  3210               	rrcf	___fladd@grs^0,f,c
  5308  001B9C                     l2840:
  5309  001B9C  A001               	btfss	___fladd@b^0,0,c
  5310  001B9E  EFD3  F00D         	goto	u2581
  5311  001BA2  EFD5  F00D         	goto	u2580
  5312  001BA6                     u2581:
  5313  001BA6  EFD6  F00D         	goto	l2844
  5314  001BAA                     u2580:
  5315  001BAA  8E10               	bsf	___fladd@grs^0,7,c
  5316  001BAC                     l2844:
  5317  001BAC  3404               	rlcf	(___fladd@b+3)^0,w,c
  5318  001BAE  3204               	rrcf	(___fladd@b+3)^0,f,c
  5319  001BB0  3203               	rrcf	(___fladd@b+2)^0,f,c
  5320  001BB2  3202               	rrcf	(___fladd@b+1)^0,f,c
  5321  001BB4  3201               	rrcf	___fladd@b^0,f,c
  5322  001BB6  2A0F               	incf	___fladd@bexp^0,f,c
  5323  001BB8  EF6B  F00E         	goto	l2884
  5324  001BBC                     l2848:
  5325  001BBC  5005               	movf	___fladd@a^0,w,c
  5326  001BBE  5C01               	subwf	___fladd@b^0,w,c
  5327  001BC0  5006               	movf	(___fladd@a+1)^0,w,c
  5328  001BC2  5802               	subwfb	(___fladd@b+1)^0,w,c
  5329  001BC4  5007               	movf	(___fladd@a+2)^0,w,c
  5330  001BC6  5803               	subwfb	(___fladd@b+2)^0,w,c
  5331  001BC8  5004               	movf	(___fladd@b+3)^0,w,c
  5332  001BCA  0A80               	xorlw	128
  5333  001BCC  6E09               	movwf	??___fladd^0,c
  5334  001BCE  5008               	movf	(___fladd@a+3)^0,w,c
  5335  001BD0  0A80               	xorlw	128
  5336  001BD2  5809               	subwfb	??___fladd^0,w,c
  5337  001BD4  B0D8               	btfsc	status,0,c
  5338  001BD6  EFEF  F00D         	goto	u2591
  5339  001BDA  EFF1  F00D         	goto	u2590
  5340  001BDE                     u2591:
  5341  001BDE  EF1C  F00E         	goto	l2858
  5342  001BE2                     u2590:
  5343  001BE2  5001               	movf	___fladd@b^0,w,c
  5344  001BE4  5C05               	subwf	___fladd@a^0,w,c
  5345  001BE6  6E09               	movwf	??___fladd^0,c
  5346  001BE8  5002               	movf	(___fladd@b+1)^0,w,c
  5347  001BEA  5806               	subwfb	(___fladd@a+1)^0,w,c
  5348  001BEC  6E0A               	movwf	(??___fladd+1)^0,c
  5349  001BEE  5003               	movf	(___fladd@b+2)^0,w,c
  5350  001BF0  5807               	subwfb	(___fladd@a+2)^0,w,c
  5351  001BF2  6E0B               	movwf	(??___fladd+2)^0,c
  5352  001BF4  5004               	movf	(___fladd@b+3)^0,w,c
  5353  001BF6  5808               	subwfb	(___fladd@a+3)^0,w,c
  5354  001BF8  6E0C               	movwf	(??___fladd+3)^0,c
  5355  001BFA  0EFF               	movlw	255
  5356  001BFC  2409               	addwf	??___fladd^0,w,c
  5357  001BFE  6E01               	movwf	___fladd@b^0,c
  5358  001C00  0EFF               	movlw	255
  5359  001C02  200A               	addwfc	(??___fladd+1)^0,w,c
  5360  001C04  6E02               	movwf	(___fladd@b+1)^0,c
  5361  001C06  0EFF               	movlw	255
  5362  001C08  200B               	addwfc	(??___fladd+2)^0,w,c
  5363  001C0A  6E03               	movwf	(___fladd@b+2)^0,c
  5364  001C0C  0EFF               	movlw	255
  5365  001C0E  200C               	addwfc	(??___fladd+3)^0,w,c
  5366  001C10  6E04               	movwf	(___fladd@b+3)^0,c
  5367  001C12  0E80               	movlw	128
  5368  001C14  1A0D               	xorwf	___fladd@signs^0,f,c
  5369  001C16  6C10               	negf	___fladd@grs^0,c
  5370  001C18  5010               	movf	___fladd@grs^0,w,c
  5371  001C1A  A4D8               	btfss	status,2,c
  5372  001C1C  EF12  F00E         	goto	u2601
  5373  001C20  EF14  F00E         	goto	u2600
  5374  001C24                     u2601:
  5375  001C24  EF24  F00E         	goto	l691
  5376  001C28                     u2600:
  5377  001C28  0E01               	movlw	1
  5378  001C2A  2601               	addwf	___fladd@b^0,f,c
  5379  001C2C  0E00               	movlw	0
  5380  001C2E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5381  001C30  2203               	addwfc	(___fladd@b+2)^0,f,c
  5382  001C32  2204               	addwfc	(___fladd@b+3)^0,f,c
  5383  001C34  EF24  F00E         	goto	l691
  5384  001C38                     l2858:
  5385  001C38  5005               	movf	___fladd@a^0,w,c
  5386  001C3A  5E01               	subwf	___fladd@b^0,f,c
  5387  001C3C  5006               	movf	(___fladd@a+1)^0,w,c
  5388  001C3E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5389  001C40  5007               	movf	(___fladd@a+2)^0,w,c
  5390  001C42  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5391  001C44  5008               	movf	(___fladd@a+3)^0,w,c
  5392  001C46  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5393  001C48                     l691:
  5394  001C48  5001               	movf	___fladd@b^0,w,c
  5395  001C4A  1002               	iorwf	(___fladd@b+1)^0,w,c
  5396  001C4C  1003               	iorwf	(___fladd@b+2)^0,w,c
  5397  001C4E  1004               	iorwf	(___fladd@b+3)^0,w,c
  5398  001C50  A4D8               	btfss	status,2,c
  5399  001C52  EF2D  F00E         	goto	u2611
  5400  001C56  EF2F  F00E         	goto	u2610
  5401  001C5A                     u2611:
  5402  001C5A  EF64  F00E         	goto	l2882
  5403  001C5E                     u2610:
  5404  001C5E  5010               	movf	___fladd@grs^0,w,c
  5405  001C60  A4D8               	btfss	status,2,c
  5406  001C62  EF35  F00E         	goto	u2621
  5407  001C66  EF37  F00E         	goto	u2620
  5408  001C6A                     u2621:
  5409  001C6A  EF64  F00E         	goto	l2882
  5410  001C6E                     u2620:
  5411  001C6E  0E00               	movlw	0
  5412  001C70  6E01               	movwf	?___fladd^0,c
  5413  001C72  0E00               	movlw	0
  5414  001C74  6E02               	movwf	(?___fladd+1)^0,c
  5415  001C76  0E00               	movlw	0
  5416  001C78  6E03               	movwf	(?___fladd+2)^0,c
  5417  001C7A  0E00               	movlw	0
  5418  001C7C  6E04               	movwf	(?___fladd+3)^0,c
  5419  001C7E  EFFF  F00E         	goto	l683
  5420  001C82                     l2866:
  5421  001C82  90D8               	bcf	status,0,c
  5422  001C84  3601               	rlcf	___fladd@b^0,f,c
  5423  001C86  3602               	rlcf	(___fladd@b+1)^0,f,c
  5424  001C88  3603               	rlcf	(___fladd@b+2)^0,f,c
  5425  001C8A  3604               	rlcf	(___fladd@b+3)^0,f,c
  5426  001C8C  AE10               	btfss	___fladd@grs^0,7,c
  5427  001C8E  EF4B  F00E         	goto	u2631
  5428  001C92  EF4D  F00E         	goto	u2630
  5429  001C96                     u2631:
  5430  001C96  EF4E  F00E         	goto	l2872
  5431  001C9A                     u2630:
  5432  001C9A  8001               	bsf	___fladd@b^0,0,c
  5433  001C9C                     l2872:
  5434  001C9C  A010               	btfss	___fladd@grs^0,0,c
  5435  001C9E  EF53  F00E         	goto	u2641
  5436  001CA2  EF55  F00E         	goto	u2640
  5437  001CA6                     u2641:
  5438  001CA6  EF59  F00E         	goto	l2876
  5439  001CAA                     u2640:
  5440  001CAA  80D8               	bsf	status,0,c
  5441  001CAC  3610               	rlcf	___fladd@grs^0,f,c
  5442  001CAE  EF5B  F00E         	goto	l2878
  5443  001CB2                     l2876:
  5444  001CB2  90D8               	bcf	status,0,c
  5445  001CB4  3610               	rlcf	___fladd@grs^0,f,c
  5446  001CB6                     l2878:
  5447  001CB6  500F               	movf	___fladd@bexp^0,w,c
  5448  001CB8  B4D8               	btfsc	status,2,c
  5449  001CBA  EF61  F00E         	goto	u2651
  5450  001CBE  EF63  F00E         	goto	u2650
  5451  001CC2                     u2651:
  5452  001CC2  EF64  F00E         	goto	l2882
  5453  001CC6                     u2650:
  5454  001CC6  060F               	decf	___fladd@bexp^0,f,c
  5455  001CC8                     l2882:
  5456  001CC8  AE03               	btfss	(___fladd@b+2)^0,7,c
  5457  001CCA  EF69  F00E         	goto	u2661
  5458  001CCE  EF6B  F00E         	goto	u2660
  5459  001CD2                     u2661:
  5460  001CD2  EF41  F00E         	goto	l2866
  5461  001CD6                     u2660:
  5462  001CD6                     l2884:
  5463  001CD6  0E00               	movlw	0
  5464  001CD8  6E0E               	movwf	___fladd@aexp^0,c
  5465  001CDA  AE10               	btfss	___fladd@grs^0,7,c
  5466  001CDC  EF72  F00E         	goto	u2671
  5467  001CE0  EF74  F00E         	goto	u2670
  5468  001CE4                     u2671:
  5469  001CE4  EF8C  F00E         	goto	l700
  5470  001CE8                     u2670:
  5471  001CE8  C010  F009         	movff	___fladd@grs,??___fladd
  5472  001CEC  0E7F               	movlw	127
  5473  001CEE  1609               	andwf	??___fladd^0,f,c
  5474  001CF0  B4D8               	btfsc	status,2,c
  5475  001CF2  EF7D  F00E         	goto	u2681
  5476  001CF6  EF7F  F00E         	goto	u2680
  5477  001CFA                     u2681:
  5478  001CFA  EF83  F00E         	goto	l701
  5479  001CFE                     u2680:
  5480  001CFE                     l2890:
  5481  001CFE  0E01               	movlw	1
  5482  001D00  6E0E               	movwf	___fladd@aexp^0,c
  5483  001D02  EF8C  F00E         	goto	l700
  5484  001D06                     l701:
  5485  001D06  A001               	btfss	___fladd@b^0,0,c
  5486  001D08  EF88  F00E         	goto	u2691
  5487  001D0C  EF8A  F00E         	goto	u2690
  5488  001D10                     u2691:
  5489  001D10  EF8C  F00E         	goto	l700
  5490  001D14                     u2690:
  5491  001D14  EF7F  F00E         	goto	l2890
  5492  001D18                     l700:
  5493  001D18  500E               	movf	___fladd@aexp^0,w,c
  5494  001D1A  B4D8               	btfsc	status,2,c
  5495  001D1C  EF92  F00E         	goto	u2701
  5496  001D20  EF94  F00E         	goto	u2700
  5497  001D24                     u2701:
  5498  001D24  EFBF  F00E         	goto	l2902
  5499  001D28                     u2700:
  5500  001D28  0E01               	movlw	1
  5501  001D2A  2601               	addwf	___fladd@b^0,f,c
  5502  001D2C  0E00               	movlw	0
  5503  001D2E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5504  001D30  2203               	addwfc	(___fladd@b+2)^0,f,c
  5505  001D32  2204               	addwfc	(___fladd@b+3)^0,f,c
  5506  001D34  A004               	btfss	(___fladd@b+3)^0,0,c
  5507  001D36  EF9F  F00E         	goto	u2711
  5508  001D3A  EFA1  F00E         	goto	u2710
  5509  001D3E                     u2711:
  5510  001D3E  EFBF  F00E         	goto	l2902
  5511  001D42                     u2710:
  5512  001D42  C001  F009         	movff	___fladd@b,??___fladd
  5513  001D46  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5514  001D4A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5515  001D4E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5516  001D52  340C               	rlcf	(??___fladd+3)^0,w,c
  5517  001D54  320C               	rrcf	(??___fladd+3)^0,f,c
  5518  001D56  320B               	rrcf	(??___fladd+2)^0,f,c
  5519  001D58  320A               	rrcf	(??___fladd+1)^0,f,c
  5520  001D5A  3209               	rrcf	??___fladd^0,f,c
  5521  001D5C  C009  F001         	movff	??___fladd,___fladd@b
  5522  001D60  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5523  001D64  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5524  001D68  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5525  001D6C  280F               	incf	___fladd@bexp^0,w,c
  5526  001D6E  B4D8               	btfsc	status,2,c
  5527  001D70  EFBC  F00E         	goto	u2721
  5528  001D74  EFBE  F00E         	goto	u2720
  5529  001D78                     u2721:
  5530  001D78  EFBF  F00E         	goto	l2902
  5531  001D7C                     u2720:
  5532  001D7C  2A0F               	incf	___fladd@bexp^0,f,c
  5533  001D7E                     l2902:
  5534  001D7E  280F               	incf	___fladd@bexp^0,w,c
  5535  001D80  B4D8               	btfsc	status,2,c
  5536  001D82  EFC5  F00E         	goto	u2731
  5537  001D86  EFC7  F00E         	goto	u2730
  5538  001D8A                     u2731:
  5539  001D8A  EFCF  F00E         	goto	l2906
  5540  001D8E                     u2730:
  5541  001D8E  500F               	movf	___fladd@bexp^0,w,c
  5542  001D90  A4D8               	btfss	status,2,c
  5543  001D92  EFCD  F00E         	goto	u2741
  5544  001D96  EFCF  F00E         	goto	u2740
  5545  001D9A                     u2741:
  5546  001D9A  EFE1  F00E         	goto	l2910
  5547  001D9E                     u2740:
  5548  001D9E                     l2906:
  5549  001D9E  0E00               	movlw	0
  5550  001DA0  6E01               	movwf	___fladd@b^0,c
  5551  001DA2  0E00               	movlw	0
  5552  001DA4  6E02               	movwf	(___fladd@b+1)^0,c
  5553  001DA6  0E00               	movlw	0
  5554  001DA8  6E03               	movwf	(___fladd@b+2)^0,c
  5555  001DAA  0E00               	movlw	0
  5556  001DAC  6E04               	movwf	(___fladd@b+3)^0,c
  5557  001DAE  500F               	movf	___fladd@bexp^0,w,c
  5558  001DB0  A4D8               	btfss	status,2,c
  5559  001DB2  EFDD  F00E         	goto	u2751
  5560  001DB6  EFDF  F00E         	goto	u2750
  5561  001DBA                     u2751:
  5562  001DBA  EFE1  F00E         	goto	l2910
  5563  001DBE                     u2750:
  5564  001DBE  0E00               	movlw	0
  5565  001DC0  6E0D               	movwf	___fladd@signs^0,c
  5566  001DC2                     l2910:
  5567  001DC2  A00F               	btfss	___fladd@bexp^0,0,c
  5568  001DC4  EFE6  F00E         	goto	u2761
  5569  001DC8  EFE8  F00E         	goto	u2760
  5570  001DCC                     u2761:
  5571  001DCC  EFEB  F00E         	goto	l2914
  5572  001DD0                     u2760:
  5573  001DD0  8E03               	bsf	(___fladd@b+2)^0,7,c
  5574  001DD2  EFEC  F00E         	goto	l2916
  5575  001DD6                     l2914:
  5576  001DD6  9E03               	bcf	(___fladd@b+2)^0,7,c
  5577  001DD8                     l2916:
  5578  001DD8  90D8               	bcf	status,0,c
  5579  001DDA  300F               	rrcf	___fladd@bexp^0,w,c
  5580  001DDC  6E04               	movwf	(___fladd@b+3)^0,c
  5581  001DDE  AE0D               	btfss	___fladd@signs^0,7,c
  5582  001DE0  EFF4  F00E         	goto	u2771
  5583  001DE4  EFF6  F00E         	goto	u2770
  5584  001DE8                     u2771:
  5585  001DE8  EFF7  F00E         	goto	l2922
  5586  001DEC                     u2770:
  5587  001DEC  8E04               	bsf	(___fladd@b+3)^0,7,c
  5588  001DEE                     l2922:
  5589  001DEE  C001  F001         	movff	___fladd@b,?___fladd
  5590  001DF2  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5591  001DF6  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5592  001DFA  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5593  001DFE                     l683:
  5594  001DFE  0012               	return		;funcret
  5595  001E00                     __end_of___fladd:
  5596                           	callstack 0
  5597                           
  5598 ;; *************** function ___flneg *****************
  5599 ;; Defined at:
  5600 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  f1              4    0[COMRAM] unsigned char 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;		None
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  4    0[COMRAM] unsigned char 
  5607 ;; Registers used:
  5608 ;;		wreg, status,2, status,0
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5614 ;;      Params:         4       0       0       0       0       0       0       0       0
  5615 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5617 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5618 ;;Total ram usage:        4 bytes
  5619 ;; Hardware stack levels used: 1
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		_efgtoa
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           	psect	text19
  5628  0037F8                     __ptext19:
  5629                           	callstack 0
  5630  0037F8                     ___flneg:
  5631                           	callstack 26
  5632  0037F8  5001               	movf	___flneg@f1^0,w,c
  5633  0037FA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5634  0037FC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5635  0037FE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5636  003800  B4D8               	btfsc	status,2,c
  5637  003802  EF05  F01C         	goto	u3481
  5638  003806  EF07  F01C         	goto	u3480
  5639  00380A                     u3481:
  5640  00380A  EF0F  F01C         	goto	l3376
  5641  00380E                     u3480:
  5642  00380E  0E00               	movlw	0
  5643  003810  1A01               	xorwf	___flneg@f1^0,f,c
  5644  003812  0E00               	movlw	0
  5645  003814  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5646  003816  0E00               	movlw	0
  5647  003818  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5648  00381A  0E80               	movlw	128
  5649  00381C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5650  00381E                     l3376:
  5651  00381E  C001  F001         	movff	___flneg@f1,?___flneg
  5652  003822  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5653  003826  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5654  00382A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5655  00382E  0012               	return		;funcret
  5656  003830                     __end_of___flneg:
  5657                           	callstack 0
  5658                           
  5659 ;; *************** function ___flmul *****************
  5660 ;; Defined at:
  5661 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  b               4   14[COMRAM] unsigned char 
  5664 ;;  a               4   18[COMRAM] unsigned char 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  prod            4   33[COMRAM] struct .
  5667 ;;  grs             4   27[COMRAM] unsigned long 
  5668 ;;  temp            2   37[COMRAM] struct .
  5669 ;;  bexp            1   32[COMRAM] unsigned char 
  5670 ;;  aexp            1   31[COMRAM] unsigned char 
  5671 ;;  sign            1   26[COMRAM] unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  4   14[COMRAM] unsigned char 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0, prodl, prodh
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5681 ;;      Params:         8       0       0       0       0       0       0       0       0
  5682 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5683 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5684 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5685 ;;Total ram usage:       25 bytes
  5686 ;; Hardware stack levels used: 1
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_main
  5691 ;;		_efgtoa
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text20
  5696  001E00                     __ptext20:
  5697                           	callstack 0
  5698  001E00                     ___flmul:
  5699                           	callstack 26
  5700  001E00  5012               	movf	(___flmul@b+3)^0,w,c
  5701  001E02  0B80               	andlw	128
  5702  001E04  6E1B               	movwf	___flmul@sign^0,c
  5703  001E06  5012               	movf	(___flmul@b+3)^0,w,c
  5704  001E08  2412               	addwf	(___flmul@b+3)^0,w,c
  5705  001E0A  6E21               	movwf	___flmul@bexp^0,c
  5706  001E0C  AE11               	btfss	(___flmul@b+2)^0,7,c
  5707  001E0E  EF0B  F00F         	goto	u3091
  5708  001E12  EF0D  F00F         	goto	u3090
  5709  001E16                     u3091:
  5710  001E16  EF0E  F00F         	goto	l3124
  5711  001E1A                     u3090:
  5712  001E1A  8021               	bsf	___flmul@bexp^0,0,c
  5713  001E1C                     l3124:
  5714  001E1C  5021               	movf	___flmul@bexp^0,w,c
  5715  001E1E  B4D8               	btfsc	status,2,c
  5716  001E20  EF14  F00F         	goto	u3101
  5717  001E24  EF16  F00F         	goto	u3100
  5718  001E28                     u3101:
  5719  001E28  EF29  F00F         	goto	l3132
  5720  001E2C                     u3100:
  5721  001E2C  2821               	incf	___flmul@bexp^0,w,c
  5722  001E2E  A4D8               	btfss	status,2,c
  5723  001E30  EF1C  F00F         	goto	u3111
  5724  001E34  EF1E  F00F         	goto	u3110
  5725  001E38                     u3111:
  5726  001E38  EF26  F00F         	goto	l3130
  5727  001E3C                     u3110:
  5728  001E3C  0E00               	movlw	0
  5729  001E3E  6E0F               	movwf	___flmul@b^0,c
  5730  001E40  0E00               	movlw	0
  5731  001E42  6E10               	movwf	(___flmul@b+1)^0,c
  5732  001E44  0E00               	movlw	0
  5733  001E46  6E11               	movwf	(___flmul@b+2)^0,c
  5734  001E48  0E00               	movlw	0
  5735  001E4A  6E12               	movwf	(___flmul@b+3)^0,c
  5736  001E4C                     l3130:
  5737  001E4C  8E11               	bsf	(___flmul@b+2)^0,7,c
  5738  001E4E  EF31  F00F         	goto	l3134
  5739  001E52                     l3132:
  5740  001E52  0E00               	movlw	0
  5741  001E54  6E0F               	movwf	___flmul@b^0,c
  5742  001E56  0E00               	movlw	0
  5743  001E58  6E10               	movwf	(___flmul@b+1)^0,c
  5744  001E5A  0E00               	movlw	0
  5745  001E5C  6E11               	movwf	(___flmul@b+2)^0,c
  5746  001E5E  0E00               	movlw	0
  5747  001E60  6E12               	movwf	(___flmul@b+3)^0,c
  5748  001E62                     l3134:
  5749  001E62  5016               	movf	(___flmul@a+3)^0,w,c
  5750  001E64  0B80               	andlw	128
  5751  001E66  1A1B               	xorwf	___flmul@sign^0,f,c
  5752  001E68  5016               	movf	(___flmul@a+3)^0,w,c
  5753  001E6A  2416               	addwf	(___flmul@a+3)^0,w,c
  5754  001E6C  6E20               	movwf	___flmul@aexp^0,c
  5755  001E6E  AE15               	btfss	(___flmul@a+2)^0,7,c
  5756  001E70  EF3C  F00F         	goto	u3121
  5757  001E74  EF3E  F00F         	goto	u3120
  5758  001E78                     u3121:
  5759  001E78  EF3F  F00F         	goto	l3142
  5760  001E7C                     u3120:
  5761  001E7C  8020               	bsf	___flmul@aexp^0,0,c
  5762  001E7E                     l3142:
  5763  001E7E  5020               	movf	___flmul@aexp^0,w,c
  5764  001E80  B4D8               	btfsc	status,2,c
  5765  001E82  EF45  F00F         	goto	u3131
  5766  001E86  EF47  F00F         	goto	u3130
  5767  001E8A                     u3131:
  5768  001E8A  EF5A  F00F         	goto	l3150
  5769  001E8E                     u3130:
  5770  001E8E  2820               	incf	___flmul@aexp^0,w,c
  5771  001E90  A4D8               	btfss	status,2,c
  5772  001E92  EF4D  F00F         	goto	u3141
  5773  001E96  EF4F  F00F         	goto	u3140
  5774  001E9A                     u3141:
  5775  001E9A  EF57  F00F         	goto	l3148
  5776  001E9E                     u3140:
  5777  001E9E  0E00               	movlw	0
  5778  001EA0  6E13               	movwf	___flmul@a^0,c
  5779  001EA2  0E00               	movlw	0
  5780  001EA4  6E14               	movwf	(___flmul@a+1)^0,c
  5781  001EA6  0E00               	movlw	0
  5782  001EA8  6E15               	movwf	(___flmul@a+2)^0,c
  5783  001EAA  0E00               	movlw	0
  5784  001EAC  6E16               	movwf	(___flmul@a+3)^0,c
  5785  001EAE                     l3148:
  5786  001EAE  8E15               	bsf	(___flmul@a+2)^0,7,c
  5787  001EB0  EF62  F00F         	goto	l760
  5788  001EB4                     l3150:
  5789  001EB4  0E00               	movlw	0
  5790  001EB6  6E13               	movwf	___flmul@a^0,c
  5791  001EB8  0E00               	movlw	0
  5792  001EBA  6E14               	movwf	(___flmul@a+1)^0,c
  5793  001EBC  0E00               	movlw	0
  5794  001EBE  6E15               	movwf	(___flmul@a+2)^0,c
  5795  001EC0  0E00               	movlw	0
  5796  001EC2  6E16               	movwf	(___flmul@a+3)^0,c
  5797  001EC4                     l760:
  5798  001EC4  5020               	movf	___flmul@aexp^0,w,c
  5799  001EC6  B4D8               	btfsc	status,2,c
  5800  001EC8  EF68  F00F         	goto	u3151
  5801  001ECC  EF6A  F00F         	goto	u3150
  5802  001ED0                     u3151:
  5803  001ED0  EF72  F00F         	goto	l3154
  5804  001ED4                     u3150:
  5805  001ED4  5021               	movf	___flmul@bexp^0,w,c
  5806  001ED6  A4D8               	btfss	status,2,c
  5807  001ED8  EF70  F00F         	goto	u3161
  5808  001EDC  EF72  F00F         	goto	u3160
  5809  001EE0                     u3161:
  5810  001EE0  EF7C  F00F         	goto	l3158
  5811  001EE4                     u3160:
  5812  001EE4                     l3154:
  5813  001EE4  0E00               	movlw	0
  5814  001EE6  6E0F               	movwf	?___flmul^0,c
  5815  001EE8  0E00               	movlw	0
  5816  001EEA  6E10               	movwf	(?___flmul+1)^0,c
  5817  001EEC  0E00               	movlw	0
  5818  001EEE  6E11               	movwf	(?___flmul+2)^0,c
  5819  001EF0  0E00               	movlw	0
  5820  001EF2  6E12               	movwf	(?___flmul+3)^0,c
  5821  001EF4  EF14  F011         	goto	l764
  5822  001EF8                     l3158:
  5823  001EF8  5015               	movf	(___flmul@a+2)^0,w,c
  5824  001EFA  020F               	mulwf	___flmul@b^0,c
  5825  001EFC  CFF3 F026          	movff	prodl,___flmul@temp
  5826  001F00  CFF4 F027          	movff	prodh,___flmul@temp+1
  5827  001F04  5026               	movf	___flmul@temp^0,w,c
  5828  001F06  6E1C               	movwf	___flmul@grs^0,c
  5829  001F08  6A1D               	clrf	(___flmul@grs+1)^0,c
  5830  001F0A  6A1E               	clrf	(___flmul@grs+2)^0,c
  5831  001F0C  6A1F               	clrf	(___flmul@grs+3)^0,c
  5832  001F0E  5027               	movf	(___flmul@temp+1)^0,w,c
  5833  001F10  6E22               	movwf	___flmul@prod^0,c
  5834  001F12  6A23               	clrf	(___flmul@prod+1)^0,c
  5835  001F14  6A24               	clrf	(___flmul@prod+2)^0,c
  5836  001F16  6A25               	clrf	(___flmul@prod+3)^0,c
  5837  001F18  5014               	movf	(___flmul@a+1)^0,w,c
  5838  001F1A  0210               	mulwf	(___flmul@b+1)^0,c
  5839  001F1C  CFF3 F026          	movff	prodl,___flmul@temp
  5840  001F20  CFF4 F027          	movff	prodh,___flmul@temp+1
  5841  001F24  5026               	movf	___flmul@temp^0,w,c
  5842  001F26  261C               	addwf	___flmul@grs^0,f,c
  5843  001F28  0E00               	movlw	0
  5844  001F2A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5845  001F2C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5846  001F2E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5847  001F30  5027               	movf	(___flmul@temp+1)^0,w,c
  5848  001F32  2622               	addwf	___flmul@prod^0,f,c
  5849  001F34  0E00               	movlw	0
  5850  001F36  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5851  001F38  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5852  001F3A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5853  001F3C  5013               	movf	___flmul@a^0,w,c
  5854  001F3E  0211               	mulwf	(___flmul@b+2)^0,c
  5855  001F40  CFF3 F026          	movff	prodl,___flmul@temp
  5856  001F44  CFF4 F027          	movff	prodh,___flmul@temp+1
  5857  001F48  5026               	movf	___flmul@temp^0,w,c
  5858  001F4A  261C               	addwf	___flmul@grs^0,f,c
  5859  001F4C  0E00               	movlw	0
  5860  001F4E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5861  001F50  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5862  001F52  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5863  001F54  5027               	movf	(___flmul@temp+1)^0,w,c
  5864  001F56  2622               	addwf	___flmul@prod^0,f,c
  5865  001F58  0E00               	movlw	0
  5866  001F5A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5867  001F5C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5868  001F5E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5869  001F60  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5870  001F64  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5871  001F68  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5872  001F6C  6A1C               	clrf	___flmul@grs^0,c
  5873  001F6E  5013               	movf	___flmul@a^0,w,c
  5874  001F70  0210               	mulwf	(___flmul@b+1)^0,c
  5875  001F72  CFF3 F026          	movff	prodl,___flmul@temp
  5876  001F76  CFF4 F027          	movff	prodh,___flmul@temp+1
  5877  001F7A  5026               	movf	___flmul@temp^0,w,c
  5878  001F7C  261C               	addwf	___flmul@grs^0,f,c
  5879  001F7E  5027               	movf	(___flmul@temp+1)^0,w,c
  5880  001F80  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5881  001F82  0E00               	movlw	0
  5882  001F84  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5883  001F86  0E00               	movlw	0
  5884  001F88  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5885  001F8A  5014               	movf	(___flmul@a+1)^0,w,c
  5886  001F8C  020F               	mulwf	___flmul@b^0,c
  5887  001F8E  CFF3 F026          	movff	prodl,___flmul@temp
  5888  001F92  CFF4 F027          	movff	prodh,___flmul@temp+1
  5889  001F96  5026               	movf	___flmul@temp^0,w,c
  5890  001F98  261C               	addwf	___flmul@grs^0,f,c
  5891  001F9A  5027               	movf	(___flmul@temp+1)^0,w,c
  5892  001F9C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5893  001F9E  0E00               	movlw	0
  5894  001FA0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5895  001FA2  0E00               	movlw	0
  5896  001FA4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5897  001FA6  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5898  001FAA  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5899  001FAE  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5900  001FB2  6A1C               	clrf	___flmul@grs^0,c
  5901  001FB4  5013               	movf	___flmul@a^0,w,c
  5902  001FB6  020F               	mulwf	___flmul@b^0,c
  5903  001FB8  CFF3 F026          	movff	prodl,___flmul@temp
  5904  001FBC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5905  001FC0  5026               	movf	___flmul@temp^0,w,c
  5906  001FC2  261C               	addwf	___flmul@grs^0,f,c
  5907  001FC4  5027               	movf	(___flmul@temp+1)^0,w,c
  5908  001FC6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5909  001FC8  0E00               	movlw	0
  5910  001FCA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5911  001FCC  0E00               	movlw	0
  5912  001FCE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5913  001FD0  5015               	movf	(___flmul@a+2)^0,w,c
  5914  001FD2  0210               	mulwf	(___flmul@b+1)^0,c
  5915  001FD4  CFF3 F026          	movff	prodl,___flmul@temp
  5916  001FD8  CFF4 F027          	movff	prodh,___flmul@temp+1
  5917  001FDC  5026               	movf	___flmul@temp^0,w,c
  5918  001FDE  2622               	addwf	___flmul@prod^0,f,c
  5919  001FE0  5027               	movf	(___flmul@temp+1)^0,w,c
  5920  001FE2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5921  001FE4  0E00               	movlw	0
  5922  001FE6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5923  001FE8  0E00               	movlw	0
  5924  001FEA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5925  001FEC  5014               	movf	(___flmul@a+1)^0,w,c
  5926  001FEE  0211               	mulwf	(___flmul@b+2)^0,c
  5927  001FF0  CFF3 F026          	movff	prodl,___flmul@temp
  5928  001FF4  CFF4 F027          	movff	prodh,___flmul@temp+1
  5929  001FF8  5026               	movf	___flmul@temp^0,w,c
  5930  001FFA  2622               	addwf	___flmul@prod^0,f,c
  5931  001FFC  5027               	movf	(___flmul@temp+1)^0,w,c
  5932  001FFE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5933  002000  0E00               	movlw	0
  5934  002002  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5935  002004  0E00               	movlw	0
  5936  002006  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5937  002008  5015               	movf	(___flmul@a+2)^0,w,c
  5938  00200A  0211               	mulwf	(___flmul@b+2)^0,c
  5939  00200C  CFF3 F026          	movff	prodl,___flmul@temp
  5940  002010  CFF4 F027          	movff	prodh,___flmul@temp+1
  5941  002014  5026               	movf	___flmul@temp^0,w,c
  5942  002016  6E17               	movwf	??___flmul^0,c
  5943  002018  5027               	movf	(___flmul@temp+1)^0,w,c
  5944  00201A  6E18               	movwf	(??___flmul+1)^0,c
  5945  00201C  6A19               	clrf	(??___flmul+2)^0,c
  5946  00201E  6A1A               	clrf	(??___flmul+3)^0,c
  5947  002020  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5948  002024  C018  F019         	movff	??___flmul+1,??___flmul+2
  5949  002028  C017  F018         	movff	??___flmul,??___flmul+1
  5950  00202C  6A17               	clrf	??___flmul^0,c
  5951  00202E  5017               	movf	??___flmul^0,w,c
  5952  002030  2622               	addwf	___flmul@prod^0,f,c
  5953  002032  5018               	movf	(??___flmul+1)^0,w,c
  5954  002034  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5955  002036  5019               	movf	(??___flmul+2)^0,w,c
  5956  002038  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5957  00203A  501A               	movf	(??___flmul+3)^0,w,c
  5958  00203C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5959  00203E  C01C  F017         	movff	___flmul@grs,??___flmul
  5960  002042  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5961  002046  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5962  00204A  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5963  00204E  0E19               	movlw	25
  5964  002050  EF2F  F010         	goto	u3170
  5965  002054                     u3175:
  5966  002054  90D8               	bcf	status,0,c
  5967  002056  321A               	rrcf	(??___flmul+3)^0,f,c
  5968  002058  3219               	rrcf	(??___flmul+2)^0,f,c
  5969  00205A  3218               	rrcf	(??___flmul+1)^0,f,c
  5970  00205C  3217               	rrcf	??___flmul^0,f,c
  5971  00205E                     u3170:
  5972  00205E  2EE8               	decfsz	wreg,f,c
  5973  002060  EF2A  F010         	goto	u3175
  5974  002064  5017               	movf	??___flmul^0,w,c
  5975  002066  2622               	addwf	___flmul@prod^0,f,c
  5976  002068  5018               	movf	(??___flmul+1)^0,w,c
  5977  00206A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5978  00206C  5019               	movf	(??___flmul+2)^0,w,c
  5979  00206E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5980  002070  501A               	movf	(??___flmul+3)^0,w,c
  5981  002072  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5982  002074  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5983  002078  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5984  00207C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5985  002080  6A1C               	clrf	___flmul@grs^0,c
  5986  002082  5020               	movf	___flmul@aexp^0,w,c
  5987  002084  C021  F017         	movff	___flmul@bexp,??___flmul
  5988  002088  6A18               	clrf	(??___flmul+1)^0,c
  5989  00208A  2617               	addwf	??___flmul^0,f,c
  5990  00208C  0E00               	movlw	0
  5991  00208E  2218               	addwfc	(??___flmul+1)^0,f,c
  5992  002090  0E82               	movlw	130
  5993  002092  2417               	addwf	??___flmul^0,w,c
  5994  002094  6E26               	movwf	___flmul@temp^0,c
  5995  002096  0EFF               	movlw	255
  5996  002098  2018               	addwfc	(??___flmul+1)^0,w,c
  5997  00209A  6E27               	movwf	(___flmul@temp+1)^0,c
  5998  00209C  EF65  F010         	goto	l3206
  5999  0020A0                     l3200:
  6000  0020A0  90D8               	bcf	status,0,c
  6001  0020A2  3622               	rlcf	___flmul@prod^0,f,c
  6002  0020A4  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6003  0020A6  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6004  0020A8  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6005  0020AA  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6006  0020AC  EF5A  F010         	goto	u3181
  6007  0020B0  EF5C  F010         	goto	u3180
  6008  0020B4                     u3181:
  6009  0020B4  EF5D  F010         	goto	l767
  6010  0020B8                     u3180:
  6011  0020B8  8022               	bsf	___flmul@prod^0,0,c
  6012  0020BA                     l767:
  6013  0020BA  90D8               	bcf	status,0,c
  6014  0020BC  361C               	rlcf	___flmul@grs^0,f,c
  6015  0020BE  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6016  0020C0  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6017  0020C2  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6018  0020C4  0626               	decf	___flmul@temp^0,f,c
  6019  0020C6  A0D8               	btfss	status,0,c
  6020  0020C8  0627               	decf	(___flmul@temp+1)^0,f,c
  6021  0020CA                     l3206:
  6022  0020CA  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6023  0020CC  EF6A  F010         	goto	u3191
  6024  0020D0  EF6C  F010         	goto	u3190
  6025  0020D4                     u3191:
  6026  0020D4  EF50  F010         	goto	l3200
  6027  0020D8                     u3190:
  6028  0020D8  0E00               	movlw	0
  6029  0020DA  6E20               	movwf	___flmul@aexp^0,c
  6030  0020DC  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6031  0020DE  EF73  F010         	goto	u3201
  6032  0020E2  EF75  F010         	goto	u3200
  6033  0020E6                     u3201:
  6034  0020E6  EF99  F010         	goto	l769
  6035  0020EA                     u3200:
  6036  0020EA  0EFF               	movlw	255
  6037  0020EC  141C               	andwf	___flmul@grs^0,w,c
  6038  0020EE  6E17               	movwf	??___flmul^0,c
  6039  0020F0  0EFF               	movlw	255
  6040  0020F2  141D               	andwf	(___flmul@grs+1)^0,w,c
  6041  0020F4  6E18               	movwf	(??___flmul+1)^0,c
  6042  0020F6  0EFF               	movlw	255
  6043  0020F8  141E               	andwf	(___flmul@grs+2)^0,w,c
  6044  0020FA  6E19               	movwf	(??___flmul+2)^0,c
  6045  0020FC  0E7F               	movlw	127
  6046  0020FE  141F               	andwf	(___flmul@grs+3)^0,w,c
  6047  002100  6E1A               	movwf	(??___flmul+3)^0,c
  6048  002102  5017               	movf	??___flmul^0,w,c
  6049  002104  1018               	iorwf	(??___flmul+1)^0,w,c
  6050  002106  1019               	iorwf	(??___flmul+2)^0,w,c
  6051  002108  101A               	iorwf	(??___flmul+3)^0,w,c
  6052  00210A  B4D8               	btfsc	status,2,c
  6053  00210C  EF8A  F010         	goto	u3211
  6054  002110  EF8C  F010         	goto	u3210
  6055  002114                     u3211:
  6056  002114  EF90  F010         	goto	l770
  6057  002118                     u3210:
  6058  002118                     l3214:
  6059  002118  0E01               	movlw	1
  6060  00211A  6E20               	movwf	___flmul@aexp^0,c
  6061  00211C  EF99  F010         	goto	l769
  6062  002120                     l770:
  6063  002120  A022               	btfss	___flmul@prod^0,0,c
  6064  002122  EF95  F010         	goto	u3221
  6065  002126  EF97  F010         	goto	u3220
  6066  00212A                     u3221:
  6067  00212A  EF99  F010         	goto	l769
  6068  00212E                     u3220:
  6069  00212E  EF8C  F010         	goto	l3214
  6070  002132                     l769:
  6071  002132  5020               	movf	___flmul@aexp^0,w,c
  6072  002134  B4D8               	btfsc	status,2,c
  6073  002136  EF9F  F010         	goto	u3231
  6074  00213A  EFA1  F010         	goto	u3230
  6075  00213E                     u3231:
  6076  00213E  EFC5  F010         	goto	l3226
  6077  002142                     u3230:
  6078  002142  0E01               	movlw	1
  6079  002144  2622               	addwf	___flmul@prod^0,f,c
  6080  002146  0E00               	movlw	0
  6081  002148  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6082  00214A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6083  00214C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6084  00214E  A025               	btfss	(___flmul@prod+3)^0,0,c
  6085  002150  EFAC  F010         	goto	u3241
  6086  002154  EFAE  F010         	goto	u3240
  6087  002158                     u3241:
  6088  002158  EFC5  F010         	goto	l3226
  6089  00215C                     u3240:
  6090  00215C  C022  F017         	movff	___flmul@prod,??___flmul
  6091  002160  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6092  002164  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6093  002168  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6094  00216C  341A               	rlcf	(??___flmul+3)^0,w,c
  6095  00216E  321A               	rrcf	(??___flmul+3)^0,f,c
  6096  002170  3219               	rrcf	(??___flmul+2)^0,f,c
  6097  002172  3218               	rrcf	(??___flmul+1)^0,f,c
  6098  002174  3217               	rrcf	??___flmul^0,f,c
  6099  002176  C017  F022         	movff	??___flmul,___flmul@prod
  6100  00217A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6101  00217E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6102  002182  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6103  002186  4A26               	infsnz	___flmul@temp^0,f,c
  6104  002188  2A27               	incf	(___flmul@temp+1)^0,f,c
  6105  00218A                     l3226:
  6106  00218A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6107  00218C  EFD0  F010         	goto	u3251
  6108  002190  5027               	movf	(___flmul@temp+1)^0,w,c
  6109  002192  E108               	bnz	u3250
  6110  002194  2826               	incf	___flmul@temp^0,w,c
  6111  002196  A0D8               	btfss	status,0,c
  6112  002198  EFD0  F010         	goto	u3251
  6113  00219C  EFD2  F010         	goto	u3250
  6114  0021A0                     u3251:
  6115  0021A0  EFDC  F010         	goto	l3230
  6116  0021A4                     u3250:
  6117  0021A4  0E00               	movlw	0
  6118  0021A6  6E22               	movwf	___flmul@prod^0,c
  6119  0021A8  0E00               	movlw	0
  6120  0021AA  6E23               	movwf	(___flmul@prod+1)^0,c
  6121  0021AC  0E80               	movlw	128
  6122  0021AE  6E24               	movwf	(___flmul@prod+2)^0,c
  6123  0021B0  0E7F               	movlw	127
  6124  0021B2  6E25               	movwf	(___flmul@prod+3)^0,c
  6125  0021B4  EF0A  F011         	goto	l3242
  6126  0021B8                     l3230:
  6127  0021B8  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6128  0021BA  EFE9  F010         	goto	u3260
  6129  0021BE  5027               	movf	(___flmul@temp+1)^0,w,c
  6130  0021C0  E106               	bnz	u3261
  6131  0021C2  0426               	decf	___flmul@temp^0,w,c
  6132  0021C4  B0D8               	btfsc	status,0,c
  6133  0021C6  EFE7  F010         	goto	u3261
  6134  0021CA  EFE9  F010         	goto	u3260
  6135  0021CE                     u3261:
  6136  0021CE  EFF5  F010         	goto	l777
  6137  0021D2                     u3260:
  6138  0021D2  0E00               	movlw	0
  6139  0021D4  6E22               	movwf	___flmul@prod^0,c
  6140  0021D6  0E00               	movlw	0
  6141  0021D8  6E23               	movwf	(___flmul@prod+1)^0,c
  6142  0021DA  0E00               	movlw	0
  6143  0021DC  6E24               	movwf	(___flmul@prod+2)^0,c
  6144  0021DE  0E00               	movlw	0
  6145  0021E0  6E25               	movwf	(___flmul@prod+3)^0,c
  6146  0021E2  0E00               	movlw	0
  6147  0021E4  6E1B               	movwf	___flmul@sign^0,c
  6148  0021E6  EF0A  F011         	goto	l3242
  6149  0021EA                     l777:
  6150  0021EA  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6151  0021EE  0EFF               	movlw	255
  6152  0021F0  1622               	andwf	___flmul@prod^0,f,c
  6153  0021F2  0EFF               	movlw	255
  6154  0021F4  1623               	andwf	(___flmul@prod+1)^0,f,c
  6155  0021F6  0E7F               	movlw	127
  6156  0021F8  1624               	andwf	(___flmul@prod+2)^0,f,c
  6157  0021FA  0E00               	movlw	0
  6158  0021FC  1625               	andwf	(___flmul@prod+3)^0,f,c
  6159  0021FE  A021               	btfss	___flmul@bexp^0,0,c
  6160  002200  EF04  F011         	goto	u3271
  6161  002204  EF06  F011         	goto	u3270
  6162  002208                     u3271:
  6163  002208  EF07  F011         	goto	l3240
  6164  00220C                     u3270:
  6165  00220C  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6166  00220E                     l3240:
  6167  00220E  90D8               	bcf	status,0,c
  6168  002210  3021               	rrcf	___flmul@bexp^0,w,c
  6169  002212  6E25               	movwf	(___flmul@prod+3)^0,c
  6170  002214                     l3242:
  6171  002214  501B               	movf	___flmul@sign^0,w,c
  6172  002216  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6173  002218  C022  F00F         	movff	___flmul@prod,?___flmul
  6174  00221C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6175  002220  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6176  002224  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6177  002228                     l764:
  6178  002228  0012               	return		;funcret
  6179  00222A                     __end_of___flmul:
  6180                           	callstack 0
  6181                           
  6182 ;; *************** function ___flge *****************
  6183 ;; Defined at:
  6184 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;  ff1             4   39[COMRAM] unsigned char 
  6187 ;;  ff2             4   43[COMRAM] unsigned char 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;		None               void
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6199 ;;      Params:         8       0       0       0       0       0       0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6201 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6202 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6203 ;;Total ram usage:       12 bytes
  6204 ;; Hardware stack levels used: 1
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		_efgtoa
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           	psect	text21
  6213  002BE6                     __ptext21:
  6214                           	callstack 0
  6215  002BE6                     ___flge:
  6216                           	callstack 26
  6217  002BE6  0E00               	movlw	0
  6218  002BE8  1428               	andwf	___flge@ff1^0,w,c
  6219  002BEA  6E30               	movwf	??___flge^0,c
  6220  002BEC  0E00               	movlw	0
  6221  002BEE  1429               	andwf	(___flge@ff1+1)^0,w,c
  6222  002BF0  6E31               	movwf	(??___flge+1)^0,c
  6223  002BF2  0E80               	movlw	128
  6224  002BF4  142A               	andwf	(___flge@ff1+2)^0,w,c
  6225  002BF6  6E32               	movwf	(??___flge+2)^0,c
  6226  002BF8  0E7F               	movlw	127
  6227  002BFA  142B               	andwf	(___flge@ff1+3)^0,w,c
  6228  002BFC  6E33               	movwf	(??___flge+3)^0,c
  6229  002BFE  5030               	movf	??___flge^0,w,c
  6230  002C00  1031               	iorwf	(??___flge+1)^0,w,c
  6231  002C02  1032               	iorwf	(??___flge+2)^0,w,c
  6232  002C04  1033               	iorwf	(??___flge+3)^0,w,c
  6233  002C06  A4D8               	btfss	status,2,c
  6234  002C08  EF08  F016         	goto	u3431
  6235  002C0C  EF0A  F016         	goto	u3430
  6236  002C10                     u3431:
  6237  002C10  EF12  F016         	goto	l3354
  6238  002C14                     u3430:
  6239  002C14  0E00               	movlw	0
  6240  002C16  6E28               	movwf	___flge@ff1^0,c
  6241  002C18  0E00               	movlw	0
  6242  002C1A  6E29               	movwf	(___flge@ff1+1)^0,c
  6243  002C1C  0E00               	movlw	0
  6244  002C1E  6E2A               	movwf	(___flge@ff1+2)^0,c
  6245  002C20  0E00               	movlw	0
  6246  002C22  6E2B               	movwf	(___flge@ff1+3)^0,c
  6247  002C24                     l3354:
  6248  002C24  0E00               	movlw	0
  6249  002C26  142C               	andwf	___flge@ff2^0,w,c
  6250  002C28  6E30               	movwf	??___flge^0,c
  6251  002C2A  0E00               	movlw	0
  6252  002C2C  142D               	andwf	(___flge@ff2+1)^0,w,c
  6253  002C2E  6E31               	movwf	(??___flge+1)^0,c
  6254  002C30  0E80               	movlw	128
  6255  002C32  142E               	andwf	(___flge@ff2+2)^0,w,c
  6256  002C34  6E32               	movwf	(??___flge+2)^0,c
  6257  002C36  0E7F               	movlw	127
  6258  002C38  142F               	andwf	(___flge@ff2+3)^0,w,c
  6259  002C3A  6E33               	movwf	(??___flge+3)^0,c
  6260  002C3C  5030               	movf	??___flge^0,w,c
  6261  002C3E  1031               	iorwf	(??___flge+1)^0,w,c
  6262  002C40  1032               	iorwf	(??___flge+2)^0,w,c
  6263  002C42  1033               	iorwf	(??___flge+3)^0,w,c
  6264  002C44  A4D8               	btfss	status,2,c
  6265  002C46  EF27  F016         	goto	u3441
  6266  002C4A  EF29  F016         	goto	u3440
  6267  002C4E                     u3441:
  6268  002C4E  EF31  F016         	goto	l3358
  6269  002C52                     u3440:
  6270  002C52  0E00               	movlw	0
  6271  002C54  6E2C               	movwf	___flge@ff2^0,c
  6272  002C56  0E00               	movlw	0
  6273  002C58  6E2D               	movwf	(___flge@ff2+1)^0,c
  6274  002C5A  0E00               	movlw	0
  6275  002C5C  6E2E               	movwf	(___flge@ff2+2)^0,c
  6276  002C5E  0E00               	movlw	0
  6277  002C60  6E2F               	movwf	(___flge@ff2+3)^0,c
  6278  002C62                     l3358:
  6279  002C62  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6280  002C64  EF36  F016         	goto	u3451
  6281  002C68  EF38  F016         	goto	u3450
  6282  002C6C                     u3451:
  6283  002C6C  EF41  F016         	goto	l3362
  6284  002C70                     u3450:
  6285  002C70  6C28               	negf	___flge@ff1^0,c
  6286  002C72  1E29               	comf	(___flge@ff1+1)^0,f,c
  6287  002C74  B0D8               	btfsc	status,0,c
  6288  002C76  2A29               	incf	(___flge@ff1+1)^0,f,c
  6289  002C78  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6290  002C7A  B0D8               	btfsc	status,0,c
  6291  002C7C  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6292  002C7E  0E80               	movlw	128
  6293  002C80  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6294  002C82                     l3362:
  6295  002C82  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6296  002C84  EF46  F016         	goto	u3461
  6297  002C88  EF48  F016         	goto	u3460
  6298  002C8C                     u3461:
  6299  002C8C  EF51  F016         	goto	l411
  6300  002C90                     u3460:
  6301  002C90  6C2C               	negf	___flge@ff2^0,c
  6302  002C92  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6303  002C94  B0D8               	btfsc	status,0,c
  6304  002C96  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6305  002C98  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6306  002C9A  B0D8               	btfsc	status,0,c
  6307  002C9C  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6308  002C9E  0E80               	movlw	128
  6309  002CA0  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6310  002CA2                     l411:
  6311  002CA2  0E00               	movlw	0
  6312  002CA4  1A28               	xorwf	___flge@ff1^0,f,c
  6313  002CA6  0E00               	movlw	0
  6314  002CA8  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6315  002CAA  0E00               	movlw	0
  6316  002CAC  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6317  002CAE  0E80               	movlw	128
  6318  002CB0  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6319  002CB2  0E00               	movlw	0
  6320  002CB4  1A2C               	xorwf	___flge@ff2^0,f,c
  6321  002CB6  0E00               	movlw	0
  6322  002CB8  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6323  002CBA  0E00               	movlw	0
  6324  002CBC  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6325  002CBE  0E80               	movlw	128
  6326  002CC0  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6327  002CC2  502C               	movf	___flge@ff2^0,w,c
  6328  002CC4  5C28               	subwf	___flge@ff1^0,w,c
  6329  002CC6  502D               	movf	(___flge@ff2+1)^0,w,c
  6330  002CC8  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6331  002CCA  502E               	movf	(___flge@ff2+2)^0,w,c
  6332  002CCC  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6333  002CCE  502F               	movf	(___flge@ff2+3)^0,w,c
  6334  002CD0  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6335  002CD2  B0D8               	btfsc	status,0,c
  6336  002CD4  EF6E  F016         	goto	u3471
  6337  002CD8  EF70  F016         	goto	u3470
  6338  002CDC                     u3471:
  6339  002CDC  EF73  F016         	goto	l3368
  6340  002CE0                     u3470:
  6341  002CE0  90D8               	bcf	status,0,c
  6342  002CE2  EF74  F016         	goto	l416
  6343  002CE6                     l3368:
  6344  002CE6  80D8               	bsf	status,0,c
  6345  002CE8                     l416:
  6346  002CE8  0012               	return		;funcret
  6347  002CEA                     __end_of___flge:
  6348                           	callstack 0
  6349                           
  6350 ;; *************** function ___fleq *****************
  6351 ;; Defined at:
  6352 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  ff1             4    0[COMRAM] unsigned char 
  6355 ;;  ff2             4    4[COMRAM] unsigned char 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;		None
  6358 ;; Return value:  Size  Location     Type
  6359 ;;		None               void
  6360 ;; Registers used:
  6361 ;;		wreg, status,2, status,0
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6367 ;;      Params:         8       0       0       0       0       0       0       0       0
  6368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6369 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6370 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6371 ;;Total ram usage:       12 bytes
  6372 ;; Hardware stack levels used: 1
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_efgtoa
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text22
  6381  003270                     __ptext22:
  6382                           	callstack 0
  6383  003270                     ___fleq:
  6384                           	callstack 26
  6385  003270  0E00               	movlw	0
  6386  003272  1401               	andwf	___fleq@ff1^0,w,c
  6387  003274  6E09               	movwf	??___fleq^0,c
  6388  003276  0E00               	movlw	0
  6389  003278  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6390  00327A  6E0A               	movwf	(??___fleq+1)^0,c
  6391  00327C  0E80               	movlw	128
  6392  00327E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6393  003280  6E0B               	movwf	(??___fleq+2)^0,c
  6394  003282  0E7F               	movlw	127
  6395  003284  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6396  003286  6E0C               	movwf	(??___fleq+3)^0,c
  6397  003288  5009               	movf	??___fleq^0,w,c
  6398  00328A  100A               	iorwf	(??___fleq+1)^0,w,c
  6399  00328C  100B               	iorwf	(??___fleq+2)^0,w,c
  6400  00328E  100C               	iorwf	(??___fleq+3)^0,w,c
  6401  003290  A4D8               	btfss	status,2,c
  6402  003292  EF4D  F019         	goto	u3401
  6403  003296  EF4F  F019         	goto	u3400
  6404  00329A                     u3401:
  6405  00329A  EF57  F019         	goto	l3338
  6406  00329E                     u3400:
  6407  00329E  0E00               	movlw	0
  6408  0032A0  6E01               	movwf	___fleq@ff1^0,c
  6409  0032A2  0E00               	movlw	0
  6410  0032A4  6E02               	movwf	(___fleq@ff1+1)^0,c
  6411  0032A6  0E00               	movlw	0
  6412  0032A8  6E03               	movwf	(___fleq@ff1+2)^0,c
  6413  0032AA  0E00               	movlw	0
  6414  0032AC  6E04               	movwf	(___fleq@ff1+3)^0,c
  6415  0032AE                     l3338:
  6416  0032AE  0E00               	movlw	0
  6417  0032B0  1405               	andwf	___fleq@ff2^0,w,c
  6418  0032B2  6E09               	movwf	??___fleq^0,c
  6419  0032B4  0E00               	movlw	0
  6420  0032B6  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6421  0032B8  6E0A               	movwf	(??___fleq+1)^0,c
  6422  0032BA  0E80               	movlw	128
  6423  0032BC  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6424  0032BE  6E0B               	movwf	(??___fleq+2)^0,c
  6425  0032C0  0E7F               	movlw	127
  6426  0032C2  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6427  0032C4  6E0C               	movwf	(??___fleq+3)^0,c
  6428  0032C6  5009               	movf	??___fleq^0,w,c
  6429  0032C8  100A               	iorwf	(??___fleq+1)^0,w,c
  6430  0032CA  100B               	iorwf	(??___fleq+2)^0,w,c
  6431  0032CC  100C               	iorwf	(??___fleq+3)^0,w,c
  6432  0032CE  A4D8               	btfss	status,2,c
  6433  0032D0  EF6C  F019         	goto	u3411
  6434  0032D4  EF6E  F019         	goto	u3410
  6435  0032D8                     u3411:
  6436  0032D8  EF76  F019         	goto	l3342
  6437  0032DC                     u3410:
  6438  0032DC  0E00               	movlw	0
  6439  0032DE  6E05               	movwf	___fleq@ff2^0,c
  6440  0032E0  0E00               	movlw	0
  6441  0032E2  6E06               	movwf	(___fleq@ff2+1)^0,c
  6442  0032E4  0E00               	movlw	0
  6443  0032E6  6E07               	movwf	(___fleq@ff2+2)^0,c
  6444  0032E8  0E00               	movlw	0
  6445  0032EA  6E08               	movwf	(___fleq@ff2+3)^0,c
  6446  0032EC                     l3342:
  6447  0032EC  5005               	movf	___fleq@ff2^0,w,c
  6448  0032EE  1801               	xorwf	___fleq@ff1^0,w,c
  6449  0032F0  E10F               	bnz	u3420
  6450  0032F2  5006               	movf	(___fleq@ff2+1)^0,w,c
  6451  0032F4  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6452  0032F6  E10C               	bnz	u3420
  6453  0032F8  5007               	movf	(___fleq@ff2+2)^0,w,c
  6454  0032FA  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6455  0032FC  E109               	bnz	u3420
  6456  0032FE  5008               	movf	(___fleq@ff2+3)^0,w,c
  6457  003300  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6458  003302  B4D8               	btfsc	status,2,c
  6459  003304  EF86  F019         	goto	u3421
  6460  003308  EF88  F019         	goto	u3420
  6461  00330C                     u3421:
  6462  00330C  EF8B  F019         	goto	l3346
  6463  003310                     u3420:
  6464  003310  90D8               	bcf	status,0,c
  6465  003312  EF8C  F019         	goto	l405
  6466  003316                     l3346:
  6467  003316  80D8               	bsf	status,0,c
  6468  003318                     l405:
  6469  003318  0012               	return		;funcret
  6470  00331A                     __end_of___fleq:
  6471                           	callstack 0
  6472                           
  6473 ;; *************** function ___fldiv *****************
  6474 ;; Defined at:
  6475 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  b               4    0[COMRAM] unsigned char 
  6478 ;;  a               4    4[COMRAM] unsigned char 
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;  grs             4   19[COMRAM] unsigned long 
  6481 ;;  rem             4   12[COMRAM] unsigned long 
  6482 ;;  new_exp         2   17[COMRAM] short 
  6483 ;;  aexp            1   24[COMRAM] unsigned char 
  6484 ;;  bexp            1   23[COMRAM] unsigned char 
  6485 ;;  sign            1   16[COMRAM] unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  4    0[COMRAM] unsigned char 
  6488 ;; Registers used:
  6489 ;;		wreg, status,2, status,0
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6495 ;;      Params:         8       0       0       0       0       0       0       0       0
  6496 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6497 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6498 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6499 ;;Total ram usage:       25 bytes
  6500 ;; Hardware stack levels used: 1
  6501 ;; This function calls:
  6502 ;;		Nothing
  6503 ;; This function is called by:
  6504 ;;		_efgtoa
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text23
  6509  00222A                     __ptext23:
  6510                           	callstack 0
  6511  00222A                     ___fldiv:
  6512                           	callstack 26
  6513  00222A  5004               	movf	(___fldiv@b+3)^0,w,c
  6514  00222C  0B80               	andlw	128
  6515  00222E  6E11               	movwf	___fldiv@sign^0,c
  6516  002230  5004               	movf	(___fldiv@b+3)^0,w,c
  6517  002232  2404               	addwf	(___fldiv@b+3)^0,w,c
  6518  002234  6E18               	movwf	___fldiv@bexp^0,c
  6519  002236  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6520  002238  EF20  F011         	goto	u2861
  6521  00223C  EF22  F011         	goto	u2860
  6522  002240                     u2861:
  6523  002240  EF23  F011         	goto	l2986
  6524  002244                     u2860:
  6525  002244  8018               	bsf	___fldiv@bexp^0,0,c
  6526  002246                     l2986:
  6527  002246  5018               	movf	___fldiv@bexp^0,w,c
  6528  002248  B4D8               	btfsc	status,2,c
  6529  00224A  EF29  F011         	goto	u2871
  6530  00224E  EF2B  F011         	goto	u2870
  6531  002252                     u2871:
  6532  002252  EF40  F011         	goto	l2996
  6533  002256                     u2870:
  6534  002256  2818               	incf	___fldiv@bexp^0,w,c
  6535  002258  A4D8               	btfss	status,2,c
  6536  00225A  EF31  F011         	goto	u2881
  6537  00225E  EF33  F011         	goto	u2880
  6538  002262                     u2881:
  6539  002262  EF3B  F011         	goto	l2992
  6540  002266                     u2880:
  6541  002266  0E00               	movlw	0
  6542  002268  6E01               	movwf	___fldiv@b^0,c
  6543  00226A  0E00               	movlw	0
  6544  00226C  6E02               	movwf	(___fldiv@b+1)^0,c
  6545  00226E  0E00               	movlw	0
  6546  002270  6E03               	movwf	(___fldiv@b+2)^0,c
  6547  002272  0E00               	movlw	0
  6548  002274  6E04               	movwf	(___fldiv@b+3)^0,c
  6549  002276                     l2992:
  6550  002276  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6551  002278  0E00               	movlw	0
  6552  00227A  6E04               	movwf	(___fldiv@b+3)^0,c
  6553  00227C  EF48  F011         	goto	l2998
  6554  002280                     l2996:
  6555  002280  0E00               	movlw	0
  6556  002282  6E01               	movwf	___fldiv@b^0,c
  6557  002284  0E00               	movlw	0
  6558  002286  6E02               	movwf	(___fldiv@b+1)^0,c
  6559  002288  0E00               	movlw	0
  6560  00228A  6E03               	movwf	(___fldiv@b+2)^0,c
  6561  00228C  0E00               	movlw	0
  6562  00228E  6E04               	movwf	(___fldiv@b+3)^0,c
  6563  002290                     l2998:
  6564  002290  5008               	movf	(___fldiv@a+3)^0,w,c
  6565  002292  0B80               	andlw	128
  6566  002294  1A11               	xorwf	___fldiv@sign^0,f,c
  6567  002296  5008               	movf	(___fldiv@a+3)^0,w,c
  6568  002298  2408               	addwf	(___fldiv@a+3)^0,w,c
  6569  00229A  6E19               	movwf	___fldiv@aexp^0,c
  6570  00229C  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6571  00229E  EF53  F011         	goto	u2891
  6572  0022A2  EF55  F011         	goto	u2890
  6573  0022A6                     u2891:
  6574  0022A6  EF56  F011         	goto	l3006
  6575  0022AA                     u2890:
  6576  0022AA  8019               	bsf	___fldiv@aexp^0,0,c
  6577  0022AC                     l3006:
  6578  0022AC  5019               	movf	___fldiv@aexp^0,w,c
  6579  0022AE  B4D8               	btfsc	status,2,c
  6580  0022B0  EF5C  F011         	goto	u2901
  6581  0022B4  EF5E  F011         	goto	u2900
  6582  0022B8                     u2901:
  6583  0022B8  EF73  F011         	goto	l3016
  6584  0022BC                     u2900:
  6585  0022BC  2819               	incf	___fldiv@aexp^0,w,c
  6586  0022BE  A4D8               	btfss	status,2,c
  6587  0022C0  EF64  F011         	goto	u2911
  6588  0022C4  EF66  F011         	goto	u2910
  6589  0022C8                     u2911:
  6590  0022C8  EF6E  F011         	goto	l3012
  6591  0022CC                     u2910:
  6592  0022CC  0E00               	movlw	0
  6593  0022CE  6E05               	movwf	___fldiv@a^0,c
  6594  0022D0  0E00               	movlw	0
  6595  0022D2  6E06               	movwf	(___fldiv@a+1)^0,c
  6596  0022D4  0E00               	movlw	0
  6597  0022D6  6E07               	movwf	(___fldiv@a+2)^0,c
  6598  0022D8  0E00               	movlw	0
  6599  0022DA  6E08               	movwf	(___fldiv@a+3)^0,c
  6600  0022DC                     l3012:
  6601  0022DC  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6602  0022DE  0E00               	movlw	0
  6603  0022E0  6E08               	movwf	(___fldiv@a+3)^0,c
  6604  0022E2  EF7B  F011         	goto	l3018
  6605  0022E6                     l3016:
  6606  0022E6  0E00               	movlw	0
  6607  0022E8  6E05               	movwf	___fldiv@a^0,c
  6608  0022EA  0E00               	movlw	0
  6609  0022EC  6E06               	movwf	(___fldiv@a+1)^0,c
  6610  0022EE  0E00               	movlw	0
  6611  0022F0  6E07               	movwf	(___fldiv@a+2)^0,c
  6612  0022F2  0E00               	movlw	0
  6613  0022F4  6E08               	movwf	(___fldiv@a+3)^0,c
  6614  0022F6                     l3018:
  6615  0022F6  5005               	movf	___fldiv@a^0,w,c
  6616  0022F8  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6617  0022FA  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6618  0022FC  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6619  0022FE  A4D8               	btfss	status,2,c
  6620  002300  EF84  F011         	goto	u2921
  6621  002304  EF86  F011         	goto	u2920
  6622  002308                     u2921:
  6623  002308  EF9E  F011         	goto	l3030
  6624  00230C                     u2920:
  6625  00230C  0E00               	movlw	0
  6626  00230E  6E01               	movwf	___fldiv@b^0,c
  6627  002310  0E00               	movlw	0
  6628  002312  6E02               	movwf	(___fldiv@b+1)^0,c
  6629  002314  0E00               	movlw	0
  6630  002316  6E03               	movwf	(___fldiv@b+2)^0,c
  6631  002318  0E00               	movlw	0
  6632  00231A  6E04               	movwf	(___fldiv@b+3)^0,c
  6633  00231C  0E80               	movlw	128
  6634  00231E  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6635  002320  0E7F               	movlw	127
  6636  002322  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6637  002324                     l3024:
  6638  002324  5011               	movf	___fldiv@sign^0,w,c
  6639  002326  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6640  002328  C001  F001         	movff	___fldiv@b,?___fldiv
  6641  00232C  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6642  002330  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6643  002334  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6644  002338  EFE1  F012         	goto	l728
  6645  00233C                     l3030:
  6646  00233C  5018               	movf	___fldiv@bexp^0,w,c
  6647  00233E  A4D8               	btfss	status,2,c
  6648  002340  EFA4  F011         	goto	u2931
  6649  002344  EFA6  F011         	goto	u2930
  6650  002348                     u2931:
  6651  002348  EFB0  F011         	goto	l3038
  6652  00234C                     u2930:
  6653  00234C  0E00               	movlw	0
  6654  00234E  6E01               	movwf	?___fldiv^0,c
  6655  002350  0E00               	movlw	0
  6656  002352  6E02               	movwf	(?___fldiv+1)^0,c
  6657  002354  0E00               	movlw	0
  6658  002356  6E03               	movwf	(?___fldiv+2)^0,c
  6659  002358  0E00               	movlw	0
  6660  00235A  6E04               	movwf	(?___fldiv+3)^0,c
  6661  00235C  EFE1  F012         	goto	l728
  6662  002360                     l3038:
  6663  002360  5019               	movf	___fldiv@aexp^0,w,c
  6664  002362  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6665  002366  6A0A               	clrf	(??___fldiv+1)^0,c
  6666  002368  5E09               	subwf	??___fldiv^0,f,c
  6667  00236A  0E00               	movlw	0
  6668  00236C  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6669  00236E  0E7F               	movlw	127
  6670  002370  2409               	addwf	??___fldiv^0,w,c
  6671  002372  6E12               	movwf	___fldiv@new_exp^0,c
  6672  002374  0E00               	movlw	0
  6673  002376  200A               	addwfc	(??___fldiv+1)^0,w,c
  6674  002378  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6675  00237A  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6676  00237E  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6677  002382  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6678  002386  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6679  00238A  0E00               	movlw	0
  6680  00238C  6E01               	movwf	___fldiv@b^0,c
  6681  00238E  0E00               	movlw	0
  6682  002390  6E02               	movwf	(___fldiv@b+1)^0,c
  6683  002392  0E00               	movlw	0
  6684  002394  6E03               	movwf	(___fldiv@b+2)^0,c
  6685  002396  0E00               	movlw	0
  6686  002398  6E04               	movwf	(___fldiv@b+3)^0,c
  6687  00239A  0E00               	movlw	0
  6688  00239C  6E14               	movwf	___fldiv@grs^0,c
  6689  00239E  0E00               	movlw	0
  6690  0023A0  6E15               	movwf	(___fldiv@grs+1)^0,c
  6691  0023A2  0E00               	movlw	0
  6692  0023A4  6E16               	movwf	(___fldiv@grs+2)^0,c
  6693  0023A6  0E00               	movlw	0
  6694  0023A8  6E17               	movwf	(___fldiv@grs+3)^0,c
  6695  0023AA  0E00               	movlw	0
  6696  0023AC  6E19               	movwf	___fldiv@aexp^0,c
  6697  0023AE  EF11  F012         	goto	l730
  6698  0023B2                     l3048:
  6699  0023B2  5019               	movf	___fldiv@aexp^0,w,c
  6700  0023B4  B4D8               	btfsc	status,2,c
  6701  0023B6  EFDF  F011         	goto	u2941
  6702  0023BA  EFE1  F011         	goto	u2940
  6703  0023BE                     u2941:
  6704  0023BE  EFF8  F011         	goto	l3056
  6705  0023C2                     u2940:
  6706  0023C2  90D8               	bcf	status,0,c
  6707  0023C4  360D               	rlcf	___fldiv@rem^0,f,c
  6708  0023C6  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6709  0023C8  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6710  0023CA  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6711  0023CC  90D8               	bcf	status,0,c
  6712  0023CE  3601               	rlcf	___fldiv@b^0,f,c
  6713  0023D0  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6714  0023D2  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6715  0023D4  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6716  0023D6  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6717  0023D8  EFF0  F011         	goto	u2951
  6718  0023DC  EFF2  F011         	goto	u2950
  6719  0023E0                     u2951:
  6720  0023E0  EFF3  F011         	goto	l733
  6721  0023E4                     u2950:
  6722  0023E4  8001               	bsf	___fldiv@b^0,0,c
  6723  0023E6                     l733:
  6724  0023E6  90D8               	bcf	status,0,c
  6725  0023E8  3614               	rlcf	___fldiv@grs^0,f,c
  6726  0023EA  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6727  0023EC  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6728  0023EE  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6729  0023F0                     l3056:
  6730  0023F0  5005               	movf	___fldiv@a^0,w,c
  6731  0023F2  5C0D               	subwf	___fldiv@rem^0,w,c
  6732  0023F4  5006               	movf	(___fldiv@a+1)^0,w,c
  6733  0023F6  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6734  0023F8  5007               	movf	(___fldiv@a+2)^0,w,c
  6735  0023FA  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6736  0023FC  5008               	movf	(___fldiv@a+3)^0,w,c
  6737  0023FE  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6738  002400  A0D8               	btfss	status,0,c
  6739  002402  EF05  F012         	goto	u2961
  6740  002406  EF07  F012         	goto	u2960
  6741  00240A                     u2961:
  6742  00240A  EF10  F012         	goto	l3062
  6743  00240E                     u2960:
  6744  00240E  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6745  002410  5005               	movf	___fldiv@a^0,w,c
  6746  002412  5E0D               	subwf	___fldiv@rem^0,f,c
  6747  002414  5006               	movf	(___fldiv@a+1)^0,w,c
  6748  002416  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6749  002418  5007               	movf	(___fldiv@a+2)^0,w,c
  6750  00241A  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6751  00241C  5008               	movf	(___fldiv@a+3)^0,w,c
  6752  00241E  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6753  002420                     l3062:
  6754  002420  2A19               	incf	___fldiv@aexp^0,f,c
  6755  002422                     l730:
  6756  002422  0E19               	movlw	25
  6757  002424  6419               	cpfsgt	___fldiv@aexp^0,c
  6758  002426  EF17  F012         	goto	u2971
  6759  00242A  EF19  F012         	goto	u2970
  6760  00242E                     u2971:
  6761  00242E  EFD9  F011         	goto	l3048
  6762  002432                     u2970:
  6763  002432  500D               	movf	___fldiv@rem^0,w,c
  6764  002434  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6765  002436  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6766  002438  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6767  00243A  B4D8               	btfsc	status,2,c
  6768  00243C  EF22  F012         	goto	u2981
  6769  002440  EF24  F012         	goto	u2980
  6770  002444                     u2981:
  6771  002444  EF3C  F012         	goto	l3074
  6772  002448                     u2980:
  6773  002448  8014               	bsf	___fldiv@grs^0,0,c
  6774  00244A  EF3C  F012         	goto	l3074
  6775  00244E                     l3068:
  6776  00244E  90D8               	bcf	status,0,c
  6777  002450  3601               	rlcf	___fldiv@b^0,f,c
  6778  002452  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6779  002454  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6780  002456  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6781  002458  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6782  00245A  EF31  F012         	goto	u2991
  6783  00245E  EF33  F012         	goto	u2990
  6784  002462                     u2991:
  6785  002462  EF34  F012         	goto	l739
  6786  002466                     u2990:
  6787  002466  8001               	bsf	___fldiv@b^0,0,c
  6788  002468                     l739:
  6789  002468  90D8               	bcf	status,0,c
  6790  00246A  3614               	rlcf	___fldiv@grs^0,f,c
  6791  00246C  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6792  00246E  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6793  002470  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6794  002472  0612               	decf	___fldiv@new_exp^0,f,c
  6795  002474  A0D8               	btfss	status,0,c
  6796  002476  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6797  002478                     l3074:
  6798  002478  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6799  00247A  EF41  F012         	goto	u3001
  6800  00247E  EF43  F012         	goto	u3000
  6801  002482                     u3001:
  6802  002482  EF27  F012         	goto	l3068
  6803  002486                     u3000:
  6804  002486  0E00               	movlw	0
  6805  002488  6E19               	movwf	___fldiv@aexp^0,c
  6806  00248A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6807  00248C  EF4A  F012         	goto	u3011
  6808  002490  EF4C  F012         	goto	u3010
  6809  002494                     u3011:
  6810  002494  EF70  F012         	goto	l741
  6811  002498                     u3010:
  6812  002498  0EFF               	movlw	255
  6813  00249A  1414               	andwf	___fldiv@grs^0,w,c
  6814  00249C  6E09               	movwf	??___fldiv^0,c
  6815  00249E  0EFF               	movlw	255
  6816  0024A0  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6817  0024A2  6E0A               	movwf	(??___fldiv+1)^0,c
  6818  0024A4  0EFF               	movlw	255
  6819  0024A6  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6820  0024A8  6E0B               	movwf	(??___fldiv+2)^0,c
  6821  0024AA  0E7F               	movlw	127
  6822  0024AC  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6823  0024AE  6E0C               	movwf	(??___fldiv+3)^0,c
  6824  0024B0  5009               	movf	??___fldiv^0,w,c
  6825  0024B2  100A               	iorwf	(??___fldiv+1)^0,w,c
  6826  0024B4  100B               	iorwf	(??___fldiv+2)^0,w,c
  6827  0024B6  100C               	iorwf	(??___fldiv+3)^0,w,c
  6828  0024B8  B4D8               	btfsc	status,2,c
  6829  0024BA  EF61  F012         	goto	u3021
  6830  0024BE  EF63  F012         	goto	u3020
  6831  0024C2                     u3021:
  6832  0024C2  EF67  F012         	goto	l742
  6833  0024C6                     u3020:
  6834  0024C6                     l3082:
  6835  0024C6  0E01               	movlw	1
  6836  0024C8  6E19               	movwf	___fldiv@aexp^0,c
  6837  0024CA  EF70  F012         	goto	l741
  6838  0024CE                     l742:
  6839  0024CE  A001               	btfss	___fldiv@b^0,0,c
  6840  0024D0  EF6C  F012         	goto	u3031
  6841  0024D4  EF6E  F012         	goto	u3030
  6842  0024D8                     u3031:
  6843  0024D8  EF70  F012         	goto	l741
  6844  0024DC                     u3030:
  6845  0024DC  EF63  F012         	goto	l3082
  6846  0024E0                     l741:
  6847  0024E0  5019               	movf	___fldiv@aexp^0,w,c
  6848  0024E2  B4D8               	btfsc	status,2,c
  6849  0024E4  EF76  F012         	goto	u3041
  6850  0024E8  EF78  F012         	goto	u3040
  6851  0024EC                     u3041:
  6852  0024EC  EF9C  F012         	goto	l3094
  6853  0024F0                     u3040:
  6854  0024F0  0E01               	movlw	1
  6855  0024F2  2601               	addwf	___fldiv@b^0,f,c
  6856  0024F4  0E00               	movlw	0
  6857  0024F6  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6858  0024F8  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6859  0024FA  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6860  0024FC  A004               	btfss	(___fldiv@b+3)^0,0,c
  6861  0024FE  EF83  F012         	goto	u3051
  6862  002502  EF85  F012         	goto	u3050
  6863  002506                     u3051:
  6864  002506  EF9C  F012         	goto	l3094
  6865  00250A                     u3050:
  6866  00250A  C001  F009         	movff	___fldiv@b,??___fldiv
  6867  00250E  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6868  002512  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6869  002516  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6870  00251A  340C               	rlcf	(??___fldiv+3)^0,w,c
  6871  00251C  320C               	rrcf	(??___fldiv+3)^0,f,c
  6872  00251E  320B               	rrcf	(??___fldiv+2)^0,f,c
  6873  002520  320A               	rrcf	(??___fldiv+1)^0,f,c
  6874  002522  3209               	rrcf	??___fldiv^0,f,c
  6875  002524  C009  F001         	movff	??___fldiv,___fldiv@b
  6876  002528  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6877  00252C  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6878  002530  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6879  002534  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6880  002536  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6881  002538                     l3094:
  6882  002538  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6883  00253A  EFA7  F012         	goto	u3061
  6884  00253E  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6885  002540  E108               	bnz	u3060
  6886  002542  2812               	incf	___fldiv@new_exp^0,w,c
  6887  002544  A0D8               	btfss	status,0,c
  6888  002546  EFA7  F012         	goto	u3061
  6889  00254A  EFA9  F012         	goto	u3060
  6890  00254E                     u3061:
  6891  00254E  EFB4  F012         	goto	l3098
  6892  002552                     u3060:
  6893  002552  0E00               	movlw	0
  6894  002554  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6895  002556  6812               	setf	___fldiv@new_exp^0,c
  6896  002558  0E00               	movlw	0
  6897  00255A  6E01               	movwf	___fldiv@b^0,c
  6898  00255C  0E00               	movlw	0
  6899  00255E  6E02               	movwf	(___fldiv@b+1)^0,c
  6900  002560  0E00               	movlw	0
  6901  002562  6E03               	movwf	(___fldiv@b+2)^0,c
  6902  002564  0E00               	movlw	0
  6903  002566  6E04               	movwf	(___fldiv@b+3)^0,c
  6904  002568                     l3098:
  6905  002568  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6906  00256A  EFC1  F012         	goto	u3070
  6907  00256E  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6908  002570  E106               	bnz	u3071
  6909  002572  0412               	decf	___fldiv@new_exp^0,w,c
  6910  002574  B0D8               	btfsc	status,0,c
  6911  002576  EFBF  F012         	goto	u3071
  6912  00257A  EFC1  F012         	goto	u3070
  6913  00257E                     u3071:
  6914  00257E  EFCF  F012         	goto	l3102
  6915  002582                     u3070:
  6916  002582  0E00               	movlw	0
  6917  002584  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6918  002586  0E00               	movlw	0
  6919  002588  6E12               	movwf	___fldiv@new_exp^0,c
  6920  00258A  0E00               	movlw	0
  6921  00258C  6E01               	movwf	___fldiv@b^0,c
  6922  00258E  0E00               	movlw	0
  6923  002590  6E02               	movwf	(___fldiv@b+1)^0,c
  6924  002592  0E00               	movlw	0
  6925  002594  6E03               	movwf	(___fldiv@b+2)^0,c
  6926  002596  0E00               	movlw	0
  6927  002598  6E04               	movwf	(___fldiv@b+3)^0,c
  6928  00259A  0E00               	movlw	0
  6929  00259C  6E11               	movwf	___fldiv@sign^0,c
  6930  00259E                     l3102:
  6931  00259E  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6932  0025A2  A018               	btfss	___fldiv@bexp^0,0,c
  6933  0025A4  EFD6  F012         	goto	u3081
  6934  0025A8  EFD8  F012         	goto	u3080
  6935  0025AC                     u3081:
  6936  0025AC  EFDB  F012         	goto	l3108
  6937  0025B0                     u3080:
  6938  0025B0  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6939  0025B2  EFDC  F012         	goto	l3110
  6940  0025B6                     l3108:
  6941  0025B6  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6942  0025B8                     l3110:
  6943  0025B8  90D8               	bcf	status,0,c
  6944  0025BA  3018               	rrcf	___fldiv@bexp^0,w,c
  6945  0025BC  6E04               	movwf	(___fldiv@b+3)^0,c
  6946  0025BE  EF92  F011         	goto	l3024
  6947  0025C2                     l728:
  6948  0025C2  0012               	return		;funcret
  6949  0025C4                     __end_of___fldiv:
  6950                           	callstack 0
  6951                           
  6952 ;; *************** function ___awmod *****************
  6953 ;; Defined at:
  6954 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  dividend        2    0[COMRAM] int 
  6957 ;;  divisor         2    2[COMRAM] int 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;  sign            1    5[COMRAM] unsigned char 
  6960 ;;  counter         1    4[COMRAM] unsigned char 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  2    0[COMRAM] int 
  6963 ;; Registers used:
  6964 ;;		wreg, status,2, status,0
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6970 ;;      Params:         4       0       0       0       0       0       0       0       0
  6971 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6973 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6974 ;;Total ram usage:        6 bytes
  6975 ;; Hardware stack levels used: 1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_efgtoa
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text24
  6984  0031C0                     __ptext24:
  6985                           	callstack 0
  6986  0031C0                     ___awmod:
  6987                           	callstack 26
  6988  0031C0  0E00               	movlw	0
  6989  0031C2  6E06               	movwf	___awmod@sign^0,c
  6990  0031C4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6991  0031C6  EFE9  F018         	goto	u3340
  6992  0031CA  EFE7  F018         	goto	u3341
  6993  0031CE                     u3341:
  6994  0031CE  EFEF  F018         	goto	l3306
  6995  0031D2                     u3340:
  6996  0031D2  6C01               	negf	___awmod@dividend^0,c
  6997  0031D4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6998  0031D6  B0D8               	btfsc	status,0,c
  6999  0031D8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7000  0031DA  0E01               	movlw	1
  7001  0031DC  6E06               	movwf	___awmod@sign^0,c
  7002  0031DE                     l3306:
  7003  0031DE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7004  0031E0  EFF6  F018         	goto	u3350
  7005  0031E4  EFF4  F018         	goto	u3351
  7006  0031E8                     u3351:
  7007  0031E8  EFFA  F018         	goto	l3310
  7008  0031EC                     u3350:
  7009  0031EC  6C03               	negf	___awmod@divisor^0,c
  7010  0031EE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7011  0031F0  B0D8               	btfsc	status,0,c
  7012  0031F2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7013  0031F4                     l3310:
  7014  0031F4  5003               	movf	___awmod@divisor^0,w,c
  7015  0031F6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7016  0031F8  B4D8               	btfsc	status,2,c
  7017  0031FA  EF01  F019         	goto	u3361
  7018  0031FE  EF03  F019         	goto	u3360
  7019  003202                     u3361:
  7020  003202  EF27  F019         	goto	l3326
  7021  003206                     u3360:
  7022  003206  0E01               	movlw	1
  7023  003208  6E05               	movwf	___awmod@counter^0,c
  7024  00320A  EF0B  F019         	goto	l3316
  7025  00320E                     l3314:
  7026  00320E  90D8               	bcf	status,0,c
  7027  003210  3603               	rlcf	___awmod@divisor^0,f,c
  7028  003212  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7029  003214  2A05               	incf	___awmod@counter^0,f,c
  7030  003216                     l3316:
  7031  003216  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7032  003218  EF10  F019         	goto	u3371
  7033  00321C  EF12  F019         	goto	u3370
  7034  003220                     u3371:
  7035  003220  EF07  F019         	goto	l3314
  7036  003224                     u3370:
  7037  003224                     l3318:
  7038  003224  5003               	movf	___awmod@divisor^0,w,c
  7039  003226  5C01               	subwf	___awmod@dividend^0,w,c
  7040  003228  5004               	movf	(___awmod@divisor+1)^0,w,c
  7041  00322A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7042  00322C  A0D8               	btfss	status,0,c
  7043  00322E  EF1B  F019         	goto	u3381
  7044  003232  EF1D  F019         	goto	u3380
  7045  003236                     u3381:
  7046  003236  EF21  F019         	goto	l3322
  7047  00323A                     u3380:
  7048  00323A  5003               	movf	___awmod@divisor^0,w,c
  7049  00323C  5E01               	subwf	___awmod@dividend^0,f,c
  7050  00323E  5004               	movf	(___awmod@divisor+1)^0,w,c
  7051  003240  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7052  003242                     l3322:
  7053  003242  90D8               	bcf	status,0,c
  7054  003244  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7055  003246  3203               	rrcf	___awmod@divisor^0,f,c
  7056  003248  2E05               	decfsz	___awmod@counter^0,f,c
  7057  00324A  EF12  F019         	goto	l3318
  7058  00324E                     l3326:
  7059  00324E  5006               	movf	___awmod@sign^0,w,c
  7060  003250  B4D8               	btfsc	status,2,c
  7061  003252  EF2D  F019         	goto	u3391
  7062  003256  EF2F  F019         	goto	u3390
  7063  00325A                     u3391:
  7064  00325A  EF33  F019         	goto	l3330
  7065  00325E                     u3390:
  7066  00325E  6C01               	negf	___awmod@dividend^0,c
  7067  003260  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7068  003262  B0D8               	btfsc	status,0,c
  7069  003264  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7070  003266                     l3330:
  7071  003266  C001  F001         	movff	___awmod@dividend,?___awmod
  7072  00326A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7073  00326E  0012               	return		;funcret
  7074  003270                     __end_of___awmod:
  7075                           	callstack 0
  7076                           
  7077 ;; *************** function ___awdiv *****************
  7078 ;; Defined at:
  7079 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  dividend        2    0[COMRAM] int 
  7082 ;;  divisor         2    2[COMRAM] int 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  quotient        2    6[COMRAM] int 
  7085 ;;  sign            1    5[COMRAM] unsigned char 
  7086 ;;  counter         1    4[COMRAM] unsigned char 
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  2    0[COMRAM] int 
  7089 ;; Registers used:
  7090 ;;		wreg, status,2, status,0
  7091 ;; Tracked objects:
  7092 ;;		On entry : 0/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7096 ;;      Params:         4       0       0       0       0       0       0       0       0
  7097 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7099 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7100 ;;Total ram usage:        8 bytes
  7101 ;; Hardware stack levels used: 1
  7102 ;; This function calls:
  7103 ;;		Nothing
  7104 ;; This function is called by:
  7105 ;;		_efgtoa
  7106 ;; This function uses a non-reentrant model
  7107 ;;
  7108                           
  7109                           	psect	text25
  7110  002F88                     __ptext25:
  7111                           	callstack 0
  7112  002F88                     ___awdiv:
  7113                           	callstack 26
  7114  002F88  0E00               	movlw	0
  7115  002F8A  6E06               	movwf	___awdiv@sign^0,c
  7116  002F8C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7117  002F8E  EFCD  F017         	goto	u3280
  7118  002F92  EFCB  F017         	goto	u3281
  7119  002F96                     u3281:
  7120  002F96  EFD3  F017         	goto	l3262
  7121  002F9A                     u3280:
  7122  002F9A  6C03               	negf	___awdiv@divisor^0,c
  7123  002F9C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7124  002F9E  B0D8               	btfsc	status,0,c
  7125  002FA0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7126  002FA2  0E01               	movlw	1
  7127  002FA4  6E06               	movwf	___awdiv@sign^0,c
  7128  002FA6                     l3262:
  7129  002FA6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7130  002FA8  EFDA  F017         	goto	u3290
  7131  002FAC  EFD8  F017         	goto	u3291
  7132  002FB0                     u3291:
  7133  002FB0  EFE0  F017         	goto	l3268
  7134  002FB4                     u3290:
  7135  002FB4  6C01               	negf	___awdiv@dividend^0,c
  7136  002FB6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7137  002FB8  B0D8               	btfsc	status,0,c
  7138  002FBA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7139  002FBC  0E01               	movlw	1
  7140  002FBE  1A06               	xorwf	___awdiv@sign^0,f,c
  7141  002FC0                     l3268:
  7142  002FC0  0E00               	movlw	0
  7143  002FC2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7144  002FC4  0E00               	movlw	0
  7145  002FC6  6E07               	movwf	___awdiv@quotient^0,c
  7146  002FC8  5003               	movf	___awdiv@divisor^0,w,c
  7147  002FCA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7148  002FCC  B4D8               	btfsc	status,2,c
  7149  002FCE  EFEB  F017         	goto	u3301
  7150  002FD2  EFED  F017         	goto	u3300
  7151  002FD6                     u3301:
  7152  002FD6  EF15  F018         	goto	l3290
  7153  002FDA                     u3300:
  7154  002FDA  0E01               	movlw	1
  7155  002FDC  6E05               	movwf	___awdiv@counter^0,c
  7156  002FDE  EFF5  F017         	goto	l3276
  7157  002FE2                     l3274:
  7158  002FE2  90D8               	bcf	status,0,c
  7159  002FE4  3603               	rlcf	___awdiv@divisor^0,f,c
  7160  002FE6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7161  002FE8  2A05               	incf	___awdiv@counter^0,f,c
  7162  002FEA                     l3276:
  7163  002FEA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7164  002FEC  EFFA  F017         	goto	u3311
  7165  002FF0  EFFC  F017         	goto	u3310
  7166  002FF4                     u3311:
  7167  002FF4  EFF1  F017         	goto	l3274
  7168  002FF8                     u3310:
  7169  002FF8                     l3278:
  7170  002FF8  90D8               	bcf	status,0,c
  7171  002FFA  3607               	rlcf	___awdiv@quotient^0,f,c
  7172  002FFC  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7173  002FFE  5003               	movf	___awdiv@divisor^0,w,c
  7174  003000  5C01               	subwf	___awdiv@dividend^0,w,c
  7175  003002  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7176  003004  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7177  003006  A0D8               	btfss	status,0,c
  7178  003008  EF08  F018         	goto	u3321
  7179  00300C  EF0A  F018         	goto	u3320
  7180  003010                     u3321:
  7181  003010  EF0F  F018         	goto	l3286
  7182  003014                     u3320:
  7183  003014  5003               	movf	___awdiv@divisor^0,w,c
  7184  003016  5E01               	subwf	___awdiv@dividend^0,f,c
  7185  003018  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7186  00301A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7187  00301C  8007               	bsf	___awdiv@quotient^0,0,c
  7188  00301E                     l3286:
  7189  00301E  90D8               	bcf	status,0,c
  7190  003020  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7191  003022  3203               	rrcf	___awdiv@divisor^0,f,c
  7192  003024  2E05               	decfsz	___awdiv@counter^0,f,c
  7193  003026  EFFC  F017         	goto	l3278
  7194  00302A                     l3290:
  7195  00302A  5006               	movf	___awdiv@sign^0,w,c
  7196  00302C  B4D8               	btfsc	status,2,c
  7197  00302E  EF1B  F018         	goto	u3331
  7198  003032  EF1D  F018         	goto	u3330
  7199  003036                     u3331:
  7200  003036  EF21  F018         	goto	l3294
  7201  00303A                     u3330:
  7202  00303A  6C07               	negf	___awdiv@quotient^0,c
  7203  00303C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7204  00303E  B0D8               	btfsc	status,0,c
  7205  003040  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7206  003042                     l3294:
  7207  003042  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7208  003046  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7209  00304A  0012               	return		;funcret
  7210  00304C                     __end_of___awdiv:
  7211                           	callstack 0
  7212                           
  7213 ;; *************** function _atoi *****************
  7214 ;; Defined at:
  7215 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7218 ;;		 -> STR_1(12), 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;  n               2   15[COMRAM] int 
  7221 ;;  neg             2   13[COMRAM] int 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  2    7[COMRAM] int 
  7224 ;; Registers used:
  7225 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7231 ;;      Params:         2       0       0       0       0       0       0       0       0
  7232 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7233 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7234 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7235 ;;Total ram usage:       10 bytes
  7236 ;; Hardware stack levels used: 1
  7237 ;; Hardware stack levels required when called: 1
  7238 ;; This function calls:
  7239 ;;		___wmul
  7240 ;;		_isdigit
  7241 ;;		_isspace
  7242 ;; This function is called by:
  7243 ;;		_vfpfcnvrt
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text26
  7248  00298A                     __ptext26:
  7249                           	callstack 0
  7250  00298A                     _atoi:
  7251                           	callstack 26
  7252  00298A  0E00               	movlw	0
  7253  00298C  6E11               	movwf	(atoi@n+1)^0,c
  7254  00298E  0E00               	movlw	0
  7255  002990  6E10               	movwf	atoi@n^0,c
  7256  002992  0E00               	movlw	0
  7257  002994  6E0F               	movwf	(atoi@neg+1)^0,c
  7258  002996  0E00               	movlw	0
  7259  002998  6E0E               	movwf	atoi@neg^0,c
  7260  00299A  EFD1  F014         	goto	l3854
  7261  00299E                     l3850:
  7262  00299E  4A08               	infsnz	atoi@s^0,f,c
  7263  0029A0  2A09               	incf	(atoi@s+1)^0,f,c
  7264  0029A2                     l3854:
  7265  0029A2  C008  FFF6         	movff	atoi@s,tblptrl
  7266  0029A6  C009  FFF7         	movff	atoi@s+1,tblptrh
  7267  0029AA                     	if	0	;tblptru may be non-zero
  7268  0029AA                     	endif
  7269  0029AA                     	if	0	;tblptru may be non-zero
  7270  0029AA                     	endif
  7271  0029AA  0008               	tblrd		*
  7272  0029AC  50F5               	movf	tablat,w,c
  7273  0029AE  0A20               	xorlw	32
  7274  0029B0  B4D8               	btfsc	status,2,c
  7275  0029B2  EFDD  F014         	goto	u4321
  7276  0029B6  EFDF  F014         	goto	u4320
  7277  0029BA                     u4321:
  7278  0029BA  EFCF  F014         	goto	l3850
  7279  0029BE                     u4320:
  7280  0029BE  0EF7               	movlw	247
  7281  0029C0  6E0A               	movwf	??_atoi^0,c
  7282  0029C2  0EFF               	movlw	255
  7283  0029C4  6E0B               	movwf	(??_atoi+1)^0,c
  7284  0029C6  C008  FFF6         	movff	atoi@s,tblptrl
  7285  0029CA  C009  FFF7         	movff	atoi@s+1,tblptrh
  7286  0029CE                     	if	0	;tblptru may be non-zero
  7287  0029CE                     	endif
  7288  0029CE                     	if	0	;tblptru may be non-zero
  7289  0029CE                     	endif
  7290  0029CE  0008               	tblrd		*
  7291  0029D0  50F5               	movf	tablat,w,c
  7292  0029D2  6E0C               	movwf	(??_atoi+2)^0,c
  7293  0029D4  6A0D               	clrf	(??_atoi+3)^0,c
  7294  0029D6  500A               	movf	??_atoi^0,w,c
  7295  0029D8  260C               	addwf	(??_atoi+2)^0,f,c
  7296  0029DA  500B               	movf	(??_atoi+1)^0,w,c
  7297  0029DC  220D               	addwfc	(??_atoi+3)^0,f,c
  7298  0029DE  500D               	movf	(??_atoi+3)^0,w,c
  7299  0029E0  E109               	bnz	u4330
  7300  0029E2  0E05               	movlw	5
  7301  0029E4  5C0C               	subwf	(??_atoi+2)^0,w,c
  7302  0029E6  A0D8               	btfss	status,0,c
  7303  0029E8  EFF8  F014         	goto	u4331
  7304  0029EC  EFFA  F014         	goto	u4330
  7305  0029F0                     u4331:
  7306  0029F0  EFCF  F014         	goto	l3850
  7307  0029F4                     u4330:
  7308  0029F4  EF04  F015         	goto	l3862
  7309  0029F8                     l3858:
  7310  0029F8  0E00               	movlw	0
  7311  0029FA  6E0F               	movwf	(atoi@neg+1)^0,c
  7312  0029FC  0E01               	movlw	1
  7313  0029FE  6E0E               	movwf	atoi@neg^0,c
  7314  002A00                     l3860:
  7315  002A00  4A08               	infsnz	atoi@s^0,f,c
  7316  002A02  2A09               	incf	(atoi@s+1)^0,f,c
  7317  002A04  EF39  F015         	goto	l3870
  7318  002A08                     l3862:
  7319  002A08  C008  FFF6         	movff	atoi@s,tblptrl
  7320  002A0C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7321  002A10                     	if	0	;tblptru may be non-zero
  7322  002A10                     	endif
  7323  002A10                     	if	0	;tblptru may be non-zero
  7324  002A10                     	endif
  7325  002A10  0008               	tblrd		*
  7326  002A12  50F5               	movf	tablat,w,c
  7327  002A14  6E0A               	movwf	??_atoi^0,c
  7328  002A16  6A0B               	clrf	(??_atoi+1)^0,c
  7329                           
  7330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7331                           ; Switch size 1, requested type "simple"
  7332                           ; Number of cases is 1, Range of values is 0 to 0
  7333                           ; switch strategies available:
  7334                           ; Name         Instructions Cycles
  7335                           ; simple_byte            4     3 (average)
  7336                           ;	Chosen strategy is simple_byte
  7337  002A18  500B               	movf	(??_atoi+1)^0,w,c
  7338  002A1A  0A00               	xorlw	0	; case 0
  7339  002A1C  B4D8               	btfsc	status,2,c
  7340  002A1E  EF13  F015         	goto	l4302
  7341  002A22  EF39  F015         	goto	l3870
  7342  002A26                     l4302:
  7343                           
  7344                           ; Switch size 1, requested type "simple"
  7345                           ; Number of cases is 2, Range of values is 43 to 45
  7346                           ; switch strategies available:
  7347                           ; Name         Instructions Cycles
  7348                           ; simple_byte            7     4 (average)
  7349                           ;	Chosen strategy is simple_byte
  7350  002A26  500A               	movf	??_atoi^0,w,c
  7351  002A28  0A2B               	xorlw	43	; case 43
  7352  002A2A  B4D8               	btfsc	status,2,c
  7353  002A2C  EF00  F015         	goto	l3860
  7354  002A30  0A06               	xorlw	6	; case 45
  7355  002A32  B4D8               	btfsc	status,2,c
  7356  002A34  EFFC  F014         	goto	l3858
  7357  002A38  EF39  F015         	goto	l3870
  7358  002A3C                     l3864:
  7359  002A3C  C010  F001         	movff	atoi@n,___wmul@multiplier
  7360  002A40  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7361  002A44  0E00               	movlw	0
  7362  002A46  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7363  002A48  0E0A               	movlw	10
  7364  002A4A  6E03               	movwf	___wmul@multiplicand^0,c
  7365  002A4C  EC4F  F01C         	call	___wmul	;wreg free
  7366  002A50  C008  FFF6         	movff	atoi@s,tblptrl
  7367  002A54  C009  FFF7         	movff	atoi@s+1,tblptrh
  7368  002A58                     	if	0	;tblptru may be non-zero
  7369  002A58                     	endif
  7370  002A58                     	if	0	;tblptru may be non-zero
  7371  002A58                     	endif
  7372  002A58  0008               	tblrd		*
  7373  002A5A  50F5               	movf	tablat,w,c
  7374  002A5C  5E01               	subwf	?___wmul^0,f,c
  7375  002A5E  0E00               	movlw	0
  7376  002A60  5A02               	subwfb	(?___wmul+1)^0,f,c
  7377  002A62  0E30               	movlw	48
  7378  002A64  2401               	addwf	?___wmul^0,w,c
  7379  002A66  6E10               	movwf	atoi@n^0,c
  7380  002A68  0E00               	movlw	0
  7381  002A6A  2002               	addwfc	(?___wmul+1)^0,w,c
  7382  002A6C  6E11               	movwf	(atoi@n+1)^0,c
  7383  002A6E  EF00  F015         	goto	l3860
  7384  002A72                     l3870:
  7385  002A72  0ED0               	movlw	208
  7386  002A74  6E0A               	movwf	??_atoi^0,c
  7387  002A76  0EFF               	movlw	255
  7388  002A78  6E0B               	movwf	(??_atoi+1)^0,c
  7389  002A7A  C008  FFF6         	movff	atoi@s,tblptrl
  7390  002A7E  C009  FFF7         	movff	atoi@s+1,tblptrh
  7391  002A82                     	if	0	;tblptru may be non-zero
  7392  002A82                     	endif
  7393  002A82                     	if	0	;tblptru may be non-zero
  7394  002A82                     	endif
  7395  002A82  0008               	tblrd		*
  7396  002A84  50F5               	movf	tablat,w,c
  7397  002A86  6E0C               	movwf	(??_atoi+2)^0,c
  7398  002A88  6A0D               	clrf	(??_atoi+3)^0,c
  7399  002A8A  500A               	movf	??_atoi^0,w,c
  7400  002A8C  260C               	addwf	(??_atoi+2)^0,f,c
  7401  002A8E  500B               	movf	(??_atoi+1)^0,w,c
  7402  002A90  220D               	addwfc	(??_atoi+3)^0,f,c
  7403  002A92  500D               	movf	(??_atoi+3)^0,w,c
  7404  002A94  E109               	bnz	u4340
  7405  002A96  0E0A               	movlw	10
  7406  002A98  5C0C               	subwf	(??_atoi+2)^0,w,c
  7407  002A9A  A0D8               	btfss	status,0,c
  7408  002A9C  EF52  F015         	goto	u4341
  7409  002AA0  EF54  F015         	goto	u4340
  7410  002AA4                     u4341:
  7411  002AA4  EF1E  F015         	goto	l3864
  7412  002AA8                     u4340:
  7413  002AA8  500E               	movf	atoi@neg^0,w,c
  7414  002AAA  100F               	iorwf	(atoi@neg+1)^0,w,c
  7415  002AAC  A4D8               	btfss	status,2,c
  7416  002AAE  EF5B  F015         	goto	u4351
  7417  002AB2  EF5D  F015         	goto	u4350
  7418  002AB6                     u4351:
  7419  002AB6  EF6B  F015         	goto	l1025
  7420  002ABA                     u4350:
  7421  002ABA  C010  F00A         	movff	atoi@n,??_atoi
  7422  002ABE  C011  F00B         	movff	atoi@n+1,??_atoi+1
  7423  002AC2  1E0A               	comf	??_atoi^0,f,c
  7424  002AC4  1E0B               	comf	(??_atoi+1)^0,f,c
  7425  002AC6  4A0A               	infsnz	??_atoi^0,f,c
  7426  002AC8  2A0B               	incf	(??_atoi+1)^0,f,c
  7427  002ACA  C00A  F008         	movff	??_atoi,?_atoi
  7428  002ACE  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7429  002AD2  EF6F  F015         	goto	l1028
  7430  002AD6                     l1025:
  7431  002AD6  C010  F008         	movff	atoi@n,?_atoi
  7432  002ADA  C011  F009         	movff	atoi@n+1,?_atoi+1
  7433  002ADE                     l1028:
  7434  002ADE  0012               	return		;funcret
  7435  002AE0                     __end_of_atoi:
  7436                           	callstack 0
  7437                           
  7438 ;; *************** function _isspace *****************
  7439 ;; Defined at:
  7440 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  c               2    0[COMRAM] int 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  2    0[COMRAM] int 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7454 ;;      Params:         2       0       0       0       0       0       0       0       0
  7455 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7456 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7457 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7458 ;;Total ram usage:        7 bytes
  7459 ;; Hardware stack levels used: 1
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_atoi
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text27
  7468  003588                     __ptext27:
  7469                           	callstack 0
  7470  003588                     _isspace:
  7471                           	callstack 26
  7472  003588  0E01               	movlw	1
  7473  00358A  6E07               	movwf	_isspace$943^0,c
  7474  00358C  0E20               	movlw	32
  7475  00358E  1801               	xorwf	isspace@c^0,w,c
  7476  003590  1002               	iorwf	(isspace@c+1)^0,w,c
  7477  003592  B4D8               	btfsc	status,2,c
  7478  003594  EFCE  F01A         	goto	u3821
  7479  003598  EFD0  F01A         	goto	u3820
  7480  00359C                     u3821:
  7481  00359C  EFE9  F01A         	goto	l3522
  7482  0035A0                     u3820:
  7483  0035A0  0EF7               	movlw	247
  7484  0035A2  6E03               	movwf	??_isspace^0,c
  7485  0035A4  0EFF               	movlw	255
  7486  0035A6  6E04               	movwf	(??_isspace+1)^0,c
  7487  0035A8  C001  F005         	movff	isspace@c,??_isspace+2
  7488  0035AC  C002  F006         	movff	isspace@c+1,??_isspace+3
  7489  0035B0  5003               	movf	??_isspace^0,w,c
  7490  0035B2  2605               	addwf	(??_isspace+2)^0,f,c
  7491  0035B4  5004               	movf	(??_isspace+1)^0,w,c
  7492  0035B6  2206               	addwfc	(??_isspace+3)^0,f,c
  7493  0035B8  5006               	movf	(??_isspace+3)^0,w,c
  7494  0035BA  E109               	bnz	u3830
  7495  0035BC  0E05               	movlw	5
  7496  0035BE  5C05               	subwf	(??_isspace+2)^0,w,c
  7497  0035C0  A0D8               	btfss	status,0,c
  7498  0035C2  EFE5  F01A         	goto	u3831
  7499  0035C6  EFE7  F01A         	goto	u3830
  7500  0035CA                     u3831:
  7501  0035CA  EFE9  F01A         	goto	l3522
  7502  0035CE                     u3830:
  7503  0035CE  0E00               	movlw	0
  7504  0035D0  6E07               	movwf	_isspace$943^0,c
  7505  0035D2                     l3522:
  7506  0035D2  C007  F001         	movff	_isspace$943,?_isspace
  7507  0035D6  6A02               	clrf	(?_isspace+1)^0,c
  7508  0035D8  0012               	return		;funcret
  7509  0035DA                     __end_of_isspace:
  7510                           	callstack 0
  7511                           
  7512 ;; *************** function _isdigit *****************
  7513 ;; Defined at:
  7514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  c               2    0[COMRAM] int 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  2    0[COMRAM] int 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7528 ;;      Params:         2       0       0       0       0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7530 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7531 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7532 ;;Total ram usage:        6 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_vfpfcnvrt
  7538 ;;		_atoi
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text28
  7543  003830                     __ptext28:
  7544                           	callstack 0
  7545  003830                     _isdigit:
  7546                           	callstack 27
  7547  003830  0ED0               	movlw	208
  7548  003832  6E03               	movwf	??_isdigit^0,c
  7549  003834  0EFF               	movlw	255
  7550  003836  6E04               	movwf	(??_isdigit+1)^0,c
  7551  003838  C001  F005         	movff	isdigit@c,??_isdigit+2
  7552  00383C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7553  003840  5003               	movf	??_isdigit^0,w,c
  7554  003842  2605               	addwf	(??_isdigit+2)^0,f,c
  7555  003844  5004               	movf	(??_isdigit+1)^0,w,c
  7556  003846  2206               	addwfc	(??_isdigit+3)^0,f,c
  7557  003848  5006               	movf	(??_isdigit+3)^0,w,c
  7558  00384A  E10A               	bnz	u3800
  7559  00384C  0E0A               	movlw	10
  7560  00384E  5C05               	subwf	(??_isdigit+2)^0,w,c
  7561  003850  A0D8               	btfss	status,0,c
  7562  003852  EF2D  F01C         	goto	u3801
  7563  003856  EF30  F01C         	goto	u3800
  7564  00385A                     u3801:
  7565  00385A  0E01               	movlw	1
  7566  00385C  EF31  F01C         	goto	u3810
  7567  003860                     u3800:
  7568  003860  0E00               	movlw	0
  7569  003862                     u3810:
  7570  003862  6E01               	movwf	?_isdigit^0,c
  7571  003864  6A02               	clrf	(?_isdigit+1)^0,c
  7572  003866  0012               	return		;funcret
  7573  003868                     __end_of_isdigit:
  7574                           	callstack 0
  7575                           
  7576 ;; *************** function ___wmul *****************
  7577 ;; Defined at:
  7578 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;  multiplier      2    0[COMRAM] unsigned int 
  7581 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  product         2    4[COMRAM] unsigned int 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  2    0[COMRAM] unsigned int 
  7586 ;; Registers used:
  7587 ;;		wreg, status,2, status,0, prodl, prodh
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7593 ;;      Params:         4       0       0       0       0       0       0       0       0
  7594 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7596 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7597 ;;Total ram usage:        6 bytes
  7598 ;; Hardware stack levels used: 1
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_atoi
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text29
  7607  00389E                     __ptext29:
  7608                           	callstack 0
  7609  00389E                     ___wmul:
  7610                           	callstack 26
  7611  00389E  5001               	movf	___wmul@multiplier^0,w,c
  7612  0038A0  0203               	mulwf	___wmul@multiplicand^0,c
  7613  0038A2  CFF3 F005          	movff	prodl,___wmul@product
  7614  0038A6  CFF4 F006          	movff	prodh,___wmul@product+1
  7615  0038AA  5001               	movf	___wmul@multiplier^0,w,c
  7616  0038AC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7617  0038AE  50F3               	movf	243,w,c
  7618  0038B0  2606               	addwf	(___wmul@product+1)^0,f,c
  7619  0038B2  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7620  0038B4  0203               	mulwf	___wmul@multiplicand^0,c
  7621  0038B6  50F3               	movf	243,w,c
  7622  0038B8  2606               	addwf	(___wmul@product+1)^0,f,c
  7623  0038BA  C005  F001         	movff	___wmul@product,?___wmul
  7624  0038BE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7625  0038C2  0012               	return		;funcret
  7626  0038C4                     __end_of___wmul:
  7627                           	callstack 0
  7628                           
  7629 ;; *************** function _lcd_out *****************
  7630 ;; Defined at:
  7631 ;;		line 156 in file "LCD_LIB.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  row             1    wreg     unsigned char 
  7634 ;;  col             1   10[COMRAM] unsigned char 
  7635 ;;  str             2   11[COMRAM] PTR unsigned char 
  7636 ;;		 -> strLCD(20), 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;  row             1   13[COMRAM] unsigned char 
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      void 
  7641 ;; Registers used:
  7642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7648 ;;      Params:         3       0       0       0       0       0       0       0       0
  7649 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7651 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7652 ;;Total ram usage:        4 bytes
  7653 ;; Hardware stack levels used: 1
  7654 ;; Hardware stack levels required when called: 4
  7655 ;; This function calls:
  7656 ;;		_lcd_set_cursor
  7657 ;;		_lcd_write
  7658 ;; This function is called by:
  7659 ;;		_main
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text30
  7664  003784                     __ptext30:
  7665                           	callstack 0
  7666  003784                     _lcd_out:
  7667                           	callstack 26
  7668                           
  7669                           ;incstack = 0
  7670                           ;lcd_out@row stored from wreg
  7671  003784  6E0E               	movwf	lcd_out@row^0,c
  7672  003786                     
  7673                           ;LCD_LIB.c: 157:     lcd_set_cursor(row,col);
  7674  003786  C00B  F007         	movff	lcd_out@col,lcd_set_cursor@col
  7675  00378A  500E               	movf	lcd_out@row^0,w,c
  7676  00378C  ECCC  F019         	call	_lcd_set_cursor
  7677                           
  7678                           ;LCD_LIB.c: 158:     while(*str){
  7679  003790  EFD3  F01B         	goto	l4108
  7680  003794                     l4104:
  7681                           
  7682                           ;LCD_LIB.c: 159:         lcd_write(*str);
  7683  003794  C00C  FFD9         	movff	lcd_out@str,fsr2l
  7684  003798  C00D  FFDA         	movff	lcd_out@str+1,fsr2h
  7685  00379C  50DF               	movf	indf2,w,c
  7686  00379E  EC8B  F01C         	call	_lcd_write
  7687  0037A2                     
  7688                           ;LCD_LIB.c: 160:         str++;
  7689  0037A2  4A0C               	infsnz	lcd_out@str^0,f,c
  7690  0037A4  2A0D               	incf	(lcd_out@str+1)^0,f,c
  7691  0037A6                     l4108:
  7692                           
  7693                           ;LCD_LIB.c: 158:     while(*str){
  7694  0037A6  C00C  FFD9         	movff	lcd_out@str,fsr2l
  7695  0037AA  C00D  FFDA         	movff	lcd_out@str+1,fsr2h
  7696  0037AE  50DF               	movf	indf2,w,c
  7697  0037B0  A4D8               	btfss	status,2,c
  7698  0037B2  EFDD  F01B         	goto	u4561
  7699  0037B6  EFDF  F01B         	goto	u4560
  7700  0037BA                     u4561:
  7701  0037BA  EFCA  F01B         	goto	l4104
  7702  0037BE                     u4560:
  7703  0037BE  0012               	return		;funcret
  7704  0037C0                     __end_of_lcd_out:
  7705                           	callstack 0
  7706                           
  7707 ;; *************** function _lcd_write *****************
  7708 ;; Defined at:
  7709 ;;		line 33 in file "LCD_LIB.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  letra           1    wreg     unsigned char 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  letra           1    5[COMRAM] unsigned char 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, status,0, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7723 ;;      Params:         0       0       0       0       0       0       0       0       0
  7724 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7726 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7727 ;;Total ram usage:        1 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; Hardware stack levels required when called: 2
  7730 ;; This function calls:
  7731 ;;		__send_byte
  7732 ;; This function is called by:
  7733 ;;		_lcd_out
  7734 ;;		_lcd_puts
  7735 ;;		_lcd_custom_char
  7736 ;;		_lcd_char
  7737 ;; This function uses a non-reentrant model
  7738 ;;
  7739                           
  7740                           	psect	text31
  7741  003916                     __ptext31:
  7742                           	callstack 0
  7743  003916                     _lcd_write:
  7744                           	callstack 27
  7745                           
  7746                           ;incstack = 0
  7747                           ;lcd_write@letra stored from wreg
  7748  003916  6E06               	movwf	lcd_write@letra^0,c
  7749  003918                     
  7750                           ;LCD_LIB.c: 34:     _send_byte(letra,1);
  7751  003918  0E01               	movlw	1
  7752  00391A  6E02               	movwf	__send_byte@mode^0,c
  7753  00391C  5006               	movf	lcd_write@letra^0,w,c
  7754  00391E  ECED  F01A         	call	__send_byte
  7755  003922  0012               	return		;funcret
  7756  003924                     __end_of_lcd_write:
  7757                           	callstack 0
  7758                           
  7759 ;; *************** function _lcd_set_cursor *****************
  7760 ;; Defined at:
  7761 ;;		line 86 in file "LCD_LIB.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  row             1    wreg     unsigned char 
  7764 ;;  col             1    6[COMRAM] unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  row             1    9[COMRAM] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      void 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7776 ;;      Params:         1       0       0       0       0       0       0       0       0
  7777 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7778 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7779 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7780 ;;Total ram usage:        4 bytes
  7781 ;; Hardware stack levels used: 1
  7782 ;; Hardware stack levels required when called: 3
  7783 ;; This function calls:
  7784 ;;		_lcd_command
  7785 ;; This function is called by:
  7786 ;;		_lcd_out
  7787 ;;		_lcd_char
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           	psect	text32
  7792  003398                     __ptext32:
  7793                           	callstack 0
  7794  003398                     _lcd_set_cursor:
  7795                           	callstack 26
  7796                           
  7797                           ;incstack = 0
  7798                           ;lcd_set_cursor@row stored from wreg
  7799  003398  6E0A               	movwf	lcd_set_cursor@row^0,c
  7800  00339A                     
  7801                           ;LCD_LIB.c: 88:  switch(row){
  7802  00339A  EFE7  F019         	goto	l4020
  7803  00339E                     l4010:
  7804  00339E  5007               	movf	lcd_set_cursor@col^0,w,c
  7805  0033A0  0F7F               	addlw	127
  7806  0033A2  EC92  F01C         	call	_lcd_command
  7807  0033A6  EF04  F01A         	goto	l99
  7808  0033AA                     l4012:
  7809  0033AA  5007               	movf	lcd_set_cursor@col^0,w,c
  7810  0033AC  0FBF               	addlw	191
  7811  0033AE  EC92  F01C         	call	_lcd_command
  7812  0033B2  EF04  F01A         	goto	l99
  7813  0033B6                     l4014:
  7814  0033B6  5007               	movf	lcd_set_cursor@col^0,w,c
  7815  0033B8  0F93               	addlw	147
  7816  0033BA  EC92  F01C         	call	_lcd_command
  7817  0033BE  EF04  F01A         	goto	l99
  7818  0033C2                     l4016:
  7819  0033C2  5007               	movf	lcd_set_cursor@col^0,w,c
  7820  0033C4  0FD3               	addlw	211
  7821  0033C6  EC92  F01C         	call	_lcd_command
  7822  0033CA  EF04  F01A         	goto	l99
  7823  0033CE                     l4020:
  7824  0033CE  500A               	movf	lcd_set_cursor@row^0,w,c
  7825  0033D0  6E08               	movwf	??_lcd_set_cursor^0,c
  7826  0033D2  6A09               	clrf	(??_lcd_set_cursor+1)^0,c
  7827                           
  7828                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7829                           ; Switch size 1, requested type "simple"
  7830                           ; Number of cases is 1, Range of values is 0 to 0
  7831                           ; switch strategies available:
  7832                           ; Name         Instructions Cycles
  7833                           ; simple_byte            4     3 (average)
  7834                           ;	Chosen strategy is simple_byte
  7835  0033D4  5009               	movf	(??_lcd_set_cursor+1)^0,w,c
  7836  0033D6  0A00               	xorlw	0	; case 0
  7837  0033D8  B4D8               	btfsc	status,2,c
  7838  0033DA  EFF1  F019         	goto	l4304
  7839  0033DE  EF04  F01A         	goto	l99
  7840  0033E2                     l4304:
  7841                           
  7842                           ; Switch size 1, requested type "simple"
  7843                           ; Number of cases is 4, Range of values is 1 to 4
  7844                           ; switch strategies available:
  7845                           ; Name         Instructions Cycles
  7846                           ; simple_byte           13     7 (average)
  7847                           ;	Chosen strategy is simple_byte
  7848  0033E2  5008               	movf	??_lcd_set_cursor^0,w,c
  7849  0033E4  0A01               	xorlw	1	; case 1
  7850  0033E6  B4D8               	btfsc	status,2,c
  7851  0033E8  EFCF  F019         	goto	l4010
  7852  0033EC  0A03               	xorlw	3	; case 2
  7853  0033EE  B4D8               	btfsc	status,2,c
  7854  0033F0  EFD5  F019         	goto	l4012
  7855  0033F4  0A01               	xorlw	1	; case 3
  7856  0033F6  B4D8               	btfsc	status,2,c
  7857  0033F8  EFDB  F019         	goto	l4014
  7858  0033FC  0A07               	xorlw	7	; case 4
  7859  0033FE  B4D8               	btfsc	status,2,c
  7860  003400  EFE1  F019         	goto	l4016
  7861  003404  EF04  F01A         	goto	l99
  7862  003408                     l99:
  7863  003408  0012               	return		;funcret
  7864  00340A                     __end_of_lcd_set_cursor:
  7865                           	callstack 0
  7866                           
  7867 ;; *************** function _lcd_init *****************
  7868 ;; Defined at:
  7869 ;;		line 40 in file "LCD_LIB.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;		None
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  1    wreg      void 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0, cstack
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7883 ;;      Params:         0       0       0       0       0       0       0       0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7885 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7886 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7887 ;;Total ram usage:        1 bytes
  7888 ;; Hardware stack levels used: 1
  7889 ;; Hardware stack levels required when called: 3
  7890 ;; This function calls:
  7891 ;;		__write_nibble
  7892 ;;		_lcd_command
  7893 ;; This function is called by:
  7894 ;;		_main
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text33
  7899  00331A                     __ptext33:
  7900                           	callstack 0
  7901  00331A                     _lcd_init:
  7902                           	callstack 27
  7903  00331A                     
  7904                           ;LCD_LIB.c: 42:     TRISD &= ~( (1<<0)|
  7905  00331A  0E0C               	movlw	12
  7906  00331C  1695               	andwf	149,f,c	;volatile
  7907                           
  7908                           ;LCD_LIB.c: 49:     PORTD &= ~( (1<<0)|
  7909  00331E  0E0C               	movlw	12
  7910  003320  1683               	andwf	131,f,c	;volatile
  7911  003322                     
  7912                           ;LCD_LIB.c: 58:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
  7913  003322  0E62               	movlw	98
  7914  003324  6E07               	movwf	??_lcd_init^0,c
  7915  003326  0E66               	movlw	102
  7916  003328                     u4697:
  7917  003328  2EE8               	decfsz	wreg,f,c
  7918  00332A  D7FE               	bra	u4697
  7919  00332C  2E07               	decfsz	??_lcd_init^0,f,c
  7920  00332E  D7FC               	bra	u4697
  7921  003330                     
  7922                           ;LCD_LIB.c: 59:     _write_nibble(0x03);
  7923  003330  0E03               	movlw	3
  7924  003332  EC05  F01A         	call	__write_nibble
  7925  003336                     
  7926                           ;LCD_LIB.c: 60:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  7927  003336  0E21               	movlw	33
  7928  003338  6E07               	movwf	??_lcd_init^0,c
  7929  00333A  0E76               	movlw	118
  7930  00333C                     u4707:
  7931  00333C  2EE8               	decfsz	wreg,f,c
  7932  00333E  D7FE               	bra	u4707
  7933  003340  2E07               	decfsz	??_lcd_init^0,f,c
  7934  003342  D7FC               	bra	u4707
  7935  003344  D000               	nop2	
  7936  003346                     
  7937                           ;LCD_LIB.c: 61:     _write_nibble(0x03);
  7938  003346  0E03               	movlw	3
  7939  003348  EC05  F01A         	call	__write_nibble
  7940  00334C                     
  7941                           ;LCD_LIB.c: 62:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  7942  00334C  0EA6               	movlw	166
  7943  00334E                     u4717:
  7944  00334E  2EE8               	decfsz	wreg,f,c
  7945  003350  D7FE               	bra	u4717
  7946  003352  D000               	nop2	
  7947  003354                     
  7948                           ;LCD_LIB.c: 63:     _write_nibble(0x03);
  7949  003354  0E03               	movlw	3
  7950  003356  EC05  F01A         	call	__write_nibble
  7951  00335A                     
  7952                           ;LCD_LIB.c: 64:     _write_nibble(0x02);
  7953  00335A  0E02               	movlw	2
  7954  00335C  EC05  F01A         	call	__write_nibble
  7955  003360                     
  7956                           ;LCD_LIB.c: 66:     lcd_command( 0x20 | 0x00 | 0x08 | 0x00 );
  7957  003360  0E28               	movlw	40
  7958  003362  EC92  F01C         	call	_lcd_command
  7959  003366                     
  7960                           ;LCD_LIB.c: 67:     _delay((unsigned long)((37)*(20000000UL/4000000.0)));
  7961  003366  0E3D               	movlw	61
  7962  003368                     u4727:
  7963  003368  2EE8               	decfsz	wreg,f,c
  7964  00336A  D7FE               	bra	u4727
  7965  00336C  D000               	nop2	
  7966  00336E                     
  7967                           ;LCD_LIB.c: 69:     _lcd_params = 0x04 | 0x02 | 0x01;
  7968  00336E  0E07               	movlw	7
  7969  003370  6E5E               	movwf	__lcd_params^0,c
  7970  003372                     
  7971                           ;LCD_LIB.c: 70:     lcd_command(0x08 | _lcd_params);
  7972  003372  505E               	movf	__lcd_params^0,w,c
  7973  003374  0908               	iorlw	8
  7974  003376  EC92  F01C         	call	_lcd_command
  7975  00337A                     
  7976                           ;LCD_LIB.c: 71:     _delay((unsigned long)((37)*(20000000UL/4000000.0)));
  7977  00337A  0E3D               	movlw	61
  7978  00337C                     u4737:
  7979  00337C  2EE8               	decfsz	wreg,f,c
  7980  00337E  D7FE               	bra	u4737
  7981  003380  D000               	nop2	
  7982  003382                     
  7983                           ;LCD_LIB.c: 73:     lcd_command(0x01);
  7984  003382  0E01               	movlw	1
  7985  003384  EC92  F01C         	call	_lcd_command
  7986  003388                     
  7987                           ;LCD_LIB.c: 74:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
  7988  003388  0E0D               	movlw	13
  7989  00338A  6E07               	movwf	??_lcd_init^0,c
  7990  00338C  0EFC               	movlw	252
  7991  00338E                     u4747:
  7992  00338E  2EE8               	decfsz	wreg,f,c
  7993  003390  D7FE               	bra	u4747
  7994  003392  2E07               	decfsz	??_lcd_init^0,f,c
  7995  003394  D7FC               	bra	u4747
  7996  003396  0012               	return		;funcret
  7997  003398                     __end_of_lcd_init:
  7998                           	callstack 0
  7999                           
  8000 ;; *************** function _lcd_disable_cursor *****************
  8001 ;; Defined at:
  8002 ;;		line 133 in file "LCD_LIB.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;		None
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;		None
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		wreg, status,2, status,0, cstack
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8016 ;;      Params:         0       0       0       0       0       0       0       0       0
  8017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8019 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8020 ;;Total ram usage:        0 bytes
  8021 ;; Hardware stack levels used: 1
  8022 ;; Hardware stack levels required when called: 3
  8023 ;; This function calls:
  8024 ;;		_lcd_command
  8025 ;; This function is called by:
  8026 ;;		_main
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text34
  8031  0038EE                     __ptext34:
  8032                           	callstack 0
  8033  0038EE                     _lcd_disable_cursor:
  8034                           	callstack 27
  8035  0038EE                     
  8036                           ;LCD_LIB.c: 134:  _lcd_params &= ~0x02;
  8037  0038EE  925E               	bcf	__lcd_params^0,1,c
  8038  0038F0                     
  8039                           ;LCD_LIB.c: 135:  lcd_command(0x08 |_lcd_params);
  8040  0038F0  505E               	movf	__lcd_params^0,w,c
  8041  0038F2  0908               	iorlw	8
  8042  0038F4  EC92  F01C         	call	_lcd_command
  8043  0038F8                     
  8044                           ;LCD_LIB.c: 136:  _delay((unsigned long)((37)*(20000000UL/4000000.0)));
  8045  0038F8  0E3D               	movlw	61
  8046  0038FA                     u4757:
  8047  0038FA  2EE8               	decfsz	wreg,f,c
  8048  0038FC  D7FE               	bra	u4757
  8049  0038FE  D000               	nop2	
  8050  003900  0012               	return		;funcret
  8051  003902                     __end_of_lcd_disable_cursor:
  8052                           	callstack 0
  8053                           
  8054 ;; *************** function _lcd_disable_blink *****************
  8055 ;; Defined at:
  8056 ;;		line 122 in file "LCD_LIB.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;		None
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;		None
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1    wreg      void 
  8063 ;; Registers used:
  8064 ;;		wreg, status,2, status,0, cstack
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8070 ;;      Params:         0       0       0       0       0       0       0       0       0
  8071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8073 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8074 ;;Total ram usage:        0 bytes
  8075 ;; Hardware stack levels used: 1
  8076 ;; Hardware stack levels required when called: 3
  8077 ;; This function calls:
  8078 ;;		_lcd_command
  8079 ;; This function is called by:
  8080 ;;		_main
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text35
  8085  003902                     __ptext35:
  8086                           	callstack 0
  8087  003902                     _lcd_disable_blink:
  8088                           	callstack 27
  8089  003902                     
  8090                           ;LCD_LIB.c: 123:  _lcd_params &= ~0x01;
  8091  003902  905E               	bcf	__lcd_params^0,0,c
  8092  003904                     
  8093                           ;LCD_LIB.c: 124:  lcd_command(0x08 |_lcd_params);
  8094  003904  505E               	movf	__lcd_params^0,w,c
  8095  003906  0908               	iorlw	8
  8096  003908  EC92  F01C         	call	_lcd_command
  8097  00390C                     
  8098                           ;LCD_LIB.c: 125:  _delay((unsigned long)((37)*(20000000UL/4000000.0)));
  8099  00390C  0E3D               	movlw	61
  8100  00390E                     u4767:
  8101  00390E  2EE8               	decfsz	wreg,f,c
  8102  003910  D7FE               	bra	u4767
  8103  003912  D000               	nop2	
  8104  003914  0012               	return		;funcret
  8105  003916                     __end_of_lcd_disable_blink:
  8106                           	callstack 0
  8107                           
  8108 ;; *************** function _lcd_command *****************
  8109 ;; Defined at:
  8110 ;;		line 36 in file "LCD_LIB.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  cmd             1    wreg     unsigned char 
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  cmd             1    5[COMRAM] unsigned char 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0
  8125 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8127 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8128 ;;Total ram usage:        1 bytes
  8129 ;; Hardware stack levels used: 1
  8130 ;; Hardware stack levels required when called: 2
  8131 ;; This function calls:
  8132 ;;		__send_byte
  8133 ;; This function is called by:
  8134 ;;		_lcd_init
  8135 ;;		_lcd_set_cursor
  8136 ;;		_lcd_disable_blink
  8137 ;;		_lcd_disable_cursor
  8138 ;;		_lcd_clear
  8139 ;;		_lcd_return_home
  8140 ;;		_lcd_on
  8141 ;;		_lcd_off
  8142 ;;		_lcd_enable_blink
  8143 ;;		_lcd_enable_cursor
  8144 ;;		_lcd_scroll_left
  8145 ;;		_lcd_scroll_right
  8146 ;;		_lcd_custom_char
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           	psect	text36
  8151  003924                     __ptext36:
  8152                           	callstack 0
  8153  003924                     _lcd_command:
  8154                           	callstack 26
  8155                           
  8156                           ;incstack = 0
  8157                           ;lcd_command@cmd stored from wreg
  8158  003924  6E06               	movwf	lcd_command@cmd^0,c
  8159  003926                     
  8160                           ;LCD_LIB.c: 37:     _send_byte(cmd,0);
  8161  003926  0E00               	movlw	0
  8162  003928  6E02               	movwf	__send_byte@mode^0,c
  8163  00392A  5006               	movf	lcd_command@cmd^0,w,c
  8164  00392C  ECED  F01A         	call	__send_byte
  8165  003930  0012               	return		;funcret
  8166  003932                     __end_of_lcd_command:
  8167                           	callstack 0
  8168                           
  8169 ;; *************** function __send_byte *****************
  8170 ;; Defined at:
  8171 ;;		line 23 in file "LCD_LIB.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;  value           1    wreg     unsigned char 
  8174 ;;  mode            1    1[COMRAM] unsigned char 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;  value           1    4[COMRAM] unsigned char 
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  1    wreg      void 
  8179 ;; Registers used:
  8180 ;;		wreg, status,2, status,0, cstack
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8186 ;;      Params:         1       0       0       0       0       0       0       0       0
  8187 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8188 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8189 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8190 ;;Total ram usage:        4 bytes
  8191 ;; Hardware stack levels used: 1
  8192 ;; Hardware stack levels required when called: 1
  8193 ;; This function calls:
  8194 ;;		__write_nibble
  8195 ;; This function is called by:
  8196 ;;		_lcd_write
  8197 ;;		_lcd_command
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text37
  8202  0035DA                     __ptext37:
  8203                           	callstack 0
  8204  0035DA                     __send_byte:
  8205                           	callstack 27
  8206                           
  8207                           ;incstack = 0
  8208                           ;__send_byte@value stored from wreg
  8209  0035DA  6E05               	movwf	__send_byte@value^0,c
  8210  0035DC                     
  8211                           ;LCD_LIB.c: 25:     switch(mode){
  8212  0035DC  EFF6  F01A         	goto	l3534
  8213  0035E0                     l3528:
  8214  0035E0  9083               	bcf	131,0,c	;volatile
  8215  0035E2  EF0B  F01B         	goto	l3536
  8216  0035E6                     l3530:
  8217  0035E6  8083               	bsf	131,0,c	;volatile
  8218  0035E8  EF0B  F01B         	goto	l3536
  8219  0035EC                     l3534:
  8220  0035EC  5002               	movf	__send_byte@mode^0,w,c
  8221  0035EE  6E03               	movwf	??__send_byte^0,c
  8222  0035F0  6A04               	clrf	(??__send_byte+1)^0,c
  8223                           
  8224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8225                           ; Switch size 1, requested type "simple"
  8226                           ; Number of cases is 1, Range of values is 0 to 0
  8227                           ; switch strategies available:
  8228                           ; Name         Instructions Cycles
  8229                           ; simple_byte            4     3 (average)
  8230                           ;	Chosen strategy is simple_byte
  8231  0035F2  5004               	movf	(??__send_byte+1)^0,w,c
  8232  0035F4  0A00               	xorlw	0	; case 0
  8233  0035F6  B4D8               	btfsc	status,2,c
  8234  0035F8  EF00  F01B         	goto	l4306
  8235  0035FC  EF0B  F01B         	goto	l3536
  8236  003600                     l4306:
  8237                           
  8238                           ; Switch size 1, requested type "simple"
  8239                           ; Number of cases is 2, Range of values is 0 to 1
  8240                           ; switch strategies available:
  8241                           ; Name         Instructions Cycles
  8242                           ; simple_byte            7     4 (average)
  8243                           ;	Chosen strategy is simple_byte
  8244  003600  5003               	movf	??__send_byte^0,w,c
  8245  003602  0A00               	xorlw	0	; case 0
  8246  003604  B4D8               	btfsc	status,2,c
  8247  003606  EFF0  F01A         	goto	l3528
  8248  00360A  0A01               	xorlw	1	; case 1
  8249  00360C  B4D8               	btfsc	status,2,c
  8250  00360E  EFF3  F01A         	goto	l3530
  8251  003612  EF0B  F01B         	goto	l3536
  8252  003616                     l3536:
  8253                           
  8254                           ;LCD_LIB.c: 29:     _write_nibble(value>>4);
  8255  003616  3805               	swapf	__send_byte@value^0,w,c
  8256  003618  0B0F               	andlw	15
  8257  00361A  EC05  F01A         	call	__write_nibble
  8258                           
  8259                           ;LCD_LIB.c: 30:     _write_nibble(value&0x0F);
  8260  00361E  5005               	movf	__send_byte@value^0,w,c
  8261  003620  0B0F               	andlw	15
  8262  003622  EC05  F01A         	call	__write_nibble
  8263  003626  0012               	return		;funcret
  8264  003628                     __end_of__send_byte:
  8265                           	callstack 0
  8266                           
  8267 ;; *************** function __write_nibble *****************
  8268 ;; Defined at:
  8269 ;;		line 10 in file "LCD_LIB.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  nibble          1    wreg     unsigned char 
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;  nibble          1    0[COMRAM] unsigned char 
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1    wreg      void 
  8276 ;; Registers used:
  8277 ;;		wreg, status,2, status,0, cstack
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8283 ;;      Params:         0       0       0       0       0       0       0       0       0
  8284 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8286 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8287 ;;Total ram usage:        1 bytes
  8288 ;; Hardware stack levels used: 1
  8289 ;; This function calls:
  8290 ;;		Nothing
  8291 ;; This function is called by:
  8292 ;;		__send_byte
  8293 ;;		_lcd_init
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text38
  8298  00340A                     __ptext38:
  8299                           	callstack 0
  8300  00340A                     __write_nibble:
  8301                           	callstack 27
  8302                           
  8303                           ;incstack = 0
  8304                           ;__write_nibble@nibble stored from wreg
  8305  00340A  6E01               	movwf	__write_nibble@nibble^0,c
  8306  00340C                     
  8307                           ;LCD_LIB.c: 11:     if( (nibble & 0x01) == 0) PORTD &= ~(1<<4); else PORTD |= (1<<4);
  8308  00340C  B001               	btfsc	__write_nibble@nibble^0,0,c
  8309  00340E  EF0B  F01A         	goto	u2821
  8310  003412  EF0D  F01A         	goto	u2820
  8311  003416                     u2821:
  8312  003416  EF10  F01A         	goto	l2952
  8313  00341A                     u2820:
  8314  00341A  9883               	bcf	131,4,c	;volatile
  8315  00341C  EF11  F01A         	goto	l2954
  8316  003420                     l2952:
  8317  003420  8883               	bsf	131,4,c	;volatile
  8318  003422                     l2954:
  8319                           
  8320                           ;LCD_LIB.c: 12:     if( (nibble & 0x02) == 0) PORTD &= ~(1<<5); else PORTD |= (1<<5);
  8321  003422  B201               	btfsc	__write_nibble@nibble^0,1,c
  8322  003424  EF16  F01A         	goto	u2831
  8323  003428  EF18  F01A         	goto	u2830
  8324  00342C                     u2831:
  8325  00342C  EF1B  F01A         	goto	l2958
  8326  003430                     u2830:
  8327  003430  9A83               	bcf	131,5,c	;volatile
  8328  003432  EF1C  F01A         	goto	l2960
  8329  003436                     l2958:
  8330  003436  8A83               	bsf	131,5,c	;volatile
  8331  003438                     l2960:
  8332                           
  8333                           ;LCD_LIB.c: 13:     if( (nibble & 0x04) == 0) PORTD &= ~(1<<6); else PORTD |= (1<<6);
  8334  003438  B401               	btfsc	__write_nibble@nibble^0,2,c
  8335  00343A  EF21  F01A         	goto	u2841
  8336  00343E  EF23  F01A         	goto	u2840
  8337  003442                     u2841:
  8338  003442  EF26  F01A         	goto	l2964
  8339  003446                     u2840:
  8340  003446  9C83               	bcf	131,6,c	;volatile
  8341  003448  EF27  F01A         	goto	l2966
  8342  00344C                     l2964:
  8343  00344C  8C83               	bsf	131,6,c	;volatile
  8344  00344E                     l2966:
  8345                           
  8346                           ;LCD_LIB.c: 14:     if( (nibble & 0x08) == 0) PORTD &= ~(1<<7); else PORTD |= (1<<7);
  8347  00344E  B601               	btfsc	__write_nibble@nibble^0,3,c
  8348  003450  EF2C  F01A         	goto	u2851
  8349  003454  EF2E  F01A         	goto	u2850
  8350  003458                     u2851:
  8351  003458  EF31  F01A         	goto	l2970
  8352  00345C                     u2850:
  8353  00345C  9E83               	bcf	131,7,c	;volatile
  8354  00345E  EF32  F01A         	goto	l67
  8355  003462                     l2970:
  8356  003462  8E83               	bsf	131,7,c	;volatile
  8357  003464                     l67:
  8358                           
  8359                           ;LCD_LIB.c: 16:     PORTD &= ~(1<<1);
  8360  003464  9283               	bcf	131,1,c	;volatile
  8361                           
  8362                           ;LCD_LIB.c: 17:     PORTD |= (1<<1);
  8363  003466  8283               	bsf	131,1,c	;volatile
  8364                           
  8365                           ;LCD_LIB.c: 18:     PORTD &= ~(1<<1);
  8366  003468  9283               	bcf	131,1,c	;volatile
  8367  00346A                     
  8368                           ;LCD_LIB.c: 20:     _delay((unsigned long)((300)*(20000000UL/4000000.0)));
  8369  00346A  0ED6               	movlw	214
  8370  00346C                     u4777:
  8371  00346C  D000               	nop2	
  8372  00346E  D000               	nop2	
  8373  003470  2EE8               	decfsz	wreg,f,c
  8374  003472  D7FC               	bra	u4777
  8375  003474  D000               	nop2	
  8376  003476  0012               	return		;funcret
  8377  003478                     __end_of__write_nibble:
  8378                           	callstack 0
  8379                           
  8380 ;; *************** function ___xxtofl *****************
  8381 ;; Defined at:
  8382 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  sign            1    wreg     unsigned char 
  8385 ;;  val             4    0[COMRAM] long 
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;  sign            1    8[COMRAM] unsigned char 
  8388 ;;  arg             4   10[COMRAM] unsigned long 
  8389 ;;  exp             1    9[COMRAM] unsigned char 
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  4    0[COMRAM] unsigned char 
  8392 ;; Registers used:
  8393 ;;		wreg, status,2, status,0
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8399 ;;      Params:         4       0       0       0       0       0       0       0       0
  8400 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8401 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8402 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8403 ;;Total ram usage:       14 bytes
  8404 ;; Hardware stack levels used: 1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_main
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text39
  8413  0027D6                     __ptext39:
  8414                           	callstack 0
  8415  0027D6                     ___xxtofl:
  8416                           	callstack 30
  8417                           
  8418                           ;incstack = 0
  8419                           ;___xxtofl@sign stored from wreg
  8420  0027D6  6E09               	movwf	___xxtofl@sign^0,c
  8421  0027D8  5009               	movf	___xxtofl@sign^0,w,c
  8422  0027DA  B4D8               	btfsc	status,2,c
  8423  0027DC  EFF2  F013         	goto	u4571
  8424  0027E0  EFF4  F013         	goto	u4570
  8425  0027E4                     u4571:
  8426  0027E4  EF16  F014         	goto	l801
  8427  0027E8                     u4570:
  8428  0027E8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8429  0027EA  EFFB  F013         	goto	u4580
  8430  0027EE  EFF9  F013         	goto	u4581
  8431  0027F2                     u4581:
  8432  0027F2  EF16  F014         	goto	l801
  8433  0027F6                     u4580:
  8434  0027F6  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8435  0027FA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8436  0027FE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8437  002802  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8438  002806  1E05               	comf	??___xxtofl^0,f,c
  8439  002808  1E06               	comf	(??___xxtofl+1)^0,f,c
  8440  00280A  1E07               	comf	(??___xxtofl+2)^0,f,c
  8441  00280C  1E08               	comf	(??___xxtofl+3)^0,f,c
  8442  00280E  2A05               	incf	??___xxtofl^0,f,c
  8443  002810  0E00               	movlw	0
  8444  002812  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8445  002814  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8446  002816  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8447  002818  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8448  00281C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8449  002820  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8450  002824  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8451  002828  EF1E  F014         	goto	l4116
  8452  00282C                     l801:
  8453  00282C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8454  002830  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8455  002834  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8456  002838  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8457  00283C                     l4116:
  8458  00283C  5001               	movf	___xxtofl@val^0,w,c
  8459  00283E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8460  002840  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8461  002842  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8462  002844  A4D8               	btfss	status,2,c
  8463  002846  EF27  F014         	goto	u4591
  8464  00284A  EF29  F014         	goto	u4590
  8465  00284E                     u4591:
  8466  00284E  EF33  F014         	goto	l4122
  8467  002852                     u4590:
  8468  002852  0E00               	movlw	0
  8469  002854  6E01               	movwf	?___xxtofl^0,c
  8470  002856  0E00               	movlw	0
  8471  002858  6E02               	movwf	(?___xxtofl+1)^0,c
  8472  00285A  0E00               	movlw	0
  8473  00285C  6E03               	movwf	(?___xxtofl+2)^0,c
  8474  00285E  0E00               	movlw	0
  8475  002860  6E04               	movwf	(?___xxtofl+3)^0,c
  8476  002862  EFC4  F014         	goto	l804
  8477  002866                     l4122:
  8478  002866  0E96               	movlw	150
  8479  002868  6E0A               	movwf	___xxtofl@exp^0,c
  8480  00286A  EF3D  F014         	goto	l4126
  8481  00286E                     l4124:
  8482  00286E  2A0A               	incf	___xxtofl@exp^0,f,c
  8483  002870  90D8               	bcf	status,0,c
  8484  002872  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8485  002874  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8486  002876  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8487  002878  320B               	rrcf	___xxtofl@arg^0,f,c
  8488  00287A                     l4126:
  8489  00287A  0E00               	movlw	0
  8490  00287C  140B               	andwf	___xxtofl@arg^0,w,c
  8491  00287E  6E05               	movwf	??___xxtofl^0,c
  8492  002880  0E00               	movlw	0
  8493  002882  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8494  002884  6E06               	movwf	(??___xxtofl+1)^0,c
  8495  002886  0E00               	movlw	0
  8496  002888  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8497  00288A  6E07               	movwf	(??___xxtofl+2)^0,c
  8498  00288C  0EFE               	movlw	254
  8499  00288E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8500  002890  6E08               	movwf	(??___xxtofl+3)^0,c
  8501  002892  5005               	movf	??___xxtofl^0,w,c
  8502  002894  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8503  002896  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8504  002898  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8505  00289A  A4D8               	btfss	status,2,c
  8506  00289C  EF52  F014         	goto	u4601
  8507  0028A0  EF54  F014         	goto	u4600
  8508  0028A4                     u4601:
  8509  0028A4  EF37  F014         	goto	l4124
  8510  0028A8                     u4600:
  8511  0028A8  EF62  F014         	goto	l808
  8512  0028AC                     l4128:
  8513  0028AC  2A0A               	incf	___xxtofl@exp^0,f,c
  8514  0028AE  0E01               	movlw	1
  8515  0028B0  260B               	addwf	___xxtofl@arg^0,f,c
  8516  0028B2  0E00               	movlw	0
  8517  0028B4  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8518  0028B6  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8519  0028B8  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8520  0028BA  90D8               	bcf	status,0,c
  8521  0028BC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8522  0028BE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8523  0028C0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8524  0028C2  320B               	rrcf	___xxtofl@arg^0,f,c
  8525  0028C4                     l808:
  8526  0028C4  0E00               	movlw	0
  8527  0028C6  140B               	andwf	___xxtofl@arg^0,w,c
  8528  0028C8  6E05               	movwf	??___xxtofl^0,c
  8529  0028CA  0E00               	movlw	0
  8530  0028CC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8531  0028CE  6E06               	movwf	(??___xxtofl+1)^0,c
  8532  0028D0  0E00               	movlw	0
  8533  0028D2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8534  0028D4  6E07               	movwf	(??___xxtofl+2)^0,c
  8535  0028D6  0EFF               	movlw	255
  8536  0028D8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8537  0028DA  6E08               	movwf	(??___xxtofl+3)^0,c
  8538  0028DC  5005               	movf	??___xxtofl^0,w,c
  8539  0028DE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8540  0028E0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8541  0028E2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8542  0028E4  A4D8               	btfss	status,2,c
  8543  0028E6  EF77  F014         	goto	u4611
  8544  0028EA  EF79  F014         	goto	u4610
  8545  0028EE                     u4611:
  8546  0028EE  EF56  F014         	goto	l4128
  8547  0028F2                     u4610:
  8548  0028F2  EF81  F014         	goto	l4136
  8549  0028F6                     l4134:
  8550  0028F6  060A               	decf	___xxtofl@exp^0,f,c
  8551  0028F8  90D8               	bcf	status,0,c
  8552  0028FA  360B               	rlcf	___xxtofl@arg^0,f,c
  8553  0028FC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8554  0028FE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8555  002900  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8556  002902                     l4136:
  8557  002902  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8558  002904  EF86  F014         	goto	u4621
  8559  002908  EF88  F014         	goto	u4620
  8560  00290C                     u4621:
  8561  00290C  EF90  F014         	goto	l815
  8562  002910                     u4620:
  8563  002910  0E02               	movlw	2
  8564  002912  600A               	cpfslt	___xxtofl@exp^0,c
  8565  002914  EF8E  F014         	goto	u4631
  8566  002918  EF90  F014         	goto	u4630
  8567  00291C                     u4631:
  8568  00291C  EF7B  F014         	goto	l4134
  8569  002920                     u4630:
  8570  002920                     l815:
  8571  002920  B00A               	btfsc	___xxtofl@exp^0,0,c
  8572  002922  EF95  F014         	goto	u4641
  8573  002926  EF97  F014         	goto	u4640
  8574  00292A                     u4641:
  8575  00292A  EF98  F014         	goto	l4142
  8576  00292E                     u4640:
  8577  00292E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8578  002930                     l4142:
  8579  002930  90D8               	bcf	status,0,c
  8580  002932  320A               	rrcf	___xxtofl@exp^0,f,c
  8581  002934  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8582  002938  6A06               	clrf	(??___xxtofl+1)^0,c
  8583  00293A  6A07               	clrf	(??___xxtofl+2)^0,c
  8584  00293C  6A08               	clrf	(??___xxtofl+3)^0,c
  8585  00293E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8586  002942  6A07               	clrf	(??___xxtofl+2)^0,c
  8587  002944  6A06               	clrf	(??___xxtofl+1)^0,c
  8588  002946  6A05               	clrf	??___xxtofl^0,c
  8589  002948  5005               	movf	??___xxtofl^0,w,c
  8590  00294A  120B               	iorwf	___xxtofl@arg^0,f,c
  8591  00294C  5006               	movf	(??___xxtofl+1)^0,w,c
  8592  00294E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8593  002950  5007               	movf	(??___xxtofl+2)^0,w,c
  8594  002952  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8595  002954  5008               	movf	(??___xxtofl+3)^0,w,c
  8596  002956  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8597  002958  5009               	movf	___xxtofl@sign^0,w,c
  8598  00295A  B4D8               	btfsc	status,2,c
  8599  00295C  EFB2  F014         	goto	u4651
  8600  002960  EFB4  F014         	goto	u4650
  8601  002964                     u4651:
  8602  002964  EFBC  F014         	goto	l4152
  8603  002968                     u4650:
  8604  002968  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8605  00296A  EFBB  F014         	goto	u4660
  8606  00296E  EFB9  F014         	goto	u4661
  8607  002972                     u4661:
  8608  002972  EFBC  F014         	goto	l4152
  8609  002976                     u4660:
  8610  002976  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8611  002978                     l4152:
  8612  002978  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8613  00297C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8614  002980  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8615  002984  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8616  002988                     l804:
  8617  002988  0012               	return		;funcret
  8618  00298A                     __end_of___xxtofl:
  8619                           	callstack 0
  8620                           
  8621 ;; *************** function _ADC_Read *****************
  8622 ;; Defined at:
  8623 ;;		line 11 in file "ADC_LIB.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;  channel         1    wreg     unsigned char 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  channel         1    4[COMRAM] unsigned char 
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  2    0[COMRAM] int 
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8637 ;;      Params:         2       0       0       0       0       0       0       0       0
  8638 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8639 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8640 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8641 ;;Total ram usage:        5 bytes
  8642 ;; Hardware stack levels used: 1
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_main
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           	psect	text40
  8651  003744                     __ptext40:
  8652                           	callstack 0
  8653  003744                     _ADC_Read:
  8654                           	callstack 30
  8655                           
  8656                           ;incstack = 0
  8657                           ;ADC_Read@channel stored from wreg
  8658  003744  6E05               	movwf	ADC_Read@channel^0,c
  8659  003746                     
  8660                           ;ADC_LIB.c: 12:     ADCON0bits.CHS = channel & 0x0F;
  8661  003746  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  8662  00374A  0E0F               	movlw	15
  8663  00374C  1603               	andwf	??_ADC_Read^0,f,c
  8664  00374E  4603               	rlncf	??_ADC_Read^0,f,c
  8665  003750  4603               	rlncf	??_ADC_Read^0,f,c
  8666  003752  50C2               	movf	194,w,c	;volatile
  8667  003754  1803               	xorwf	??_ADC_Read^0,w,c
  8668  003756  0BC3               	andlw	-61
  8669  003758  1803               	xorwf	??_ADC_Read^0,w,c
  8670  00375A  6EC2               	movwf	194,c	;volatile
  8671  00375C                     
  8672                           ;ADC_LIB.c: 13:     ADCON0bits.GODONE = 1;
  8673  00375C  82C2               	bsf	194,1,c	;volatile
  8674  00375E                     l46:
  8675  00375E  B2C2               	btfsc	194,1,c	;volatile
  8676  003760  EFB4  F01B         	goto	u4551
  8677  003764  EFB6  F01B         	goto	u4550
  8678  003768                     u4551:
  8679  003768  EFAF  F01B         	goto	l46
  8680  00376C                     u4550:
  8681  00376C                     
  8682                           ;ADC_LIB.c: 15:     return ( (ADRESH<<8) | (ADRESL<<0));
  8683  00376C  50C3               	movf	195,w,c	;volatile
  8684  00376E  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  8685  003772  6A04               	clrf	(??_ADC_Read+1)^0,c
  8686  003774  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  8687  003778  6A03               	clrf	??_ADC_Read^0,c
  8688  00377A  1003               	iorwf	??_ADC_Read^0,w,c
  8689  00377C  6E01               	movwf	?_ADC_Read^0,c
  8690  00377E  5004               	movf	(??_ADC_Read+1)^0,w,c
  8691  003780  6E02               	movwf	(?_ADC_Read+1)^0,c
  8692  003782  0012               	return		;funcret
  8693  003784                     __end_of_ADC_Read:
  8694                           	callstack 0
  8695                           
  8696 ;; *************** function _ADC_Init *****************
  8697 ;; Defined at:
  8698 ;;		line 4 in file "ADC_LIB.c"
  8699 ;; Parameters:    Size  Location     Type
  8700 ;;		None
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;		None
  8703 ;; Return value:  Size  Location     Type
  8704 ;;                  1    wreg      void 
  8705 ;; Registers used:
  8706 ;;		wreg, status,2
  8707 ;; Tracked objects:
  8708 ;;		On entry : 0/0
  8709 ;;		On exit  : 0/0
  8710 ;;		Unchanged: 0/0
  8711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8712 ;;      Params:         0       0       0       0       0       0       0       0       0
  8713 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8715 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8716 ;;Total ram usage:        0 bytes
  8717 ;; Hardware stack levels used: 1
  8718 ;; This function calls:
  8719 ;;		Nothing
  8720 ;; This function is called by:
  8721 ;;		_main
  8722 ;; This function uses a non-reentrant model
  8723 ;;
  8724                           
  8725                           	psect	text41
  8726  0038C4                     __ptext41:
  8727                           	callstack 0
  8728  0038C4                     _ADC_Init:
  8729                           	callstack 30
  8730  0038C4                     
  8731                           ;ADC_LIB.c: 5:     ADCON1bits.VCFG = 0b00;
  8732  0038C4  0ECF               	movlw	-49
  8733  0038C6  16C1               	andwf	193,f,c	;volatile
  8734  0038C8                     
  8735                           ;ADC_LIB.c: 6:     ADCON2bits.ADFM = 1;
  8736  0038C8  8EC0               	bsf	192,7,c	;volatile
  8737                           
  8738                           ;ADC_LIB.c: 7:     ADCON2bits.ADCS = 6;
  8739  0038CA  50C0               	movf	192,w,c	;volatile
  8740  0038CC  0BF8               	andlw	-8
  8741  0038CE  0906               	iorlw	6
  8742  0038D0  6EC0               	movwf	192,c	;volatile
  8743                           
  8744                           ;ADC_LIB.c: 8:     ADCON2bits.ACQT = 7;
  8745  0038D2  0E38               	movlw	56
  8746  0038D4  12C0               	iorwf	192,f,c	;volatile
  8747  0038D6                     
  8748                           ;ADC_LIB.c: 9:     ADCON0bits.ADON = 1;
  8749  0038D6  80C2               	bsf	194,0,c	;volatile
  8750  0038D8  0012               	return		;funcret
  8751  0038DA                     __end_of_ADC_Init:
  8752                           	callstack 0
  8753                           
  8754                           	psect	rparam
  8755  0000                     
  8756                           	psect	idloc
  8757                           
  8758                           ;Config register IDLOC0 @ 0x200000
  8759                           ;	unspecified, using default values
  8760  200000                     	org	2097152
  8761  200000  FF                 	db	255
  8762                           
  8763                           ;Config register IDLOC1 @ 0x200001
  8764                           ;	unspecified, using default values
  8765  200001                     	org	2097153
  8766  200001  FF                 	db	255
  8767                           
  8768                           ;Config register IDLOC2 @ 0x200002
  8769                           ;	unspecified, using default values
  8770  200002                     	org	2097154
  8771  200002  FF                 	db	255
  8772                           
  8773                           ;Config register IDLOC3 @ 0x200003
  8774                           ;	unspecified, using default values
  8775  200003                     	org	2097155
  8776  200003  FF                 	db	255
  8777                           
  8778                           ;Config register IDLOC4 @ 0x200004
  8779                           ;	unspecified, using default values
  8780  200004                     	org	2097156
  8781  200004  FF                 	db	255
  8782                           
  8783                           ;Config register IDLOC5 @ 0x200005
  8784                           ;	unspecified, using default values
  8785  200005                     	org	2097157
  8786  200005  FF                 	db	255
  8787                           
  8788                           ;Config register IDLOC6 @ 0x200006
  8789                           ;	unspecified, using default values
  8790  200006                     	org	2097158
  8791  200006  FF                 	db	255
  8792                           
  8793                           ;Config register IDLOC7 @ 0x200007
  8794                           ;	unspecified, using default values
  8795  200007                     	org	2097159
  8796  200007  FF                 	db	255
  8797                           
  8798                           	psect	config
  8799                           
  8800                           ;Config register CONFIG1L @ 0x300000
  8801                           ;	PLL Prescaler Selection bits
  8802                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8803                           ;	System Clock Postscaler Selection bits
  8804                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8805                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8806                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8807  300000                     	org	3145728
  8808  300000  00                 	db	0
  8809                           
  8810                           ;Config register CONFIG1H @ 0x300001
  8811                           ;	Oscillator Selection bits
  8812                           ;	FOSC = HS, HS oscillator (HS)
  8813                           ;	Fail-Safe Clock Monitor Enable bit
  8814                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8815                           ;	Internal/External Oscillator Switchover bit
  8816                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8817  300001                     	org	3145729
  8818  300001  0C                 	db	12
  8819                           
  8820                           ;Config register CONFIG2L @ 0x300002
  8821                           ;	Power-up Timer Enable bit
  8822                           ;	PWRT = ON, PWRT enabled
  8823                           ;	Brown-out Reset Enable bits
  8824                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8825                           ;	Brown-out Reset Voltage bits
  8826                           ;	BORV = 3, Minimum setting 2.05V
  8827                           ;	USB Voltage Regulator Enable bit
  8828                           ;	VREGEN = OFF, USB voltage regulator disabled
  8829  300002                     	org	3145730
  8830  300002  18                 	db	24
  8831                           
  8832                           ;Config register CONFIG2H @ 0x300003
  8833                           ;	Watchdog Timer Enable bit
  8834                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8835                           ;	Watchdog Timer Postscale Select bits
  8836                           ;	WDTPS = 32768, 1:32768
  8837  300003                     	org	3145731
  8838  300003  1E                 	db	30
  8839                           
  8840                           ; Padding undefined space
  8841  300004                     	org	3145732
  8842  300004  FF                 	db	255
  8843                           
  8844                           ;Config register CONFIG3H @ 0x300005
  8845                           ;	CCP2 MUX bit
  8846                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8847                           ;	PORTB A/D Enable bit
  8848                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8849                           ;	Low-Power Timer 1 Oscillator Enable bit
  8850                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8851                           ;	MCLR Pin Enable bit
  8852                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8853  300005                     	org	3145733
  8854  300005  81                 	db	129
  8855                           
  8856                           ;Config register CONFIG4L @ 0x300006
  8857                           ;	Stack Full/Underflow Reset Enable bit
  8858                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8859                           ;	Single-Supply ICSP Enable bit
  8860                           ;	LVP = OFF, Single-Supply ICSP disabled
  8861                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8862                           ;	ICPRT = OFF, ICPORT disabled
  8863                           ;	Extended Instruction Set Enable bit
  8864                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8865                           ;	Background Debugger Enable bit
  8866                           ;	DEBUG = 0x1, unprogrammed default
  8867  300006                     	org	3145734
  8868  300006  81                 	db	129
  8869                           
  8870                           ; Padding undefined space
  8871  300007                     	org	3145735
  8872  300007  FF                 	db	255
  8873                           
  8874                           ;Config register CONFIG5L @ 0x300008
  8875                           ;	Code Protection bit
  8876                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8877                           ;	Code Protection bit
  8878                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8879                           ;	Code Protection bit
  8880                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8881                           ;	Code Protection bit
  8882                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8883  300008                     	org	3145736
  8884  300008  0F                 	db	15
  8885                           
  8886                           ;Config register CONFIG5H @ 0x300009
  8887                           ;	Boot Block Code Protection bit
  8888                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8889                           ;	Data EEPROM Code Protection bit
  8890                           ;	CPD = OFF, Data EEPROM is not code-protected
  8891  300009                     	org	3145737
  8892  300009  C0                 	db	192
  8893                           
  8894                           ;Config register CONFIG6L @ 0x30000A
  8895                           ;	Write Protection bit
  8896                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8897                           ;	Write Protection bit
  8898                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8899                           ;	Write Protection bit
  8900                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8901                           ;	Write Protection bit
  8902                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8903  30000A                     	org	3145738
  8904  30000A  0F                 	db	15
  8905                           
  8906                           ;Config register CONFIG6H @ 0x30000B
  8907                           ;	Configuration Register Write Protection bit
  8908                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8909                           ;	Boot Block Write Protection bit
  8910                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8911                           ;	Data EEPROM Write Protection bit
  8912                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8913  30000B                     	org	3145739
  8914  30000B  E0                 	db	224
  8915                           
  8916                           ;Config register CONFIG7L @ 0x30000C
  8917                           ;	Table Read Protection bit
  8918                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8919                           ;	Table Read Protection bit
  8920                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8921                           ;	Table Read Protection bit
  8922                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8923                           ;	Table Read Protection bit
  8924                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8925  30000C                     	org	3145740
  8926  30000C  0F                 	db	15
  8927                           
  8928                           ;Config register CONFIG7H @ 0x30000D
  8929                           ;	Boot Block Table Read Protection bit
  8930                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8931  30000D                     	org	3145741
  8932  30000D  40                 	db	64
  8933                           tosu	equ	0xFFF
  8934                           tosh	equ	0xFFE
  8935                           tosl	equ	0xFFD
  8936                           stkptr	equ	0xFFC
  8937                           pclatu	equ	0xFFB
  8938                           pclath	equ	0xFFA
  8939                           pcl	equ	0xFF9
  8940                           tblptru	equ	0xFF8
  8941                           tblptrh	equ	0xFF7
  8942                           tblptrl	equ	0xFF6
  8943                           tablat	equ	0xFF5
  8944                           prodh	equ	0xFF4
  8945                           prodl	equ	0xFF3
  8946                           indf0	equ	0xFEF
  8947                           postinc0	equ	0xFEE
  8948                           postdec0	equ	0xFED
  8949                           preinc0	equ	0xFEC
  8950                           plusw0	equ	0xFEB
  8951                           fsr0h	equ	0xFEA
  8952                           fsr0l	equ	0xFE9
  8953                           wreg	equ	0xFE8
  8954                           indf1	equ	0xFE7
  8955                           postinc1	equ	0xFE6
  8956                           postdec1	equ	0xFE5
  8957                           preinc1	equ	0xFE4
  8958                           plusw1	equ	0xFE3
  8959                           fsr1h	equ	0xFE2
  8960                           fsr1l	equ	0xFE1
  8961                           bsr	equ	0xFE0
  8962                           indf2	equ	0xFDF
  8963                           postinc2	equ	0xFDE
  8964                           postdec2	equ	0xFDD
  8965                           preinc2	equ	0xFDC
  8966                           plusw2	equ	0xFDB
  8967                           fsr2h	equ	0xFDA
  8968                           fsr2l	equ	0xFD9
  8969                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    0
    Data        20
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      94
    BANK0           160     71     109
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> strLCD(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S722$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S722$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_out@str	PTR unsigned char  size(2) Largest target is 20
		 -> strLCD(BANK0[20]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _lcd_out->_lcd_set_cursor
    _lcd_write->__send_byte
    _lcd_set_cursor->_lcd_command
    _lcd_init->_lcd_command
    _lcd_disable_cursor->_lcd_command
    _lcd_disable_blink->_lcd_command
    _lcd_command->__send_byte
    __send_byte->__write_nibble

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   33879
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                           ___xxtofl
                  _lcd_disable_blink
                 _lcd_disable_cursor
                           _lcd_init
                            _lcd_out
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   28420
                                             50 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28061
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   27681
                                             63 COMRAM    18    12      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   22144
                                             51 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2808
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1232
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_out                                              4     1      3    1159
                                             10 COMRAM     4     1      3
                     _lcd_set_cursor
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0     328
                                              5 COMRAM     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       4     3      1     590
                                              6 COMRAM     4     3      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     416
                                              6 COMRAM     1     1      0
                      __write_nibble
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_disable_cursor                                   0     0      0     328
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_disable_blink                                    0     0      0     328
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          1     1      0     328
                                              5 COMRAM     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (3) __send_byte                                           4     3      1     306
                                              1 COMRAM     4     3      1
                      __write_nibble
 ---------------------------------------------------------------------------------
 (4) __write_nibble                                        1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _lcd_disable_blink
     _lcd_command
       __send_byte
         __write_nibble
   _lcd_disable_cursor
     _lcd_command
   _lcd_init
     __write_nibble
     _lcd_command
   _lcd_out
     _lcd_set_cursor
       _lcd_command
     _lcd_write
       __send_byte
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      6D       5       68.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5E       1       98.9%
BITBIGSFRhh         3B      0       0      20        0.0%
BITBIGSFRlhh        2A      0       0      21        0.0%
BITBIGSFRll         23      0       0      23        0.0%
BITBIGSFRlhl        11      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      24        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Mar 17 11:31:28 2023

              ___fldiv@aexp 0019                ___fldiv@bexp 0018                ___fldiv@sign 0011  
                        l43 38D8                          l46 375E                          l49 3782  
                        l81 3930                          l67 3464                          l75 3626  
                        l68 3476                          l84 3396                          l78 3922  
                        l99 3408                ___awdiv@sign 0006         ___wmul@multiplicand 0003  
                       l123 3900                         l140 37BE                         l117 3914  
                       l146 38C2                         l411 2CA2                         l420 382E  
                       l405 3318                         l416 2CE8                         l443 2BE4  
                       l700 1D18                         l701 1D06                         l390 326E  
                       l801 282C                         l377 304A                         l730 2422  
                       l804 2988                         l716 36FE                         l741 24E0  
                       l733 23E6                         l742 24CE                         l902 0BDE  
                       l815 2920                         l808 28C4                         l728 25C2  
                       l760 1EC4                         l824 3586                         l770 2120  
                       l674 1B2E                         l930 101E                         l739 2468  
                       l691 1C48                         l683 1DFE                         l675 1B1C  
                       l764 2228                         l676 1AE2                         l870 310C  
                       l767 20BA                         l777 21EA                         l769 2132  
                       l865 3090                         l868 30D2                         l980 193E  
                       l886 1430                         l991 34D0                         l992 34D8  
                       l985 1888                         _pad 304C                ___awmod@sign 0006  
                       wreg 000FE8                ___flmul@aexp 0020                ___flmul@bexp 0021  
              ___flmul@sign 001B                ___flmul@temp 0026                ___flmul@prod 0022  
           ?_lcd_set_cursor 0007                ___fltol@exp1 000A                        l1002 2DE6  
                      l1100 2EBC                        l1110 36B0                        l1025 2AD6  
                      l1113 36B8                        l1034 27D4                        l1044 3866  
                      l1052 35D8                        l1028 2ADE                        l1037 2718  
                      l3000 2296                        l1073 2F86                        l1081 3742  
                      l3010 22CC                        l3002 229C                        l1090 3534  
                      l1058 37F6                        l3100 2582                        l3020 230C  
                      l3012 22DC                        l3004 22AA                        l1084 3932  
                      l3110 25B8                        l3102 259E                        l3022 231C  
                      l3030 233C                        l3014 22DE                        l3006 22AC  
                      l3104 25A2                        l3040 237A                        l3032 234C  
                      l3024 2324                        l3008 22BC                        l3016 22E6  
                      l3200 20A0                        l3120 1E0C                        l1096 389C  
                      l4000 192C                        l4010 339E                        l3106 25B0  
                      l3050 23C2                        l3042 238A                        l3034 234C  
                      l3026 2328                        l3018 22F6                        l3210 20DC  
                      l3202 20AA                        l3130 1E4C                        l3122 1E1A  
                      l4012 33AA                        l4020 33CE                        l3300 31C4  
                      l3108 25B6                        l3060 2410                        l3052 23D6  
                      l3044 239A                        l3220 214E                        l3212 20EA  
                      l3204 20B8                        l3140 1E7C                        l3132 1E52  
                      l3124 1E1C                        l4110 27D8                        l4014 33B6  
                      l4006 3918                        l4102 3786                        l3310 31F4  
                      l3302 31D2                        l3070 2458                        l3062 2420  
                      l3054 23E4                        l3046 23AA                        l3038 2360  
                      l3230 21B8                        l3222 215C                        l3214 2118  
                      l3206 20CA                        l3150 1EB4                        l3142 1E7E  
                      l3134 1E62                        l3126 1E2C                        l3118 1E00  
                      l4030 348E                        l4112 27E8                        l4040 331A  
                      l4016 33C2                        l4008 339A                        l4104 3794  
                      l3320 323A                        l3312 3206                        l3304 31DA  
                      l3080 2498                        l3072 2466                        l3064 2432  
                      l3056 23F0                        l3048 23B2                        l3240 220E  
                      l3232 21D2                        l3224 2186                        l3208 20D8  
                      l3160 1F04                        l3152 1ED4                        l3144 1E8E  
                      l3136 1E68                        l3128 1E3C                        l4032 34B4  
                      l4034 38C4                        l4130 28AE                        l4122 2866  
                      l4114 27F6                        l4050 334C                        l4042 3322  
                      l4106 37A2                        l3330 3266                        l3322 3242  
                      l3314 320E                        l3306 31DE                        l3090 250A  
                      l3082 24C6                        l3066 2448                        l3074 2478  
                      l3058 240E                        l3234 21EE                        l3242 2214  
                      l3218 2142                        l3226 218A                        l3170 1F54  
                      l3162 1F0E                        l3154 1EE4                        l3146 1E9E  
                      l3138 1E6E                        l3250 36CA                        l3402 2B70  
                      l4026 3478                        l4036 38C8                        l4140 292E  
                      l4132 28BA                        l4124 286E                        l4116 283C  
                      l4060 336E                        l4052 3354                        l4044 3330  
                      l4108 37A6                        l3260 2FA2                        l3324 3248  
                      l3316 3216                        l3308 31EC                        l3092 2534  
                      l3076 2486                        l3068 244E                        l3340 32DC  
                      l3244 2218                        l3236 21FE                        l3228 21A4  
                      l3180 1F96                        l3172 1F60                        l3164 1F24  
                      l3148 1EAE                        l3420 2BD4                        l3412 2B98  
                      l3404 2B7A                        l3500 2778                        l4028 3480  
                      l4038 38D6                        l4150 2976                        l4142 2930  
                      l4134 28F6                        l4126 287A                        l4118 2852  
                      l4070 3902                        l4062 3372                        l4054 335A  
                      l4046 3336                        l3510 3830                        l4302 2A26  
                      l3270 2FC8                        l3262 2FA6                        l3254 2F88  
                      l3318 3224                        l3326 324E                        l3086 24F0  
                      l3094 2538                        l3078 248A                        l3342 32EC  
                      l3334 3270                        l3350 2BE6                        l3238 220C  
                      l3190 1FF8                        l3182 1FA6                        l3174 1F6E  
                      l3166 1F30                        l3158 1EF8                        l3414 2BA4  
                      l3406 2B84                        l3502 278C                        l2710 2EBE  
                      l3430 307C                        l4152 2978                        l4144 2934  
                      l4136 2902                        l4128 28AC                        l4072 3904  
                      l4080 38F8                        l4064 337A                        l4056 3360  
                      l4048 3346                        l4304 33E2                        l3520 35CE  
                      l3280 2FFE                        l3272 2FDA                        l3264 2FB4  
                      l3256 2F8C                        l3328 325E                        l3096 2552  
                      l3088 24FC                        l3344 3310                        l3336 329E  
                      l3360 2C70                        l3352 2C14                        l3192 2014  
                      l3184 1FC0                        l3176 1F7A                        l3168 1F48  
                      l2800 1A7C                        l3248 36BA                        l3416 2BB4  
                      l3504 27B4                        l2720 2F40                        l2712 2ED0  
                      l3440 30E0                        l3432 3088                        l3424 304C  
                      l3600 0A08                        l4160 311A                        l4082 3746  
                      l4146 2958                        l4138 2910                        l4306 3600  
                      l3530 35E6                        l4074 390C                        l4066 3382  
                      l4058 3366                        l3522 35D2                        l3514 3588  
                      l3282 3014                        l3274 2FE2                        l3290 302A  
                      l3266 2FBC                        l3258 2F9A                        l3098 2568  
                      l3346 3316                        l3338 32AE                        l3362 2C82  
                      l3354 2C24                        l3194 203E                        l3186 1FD0  
                      l3178 1F8A                        l2810 1ADA                        l2802 1A80  
                      l2730 195C                        l3418 2BC4                        l3450 2D48  
                      l3506 27C4                        l2714 2EE2                        l3442 30F4  
                      l3434 309C                        l3426 305A                        l3610 0A40  
                      l4090 3536                        l4170 3180                        l4162 311E  
                      l4084 375C                        l4148 2968                        l4076 38EE  
                      l4068 3388                        l3516 358C                        l3292 303A  
                      l3284 301C                        l3276 2FEA                        l3268 2FC0  
                      l3364 2C90                        l3356 2C52                        l3196 2074  
                      l3188 1FEC                        l3372 37F8                        l2900 1D7C  
                      l2820 1B10                        l2812 1AF0                        l2804 1A84  
                      l2732 196C                        l2740 1996                        l2724 1940  
                      l3380 2AE0                        l3460 2D9A                        l3452 2D70  
                      l2716 2EEC                        l3436 30B0                        l3428 306E  
                      l3700 0EEA                        l3620 0B0A                        l4092 3548  
                      l4172 31A6                        l4164 3122                        l4156 310E  
                      l4086 376C                        l3534 35EC                        l3526 35DC  
                      l4078 38F0                        l3518 35A0                        l3294 3042  
                      l3286 301E                        l3278 2FF8                        l3366 2CE0  
                      l3358 2C62                        l3198 2082                        l3374 380E  
                      l2910 1DC2                        l2902 1D7E                        l2830 1B60  
                      l2822 1B1A                        l2814 1AFC                        l2806 1AAE  
                      l2750 19C6                        l2742 19A6                        l2734 197C  
                      l2726 194C                        l3390 2B36                        l3382 2AF6  
                      l3454 2D7C                        l3446 2CEA                        l2718 2F0A  
                      l3438 30B4                        l3470 34EA                        l3710 0F9A  
                      l3702 0EFA                        l3630 0B8C                        l3622 0B3E  
                      l3614 0A76                        l3550 0852                        l3542 0822  
                      l4094 3550                        l4166 3126                        l4158 3116  
                      l3536 3616                        l3528 35E0                        l3288 3024  
                      l3368 2CE6                        l3376 381E                        l2920 1DEC  
                      l2912 1DD0                        l2904 1D8E                        l2840 1B9C  
                      l2832 1B70                        l2824 1B3C                        l2816 1B00  
                      l2808 1ACA                        l2760 1A06                        l2752 19D4  
                      l2744 19AC                        l2736 198C                        l2728 195A  
                      l3392 2B46                        l3464 2DDE                        l3448 2D0A  
                      l3472 3674                        l3800 12E4                        l3720 100A  
                      l3712 0FCE                        l3704 0F0A                        l3632 0B9E  
                      l3640 0BEA                        l3624 0B46                        l3616 0AAA  
                      l3608 0A26                        l3560 08A8                        l3552 0876  
                      l3544 082C                        l4096 3558                        l4168 3134  
                      l3298 31C0                        l2922 1DEE                        l2914 1DD6  
                      l2906 1D9E                        l2850 1BE2                        l2842 1BAA  
                      l2834 1B7E                        l2826 1B4C                        l2818 1B0E  
                      l2770 1A40                        l2762 1A08                        l2754 19D6  
                      l2746 19BE                        l2738 198E                        l3394 2B4A  
                      l3386 2B0A                        l3458 2D88                        l3490 265C  
                      l3482 25C4                        l2930 371E                        l3810 1340  
                      l3802 12F0                        l3730 10C0                        l3722 1016  
                      l3714 0FE2                        l3706 0F3E                        l3650 0C2A  
                      l3634 0BB0                        l3618 0AB0                        l3626 0B78  
                      l3570 08D6                        l3562 08BA                        l3554 0880  
                      l3546 083C                        l4098 3574                        l3900 3926  
                      l2916 1DD8                        l2908 1DBE                        l2860 1C5E  
                      l2852 1C16                        l2844 1BAC                        l2836 1B8C  
                      l2780 1A54                        l2772 1A44                        l2756 19E6  
                      l2764 1A10                        l2748 19C0                        l3396 2B58  
                      l3388 2B34                        l3484 25E4                        l2932 3722  
                      l2940 3890                        l3468 34DA                        l3476 3674  
                      l3820 138A                        l3804 12F6                        l3812 1346  
                      l3740 110A                        l3732 10D2                        l3724 103A  
                      l3708 0F94                        l3716 0FE6                        l3660 0C86  
                      l3652 0C60                        l3636 0BB8                        l3628 0B88  
                      l3580 092E                        l3564 08C6                        l3572 08DC  
                      l3556 0888                        l3548 084A                        l2950 341A  
                      l2918 1DDE                        l2870 1C9A                        l2862 1C6E  
                      l2854 1C18                        l2846 1BB6                        l2838 1B98  
                      l2790 1A68                        l2782 1A58                        l2774 1A48  
                      l2766 1A20                        l2758 19F6                        l3494 26CC  
                      l3486 263A                        l2926 3700                        l2934 3868  
                      l3478 36A2                        l3822 1396                        l3814 1358  
                      l3806 131C                        l3750 1140                        l3742 111A  
                      l3734 10E0                        l3726 109E                        l3718 0FF6  
                      l3670 0CCA                        l3662 0C98                        l3654 0C68  
                      l3646 0BFC                        l3638 0BD2                        l3582 094C  
                      l3590 0998                        l3566 08CE                        l3558 089A  
                      l3910 147A                        l3902 1432                        ?_pad 0011  
                      l2960 3438                        l2952 3420                        l2880 1CC6  
                      l2872 1C9C                        l2856 1C28                        l2848 1BBC  
                      l2792 1A6C                        l2784 1A5C                        l2776 1A4C  
                      l2768 1A32                        l3496 2708                        l3488 264E  
                      l2928 370C                        l2936 3874                        l2944 37C0  
                      l3840 140A                        l3832 13BA                        l3824 139E  
                      l3816 1372                        l3808 1338                        l3760 1174  
                      l3752 1144                        l3744 111E                        l3728 10AC  
                      l3736 10E8                        l3680 0D14                        l3672 0CE2  
                      l3664 0CA6                        l3648 0C0E                        l3656 0C6C  
                      l3584 0966                        l3568 08D2                        l3920 1510  
                      l3912 149E                        l3904 1456                        l2970 3462  
                      l2962 3446                        l2954 3422                        l3850 299E  
                      l2890 1CFE                        l2874 1CAA                        l2866 1C82  
                      l2882 1CC8                        l2858 1C38                        l2794 1A70  
                      l2786 1A60                        l2778 1A50                        l3498 273C  
                      l2938 3878                        l3842 1410                        l3834 13E6  
                      l3826 13AE                        l3818 1378                        l3770 1212  
                      l3762 1178                        l3754 114A                        l3746 1124  
                      l3738 10FC                        l3682 0D28                        l3690 0E1E  
                      l3674 0CF4                        l3666 0CAA                        l3658 0C74  
                      l3586 0970                        l3578 0902                        l3930 1588  
                      l3914 14D4                        l3906 1464                        l2972 346A  
                      l2964 344C                        l2956 3430                        l2948 340C  
                      l3860 2A00                        l2980 222A                        l2876 1CB2  
                      l2868 1C8C                        l2884 1CD6                        l2796 1A74  
                      l2788 1A64                        l3836 13F2                        l3828 13B4  
                      l3780 1270                        l3748 1130                        l3756 1150  
                      l3764 117E                        l3772 1216                        l3692 0E3C  
                      l3684 0D8C                        l3668 0CBC                        l3676 0CFC  
                      l3596 09BE                        l3932 1596                        l3924 151E  
                      l3916 14E2                        l3908 1476                        l2966 344E  
                      l2958 3436                        l2974 389E                        l3870 2A72  
                      l3862 2A08                        l3854 29A2                        l2990 2266  
                      l2982 2236                        l2894 1D28                        l2886 1CDA  
                      l2878 1CB6                        l2798 1A78                        l3838 13FA  
                      l3790 12AE                        l3782 1280                        l3774 1234  
                      l3766 11D6                        l3758 1162                        l3694 0E70  
                      l3686 0DE4                        l3678 0D04                        l3598 09EA  
                      l3950 16C0                        l3942 1622                        l3934 15BA  
                      l3926 155C                        l3918 14F0                        l2968 345C  
                      l2976 38BA                        l3872 2AA8                        l3864 2A3C  
                      l3856 29BE                        l3848 298A                        l2992 2276  
                      l2984 2244                        l2896 1D34                        l2888 1CE8  
                      l3792 12BE                        l3784 1284                        l3776 1250  
                      l3768 120A                        l3696 0EA2                        l3688 0E18  
                      l3880 2DE8                        l3960 1736                        l3952 16D0  
                      l3936 15F4                        l3928 1580                        l3944 1660  
                      l3874 2ABA                        l3858 29F8                        l2994 2278  
                      l2986 2246                        l2898 1D42                        l3794 12C6  
                      l3786 1294                        l3778 1262                        l3698 0EB8  
                      l3890 2E44                        l3882 2E12                        l3962 1766  
                      l3954 1700                        l3946 1680                        l3938 1614  
                      l2988 2256                        l2996 2280                        l3796 12D4  
                      l3788 12A6                        l3892 2E60                        l3972 17E6  
                      l3956 1712                        l3948 1690                        l2998 2290  
                      l3798 12DC                        l3894 2E72                        l3886 2E1E  
                      l3974 1824                        l3982 189C                        l3958 1728  
                      l3966 1792                        l3896 2E9A                        l3888 2E2C  
                      l3984 18C0                        l3992 18EE                        l3976 1858  
                      l3968 17C0                        l3994 18FC                        l3986 18CE  
                      l3988 18E2                        l3998 1908                        STR_1 0801  
                      STR_2 080D                        STR_3 0815                        STR_6 0811  
                      STR_7 0819                        u3000 2486                        u3001 2482  
                      u3010 2498                        u3011 2494                        u3020 24C6  
                      u3100 1E2C                        u3021 24C2                        u3101 1E28  
                      u3030 24DC                        u3110 1E3C                        u3031 24D8  
                      u3111 1E38                        u3040 24F0                        u3200 20EA  
                      u3120 1E7C                        u2400 196C                        u4000 0C2A  
                      u3041 24EC                        u3201 20E6                        u3121 1E78  
                      u2401 1968                        u4001 0C26                        u3050 250A  
                      u3210 2118                        u3130 1E8E                        u2410 197C  
                      u4010 0C60                        u3051 2506                        u3211 2114  
                      u3131 1E8A                        u2411 1978                        u4011 0C5C  
                      u3300 2FDA                        u3060 2552                        u3220 212E  
                      u3140 1E9E                        u2500 1AC8                        u2420 19BE  
                      u4100 0EEA                        u4020 0C86                        u3301 2FD6  
                      u3061 254E                        u3221 212A                        u3141 1E9A  
                      u2421 19BA                        u4101 0EE6                        u4021 0C82  
                      u3310 2FF8                        u3070 2582                        u3230 2142  
                      u3150 1ED4                        u2510 1AF0                        u2430 19D4  
                      u2350 2ED0                        u4110 0EFA                        u4030 0C98  
                      u3311 2FF4                        u3071 257E                        u3231 213E  
                      u3151 1ED0                        u2511 1AEC                        u2431 19D0  
                      u2351 2ECC                        u4111 0EF6                        u4031 0C94  
                      u3320 3014                        u3080 25B0                        u3400 329E  
                      u3240 215C                        u3160 1EE4                        u2600 1C28  
                      u2520 1B0E                        u2440 19E6                        u2360 2EE2  
                      u4200 110A                        u4120 0F94                        u4040 0CA6  
                      u3321 3010                        u3081 25AC                        u3401 329A  
                      u3241 2158                        u3161 1EE0                        u2601 1C24  
                      u2521 1B0A                        u2441 19E2                        u2361 2EDE  
                      u4201 1106                        u4121 0F90                        u4041 0CA2  
                      u3330 303A                        u3410 32DC                        u3250 21A4  
                      u3170 205E                        u3090 1E1A                        u2610 1C5E  
                      u2530 1B2E                        u2450 19F6                        u2370 2F0A  
                      u4210 1162                        u4130 0FE2                        u4050 0CBC  
                      u3331 3036                        u3411 32D8                        u3251 21A0  
                      u3091 1E16                        u2611 1C5A                        u2531 1B2A  
                      u2451 19F2                        u2371 2F06                        u4211 115E  
                      u4131 0FDE                        u4051 0CB8                        u3340 31D2  
                      u3420 3310                        u3260 21D2                        u3180 20B8  
                      u2700 1D28                        u2620 1C6E                        u2540 1B3C  
                      u2460 1A32                        u3500 2B2A                        u2380 2F40  
                      u4300 138A                        u4220 1234                        u4140 100A  
                      u4060 0CCA                        u3341 31CE                        u3421 330C  
                      u3261 21CE                        u3181 20B4                        u2701 1D24  
                      u2621 1C6A                        u2541 1B38                        u2461 1A2E  
                      u2381 2F3C                        u4301 1386                        u4221 1230  
                      u4141 1006                        u4061 0CC6                        u3350 31EC  
                      u3430 2C14                        u3270 220C                        u3190 20D8  
                      u2710 1D42                        u2630 1C9A                        u2550 1B4C  
                      u2470 1A40                        u2390 195A                        u3510 2B58  
                      u4310 13E6                        u4230 1250                        u4150 10AC  
                      u4070 0CF4                        u3351 31E8                        u3431 2C10  
                      u3271 2208                        u3191 20D4                        u3175 2054  
                      u2711 1D3E                        u2631 1C96                        u2551 1B48  
                      u2471 1A3C                        u2391 1956                        u3511 2B54  
                      u4311 13E2                        u4231 124C                        u4151 10A8  
                      u4071 0CF0                        u4320 29BE                        u3280 2F9A  
                      u3360 3206                        u3440 2C52                        u2720 1D7C  
                      u2640 1CAA                        u2560 1B7E                        u2480 1AAE  
                      u3520 2B6C                        u3600 2D2A                        u2800 37F0  
                      u4240 1262                        u4160 10C0                        u4080 0E3C  
                      u4400 2E9A                        u4321 29BA                        u3281 2F96  
                      u3361 3202                        u3441 2C4E                        u2721 1D78  
                      u2641 1CA6                        u2561 1B7A                        u2481 1AAA  
                      u3521 2B68                        u3505 2B20                        u2801 37EA  
                      u4241 125E                        u4161 10BC                        u4081 0E38  
                      u4401 2E96                        u4330 29F4                        u3290 2FB4  
                      u3370 3224                        u3450 2C70                        u2730 1D8E  
                      u2650 1CC6                        u2570 1B8C                        u2490 1AC6  
                      u3530 2B94                        u3610 2D48                        u2810 37F2  
                      u4250 1270                        u4170 10D2                        u4090 0EA2  
                      u4410 1456                        u4331 29F0                        u3291 2FB0  
                      u3371 3220                        u3451 2C6C                        u2731 1D8A  
                      u2651 1CC2                        u2571 1B88                        u2491 1AC0  
                      u3531 2B90                        u3611 2D44                        u4251 126C  
                      u4171 10CE                        u4091 0E9E                        u4411 1452  
                      u2820 341A                        u4340 2AA8                        u3380 323A  
                      u2900 22BC                        u3460 2C90                        u2740 1D9E  
                      u2660 1CD6                        u2580 1BAA                        u3540 2BB4  
                      u3620 2D70                        u3700 260C                        u4260 12A6  
                      u4180 10E0                        u4500 1712                        u4420 149E  
                      u2821 3416                        u4341 2AA4                        u3381 3236  
                      u2901 22B8                        u3461 2C8C                        u2741 1D9A  
                      u2661 1CD2                        u2581 1BA6                        u3541 2BB0  
                      u3621 2D6C                        u3605 2D20                        u4261 12A2  
                      u4181 10DC                        u4501 170E                        u4421 149A  
                      u2830 3430                        u4350 2ABA                        u3390 325E  
                      u2910 22CC                        u3470 2CE0                        u2750 1DBE  
                      u2670 1CE8                        u2590 1BE2                        u3550 2BC4  
                      u3630 2D9A                        u3710 263A                        u4270 12D4  
                      u4190 10FC                        u4510 17C0                        u4430 14E2  
                      u2831 342C                        u4351 2AB6                        u3391 325A  
                      u2911 22C8                        u3471 2CDC                        u2751 1DBA  
                      u2671 1CE4                        u2591 1BDE                        u3551 2BC0  
                      u3631 2D96                        u3711 2636                        u4271 12D0  
                      u4191 10F8                        u4511 17BC                        u4431 14DE  
                      u4600 28A8                        u2840 3446                        u3800 3860  
                      u2920 230C                        u3480 380E                        u2760 1DD0  
                      u2680 1CFE                        u3720 265C                        u3560 305A  
                      u4280 1358                        u4360 2E12                        u4520 1824  
                      u4440 155C                        u4601 28A4                        u2841 3442  
                      u3801 385A                        u2921 2308                        u3481 380A  
                      u2761 1DCC                        u2681 1CFA                        u3721 2658  
                      u3705 2602                        u3561 3056                        u4281 1354  
                      u4361 2E0E                        u4521 1820                        u4441 1558  
                      u4610 28F2                        u2850 345C                        u3810 3862  
                      u2930 234C                        u2770 1DEC                        u2690 1D14  
                      u3490 2AF6                        u3650 2DD4                        u3570 307C  
                      u4290 1372                        u4370 2E44                        u4530 18C0  
                      u4450 1580                        u4611 28EE                        u2851 3458  
                      u2931 2348                        u2771 1DE8                        u2691 1D10  
                      u3491 2AF2                        u3651 2DCE                        u3571 3078  
                      u4291 136E                        u4371 2E40                        u4531 18BC  
                      u4451 157C                        u4620 2910                        u3820 35A0  
                      u2940 23C2                        u2860 2244                        u3660 2DD6  
                      u3740 26C8                        u2780 3742                        u3580 30D2  
                      u3900 09BE                        u4380 2E60                        u4460 15BA  
                      u4540 34D0                        u4621 290C                        u3821 359C  
                      u2941 23BE                        u2861 2240                        u3645 2DAC  
                      u3741 26C4                        u2781 373E                        u3581 30CE  
                      u3901 09BA                        u4381 2E5C                        u4461 15B6  
                      u4541 34CC                        u4550 376C                        u4630 2920  
                      u3830 35CE                        u2950 23E4                        u2870 2256  
                      u3750 26EC                        u2790 3890                        u3590 30E0  
                      u3670 3522                        u3910 09EA                        u4390 2E72  
                      u4470 1660                        u4551 3768                        u4631 291C  
                      u3831 35CA                        u2951 23E0                        u2871 2252  
                      u3735 2670                        u2791 388C                        u3591 30DC  
                      u3911 09E6                        u4391 2E6E                        u4471 165C  
                      u4640 292E                        u4560 37BE                        u2960 240E  
                      u2880 2266                        u3760 2708                        u3736 267A  
                      u3680 3534                        u3920 0A72                        u3840 084A  
                      u4480 1690                        u4641 292A                        u4561 37BA  
                      u2961 240A                        u2881 2262                        u3761 2704  
                      u3737 268A                        u3681 3530                        u3921 0A6E  
                      u3841 0846                        u4481 168C                        u4650 2968  
                      u4570 27E8                        u2970 2432                        u2890 22AA  
                      u3770 275C                        u3690 36A2                        u3930 0B06  
                      u3850 089A                        u4490 16D0                        u4651 2964  
                      u4571 27E4                        u4707 333C                        u2971 242E  
                      u2891 22A6                        u3755 26E2                        u3691 369E  
                      u3931 0B02                        u3851 0896                        u4491 16CC  
                      u4660 2976                        u4580 27F6                        u2980 2448  
                      u3780 2778                        u3940 0B78                        u3860 08A8  
                      u4661 2972                        u4581 27F2                        u4717 334E  
                      u2981 2444                        u3781 2774                        u3677 3518  
                      u3941 0B74                        u3861 08A4                        u4590 2852  
                      u2990 2466                        u3790 27B4                        u3950 0B9E  
                      u3870 08BA                        u4591 284E                        u4727 3368  
                      u2991 2462                        u3791 27B0                        u3775 2752  
                      u3951 0B9A                        u3871 08B6                        u3960 0BB0  
                      u3880 0902                        u4737 337C                        u3961 0BAC  
                      u3881 08FE                        u3970 0BD2                        u3890 092E  
                      u4747 338E                        u3971 0BCE                        u3891 092A  
                      u3980 0BF8                        u4757 38FA                        u3981 0BF4  
                      u3990 0C0E                        u4767 390E                        u3991 0C0A  
                      u4777 346C                        u4697 3328                        _dbuf 0100  
                      _atoi 298A                        _main 310E                        _prec 005A  
                      _nout 00C7                        pad@i 0018                        pad@p 0015  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf1 000FE7  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 001A  
                      fsr2l 000FD9                        _volt 00C3            __end_of_ADC_Init 38DA  
          __end_of_ADC_Read 3784               ___fpclassifyf 2CEA                        prodh 000FF4  
                      prodl 000FF3                        start 0000             ___fldiv@new_exp 0012  
             __write_nibble 340A                ___param_bank 000000                       ??_pad 0017  
             ___fltol@sign1 0009                       ?_atoi 0008             __end_of___fladd 1E00  
                     ?_main 0001             __end_of___fldiv 25C4             __end_of___awdiv 304C  
           __end_of___flneg 3830                       STR_10 081D                       STR_12 081D  
           __end_of___awmod 3270             __end_of___flmul 222A             __end_of___flsub 3700  
           __end_of___fltol 2BE6             ___awdiv@divisor 0003             ___awdiv@counter 0005  
              vfpfcnvrt@fmt 0042                       _PORTD 000F83                       _TRISD 000F95  
           __end_of_lcd_out 37C0                       _flags 005C                       _fputc 2EBE  
                     _fputs 3700             __end_of_isdigit 3868                       atoi@n 0010  
                     pad@fp 0011                       atoi@s 0008                       _width 00C9  
                     _putch 3932             __end_of_isspace 35DA             __end_of_isupper 37F8  
                     tablat 000FF5                       status 000FD8             __end_of_sprintf 3588  
            ?___fpclassifyf 0001             __end_of_tolower 36BA             __end_of_strncmp 2EBE  
            ?__write_nibble 0001             __initialization 3628                __end_of_atoi 2AE0  
              __end_of_main 31C0                      ??_atoi 000A                      ??_main 005A  
             __activetblptr 000002              lcd_command@cmd 0006                      ?_fputc 0001  
                    ?_fputs 000A                      _ADRESH 000FC4                      _ADRESL 000FC3  
          ___awdiv@dividend 0001                      ?_putch 0001            __end_of___xxtofl 298A  
              vfprintf@cfmt 0058            __end_of_lcd_init 3398                      ___flge 2BE6  
                    ___fleq 3270                   ??___fladd 0009                      ___wmul 389E  
                 ??___fldiv 0009                   ??___awdiv 0005                   ??___flneg 0005  
                 ??___awmod 0005                   ??___flmul 0017                   ??___flsub 0030  
                 ??___fltol 0005                      _efgtoa 0822                      _conver 00CB  
           ADC_Read@channel 0005                      _floorf 25C4                      clear_0 364E  
                    clear_1 365A            ___awdiv@quotient 0007             ___awmod@divisor 0003  
                    isa$std 000001                      _strLCD 00A7             ___awmod@counter 0005  
                    pad@buf 0013                      _strcpy 34DA                      _strlen 3868  
                 ??_lcd_out 000E                      fputc@c 0001                      fputs@c 000E  
                    fputs@i 000F                      fputs@s 000A                   ??_isdigit 0003  
           ___fpclassifyf@e 0009                   ?_ADC_Init 0001             ___fpclassifyf@u 000B  
                 ?_ADC_Read 0001             ___fpclassifyf@x 0001                __mediumconst 0000  
                 ??_isspace 0003                      tblptrh 000FF7                   ??_isupper 0003  
                    tblptrl 000FF6                      tblptru 000FF8                      putch@c 0001  
          __end_of_vfprintf 34DA                   ??_sprintf 005A                   ??_tolower 0009  
                 ??_strncmp 0007                  ___flge@ff1 0028                  ___flge@ff2 002C  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 366A             ??__write_nibble 0001  
                ___flneg@f1 0001               ___rparam_used 000001                  ___fltol@f1 0001  
            __pcstackCOMRAM 0001                __pidataBANK0 38DA               __end_of_fputc 2F88  
             __end_of_fputs 3744               __end_of_putch 3934            ??_lcd_set_cursor 0008  
                ??_ADC_Init 0001                  ??_ADC_Read 0003                     ??_fputc 0005  
                   ??_fputs 000E                     ??_putch 0001                  __pbssBANK0 00BB  
                __pbssBANK1 0100                  _efgtoa$864 0062                  _efgtoa$856 0060  
                _efgtoa$865 0064                  __send_byte 35DA                     ?___flge 0028  
                   ?___fleq 0001                     ?___wmul 0001                     ?_efgtoa 0034  
                   ?_floorf 001A                     ?_strcpy 0001                     ?_strlen 0001  
                 ?___xxtofl 0001           _lcd_disable_blink 3902          ?_lcd_disable_blink 0001  
                 ?_lcd_init 0001         ??_lcd_disable_blink 0007                     __Hparam 0000  
                   __Lparam 0000                     ___fladd 1940                     ___fldiv 222A  
                   ___awdiv 2F88                     ___flneg 37F8                     ___awmod 31C0  
                   ___flmul 1E00                     ___flsub 36BA                     ___fltol 2AE0  
         __end_of_lcd_write 3924                   ?_vfprintf 0052                __psmallconst 0800  
                   __pcinit 3628                     __ramtop 0800                     __ptext0 310E  
                   __ptext1 3536                     __ptext2 3478                     __ptext3 1432  
                   __ptext4 2DE8                     __ptext5 0822                     __ptext6 3674  
                   __ptext7 37C0                     __ptext8 34DA                     __ptext9 304C  
                   _lcd_out 3784   __end_of_lcd_disable_blink 3916                     _isdigit 3830  
                ??___xxtofl 0005            ___awmod@dividend 0001                     _isspace 3588  
          __send_byte@value 0005                     _isupper 37C0                     efgtoa@c 003A  
                   efgtoa@d 0072                     efgtoa@e 008A                     efgtoa@f 0036  
                   efgtoa@g 0086                     efgtoa@h 007C                     efgtoa@i 0084  
                   efgtoa@l 0080                     efgtoa@m 006C                     efgtoa@n 008C  
                   efgtoa@p 0076                     efgtoa@t 0066                     efgtoa@u 008E  
                   efgtoa@w 0078                     atoi@neg 000E                     _sprintf 3536  
                   _tolower 3674                  ??_lcd_init 0007                     _strncmp 2DE8  
      end_of_initialization 366A  __end_of_lcd_disable_cursor 3902                     floorf@e 0028  
                   floorf@m 0024                     floorf@u 002A                     floorf@x 001A  
                   fputc@fp 0003               __Lmediumconst 0000                     fputs@fp 000C  
               ?__send_byte 0002           __end_of_vfpfcnvrt 1940                  efgtoa@mode 007B  
                efgtoa@sign 0074                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
                ??_vfprintf 0058                     strcpy@d 0009                     strlen@a 0003  
                   strcpy@s 0007                     strlen@s 0001                 ___fladd@grs 0010  
             ___xxtofl@sign 0009                 ___fldiv@grs 0014                 ___fldiv@rem 000D  
            lcd_write@letra 0006                 ___flmul@grs 001C                  lcd_out@col 000B  
                lcd_out@row 000E                  lcd_out@str 000C               ??_lcd_command 0006  
            __end_of___flge 2CEA              __end_of___fleq 331A                 vfpfcnvrt@ap 0044  
               vfpfcnvrt@ct 004E                 vfpfcnvrt@fp 0040              __end_of___wmul 38C4  
            __end_of_efgtoa 1432              __end_of_floorf 27D6                  floorf@F526 00BB  
            __end_of_strcpy 3536              __end_of_strlen 389E         start_initialization 3628  
               __end_of_pad 310E                 __lcd_params 005E       __end_of___fpclassifyf 2DE8  
     __end_of__write_nibble 3478                 vfprintf@fmt 0054                    ??___flge 0030  
                  ??___fleq 0009                    ??___wmul 0005         __end_of_lcd_command 3932  
                  ??_efgtoa 003B                 __pdataBANK0 00A7                    ??_floorf 001E  
                  ??_strcpy 0005                    ??_strlen 0003                   ___fladd@a 0005  
                 ___fladd@b 0001                   ___fldiv@a 0005                   ___fldiv@b 0001  
                 ___flmul@a 0013                   ___flmul@b 000F                 __pbssCOMRAM 005A  
                 ___flsub@a 002C                   ___flsub@b 0028               __pcstackBANK0 0060  
                  ?___fladd 0001                    ?___fldiv 0001                    ?___awdiv 0001  
                  ?___flneg 0001                    ?___awmod 0001                    ?___flmul 000F  
                  ?___flsub 0028                    ?___fltol 0001                   _lcd_write 3916  
                  ?_lcd_out 000B                 __smallconst 0800                    ?_isdigit 0001  
                  _ADC_Init 38C4                    _ADC_Read 3744                    ?_isspace 0001  
                  ?_isupper 0001                    ?_sprintf 0092                    ?_tolower 0007  
                  ?_strncmp 0001             __send_byte@mode 0002              ___wmul@product 0005  
               _lcd_command 3924                ??__send_byte 0003          _lcd_disable_cursor 38EE  
                 _vfpfcnvrt 1432                  _ADCON0bits 000FC2                  _ADCON1bits 000FC1  
                _ADCON2bits 000FC0         ?_lcd_disable_cursor 0001                  ?_lcd_write 0001  
         ___wmul@multiplier 0001                  vfpfcnvrt@c 0051                  vfpfcnvrt@f 004A  
                 copy_data0 363C          __end_of__send_byte 3628        ??_lcd_disable_cursor 0007  
                  __Hrparam 0000                  vfprintf@ap 0056                    __Lrparam 0000  
                vfprintf@fp 0052                  ?_vfpfcnvrt 0040          ___fpclassifyf@F465 00BF  
                sprintf@fmt 0094                    ___xxtofl 27D6                    __ptext10 3868  
                  __ptext11 3700                    __ptext20 1E00                    __ptext12 2EBE  
                  __ptext21 2BE6                    __ptext13 3932                    __ptext30 3784  
                  __ptext22 3270                    __ptext14 25C4                    __ptext31 3916  
                  __ptext23 222A                    __ptext15 2CEA                    __ptext40 3744  
                  __ptext32 3398                    __ptext24 31C0                    __ptext16 2AE0  
                  __ptext41 38C4                    __ptext33 331A                    __ptext25 2F88  
                  __ptext17 36BA                    __ptext34 38EE                    __ptext26 298A  
                  __ptext18 1940                    __ptext35 3902                    __ptext27 3588  
                  __ptext19 37F8                    __ptext36 3924                    __ptext28 3830  
                  __ptext37 35DA                    __ptext29 389E                    __ptext38 340A  
                  __ptext39 27D6                    _lcd_init 331A                  strcpy@dest 0001  
                  efgtoa@fp 0034                    efgtoa@ne 006A                    efgtoa@pp 0068  
                  efgtoa@ou 006E                    isa$xinst 000000                    _vfprintf 3478  
               _isspace$943 0007                 ??_lcd_write 0006                    isdigit@c 0001  
      __write_nibble@nibble 0001              _lcd_set_cursor 3398           lcd_set_cursor@col 0007  
                 sprintf@ap 009A           lcd_set_cursor@row 000A                    isspace@c 0001  
                 strcpy@src 0003                    isupper@c 0001                   strncmp@_l 0001  
                 strncmp@_r 0003                 efgtoa@nmode 007A                 ??_vfpfcnvrt 0046  
                  sprintf@f 009C                    tolower@c 0007                    sprintf@s 0092  
                  strncmp@l 0008                    strncmp@n 0005                    strncmp@r 000A  
    __end_of_lcd_set_cursor 340A               ___fladd@signs 000D                ___fladd@aexp 000E  
              ___fladd@bexp 000F                ?_lcd_command 0001  
