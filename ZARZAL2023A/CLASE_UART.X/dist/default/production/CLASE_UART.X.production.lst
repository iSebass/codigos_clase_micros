

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Apr 21 09:57:49 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _RCREG	set	4014
    54  0000                     _TXREG	set	4013
    55  0000                     _TXSTAbits	set	4012
    56  0000                     _TX9D	set	32096
    57  0000                     _BRGH	set	32098
    58  0000                     _SPEN	set	32095
    59  0000                     _SYNC	set	32100
    60  0000                     _TXEN	set	32101
    61  0000                     _RX9	set	32094
    62  0000                     _TX9	set	32102
    63  0000                     _PIR1bits	set	3998
    64  0000                     _RCSTA	set	4011
    65  0000                     _TXSTA	set	4012
    66  0000                     _SPBRG	set	4015
    67                           
    68                           	psect	smallconst
    69  000800                     __psmallconst:
    70                           	callstack 0
    71  000800  00                 	db	0
    72  000801                     STR_1:
    73  000801  55                 	db	85	;'U'
    74  000802  6E                 	db	110	;'n'
    75  000803  69                 	db	105	;'i'
    76  000804  76                 	db	118	;'v'
    77  000805  61                 	db	97	;'a'
    78  000806  6C                 	db	108	;'l'
    79  000807  6C                 	db	108	;'l'
    80  000808  65                 	db	101	;'e'
    81  000809  20                 	db	32
    82  00080A  0D                 	db	13
    83  00080B  0A                 	db	10
    84  00080C  00                 	db	0
    85  00080D  00                 	db	0	; dummy byte at the end
    86  0000                     
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90  000A48                     __pcinit:
    91                           	callstack 0
    92  000A48                     start_initialization:
    93                           	callstack 0
    94  000A48                     __initialization:
    95                           	callstack 0
    96  000A48                     end_of_initialization:
    97                           	callstack 0
    98  000A48                     __end_of__initialization:
    99                           	callstack 0
   100  000A48  0E00               	movlw	low (__Lmediumconst shr (0+16))
   101  000A4A  6EF8               	movwf	tblptru,c
   102  000A4C  0100               	movlb	0
   103  000A4E  EFCD  F004         	goto	_main	;jump to C main() function
   104                           
   105                           	psect	cstackCOMRAM
   106  000001                     __pcstackCOMRAM:
   107                           	callstack 0
   108  000001                     ?___lldiv:
   109                           	callstack 0
   110  000001                     UART_Write_Chr@letter:
   111                           	callstack 0
   112  000001                     ___lldiv@dividend:
   113                           	callstack 0
   114                           
   115                           ; 4 bytes @ 0x0
   116  000001                     	ds	1
   117  000002                     UART_Write_Text@text:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x1
   121  000002                     	ds	2
   122  000004                     
   123                           ; 1 bytes @ 0x3
   124  000004                     	ds	1
   125  000005                     ___lldiv@divisor:
   126                           	callstack 0
   127                           
   128                           ; 4 bytes @ 0x4
   129  000005                     	ds	4
   130  000009                     ___lldiv@quotient:
   131                           	callstack 0
   132                           
   133                           ; 4 bytes @ 0x8
   134  000009                     	ds	4
   135  00000D                     ___lldiv@counter:
   136                           	callstack 0
   137                           
   138                           ; 1 bytes @ 0xC
   139  00000D                     	ds	1
   140  00000E                     UART_Init@config:
   141                           	callstack 0
   142                           
   143                           ; 8 bytes @ 0xD
   144  00000E                     	ds	8
   145  000016                     ??_UART_Init:
   146                           
   147                           ; 1 bytes @ 0x15
   148  000016                     	ds	4
   149  00001A                     UART_Init@spbrg_val:
   150                           	callstack 0
   151                           
   152                           ; 4 bytes @ 0x19
   153  00001A                     	ds	4
   154  00001E                     ??_main:
   155                           
   156                           ; 1 bytes @ 0x1D
   157  00001E                     	ds	2
   158  000020                     main@uartConfig:
   159                           	callstack 0
   160                           
   161                           ; 8 bytes @ 0x1F
   162  000020                     	ds	8
   163                           
   164 ;;
   165 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   166 ;;
   167 ;; *************** function _main *****************
   168 ;; Defined at:
   169 ;;		line 6 in file "main.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;  uartConfig      8   31[COMRAM] struct .
   174 ;; Return value:  Size  Location     Type
   175 ;;                  1    wreg      void 
   176 ;; Registers used:
   177 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   178 ;; Tracked objects:
   179 ;;		On entry : 0/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   183 ;;      Params:         0       0       0       0       0       0       0       0       0
   184 ;;      Locals:         8       0       0       0       0       0       0       0       0
   185 ;;      Temps:          2       0       0       0       0       0       0       0       0
   186 ;;      Totals:        10       0       0       0       0       0       0       0       0
   187 ;;Total ram usage:       10 bytes
   188 ;; Hardware stack levels required when called: 2
   189 ;; This function calls:
   190 ;;		_UART_Init
   191 ;;		_UART_Write_Text
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           	psect	text0
   198  00099A                     __ptext0:
   199                           	callstack 0
   200  00099A                     _main:
   201                           	callstack 29
   202  00099A                     
   203                           ;main.c: 7:     UART_Config uartConfig;;main.c: 9:     uartConfig.baud_rate = 9600;
   204  00099A  0E80               	movlw	128
   205  00099C  6E20               	movwf	main@uartConfig^0,c
   206  00099E  0E25               	movlw	37
   207  0009A0  6E21               	movwf	(main@uartConfig+1)^0,c
   208  0009A2  0E00               	movlw	0
   209  0009A4  6E22               	movwf	(main@uartConfig+2)^0,c
   210  0009A6  0E00               	movlw	0
   211  0009A8  6E23               	movwf	(main@uartConfig+3)^0,c
   212                           
   213                           ;main.c: 10:     uartConfig.data_bits = 8;
   214  0009AA  0E08               	movlw	8
   215  0009AC  6E24               	movwf	(main@uartConfig+4)^0,c
   216                           
   217                           ;main.c: 11:     uartConfig.parity = 0;
   218  0009AE  0E00               	movlw	0
   219  0009B0  6E25               	movwf	(main@uartConfig+5)^0,c
   220                           
   221                           ;main.c: 12:     uartConfig.stop_bits = 1;
   222  0009B2  0E01               	movlw	1
   223  0009B4  6E26               	movwf	(main@uartConfig+6)^0,c
   224                           
   225                           ;main.c: 13:     uartConfig.speed_module = 1;
   226  0009B6  0E01               	movlw	1
   227  0009B8  6E27               	movwf	(main@uartConfig+7)^0,c
   228  0009BA                     
   229                           ;main.c: 15:     UART_Init(uartConfig);
   230  0009BA  EE20  F020         	lfsr	2,main@uartConfig
   231  0009BE  EE00  F00E         	lfsr	0,UART_Init@config
   232  0009C2  0E07               	movlw	7
   233  0009C4                     u221:
   234  0009C4  CFDB FFEB          	movff	plusw2,plusw0
   235  0009C8  06E8               	decf	wreg,f,c
   236  0009CA  E2FC               	bc	u221
   237  0009CC  EC07  F004         	call	_UART_Init	;wreg free
   238  0009D0                     l894:
   239                           
   240                           ;main.c: 17:         UART_Write_Text("Univalle \r\n");
   241  0009D0  0E01               	movlw	low STR_1
   242  0009D2  6E02               	movwf	UART_Write_Text@text^0,c
   243  0009D4  0E08               	movlw	high STR_1
   244  0009D6  6E03               	movwf	(UART_Write_Text@text+1)^0,c
   245  0009D8  ECFE  F004         	call	_UART_Write_Text	;wreg free
   246  0009DC                     
   247                           ;main.c: 18:         _delay((unsigned long)((1000)*(20000000UL/4000.0)));
   248  0009DC  0E1A               	movlw	26
   249  0009DE  6E1F               	movwf	(??_main+1)^0,c
   250  0009E0  0E5E               	movlw	94
   251  0009E2  6E1E               	movwf	??_main^0,c
   252  0009E4  0E6E               	movlw	110
   253  0009E6                     u237:
   254  0009E6  2EE8               	decfsz	wreg,f,c
   255  0009E8  D7FE               	bra	u237
   256  0009EA  2E1E               	decfsz	??_main^0,f,c
   257  0009EC  D7FC               	bra	u237
   258  0009EE  2E1F               	decfsz	(??_main+1)^0,f,c
   259  0009F0  D7FA               	bra	u237
   260  0009F2  D000               	nop2	
   261  0009F4  EFE8  F004         	goto	l894
   262  0009F8  EF00  F000         	goto	start
   263  0009FC                     __end_of_main:
   264                           	callstack 0
   265                           
   266 ;; *************** function _UART_Write_Text *****************
   267 ;; Defined at:
   268 ;;		line 46 in file "UART_LIB.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;  text            2    1[COMRAM] PTR unsigned char 
   271 ;;		 -> STR_1(12), 
   272 ;; Auto vars:     Size  Location     Type
   273 ;;		None
   274 ;; Return value:  Size  Location     Type
   275 ;;                  1    wreg      void 
   276 ;; Registers used:
   277 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : 0/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   283 ;;      Params:         2       0       0       0       0       0       0       0       0
   284 ;;      Locals:         0       0       0       0       0       0       0       0       0
   285 ;;      Temps:          0       0       0       0       0       0       0       0       0
   286 ;;      Totals:         2       0       0       0       0       0       0       0       0
   287 ;;Total ram usage:        2 bytes
   288 ;; Hardware stack levels used: 1
   289 ;; Hardware stack levels required when called: 1
   290 ;; This function calls:
   291 ;;		_UART_Write_Chr
   292 ;; This function is called by:
   293 ;;		_main
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text1
   298  0009FC                     __ptext1:
   299                           	callstack 0
   300  0009FC                     _UART_Write_Text:
   301                           	callstack 29
   302  0009FC                     
   303                           ;UART_LIB.c: 47:     while(*text){
   304  0009FC  EF0A  F005         	goto	l888
   305  000A00                     l884:
   306                           
   307                           ;UART_LIB.c: 48:         UART_Write_Chr(*text);
   308  000A00  C002  FFF6         	movff	UART_Write_Text@text,tblptrl
   309  000A04  C003  FFF7         	movff	UART_Write_Text@text+1,tblptrh
   310  000A08                     	if	0	;tblptru may be non-zero
   311  000A08                     	endif
   312  000A08                     	if	0	;tblptru may be non-zero
   313  000A08                     	endif
   314  000A08  0008               	tblrd		*
   315  000A0A  50F5               	movf	tablat,w,c
   316  000A0C  EC19  F005         	call	_UART_Write_Chr
   317  000A10                     
   318                           ;UART_LIB.c: 49:         text++;
   319  000A10  4A02               	infsnz	UART_Write_Text@text^0,f,c
   320  000A12  2A03               	incf	(UART_Write_Text@text+1)^0,f,c
   321  000A14                     l888:
   322                           
   323                           ;UART_LIB.c: 47:     while(*text){
   324  000A14  C002  FFF6         	movff	UART_Write_Text@text,tblptrl
   325  000A18  C003  FFF7         	movff	UART_Write_Text@text+1,tblptrh
   326  000A1C                     	if	0	;tblptru may be non-zero
   327  000A1C                     	endif
   328  000A1C                     	if	0	;tblptru may be non-zero
   329  000A1C                     	endif
   330  000A1C  0008               	tblrd		*
   331  000A1E  50F5               	movf	tablat,w,c
   332  000A20  0900               	iorlw	0
   333  000A22  A4D8               	btfss	status,2,c
   334  000A24  EF16  F005         	goto	u211
   335  000A28  EF18  F005         	goto	u210
   336  000A2C                     u211:
   337  000A2C  EF00  F005         	goto	l884
   338  000A30                     u210:
   339  000A30  0012               	return		;funcret
   340  000A32                     __end_of_UART_Write_Text:
   341                           	callstack 0
   342                           
   343 ;; *************** function _UART_Write_Chr *****************
   344 ;; Defined at:
   345 ;;		line 42 in file "UART_LIB.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;  letter          1    wreg     unsigned char 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  letter          1    0[COMRAM] unsigned char 
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   359 ;;      Params:         0       0       0       0       0       0       0       0       0
   360 ;;      Locals:         1       0       0       0       0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0
   362 ;;      Totals:         1       0       0       0       0       0       0       0       0
   363 ;;Total ram usage:        1 bytes
   364 ;; Hardware stack levels used: 1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_UART_Write_Text
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text2
   373  000A32                     __ptext2:
   374                           	callstack 0
   375  000A32                     _UART_Write_Chr:
   376                           	callstack 29
   377                           
   378                           ;incstack = 0
   379                           ;UART_Write_Chr@letter stored from wreg
   380  000A32  6E01               	movwf	UART_Write_Chr@letter^0,c
   381  000A34                     l53:
   382  000A34  A2AC               	btfss	172,1,c	;volatile
   383  000A36  EF1F  F005         	goto	u11
   384  000A3A  EF21  F005         	goto	u10
   385  000A3E                     u11:
   386  000A3E  EF1A  F005         	goto	l53
   387  000A42                     u10:
   388  000A42                     
   389                           ;UART_LIB.c: 44:     TXREG = letter;
   390  000A42  C001  FFAD         	movff	UART_Write_Chr@letter,4013	;volatile
   391  000A46  0012               	return		;funcret
   392  000A48                     __end_of_UART_Write_Chr:
   393                           	callstack 0
   394                           
   395 ;; *************** function _UART_Init *****************
   396 ;; Defined at:
   397 ;;		line 5 in file "UART_LIB.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;  config          8   13[COMRAM] struct .
   400 ;; Auto vars:     Size  Location     Type
   401 ;;  spbrg_val       4   25[COMRAM] unsigned long 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, status,2, status,0, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : 0/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   411 ;;      Params:         8       0       0       0       0       0       0       0       0
   412 ;;      Locals:         4       0       0       0       0       0       0       0       0
   413 ;;      Temps:          4       0       0       0       0       0       0       0       0
   414 ;;      Totals:        16       0       0       0       0       0       0       0       0
   415 ;;Total ram usage:       16 bytes
   416 ;; Hardware stack levels used: 1
   417 ;; Hardware stack levels required when called: 1
   418 ;; This function calls:
   419 ;;		___lldiv
   420 ;; This function is called by:
   421 ;;		_main
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           	psect	text3
   426  00080E                     __ptext3:
   427                           	callstack 0
   428  00080E                     _UART_Init:
   429                           	callstack 29
   430  00080E                     
   431                           ;UART_LIB.c: 7:     unsigned long spbrg_val = (20000000UL / (16 * config.baud_rate)) - 1
      +                          ;
   432  00080E  0E00               	movlw	0
   433  000810  6E01               	movwf	___lldiv@dividend^0,c
   434  000812  0E2D               	movlw	45
   435  000814  6E02               	movwf	(___lldiv@dividend+1)^0,c
   436  000816  0E31               	movlw	49
   437  000818  6E03               	movwf	(___lldiv@dividend+2)^0,c
   438  00081A  0E01               	movlw	1
   439  00081C  6E04               	movwf	(___lldiv@dividend+3)^0,c
   440  00081E  C00E  F016         	movff	UART_Init@config,??_UART_Init
   441  000822  C00F  F017         	movff	UART_Init@config+1,??_UART_Init+1
   442  000826  C010  F018         	movff	UART_Init@config+2,??_UART_Init+2
   443  00082A  C011  F019         	movff	UART_Init@config+3,??_UART_Init+3
   444  00082E  0E04               	movlw	4
   445  000830                     u165:
   446  000830  90D8               	bcf	status,0,c
   447  000832  3616               	rlcf	??_UART_Init^0,f,c
   448  000834  3617               	rlcf	(??_UART_Init+1)^0,f,c
   449  000836  3618               	rlcf	(??_UART_Init+2)^0,f,c
   450  000838  3619               	rlcf	(??_UART_Init+3)^0,f,c
   451  00083A  2EE8               	decfsz	wreg,f,c
   452  00083C  EF18  F004         	goto	u165
   453  000840  C016  F005         	movff	??_UART_Init,___lldiv@divisor
   454  000844  C017  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
   455  000848  C018  F007         	movff	??_UART_Init+2,___lldiv@divisor+2
   456  00084C  C019  F008         	movff	??_UART_Init+3,___lldiv@divisor+3
   457  000850  EC7B  F004         	call	___lldiv	;wreg free
   458  000854  0EFF               	movlw	255
   459  000856  2401               	addwf	?___lldiv^0,w,c
   460  000858  6E1A               	movwf	UART_Init@spbrg_val^0,c
   461  00085A  0EFF               	movlw	255
   462  00085C  2002               	addwfc	(?___lldiv+1)^0,w,c
   463  00085E  6E1B               	movwf	(UART_Init@spbrg_val+1)^0,c
   464  000860  0EFF               	movlw	255
   465  000862  2003               	addwfc	(?___lldiv+2)^0,w,c
   466  000864  6E1C               	movwf	(UART_Init@spbrg_val+2)^0,c
   467  000866  0EFF               	movlw	255
   468  000868  2004               	addwfc	(?___lldiv+3)^0,w,c
   469  00086A  6E1D               	movwf	(UART_Init@spbrg_val+3)^0,c
   470  00086C                     
   471                           ;UART_LIB.c: 8:     SPBRG = spbrg_val;
   472  00086C  C01A  FFAF         	movff	UART_Init@spbrg_val,4015	;volatile
   473  000870                     
   474                           ;UART_LIB.c: 11:     TXSTA = 0x24;
   475  000870  0E24               	movlw	36
   476  000872  6EAC               	movwf	172,c	;volatile
   477  000874                     
   478                           ;UART_LIB.c: 12:     RCSTA = 0x90;
   479  000874  0E90               	movlw	144
   480  000876  6EAB               	movwf	171,c	;volatile
   481  000878                     
   482                           ;UART_LIB.c: 15:     TX9 = config.data_bits == 9 ? 1 : 0;
   483  000878  0E09               	movlw	9
   484  00087A  1812               	xorwf	(UART_Init@config+4)^0,w,c
   485  00087C  B4D8               	btfsc	status,2,c
   486  00087E  EF43  F004         	goto	u171
   487  000882  EF46  F004         	goto	u170
   488  000886                     u171:
   489  000886  8CAC               	bsf	4012,6,c	;volatile
   490  000888  EF47  F004         	goto	u185
   491  00088C                     u170:
   492  00088C  9CAC               	bcf	4012,6,c	;volatile
   493  00088E                     u185:
   494  00088E                     
   495                           ;UART_LIB.c: 16:     RX9 = config.data_bits == 9 ? 1 : 0;
   496  00088E  0E09               	movlw	9
   497  000890  1812               	xorwf	(UART_Init@config+4)^0,w,c
   498  000892  B4D8               	btfsc	status,2,c
   499  000894  EF4E  F004         	goto	u191
   500  000898  EF51  F004         	goto	u190
   501  00089C                     u191:
   502  00089C  8CAB               	bsf	4011,6,c	;volatile
   503  00089E  EF52  F004         	goto	u205
   504  0008A2                     u190:
   505  0008A2  9CAB               	bcf	4011,6,c	;volatile
   506  0008A4                     u205:
   507  0008A4                     
   508                           ;UART_LIB.c: 17:     TXEN = 1;
   509  0008A4  8AAC               	bsf	4012,5,c	;volatile
   510  0008A6                     
   511                           ;UART_LIB.c: 18:     SYNC = 0;
   512  0008A6  98AC               	bcf	4012,4,c	;volatile
   513  0008A8                     
   514                           ;UART_LIB.c: 19:     SPEN = 1;
   515  0008A8  8EAB               	bsf	4011,7,c	;volatile
   516                           
   517                           ;UART_LIB.c: 24:     switch (config.parity) {
   518  0008AA  EF65  F004         	goto	l876
   519  0008AE                     l46:
   520                           
   521                           ;UART_LIB.c: 26:             BRGH = 1;
   522  0008AE  84AC               	bsf	4012,2,c	;volatile
   523                           
   524                           ;UART_LIB.c: 27:             TX9D = 0;
   525  0008B0  90AC               	bcf	4012,0,c	;volatile
   526  0008B2                     l868:
   527                           
   528                           ;UART_LIB.c: 28:             RCSTA |= 0x02;
   529  0008B2  82AB               	bsf	171,1,c	;volatile
   530                           
   531                           ;UART_LIB.c: 29:             break;
   532  0008B4  EF7A  F004         	goto	l50
   533  0008B8                     l48:
   534                           
   535                           ;UART_LIB.c: 31:             BRGH = 1;
   536  0008B8  84AC               	bsf	4012,2,c	;volatile
   537                           
   538                           ;UART_LIB.c: 32:             TX9D = 1;
   539  0008BA  80AC               	bsf	4012,0,c	;volatile
   540  0008BC  EF59  F004         	goto	l868
   541  0008C0                     l49:
   542                           
   543                           ;UART_LIB.c: 36:             BRGH = 1;
   544  0008C0  84AC               	bsf	4012,2,c	;volatile
   545                           
   546                           ;UART_LIB.c: 37:             TX9D = 0;
   547  0008C2  90AC               	bcf	4012,0,c	;volatile
   548  0008C4                     
   549                           ;UART_LIB.c: 38:             RCSTA &= ~0x02;
   550  0008C4  92AB               	bcf	171,1,c	;volatile
   551                           
   552                           ;UART_LIB.c: 39:             break;
   553  0008C6  EF7A  F004         	goto	l50
   554  0008CA                     l876:
   555  0008CA  5013               	movf	(UART_Init@config+5)^0,w,c
   556  0008CC  6E16               	movwf	??_UART_Init^0,c
   557  0008CE  6A17               	clrf	(??_UART_Init+1)^0,c
   558                           
   559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   560                           ; Switch size 1, requested type "simple"
   561                           ; Number of cases is 1, Range of values is 0 to 0
   562                           ; switch strategies available:
   563                           ; Name         Instructions Cycles
   564                           ; simple_byte            4     3 (average)
   565                           ;	Chosen strategy is simple_byte
   566  0008D0  5017               	movf	(??_UART_Init+1)^0,w,c
   567  0008D2  0A00               	xorlw	0	; case 0
   568  0008D4  B4D8               	btfsc	status,2,c
   569  0008D6  EF6F  F004         	goto	l902
   570  0008DA  EF60  F004         	goto	l49
   571  0008DE                     l902:
   572                           
   573                           ; Switch size 1, requested type "simple"
   574                           ; Number of cases is 2, Range of values is 1 to 2
   575                           ; switch strategies available:
   576                           ; Name         Instructions Cycles
   577                           ; simple_byte            7     4 (average)
   578                           ;	Chosen strategy is simple_byte
   579  0008DE  5016               	movf	??_UART_Init^0,w,c
   580  0008E0  0A01               	xorlw	1	; case 1
   581  0008E2  B4D8               	btfsc	status,2,c
   582  0008E4  EF57  F004         	goto	l46
   583  0008E8  0A03               	xorlw	3	; case 2
   584  0008EA  B4D8               	btfsc	status,2,c
   585  0008EC  EF5C  F004         	goto	l48
   586  0008F0  EF60  F004         	goto	l49
   587  0008F4                     l50:
   588  0008F4  0012               	return		;funcret
   589  0008F6                     __end_of_UART_Init:
   590                           	callstack 0
   591                           
   592 ;; *************** function ___lldiv *****************
   593 ;; Defined at:
   594 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  dividend        4    0[COMRAM] unsigned long 
   597 ;;  divisor         4    4[COMRAM] unsigned long 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  quotient        4    8[COMRAM] unsigned long 
   600 ;;  counter         1   12[COMRAM] unsigned char 
   601 ;; Return value:  Size  Location     Type
   602 ;;                  4    0[COMRAM] unsigned long 
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   610 ;;      Params:         8       0       0       0       0       0       0       0       0
   611 ;;      Locals:         5       0       0       0       0       0       0       0       0
   612 ;;      Temps:          0       0       0       0       0       0       0       0       0
   613 ;;      Totals:        13       0       0       0       0       0       0       0       0
   614 ;;Total ram usage:       13 bytes
   615 ;; Hardware stack levels used: 1
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_UART_Init
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text4
   624  0008F6                     __ptext4:
   625                           	callstack 0
   626  0008F6                     ___lldiv:
   627                           	callstack 29
   628  0008F6  0E00               	movlw	0
   629  0008F8  6E09               	movwf	___lldiv@quotient^0,c
   630  0008FA  0E00               	movlw	0
   631  0008FC  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   632  0008FE  0E00               	movlw	0
   633  000900  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   634  000902  0E00               	movlw	0
   635  000904  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   636  000906  5005               	movf	___lldiv@divisor^0,w,c
   637  000908  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   638  00090A  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   639  00090C  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   640  00090E  B4D8               	btfsc	status,2,c
   641  000910  EF8C  F004         	goto	u131
   642  000914  EF8E  F004         	goto	u130
   643  000918                     u131:
   644  000918  EFC4  F004         	goto	l98
   645  00091C                     u130:
   646  00091C  0E01               	movlw	1
   647  00091E  6E0D               	movwf	___lldiv@counter^0,c
   648  000920  EF98  F004         	goto	l836
   649  000924                     l834:
   650  000924  90D8               	bcf	status,0,c
   651  000926  3605               	rlcf	___lldiv@divisor^0,f,c
   652  000928  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   653  00092A  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   654  00092C  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   655  00092E  2A0D               	incf	___lldiv@counter^0,f,c
   656  000930                     l836:
   657  000930  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   658  000932  EF9D  F004         	goto	u141
   659  000936  EF9F  F004         	goto	u140
   660  00093A                     u141:
   661  00093A  EF92  F004         	goto	l834
   662  00093E                     u140:
   663  00093E                     l838:
   664  00093E  90D8               	bcf	status,0,c
   665  000940  3609               	rlcf	___lldiv@quotient^0,f,c
   666  000942  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   667  000944  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   668  000946  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   669  000948  5005               	movf	___lldiv@divisor^0,w,c
   670  00094A  5C01               	subwf	___lldiv@dividend^0,w,c
   671  00094C  5006               	movf	(___lldiv@divisor+1)^0,w,c
   672  00094E  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   673  000950  5007               	movf	(___lldiv@divisor+2)^0,w,c
   674  000952  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   675  000954  5008               	movf	(___lldiv@divisor+3)^0,w,c
   676  000956  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   677  000958  A0D8               	btfss	status,0,c
   678  00095A  EFB1  F004         	goto	u151
   679  00095E  EFB3  F004         	goto	u150
   680  000962                     u151:
   681  000962  EFBC  F004         	goto	l846
   682  000966                     u150:
   683  000966  5005               	movf	___lldiv@divisor^0,w,c
   684  000968  5E01               	subwf	___lldiv@dividend^0,f,c
   685  00096A  5006               	movf	(___lldiv@divisor+1)^0,w,c
   686  00096C  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   687  00096E  5007               	movf	(___lldiv@divisor+2)^0,w,c
   688  000970  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   689  000972  5008               	movf	(___lldiv@divisor+3)^0,w,c
   690  000974  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   691  000976  8009               	bsf	___lldiv@quotient^0,0,c
   692  000978                     l846:
   693  000978  90D8               	bcf	status,0,c
   694  00097A  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   695  00097C  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   696  00097E  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   697  000980  3205               	rrcf	___lldiv@divisor^0,f,c
   698  000982  2E0D               	decfsz	___lldiv@counter^0,f,c
   699  000984  EF9F  F004         	goto	l838
   700  000988                     l98:
   701  000988  C009  F001         	movff	___lldiv@quotient,?___lldiv
   702  00098C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   703  000990  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   704  000994  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   705  000998  0012               	return		;funcret
   706  00099A                     __end_of___lldiv:
   707                           	callstack 0
   708                           
   709                           	psect	rparam
   710  0000                     
   711                           	psect	idloc
   712                           
   713                           ;Config register IDLOC0 @ 0x200000
   714                           ;	unspecified, using default values
   715  200000                     	org	2097152
   716  200000  FF                 	db	255
   717                           
   718                           ;Config register IDLOC1 @ 0x200001
   719                           ;	unspecified, using default values
   720  200001                     	org	2097153
   721  200001  FF                 	db	255
   722                           
   723                           ;Config register IDLOC2 @ 0x200002
   724                           ;	unspecified, using default values
   725  200002                     	org	2097154
   726  200002  FF                 	db	255
   727                           
   728                           ;Config register IDLOC3 @ 0x200003
   729                           ;	unspecified, using default values
   730  200003                     	org	2097155
   731  200003  FF                 	db	255
   732                           
   733                           ;Config register IDLOC4 @ 0x200004
   734                           ;	unspecified, using default values
   735  200004                     	org	2097156
   736  200004  FF                 	db	255
   737                           
   738                           ;Config register IDLOC5 @ 0x200005
   739                           ;	unspecified, using default values
   740  200005                     	org	2097157
   741  200005  FF                 	db	255
   742                           
   743                           ;Config register IDLOC6 @ 0x200006
   744                           ;	unspecified, using default values
   745  200006                     	org	2097158
   746  200006  FF                 	db	255
   747                           
   748                           ;Config register IDLOC7 @ 0x200007
   749                           ;	unspecified, using default values
   750  200007                     	org	2097159
   751  200007  FF                 	db	255
   752                           
   753                           	psect	config
   754                           
   755                           ;Config register CONFIG1L @ 0x300000
   756                           ;	PLL Prescaler Selection bits
   757                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   758                           ;	System Clock Postscaler Selection bits
   759                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   760                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   761                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   762  300000                     	org	3145728
   763  300000  00                 	db	0
   764                           
   765                           ;Config register CONFIG1H @ 0x300001
   766                           ;	Oscillator Selection bits
   767                           ;	FOSC = HS, HS oscillator (HS)
   768                           ;	Fail-Safe Clock Monitor Enable bit
   769                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   770                           ;	Internal/External Oscillator Switchover bit
   771                           ;	IESO = OFF, Oscillator Switchover mode disabled
   772  300001                     	org	3145729
   773  300001  0C                 	db	12
   774                           
   775                           ;Config register CONFIG2L @ 0x300002
   776                           ;	Power-up Timer Enable bit
   777                           ;	PWRT = ON, PWRT enabled
   778                           ;	Brown-out Reset Enable bits
   779                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   780                           ;	Brown-out Reset Voltage bits
   781                           ;	BORV = 3, Minimum setting 2.05V
   782                           ;	USB Voltage Regulator Enable bit
   783                           ;	VREGEN = OFF, USB voltage regulator disabled
   784  300002                     	org	3145730
   785  300002  18                 	db	24
   786                           
   787                           ;Config register CONFIG2H @ 0x300003
   788                           ;	Watchdog Timer Enable bit
   789                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   790                           ;	Watchdog Timer Postscale Select bits
   791                           ;	WDTPS = 32768, 1:32768
   792  300003                     	org	3145731
   793  300003  1E                 	db	30
   794                           
   795                           ; Padding undefined space
   796  300004                     	org	3145732
   797  300004  FF                 	db	255
   798                           
   799                           ;Config register CONFIG3H @ 0x300005
   800                           ;	CCP2 MUX bit
   801                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   802                           ;	PORTB A/D Enable bit
   803                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   804                           ;	Low-Power Timer 1 Oscillator Enable bit
   805                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   806                           ;	MCLR Pin Enable bit
   807                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   808  300005                     	org	3145733
   809  300005  81                 	db	129
   810                           
   811                           ;Config register CONFIG4L @ 0x300006
   812                           ;	Stack Full/Underflow Reset Enable bit
   813                           ;	STVREN = ON, Stack full/underflow will cause Reset
   814                           ;	Single-Supply ICSP Enable bit
   815                           ;	LVP = OFF, Single-Supply ICSP disabled
   816                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   817                           ;	ICPRT = OFF, ICPORT disabled
   818                           ;	Extended Instruction Set Enable bit
   819                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   820                           ;	Background Debugger Enable bit
   821                           ;	DEBUG = 0x1, unprogrammed default
   822  300006                     	org	3145734
   823  300006  81                 	db	129
   824                           
   825                           ; Padding undefined space
   826  300007                     	org	3145735
   827  300007  FF                 	db	255
   828                           
   829                           ;Config register CONFIG5L @ 0x300008
   830                           ;	Code Protection bit
   831                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   832                           ;	Code Protection bit
   833                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   834                           ;	Code Protection bit
   835                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   836                           ;	Code Protection bit
   837                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   838  300008                     	org	3145736
   839  300008  0F                 	db	15
   840                           
   841                           ;Config register CONFIG5H @ 0x300009
   842                           ;	Boot Block Code Protection bit
   843                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   844                           ;	Data EEPROM Code Protection bit
   845                           ;	CPD = OFF, Data EEPROM is not code-protected
   846  300009                     	org	3145737
   847  300009  C0                 	db	192
   848                           
   849                           ;Config register CONFIG6L @ 0x30000A
   850                           ;	Write Protection bit
   851                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   852                           ;	Write Protection bit
   853                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   854                           ;	Write Protection bit
   855                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   856                           ;	Write Protection bit
   857                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   858  30000A                     	org	3145738
   859  30000A  0F                 	db	15
   860                           
   861                           ;Config register CONFIG6H @ 0x30000B
   862                           ;	Configuration Register Write Protection bit
   863                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   864                           ;	Boot Block Write Protection bit
   865                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   866                           ;	Data EEPROM Write Protection bit
   867                           ;	WRTD = OFF, Data EEPROM is not write-protected
   868  30000B                     	org	3145739
   869  30000B  E0                 	db	224
   870                           
   871                           ;Config register CONFIG7L @ 0x30000C
   872                           ;	Table Read Protection bit
   873                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   874                           ;	Table Read Protection bit
   875                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   876                           ;	Table Read Protection bit
   877                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   878                           ;	Table Read Protection bit
   879                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   880  30000C                     	org	3145740
   881  30000C  0F                 	db	15
   882                           
   883                           ;Config register CONFIG7H @ 0x30000D
   884                           ;	Boot Block Table Read Protection bit
   885                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   886  30000D                     	org	3145741
   887  30000D  40                 	db	64
   888                           tosu	equ	0xFFF
   889                           tosh	equ	0xFFE
   890                           tosl	equ	0xFFD
   891                           stkptr	equ	0xFFC
   892                           pclatu	equ	0xFFB
   893                           pclath	equ	0xFFA
   894                           pcl	equ	0xFF9
   895                           tblptru	equ	0xFF8
   896                           tblptrh	equ	0xFF7
   897                           tblptrl	equ	0xFF6
   898                           tablat	equ	0xFF5
   899                           prodh	equ	0xFF4
   900                           prodl	equ	0xFF3
   901                           indf0	equ	0xFEF
   902                           postinc0	equ	0xFEE
   903                           postdec0	equ	0xFED
   904                           preinc0	equ	0xFEC
   905                           plusw0	equ	0xFEB
   906                           fsr0h	equ	0xFEA
   907                           fsr0l	equ	0xFE9
   908                           wreg	equ	0xFE8
   909                           indf1	equ	0xFE7
   910                           postinc1	equ	0xFE6
   911                           postdec1	equ	0xFE5
   912                           preinc1	equ	0xFE4
   913                           plusw1	equ	0xFE3
   914                           fsr1h	equ	0xFE2
   915                           fsr1l	equ	0xFE1
   916                           bsr	equ	0xFE0
   917                           indf2	equ	0xFDF
   918                           postinc2	equ	0xFDE
   919                           postdec2	equ	0xFDD
   920                           preinc2	equ	0xFDC
   921                           plusw2	equ	0xFDB
   922                           fsr2h	equ	0xFDA
   923                           fsr2l	equ	0xFD9
   924                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Write_Text->_UART_Write_Chr
    _UART_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     759
                                             29 COMRAM    10    10      0
                          _UART_Init
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2     136
                                              1 COMRAM     2     0      2
                     _UART_Write_Chr
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Chr                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16     8      8     504
                                             13 COMRAM    16     8      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___lldiv
   _UART_Write_Text
     _UART_Write_Chr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     27      27       1       41.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh          50      0       0      20        0.0%
BITBIGSFRllh         C      0       0      21        0.0%
BITBIGSFRlll        3E      0       0      22        0.0%
ABS                  0      0       0      23        0.0%
BIGRAM             7FF      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Apr 21 09:57:49 2023

                     l50 08F4                       l53 0A34                       l46 08AE  
                     l62 0A30                       l48 08B8                       l56 0A46  
                     l49 08C0                       l98 0988                       u10 0A42  
                     u11 0A3E                      l105 0998                      l830 0906  
                    l902 08DE                      l840 0948                      l832 091C  
                    l744 0A34                      l842 0966                      l834 0924  
                    l850 080E                      l746 0A42                      l844 0976  
                    l836 0930                      l828 08F6                      l860 088E  
                    l852 086C                      l846 0978                      l838 093E  
                    l862 08A4                      l854 0870                      l848 0982  
                    l872 08C4                      l864 08A6                      l856 0874  
                    l866 08A8                      l858 0878                      l882 09FC  
                    l890 099A                      l868 08B2                      l876 08CA  
                    l884 0A00                      l892 09BA                      l886 0A10  
                    l894 09D0                      l888 0A14                      l896 09DC  
                    u130 091C                      u210 0A30                      u131 0918  
                    u211 0A2C                      u140 093E                      u141 093A  
                    u205 08A4                      u221 09C4                      u150 0966  
                    u151 0962                      u170 088C                      u171 0886  
                    u165 0830                      u237 09E6                      u190 08A2  
                    u191 089C                      u185 088E                      _RX9 007D5E  
                    _TX9 007D66                      wreg 000FE8                     STR_1 0801  
                   _BRGH 007D62                     _SPEN 007D5F                     _TX9D 007D60  
                   _TXEN 007D65                     _SYNC 007D64                     _main 099A  
                   start 0000             ___param_bank 000000  __end_of_UART_Write_Text 0A32  
                  ?_main 0001          __end_of___lldiv 099A                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _SPBRG 000FAF                    _TXREG 000FAD  
                  _TXSTA 000FAC                    tablat 000FF5                    plusw0 000FEB  
                  plusw2 000FDB                    status 000FD8          __initialization 0A48  
           __end_of_main 09FC                   ??_main 001E            __activetblptr 000002  
      __end_of_UART_Init 08F6         ?_UART_Write_Text 0002                ??___lldiv 0009  
                 isa$std 000001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0A48            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  ___lldiv 08F6  
           __psmallconst 0800                  __pcinit 0A48                  __ramtop 0800  
                __ptext0 099A                  __ptext1 09FC                  __ptext2 0A32  
                __ptext3 080E                  __ptext4 08F6           main@uartConfig 0020  
   end_of_initialization 0A48            __Lmediumconst 0000          ___lldiv@divisor 0005  
        ___lldiv@counter 000D           _UART_Write_Chr 0A32                _UART_Init 080E  
              _TXSTAbits 000FAC     UART_Write_Chr@letter 0001   __end_of_UART_Write_Chr 0A48  
             ?_UART_Init 000E      start_initialization 0A48       UART_Init@spbrg_val 001A  
        ?_UART_Write_Chr 0001                 ?___lldiv 0001              ??_UART_Init 0016  
        UART_Init@config 000E              __smallconst 0800        ??_UART_Write_Text 0004  
               _PIR1bits 000F9E                 __Hrparam 0000                 __Lrparam 0000  
    UART_Write_Text@text 0002         ??_UART_Write_Chr 0001                 isa$xinst 000000  
       ___lldiv@dividend 0001          _UART_Write_Text 09FC         ___lldiv@quotient 0009  
