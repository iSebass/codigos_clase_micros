

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 02 11:17:34 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81  0000                     
    82                           ; Version 2.40
    83                           ; Generated 17/11/2021 GMT
    84                           ; 
    85                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4550 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataBANK1
   119  005AD4                     __pidataBANK1:
   120                           	callstack 0
   121                           
   122                           ;initializer for _ref
   123  005AD4  0000               	dw	0
   124  005AD6  42A0               	dw	17056
   125                           
   126                           ;initializer for _Ki
   127  005AD8  CCCD               	dw	52429
   128  005ADA  3DCC               	dw	15820
   129                           
   130                           ;initializer for _Kd
   131  005ADC  CCCD               	dw	52429
   132  005ADE  3ECC               	dw	16076
   133                           
   134                           ;initializer for _Kp
   135  005AE0  0000               	dw	0
   136  005AE2  3F00               	dw	16128
   137                           
   138                           ;initializer for _duty
   139  005AE4  0046               	dw	70
   140                           
   141                           ;initializer for _bufferRx
   142  005AE6  20                 	db	32
   143  005AE7  00                 	db	0
   144  005AE8  00                 	db	0
   145  005AE9  00                 	db	0
   146  005AEA  00                 	db	0
   147  005AEB  00                 	db	0
   148  005AEC  00                 	db	0
   149  005AED  00                 	db	0
   150  005AEE  00                 	db	0
   151  005AEF  00                 	db	0
   152  005AF0  00                 	db	0
   153  005AF1  00                 	db	0
   154  005AF2  00                 	db	0
   155  005AF3  00                 	db	0
   156  005AF4  00                 	db	0
   157  005AF5  00                 	db	0
   158  005AF6  00                 	db	0
   159  005AF7  00                 	db	0
   160  005AF8  00                 	db	0
   161  005AF9  00                 	db	0
   162  005AFA  00                 	db	0
   163  005AFB  00                 	db	0
   164  005AFC  00                 	db	0
   165  005AFD  00                 	db	0
   166  005AFE  00                 	db	0
   167  005AFF  00                 	db	0
   168  005B00  00                 	db	0
   169  005B01  00                 	db	0
   170  005B02  00                 	db	0
   171  005B03  00                 	db	0
   172  005B04  00                 	db	0
   173  005B05  00                 	db	0
   174  005B06  00                 	db	0
   175  005B07  00                 	db	0
   176  005B08  00                 	db	0
   177  005B09  00                 	db	0
   178  005B0A  00                 	db	0
   179  005B0B  00                 	db	0
   180  005B0C  00                 	db	0
   181  005B0D  00                 	db	0
   182  005B0E  00                 	db	0
   183  005B0F  00                 	db	0
   184  005B10  00                 	db	0
   185  005B11  00                 	db	0
   186  005B12  00                 	db	0
   187  005B13  00                 	db	0
   188  005B14  00                 	db	0
   189  005B15  00                 	db	0
   190  005B16  00                 	db	0
   191  005B17  00                 	db	0
   192                           
   193                           	psect	idataBANK2
   194  005CF6                     __pidataBANK2:
   195                           	callstack 0
   196                           
   197                           ;initializer for _strUART
   198  005CF6  20                 	db	32
   199  005CF7  00                 	db	0
   200  005CF8  00                 	db	0
   201  005CF9  00                 	db	0
   202  005CFA  00                 	db	0
   203  005CFB  00                 	db	0
   204  005CFC  00                 	db	0
   205  005CFD  00                 	db	0
   206  005CFE  00                 	db	0
   207  005CFF  00                 	db	0
   208  005D00  00                 	db	0
   209  005D01  00                 	db	0
   210  005D02  00                 	db	0
   211  005D03  00                 	db	0
   212  005D04  00                 	db	0
   213  005D05  00                 	db	0
   214  005D06  00                 	db	0
   215  005D07  00                 	db	0
   216  005D08  00                 	db	0
   217  005D09  00                 	db	0
   218  005D0A  00                 	db	0
   219  005D0B  00                 	db	0
   220  005D0C  00                 	db	0
   221  005D0D  00                 	db	0
   222  005D0E  00                 	db	0
   223  005D0F  00                 	db	0
   224  005D10  00                 	db	0
   225  005D11  00                 	db	0
   226  005D12  00                 	db	0
   227  005D13  00                 	db	0
   228  005D14  00                 	db	0
   229  005D15  00                 	db	0
   230  005D16  00                 	db	0
   231  005D17  00                 	db	0
   232  005D18  00                 	db	0
   233  005D19  00                 	db	0
   234  005D1A  00                 	db	0
   235  005D1B  00                 	db	0
   236  005D1C  00                 	db	0
   237  005D1D  00                 	db	0
   238  005D1E  00                 	db	0
   239  005D1F  00                 	db	0
   240  005D20  00                 	db	0
   241  005D21  00                 	db	0
   242  005D22  00                 	db	0
   243  005D23  00                 	db	0
   244  005D24  00                 	db	0
   245  005D25  00                 	db	0
   246  005D26  00                 	db	0
   247  005D27  00                 	db	0
   248  0000                     _RCREG	set	4014
   249  0000                     _TXREG	set	4013
   250  0000                     _TRISCbits	set	3988
   251  0000                     _TRISDbits	set	3989
   252  0000                     _TXSTAbits	set	4012
   253  0000                     _TX9D	set	32096
   254  0000                     _BRGH	set	32098
   255  0000                     _SPEN	set	32095
   256  0000                     _SYNC	set	32100
   257  0000                     _TXEN	set	32101
   258  0000                     _RX9	set	32094
   259  0000                     _TX9	set	32102
   260  0000                     _PORTBbits	set	3969
   261  0000                     _TRISBbits	set	3987
   262  0000                     _PIR1bits	set	3998
   263  0000                     _RCSTA	set	4011
   264  0000                     _TXSTA	set	4012
   265  0000                     _SPBRG	set	4015
   266  0000                     _ADCON1	set	4033
   267  0000                     _T2CONbits	set	4042
   268  0000                     _INTCONbits	set	4082
   269  0000                     _PIE1bits	set	3997
   270  0000                     _PORTDbits	set	3971
   271  0000                     _CCP2CONbits	set	4026
   272  0000                     _CCPR2L	set	4027
   273  0000                     _CCP1CONbits	set	4029
   274  0000                     _CCPR1L	set	4030
   275  0000                     _PR2	set	4043
   276                           
   277                           	psect	smallconst
   278  000800                     __psmallconst:
   279                           	callstack 0
   280  000800  00                 	db	0
   281  000801                     STR_3:
   282  000801  2A                 	db	42
   283  000802  25                 	db	37
   284  000803  30                 	db	48	;'0'
   285  000804  2E                 	db	46
   286  000805  31                 	db	49	;'1'
   287  000806  66                 	db	102	;'f'
   288  000807  2F                 	db	47
   289  000808  25                 	db	37
   290  000809  30                 	db	48	;'0'
   291  00080A  33                 	db	51	;'3'
   292  00080B  64                 	db	100	;'d'
   293  00080C  2F                 	db	47
   294  00080D  25                 	db	37
   295  00080E  30                 	db	48	;'0'
   296  00080F  2E                 	db	46
   297  000810  32                 	db	50	;'2'
   298  000811  66                 	db	102	;'f'
   299  000812  2F                 	db	47
   300  000813  25                 	db	37
   301  000814  30                 	db	48	;'0'
   302  000815  2E                 	db	46
   303  000816  32                 	db	50	;'2'
   304  000817  66                 	db	102	;'f'
   305  000818  2F                 	db	47
   306  000819  25                 	db	37
   307  00081A  30                 	db	48	;'0'
   308  00081B  2E                 	db	46
   309  00081C  32                 	db	50	;'2'
   310  00081D  66                 	db	102	;'f'
   311  00081E  23                 	db	35
   312  00081F  0D                 	db	13
   313  000820  0A                 	db	10
   314  000821  00                 	db	0
   315  000822                     STR_18:
   316  000822  49                 	db	73	;'I'
   317  000823  4E                 	db	78	;'N'
   318  000824  46                 	db	70	;'F'
   319  000825  49                 	db	73	;'I'
   320  000826  4E                 	db	78	;'N'
   321  000827  49                 	db	73	;'I'
   322  000828  54                 	db	84	;'T'
   323  000829  59                 	db	89	;'Y'
   324  00082A  00                 	db	0
   325  00082B                     STR_17:
   326  00082B  69                 	db	105	;'i'
   327  00082C  6E                 	db	110	;'n'
   328  00082D  66                 	db	102	;'f'
   329  00082E  69                 	db	105	;'i'
   330  00082F  6E                 	db	110	;'n'
   331  000830  69                 	db	105	;'i'
   332  000831  74                 	db	116	;'t'
   333  000832  79                 	db	121	;'y'
   334  000833  00                 	db	0
   335  000834                     STR_4:
   336  000834  49                 	db	73	;'I'
   337  000835  4E                 	db	78	;'N'
   338  000836  46                 	db	70	;'F'
   339  000837  00                 	db	0
   340  000838                     STR_8:
   341  000838  4E                 	db	78	;'N'
   342  000839  41                 	db	65	;'A'
   343  00083A  4E                 	db	78	;'N'
   344  00083B  00                 	db	0
   345  00083C                     STR_5:
   346  00083C  69                 	db	105	;'i'
   347  00083D  6E                 	db	110	;'n'
   348  00083E  66                 	db	102	;'f'
   349  00083F  00                 	db	0
   350  000840                     STR_9:
   351  000840  6E                 	db	110	;'n'
   352  000841  61                 	db	97	;'a'
   353  000842  6E                 	db	110	;'n'
   354  000843  00                 	db	0
   355  000844                     STR_12:
   356  000844  6C                 	db	108	;'l'
   357  000845  66                 	db	102	;'f'
   358  000846  00                 	db	0
   359  000847                     STR_1:
   360  000847  2F                 	db	47
   361  000848  00                 	db	0
   362  000849  00                 	db	0	; dummy byte at the end
   363  0000                     
   364                           ; #config settings
   365                           
   366                           	psect	cinit
   367  005772                     __pcinit:
   368                           	callstack 0
   369  005772                     start_initialization:
   370                           	callstack 0
   371  005772                     __initialization:
   372                           	callstack 0
   373                           
   374                           ; Initialize objects allocated to BANK2 (50 bytes)
   375                           ; load TBLPTR registers with __pidataBANK2
   376  005772  0EF6               	movlw	low __pidataBANK2
   377  005774  6EF6               	movwf	tblptrl,c
   378  005776  0E5C               	movlw	high __pidataBANK2
   379  005778  6EF7               	movwf	tblptrh,c
   380  00577A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   381  00577C  6EF8               	movwf	tblptru,c
   382  00577E  EE02  F000         	lfsr	0,__pdataBANK2
   383  005782  EE10 F032          	lfsr	1,50
   384  005786                     copy_data0:
   385  005786  0009               	tblrd		*+
   386  005788  CFF5 FFEE          	movff	tablat,postinc0
   387  00578C  50E5               	movf	postdec1,w,c
   388  00578E  50E1               	movf	fsr1l,w,c
   389  005790  E1FA               	bnz	copy_data0
   390                           
   391                           ; Initialize objects allocated to BANK1 (68 bytes)
   392                           ; load TBLPTR registers with __pidataBANK1
   393  005792  0ED4               	movlw	low __pidataBANK1
   394  005794  6EF6               	movwf	tblptrl,c
   395  005796  0E5A               	movlw	high __pidataBANK1
   396  005798  6EF7               	movwf	tblptrh,c
   397  00579A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   398  00579C  6EF8               	movwf	tblptru,c
   399  00579E  EE01  F08E         	lfsr	0,__pdataBANK1
   400  0057A2  EE10 F044          	lfsr	1,68
   401  0057A6                     copy_data1:
   402  0057A6  0009               	tblrd		*+
   403  0057A8  CFF5 FFEE          	movff	tablat,postinc0
   404  0057AC  50E5               	movf	postdec1,w,c
   405  0057AE  50E1               	movf	fsr1l,w,c
   406  0057B0  E1FA               	bnz	copy_data1
   407                           
   408                           ; Clear objects allocated to BANK1 (142 bytes)
   409  0057B2  EE01  F000         	lfsr	0,__pbssBANK1
   410  0057B6  0E8E               	movlw	142
   411  0057B8                     clear_0:
   412  0057B8  6AEE               	clrf	postinc0,c
   413  0057BA  06E8               	decf	wreg,f,c
   414  0057BC  E1FD               	bnz	clear_0
   415                           
   416                           ; Clear objects allocated to BANK0 (2 bytes)
   417  0057BE  0100               	movlb	0
   418  0057C0  6BF8               	clrf	(__pbssBANK0+1)& (0+255),b
   419  0057C2  6BF7               	clrf	__pbssBANK0& (0+255),b
   420                           
   421                           ; Clear objects allocated to COMRAM (3 bytes)
   422  0057C4  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   423  0057C6  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   424  0057C8  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   425  0057CA                     end_of_initialization:
   426                           	callstack 0
   427  0057CA                     __end_of__initialization:
   428                           	callstack 0
   429  0057CA  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   430  0057CC  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   431  0057CE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   432  0057D0  6EF8               	movwf	tblptru,c
   433  0057D2  0100               	movlb	0
   434  0057D4  EF32  F018         	goto	_main	;jump to C main() function
   435                           
   436                           	psect	bssCOMRAM
   437  00005A                     __pbssCOMRAM:
   438                           	callstack 0
   439  00005A                     _flags:
   440                           	callstack 0
   441  00005A                     	ds	2
   442  00005C                     _letra:
   443                           	callstack 0
   444  00005C                     	ds	1
   445                           
   446                           	psect	bssBANK0
   447  0000F7                     __pbssBANK0:
   448                           	callstack 0
   449  0000F7                     _prec:
   450                           	callstack 0
   451  0000F7                     	ds	2
   452                           
   453                           	psect	bssBANK1
   454  000100                     __pbssBANK1:
   455                           	callstack 0
   456  000100                     _array_constantes:
   457                           	callstack 0
   458  000100                     	ds	16
   459  000110                     floorf@F526:
   460                           	callstack 0
   461  000110                     	ds	4
   462  000114                     ___fpclassifyf@F465:
   463                           	callstack 0
   464  000114                     	ds	4
   465  000118                     _reg10bits:
   466                           	callstack 0
   467  000118                     	ds	4
   468  00011C                     _errorAnte:
   469                           	callstack 0
   470  00011C                     	ds	4
   471  000120                     _actual:
   472                           	callstack 0
   473  000120                     	ds	4
   474  000124                     _suma:
   475                           	callstack 0
   476  000124                     	ds	4
   477  000128                     _error:
   478                           	callstack 0
   479  000128                     	ds	4
   480  00012C                     _distancia:
   481                           	callstack 0
   482  00012C                     	ds	4
   483  000130                     strtok@p:
   484                           	callstack 0
   485  000130                     	ds	2
   486  000132                     _nout:
   487                           	callstack 0
   488  000132                     	ds	2
   489  000134                     _width:
   490                           	callstack 0
   491  000134                     	ds	2
   492  000136                     _indice_array:
   493                           	callstack 0
   494  000136                     	ds	2
   495  000138                     _flag_start_Rx:
   496                           	callstack 0
   497  000138                     	ds	2
   498  00013A                     _flag_Rx_completed:
   499                           	callstack 0
   500  00013A                     	ds	2
   501  00013C                     _indiceRx:
   502                           	callstack 0
   503  00013C                     	ds	2
   504  00013E                     _dbuf:
   505                           	callstack 0
   506  00013E                     	ds	80
   507                           
   508                           	psect	dataBANK1
   509  00018E                     __pdataBANK1:
   510                           	callstack 0
   511  00018E                     _ref:
   512                           	callstack 0
   513  00018E                     	ds	4
   514  000192                     _Ki:
   515                           	callstack 0
   516  000192                     	ds	4
   517  000196                     _Kd:
   518                           	callstack 0
   519  000196                     	ds	4
   520  00019A                     _Kp:
   521                           	callstack 0
   522  00019A                     	ds	4
   523  00019E                     _duty:
   524                           	callstack 0
   525  00019E                     	ds	2
   526  0001A0                     _bufferRx:
   527                           	callstack 0
   528  0001A0                     	ds	50
   529                           
   530                           	psect	dataBANK2
   531  000200                     __pdataBANK2:
   532                           	callstack 0
   533  000200                     _strUART:
   534                           	callstack 0
   535  000200                     	ds	50
   536                           
   537                           	psect	cstackBANK1
   538  0001D2                     __pcstackBANK1:
   539                           	callstack 0
   540  0001D2                     sprintf@ap:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x0
   544  0001D2                     	ds	2
   545  0001D4                     sprintf@f:
   546                           	callstack 0
   547                           
   548                           ; 11 bytes @ 0x2
   549  0001D4                     	ds	11
   550  0001DF                     _main$1894:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0xD
   554  0001DF                     	ds	4
   555  0001E3                     _main$1895:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x11
   559  0001E3                     	ds	4
   560  0001E7                     _main$1896:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x15
   564  0001E7                     	ds	4
   565  0001EB                     main@pch:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x19
   569  0001EB                     	ds	2
   570  0001ED                     main@uartConfig:
   571                           	callstack 0
   572                           
   573                           ; 8 bytes @ 0x1B
   574  0001ED                     	ds	8
   575                           
   576                           	psect	cstackBANK0
   577  000060                     __pcstackBANK0:
   578                           	callstack 0
   579  000060                     ___fldiv@rem:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x0
   583  000060                     	ds	4
   584  000064                     ___fldiv@sign:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x4
   588  000064                     	ds	1
   589  000065                     ___fldiv@new_exp:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x5
   593  000065                     	ds	2
   594  000067                     ___fldiv@grs:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x7
   598  000067                     	ds	4
   599  00006B                     ___fldiv@bexp:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0xB
   603  00006B                     	ds	1
   604  00006C                     ___fldiv@aexp:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0xC
   608  00006C                     	ds	1
   609  00006D                     ??_floorf:
   610  00006D                     ??_strtof:
   611  00006D                     ___fltol@sign1:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0xD
   615  00006D                     	ds	1
   616  00006E                     ___fltol@exp1:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0xE
   620  00006E                     	ds	1
   621  00006F                     PWM1_Set_Duty@duty:
   622                           	callstack 0
   623  00006F                     PWM1_Init@freq:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0xF
   627  00006F                     	ds	1
   628  000070                     PWM1_Set_Duty@val:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x10
   632  000070                     	ds	1
   633  000071                     ??_PWM1_Init:
   634                           
   635                           ; 1 bytes @ 0x11
   636  000071                     	ds	2
   637  000073                     strtof@digit:
   638                           	callstack 0
   639  000073                     floorf@m:
   640                           	callstack 0
   641  000073                     _PWM1_Init$1897:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0x13
   645  000073                     	ds	1
   646  000074                     strtof@flags:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x14
   650  000074                     	ds	1
   651  000075                     strtof@expon:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x15
   655  000075                     	ds	2
   656  000077                     PWM1_Init@prees:
   657                           	callstack 0
   658  000077                     floorf@e:
   659                           	callstack 0
   660  000077                     strtof@eexp:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x17
   664  000077                     	ds	2
   665  000079                     floorf@u:
   666                           	callstack 0
   667  000079                     strtof@_u:
   668                           	callstack 0
   669                           
   670                           ; 4 bytes @ 0x19
   671  000079                     	ds	4
   672  00007D                     ?_efgtoa:
   673                           	callstack 0
   674  00007D                     strtof@i:
   675                           	callstack 0
   676  00007D                     efgtoa@fp:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x1D
   680  00007D                     	ds	1
   681  00007E                     ?_atof:
   682                           	callstack 0
   683  00007E                     atof@s:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x1E
   687  00007E                     	ds	1
   688  00007F                     efgtoa@f:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x1F
   692  00007F                     	ds	4
   693  000083                     efgtoa@c:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x23
   697  000083                     	ds	1
   698  000084                     ??_efgtoa:
   699                           
   700                           ; 1 bytes @ 0x24
   701  000084                     	ds	5
   702  000089                     _efgtoa$1368:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x29
   706  000089                     	ds	2
   707  00008B                     _efgtoa$1375:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x2B
   711  00008B                     	ds	2
   712  00008D                     _efgtoa$1376:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x2D
   716  00008D                     	ds	2
   717  00008F                     efgtoa@t:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x2F
   721  00008F                     	ds	2
   722  000091                     efgtoa@pp:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x31
   726  000091                     	ds	2
   727  000093                     efgtoa@ne:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x33
   731  000093                     	ds	2
   732  000095                     efgtoa@m:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x35
   736  000095                     	ds	2
   737  000097                     efgtoa@ou:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x37
   741  000097                     	ds	4
   742  00009B                     efgtoa@d:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x3B
   746  00009B                     	ds	2
   747  00009D                     efgtoa@sign:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x3D
   751  00009D                     	ds	2
   752  00009F                     efgtoa@p:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x3F
   756  00009F                     	ds	2
   757  0000A1                     efgtoa@w:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x41
   761  0000A1                     	ds	2
   762  0000A3                     efgtoa@nmode:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x43
   766  0000A3                     	ds	1
   767  0000A4                     efgtoa@mode:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x44
   771  0000A4                     	ds	1
   772  0000A5                     efgtoa@h:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x45
   776  0000A5                     	ds	4
   777  0000A9                     efgtoa@l:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x49
   781  0000A9                     	ds	4
   782  0000AD                     efgtoa@i:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x4D
   786  0000AD                     	ds	2
   787  0000AF                     efgtoa@g:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x4F
   791  0000AF                     	ds	4
   792  0000B3                     efgtoa@e:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x53
   796  0000B3                     	ds	2
   797  0000B5                     efgtoa@n:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x55
   801  0000B5                     	ds	2
   802  0000B7                     efgtoa@u:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x57
   806  0000B7                     	ds	4
   807  0000BB                     ?_vfpfcnvrt:
   808                           	callstack 0
   809  0000BB                     vfpfcnvrt@fp:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x5B
   813  0000BB                     	ds	2
   814  0000BD                     vfpfcnvrt@fmt:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x5D
   818  0000BD                     	ds	2
   819  0000BF                     vfpfcnvrt@ap:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x5F
   823  0000BF                     	ds	2
   824  0000C1                     ??_vfpfcnvrt:
   825                           
   826                           ; 1 bytes @ 0x61
   827  0000C1                     	ds	4
   828  0000C5                     vfpfcnvrt@ll:
   829                           	callstack 0
   830                           
   831                           ; 8 bytes @ 0x65
   832  0000C5                     	ds	8
   833  0000CD                     vfpfcnvrt@done:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x6D
   837  0000CD                     	ds	2
   838  0000CF                     vfpfcnvrt@f:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x6F
   842  0000CF                     	ds	4
   843  0000D3                     vfpfcnvrt@ct:
   844                           	callstack 0
   845                           
   846                           ; 3 bytes @ 0x73
   847  0000D3                     	ds	3
   848  0000D6                     vfpfcnvrt@c:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x76
   852  0000D6                     	ds	1
   853  0000D7                     ?_vfprintf:
   854                           	callstack 0
   855  0000D7                     vfprintf@fp:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x77
   859  0000D7                     	ds	2
   860  0000D9                     vfprintf@fmt:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x79
   864  0000D9                     	ds	2
   865  0000DB                     vfprintf@ap:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x7B
   869  0000DB                     	ds	2
   870  0000DD                     vfprintf@cfmt:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x7D
   874  0000DD                     	ds	2
   875  0000DF                     ?_sprintf:
   876                           	callstack 0
   877  0000DF                     sprintf@s:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x7F
   881  0000DF                     	ds	2
   882  0000E1                     sprintf@fmt:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x81
   886  0000E1                     	ds	20
   887  0000F5                     ??_main:
   888                           
   889                           ; 1 bytes @ 0x95
   890  0000F5                     	ds	2
   891                           
   892                           	psect	cstackCOMRAM
   893  000001                     __pcstackCOMRAM:
   894                           	callstack 0
   895  000001                     ??_dataRx:
   896  000001                     
   897                           ; 1 bytes @ 0x0
   898  000001                     	ds	2
   899  000003                     ?_getDistance:
   900                           	callstack 0
   901  000003                     ?_strlen:
   902                           	callstack 0
   903  000003                     ?___fpclassifyf:
   904                           	callstack 0
   905  000003                     ?_isupper:
   906                           	callstack 0
   907  000003                     ?_isdigit:
   908                           	callstack 0
   909  000003                     ?_strncmp:
   910                           	callstack 0
   911  000003                     ?_isspace:
   912                           	callstack 0
   913  000003                     ?_strchr:
   914                           	callstack 0
   915  000003                     ?_islower:
   916                           	callstack 0
   917  000003                     ?___wmul:
   918                           	callstack 0
   919  000003                     ?___awdiv:
   920                           	callstack 0
   921  000003                     ?___awmod:
   922                           	callstack 0
   923  000003                     ?_nanf:
   924                           	callstack 0
   925  000003                     ?___lmul:
   926                           	callstack 0
   927  000003                     ?___lldiv:
   928                           	callstack 0
   929  000003                     ?___flneg:
   930                           	callstack 0
   931  000003                     ?___aodiv:
   932                           	callstack 0
   933  000003                     ?___aomod:
   934                           	callstack 0
   935  000003                     UART_Write_Chr@letter:
   936                           	callstack 0
   937  000003                     ___wmul@multiplier:
   938                           	callstack 0
   939  000003                     ___awdiv@dividend:
   940                           	callstack 0
   941  000003                     ___awmod@dividend:
   942                           	callstack 0
   943  000003                     memset@dest:
   944                           	callstack 0
   945  000003                     isdigit@c:
   946                           	callstack 0
   947  000003                     isspace@c:
   948                           	callstack 0
   949  000003                     isupper@c:
   950                           	callstack 0
   951  000003                     fputc@c:
   952                           	callstack 0
   953  000003                     strcpy@dest:
   954                           	callstack 0
   955  000003                     strlen@s:
   956                           	callstack 0
   957  000003                     strncmp@_l:
   958                           	callstack 0
   959  000003                     nanf@s:
   960                           	callstack 0
   961  000003                     strchr@s:
   962                           	callstack 0
   963  000003                     islower@c:
   964                           	callstack 0
   965  000003                     ___lmul@multiplier:
   966                           	callstack 0
   967  000003                     ___lldiv@dividend:
   968                           	callstack 0
   969  000003                     ___fleq@ff1:
   970                           	callstack 0
   971  000003                     ___flneg@f1:
   972                           	callstack 0
   973  000003                     ___fpclassifyf@x:
   974                           	callstack 0
   975  000003                     ___aodiv@dividend:
   976                           	callstack 0
   977  000003                     ___aomod@dividend:
   978                           	callstack 0
   979                           
   980                           ; 8 bytes @ 0x2
   981  000003                     	ds	1
   982  000004                     UART_Write_Text@text:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x3
   986  000004                     	ds	1
   987  000005                     ??_isupper:
   988  000005                     ??_isdigit:
   989  000005                     ??_isspace:
   990  000005                     ??_islower:
   991  000005                     getDistance@count:
   992                           	callstack 0
   993  000005                     ___wmul@multiplicand:
   994                           	callstack 0
   995  000005                     ___awdiv@divisor:
   996                           	callstack 0
   997  000005                     ___awmod@divisor:
   998                           	callstack 0
   999  000005                     memset@c:
  1000                           	callstack 0
  1001  000005                     fputc@fp:
  1002                           	callstack 0
  1003  000005                     strcpy@src:
  1004                           	callstack 0
  1005  000005                     strlen@a:
  1006                           	callstack 0
  1007  000005                     strncmp@_r:
  1008                           	callstack 0
  1009  000005                     strchr@c:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x4
  1013  000005                     	ds	1
  1014  000006                     
  1015                           ; 1 bytes @ 0x5
  1016  000006                     	ds	1
  1017  000007                     ??_fputc:
  1018  000007                     ??___fpclassifyf:
  1019  000007                     ??_strcpy:
  1020  000007                     ?_strspn:
  1021                           	callstack 0
  1022  000007                     ?_strcspn:
  1023                           	callstack 0
  1024  000007                     ?___xxtofl:
  1025                           	callstack 0
  1026  000007                     ___awdiv@counter:
  1027                           	callstack 0
  1028  000007                     ___awmod@counter:
  1029                           	callstack 0
  1030  000007                     ___wmul@product:
  1031                           	callstack 0
  1032  000007                     memset@n:
  1033                           	callstack 0
  1034  000007                     strncmp@n:
  1035                           	callstack 0
  1036  000007                     strcspn@s:
  1037                           	callstack 0
  1038  000007                     strspn@s:
  1039                           	callstack 0
  1040  000007                     ___lmul@multiplicand:
  1041                           	callstack 0
  1042  000007                     ___lldiv@divisor:
  1043                           	callstack 0
  1044  000007                     ___fleq@ff2:
  1045                           	callstack 0
  1046  000007                     ___xxtofl@val:
  1047                           	callstack 0
  1048  000007                     nanf@u:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x6
  1052  000007                     	ds	1
  1053  000008                     ___awdiv@sign:
  1054                           	callstack 0
  1055  000008                     ___awmod@sign:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x7
  1059  000008                     	ds	1
  1060  000009                     ??_memset:
  1061  000009                     ??_strncmp:
  1062  000009                     ?_tolower:
  1063                           	callstack 0
  1064  000009                     ?_isxdigit:
  1065                           	callstack 0
  1066  000009                     ?_toupper:
  1067                           	callstack 0
  1068  000009                     _isspace$1457:
  1069                           	callstack 0
  1070  000009                     ___awdiv@quotient:
  1071                           	callstack 0
  1072  000009                     strcpy@s:
  1073                           	callstack 0
  1074  000009                     isxdigit@c:
  1075                           	callstack 0
  1076  000009                     strcspn@c:
  1077                           	callstack 0
  1078  000009                     strspn@c:
  1079                           	callstack 0
  1080  000009                     tolower@c:
  1081                           	callstack 0
  1082  000009                     toupper@c:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x8
  1086  000009                     	ds	1
  1087  00000A                     ?_atoi:
  1088                           	callstack 0
  1089  00000A                     atoi@s:
  1090                           	callstack 0
  1091  00000A                     strncmp@l:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x9
  1095  00000A                     	ds	1
  1096  00000B                     ??_tolower:
  1097  00000B                     ??_isxdigit:
  1098  00000B                     ??_toupper:
  1099  00000B                     ??_strspn:
  1100  00000B                     ??_strcspn:
  1101  00000B                     ??___fleq:
  1102  00000B                     ??___xxtofl:
  1103  00000B                     memset@k:
  1104                           	callstack 0
  1105  00000B                     ___fpclassifyf@e:
  1106                           	callstack 0
  1107  00000B                     strcpy@d:
  1108                           	callstack 0
  1109  00000B                     ___lmul@product:
  1110                           	callstack 0
  1111  00000B                     ___lldiv@quotient:
  1112                           	callstack 0
  1113  00000B                     ___aodiv@divisor:
  1114                           	callstack 0
  1115  00000B                     ___aomod@divisor:
  1116                           	callstack 0
  1117                           
  1118                           ; 8 bytes @ 0xA
  1119  00000B                     	ds	1
  1120  00000C                     ??_atoi:
  1121  00000C                     fputs@s:
  1122                           	callstack 0
  1123  00000C                     strncmp@r:
  1124                           	callstack 0
  1125  00000C                     strcspn@i:
  1126                           	callstack 0
  1127  00000C                     strspn@i:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0xB
  1131  00000C                     	ds	1
  1132  00000D                     memset@s:
  1133                           	callstack 0
  1134  00000D                     ___fpclassifyf@u:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0xC
  1138  00000D                     	ds	1
  1139  00000E                     ?_strtok:
  1140                           	callstack 0
  1141  00000E                     fputs@fp:
  1142                           	callstack 0
  1143  00000E                     strtok@s:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0xD
  1147  00000E                     	ds	1
  1148  00000F                     ___lldiv@counter:
  1149                           	callstack 0
  1150  00000F                     ___xxtofl@sign:
  1151                           	callstack 0
  1152  00000F                     _isxdigit$1590:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0xE
  1156  00000F                     	ds	1
  1157  000010                     ___xxtofl@exp:
  1158                           	callstack 0
  1159  000010                     fputs@c:
  1160                           	callstack 0
  1161  000010                     atoi@neg:
  1162                           	callstack 0
  1163  000010                     strtok@sep:
  1164                           	callstack 0
  1165  000010                     UART_Init@config:
  1166                           	callstack 0
  1167                           
  1168                           ; 8 bytes @ 0xF
  1169  000010                     	ds	1
  1170  000011                     fputs@i:
  1171                           	callstack 0
  1172  000011                     ___xxtofl@arg:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x10
  1176  000011                     	ds	1
  1177  000012                     atoi@n:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x11
  1181  000012                     	ds	1
  1182  000013                     ?_pad:
  1183                           	callstack 0
  1184  000013                     ___aodiv@counter:
  1185                           	callstack 0
  1186  000013                     ___aomod@counter:
  1187                           	callstack 0
  1188  000013                     pad@fp:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x12
  1192  000013                     	ds	1
  1193  000014                     ___aodiv@sign:
  1194                           	callstack 0
  1195  000014                     ___aomod@sign:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0x13
  1199  000014                     	ds	1
  1200  000015                     ?_abs:
  1201                           	callstack 0
  1202  000015                     ?___fladd:
  1203                           	callstack 0
  1204  000015                     pad@buf:
  1205                           	callstack 0
  1206  000015                     abs@a:
  1207                           	callstack 0
  1208  000015                     ___fladd@b:
  1209                           	callstack 0
  1210  000015                     ___aodiv@quotient:
  1211                           	callstack 0
  1212                           
  1213                           ; 8 bytes @ 0x14
  1214  000015                     	ds	2
  1215  000017                     ??_abs:
  1216  000017                     pad@p:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x16
  1220  000017                     	ds	1
  1221  000018                     ??_UART_Init:
  1222                           
  1223                           ; 1 bytes @ 0x17
  1224  000018                     	ds	1
  1225  000019                     ??_pad:
  1226  000019                     ___fladd@a:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x18
  1230  000019                     	ds	1
  1231  00001A                     pad@i:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x19
  1235  00001A                     	ds	2
  1236  00001C                     pad@w:
  1237                           	callstack 0
  1238  00001C                     UART_Init@spbrg_val:
  1239                           	callstack 0
  1240                           
  1241                           ; 4 bytes @ 0x1B
  1242  00001C                     	ds	1
  1243  00001D                     ??___fladd:
  1244                           
  1245                           ; 1 bytes @ 0x1C
  1246  00001D                     	ds	1
  1247  00001E                     ?_dtoa:
  1248                           	callstack 0
  1249  00001E                     dtoa@fp:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x1D
  1253  00001E                     	ds	2
  1254  000020                     dtoa@d:
  1255                           	callstack 0
  1256                           
  1257                           ; 8 bytes @ 0x1F
  1258  000020                     	ds	1
  1259  000021                     ___fladd@signs:
  1260                           	callstack 0
  1261                           
  1262                           ; 1 bytes @ 0x20
  1263  000021                     	ds	1
  1264  000022                     ___fladd@aexp:
  1265                           	callstack 0
  1266                           
  1267                           ; 1 bytes @ 0x21
  1268  000022                     	ds	1
  1269  000023                     ___fladd@bexp:
  1270                           	callstack 0
  1271                           
  1272                           ; 1 bytes @ 0x22
  1273  000023                     	ds	1
  1274  000024                     ___fladd@grs:
  1275                           	callstack 0
  1276                           
  1277                           ; 1 bytes @ 0x23
  1278  000024                     	ds	1
  1279  000025                     ?___flsub:
  1280                           	callstack 0
  1281  000025                     ___flsub@b:
  1282                           	callstack 0
  1283                           
  1284                           ; 4 bytes @ 0x24
  1285  000025                     	ds	3
  1286  000028                     ??_dtoa:
  1287                           
  1288                           ; 1 bytes @ 0x27
  1289  000028                     	ds	1
  1290  000029                     ___flsub@a:
  1291                           	callstack 0
  1292                           
  1293                           ; 4 bytes @ 0x28
  1294  000029                     	ds	4
  1295  00002D                     ?___flmul:
  1296                           	callstack 0
  1297  00002D                     ___flmul@b:
  1298                           	callstack 0
  1299                           
  1300                           ; 4 bytes @ 0x2C
  1301  00002D                     	ds	3
  1302  000030                     _dtoa$1344:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x2F
  1306  000030                     	ds	1
  1307  000031                     ___flmul@a:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x30
  1311  000031                     	ds	1
  1312  000032                     dtoa@p:
  1313                           	callstack 0
  1314                           
  1315                           ; 2 bytes @ 0x31
  1316  000032                     	ds	2
  1317  000034                     dtoa@w:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x33
  1321  000034                     	ds	1
  1322  000035                     ??___flmul:
  1323                           
  1324                           ; 1 bytes @ 0x34
  1325  000035                     	ds	1
  1326  000036                     dtoa@s:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x35
  1330  000036                     	ds	2
  1331  000038                     dtoa@n:
  1332                           	callstack 0
  1333                           
  1334                           ; 8 bytes @ 0x37
  1335  000038                     	ds	1
  1336  000039                     ___flmul@sign:
  1337                           	callstack 0
  1338                           
  1339                           ; 1 bytes @ 0x38
  1340  000039                     	ds	1
  1341  00003A                     ___flmul@aexp:
  1342                           	callstack 0
  1343                           
  1344                           ; 1 bytes @ 0x39
  1345  00003A                     	ds	1
  1346  00003B                     ___flmul@grs:
  1347                           	callstack 0
  1348                           
  1349                           ; 4 bytes @ 0x3A
  1350  00003B                     	ds	4
  1351  00003F                     ___flmul@bexp:
  1352                           	callstack 0
  1353                           
  1354                           ; 1 bytes @ 0x3E
  1355  00003F                     	ds	1
  1356  000040                     dtoa@i:
  1357                           	callstack 0
  1358  000040                     ___flmul@prod:
  1359                           	callstack 0
  1360                           
  1361                           ; 4 bytes @ 0x3F
  1362  000040                     	ds	4
  1363  000044                     ___flmul@temp:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x43
  1367  000044                     	ds	2
  1368  000046                     ?___fldiv:
  1369                           	callstack 0
  1370  000046                     ___flge@ff1:
  1371                           	callstack 0
  1372  000046                     ___fldiv@b:
  1373                           	callstack 0
  1374                           
  1375                           ; 4 bytes @ 0x45
  1376  000046                     	ds	4
  1377  00004A                     ___flge@ff2:
  1378                           	callstack 0
  1379  00004A                     ___fldiv@a:
  1380                           	callstack 0
  1381                           
  1382                           ; 4 bytes @ 0x49
  1383  00004A                     	ds	4
  1384  00004E                     ??___fldiv:
  1385  00004E                     ??___flge:
  1386                           
  1387                           ; 1 bytes @ 0x4D
  1388  00004E                     	ds	4
  1389  000052                     ?_floorf:
  1390                           	callstack 0
  1391  000052                     ?___fltol:
  1392                           	callstack 0
  1393  000052                     ?_strtof:
  1394                           	callstack 0
  1395  000052                     strtof@s:
  1396                           	callstack 0
  1397  000052                     ___fltol@f1:
  1398                           	callstack 0
  1399  000052                     floorf@x:
  1400                           	callstack 0
  1401                           
  1402                           ; 4 bytes @ 0x51
  1403  000052                     	ds	2
  1404  000054                     strtof@res:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x53
  1408  000054                     	ds	2
  1409  000056                     ??___fltol:
  1410                           
  1411                           ; 1 bytes @ 0x55
  1412  000056                     	ds	4
  1413  00005A                     
  1414                           ; 1 bytes @ 0x59
  1415 ;;
  1416 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1417 ;;
  1418 ;; *************** function _main *****************
  1419 ;; Defined at:
  1420 ;;		line 63 in file "main.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  pch2            3    0        PTR unsigned char 
  1425 ;;  pch             2   25[BANK1 ] PTR unsigned char 
  1426 ;;		 -> NULL(0), bufferRx(50), 
  1427 ;;  uartConfig      8   27[BANK1 ] struct .
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1437 ;;      Params:         0       0       0       0       0       0       0       0       0
  1438 ;;      Locals:         0       0      22       0       0       0       0       0       0
  1439 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1440 ;;      Totals:         0       2      22       0       0       0       0       0       0
  1441 ;;Total ram usage:       24 bytes
  1442 ;; Hardware stack levels required when called: 10
  1443 ;; This function calls:
  1444 ;;		_Motor_Start
  1445 ;;		_PWM1_Init
  1446 ;;		_PWM1_Set_Duty
  1447 ;;		_PWM1_Start
  1448 ;;		_UART_Init
  1449 ;;		_UART_Write_Text
  1450 ;;		___fladd
  1451 ;;		___flge
  1452 ;;		___flmul
  1453 ;;		___flsub
  1454 ;;		___fltol
  1455 ;;		___xxtofl
  1456 ;;		_atof
  1457 ;;		_getDistance
  1458 ;;		_memset
  1459 ;;		_sprintf
  1460 ;;		_strtok
  1461 ;; This function is called by:
  1462 ;;		Startup code after reset
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text0
  1467  003064                     __ptext0:
  1468                           	callstack 0
  1469  003064                     _main:
  1470                           	callstack 21
  1471  003064                     
  1472                           ;main.c: 64:     ADCON1 = 0x0F;
  1473  003064  0E0F               	movlw	15
  1474  003066  6EC1               	movwf	193,c	;volatile
  1475  003068                     
  1476                           ;main.c: 66:     TRISBbits.TRISB0 = 0;
  1477  003068  9093               	bcf	147,0,c	;volatile
  1478  00306A                     
  1479                           ;main.c: 67:     TRISBbits.TRISB1 = 1;
  1480  00306A  8293               	bsf	147,1,c	;volatile
  1481  00306C                     
  1482                           ;main.c: 69:     TRISDbits.TRISD0 = 0;
  1483  00306C  9095               	bcf	149,0,c	;volatile
  1484  00306E                     
  1485                           ;main.c: 70:     TRISDbits.TRISD1 = 0;
  1486  00306E  9295               	bcf	149,1,c	;volatile
  1487  003070                     
  1488                           ;main.c: 74:     PWM1_Init(2000);
  1489  003070  0E07               	movlw	7
  1490  003072  0100               	movlb	0	; () banked
  1491  003074  6F70               	movwf	(PWM1_Init@freq+1)& (0+255),b
  1492  003076  0ED0               	movlw	208
  1493  003078  6F6F               	movwf	PWM1_Init@freq& (0+255),b
  1494  00307A  ECA5  F01F         	call	_PWM1_Init	;wreg free
  1495  00307E                     
  1496                           ;main.c: 75:     PWM1_Set_Duty( (uint8_t)(duty) );
  1497  00307E  0E46               	movlw	70
  1498  003080  EC82  F029         	call	_PWM1_Set_Duty
  1499  003084                     
  1500                           ;main.c: 76:     PWM1_Start();
  1501  003084  ECFA  F02E         	call	_PWM1_Start	;wreg free
  1502  003088                     
  1503                           ;main.c: 78:     UART_Config uartConfig;;main.c: 80:     uartConfig.baud_rate = 9600;
  1504  003088  0E80               	movlw	128
  1505  00308A  0101               	movlb	1	; () banked
  1506  00308C  6FED               	movwf	main@uartConfig& (0+255),b
  1507  00308E  0E25               	movlw	37
  1508  003090  6FEE               	movwf	(main@uartConfig+1)& (0+255),b
  1509  003092  0E00               	movlw	0
  1510  003094  6FEF               	movwf	(main@uartConfig+2)& (0+255),b
  1511  003096  0E00               	movlw	0
  1512  003098  6FF0               	movwf	(main@uartConfig+3)& (0+255),b
  1513  00309A                     
  1514                           ; BSR set to: 1
  1515                           ;main.c: 81:     uartConfig.data_bits = 8;
  1516  00309A  0E08               	movlw	8
  1517  00309C  6FF1               	movwf	(main@uartConfig+4)& (0+255),b
  1518  00309E                     
  1519                           ; BSR set to: 1
  1520                           ;main.c: 82:     uartConfig.parity = 0;
  1521  00309E  0E00               	movlw	0
  1522  0030A0  6FF2               	movwf	(main@uartConfig+5)& (0+255),b
  1523  0030A2                     
  1524                           ; BSR set to: 1
  1525                           ;main.c: 83:     uartConfig.stop_bits = 1;
  1526  0030A2  0E01               	movlw	1
  1527  0030A4  6FF3               	movwf	(main@uartConfig+6)& (0+255),b
  1528  0030A6                     
  1529                           ; BSR set to: 1
  1530                           ;main.c: 85:     UART_Init(uartConfig);
  1531  0030A6  EE21  F0ED         	lfsr	2,main@uartConfig
  1532  0030AA  EE00  F010         	lfsr	0,UART_Init@config
  1533  0030AE  0E07               	movlw	7
  1534  0030B0                     u11261:
  1535  0030B0  CFDB FFEB          	movff	plusw2,plusw0
  1536  0030B4  06E8               	decf	wreg,f,c
  1537  0030B6  E2FC               	bc	u11261
  1538  0030B8  EC08  F027         	call	_UART_Init	;wreg free
  1539  0030BC                     
  1540                           ;main.c: 87:     Motor_Start();
  1541  0030BC  ECF7  F02E         	call	_Motor_Start	;wreg free
  1542  0030C0                     
  1543                           ;main.c: 89:     INTCONbits.GIE = 1;
  1544  0030C0  8EF2               	bsf	242,7,c	;volatile
  1545  0030C2                     
  1546                           ;main.c: 90:     INTCONbits.PEIE = 1;
  1547  0030C2  8CF2               	bsf	242,6,c	;volatile
  1548  0030C4                     
  1549                           ;main.c: 91:     PIE1bits.RC1IE = 1;
  1550  0030C4  8A9D               	bsf	157,5,c	;volatile
  1551  0030C6                     l8313:
  1552                           
  1553                           ;main.c: 95:         if(flag_Rx_completed== 1){
  1554  0030C6  0101               	movlb	1	; () banked
  1555  0030C8  053A               	decf	_flag_Rx_completed& (0+255),w,b
  1556  0030CA  113B               	iorwf	(_flag_Rx_completed+1)& (0+255),w,b
  1557  0030CC  A4D8               	btfss	status,2,c
  1558  0030CE  EF6B  F018         	goto	u11271
  1559  0030D2  EF6D  F018         	goto	u11270
  1560  0030D6                     u11271:
  1561  0030D6  EFF4  F018         	goto	l8331
  1562  0030DA                     u11270:
  1563  0030DA                     
  1564                           ; BSR set to: 1
  1565                           ;main.c: 96:             char *pch;;main.c: 97:             char *pch2;;main.c: 98:     
      +                                  pch = strtok(bufferRx, "/");
  1566  0030DA  0EA0               	movlw	low _bufferRx
  1567  0030DC  6E0E               	movwf	strtok@s^0,c
  1568  0030DE  0E01               	movlw	high _bufferRx
  1569  0030E0  6E0F               	movwf	(strtok@s+1)^0,c
  1570  0030E2  0E47               	movlw	low STR_1
  1571  0030E4  6E10               	movwf	strtok@sep^0,c
  1572  0030E6  0E08               	movlw	high STR_1
  1573  0030E8  6E11               	movwf	(strtok@sep+1)^0,c
  1574  0030EA  EC7E  F027         	call	_strtok	;wreg free
  1575  0030EE  C00E  F1EB         	movff	?_strtok,main@pch
  1576  0030F2  C00F  F1EC         	movff	?_strtok+1,main@pch+1
  1577                           
  1578                           ;main.c: 99:             while (pch != ((void*)0)) {
  1579  0030F6  EFAF  F018         	goto	l8323
  1580  0030FA                     l8317:
  1581                           
  1582                           ; BSR set to: 1
  1583                           ;main.c: 100:                 array_constantes[indice_array]=atof(pch);
  1584  0030FA  C1EB  F07E         	movff	main@pch,atof@s
  1585  0030FE  C1EC  F07F         	movff	main@pch+1,atof@s+1
  1586  003102  ECAC  F02E         	call	_atof	;wreg free
  1587  003106  0E00               	movlw	low _array_constantes
  1588  003108  0100               	movlb	0	; () banked
  1589  00310A  6FF5               	movwf	??_main& (0+255),b
  1590  00310C  0E01               	movlw	high _array_constantes
  1591  00310E  6FF6               	movwf	(??_main+1)& (0+255),b
  1592  003110  90D8               	bcf	status,0,c
  1593  003112  0101               	movlb	1	; () banked
  1594  003114  3536               	rlcf	_indice_array& (0+255),w,b
  1595  003116  6ED9               	movwf	fsr2l,c
  1596  003118  3537               	rlcf	(_indice_array+1)& (0+255),w,b
  1597  00311A  6EDA               	movwf	fsr2h,c
  1598  00311C  90D8               	bcf	status,0,c
  1599  00311E  36D9               	rlcf	fsr2l,f,c
  1600  003120  36DA               	rlcf	fsr2h,f,c
  1601  003122  0100               	movlb	0	; () banked
  1602  003124  51F5               	movf	??_main& (0+255),w,b
  1603  003126  26D9               	addwf	fsr2l,f,c
  1604  003128  51F6               	movf	(??_main+1)& (0+255),w,b
  1605  00312A  22DA               	addwfc	fsr2h,f,c
  1606  00312C  C07E  FFDE         	movff	?_atof,postinc2
  1607  003130  C07F  FFDE         	movff	?_atof+1,postinc2
  1608  003134  C080  FFDE         	movff	?_atof+2,postinc2
  1609  003138  C081  FFDE         	movff	?_atof+3,postinc2
  1610  00313C                     
  1611                           ; BSR set to: 0
  1612                           ;main.c: 101:                 pch = strtok(((void*)0), "/");
  1613  00313C  0E00               	movlw	0
  1614  00313E  6E0E               	movwf	strtok@s^0,c
  1615  003140  0E00               	movlw	0
  1616  003142  6E0F               	movwf	(strtok@s+1)^0,c
  1617  003144  0E47               	movlw	low STR_1
  1618  003146  6E10               	movwf	strtok@sep^0,c
  1619  003148  0E08               	movlw	high STR_1
  1620  00314A  6E11               	movwf	(strtok@sep+1)^0,c
  1621  00314C  EC7E  F027         	call	_strtok	;wreg free
  1622  003150  C00E  F1EB         	movff	?_strtok,main@pch
  1623  003154  C00F  F1EC         	movff	?_strtok+1,main@pch+1
  1624  003158                     
  1625                           ;main.c: 102:                 indice_array++;
  1626  003158  0101               	movlb	1	; () banked
  1627  00315A  4B36               	infsnz	_indice_array& (0+255),f,b
  1628  00315C  2B37               	incf	(_indice_array+1)& (0+255),f,b
  1629  00315E                     l8323:
  1630                           
  1631                           ;main.c: 99:             while (pch != ((void*)0)) {
  1632  00315E  0101               	movlb	1	; () banked
  1633  003160  51EB               	movf	main@pch& (0+255),w,b
  1634  003162  11EC               	iorwf	(main@pch+1)& (0+255),w,b
  1635  003164  A4D8               	btfss	status,2,c
  1636  003166  EFB7  F018         	goto	u11281
  1637  00316A  EFB9  F018         	goto	u11280
  1638  00316E                     u11281:
  1639  00316E  EF7D  F018         	goto	l8317
  1640  003172                     u11280:
  1641  003172                     
  1642                           ; BSR set to: 1
  1643                           ;main.c: 104:             ref = array_constantes[0];
  1644  003172  C100  F18E         	movff	_array_constantes,_ref
  1645  003176  C101  F18F         	movff	_array_constantes+1,_ref+1
  1646  00317A  C102  F190         	movff	_array_constantes+2,_ref+2
  1647  00317E  C103  F191         	movff	_array_constantes+3,_ref+3
  1648                           
  1649                           ;main.c: 105:             Kp = array_constantes[1];
  1650  003182  C104  F19A         	movff	_array_constantes+4,_Kp
  1651  003186  C105  F19B         	movff	_array_constantes+5,_Kp+1
  1652  00318A  C106  F19C         	movff	_array_constantes+6,_Kp+2
  1653  00318E  C107  F19D         	movff	_array_constantes+7,_Kp+3
  1654                           
  1655                           ;main.c: 106:             Kd = array_constantes[2];
  1656  003192  C108  F196         	movff	_array_constantes+8,_Kd
  1657  003196  C109  F197         	movff	_array_constantes+9,_Kd+1
  1658  00319A  C10A  F198         	movff	_array_constantes+10,_Kd+2
  1659  00319E  C10B  F199         	movff	_array_constantes+11,_Kd+3
  1660                           
  1661                           ;main.c: 107:             Ki = array_constantes[3];
  1662  0031A2  C10C  F192         	movff	_array_constantes+12,_Ki
  1663  0031A6  C10D  F193         	movff	_array_constantes+13,_Ki+1
  1664  0031AA  C10E  F194         	movff	_array_constantes+14,_Ki+2
  1665  0031AE  C10F  F195         	movff	_array_constantes+15,_Ki+3
  1666  0031B2                     
  1667                           ; BSR set to: 1
  1668                           ;main.c: 108:             indice_array=0;
  1669  0031B2  0E00               	movlw	0
  1670  0031B4  6F37               	movwf	(_indice_array+1)& (0+255),b
  1671  0031B6  0E00               	movlw	0
  1672  0031B8  6F36               	movwf	_indice_array& (0+255),b
  1673                           
  1674                           ;main.c: 109:             indiceRx = 0;
  1675  0031BA  0E00               	movlw	0
  1676  0031BC  6F3D               	movwf	(_indiceRx+1)& (0+255),b
  1677  0031BE  0E00               	movlw	0
  1678  0031C0  6F3C               	movwf	_indiceRx& (0+255),b
  1679  0031C2                     
  1680                           ; BSR set to: 1
  1681                           ;main.c: 110:             memset(bufferRx,' ',49);
  1682  0031C2  0EA0               	movlw	low _bufferRx
  1683  0031C4  6E03               	movwf	memset@dest^0,c
  1684  0031C6  0E01               	movlw	high _bufferRx
  1685  0031C8  6E04               	movwf	(memset@dest+1)^0,c
  1686  0031CA  0E00               	movlw	0
  1687  0031CC  6E06               	movwf	(memset@c+1)^0,c
  1688  0031CE  0E20               	movlw	32
  1689  0031D0  6E05               	movwf	memset@c^0,c
  1690  0031D2  0E00               	movlw	0
  1691  0031D4  6E08               	movwf	(memset@n+1)^0,c
  1692  0031D6  0E31               	movlw	49
  1693  0031D8  6E07               	movwf	memset@n^0,c
  1694  0031DA  EC6B  F023         	call	_memset	;wreg free
  1695  0031DE                     
  1696                           ;main.c: 111:             flag_Rx_completed=0;
  1697  0031DE  0E00               	movlw	0
  1698  0031E0  0101               	movlb	1	; () banked
  1699  0031E2  6F3B               	movwf	(_flag_Rx_completed+1)& (0+255),b
  1700  0031E4  0E00               	movlw	0
  1701  0031E6  6F3A               	movwf	_flag_Rx_completed& (0+255),b
  1702  0031E8                     l8331:
  1703                           
  1704                           ; BSR set to: 1
  1705                           ;main.c: 115:         actual = 50 - getDistance();
  1706  0031E8  ECFF  F02C         	call	_getDistance	;wreg free
  1707  0031EC  0E32               	movlw	50
  1708  0031EE  0100               	movlb	0	; () banked
  1709  0031F0  6FF5               	movwf	??_main& (0+255),b
  1710  0031F2  0E00               	movlw	0
  1711  0031F4  6FF6               	movwf	(??_main+1)& (0+255),b
  1712  0031F6  5003               	movf	?_getDistance^0,w,c
  1713  0031F8  5FF5               	subwf	??_main& (0+255),f,b
  1714  0031FA  5004               	movf	(?_getDistance+1)^0,w,c
  1715  0031FC  5BF6               	subwfb	(??_main+1)& (0+255),f,b
  1716  0031FE  C0F5  F007         	movff	??_main,___xxtofl@val
  1717  003202  C0F6  F008         	movff	??_main+1,___xxtofl@val+1
  1718  003206  6A09               	clrf	(___xxtofl@val+2)^0,c
  1719  003208  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1720  00320A  0E00               	movlw	0
  1721  00320C  ECCD  F021         	call	___xxtofl
  1722  003210  C007  F120         	movff	?___xxtofl,_actual
  1723  003214  C008  F121         	movff	?___xxtofl+1,_actual+1
  1724  003218  C009  F122         	movff	?___xxtofl+2,_actual+2
  1725  00321C  C00A  F123         	movff	?___xxtofl+3,_actual+3
  1726  003220                     
  1727                           ;main.c: 116:         error = ref - actual;
  1728  003220  C18E  F025         	movff	_ref,___flsub@b
  1729  003224  C18F  F026         	movff	_ref+1,___flsub@b+1
  1730  003228  C190  F027         	movff	_ref+2,___flsub@b+2
  1731  00322C  C191  F028         	movff	_ref+3,___flsub@b+3
  1732  003230  C120  F029         	movff	_actual,___flsub@a
  1733  003234  C121  F02A         	movff	_actual+1,___flsub@a+1
  1734  003238  C122  F02B         	movff	_actual+2,___flsub@a+2
  1735  00323C  C123  F02C         	movff	_actual+3,___flsub@a+3
  1736  003240  EC47  F02D         	call	___flsub	;wreg free
  1737  003244  C025  F128         	movff	?___flsub,_error
  1738  003248  C026  F129         	movff	?___flsub+1,_error+1
  1739  00324C  C027  F12A         	movff	?___flsub+2,_error+2
  1740  003250  C028  F12B         	movff	?___flsub+3,_error+3
  1741  003254                     
  1742                           ;main.c: 117:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1743  003254  C196  F031         	movff	_Kd,___flmul@a
  1744  003258  C197  F032         	movff	_Kd+1,___flmul@a+1
  1745  00325C  C198  F033         	movff	_Kd+2,___flmul@a+2
  1746  003260  C199  F034         	movff	_Kd+3,___flmul@a+3
  1747  003264  C11C  F029         	movff	_errorAnte,___flsub@a
  1748  003268  C11D  F02A         	movff	_errorAnte+1,___flsub@a+1
  1749  00326C  C11E  F02B         	movff	_errorAnte+2,___flsub@a+2
  1750  003270  C11F  F02C         	movff	_errorAnte+3,___flsub@a+3
  1751  003274  C128  F025         	movff	_error,___flsub@b
  1752  003278  C129  F026         	movff	_error+1,___flsub@b+1
  1753  00327C  C12A  F027         	movff	_error+2,___flsub@b+2
  1754  003280  C12B  F028         	movff	_error+3,___flsub@b+3
  1755  003284  EC47  F02D         	call	___flsub	;wreg free
  1756  003288  C025  F02D         	movff	?___flsub,___flmul@b
  1757  00328C  C026  F02E         	movff	?___flsub+1,___flmul@b+1
  1758  003290  C027  F02F         	movff	?___flsub+2,___flmul@b+2
  1759  003294  C028  F030         	movff	?___flsub+3,___flmul@b+3
  1760  003298  EC52  F01A         	call	___flmul	;wreg free
  1761  00329C  C02D  F1DF         	movff	?___flmul,_main$1894
  1762  0032A0  C02E  F1E0         	movff	?___flmul+1,_main$1894+1
  1763  0032A4  C02F  F1E1         	movff	?___flmul+2,_main$1894+2
  1764  0032A8  C030  F1E2         	movff	?___flmul+3,_main$1894+3
  1765  0032AC                     
  1766                           ;main.c: 117:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1767  0032AC  C1DF  F019         	movff	_main$1894,___fladd@a
  1768  0032B0  C1E0  F01A         	movff	_main$1894+1,___fladd@a+1
  1769  0032B4  C1E1  F01B         	movff	_main$1894+2,___fladd@a+2
  1770  0032B8  C1E2  F01C         	movff	_main$1894+3,___fladd@a+3
  1771  0032BC  C128  F031         	movff	_error,___flmul@a
  1772  0032C0  C129  F032         	movff	_error+1,___flmul@a+1
  1773  0032C4  C12A  F033         	movff	_error+2,___flmul@a+2
  1774  0032C8  C12B  F034         	movff	_error+3,___flmul@a+3
  1775  0032CC  C19A  F02D         	movff	_Kp,___flmul@b
  1776  0032D0  C19B  F02E         	movff	_Kp+1,___flmul@b+1
  1777  0032D4  C19C  F02F         	movff	_Kp+2,___flmul@b+2
  1778  0032D8  C19D  F030         	movff	_Kp+3,___flmul@b+3
  1779  0032DC  EC52  F01A         	call	___flmul	;wreg free
  1780  0032E0  C02D  F015         	movff	?___flmul,___fladd@b
  1781  0032E4  C02E  F016         	movff	?___flmul+1,___fladd@b+1
  1782  0032E8  C02F  F017         	movff	?___flmul+2,___fladd@b+2
  1783  0032EC  C030  F018         	movff	?___flmul+3,___fladd@b+3
  1784  0032F0  ECD2  F015         	call	___fladd	;wreg free
  1785  0032F4  C015  F1E3         	movff	?___fladd,_main$1895
  1786  0032F8  C016  F1E4         	movff	?___fladd+1,_main$1895+1
  1787  0032FC  C017  F1E5         	movff	?___fladd+2,_main$1895+2
  1788  003300  C018  F1E6         	movff	?___fladd+3,_main$1895+3
  1789  003304                     
  1790                           ;main.c: 117:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1791  003304  C128  F031         	movff	_error,___flmul@a
  1792  003308  C129  F032         	movff	_error+1,___flmul@a+1
  1793  00330C  C12A  F033         	movff	_error+2,___flmul@a+2
  1794  003310  C12B  F034         	movff	_error+3,___flmul@a+3
  1795  003314  C192  F02D         	movff	_Ki,___flmul@b
  1796  003318  C193  F02E         	movff	_Ki+1,___flmul@b+1
  1797  00331C  C194  F02F         	movff	_Ki+2,___flmul@b+2
  1798  003320  C195  F030         	movff	_Ki+3,___flmul@b+3
  1799  003324  EC52  F01A         	call	___flmul	;wreg free
  1800  003328  C02D  F019         	movff	?___flmul,___fladd@a
  1801  00332C  C02E  F01A         	movff	?___flmul+1,___fladd@a+1
  1802  003330  C02F  F01B         	movff	?___flmul+2,___fladd@a+2
  1803  003334  C030  F01C         	movff	?___flmul+3,___fladd@a+3
  1804  003338  C1E3  F015         	movff	_main$1895,___fladd@b
  1805  00333C  C1E4  F016         	movff	_main$1895+1,___fladd@b+1
  1806  003340  C1E5  F017         	movff	_main$1895+2,___fladd@b+2
  1807  003344  C1E6  F018         	movff	_main$1895+3,___fladd@b+3
  1808  003348  ECD2  F015         	call	___fladd	;wreg free
  1809  00334C  C015  F1E7         	movff	?___fladd,_main$1896
  1810  003350  C016  F1E8         	movff	?___fladd+1,_main$1896+1
  1811  003354  C017  F1E9         	movff	?___fladd+2,_main$1896+2
  1812  003358  C018  F1EA         	movff	?___fladd+3,_main$1896+3
  1813  00335C                     
  1814                           ;main.c: 117:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1815  00335C  C124  F015         	movff	_suma,___fladd@b
  1816  003360  C125  F016         	movff	_suma+1,___fladd@b+1
  1817  003364  C126  F017         	movff	_suma+2,___fladd@b+2
  1818  003368  C127  F018         	movff	_suma+3,___fladd@b+3
  1819  00336C  C1E7  F019         	movff	_main$1896,___fladd@a
  1820  003370  C1E8  F01A         	movff	_main$1896+1,___fladd@a+1
  1821  003374  C1E9  F01B         	movff	_main$1896+2,___fladd@a+2
  1822  003378  C1EA  F01C         	movff	_main$1896+3,___fladd@a+3
  1823  00337C  ECD2  F015         	call	___fladd	;wreg free
  1824  003380  C015  F124         	movff	?___fladd,_suma
  1825  003384  C016  F125         	movff	?___fladd+1,_suma+1
  1826  003388  C017  F126         	movff	?___fladd+2,_suma+2
  1827  00338C  C018  F127         	movff	?___fladd+3,_suma+3
  1828  003390                     
  1829                           ;main.c: 118:         if(suma>100){
  1830  003390  0E00               	movlw	0
  1831  003392  6E46               	movwf	___flge@ff1^0,c
  1832  003394  0E00               	movlw	0
  1833  003396  6E47               	movwf	(___flge@ff1+1)^0,c
  1834  003398  0EC8               	movlw	200
  1835  00339A  6E48               	movwf	(___flge@ff1+2)^0,c
  1836  00339C  0E42               	movlw	66
  1837  00339E  6E49               	movwf	(___flge@ff1+3)^0,c
  1838  0033A0  C124  F04A         	movff	_suma,___flge@ff2
  1839  0033A4  C125  F04B         	movff	_suma+1,___flge@ff2+1
  1840  0033A8  C126  F04C         	movff	_suma+2,___flge@ff2+2
  1841  0033AC  C127  F04D         	movff	_suma+3,___flge@ff2+3
  1842  0033B0  EC07  F026         	call	___flge	;wreg free
  1843  0033B4  B0D8               	btfsc	status,0,c
  1844  0033B6  EFDF  F019         	goto	u11291
  1845  0033BA  EFE1  F019         	goto	u11290
  1846  0033BE                     u11291:
  1847  0033BE  EFEC  F019         	goto	l8347
  1848  0033C2                     u11290:
  1849  0033C2                     
  1850                           ;main.c: 119:             suma=100;
  1851  0033C2  0E00               	movlw	0
  1852  0033C4  0101               	movlb	1	; () banked
  1853  0033C6  6F24               	movwf	_suma& (0+255),b
  1854  0033C8  0E00               	movlw	0
  1855  0033CA  6F25               	movwf	(_suma+1)& (0+255),b
  1856  0033CC  0EC8               	movlw	200
  1857  0033CE  6F26               	movwf	(_suma+2)& (0+255),b
  1858  0033D0  0E42               	movlw	66
  1859  0033D2  6F27               	movwf	(_suma+3)& (0+255),b
  1860                           
  1861                           ;main.c: 120:         }
  1862  0033D4  EFFC  F019         	goto	l8351
  1863  0033D8                     l8347:
  1864  0033D8  0101               	movlb	1	; () banked
  1865  0033DA  BF27               	btfsc	(_suma+3)& (0+255),7,b
  1866  0033DC  EFF4  F019         	goto	u11300
  1867  0033E0  EFF2  F019         	goto	u11301
  1868  0033E4                     u11301:
  1869  0033E4  EFFC  F019         	goto	l8351
  1870  0033E8                     u11300:
  1871  0033E8                     
  1872                           ; BSR set to: 1
  1873                           ;main.c: 122:             suma = 0;
  1874  0033E8  0E00               	movlw	0
  1875  0033EA  6F24               	movwf	_suma& (0+255),b
  1876  0033EC  0E00               	movlw	0
  1877  0033EE  6F25               	movwf	(_suma+1)& (0+255),b
  1878  0033F0  0E00               	movlw	0
  1879  0033F2  6F26               	movwf	(_suma+2)& (0+255),b
  1880  0033F4  0E00               	movlw	0
  1881  0033F6  6F27               	movwf	(_suma+3)& (0+255),b
  1882  0033F8                     l8351:
  1883                           
  1884                           ; BSR set to: 1
  1885                           ;main.c: 124:         PWM1_Set_Duty( (uint8_t) (suma));
  1886  0033F8  C124  F052         	movff	_suma,___fltol@f1
  1887  0033FC  C125  F053         	movff	_suma+1,___fltol@f1+1
  1888  003400  C126  F054         	movff	_suma+2,___fltol@f1+2
  1889  003404  C127  F055         	movff	_suma+3,___fltol@f1+3
  1890  003408  EC83  F025         	call	___fltol	;wreg free
  1891  00340C  5052               	movf	?___fltol^0,w,c
  1892  00340E  EC82  F029         	call	_PWM1_Set_Duty
  1893  003412                     
  1894                           ;main.c: 126:         sprintf(strUART,"*%0.1f/%03d/%0.2f/%0.2f/%0.2f#\r\n",actual,duty,K
      +                          p,Kd,Ki);
  1895  003412  0E00               	movlw	low _strUART
  1896  003414  0100               	movlb	0	; () banked
  1897  003416  6FDF               	movwf	sprintf@s& (0+255),b
  1898  003418  0E02               	movlw	high _strUART
  1899  00341A  6FE0               	movwf	(sprintf@s+1)& (0+255),b
  1900  00341C  0E01               	movlw	low STR_3
  1901  00341E  6FE1               	movwf	sprintf@fmt& (0+255),b
  1902  003420  0E08               	movlw	high STR_3
  1903  003422  6FE2               	movwf	(sprintf@fmt+1)& (0+255),b
  1904  003424  C120  F0E3         	movff	_actual,?_sprintf+4
  1905  003428  C121  F0E4         	movff	_actual+1,?_sprintf+5
  1906  00342C  C122  F0E5         	movff	_actual+2,?_sprintf+6
  1907  003430  C123  F0E6         	movff	_actual+3,?_sprintf+7
  1908  003434  0E00               	movlw	0
  1909  003436  6FE8               	movwf	(?_sprintf+9)& (0+255),b
  1910  003438  0E46               	movlw	70
  1911  00343A  6FE7               	movwf	(?_sprintf+8)& (0+255),b
  1912  00343C  C19A  F0E9         	movff	_Kp,?_sprintf+10
  1913  003440  C19B  F0EA         	movff	_Kp+1,?_sprintf+11
  1914  003444  C19C  F0EB         	movff	_Kp+2,?_sprintf+12
  1915  003448  C19D  F0EC         	movff	_Kp+3,?_sprintf+13
  1916  00344C  C196  F0ED         	movff	_Kd,?_sprintf+14
  1917  003450  C197  F0EE         	movff	_Kd+1,?_sprintf+15
  1918  003454  C198  F0EF         	movff	_Kd+2,?_sprintf+16
  1919  003458  C199  F0F0         	movff	_Kd+3,?_sprintf+17
  1920  00345C  C192  F0F1         	movff	_Ki,?_sprintf+18
  1921  003460  C193  F0F2         	movff	_Ki+1,?_sprintf+19
  1922  003464  C194  F0F3         	movff	_Ki+2,?_sprintf+20
  1923  003468  C195  F0F4         	movff	_Ki+3,?_sprintf+21
  1924  00346C  EC80  F02C         	call	_sprintf	;wreg free
  1925  003470                     
  1926                           ;main.c: 127:         UART_Write_Text(strUART);
  1927  003470  0E00               	movlw	low _strUART
  1928  003472  6E04               	movwf	UART_Write_Text@text^0,c
  1929  003474  0E02               	movlw	high _strUART
  1930  003476  6E05               	movwf	(UART_Write_Text@text+1)^0,c
  1931  003478  EC94  F02E         	call	_UART_Write_Text	;wreg free
  1932  00347C                     
  1933                           ;main.c: 128:         _delay((unsigned long)((1)*(20000000UL/4000.0)));
  1934  00347C  0E07               	movlw	7
  1935  00347E  0100               	movlb	0	; () banked
  1936  003480  6FF5               	movwf	??_main& (0+255),b
  1937  003482  0E7D               	movlw	125
  1938  003484                     u11317:
  1939  003484  2EE8               	decfsz	wreg,f,c
  1940  003486  D7FE               	bra	u11317
  1941  003488  2FF5               	decfsz	??_main& (0+255),f,b
  1942  00348A  D7FC               	bra	u11317
  1943  00348C                     
  1944                           ;main.c: 129:         errorAnte = error;
  1945  00348C  C128  F11C         	movff	_error,_errorAnte
  1946  003490  C129  F11D         	movff	_error+1,_errorAnte+1
  1947  003494  C12A  F11E         	movff	_error+2,_errorAnte+2
  1948  003498  C12B  F11F         	movff	_error+3,_errorAnte+3
  1949  00349C  EF63  F018         	goto	l8313
  1950  0034A0  EF07  F000         	goto	start
  1951  0034A4                     __end_of_main:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _strtok *****************
  1955 ;; Defined at:
  1956 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strtok.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  s               2   13[COMRAM] PTR unsigned char 
  1959 ;;		 -> NULL(0), bufferRx(50), 
  1960 ;;  sep             2   15[COMRAM] PTR const unsigned char 
  1961 ;;		 -> STR_2(2), STR_1(2), 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  2   13[COMRAM] PTR unsigned char 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1973 ;;      Params:         4       0       0       0       0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1976 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1977 ;;Total ram usage:        4 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 4
  1980 ;; This function calls:
  1981 ;;		_strcspn
  1982 ;;		_strspn
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text1
  1989  004EFC                     __ptext1:
  1990                           	callstack 0
  1991  004EFC                     _strtok:
  1992                           	callstack 26
  1993  004EFC  500E               	movf	strtok@s^0,w,c
  1994  004EFE  100F               	iorwf	(strtok@s+1)^0,w,c
  1995  004F00  A4D8               	btfss	status,2,c
  1996  004F02  EF85  F027         	goto	u7651
  1997  004F06  EF87  F027         	goto	u7650
  1998  004F0A                     u7651:
  1999  004F0A  EF9A  F027         	goto	l6029
  2000  004F0E                     u7650:
  2001  004F0E  C130  F00E         	movff	strtok@p,strtok@s
  2002  004F12  C131  F00F         	movff	strtok@p+1,strtok@s+1
  2003  004F16  500E               	movf	strtok@s^0,w,c
  2004  004F18  100F               	iorwf	(strtok@s+1)^0,w,c
  2005  004F1A  A4D8               	btfss	status,2,c
  2006  004F1C  EF92  F027         	goto	u7661
  2007  004F20  EF94  F027         	goto	u7660
  2008  004F24                     u7661:
  2009  004F24  EF9A  F027         	goto	l6029
  2010  004F28                     u7660:
  2011  004F28  0E00               	movlw	0
  2012  004F2A  6E0E               	movwf	?_strtok^0,c
  2013  004F2C  0E00               	movlw	0
  2014  004F2E  6E0F               	movwf	(?_strtok+1)^0,c
  2015  004F30  EFEE  F027         	goto	l1440
  2016  004F34                     l6029:
  2017  004F34  C00E  F007         	movff	strtok@s,strspn@s
  2018  004F38  C00F  F008         	movff	strtok@s+1,strspn@s+1
  2019  004F3C  C010  F009         	movff	strtok@sep,strspn@c
  2020  004F40  C011  F00A         	movff	strtok@sep+1,strspn@c+1
  2021  004F44  ECEC  F02B         	call	_strspn	;wreg free
  2022  004F48  5007               	movf	?_strspn^0,w,c
  2023  004F4A  260E               	addwf	strtok@s^0,f,c
  2024  004F4C  5008               	movf	(?_strspn+1)^0,w,c
  2025  004F4E  220F               	addwfc	(strtok@s+1)^0,f,c
  2026  004F50  C00E  FFD9         	movff	strtok@s,fsr2l
  2027  004F54  C00F  FFDA         	movff	strtok@s+1,fsr2h
  2028  004F58  50DF               	movf	indf2,w,c
  2029  004F5A  A4D8               	btfss	status,2,c
  2030  004F5C  EFB2  F027         	goto	u7671
  2031  004F60  EFB4  F027         	goto	u7670
  2032  004F64                     u7671:
  2033  004F64  EFBF  F027         	goto	l6037
  2034  004F68                     u7670:
  2035  004F68  0E00               	movlw	0
  2036  004F6A  0101               	movlb	1	; () banked
  2037  004F6C  6F30               	movwf	strtok@p& (0+255),b
  2038  004F6E  0E00               	movlw	0
  2039  004F70  6F31               	movwf	(strtok@p+1)& (0+255),b
  2040  004F72  C130  F00E         	movff	strtok@p,?_strtok
  2041  004F76  C131  F00F         	movff	strtok@p+1,?_strtok+1
  2042  004F7A  EFEE  F027         	goto	l1440
  2043  004F7E                     l6037:
  2044  004F7E  C00E  F007         	movff	strtok@s,strcspn@s
  2045  004F82  C00F  F008         	movff	strtok@s+1,strcspn@s+1
  2046  004F86  C010  F009         	movff	strtok@sep,strcspn@c
  2047  004F8A  C011  F00A         	movff	strtok@sep+1,strcspn@c+1
  2048  004F8E  EC1F  F02C         	call	_strcspn	;wreg free
  2049  004F92  5007               	movf	?_strcspn^0,w,c
  2050  004F94  240E               	addwf	strtok@s^0,w,c
  2051  004F96  0101               	movlb	1	; () banked
  2052  004F98  6F30               	movwf	strtok@p& (0+255),b
  2053  004F9A  5008               	movf	(?_strcspn+1)^0,w,c
  2054  004F9C  200F               	addwfc	(strtok@s+1)^0,w,c
  2055  004F9E  6F31               	movwf	(strtok@p+1)& (0+255),b
  2056  004FA0                     
  2057                           ; BSR set to: 1
  2058  004FA0  C130  FFD9         	movff	strtok@p,fsr2l
  2059  004FA4  C131  FFDA         	movff	strtok@p+1,fsr2h
  2060  004FA8  50DF               	movf	indf2,w,c
  2061  004FAA  B4D8               	btfsc	status,2,c
  2062  004FAC  EFDA  F027         	goto	u7681
  2063  004FB0  EFDC  F027         	goto	u7680
  2064  004FB4                     u7681:
  2065  004FB4  EFE6  F027         	goto	l6045
  2066  004FB8                     u7680:
  2067  004FB8                     
  2068                           ; BSR set to: 1
  2069  004FB8  C130  FFD9         	movff	strtok@p,fsr2l
  2070  004FBC  C131  FFDA         	movff	strtok@p+1,fsr2h
  2071  004FC0  0E00               	movlw	0
  2072  004FC2  6EDF               	movwf	indf2,c
  2073  004FC4                     
  2074                           ; BSR set to: 1
  2075  004FC4  4B30               	infsnz	strtok@p& (0+255),f,b
  2076  004FC6  2B31               	incf	(strtok@p+1)& (0+255),f,b
  2077  004FC8  EFEA  F027         	goto	l1443
  2078  004FCC                     l6045:
  2079                           
  2080                           ; BSR set to: 1
  2081  004FCC  0E00               	movlw	0
  2082  004FCE  6F30               	movwf	strtok@p& (0+255),b
  2083  004FD0  0E00               	movlw	0
  2084  004FD2  6F31               	movwf	(strtok@p+1)& (0+255),b
  2085  004FD4                     l1443:
  2086                           
  2087                           ; BSR set to: 1
  2088  004FD4  C00E  F00E         	movff	strtok@s,?_strtok
  2089  004FD8  C00F  F00F         	movff	strtok@s+1,?_strtok+1
  2090  004FDC                     l1440:
  2091  004FDC  0012               	return		;funcret
  2092  004FDE                     __end_of_strtok:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _strspn *****************
  2096 ;; Defined at:
  2097 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strspn.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  s               2    6[COMRAM] PTR const unsigned char 
  2100 ;;		 -> NULL(0), bufferRx(50), 
  2101 ;;  c               2    8[COMRAM] PTR const unsigned char 
  2102 ;;		 -> STR_2(2), STR_1(2), 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  i               2   11[COMRAM] unsigned int 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  2    6[COMRAM] unsigned int 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2114 ;;      Params:         4       0       0       0       0       0       0       0       0
  2115 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2116 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2117 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2118 ;;Total ram usage:        7 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 3
  2121 ;; This function calls:
  2122 ;;		_strchr
  2123 ;; This function is called by:
  2124 ;;		_strtok
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text2
  2129  0057D8                     __ptext2:
  2130                           	callstack 0
  2131  0057D8                     _strspn:
  2132                           	callstack 26
  2133  0057D8  0E00               	movlw	0
  2134  0057DA  6E0D               	movwf	(strspn@i+1)^0,c
  2135  0057DC  0E00               	movlw	0
  2136  0057DE  6E0C               	movwf	strspn@i^0,c
  2137  0057E0  EFF6  F02B         	goto	l5929
  2138  0057E4                     l5927:
  2139  0057E4  4A07               	infsnz	strspn@s^0,f,c
  2140  0057E6  2A08               	incf	(strspn@s+1)^0,f,c
  2141  0057E8  4A0C               	infsnz	strspn@i^0,f,c
  2142  0057EA  2A0D               	incf	(strspn@i+1)^0,f,c
  2143  0057EC                     l5929:
  2144  0057EC  C007  FFD9         	movff	strspn@s,fsr2l
  2145  0057F0  C008  FFDA         	movff	strspn@s+1,fsr2h
  2146  0057F4  50DF               	movf	indf2,w,c
  2147  0057F6  B4D8               	btfsc	status,2,c
  2148  0057F8  EF00  F02C         	goto	u7551
  2149  0057FC  EF02  F02C         	goto	u7550
  2150  005800                     u7551:
  2151  005800  EF1A  F02C         	goto	l1468
  2152  005804                     u7550:
  2153  005804  C009  F003         	movff	strspn@c,strchr@s
  2154  005808  C00A  F004         	movff	strspn@c+1,strchr@s+1
  2155  00580C  C007  FFD9         	movff	strspn@s,fsr2l
  2156  005810  C008  FFDA         	movff	strspn@s+1,fsr2h
  2157  005814  50DF               	movf	indf2,w,c
  2158  005816  6E0B               	movwf	??_strspn^0,c
  2159  005818  500B               	movf	??_strspn^0,w,c
  2160  00581A  6E05               	movwf	strchr@c^0,c
  2161  00581C  6A06               	clrf	(strchr@c+1)^0,c
  2162  00581E  ECAD  F02C         	call	_strchr	;wreg free
  2163  005822  5003               	movf	?_strchr^0,w,c
  2164  005824  1004               	iorwf	(?_strchr+1)^0,w,c
  2165  005826  A4D8               	btfss	status,2,c
  2166  005828  EF18  F02C         	goto	u7561
  2167  00582C  EF1A  F02C         	goto	u7560
  2168  005830                     u7561:
  2169  005830  EFF2  F02B         	goto	l5927
  2170  005834                     u7560:
  2171  005834                     l1468:
  2172  005834  C00C  F007         	movff	strspn@i,?_strspn
  2173  005838  C00D  F008         	movff	strspn@i+1,?_strspn+1
  2174  00583C  0012               	return		;funcret
  2175  00583E                     __end_of_strspn:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _strcspn *****************
  2179 ;; Defined at:
  2180 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcspn.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  s               2    6[COMRAM] PTR const unsigned char 
  2183 ;;		 -> NULL(0), bufferRx(50), 
  2184 ;;  c               2    8[COMRAM] PTR const unsigned char 
  2185 ;;		 -> STR_2(2), STR_1(2), 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  i               2   11[COMRAM] unsigned int 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  2    6[COMRAM] unsigned int 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2197 ;;      Params:         4       0       0       0       0       0       0       0       0
  2198 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2199 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2200 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2201 ;;Total ram usage:        7 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; Hardware stack levels required when called: 3
  2204 ;; This function calls:
  2205 ;;		_strchr
  2206 ;; This function is called by:
  2207 ;;		_strtok
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text3
  2212  00583E                     __ptext3:
  2213                           	callstack 0
  2214  00583E                     _strcspn:
  2215                           	callstack 26
  2216  00583E  0E00               	movlw	0
  2217  005840  6E0D               	movwf	(strcspn@i+1)^0,c
  2218  005842  0E00               	movlw	0
  2219  005844  6E0C               	movwf	strcspn@i^0,c
  2220  005846  EF29  F02C         	goto	l5937
  2221  00584A                     l5935:
  2222  00584A  4A07               	infsnz	strcspn@s^0,f,c
  2223  00584C  2A08               	incf	(strcspn@s+1)^0,f,c
  2224  00584E  4A0C               	infsnz	strcspn@i^0,f,c
  2225  005850  2A0D               	incf	(strcspn@i+1)^0,f,c
  2226  005852                     l5937:
  2227  005852  C007  FFD9         	movff	strcspn@s,fsr2l
  2228  005856  C008  FFDA         	movff	strcspn@s+1,fsr2h
  2229  00585A  50DF               	movf	indf2,w,c
  2230  00585C  B4D8               	btfsc	status,2,c
  2231  00585E  EF33  F02C         	goto	u7571
  2232  005862  EF35  F02C         	goto	u7570
  2233  005866                     u7571:
  2234  005866  EF4D  F02C         	goto	l1452
  2235  00586A                     u7570:
  2236  00586A  C009  F003         	movff	strcspn@c,strchr@s
  2237  00586E  C00A  F004         	movff	strcspn@c+1,strchr@s+1
  2238  005872  C007  FFD9         	movff	strcspn@s,fsr2l
  2239  005876  C008  FFDA         	movff	strcspn@s+1,fsr2h
  2240  00587A  50DF               	movf	indf2,w,c
  2241  00587C  6E0B               	movwf	??_strcspn^0,c
  2242  00587E  500B               	movf	??_strcspn^0,w,c
  2243  005880  6E05               	movwf	strchr@c^0,c
  2244  005882  6A06               	clrf	(strchr@c+1)^0,c
  2245  005884  ECAD  F02C         	call	_strchr	;wreg free
  2246  005888  5003               	movf	?_strchr^0,w,c
  2247  00588A  1004               	iorwf	(?_strchr+1)^0,w,c
  2248  00588C  B4D8               	btfsc	status,2,c
  2249  00588E  EF4B  F02C         	goto	u7581
  2250  005892  EF4D  F02C         	goto	u7580
  2251  005896                     u7581:
  2252  005896  EF25  F02C         	goto	l5935
  2253  00589A                     u7580:
  2254  00589A                     l1452:
  2255  00589A  C00C  F007         	movff	strcspn@i,?_strcspn
  2256  00589E  C00D  F008         	movff	strcspn@i+1,?_strcspn+1
  2257  0058A2  0012               	return		;funcret
  2258  0058A4                     __end_of_strcspn:
  2259                           	callstack 0
  2260                           
  2261 ;; *************** function _strchr *****************
  2262 ;; Defined at:
  2263 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strchr.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  s               2    2[COMRAM] PTR const unsigned char 
  2266 ;;		 -> STR_2(2), STR_1(2), 
  2267 ;;  c               2    4[COMRAM] int 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  2    2[COMRAM] PTR unsigned char 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2279 ;;      Params:         4       0       0       0       0       0       0       0       0
  2280 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2282 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2283 ;;Total ram usage:        4 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 2
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_strcspn
  2290 ;;		_strspn
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text4
  2295  00595A                     __ptext4:
  2296                           	callstack 0
  2297  00595A                     _strchr:
  2298                           	callstack 26
  2299  00595A                     l1456:
  2300  00595A  C003  FFF6         	movff	strchr@s,tblptrl
  2301  00595E  C004  FFF7         	movff	strchr@s+1,tblptrh
  2302  005962                     	if	0	;tblptru may be non-zero
  2303  005962                     	endif
  2304  005962                     	if	0	;tblptru may be non-zero
  2305  005962                     	endif
  2306  005962  0008               	tblrd		*
  2307  005964  50F5               	movf	tablat,w,c
  2308  005966  1805               	xorwf	strchr@c^0,w,c
  2309  005968  A4D8               	btfss	status,2,c
  2310  00596A  EFB9  F02C         	goto	u6581
  2311  00596E  EFBB  F02C         	goto	u6580
  2312  005972                     u6581:
  2313  005972  EFC1  F02C         	goto	l5479
  2314  005976                     u6580:
  2315  005976  C003  F003         	movff	strchr@s,?_strchr
  2316  00597A  C004  F004         	movff	strchr@s+1,?_strchr+1
  2317  00597E  EFD5  F02C         	goto	l1458
  2318  005982                     l5479:
  2319  005982  C003  FFF6         	movff	strchr@s,tblptrl
  2320  005986  C004  FFF7         	movff	strchr@s+1,tblptrh
  2321  00598A  4A03               	infsnz	strchr@s^0,f,c
  2322  00598C  2A04               	incf	(strchr@s+1)^0,f,c
  2323  00598E                     	if	0	;tblptru may be non-zero
  2324  00598E                     	endif
  2325  00598E                     	if	0	;tblptru may be non-zero
  2326  00598E                     	endif
  2327  00598E  0008               	tblrd		*
  2328  005990  50F5               	movf	tablat,w,c
  2329  005992  0900               	iorlw	0
  2330  005994  A4D8               	btfss	status,2,c
  2331  005996  EFCF  F02C         	goto	u6591
  2332  00599A  EFD1  F02C         	goto	u6590
  2333  00599E                     u6591:
  2334  00599E  EFAD  F02C         	goto	l1456
  2335  0059A2                     u6590:
  2336  0059A2  0E00               	movlw	0
  2337  0059A4  6E03               	movwf	?_strchr^0,c
  2338  0059A6  0E00               	movlw	0
  2339  0059A8  6E04               	movwf	(?_strchr+1)^0,c
  2340  0059AA                     l1458:
  2341  0059AA  0012               	return		;funcret
  2342  0059AC                     __end_of_strchr:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _sprintf *****************
  2346 ;; Defined at:
  2347 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  s               2  127[BANK0 ] PTR unsigned char 
  2350 ;;		 -> strUART(50), 
  2351 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  2352 ;;		 -> STR_3(33), 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  f              11    2[BANK1 ] struct _IO_FILE
  2355 ;;  ap              2    0[BANK1 ] PTR void [1]
  2356 ;;		 -> ?_sprintf(2), 
  2357 ;;  ret             2    0        int 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  2  127[BANK0 ] int 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2367 ;;      Params:         0      22       0       0       0       0       0       0       0
  2368 ;;      Locals:         0       0      13       0       0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2370 ;;      Totals:         0      22      13       0       0       0       0       0       0
  2371 ;;Total ram usage:       35 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 9
  2374 ;; This function calls:
  2375 ;;		_vfprintf
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text5
  2382  005900                     __ptext5:
  2383                           	callstack 0
  2384  005900                     _sprintf:
  2385                           	callstack 21
  2386  005900  0EE3               	movlw	low (?_sprintf+4)
  2387  005902  0101               	movlb	1	; () banked
  2388  005904  6FD2               	movwf	sprintf@ap& (0+255),b
  2389  005906  0E00               	movlw	high (?_sprintf+4)
  2390  005908  6FD3               	movwf	(sprintf@ap+1)& (0+255),b
  2391  00590A  C0DF  F1D4         	movff	sprintf@s,sprintf@f
  2392  00590E  C0E0  F1D5         	movff	sprintf@s+1,sprintf@f+1
  2393  005912                     
  2394                           ; BSR set to: 1
  2395  005912  0E00               	movlw	0
  2396  005914  6FD8               	movwf	(sprintf@f+4)& (0+255),b
  2397  005916  0E00               	movlw	0
  2398  005918  6FD7               	movwf	(sprintf@f+3)& (0+255),b
  2399  00591A                     
  2400                           ; BSR set to: 1
  2401  00591A  0E00               	movlw	0
  2402  00591C  6FDE               	movwf	(sprintf@f+10)& (0+255),b
  2403  00591E  0E00               	movlw	0
  2404  005920  6FDD               	movwf	(sprintf@f+9)& (0+255),b
  2405  005922                     
  2406                           ; BSR set to: 1
  2407  005922  0ED4               	movlw	low sprintf@f
  2408  005924  0100               	movlb	0	; () banked
  2409  005926  6FD7               	movwf	vfprintf@fp& (0+255),b
  2410  005928  0E01               	movlw	high sprintf@f
  2411  00592A  6FD8               	movwf	(vfprintf@fp+1)& (0+255),b
  2412  00592C  C0E1  F0D9         	movff	sprintf@fmt,vfprintf@fmt
  2413  005930  C0E2  F0DA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2414  005934  0ED2               	movlw	low sprintf@ap
  2415  005936  6FDB               	movwf	vfprintf@ap& (0+255),b
  2416  005938  0E01               	movlw	high sprintf@ap
  2417  00593A  6FDC               	movwf	(vfprintf@ap+1)& (0+255),b
  2418  00593C  EC4F  F02B         	call	_vfprintf	;wreg free
  2419  005940  0101               	movlb	1	; () banked
  2420  005942  51D7               	movf	(sprintf@f+3)& (0+255),w,b
  2421  005944  0100               	movlb	0	; () banked
  2422  005946  25DF               	addwf	sprintf@s& (0+255),w,b
  2423  005948  6ED9               	movwf	fsr2l,c
  2424  00594A  0101               	movlb	1	; () banked
  2425  00594C  51D8               	movf	(sprintf@f+4)& (0+255),w,b
  2426  00594E  0100               	movlb	0	; () banked
  2427  005950  21E0               	addwfc	(sprintf@s+1)& (0+255),w,b
  2428  005952  6EDA               	movwf	fsr2h,c
  2429  005954  0E00               	movlw	0
  2430  005956  6EDF               	movwf	indf2,c
  2431  005958                     
  2432                           ; BSR set to: 0
  2433  005958  0012               	return		;funcret
  2434  00595A                     __end_of_sprintf:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _vfprintf *****************
  2438 ;; Defined at:
  2439 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  fp              2  119[BANK0 ] PTR struct _IO_FILE
  2442 ;;		 -> sprintf@f(11), 
  2443 ;;  fmt             2  121[BANK0 ] PTR const unsigned char 
  2444 ;;		 -> STR_3(33), 
  2445 ;;  ap              2  123[BANK0 ] PTR PTR void 
  2446 ;;		 -> sprintf@ap(2), 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  cfmt            2  125[BANK0 ] PTR unsigned char 
  2449 ;;		 -> STR_3(33), 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  2  119[BANK0 ] int 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2459 ;;      Params:         0       6       0       0       0       0       0       0       0
  2460 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2462 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2463 ;;Total ram usage:        8 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; Hardware stack levels required when called: 8
  2466 ;; This function calls:
  2467 ;;		_vfpfcnvrt
  2468 ;; This function is called by:
  2469 ;;		_sprintf
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text6
  2474  00569E                     __ptext6:
  2475                           	callstack 0
  2476  00569E                     _vfprintf:
  2477                           	callstack 21
  2478  00569E                     
  2479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2480  00569E  C0D9  F0DD         	movff	vfprintf@fmt,vfprintf@cfmt
  2481  0056A2  C0DA  F0DE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2482  0056A6                     
  2483                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2484  0056A6  0E00               	movlw	0
  2485  0056A8  0101               	movlb	1	; () banked
  2486  0056AA  6F33               	movwf	(_nout+1)& (0+255),b
  2487  0056AC  0E00               	movlw	0
  2488  0056AE  6F32               	movwf	_nout& (0+255),b
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2491  0056B0  EF71  F02B         	goto	l7819
  2492  0056B4                     l7817:
  2493                           
  2494                           ; BSR set to: 1
  2495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2496  0056B4  C0D7  F0BB         	movff	vfprintf@fp,vfpfcnvrt@fp
  2497  0056B8  C0D8  F0BC         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2498  0056BC  0EDD               	movlw	low vfprintf@cfmt
  2499  0056BE  0100               	movlb	0	; () banked
  2500  0056C0  6FBD               	movwf	vfpfcnvrt@fmt& (0+255),b
  2501  0056C2  0E00               	movlw	high vfprintf@cfmt
  2502  0056C4  6FBE               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2503  0056C6  C0DB  F0BF         	movff	vfprintf@ap,vfpfcnvrt@ap
  2504  0056CA  C0DC  F0C0         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2505  0056CE  EC7F  F012         	call	_vfpfcnvrt	;wreg free
  2506  0056D2  0100               	movlb	0	; () banked
  2507  0056D4  51BB               	movf	?_vfpfcnvrt& (0+255),w,b
  2508  0056D6  0101               	movlb	1	; () banked
  2509  0056D8  2732               	addwf	_nout& (0+255),f,b
  2510  0056DA  0100               	movlb	0	; () banked
  2511  0056DC  51BC               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2512  0056DE  0101               	movlb	1	; () banked
  2513  0056E0  2333               	addwfc	(_nout+1)& (0+255),f,b
  2514  0056E2                     l7819:
  2515                           
  2516                           ; BSR set to: 1
  2517                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2518  0056E2  C0DD  FFF6         	movff	vfprintf@cfmt,tblptrl
  2519  0056E6  C0DE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2520  0056EA                     	if	0	;tblptru may be non-zero
  2521  0056EA                     	endif
  2522  0056EA                     	if	0	;tblptru may be non-zero
  2523  0056EA                     	endif
  2524  0056EA  0008               	tblrd		*
  2525  0056EC  50F5               	movf	tablat,w,c
  2526  0056EE  0900               	iorlw	0
  2527  0056F0  A4D8               	btfss	status,2,c
  2528  0056F2  EF7D  F02B         	goto	u10351
  2529  0056F6  EF7F  F02B         	goto	u10350
  2530  0056FA                     u10351:
  2531  0056FA  EF5A  F02B         	goto	l7817
  2532  0056FE                     u10350:
  2533  0056FE                     
  2534                           ; BSR set to: 1
  2535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2536  0056FE  C132  F0D7         	movff	_nout,?_vfprintf
  2537  005702  C133  F0D8         	movff	_nout+1,?_vfprintf+1
  2538  005706                     
  2539                           ; BSR set to: 1
  2540  005706  0012               	return		;funcret
  2541  005708                     __end_of_vfprintf:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _vfpfcnvrt *****************
  2545 ;; Defined at:
  2546 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  fp              2   91[BANK0 ] PTR struct _IO_FILE
  2549 ;;		 -> sprintf@f(11), 
  2550 ;;  fmt             2   93[BANK0 ] PTR PTR unsigned char 
  2551 ;;		 -> vfprintf@cfmt(2), 
  2552 ;;  ap              2   95[BANK0 ] PTR PTR void 
  2553 ;;		 -> sprintf@ap(2), 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  ll              8  101[BANK0 ] long long 
  2556 ;;  llu             8    0        unsigned long long 
  2557 ;;  f               4  111[BANK0 ] unsigned long long 
  2558 ;;  ct              3  115[BANK0 ] unsigned char [3]
  2559 ;;  vp              3    0        PTR void 
  2560 ;;  cp              3    0        PTR unsigned char 
  2561 ;;  done            2  109[BANK0 ] int 
  2562 ;;  i               2    0        int 
  2563 ;;  c               1  118[BANK0 ] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2   91[BANK0 ] int 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2573 ;;      Params:         0       6       0       0       0       0       0       0       0
  2574 ;;      Locals:         0      18       0       0       0       0       0       0       0
  2575 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2576 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2577 ;;Total ram usage:       28 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 7
  2580 ;; This function calls:
  2581 ;;		_atoi
  2582 ;;		_dtoa
  2583 ;;		_efgtoa
  2584 ;;		_fputc
  2585 ;;		_isdigit
  2586 ;;		_isupper
  2587 ;;		_strncmp
  2588 ;;		_tolower
  2589 ;; This function is called by:
  2590 ;;		_vfprintf
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text7
  2595  0024FE                     __ptext7:
  2596                           	callstack 0
  2597  0024FE                     _vfpfcnvrt:
  2598                           	callstack 21
  2599  0024FE                     
  2600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2601  0024FE  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2602  002502  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2603  002506  CFDE FFF6          	movff	postinc2,tblptrl
  2604  00250A  CFDD FFF7          	movff	postdec2,tblptrh
  2605  00250E                     	if	0	;tblptru may be non-zero
  2606  00250E                     	endif
  2607  00250E                     	if	0	;tblptru may be non-zero
  2608  00250E                     	endif
  2609  00250E  0008               	tblrd		*
  2610  002510  50F5               	movf	tablat,w,c
  2611  002512  0A25               	xorlw	37
  2612  002514  A4D8               	btfss	status,2,c
  2613  002516  EF8F  F012         	goto	u10161
  2614  00251A  EF91  F012         	goto	u10160
  2615  00251E                     u10161:
  2616  00251E  EFB6  F015         	goto	l7779
  2617  002522                     u10160:
  2618  002522                     
  2619                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2620  002522  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2621  002526  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2622  00252A  2ADE               	incf	postinc2,f,c
  2623  00252C  0E00               	movlw	0
  2624  00252E  22DD               	addwfc	postdec2,f,c
  2625  002530                     
  2626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2627  002530  0E00               	movlw	0
  2628  002532  0101               	movlb	1	; () banked
  2629  002534  6F35               	movwf	(_width+1)& (0+255),b
  2630  002536  0E00               	movlw	0
  2631  002538  6F34               	movwf	_width& (0+255),b
  2632  00253A  C134  F05A         	movff	_width,_flags
  2633  00253E  C135  F05B         	movff	_width+1,_flags+1
  2634  002542                     
  2635                           ; BSR set to: 1
  2636                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2637  002542  0100               	movlb	0	; () banked
  2638  002544  69F7               	setf	_prec& (0+255),b
  2639  002546  69F8               	setf	(_prec+1)& (0+255),b
  2640  002548                     
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2643  002548  0E00               	movlw	0
  2644  00254A  6FCE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2645  00254C  0E00               	movlw	0
  2646  00254E  6FCD               	movwf	vfpfcnvrt@done& (0+255),b
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2649  002550  EFF0  F012         	goto	l7677
  2650  002554                     l7651:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2654  002554  805A               	bsf	_flags^0,0,c
  2655  002556                     l7653:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2659  002556  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2660  00255A  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2661  00255E  2ADE               	incf	postinc2,f,c
  2662  002560  0E00               	movlw	0
  2663  002562  22DD               	addwfc	postdec2,f,c
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2666  002564  EFF0  F012         	goto	l7677
  2667  002568                     l7655:
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2671  002568  825A               	bsf	_flags^0,1,c
  2672  00256A  EFAB  F012         	goto	l7653
  2673  00256E                     l7659:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2677  00256E  845A               	bsf	_flags^0,2,c
  2678  002570  EFAB  F012         	goto	l7653
  2679  002574                     l7663:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2683  002574  865A               	bsf	_flags^0,3,c
  2684  002576  EFAB  F012         	goto	l7653
  2685  00257A                     l7667:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2689  00257A  885A               	bsf	_flags^0,4,c
  2690  00257C  EFAB  F012         	goto	l7653
  2691  002580                     l7671:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2695  002580  0E00               	movlw	0
  2696  002582  6FCE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2697  002584  0E01               	movlw	1
  2698  002586  6FCD               	movwf	vfpfcnvrt@done& (0+255),b
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2701  002588  EFF0  F012         	goto	l7677
  2702  00258C                     l7675:
  2703                           
  2704                           ; BSR set to: 0
  2705  00258C  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2706  002590  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2707  002594  CFDE FFF6          	movff	postinc2,tblptrl
  2708  002598  CFDD FFF7          	movff	postdec2,tblptrh
  2709  00259C                     	if	0	;tblptru may be non-zero
  2710  00259C                     	endif
  2711  00259C                     	if	0	;tblptru may be non-zero
  2712  00259C                     	endif
  2713  00259C  0008               	tblrd		*
  2714  00259E  50F5               	movf	tablat,w,c
  2715  0025A0  6FC1               	movwf	??_vfpfcnvrt& (0+255),b
  2716  0025A2  6BC2               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2717                           
  2718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2719                           ; Switch size 1, requested type "simple"
  2720                           ; Number of cases is 1, Range of values is 0 to 0
  2721                           ; switch strategies available:
  2722                           ; Name         Instructions Cycles
  2723                           ; simple_byte            4     3 (average)
  2724                           ;	Chosen strategy is simple_byte
  2725  0025A4  51C2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2726  0025A6  0A00               	xorlw	0	; case 0
  2727  0025A8  B4D8               	btfsc	status,2,c
  2728  0025AA  EFD9  F012         	goto	l8491
  2729  0025AE  EFC0  F012         	goto	l7671
  2730  0025B2                     l8491:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ; Switch size 1, requested type "simple"
  2734                           ; Number of cases is 5, Range of values is 32 to 48
  2735                           ; switch strategies available:
  2736                           ; Name         Instructions Cycles
  2737                           ; simple_byte           16     9 (average)
  2738                           ;	Chosen strategy is simple_byte
  2739  0025B2  51C1               	movf	??_vfpfcnvrt& (0+255),w,b
  2740  0025B4  0A20               	xorlw	32	; case 32
  2741  0025B6  B4D8               	btfsc	status,2,c
  2742  0025B8  EFBA  F012         	goto	l7663
  2743  0025BC  0A03               	xorlw	3	; case 35
  2744  0025BE  B4D8               	btfsc	status,2,c
  2745  0025C0  EFBD  F012         	goto	l7667
  2746  0025C4  0A08               	xorlw	8	; case 43
  2747  0025C6  B4D8               	btfsc	status,2,c
  2748  0025C8  EFB7  F012         	goto	l7659
  2749  0025CC  0A06               	xorlw	6	; case 45
  2750  0025CE  B4D8               	btfsc	status,2,c
  2751  0025D0  EFAA  F012         	goto	l7651
  2752  0025D4  0A1D               	xorlw	29	; case 48
  2753  0025D6  B4D8               	btfsc	status,2,c
  2754  0025D8  EFB4  F012         	goto	l7655
  2755  0025DC  EFC0  F012         	goto	l7671
  2756  0025E0                     l7677:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2760  0025E0  51CD               	movf	vfpfcnvrt@done& (0+255),w,b
  2761  0025E2  11CE               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2762  0025E4  B4D8               	btfsc	status,2,c
  2763  0025E6  EFF7  F012         	goto	u10171
  2764  0025EA  EFF9  F012         	goto	u10170
  2765  0025EE                     u10171:
  2766  0025EE  EFC6  F012         	goto	l7675
  2767  0025F2                     u10170:
  2768  0025F2                     
  2769                           ; BSR set to: 0
  2770                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2771  0025F2  A05A               	btfss	_flags^0,0,c
  2772  0025F4  EFFE  F012         	goto	u10181
  2773  0025F8  EF00  F013         	goto	u10180
  2774  0025FC                     u10181:
  2775  0025FC  EF01  F013         	goto	l7681
  2776  002600                     u10180:
  2777  002600                     
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2780  002600  925A               	bcf	_flags^0,1,c
  2781  002602                     l7681:
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2785  002602  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2786  002606  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2787  00260A  CFDE FFF6          	movff	postinc2,tblptrl
  2788  00260E  CFDD FFF7          	movff	postdec2,tblptrh
  2789  002612                     	if	0	;tblptru may be non-zero
  2790  002612                     	endif
  2791  002612                     	if	0	;tblptru may be non-zero
  2792  002612                     	endif
  2793  002612  0008               	tblrd		*
  2794  002614  50F5               	movf	tablat,w,c
  2795  002616  0A2A               	xorlw	42
  2796  002618  A4D8               	btfss	status,2,c
  2797  00261A  EF11  F013         	goto	u10191
  2798  00261E  EF13  F013         	goto	u10190
  2799  002622                     u10191:
  2800  002622  EF3D  F013         	goto	l7689
  2801  002626                     u10190:
  2802  002626                     
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2805  002626  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2806  00262A  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2807  00262E  2ADE               	incf	postinc2,f,c
  2808  002630  0E00               	movlw	0
  2809  002632  22DD               	addwfc	postdec2,f,c
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2812  002634  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2813  002638  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2814  00263C  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  2815  002640  0E02               	movlw	2
  2816  002642  26DE               	addwf	postinc2,f,c
  2817  002644  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  2818  002648  0E00               	movlw	0
  2819  00264A  22DD               	addwfc	postdec2,f,c
  2820  00264C  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2821  002650  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2822  002654  CFDE F134          	movff	postinc2,_width
  2823  002658  CFDD F135          	movff	postdec2,_width+1
  2824  00265C                     
  2825                           ; BSR set to: 0
  2826                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2827  00265C  0101               	movlb	1	; () banked
  2828  00265E  BF35               	btfsc	(_width+1)& (0+255),7,b
  2829  002660  EF36  F013         	goto	u10200
  2830  002664  EF34  F013         	goto	u10201
  2831  002668                     u10201:
  2832  002668  EF74  F013         	goto	l7697
  2833  00266C                     u10200:
  2834  00266C                     
  2835                           ; BSR set to: 1
  2836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2837  00266C  805A               	bsf	_flags^0,0,c
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2840  00266E  6D34               	negf	_width& (0+255),b
  2841  002670  1F35               	comf	(_width+1)& (0+255),f,b
  2842  002672  B0D8               	btfsc	status,0,c
  2843  002674  2B35               	incf	(_width+1)& (0+255),f,b
  2844  002676  EF74  F013         	goto	l7697
  2845  00267A                     l7689:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2849  00267A  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2850  00267E  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2851  002682  CFDE F00A          	movff	postinc2,atoi@s
  2852  002686  CFDD F00B          	movff	postdec2,atoi@s+1
  2853  00268A  ECD8  F024         	call	_atoi	;wreg free
  2854  00268E  C00A  F134         	movff	?_atoi,_width
  2855  002692  C00B  F135         	movff	?_atoi+1,_width+1
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2858  002696  EF54  F013         	goto	l7695
  2859  00269A                     l7691:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2863  00269A  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2864  00269E  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2865  0026A2  2ADE               	incf	postinc2,f,c
  2866  0026A4  0E00               	movlw	0
  2867  0026A6  22DD               	addwfc	postdec2,f,c
  2868  0026A8                     l7695:
  2869  0026A8  0ED0               	movlw	208
  2870  0026AA  0100               	movlb	0	; () banked
  2871  0026AC  6FC1               	movwf	??_vfpfcnvrt& (0+255),b
  2872  0026AE  0EFF               	movlw	255
  2873  0026B0  6FC2               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2874  0026B2  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2875  0026B6  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2876  0026BA  CFDE FFF6          	movff	postinc2,tblptrl
  2877  0026BE  CFDD FFF7          	movff	postdec2,tblptrh
  2878  0026C2                     	if	0	;tblptru may be non-zero
  2879  0026C2                     	endif
  2880  0026C2                     	if	0	;tblptru may be non-zero
  2881  0026C2                     	endif
  2882  0026C2  0008               	tblrd		*
  2883  0026C4  50F5               	movf	tablat,w,c
  2884  0026C6  6FC3               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2885  0026C8  6BC4               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2886  0026CA  51C1               	movf	??_vfpfcnvrt& (0+255),w,b
  2887  0026CC  27C3               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2888  0026CE  51C2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2889  0026D0  23C4               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2890  0026D2  51C4               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2891  0026D4  E109               	bnz	u10210
  2892  0026D6  0E0A               	movlw	10
  2893  0026D8  5DC3               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2894  0026DA  A0D8               	btfss	status,0,c
  2895  0026DC  EF72  F013         	goto	u10211
  2896  0026E0  EF74  F013         	goto	u10210
  2897  0026E4                     u10211:
  2898  0026E4  EF4D  F013         	goto	l7691
  2899  0026E8                     u10210:
  2900  0026E8                     l7697:
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2903  0026E8  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2904  0026EC  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2905  0026F0  CFDE FFF6          	movff	postinc2,tblptrl
  2906  0026F4  CFDD FFF7          	movff	postdec2,tblptrh
  2907  0026F8                     	if	0	;tblptru may be non-zero
  2908  0026F8                     	endif
  2909  0026F8                     	if	0	;tblptru may be non-zero
  2910  0026F8                     	endif
  2911  0026F8  0008               	tblrd		*
  2912  0026FA  50F5               	movf	tablat,w,c
  2913  0026FC  0A2E               	xorlw	46
  2914  0026FE  A4D8               	btfss	status,2,c
  2915  002700  EF84  F013         	goto	u10221
  2916  002704  EF86  F013         	goto	u10220
  2917  002708                     u10221:
  2918  002708  EFF8  F013         	goto	l7715
  2919  00270C                     u10220:
  2920  00270C                     
  2921                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2922  00270C  0E00               	movlw	0
  2923  00270E  0100               	movlb	0	; () banked
  2924  002710  6FF8               	movwf	(_prec+1)& (0+255),b
  2925  002712  0E00               	movlw	0
  2926  002714  6FF7               	movwf	_prec& (0+255),b
  2927  002716                     
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2930  002716  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2931  00271A  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2932  00271E  2ADE               	incf	postinc2,f,c
  2933  002720  0E00               	movlw	0
  2934  002722  22DD               	addwfc	postdec2,f,c
  2935  002724                     
  2936                           ; BSR set to: 0
  2937                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2938  002724  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2939  002728  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2940  00272C  CFDE FFF6          	movff	postinc2,tblptrl
  2941  002730  CFDD FFF7          	movff	postdec2,tblptrh
  2942  002734                     	if	0	;tblptru may be non-zero
  2943  002734                     	endif
  2944  002734                     	if	0	;tblptru may be non-zero
  2945  002734                     	endif
  2946  002734  0008               	tblrd		*
  2947  002736  50F5               	movf	tablat,w,c
  2948  002738  0A2A               	xorlw	42
  2949  00273A  A4D8               	btfss	status,2,c
  2950  00273C  EFA2  F013         	goto	u10231
  2951  002740  EFA4  F013         	goto	u10230
  2952  002744                     u10231:
  2953  002744  EFC1  F013         	goto	l7707
  2954  002748                     u10230:
  2955  002748                     
  2956                           ; BSR set to: 0
  2957                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2958  002748  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2959  00274C  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2960  002750  2ADE               	incf	postinc2,f,c
  2961  002752  0E00               	movlw	0
  2962  002754  22DD               	addwfc	postdec2,f,c
  2963                           
  2964                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2965  002756  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2966  00275A  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2967  00275E  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  2968  002762  0E02               	movlw	2
  2969  002764  26DE               	addwf	postinc2,f,c
  2970  002766  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  2971  00276A  0E00               	movlw	0
  2972  00276C  22DD               	addwfc	postdec2,f,c
  2973  00276E  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2974  002772  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2975  002776  CFDE F0F7          	movff	postinc2,_prec
  2976  00277A  CFDD F0F8          	movff	postdec2,_prec+1
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2979  00277E  EFF8  F013         	goto	l7715
  2980  002782                     l7707:
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2984  002782  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2985  002786  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2986  00278A  CFDE F00A          	movff	postinc2,atoi@s
  2987  00278E  CFDD F00B          	movff	postdec2,atoi@s+1
  2988  002792  ECD8  F024         	call	_atoi	;wreg free
  2989  002796  C00A  F0F7         	movff	?_atoi,_prec
  2990  00279A  C00B  F0F8         	movff	?_atoi+1,_prec+1
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2993  00279E  EFD8  F013         	goto	l7713
  2994  0027A2                     l7709:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2998  0027A2  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2999  0027A6  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3000  0027AA  2ADE               	incf	postinc2,f,c
  3001  0027AC  0E00               	movlw	0
  3002  0027AE  22DD               	addwfc	postdec2,f,c
  3003  0027B0                     l7713:
  3004  0027B0  0ED0               	movlw	208
  3005  0027B2  0100               	movlb	0	; () banked
  3006  0027B4  6FC1               	movwf	??_vfpfcnvrt& (0+255),b
  3007  0027B6  0EFF               	movlw	255
  3008  0027B8  6FC2               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3009  0027BA  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3010  0027BE  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3011  0027C2  CFDE FFF6          	movff	postinc2,tblptrl
  3012  0027C6  CFDD FFF7          	movff	postdec2,tblptrh
  3013  0027CA                     	if	0	;tblptru may be non-zero
  3014  0027CA                     	endif
  3015  0027CA                     	if	0	;tblptru may be non-zero
  3016  0027CA                     	endif
  3017  0027CA  0008               	tblrd		*
  3018  0027CC  50F5               	movf	tablat,w,c
  3019  0027CE  6FC3               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3020  0027D0  6BC4               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3021  0027D2  51C1               	movf	??_vfpfcnvrt& (0+255),w,b
  3022  0027D4  27C3               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3023  0027D6  51C2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3024  0027D8  23C4               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3025  0027DA  51C4               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3026  0027DC  E109               	bnz	u10240
  3027  0027DE  0E0A               	movlw	10
  3028  0027E0  5DC3               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3029  0027E2  A0D8               	btfss	status,0,c
  3030  0027E4  EFF6  F013         	goto	u10241
  3031  0027E8  EFF8  F013         	goto	u10240
  3032  0027EC                     u10241:
  3033  0027EC  EFD1  F013         	goto	l7709
  3034  0027F0                     u10240:
  3035  0027F0                     l7715:
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3038  0027F0  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3039  0027F4  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3040  0027F8  CFDE FFF6          	movff	postinc2,tblptrl
  3041  0027FC  CFDD FFF7          	movff	postdec2,tblptrh
  3042  002800                     	if	0	;tblptru may be non-zero
  3043  002800                     	endif
  3044  002800                     	if	0	;tblptru may be non-zero
  3045  002800                     	endif
  3046  002800  0008               	tblrd		*
  3047  002802  50F5               	movf	tablat,w,c
  3048  002804  6E09               	movwf	tolower@c^0,c
  3049  002806  6A0A               	clrf	(tolower@c+1)^0,c
  3050  002808  EC24  F02D         	call	_tolower	;wreg free
  3051  00280C  5009               	movf	?_tolower^0,w,c
  3052  00280E  0100               	movlb	0	; () banked
  3053  002810  6FD3               	movwf	vfpfcnvrt@ct& (0+255),b
  3054  002812                     
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3057  002812  51D3               	movf	vfpfcnvrt@ct& (0+255),w,b
  3058  002814  B4D8               	btfsc	status,2,c
  3059  002816  EF0F  F014         	goto	u10251
  3060  00281A  EF11  F014         	goto	u10250
  3061  00281E                     u10251:
  3062  00281E  EF4B  F014         	goto	l7725
  3063  002822                     u10250:
  3064  002822                     
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3067  002822  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3068  002826  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3069  00282A  CFDE F0C1          	movff	postinc2,??_vfpfcnvrt
  3070  00282E  CFDD F0C2          	movff	postdec2,??_vfpfcnvrt+1
  3071  002832  0E01               	movlw	1
  3072  002834  27C1               	addwf	??_vfpfcnvrt& (0+255),f,b
  3073  002836  0E00               	movlw	0
  3074  002838  23C2               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3075  00283A  C0C1  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3076  00283E  C0C2  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3077  002842                     	if	0	;tblptru may be non-zero
  3078  002842                     	endif
  3079  002842                     	if	0	;tblptru may be non-zero
  3080  002842                     	endif
  3081  002842  0008               	tblrd		*
  3082  002844  50F5               	movf	tablat,w,c
  3083  002846  6E09               	movwf	tolower@c^0,c
  3084  002848  6A0A               	clrf	(tolower@c+1)^0,c
  3085  00284A  EC24  F02D         	call	_tolower	;wreg free
  3086  00284E  5009               	movf	?_tolower^0,w,c
  3087  002850  0100               	movlb	0	; () banked
  3088  002852  6FD4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3089  002854                     
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3092  002854  51D4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3093  002856  B4D8               	btfsc	status,2,c
  3094  002858  EF30  F014         	goto	u10261
  3095  00285C  EF32  F014         	goto	u10260
  3096  002860                     u10261:
  3097  002860  EF4B  F014         	goto	l7725
  3098  002864                     u10260:
  3099  002864                     
  3100                           ; BSR set to: 0
  3101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3102  002864  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3103  002868  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3104  00286C  CFDE F0C1          	movff	postinc2,??_vfpfcnvrt
  3105  002870  CFDD F0C2          	movff	postdec2,??_vfpfcnvrt+1
  3106  002874  0E02               	movlw	2
  3107  002876  27C1               	addwf	??_vfpfcnvrt& (0+255),f,b
  3108  002878  0E00               	movlw	0
  3109  00287A  23C2               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3110  00287C  C0C1  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3111  002880  C0C2  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3112  002884                     	if	0	;tblptru may be non-zero
  3113  002884                     	endif
  3114  002884                     	if	0	;tblptru may be non-zero
  3115  002884                     	endif
  3116  002884  0008               	tblrd		*
  3117  002886  50F5               	movf	tablat,w,c
  3118  002888  6E09               	movwf	tolower@c^0,c
  3119  00288A  6A0A               	clrf	(tolower@c+1)^0,c
  3120  00288C  EC24  F02D         	call	_tolower	;wreg free
  3121  002890  5009               	movf	?_tolower^0,w,c
  3122  002892  0100               	movlb	0	; () banked
  3123  002894  6FD5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3124  002896                     l7725:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3128  002896  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3129  00289A  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3130  00289E  CFDE FFF6          	movff	postinc2,tblptrl
  3131  0028A2  CFDD FFF7          	movff	postdec2,tblptrh
  3132  0028A6                     	if	0	;tblptru may be non-zero
  3133  0028A6                     	endif
  3134  0028A6                     	if	0	;tblptru may be non-zero
  3135  0028A6                     	endif
  3136  0028A6  0008               	tblrd		*
  3137  0028A8  50F5               	movf	tablat,w,c
  3138  0028AA  0A64               	xorlw	100
  3139  0028AC  B4D8               	btfsc	status,2,c
  3140  0028AE  EF5B  F014         	goto	u10271
  3141  0028B2  EF5D  F014         	goto	u10270
  3142  0028B6                     u10271:
  3143  0028B6  EF6F  F014         	goto	l7729
  3144  0028BA                     u10270:
  3145  0028BA                     
  3146                           ; BSR set to: 0
  3147  0028BA  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3148  0028BE  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3149  0028C2  CFDE FFF6          	movff	postinc2,tblptrl
  3150  0028C6  CFDD FFF7          	movff	postdec2,tblptrh
  3151  0028CA                     	if	0	;tblptru may be non-zero
  3152  0028CA                     	endif
  3153  0028CA                     	if	0	;tblptru may be non-zero
  3154  0028CA                     	endif
  3155  0028CA  0008               	tblrd		*
  3156  0028CC  50F5               	movf	tablat,w,c
  3157  0028CE  0A69               	xorlw	105
  3158  0028D0  A4D8               	btfss	status,2,c
  3159  0028D2  EF6D  F014         	goto	u10281
  3160  0028D6  EF6F  F014         	goto	u10280
  3161  0028DA                     u10281:
  3162  0028DA  EFAF  F014         	goto	l7735
  3163  0028DE                     u10280:
  3164  0028DE                     l7729:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3168  0028DE  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3169  0028E2  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3170  0028E6  2ADE               	incf	postinc2,f,c
  3171  0028E8  0E00               	movlw	0
  3172  0028EA  22DD               	addwfc	postdec2,f,c
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3175  0028EC  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3176  0028F0  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3177  0028F4  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  3178  0028F8  0E02               	movlw	2
  3179  0028FA  26DE               	addwf	postinc2,f,c
  3180  0028FC  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  3181  002900  0E00               	movlw	0
  3182  002902  22DD               	addwfc	postdec2,f,c
  3183  002904  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3184  002908  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3185  00290C  CFDE F0C5          	movff	postinc2,vfpfcnvrt@ll
  3186  002910  CFDD F0C6          	movff	postdec2,vfpfcnvrt@ll+1
  3187  002914  0E00               	movlw	0
  3188  002916  BFC6               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3189  002918  0EFF               	movlw	-1
  3190  00291A  6FC7               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3191  00291C  6FC8               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3192  00291E  6FC9               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3193  002920  6FCA               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3194  002922  6FCB               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3195  002924  6FCC               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3196  002926                     
  3197                           ; BSR set to: 0
  3198                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3199  002926  C0BB  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  3200  00292A  C0BC  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3201  00292E  C0C5  F020         	movff	vfpfcnvrt@ll,dtoa@d
  3202  002932  C0C6  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3203  002936  C0C7  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3204  00293A  C0C8  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3205  00293E  C0C9  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3206  002942  C0CA  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3207  002946  C0CB  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3208  00294A  C0CC  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3209  00294E  EC35  F01E         	call	_dtoa	;wreg free
  3210  002952  C01E  F0BB         	movff	?_dtoa,?_vfpfcnvrt
  3211  002956  C01F  F0BC         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3212  00295A  EFD1  F015         	goto	l1106
  3213  00295E                     l7735:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3217  00295E  0E66               	movlw	102
  3218  002960  19D3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3219  002962  A4D8               	btfss	status,2,c
  3220  002964  EFB6  F014         	goto	u10291
  3221  002968  EFB8  F014         	goto	u10290
  3222  00296C                     u10291:
  3223  00296C  EFF8  F014         	goto	l7747
  3224  002970                     u10290:
  3225  002970                     
  3226                           ; BSR set to: 0
  3227                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3228  002970  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3229  002974  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3230  002978  CFDE FFF6          	movff	postinc2,tblptrl
  3231  00297C  CFDD FFF7          	movff	postdec2,tblptrh
  3232  002980                     	if	0	;tblptru may be non-zero
  3233  002980                     	endif
  3234  002980                     	if	0	;tblptru may be non-zero
  3235  002980                     	endif
  3236  002980  0008               	tblrd		*
  3237  002982  CFF5 F0D6          	movff	tablat,vfpfcnvrt@c
  3238  002986                     
  3239                           ; BSR set to: 0
  3240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3241  002986  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3242  00298A  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3243  00298E  2ADE               	incf	postinc2,f,c
  3244  002990  0E00               	movlw	0
  3245  002992  22DD               	addwfc	postdec2,f,c
  3246  002994                     
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3249  002994  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3250  002998  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3251  00299C  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  3252  0029A0  0E04               	movlw	4
  3253  0029A2  26DE               	addwf	postinc2,f,c
  3254  0029A4  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  3255  0029A8  0E00               	movlw	0
  3256  0029AA  22DD               	addwfc	postdec2,f,c
  3257  0029AC  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3258  0029B0  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3259  0029B4  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f
  3260  0029B8  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+1
  3261  0029BC  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+2
  3262  0029C0  CFDE F0D2          	movff	postinc2,vfpfcnvrt@f+3
  3263  0029C4                     l7743:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3267  0029C4  C0BB  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  3268  0029C8  C0BC  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3269  0029CC  C0CF  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  3270  0029D0  C0D0  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3271  0029D4  C0D1  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3272  0029D8  C0D2  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3273  0029DC  C0D6  F083         	movff	vfpfcnvrt@c,efgtoa@c
  3274  0029E0  EC79  F00C         	call	_efgtoa	;wreg free
  3275  0029E4  C07D  F0BB         	movff	?_efgtoa,?_vfpfcnvrt
  3276  0029E8  C07E  F0BC         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3277  0029EC  EFD1  F015         	goto	l1106
  3278  0029F0                     l7747:
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3282  0029F0  0ED3               	movlw	low vfpfcnvrt@ct
  3283  0029F2  6E03               	movwf	strncmp@_l^0,c
  3284  0029F4  0E00               	movlw	high vfpfcnvrt@ct
  3285  0029F6  6E04               	movwf	(strncmp@_l+1)^0,c
  3286  0029F8  0E44               	movlw	low STR_12
  3287  0029FA  6E05               	movwf	strncmp@_r^0,c
  3288  0029FC  0E08               	movlw	high STR_12
  3289  0029FE  6E06               	movwf	(strncmp@_r+1)^0,c
  3290  002A00  0E00               	movlw	0
  3291  002A02  6E08               	movwf	(strncmp@n+1)^0,c
  3292  002A04  0E02               	movlw	2
  3293  002A06  6E07               	movwf	strncmp@n^0,c
  3294  002A08  ECEF  F027         	call	_strncmp	;wreg free
  3295  002A0C  5003               	movf	?_strncmp^0,w,c
  3296  002A0E  1004               	iorwf	(?_strncmp+1)^0,w,c
  3297  002A10  A4D8               	btfss	status,2,c
  3298  002A12  EF0D  F015         	goto	u10301
  3299  002A16  EF0F  F015         	goto	u10300
  3300  002A1A                     u10301:
  3301  002A1A  EF7E  F015         	goto	l7763
  3302  002A1E                     u10300:
  3303  002A1E                     
  3304                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  3305  002A1E  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3306  002A22  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3307  002A26  CFDE F0C1          	movff	postinc2,??_vfpfcnvrt
  3308  002A2A  CFDD F0C2          	movff	postdec2,??_vfpfcnvrt+1
  3309  002A2E  0E01               	movlw	1
  3310  002A30  0100               	movlb	0	; () banked
  3311  002A32  27C1               	addwf	??_vfpfcnvrt& (0+255),f,b
  3312  002A34  0E00               	movlw	0
  3313  002A36  23C2               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3314  002A38  C0C1  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3315  002A3C  C0C2  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3316  002A40                     	if	0	;tblptru may be non-zero
  3317  002A40                     	endif
  3318  002A40                     	if	0	;tblptru may be non-zero
  3319  002A40                     	endif
  3320  002A40  0008               	tblrd		*
  3321  002A42  CFF5 F0D6          	movff	tablat,vfpfcnvrt@c
  3322  002A46                     
  3323                           ; BSR set to: 0
  3324  002A46  0EBF               	movlw	191
  3325  002A48  6FC1               	movwf	??_vfpfcnvrt& (0+255),b
  3326  002A4A  0EFF               	movlw	255
  3327  002A4C  6FC2               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3328  002A4E  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3329  002A52  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3330  002A56  CFDE FFF6          	movff	postinc2,tblptrl
  3331  002A5A  CFDD FFF7          	movff	postdec2,tblptrh
  3332  002A5E                     	if	0	;tblptru may be non-zero
  3333  002A5E                     	endif
  3334  002A5E                     	if	0	;tblptru may be non-zero
  3335  002A5E                     	endif
  3336  002A5E  0008               	tblrd		*
  3337  002A60  50F5               	movf	tablat,w,c
  3338  002A62  6FC3               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3339  002A64  6BC4               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3340  002A66  51C1               	movf	??_vfpfcnvrt& (0+255),w,b
  3341  002A68  27C3               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3342  002A6A  51C2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3343  002A6C  23C4               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3344  002A6E  51C4               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3345  002A70  E107               	bnz	u10311
  3346  002A72  0E1A               	movlw	26
  3347  002A74  5DC3               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3348  002A76  B0D8               	btfsc	status,0,c
  3349  002A78  EF40  F015         	goto	u10311
  3350  002A7C  EF42  F015         	goto	u10310
  3351  002A80                     u10311:
  3352  002A80  EF5C  F015         	goto	l7757
  3353  002A84                     u10310:
  3354  002A84                     
  3355                           ; BSR set to: 0
  3356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3357  002A84  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3358  002A88  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3359  002A8C  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  3360  002A90  0E04               	movlw	4
  3361  002A92  26DE               	addwf	postinc2,f,c
  3362  002A94  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  3363  002A98  0E00               	movlw	0
  3364  002A9A  22DD               	addwfc	postdec2,f,c
  3365  002A9C  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3366  002AA0  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3367  002AA4  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f
  3368  002AA8  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+1
  3369  002AAC  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+2
  3370  002AB0  CFDE F0D2          	movff	postinc2,vfpfcnvrt@f+3
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3373  002AB4  EF74  F015         	goto	l1112
  3374  002AB8                     l7757:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3378  002AB8  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3379  002ABC  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3380  002AC0  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  3381  002AC4  0E04               	movlw	4
  3382  002AC6  26DE               	addwf	postinc2,f,c
  3383  002AC8  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  3384  002ACC  0E00               	movlw	0
  3385  002ACE  22DD               	addwfc	postdec2,f,c
  3386  002AD0  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3387  002AD4  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3388  002AD8  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f
  3389  002ADC  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+1
  3390  002AE0  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+2
  3391  002AE4  CFDE F0D2          	movff	postinc2,vfpfcnvrt@f+3
  3392  002AE8                     l1112:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3396  002AE8  0E02               	movlw	2
  3397  002AEA  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3398  002AEE  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3399  002AF2  26DE               	addwf	postinc2,f,c
  3400  002AF4  0E00               	movlw	0
  3401  002AF6  22DD               	addwfc	postdec2,f,c
  3402  002AF8  EFE2  F014         	goto	l7743
  3403  002AFC                     l7763:
  3404                           
  3405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3406  002AFC  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3407  002B00  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3408  002B04  CFDE FFF6          	movff	postinc2,tblptrl
  3409  002B08  CFDD FFF7          	movff	postdec2,tblptrh
  3410  002B0C                     	if	0	;tblptru may be non-zero
  3411  002B0C                     	endif
  3412  002B0C                     	if	0	;tblptru may be non-zero
  3413  002B0C                     	endif
  3414  002B0C  0008               	tblrd		*
  3415  002B0E  50F5               	movf	tablat,w,c
  3416  002B10  0A25               	xorlw	37
  3417  002B12  A4D8               	btfss	status,2,c
  3418  002B14  EF8E  F015         	goto	u10321
  3419  002B18  EF90  F015         	goto	u10320
  3420  002B1C                     u10321:
  3421  002B1C  EFA8  F015         	goto	l7773
  3422  002B20                     u10320:
  3423  002B20                     
  3424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3425  002B20  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3426  002B24  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3427  002B28  2ADE               	incf	postinc2,f,c
  3428  002B2A  0E00               	movlw	0
  3429  002B2C  22DD               	addwfc	postdec2,f,c
  3430  002B2E                     
  3431                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3432  002B2E  0E00               	movlw	0
  3433  002B30  6E04               	movwf	(fputc@c+1)^0,c
  3434  002B32  0E25               	movlw	37
  3435  002B34  6E03               	movwf	fputc@c^0,c
  3436  002B36  C0BB  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3437  002B3A  C0BC  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3438  002B3E  EC5A  F028         	call	_fputc	;wreg free
  3439  002B42                     l7769:
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3442  002B42  0E00               	movlw	0
  3443  002B44  0100               	movlb	0	; () banked
  3444  002B46  6FBC               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3445  002B48  0E01               	movlw	1
  3446  002B4A  6FBB               	movwf	?_vfpfcnvrt& (0+255),b
  3447  002B4C  EFD1  F015         	goto	l1106
  3448  002B50                     l7773:
  3449                           
  3450                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3451  002B50  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3452  002B54  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3453  002B58  2ADE               	incf	postinc2,f,c
  3454  002B5A  0E00               	movlw	0
  3455  002B5C  22DD               	addwfc	postdec2,f,c
  3456  002B5E                     
  3457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3458  002B5E  0E00               	movlw	0
  3459  002B60  0100               	movlb	0	; () banked
  3460  002B62  6FBC               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3461  002B64  0E00               	movlw	0
  3462  002B66  6FBB               	movwf	?_vfpfcnvrt& (0+255),b
  3463  002B68  EFD1  F015         	goto	l1106
  3464  002B6C                     l7779:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3467  002B6C  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3468  002B70  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3469  002B74  CFDE FFF6          	movff	postinc2,tblptrl
  3470  002B78  CFDD FFF7          	movff	postdec2,tblptrh
  3471  002B7C                     	if	0	;tblptru may be non-zero
  3472  002B7C                     	endif
  3473  002B7C                     	if	0	;tblptru may be non-zero
  3474  002B7C                     	endif
  3475  002B7C  0008               	tblrd		*
  3476  002B7E  50F5               	movf	tablat,w,c
  3477  002B80  6E03               	movwf	fputc@c^0,c
  3478  002B82  6A04               	clrf	(fputc@c+1)^0,c
  3479  002B84  C0BB  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3480  002B88  C0BC  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3481  002B8C  EC5A  F028         	call	_fputc	;wreg free
  3482  002B90                     
  3483                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3484  002B90  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3485  002B94  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3486  002B98  2ADE               	incf	postinc2,f,c
  3487  002B9A  0E00               	movlw	0
  3488  002B9C  22DD               	addwfc	postdec2,f,c
  3489  002B9E  EFA1  F015         	goto	l7769
  3490  002BA2                     l1106:
  3491  002BA2  0012               	return		;funcret
  3492  002BA4                     __end_of_vfpfcnvrt:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _strncmp *****************
  3496 ;; Defined at:
  3497 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  3500 ;;		 -> vfpfcnvrt@ct(3), 
  3501 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  3502 ;;		 -> STR_14(3), 
  3503 ;;  n               2    6[COMRAM] unsigned int 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  r               2   11[COMRAM] PTR const unsigned char 
  3506 ;;		 -> STR_14(3), 
  3507 ;;  l               2    9[COMRAM] PTR const unsigned char 
  3508 ;;		 -> vfpfcnvrt@ct(3), 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  2    2[COMRAM] int 
  3511 ;; Registers used:
  3512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3518 ;;      Params:         6       0       0       0       0       0       0       0       0
  3519 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3520 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3521 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3522 ;;Total ram usage:       11 bytes
  3523 ;; Hardware stack levels used: 1
  3524 ;; Hardware stack levels required when called: 2
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_vfpfcnvrt
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text8
  3533  004FDE                     __ptext8:
  3534                           	callstack 0
  3535  004FDE                     _strncmp:
  3536                           	callstack 25
  3537  004FDE  C003  F00A         	movff	strncmp@_l,strncmp@l
  3538  004FE2  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  3539  004FE6  C005  F00C         	movff	strncmp@_r,strncmp@r
  3540  004FEA  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  3541  004FEE  0607               	decf	strncmp@n^0,f,c
  3542  004FF0  A0D8               	btfss	status,0,c
  3543  004FF2  0608               	decf	(strncmp@n+1)^0,f,c
  3544  004FF4  2807               	incf	strncmp@n^0,w,c
  3545  004FF6  E106               	bnz	u10111
  3546  004FF8  2808               	incf	(strncmp@n+1)^0,w,c
  3547  004FFA  A4D8               	btfss	status,2,c
  3548  004FFC  EF02  F028         	goto	u10111
  3549  005000  EF04  F028         	goto	u10110
  3550  005004                     u10111:
  3551  005004  EF11  F028         	goto	l7629
  3552  005008                     u10110:
  3553  005008  0E00               	movlw	0
  3554  00500A  6E04               	movwf	(?_strncmp+1)^0,c
  3555  00500C  0E00               	movlw	0
  3556  00500E  6E03               	movwf	?_strncmp^0,c
  3557  005010  EF59  F028         	goto	l1234
  3558  005014                     l7627:
  3559  005014  4A0A               	infsnz	strncmp@l^0,f,c
  3560  005016  2A0B               	incf	(strncmp@l+1)^0,f,c
  3561  005018  4A0C               	infsnz	strncmp@r^0,f,c
  3562  00501A  2A0D               	incf	(strncmp@r+1)^0,f,c
  3563  00501C  0607               	decf	strncmp@n^0,f,c
  3564  00501E  A0D8               	btfss	status,0,c
  3565  005020  0608               	decf	(strncmp@n+1)^0,f,c
  3566  005022                     l7629:
  3567  005022  C00A  FFD9         	movff	strncmp@l,fsr2l
  3568  005026  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  3569  00502A  50DF               	movf	indf2,w,c
  3570  00502C  B4D8               	btfsc	status,2,c
  3571  00502E  EF1B  F028         	goto	u10121
  3572  005032  EF1D  F028         	goto	u10120
  3573  005036                     u10121:
  3574  005036  EF48  F028         	goto	l7637
  3575  00503A                     u10120:
  3576  00503A  C00C  FFF6         	movff	strncmp@r,tblptrl
  3577  00503E  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  3578  005042                     	if	0	;tblptru may be non-zero
  3579  005042                     	endif
  3580  005042                     	if	0	;tblptru may be non-zero
  3581  005042                     	endif
  3582  005042  0008               	tblrd		*
  3583  005044  50F5               	movf	tablat,w,c
  3584  005046  0900               	iorlw	0
  3585  005048  B4D8               	btfsc	status,2,c
  3586  00504A  EF29  F028         	goto	u10131
  3587  00504E  EF2B  F028         	goto	u10130
  3588  005052                     u10131:
  3589  005052  EF48  F028         	goto	l7637
  3590  005056                     u10130:
  3591  005056  5007               	movf	strncmp@n^0,w,c
  3592  005058  1008               	iorwf	(strncmp@n+1)^0,w,c
  3593  00505A  B4D8               	btfsc	status,2,c
  3594  00505C  EF32  F028         	goto	u10141
  3595  005060  EF34  F028         	goto	u10140
  3596  005064                     u10141:
  3597  005064  EF48  F028         	goto	l7637
  3598  005068                     u10140:
  3599  005068  C00A  FFD9         	movff	strncmp@l,fsr2l
  3600  00506C  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  3601  005070  50DF               	movf	indf2,w,c
  3602  005072  6E09               	movwf	??_strncmp^0,c
  3603  005074  C00C  FFF6         	movff	strncmp@r,tblptrl
  3604  005078  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  3605  00507C                     	if	0	;tblptru may be non-zero
  3606  00507C                     	endif
  3607  00507C                     	if	0	;tblptru may be non-zero
  3608  00507C                     	endif
  3609  00507C  0008               	tblrd		*
  3610  00507E  50F5               	movf	tablat,w,c
  3611  005080  1809               	xorwf	??_strncmp^0,w,c
  3612  005082  B4D8               	btfsc	status,2,c
  3613  005084  EF46  F028         	goto	u10151
  3614  005088  EF48  F028         	goto	u10150
  3615  00508C                     u10151:
  3616  00508C  EF0A  F028         	goto	l7627
  3617  005090                     u10150:
  3618  005090                     l7637:
  3619  005090  C00A  FFD9         	movff	strncmp@l,fsr2l
  3620  005094  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  3621  005098  50DF               	movf	indf2,w,c
  3622  00509A  6E09               	movwf	??_strncmp^0,c
  3623  00509C  C00C  FFF6         	movff	strncmp@r,tblptrl
  3624  0050A0  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  3625  0050A4                     	if	0	;tblptru may be non-zero
  3626  0050A4                     	endif
  3627  0050A4                     	if	0	;tblptru may be non-zero
  3628  0050A4                     	endif
  3629  0050A4  0008               	tblrd		*
  3630  0050A6  50F5               	movf	tablat,w,c
  3631  0050A8  5C09               	subwf	??_strncmp^0,w,c
  3632  0050AA  6E03               	movwf	?_strncmp^0,c
  3633  0050AC  6A04               	clrf	(?_strncmp+1)^0,c
  3634  0050AE  A0D8               	btfss	status,0,c
  3635  0050B0  0604               	decf	(?_strncmp+1)^0,f,c
  3636  0050B2                     l1234:
  3637  0050B2  0012               	return		;funcret
  3638  0050B4                     __end_of_strncmp:
  3639                           	callstack 0
  3640                           
  3641 ;; *************** function _efgtoa *****************
  3642 ;; Defined at:
  3643 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  3646 ;;		 -> sprintf@f(11), 
  3647 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  3648 ;;  c               1   35[BANK0 ] unsigned char 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  u               4   87[BANK0 ] unsigned char 
  3651 ;;  g               4   79[BANK0 ] unsigned char 
  3652 ;;  l               4   73[BANK0 ] unsigned char 
  3653 ;;  h               4   69[BANK0 ] unsigned char 
  3654 ;;  ou              4   55[BANK0 ] unsigned char 
  3655 ;;  n               2   85[BANK0 ] int 
  3656 ;;  e               2   83[BANK0 ] int 
  3657 ;;  i               2   77[BANK0 ] int 
  3658 ;;  w               2   65[BANK0 ] int 
  3659 ;;  p               2   63[BANK0 ] int 
  3660 ;;  sign            2   61[BANK0 ] int 
  3661 ;;  d               2   59[BANK0 ] int 
  3662 ;;  m               2   53[BANK0 ] int 
  3663 ;;  ne              2   51[BANK0 ] int 
  3664 ;;  pp              2   49[BANK0 ] int 
  3665 ;;  t               2   47[BANK0 ] int 
  3666 ;;  mode            1   68[BANK0 ] unsigned char 
  3667 ;;  nmode           1   67[BANK0 ] unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  2   29[BANK0 ] int 
  3670 ;; Registers used:
  3671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3677 ;;      Params:         0       7       0       0       0       0       0       0       0
  3678 ;;      Locals:         0      50       0       0       0       0       0       0       0
  3679 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3680 ;;      Totals:         0      62       0       0       0       0       0       0       0
  3681 ;;Total ram usage:       62 bytes
  3682 ;; Hardware stack levels used: 1
  3683 ;; Hardware stack levels required when called: 6
  3684 ;; This function calls:
  3685 ;;		___awdiv
  3686 ;;		___awmod
  3687 ;;		___fladd
  3688 ;;		___fldiv
  3689 ;;		___fleq
  3690 ;;		___flge
  3691 ;;		___flmul
  3692 ;;		___flneg
  3693 ;;		___flsub
  3694 ;;		___fltol
  3695 ;;		___fpclassifyf
  3696 ;;		_floorf
  3697 ;;		_isupper
  3698 ;;		_pad
  3699 ;;		_strcpy
  3700 ;;		_tolower
  3701 ;; This function is called by:
  3702 ;;		_vfpfcnvrt
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           	psect	text9
  3707  0018F2                     __ptext9:
  3708                           	callstack 0
  3709  0018F2                     _efgtoa:
  3710                           	callstack 21
  3711  0018F2                     
  3712                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3713  0018F2  0E00               	movlw	0
  3714  0018F4  0100               	movlb	0	; () banked
  3715  0018F6  6F9E               	movwf	(efgtoa@sign+1)& (0+255),b
  3716  0018F8  0E00               	movlw	0
  3717  0018FA  6F9D               	movwf	efgtoa@sign& (0+255),b
  3718  0018FC                     
  3719                           ; BSR set to: 0
  3720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3721  0018FC  C07F  F0AF         	movff	efgtoa@f,efgtoa@g
  3722  001900  C080  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  3723  001904  C081  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  3724  001908  C082  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  3725  00190C                     
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3728  00190C  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3729  00190E  EF8D  F00C         	goto	u9590
  3730  001912  EF8B  F00C         	goto	u9591
  3731  001916                     u9591:
  3732  001916  EFA3  F00C         	goto	l7293
  3733  00191A                     u9590:
  3734  00191A                     
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3737  00191A  0E00               	movlw	0
  3738  00191C  6F9E               	movwf	(efgtoa@sign+1)& (0+255),b
  3739  00191E  0E01               	movlw	1
  3740  001920  6F9D               	movwf	efgtoa@sign& (0+255),b
  3741  001922                     
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3744  001922  C0AF  F003         	movff	efgtoa@g,___flneg@f1
  3745  001926  C0B0  F004         	movff	efgtoa@g+1,___flneg@f1+1
  3746  00192A  C0B1  F005         	movff	efgtoa@g+2,___flneg@f1+2
  3747  00192E  C0B2  F006         	movff	efgtoa@g+3,___flneg@f1+3
  3748  001932  EC44  F02E         	call	___flneg	;wreg free
  3749  001936  C003  F0AF         	movff	?___flneg,efgtoa@g
  3750  00193A  C004  F0B0         	movff	?___flneg+1,efgtoa@g+1
  3751  00193E  C005  F0B1         	movff	?___flneg+2,efgtoa@g+2
  3752  001942  C006  F0B2         	movff	?___flneg+3,efgtoa@g+3
  3753  001946                     l7293:
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3756  001946  0E00               	movlw	0
  3757  001948  0100               	movlb	0	; () banked
  3758  00194A  6FB6               	movwf	(efgtoa@n+1)& (0+255),b
  3759  00194C  0E00               	movlw	0
  3760  00194E  6FB5               	movwf	efgtoa@n& (0+255),b
  3761  001950                     
  3762                           ; BSR set to: 0
  3763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3764  001950  C134  F0A1         	movff	_width,efgtoa@w
  3765  001954  C135  F0A2         	movff	_width+1,efgtoa@w+1
  3766  001958                     
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3769  001958  519D               	movf	efgtoa@sign& (0+255),w,b
  3770  00195A  119E               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3771  00195C  A4D8               	btfss	status,2,c
  3772  00195E  EFB3  F00C         	goto	u9601
  3773  001962  EFB5  F00C         	goto	u9600
  3774  001966                     u9601:
  3775  001966  EFBC  F00C         	goto	l7301
  3776  00196A                     u9600:
  3777  00196A                     
  3778                           ; BSR set to: 0
  3779  00196A  A45A               	btfss	_flags^0,2,c
  3780  00196C  EFBA  F00C         	goto	u9611
  3781  001970  EFBC  F00C         	goto	u9610
  3782  001974                     u9611:
  3783  001974  EFD6  F00C         	goto	l7313
  3784  001978                     u9610:
  3785  001978                     l7301:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3789  001978  519D               	movf	efgtoa@sign& (0+255),w,b
  3790  00197A  119E               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3791  00197C  A4D8               	btfss	status,2,c
  3792  00197E  EFC3  F00C         	goto	u9621
  3793  001982  EFC5  F00C         	goto	u9620
  3794  001986                     u9621:
  3795  001986  EFCB  F00C         	goto	l7305
  3796  00198A                     u9620:
  3797  00198A                     
  3798                           ; BSR set to: 0
  3799  00198A  0E00               	movlw	0
  3800  00198C  6F8A               	movwf	(_efgtoa$1368+1)& (0+255),b
  3801  00198E  0E2B               	movlw	43
  3802  001990  6F89               	movwf	_efgtoa$1368& (0+255),b
  3803  001992  EFCF  F00C         	goto	l7307
  3804  001996                     l7305:
  3805                           
  3806                           ; BSR set to: 0
  3807  001996  0E00               	movlw	0
  3808  001998  6F8A               	movwf	(_efgtoa$1368+1)& (0+255),b
  3809  00199A  0E2D               	movlw	45
  3810  00199C  6F89               	movwf	_efgtoa$1368& (0+255),b
  3811  00199E                     l7307:
  3812                           
  3813                           ; BSR set to: 0
  3814  00199E  C089  F13E         	movff	_efgtoa$1368,_dbuf
  3815  0019A2                     
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3818  0019A2  4BB5               	infsnz	efgtoa@n& (0+255),f,b
  3819  0019A4  2BB6               	incf	(efgtoa@n+1)& (0+255),f,b
  3820  0019A6                     
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3823  0019A6  07A1               	decf	efgtoa@w& (0+255),f,b
  3824  0019A8  A0D8               	btfss	status,0,c
  3825  0019AA  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  3826  0019AC                     l7313:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3830  0019AC  C0AF  F003         	movff	efgtoa@g,___fpclassifyf@x
  3831  0019B0  C0B0  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3832  0019B4  C0B1  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3833  0019B8  C0B2  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3834  0019BC  EC89  F026         	call	___fpclassifyf	;wreg free
  3835  0019C0  0403               	decf	?___fpclassifyf^0,w,c
  3836  0019C2  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  3837  0019C4  A4D8               	btfss	status,2,c
  3838  0019C6  EFE7  F00C         	goto	u9631
  3839  0019CA  EFE9  F00C         	goto	u9630
  3840  0019CE                     u9631:
  3841  0019CE  EF33  F00D         	goto	l7331
  3842  0019D2                     u9630:
  3843  0019D2  0EBF               	movlw	191
  3844  0019D4  0100               	movlb	0	; () banked
  3845  0019D6  6F84               	movwf	??_efgtoa& (0+255),b
  3846  0019D8  0EFF               	movlw	255
  3847  0019DA  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3848  0019DC  5183               	movf	efgtoa@c& (0+255),w,b
  3849  0019DE  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3850  0019E0  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3851  0019E2  5184               	movf	??_efgtoa& (0+255),w,b
  3852  0019E4  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3853  0019E6  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3854  0019E8  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3855  0019EA  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3856  0019EC  E107               	bnz	u9641
  3857  0019EE  0E1A               	movlw	26
  3858  0019F0  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3859  0019F2  B0D8               	btfsc	status,0,c
  3860  0019F4  EFFE  F00C         	goto	u9641
  3861  0019F8  EF00  F00D         	goto	u9640
  3862  0019FC                     u9641:
  3863  0019FC  EF0E  F00D         	goto	l7323
  3864  001A00                     u9640:
  3865  001A00                     
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3868  001A00  0E3E               	movlw	low _dbuf
  3869  001A02  25B5               	addwf	efgtoa@n& (0+255),w,b
  3870  001A04  6E03               	movwf	strcpy@dest^0,c
  3871  001A06  0E01               	movlw	high _dbuf
  3872  001A08  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3873  001A0A  6E04               	movwf	(strcpy@dest+1)^0,c
  3874  001A0C  0E34               	movlw	low STR_4
  3875  001A0E  6E05               	movwf	strcpy@src^0,c
  3876  001A10  0E08               	movlw	high STR_4
  3877  001A12  6E06               	movwf	(strcpy@src+1)^0,c
  3878  001A14  EC52  F02C         	call	_strcpy	;wreg free
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3881  001A18  EF1A  F00D         	goto	l7325
  3882  001A1C                     l7323:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3886  001A1C  0E3E               	movlw	low _dbuf
  3887  001A1E  25B5               	addwf	efgtoa@n& (0+255),w,b
  3888  001A20  6E03               	movwf	strcpy@dest^0,c
  3889  001A22  0E01               	movlw	high _dbuf
  3890  001A24  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3891  001A26  6E04               	movwf	(strcpy@dest+1)^0,c
  3892  001A28  0E3C               	movlw	low STR_5
  3893  001A2A  6E05               	movwf	strcpy@src^0,c
  3894  001A2C  0E08               	movlw	high STR_5
  3895  001A2E  6E06               	movwf	(strcpy@src+1)^0,c
  3896  001A30  EC52  F02C         	call	_strcpy	;wreg free
  3897  001A34                     l7325:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3900  001A34  0100               	movlb	0	; () banked
  3901  001A36  0EFD               	movlw	253
  3902  001A38  27A1               	addwf	efgtoa@w& (0+255),f,b
  3903  001A3A  0EFF               	movlw	255
  3904  001A3C  23A2               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3905  001A3E                     l7327:
  3906                           
  3907                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3908  001A3E  C07D  F013         	movff	efgtoa@fp,pad@fp
  3909  001A42  C07E  F014         	movff	efgtoa@fp+1,pad@fp+1
  3910  001A46  0E3E               	movlw	low _dbuf
  3911  001A48  6E15               	movwf	pad@buf^0,c
  3912  001A4A  0E01               	movlw	high _dbuf
  3913  001A4C  6E16               	movwf	(pad@buf+1)^0,c
  3914  001A4E  C0A1  F017         	movff	efgtoa@w,pad@p
  3915  001A52  C0A2  F018         	movff	efgtoa@w+1,pad@p+1
  3916  001A56  EC21  F029         	call	_pad	;wreg free
  3917  001A5A  C013  F07D         	movff	?_pad,?_efgtoa
  3918  001A5E  C014  F07E         	movff	?_pad+1,?_efgtoa+1
  3919  001A62  EF7E  F012         	goto	l998
  3920  001A66                     l7331:
  3921                           
  3922                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  3923  001A66  C0AF  F003         	movff	efgtoa@g,___fpclassifyf@x
  3924  001A6A  C0B0  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3925  001A6E  C0B1  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3926  001A72  C0B2  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3927  001A76  EC89  F026         	call	___fpclassifyf	;wreg free
  3928  001A7A  5003               	movf	?___fpclassifyf^0,w,c
  3929  001A7C  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  3930  001A7E  A4D8               	btfss	status,2,c
  3931  001A80  EF44  F00D         	goto	u9651
  3932  001A84  EF46  F00D         	goto	u9650
  3933  001A88                     u9651:
  3934  001A88  EF79  F00D         	goto	l7349
  3935  001A8C                     u9650:
  3936  001A8C  0EBF               	movlw	191
  3937  001A8E  0100               	movlb	0	; () banked
  3938  001A90  6F84               	movwf	??_efgtoa& (0+255),b
  3939  001A92  0EFF               	movlw	255
  3940  001A94  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3941  001A96  5183               	movf	efgtoa@c& (0+255),w,b
  3942  001A98  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3943  001A9A  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3944  001A9C  5184               	movf	??_efgtoa& (0+255),w,b
  3945  001A9E  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3946  001AA0  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3947  001AA2  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3948  001AA4  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3949  001AA6  E107               	bnz	u9661
  3950  001AA8  0E1A               	movlw	26
  3951  001AAA  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3952  001AAC  B0D8               	btfsc	status,0,c
  3953  001AAE  EF5B  F00D         	goto	u9661
  3954  001AB2  EF5D  F00D         	goto	u9660
  3955  001AB6                     u9661:
  3956  001AB6  EF6B  F00D         	goto	l7341
  3957  001ABA                     u9660:
  3958  001ABA                     
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3961  001ABA  0E3E               	movlw	low _dbuf
  3962  001ABC  25B5               	addwf	efgtoa@n& (0+255),w,b
  3963  001ABE  6E03               	movwf	strcpy@dest^0,c
  3964  001AC0  0E01               	movlw	high _dbuf
  3965  001AC2  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3966  001AC4  6E04               	movwf	(strcpy@dest+1)^0,c
  3967  001AC6  0E38               	movlw	low STR_8
  3968  001AC8  6E05               	movwf	strcpy@src^0,c
  3969  001ACA  0E08               	movlw	high STR_8
  3970  001ACC  6E06               	movwf	(strcpy@src+1)^0,c
  3971  001ACE  EC52  F02C         	call	_strcpy	;wreg free
  3972                           
  3973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3974  001AD2  EF1A  F00D         	goto	l7325
  3975  001AD6                     l7341:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3979  001AD6  0E3E               	movlw	low _dbuf
  3980  001AD8  25B5               	addwf	efgtoa@n& (0+255),w,b
  3981  001ADA  6E03               	movwf	strcpy@dest^0,c
  3982  001ADC  0E01               	movlw	high _dbuf
  3983  001ADE  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3984  001AE0  6E04               	movwf	(strcpy@dest+1)^0,c
  3985  001AE2  0E40               	movlw	low STR_9
  3986  001AE4  6E05               	movwf	strcpy@src^0,c
  3987  001AE6  0E08               	movlw	high STR_9
  3988  001AE8  6E06               	movwf	(strcpy@src+1)^0,c
  3989  001AEA  EC52  F02C         	call	_strcpy	;wreg free
  3990  001AEE  EF1A  F00D         	goto	l7325
  3991  001AF2                     l7349:
  3992                           
  3993                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3994  001AF2  0E00               	movlw	0
  3995  001AF4  0100               	movlb	0	; () banked
  3996  001AF6  6FB7               	movwf	efgtoa@u& (0+255),b
  3997  001AF8  0E00               	movlw	0
  3998  001AFA  6FB8               	movwf	(efgtoa@u+1)& (0+255),b
  3999  001AFC  0E80               	movlw	128
  4000  001AFE  6FB9               	movwf	(efgtoa@u+2)& (0+255),b
  4001  001B00  0E3F               	movlw	63
  4002  001B02  6FBA               	movwf	(efgtoa@u+3)& (0+255),b
  4003                           
  4004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4005  001B04  0E00               	movlw	0
  4006  001B06  6FB4               	movwf	(efgtoa@e+1)& (0+255),b
  4007  001B08  0E00               	movlw	0
  4008  001B0A  6FB3               	movwf	efgtoa@e& (0+255),b
  4009  001B0C                     
  4010                           ; BSR set to: 0
  4011                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4012  001B0C  C0AF  F003         	movff	efgtoa@g,___fleq@ff1
  4013  001B10  C0B0  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  4014  001B14  C0B1  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  4015  001B18  C0B2  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  4016  001B1C  0E00               	movlw	0
  4017  001B1E  6E07               	movwf	___fleq@ff2^0,c
  4018  001B20  0E00               	movlw	0
  4019  001B22  6E08               	movwf	(___fleq@ff2+1)^0,c
  4020  001B24  0E00               	movlw	0
  4021  001B26  6E09               	movwf	(___fleq@ff2+2)^0,c
  4022  001B28  0E00               	movlw	0
  4023  001B2A  6E0A               	movwf	(___fleq@ff2+3)^0,c
  4024  001B2C  EC36  F02A         	call	___fleq	;wreg free
  4025  001B30  B0D8               	btfsc	status,0,c
  4026  001B32  EF9D  F00D         	goto	u9671
  4027  001B36  EF9F  F00D         	goto	u9670
  4028  001B3A                     u9671:
  4029  001B3A  EF22  F00E         	goto	l7367
  4030  001B3E                     u9670:
  4031  001B3E  EFBE  F00D         	goto	l7359
  4032  001B42                     l7355:
  4033                           
  4034                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4035  001B42  C0B7  F02D         	movff	efgtoa@u,___flmul@b
  4036  001B46  C0B8  F02E         	movff	efgtoa@u+1,___flmul@b+1
  4037  001B4A  C0B9  F02F         	movff	efgtoa@u+2,___flmul@b+2
  4038  001B4E  C0BA  F030         	movff	efgtoa@u+3,___flmul@b+3
  4039  001B52  0E00               	movlw	0
  4040  001B54  6E31               	movwf	___flmul@a^0,c
  4041  001B56  0E00               	movlw	0
  4042  001B58  6E32               	movwf	(___flmul@a+1)^0,c
  4043  001B5A  0E20               	movlw	32
  4044  001B5C  6E33               	movwf	(___flmul@a+2)^0,c
  4045  001B5E  0E41               	movlw	65
  4046  001B60  6E34               	movwf	(___flmul@a+3)^0,c
  4047  001B62  EC52  F01A         	call	___flmul	;wreg free
  4048  001B66  C02D  F0B7         	movff	?___flmul,efgtoa@u
  4049  001B6A  C02E  F0B8         	movff	?___flmul+1,efgtoa@u+1
  4050  001B6E  C02F  F0B9         	movff	?___flmul+2,efgtoa@u+2
  4051  001B72  C030  F0BA         	movff	?___flmul+3,efgtoa@u+3
  4052  001B76                     
  4053                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4054  001B76  0100               	movlb	0	; () banked
  4055  001B78  4BB3               	infsnz	efgtoa@e& (0+255),f,b
  4056  001B7A  2BB4               	incf	(efgtoa@e+1)& (0+255),f,b
  4057  001B7C                     l7359:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4060  001B7C  C0AF  F046         	movff	efgtoa@g,___flge@ff1
  4061  001B80  C0B0  F047         	movff	efgtoa@g+1,___flge@ff1+1
  4062  001B84  C0B1  F048         	movff	efgtoa@g+2,___flge@ff1+2
  4063  001B88  C0B2  F049         	movff	efgtoa@g+3,___flge@ff1+3
  4064  001B8C  0E00               	movlw	0
  4065  001B8E  6E31               	movwf	___flmul@a^0,c
  4066  001B90  0E00               	movlw	0
  4067  001B92  6E32               	movwf	(___flmul@a+1)^0,c
  4068  001B94  0E20               	movlw	32
  4069  001B96  6E33               	movwf	(___flmul@a+2)^0,c
  4070  001B98  0E41               	movlw	65
  4071  001B9A  6E34               	movwf	(___flmul@a+3)^0,c
  4072  001B9C  C0B7  F02D         	movff	efgtoa@u,___flmul@b
  4073  001BA0  C0B8  F02E         	movff	efgtoa@u+1,___flmul@b+1
  4074  001BA4  C0B9  F02F         	movff	efgtoa@u+2,___flmul@b+2
  4075  001BA8  C0BA  F030         	movff	efgtoa@u+3,___flmul@b+3
  4076  001BAC  EC52  F01A         	call	___flmul	;wreg free
  4077  001BB0  C02D  F04A         	movff	?___flmul,___flge@ff2
  4078  001BB4  C02E  F04B         	movff	?___flmul+1,___flge@ff2+1
  4079  001BB8  C02F  F04C         	movff	?___flmul+2,___flge@ff2+2
  4080  001BBC  C030  F04D         	movff	?___flmul+3,___flge@ff2+3
  4081  001BC0  EC07  F026         	call	___flge	;wreg free
  4082  001BC4  B0D8               	btfsc	status,0,c
  4083  001BC6  EFE7  F00D         	goto	u9681
  4084  001BCA  EFE9  F00D         	goto	u9680
  4085  001BCE                     u9681:
  4086  001BCE  EFA1  F00D         	goto	l7355
  4087  001BD2                     u9680:
  4088  001BD2  EF09  F00E         	goto	l7365
  4089  001BD6                     l7361:
  4090                           
  4091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4092  001BD6  C0B7  F046         	movff	efgtoa@u,___fldiv@b
  4093  001BDA  C0B8  F047         	movff	efgtoa@u+1,___fldiv@b+1
  4094  001BDE  C0B9  F048         	movff	efgtoa@u+2,___fldiv@b+2
  4095  001BE2  C0BA  F049         	movff	efgtoa@u+3,___fldiv@b+3
  4096  001BE6  0E00               	movlw	0
  4097  001BE8  6E4A               	movwf	___fldiv@a^0,c
  4098  001BEA  0E00               	movlw	0
  4099  001BEC  6E4B               	movwf	(___fldiv@a+1)^0,c
  4100  001BEE  0E20               	movlw	32
  4101  001BF0  6E4C               	movwf	(___fldiv@a+2)^0,c
  4102  001BF2  0E41               	movlw	65
  4103  001BF4  6E4D               	movwf	(___fldiv@a+3)^0,c
  4104  001BF6  EC67  F01C         	call	___fldiv	;wreg free
  4105  001BFA  C046  F0B7         	movff	?___fldiv,efgtoa@u
  4106  001BFE  C047  F0B8         	movff	?___fldiv+1,efgtoa@u+1
  4107  001C02  C048  F0B9         	movff	?___fldiv+2,efgtoa@u+2
  4108  001C06  C049  F0BA         	movff	?___fldiv+3,efgtoa@u+3
  4109  001C0A                     
  4110                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4111  001C0A  0100               	movlb	0	; () banked
  4112  001C0C  07B3               	decf	efgtoa@e& (0+255),f,b
  4113  001C0E  A0D8               	btfss	status,0,c
  4114  001C10  07B4               	decf	(efgtoa@e+1)& (0+255),f,b
  4115  001C12                     l7365:
  4116                           
  4117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4118  001C12  C0AF  F046         	movff	efgtoa@g,___flge@ff1
  4119  001C16  C0B0  F047         	movff	efgtoa@g+1,___flge@ff1+1
  4120  001C1A  C0B1  F048         	movff	efgtoa@g+2,___flge@ff1+2
  4121  001C1E  C0B2  F049         	movff	efgtoa@g+3,___flge@ff1+3
  4122  001C22  C0B7  F04A         	movff	efgtoa@u,___flge@ff2
  4123  001C26  C0B8  F04B         	movff	efgtoa@u+1,___flge@ff2+1
  4124  001C2A  C0B9  F04C         	movff	efgtoa@u+2,___flge@ff2+2
  4125  001C2E  C0BA  F04D         	movff	efgtoa@u+3,___flge@ff2+3
  4126  001C32  EC07  F026         	call	___flge	;wreg free
  4127  001C36  A0D8               	btfss	status,0,c
  4128  001C38  EF20  F00E         	goto	u9691
  4129  001C3C  EF22  F00E         	goto	u9690
  4130  001C40                     u9691:
  4131  001C40  EFEB  F00D         	goto	l7361
  4132  001C44                     u9690:
  4133  001C44                     l7367:
  4134                           
  4135                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4136  001C44  C083  F009         	movff	efgtoa@c,tolower@c
  4137  001C48  6A0A               	clrf	(tolower@c+1)^0,c
  4138  001C4A  EC24  F02D         	call	_tolower	;wreg free
  4139  001C4E  5009               	movf	?_tolower^0,w,c
  4140  001C50  0100               	movlb	0	; () banked
  4141  001C52  6FA4               	movwf	efgtoa@mode& (0+255),b
  4142  001C54                     
  4143                           ; BSR set to: 0
  4144                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4145  001C54  C0A4  F0A3         	movff	efgtoa@mode,efgtoa@nmode
  4146  001C58                     
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4149  001C58  0E67               	movlw	103
  4150  001C5A  19A4               	xorwf	efgtoa@mode& (0+255),w,b
  4151  001C5C  A4D8               	btfss	status,2,c
  4152  001C5E  EF33  F00E         	goto	u9701
  4153  001C62  EF35  F00E         	goto	u9700
  4154  001C66                     u9701:
  4155  001C66  EF5B  F00E         	goto	l7381
  4156  001C6A                     u9700:
  4157  001C6A                     
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4160  001C6A  51F7               	movf	_prec& (0+255),w,b
  4161  001C6C  11F8               	iorwf	(_prec+1)& (0+255),w,b
  4162  001C6E  A4D8               	btfss	status,2,c
  4163  001C70  EF3C  F00E         	goto	u9711
  4164  001C74  EF3E  F00E         	goto	u9710
  4165  001C78                     u9711:
  4166  001C78  EF42  F00E         	goto	l7377
  4167  001C7C                     u9710:
  4168  001C7C                     
  4169                           ; BSR set to: 0
  4170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4171  001C7C  0E00               	movlw	0
  4172  001C7E  6FF8               	movwf	(_prec+1)& (0+255),b
  4173  001C80  0E01               	movlw	1
  4174  001C82  6FF7               	movwf	_prec& (0+255),b
  4175  001C84                     l7377:
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4179  001C84  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  4180  001C86  EF4F  F00E         	goto	u9720
  4181  001C8A  51F8               	movf	(_prec+1)& (0+255),w,b
  4182  001C8C  E106               	bnz	u9721
  4183  001C8E  05F7               	decf	_prec& (0+255),w,b
  4184  001C90  B0D8               	btfsc	status,0,c
  4185  001C92  EF4D  F00E         	goto	u9721
  4186  001C96  EF4F  F00E         	goto	u9720
  4187  001C9A                     u9721:
  4188  001C9A  EF55  F00E         	goto	l1014
  4189  001C9E                     u9720:
  4190  001C9E                     l7379:
  4191                           
  4192                           ; BSR set to: 0
  4193  001C9E  0E00               	movlw	0
  4194  001CA0  6FA0               	movwf	(efgtoa@p+1)& (0+255),b
  4195  001CA2  0E06               	movlw	6
  4196  001CA4  6F9F               	movwf	efgtoa@p& (0+255),b
  4197  001CA6  EF64  F00E         	goto	l7387
  4198  001CAA                     l1014:
  4199                           
  4200                           ; BSR set to: 0
  4201  001CAA  C0F7  F09F         	movff	_prec,efgtoa@p
  4202  001CAE  C0F8  F0A0         	movff	_prec+1,efgtoa@p+1
  4203  001CB2  EF64  F00E         	goto	l7387
  4204  001CB6                     l7381:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4208  001CB6  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  4209  001CB8  EF60  F00E         	goto	u9731
  4210  001CBC  EF62  F00E         	goto	u9730
  4211  001CC0                     u9731:
  4212  001CC0  EF4F  F00E         	goto	l7379
  4213  001CC4                     u9730:
  4214  001CC4  EF55  F00E         	goto	l1014
  4215  001CC8                     l7387:
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4219  001CC8  0E67               	movlw	103
  4220  001CCA  19A4               	xorwf	efgtoa@mode& (0+255),w,b
  4221  001CCC  A4D8               	btfss	status,2,c
  4222  001CCE  EF6B  F00E         	goto	u9741
  4223  001CD2  EF6D  F00E         	goto	u9740
  4224  001CD6                     u9741:
  4225  001CD6  EF9C  F00E         	goto	l7397
  4226  001CDA                     u9740:
  4227  001CDA                     
  4228                           ; BSR set to: 0
  4229                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4230  001CDA  AFB4               	btfss	(efgtoa@e+1)& (0+255),7,b
  4231  001CDC  EF7B  F00E         	goto	u9750
  4232  001CE0  0EFC               	movlw	252
  4233  001CE2  5DB3               	subwf	efgtoa@e& (0+255),w,b
  4234  001CE4  0EFF               	movlw	255
  4235  001CE6  59B4               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4236  001CE8  A0D8               	btfss	status,0,c
  4237  001CEA  EF79  F00E         	goto	u9751
  4238  001CEE  EF7B  F00E         	goto	u9750
  4239  001CF2                     u9751:
  4240  001CF2  EF9A  F00E         	goto	l7395
  4241  001CF6                     u9750:
  4242  001CF6                     
  4243                           ; BSR set to: 0
  4244  001CF6  0EFF               	movlw	255
  4245  001CF8  6F84               	movwf	??_efgtoa& (0+255),b
  4246  001CFA  0EFF               	movlw	255
  4247  001CFC  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  4248  001CFE  C09F  F086         	movff	efgtoa@p,??_efgtoa+2
  4249  001D02  C0A0  F087         	movff	efgtoa@p+1,??_efgtoa+3
  4250  001D06  5184               	movf	??_efgtoa& (0+255),w,b
  4251  001D08  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  4252  001D0A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  4253  001D0C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4254  001D0E  51B3               	movf	efgtoa@e& (0+255),w,b
  4255  001D10  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  4256  001D12  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  4257  001D14  0A80               	xorlw	128
  4258  001D16  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  4259  001D18  51B4               	movf	(efgtoa@e+1)& (0+255),w,b
  4260  001D1A  0A80               	xorlw	128
  4261  001D1C  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4262  001D1E  A0D8               	btfss	status,0,c
  4263  001D20  EF94  F00E         	goto	u9761
  4264  001D24  EF96  F00E         	goto	u9760
  4265  001D28                     u9761:
  4266  001D28  EF9A  F00E         	goto	l7395
  4267  001D2C                     u9760:
  4268  001D2C                     
  4269                           ; BSR set to: 0
  4270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4271  001D2C  0E66               	movlw	102
  4272  001D2E  6FA3               	movwf	efgtoa@nmode& (0+255),b
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4275  001D30  EF9C  F00E         	goto	l7397
  4276  001D34                     l7395:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4280  001D34  0E65               	movlw	101
  4281  001D36  6FA3               	movwf	efgtoa@nmode& (0+255),b
  4282  001D38                     l7397:
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4286  001D38  C09F  F095         	movff	efgtoa@p,efgtoa@m
  4287  001D3C  C0A0  F096         	movff	efgtoa@p+1,efgtoa@m+1
  4288  001D40                     
  4289                           ; BSR set to: 0
  4290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4291  001D40  0E67               	movlw	103
  4292  001D42  19A4               	xorwf	efgtoa@mode& (0+255),w,b
  4293  001D44  A4D8               	btfss	status,2,c
  4294  001D46  EFA7  F00E         	goto	u9771
  4295  001D4A  EFA9  F00E         	goto	u9770
  4296  001D4E                     u9771:
  4297  001D4E  EFB9  F00E         	goto	l7405
  4298  001D52                     u9770:
  4299  001D52                     
  4300                           ; BSR set to: 0
  4301  001D52  0E66               	movlw	102
  4302  001D54  19A3               	xorwf	efgtoa@nmode& (0+255),w,b
  4303  001D56  A4D8               	btfss	status,2,c
  4304  001D58  EFB0  F00E         	goto	u9781
  4305  001D5C  EFB2  F00E         	goto	u9780
  4306  001D60                     u9781:
  4307  001D60  EFBB  F00E         	goto	l7407
  4308  001D64                     u9780:
  4309  001D64                     
  4310                           ; BSR set to: 0
  4311  001D64  BFB4               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4312  001D66  EFB9  F00E         	goto	u9790
  4313  001D6A  EFB7  F00E         	goto	u9791
  4314  001D6E                     u9791:
  4315  001D6E  EFBB  F00E         	goto	l7407
  4316  001D72                     u9790:
  4317  001D72                     l7405:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4321  001D72  4B95               	infsnz	efgtoa@m& (0+255),f,b
  4322  001D74  2B96               	incf	(efgtoa@m+1)& (0+255),f,b
  4323  001D76                     l7407:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4327  001D76  0E66               	movlw	102
  4328  001D78  19A3               	xorwf	efgtoa@nmode& (0+255),w,b
  4329  001D7A  A4D8               	btfss	status,2,c
  4330  001D7C  EFC2  F00E         	goto	u9801
  4331  001D80  EFC4  F00E         	goto	u9800
  4332  001D84                     u9801:
  4333  001D84  EFE4  F00E         	goto	l7417
  4334  001D88                     u9800:
  4335  001D88                     
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4338  001D88  BFB4               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4339  001D8A  EFCB  F00E         	goto	u9810
  4340  001D8E  EFC9  F00E         	goto	u9811
  4341  001D92                     u9811:
  4342  001D92  EFD7  F00E         	goto	l7413
  4343  001D96                     u9810:
  4344  001D96                     
  4345                           ; BSR set to: 0
  4346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4347  001D96  0E00               	movlw	0
  4348  001D98  6FB7               	movwf	efgtoa@u& (0+255),b
  4349  001D9A  0E00               	movlw	0
  4350  001D9C  6FB8               	movwf	(efgtoa@u+1)& (0+255),b
  4351  001D9E  0E80               	movlw	128
  4352  001DA0  6FB9               	movwf	(efgtoa@u+2)& (0+255),b
  4353  001DA2  0E3F               	movlw	63
  4354  001DA4  6FBA               	movwf	(efgtoa@u+3)& (0+255),b
  4355                           
  4356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4357  001DA6  0E00               	movlw	0
  4358  001DA8  6FB4               	movwf	(efgtoa@e+1)& (0+255),b
  4359  001DAA  0E00               	movlw	0
  4360  001DAC  6FB3               	movwf	efgtoa@e& (0+255),b
  4361  001DAE                     l7413:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4365  001DAE  0E67               	movlw	103
  4366  001DB0  19A4               	xorwf	efgtoa@mode& (0+255),w,b
  4367  001DB2  B4D8               	btfsc	status,2,c
  4368  001DB4  EFDE  F00E         	goto	u9821
  4369  001DB8  EFE0  F00E         	goto	u9820
  4370  001DBC                     u9821:
  4371  001DBC  EFE4  F00E         	goto	l7417
  4372  001DC0                     u9820:
  4373  001DC0                     
  4374                           ; BSR set to: 0
  4375                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4376  001DC0  51B3               	movf	efgtoa@e& (0+255),w,b
  4377  001DC2  2795               	addwf	efgtoa@m& (0+255),f,b
  4378  001DC4  51B4               	movf	(efgtoa@e+1)& (0+255),w,b
  4379  001DC6  2396               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4380  001DC8                     l7417:
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4384  001DC8  0E00               	movlw	0
  4385  001DCA  6FAE               	movwf	(efgtoa@i+1)& (0+255),b
  4386  001DCC  0E00               	movlw	0
  4387  001DCE  6FAD               	movwf	efgtoa@i& (0+255),b
  4388  001DD0                     
  4389                           ; BSR set to: 0
  4390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4391  001DD0  C0AF  F0A5         	movff	efgtoa@g,efgtoa@h
  4392  001DD4  C0B0  F0A6         	movff	efgtoa@g+1,efgtoa@h+1
  4393  001DD8  C0B1  F0A7         	movff	efgtoa@g+2,efgtoa@h+2
  4394  001DDC  C0B2  F0A8         	movff	efgtoa@g+3,efgtoa@h+3
  4395  001DE0                     
  4396                           ; BSR set to: 0
  4397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4398  001DE0  C0B7  F097         	movff	efgtoa@u,efgtoa@ou
  4399  001DE4  C0B8  F098         	movff	efgtoa@u+1,efgtoa@ou+1
  4400  001DE8  C0B9  F099         	movff	efgtoa@u+2,efgtoa@ou+2
  4401  001DEC  C0BA  F09A         	movff	efgtoa@u+3,efgtoa@ou+3
  4402                           
  4403                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4404  001DF0  EF75  F00F         	goto	l7431
  4405  001DF4                     l7423:
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4409  001DF4  C0A5  F046         	movff	efgtoa@h,___fldiv@b
  4410  001DF8  C0A6  F047         	movff	efgtoa@h+1,___fldiv@b+1
  4411  001DFC  C0A7  F048         	movff	efgtoa@h+2,___fldiv@b+2
  4412  001E00  C0A8  F049         	movff	efgtoa@h+3,___fldiv@b+3
  4413  001E04  C0B7  F04A         	movff	efgtoa@u,___fldiv@a
  4414  001E08  C0B8  F04B         	movff	efgtoa@u+1,___fldiv@a+1
  4415  001E0C  C0B9  F04C         	movff	efgtoa@u+2,___fldiv@a+2
  4416  001E10  C0BA  F04D         	movff	efgtoa@u+3,___fldiv@a+3
  4417  001E14  EC67  F01C         	call	___fldiv	;wreg free
  4418  001E18  C046  F052         	movff	?___fldiv,floorf@x
  4419  001E1C  C047  F053         	movff	?___fldiv+1,floorf@x+1
  4420  001E20  C048  F054         	movff	?___fldiv+2,floorf@x+2
  4421  001E24  C049  F055         	movff	?___fldiv+3,floorf@x+3
  4422  001E28  ECC2  F020         	call	_floorf	;wreg free
  4423  001E2C  C052  F0A9         	movff	?_floorf,efgtoa@l
  4424  001E30  C053  F0AA         	movff	?_floorf+1,efgtoa@l+1
  4425  001E34  C054  F0AB         	movff	?_floorf+2,efgtoa@l+2
  4426  001E38  C055  F0AC         	movff	?_floorf+3,efgtoa@l+3
  4427                           
  4428                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4429  001E3C  C0A9  F052         	movff	efgtoa@l,___fltol@f1
  4430  001E40  C0AA  F053         	movff	efgtoa@l+1,___fltol@f1+1
  4431  001E44  C0AB  F054         	movff	efgtoa@l+2,___fltol@f1+2
  4432  001E48  C0AC  F055         	movff	efgtoa@l+3,___fltol@f1+3
  4433  001E4C  EC83  F025         	call	___fltol	;wreg free
  4434  001E50  C052  F09B         	movff	?___fltol,efgtoa@d
  4435  001E54  C053  F09C         	movff	?___fltol+1,efgtoa@d+1
  4436  001E58                     
  4437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4438  001E58  C0A5  F025         	movff	efgtoa@h,___flsub@b
  4439  001E5C  C0A6  F026         	movff	efgtoa@h+1,___flsub@b+1
  4440  001E60  C0A7  F027         	movff	efgtoa@h+2,___flsub@b+2
  4441  001E64  C0A8  F028         	movff	efgtoa@h+3,___flsub@b+3
  4442  001E68  C0B7  F031         	movff	efgtoa@u,___flmul@a
  4443  001E6C  C0B8  F032         	movff	efgtoa@u+1,___flmul@a+1
  4444  001E70  C0B9  F033         	movff	efgtoa@u+2,___flmul@a+2
  4445  001E74  C0BA  F034         	movff	efgtoa@u+3,___flmul@a+3
  4446  001E78  C0A9  F02D         	movff	efgtoa@l,___flmul@b
  4447  001E7C  C0AA  F02E         	movff	efgtoa@l+1,___flmul@b+1
  4448  001E80  C0AB  F02F         	movff	efgtoa@l+2,___flmul@b+2
  4449  001E84  C0AC  F030         	movff	efgtoa@l+3,___flmul@b+3
  4450  001E88  EC52  F01A         	call	___flmul	;wreg free
  4451  001E8C  C02D  F029         	movff	?___flmul,___flsub@a
  4452  001E90  C02E  F02A         	movff	?___flmul+1,___flsub@a+1
  4453  001E94  C02F  F02B         	movff	?___flmul+2,___flsub@a+2
  4454  001E98  C030  F02C         	movff	?___flmul+3,___flsub@a+3
  4455  001E9C  EC47  F02D         	call	___flsub	;wreg free
  4456  001EA0  C025  F0A5         	movff	?___flsub,efgtoa@h
  4457  001EA4  C026  F0A6         	movff	?___flsub+1,efgtoa@h+1
  4458  001EA8  C027  F0A7         	movff	?___flsub+2,efgtoa@h+2
  4459  001EAC  C028  F0A8         	movff	?___flsub+3,efgtoa@h+3
  4460  001EB0                     
  4461                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4462  001EB0  C0B7  F046         	movff	efgtoa@u,___fldiv@b
  4463  001EB4  C0B8  F047         	movff	efgtoa@u+1,___fldiv@b+1
  4464  001EB8  C0B9  F048         	movff	efgtoa@u+2,___fldiv@b+2
  4465  001EBC  C0BA  F049         	movff	efgtoa@u+3,___fldiv@b+3
  4466  001EC0  0E00               	movlw	0
  4467  001EC2  6E4A               	movwf	___fldiv@a^0,c
  4468  001EC4  0E00               	movlw	0
  4469  001EC6  6E4B               	movwf	(___fldiv@a+1)^0,c
  4470  001EC8  0E20               	movlw	32
  4471  001ECA  6E4C               	movwf	(___fldiv@a+2)^0,c
  4472  001ECC  0E41               	movlw	65
  4473  001ECE  6E4D               	movwf	(___fldiv@a+3)^0,c
  4474  001ED0  EC67  F01C         	call	___fldiv	;wreg free
  4475  001ED4  C046  F0B7         	movff	?___fldiv,efgtoa@u
  4476  001ED8  C047  F0B8         	movff	?___fldiv+1,efgtoa@u+1
  4477  001EDC  C048  F0B9         	movff	?___fldiv+2,efgtoa@u+2
  4478  001EE0  C049  F0BA         	movff	?___fldiv+3,efgtoa@u+3
  4479  001EE4                     
  4480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4481  001EE4  0100               	movlb	0	; () banked
  4482  001EE6  4BAD               	infsnz	efgtoa@i& (0+255),f,b
  4483  001EE8  2BAE               	incf	(efgtoa@i+1)& (0+255),f,b
  4484  001EEA                     l7431:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4488  001EEA  5195               	movf	efgtoa@m& (0+255),w,b
  4489  001EEC  5DAD               	subwf	efgtoa@i& (0+255),w,b
  4490  001EEE  51AE               	movf	(efgtoa@i+1)& (0+255),w,b
  4491  001EF0  0A80               	xorlw	128
  4492  001EF2  6F84               	movwf	??_efgtoa& (0+255),b
  4493  001EF4  5196               	movf	(efgtoa@m+1)& (0+255),w,b
  4494  001EF6  0A80               	xorlw	128
  4495  001EF8  5984               	subwfb	??_efgtoa& (0+255),w,b
  4496  001EFA  A0D8               	btfss	status,0,c
  4497  001EFC  EF82  F00F         	goto	u9831
  4498  001F00  EF84  F00F         	goto	u9830
  4499  001F04                     u9831:
  4500  001F04  EFFA  F00E         	goto	l7423
  4501  001F08                     u9830:
  4502  001F08                     
  4503                           ; BSR set to: 0
  4504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4505  001F08  C0B7  F02D         	movff	efgtoa@u,___flmul@b
  4506  001F0C  C0B8  F02E         	movff	efgtoa@u+1,___flmul@b+1
  4507  001F10  C0B9  F02F         	movff	efgtoa@u+2,___flmul@b+2
  4508  001F14  C0BA  F030         	movff	efgtoa@u+3,___flmul@b+3
  4509  001F18  0E00               	movlw	0
  4510  001F1A  6E31               	movwf	___flmul@a^0,c
  4511  001F1C  0E00               	movlw	0
  4512  001F1E  6E32               	movwf	(___flmul@a+1)^0,c
  4513  001F20  0EA0               	movlw	160
  4514  001F22  6E33               	movwf	(___flmul@a+2)^0,c
  4515  001F24  0E40               	movlw	64
  4516  001F26  6E34               	movwf	(___flmul@a+3)^0,c
  4517  001F28  EC52  F01A         	call	___flmul	;wreg free
  4518  001F2C  C02D  F0A9         	movff	?___flmul,efgtoa@l
  4519  001F30  C02E  F0AA         	movff	?___flmul+1,efgtoa@l+1
  4520  001F34  C02F  F0AB         	movff	?___flmul+2,efgtoa@l+2
  4521  001F38  C030  F0AC         	movff	?___flmul+3,efgtoa@l+3
  4522  001F3C                     
  4523                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4524  001F3C  C0A5  F046         	movff	efgtoa@h,___flge@ff1
  4525  001F40  C0A6  F047         	movff	efgtoa@h+1,___flge@ff1+1
  4526  001F44  C0A7  F048         	movff	efgtoa@h+2,___flge@ff1+2
  4527  001F48  C0A8  F049         	movff	efgtoa@h+3,___flge@ff1+3
  4528  001F4C  C0A9  F04A         	movff	efgtoa@l,___flge@ff2
  4529  001F50  C0AA  F04B         	movff	efgtoa@l+1,___flge@ff2+1
  4530  001F54  C0AB  F04C         	movff	efgtoa@l+2,___flge@ff2+2
  4531  001F58  C0AC  F04D         	movff	efgtoa@l+3,___flge@ff2+3
  4532  001F5C  EC07  F026         	call	___flge	;wreg free
  4533  001F60  B0D8               	btfsc	status,0,c
  4534  001F62  EFB5  F00F         	goto	u9841
  4535  001F66  EFB7  F00F         	goto	u9840
  4536  001F6A                     u9841:
  4537  001F6A  EFC2  F00F         	goto	l7439
  4538  001F6E                     u9840:
  4539  001F6E                     
  4540                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4541  001F6E  0E00               	movlw	0
  4542  001F70  0100               	movlb	0	; () banked
  4543  001F72  6FA9               	movwf	efgtoa@l& (0+255),b
  4544  001F74  0E00               	movlw	0
  4545  001F76  6FAA               	movwf	(efgtoa@l+1)& (0+255),b
  4546  001F78  0E00               	movlw	0
  4547  001F7A  6FAB               	movwf	(efgtoa@l+2)& (0+255),b
  4548  001F7C  0E00               	movlw	0
  4549  001F7E  6FAC               	movwf	(efgtoa@l+3)& (0+255),b
  4550                           
  4551                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4552  001F80  EFEB  F00F         	goto	l7445
  4553  001F84                     l7439:
  4554                           
  4555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4556  001F84  C0A5  F003         	movff	efgtoa@h,___fleq@ff1
  4557  001F88  C0A6  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  4558  001F8C  C0A7  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  4559  001F90  C0A8  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  4560  001F94  C0A9  F007         	movff	efgtoa@l,___fleq@ff2
  4561  001F98  C0AA  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  4562  001F9C  C0AB  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  4563  001FA0  C0AC  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  4564  001FA4  EC36  F02A         	call	___fleq	;wreg free
  4565  001FA8  A0D8               	btfss	status,0,c
  4566  001FAA  EFD9  F00F         	goto	u9851
  4567  001FAE  EFDB  F00F         	goto	u9850
  4568  001FB2                     u9851:
  4569  001FB2  EFEB  F00F         	goto	l7445
  4570  001FB6                     u9850:
  4571  001FB6  0100               	movlb	0	; () banked
  4572  001FB8  B19B               	btfsc	efgtoa@d& (0+255),0,b
  4573  001FBA  EFE1  F00F         	goto	u9861
  4574  001FBE  EFE3  F00F         	goto	u9860
  4575  001FC2                     u9861:
  4576  001FC2  EFEB  F00F         	goto	l7445
  4577  001FC6                     u9860:
  4578  001FC6                     
  4579                           ; BSR set to: 0
  4580                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4581  001FC6  0E00               	movlw	0
  4582  001FC8  6FA9               	movwf	efgtoa@l& (0+255),b
  4583  001FCA  0E00               	movlw	0
  4584  001FCC  6FAA               	movwf	(efgtoa@l+1)& (0+255),b
  4585  001FCE  0E00               	movlw	0
  4586  001FD0  6FAB               	movwf	(efgtoa@l+2)& (0+255),b
  4587  001FD2  0E00               	movlw	0
  4588  001FD4  6FAC               	movwf	(efgtoa@l+3)& (0+255),b
  4589  001FD6                     l7445:
  4590                           
  4591                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4592  001FD6  C0AF  F015         	movff	efgtoa@g,___fladd@b
  4593  001FDA  C0B0  F016         	movff	efgtoa@g+1,___fladd@b+1
  4594  001FDE  C0B1  F017         	movff	efgtoa@g+2,___fladd@b+2
  4595  001FE2  C0B2  F018         	movff	efgtoa@g+3,___fladd@b+3
  4596  001FE6  C0A9  F019         	movff	efgtoa@l,___fladd@a
  4597  001FEA  C0AA  F01A         	movff	efgtoa@l+1,___fladd@a+1
  4598  001FEE  C0AB  F01B         	movff	efgtoa@l+2,___fladd@a+2
  4599  001FF2  C0AC  F01C         	movff	efgtoa@l+3,___fladd@a+3
  4600  001FF6  ECD2  F015         	call	___fladd	;wreg free
  4601  001FFA  C015  F0A5         	movff	?___fladd,efgtoa@h
  4602  001FFE  C016  F0A6         	movff	?___fladd+1,efgtoa@h+1
  4603  002002  C017  F0A7         	movff	?___fladd+2,efgtoa@h+2
  4604  002006  C018  F0A8         	movff	?___fladd+3,efgtoa@h+3
  4605  00200A                     
  4606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4607  00200A  C0A5  F046         	movff	efgtoa@h,___flge@ff1
  4608  00200E  C0A6  F047         	movff	efgtoa@h+1,___flge@ff1+1
  4609  002012  C0A7  F048         	movff	efgtoa@h+2,___flge@ff1+2
  4610  002016  C0A8  F049         	movff	efgtoa@h+3,___flge@ff1+3
  4611  00201A  0E00               	movlw	0
  4612  00201C  6E31               	movwf	___flmul@a^0,c
  4613  00201E  0E00               	movlw	0
  4614  002020  6E32               	movwf	(___flmul@a+1)^0,c
  4615  002022  0E20               	movlw	32
  4616  002024  6E33               	movwf	(___flmul@a+2)^0,c
  4617  002026  0E41               	movlw	65
  4618  002028  6E34               	movwf	(___flmul@a+3)^0,c
  4619  00202A  C097  F02D         	movff	efgtoa@ou,___flmul@b
  4620  00202E  C098  F02E         	movff	efgtoa@ou+1,___flmul@b+1
  4621  002032  C099  F02F         	movff	efgtoa@ou+2,___flmul@b+2
  4622  002036  C09A  F030         	movff	efgtoa@ou+3,___flmul@b+3
  4623  00203A  EC52  F01A         	call	___flmul	;wreg free
  4624  00203E  C02D  F04A         	movff	?___flmul,___flge@ff2
  4625  002042  C02E  F04B         	movff	?___flmul+1,___flge@ff2+1
  4626  002046  C02F  F04C         	movff	?___flmul+2,___flge@ff2+2
  4627  00204A  C030  F04D         	movff	?___flmul+3,___flge@ff2+3
  4628  00204E  EC07  F026         	call	___flge	;wreg free
  4629  002052  A0D8               	btfss	status,0,c
  4630  002054  EF2E  F010         	goto	u9871
  4631  002058  EF30  F010         	goto	u9870
  4632  00205C                     u9871:
  4633  00205C  EF59  F010         	goto	l7457
  4634  002060                     u9870:
  4635  002060                     
  4636                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  4637  002060  0100               	movlb	0	; () banked
  4638  002062  4BB3               	infsnz	efgtoa@e& (0+255),f,b
  4639  002064  2BB4               	incf	(efgtoa@e+1)& (0+255),f,b
  4640  002066                     
  4641                           ; BSR set to: 0
  4642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4643  002066  C097  F02D         	movff	efgtoa@ou,___flmul@b
  4644  00206A  C098  F02E         	movff	efgtoa@ou+1,___flmul@b+1
  4645  00206E  C099  F02F         	movff	efgtoa@ou+2,___flmul@b+2
  4646  002072  C09A  F030         	movff	efgtoa@ou+3,___flmul@b+3
  4647  002076  0E00               	movlw	0
  4648  002078  6E31               	movwf	___flmul@a^0,c
  4649  00207A  0E00               	movlw	0
  4650  00207C  6E32               	movwf	(___flmul@a+1)^0,c
  4651  00207E  0E20               	movlw	32
  4652  002080  6E33               	movwf	(___flmul@a+2)^0,c
  4653  002082  0E41               	movlw	65
  4654  002084  6E34               	movwf	(___flmul@a+3)^0,c
  4655  002086  EC52  F01A         	call	___flmul	;wreg free
  4656  00208A  C02D  F097         	movff	?___flmul,efgtoa@ou
  4657  00208E  C02E  F098         	movff	?___flmul+1,efgtoa@ou+1
  4658  002092  C02F  F099         	movff	?___flmul+2,efgtoa@ou+2
  4659  002096  C030  F09A         	movff	?___flmul+3,efgtoa@ou+3
  4660  00209A                     
  4661                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4662  00209A  0E66               	movlw	102
  4663  00209C  0100               	movlb	0	; () banked
  4664  00209E  19A3               	xorwf	efgtoa@nmode& (0+255),w,b
  4665  0020A0  A4D8               	btfss	status,2,c
  4666  0020A2  EF55  F010         	goto	u9881
  4667  0020A6  EF57  F010         	goto	u9880
  4668  0020AA                     u9881:
  4669  0020AA  EF59  F010         	goto	l7457
  4670  0020AE                     u9880:
  4671  0020AE                     
  4672                           ; BSR set to: 0
  4673                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  4674  0020AE  4B95               	infsnz	efgtoa@m& (0+255),f,b
  4675  0020B0  2B96               	incf	(efgtoa@m+1)& (0+255),f,b
  4676  0020B2                     l7457:
  4677                           
  4678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4679  0020B2  C097  F0B7         	movff	efgtoa@ou,efgtoa@u
  4680  0020B6  C098  F0B8         	movff	efgtoa@ou+1,efgtoa@u+1
  4681  0020BA  C099  F0B9         	movff	efgtoa@ou+2,efgtoa@u+2
  4682  0020BE  C09A  F0BA         	movff	efgtoa@ou+3,efgtoa@u+3
  4683  0020C2                     
  4684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4685  0020C2  0E65               	movlw	101
  4686  0020C4  0100               	movlb	0	; () banked
  4687  0020C6  19A3               	xorwf	efgtoa@nmode& (0+255),w,b
  4688  0020C8  B4D8               	btfsc	status,2,c
  4689  0020CA  EF69  F010         	goto	u9891
  4690  0020CE  EF6B  F010         	goto	u9890
  4691  0020D2                     u9891:
  4692  0020D2  EF71  F010         	goto	l7463
  4693  0020D6                     u9890:
  4694  0020D6                     
  4695                           ; BSR set to: 0
  4696  0020D6  C0B3  F093         	movff	efgtoa@e,efgtoa@ne
  4697  0020DA  C0B4  F094         	movff	efgtoa@e+1,efgtoa@ne+1
  4698  0020DE  EF75  F010         	goto	l1042
  4699  0020E2                     l7463:
  4700                           
  4701                           ; BSR set to: 0
  4702  0020E2  0E00               	movlw	0
  4703  0020E4  6F94               	movwf	(efgtoa@ne+1)& (0+255),b
  4704  0020E6  0E00               	movlw	0
  4705  0020E8  6F93               	movwf	efgtoa@ne& (0+255),b
  4706  0020EA                     l1042:
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4710  0020EA  0E00               	movlw	0
  4711  0020EC  6F92               	movwf	(efgtoa@pp+1)& (0+255),b
  4712  0020EE  0E00               	movlw	0
  4713  0020F0  6F91               	movwf	efgtoa@pp& (0+255),b
  4714                           
  4715                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4716  0020F2  0E00               	movlw	0
  4717  0020F4  6F90               	movwf	(efgtoa@t+1)& (0+255),b
  4718  0020F6  0E00               	movlw	0
  4719  0020F8  6F8F               	movwf	efgtoa@t& (0+255),b
  4720                           
  4721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4722  0020FA  0E00               	movlw	0
  4723  0020FC  6FAE               	movwf	(efgtoa@i+1)& (0+255),b
  4724  0020FE  0E00               	movlw	0
  4725  002100  6FAD               	movwf	efgtoa@i& (0+255),b
  4726                           
  4727                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4728  002102  EF71  F011         	goto	l7513
  4729  002106                     l7465:
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4733  002106  C0A5  F046         	movff	efgtoa@h,___fldiv@b
  4734  00210A  C0A6  F047         	movff	efgtoa@h+1,___fldiv@b+1
  4735  00210E  C0A7  F048         	movff	efgtoa@h+2,___fldiv@b+2
  4736  002112  C0A8  F049         	movff	efgtoa@h+3,___fldiv@b+3
  4737  002116  C0B7  F04A         	movff	efgtoa@u,___fldiv@a
  4738  00211A  C0B8  F04B         	movff	efgtoa@u+1,___fldiv@a+1
  4739  00211E  C0B9  F04C         	movff	efgtoa@u+2,___fldiv@a+2
  4740  002122  C0BA  F04D         	movff	efgtoa@u+3,___fldiv@a+3
  4741  002126  EC67  F01C         	call	___fldiv	;wreg free
  4742  00212A  C046  F052         	movff	?___fldiv,floorf@x
  4743  00212E  C047  F053         	movff	?___fldiv+1,floorf@x+1
  4744  002132  C048  F054         	movff	?___fldiv+2,floorf@x+2
  4745  002136  C049  F055         	movff	?___fldiv+3,floorf@x+3
  4746  00213A  ECC2  F020         	call	_floorf	;wreg free
  4747  00213E  C052  F0A9         	movff	?_floorf,efgtoa@l
  4748  002142  C053  F0AA         	movff	?_floorf+1,efgtoa@l+1
  4749  002146  C054  F0AB         	movff	?_floorf+2,efgtoa@l+2
  4750  00214A  C055  F0AC         	movff	?_floorf+3,efgtoa@l+3
  4751                           
  4752                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4753  00214E  C0A9  F052         	movff	efgtoa@l,___fltol@f1
  4754  002152  C0AA  F053         	movff	efgtoa@l+1,___fltol@f1+1
  4755  002156  C0AB  F054         	movff	efgtoa@l+2,___fltol@f1+2
  4756  00215A  C0AC  F055         	movff	efgtoa@l+3,___fltol@f1+3
  4757  00215E  EC83  F025         	call	___fltol	;wreg free
  4758  002162  C052  F09B         	movff	?___fltol,efgtoa@d
  4759  002166  C053  F09C         	movff	?___fltol+1,efgtoa@d+1
  4760  00216A                     
  4761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4762  00216A  B85A               	btfsc	_flags^0,4,c
  4763  00216C  EFBA  F010         	goto	u9901
  4764  002170  EFBC  F010         	goto	u9900
  4765  002174                     u9901:
  4766  002174  EFDA  F010         	goto	l7477
  4767  002178                     u9900:
  4768  002178  0100               	movlb	0	; () banked
  4769  00217A  519B               	movf	efgtoa@d& (0+255),w,b
  4770  00217C  119C               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4771  00217E  A4D8               	btfss	status,2,c
  4772  002180  EFC4  F010         	goto	u9911
  4773  002184  EFC6  F010         	goto	u9910
  4774  002188                     u9911:
  4775  002188  EFDA  F010         	goto	l7477
  4776  00218C                     u9910:
  4777  00218C                     
  4778                           ; BSR set to: 0
  4779  00218C  0E67               	movlw	103
  4780  00218E  19A4               	xorwf	efgtoa@mode& (0+255),w,b
  4781  002190  A4D8               	btfss	status,2,c
  4782  002192  EFCD  F010         	goto	u9921
  4783  002196  EFCF  F010         	goto	u9920
  4784  00219A                     u9921:
  4785  00219A  EFDA  F010         	goto	l7477
  4786  00219E                     u9920:
  4787  00219E                     
  4788                           ; BSR set to: 0
  4789  00219E  BF94               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4790  0021A0  EFD6  F010         	goto	u9930
  4791  0021A4  EFD4  F010         	goto	u9931
  4792  0021A8                     u9931:
  4793  0021A8  EFDA  F010         	goto	l7477
  4794  0021AC                     u9930:
  4795  0021AC                     
  4796                           ; BSR set to: 0
  4797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4798  0021AC  4B8F               	infsnz	efgtoa@t& (0+255),f,b
  4799  0021AE  2B90               	incf	(efgtoa@t+1)& (0+255),f,b
  4800                           
  4801                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4802  0021B0  EF25  F011         	goto	l7505
  4803  0021B4                     l7477:
  4804                           
  4805                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4806  0021B4  0100               	movlb	0	; () banked
  4807  0021B6  5191               	movf	efgtoa@pp& (0+255),w,b
  4808  0021B8  1192               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4809  0021BA  A4D8               	btfss	status,2,c
  4810  0021BC  EFE2  F010         	goto	u9941
  4811  0021C0  EFE4  F010         	goto	u9940
  4812  0021C4                     u9941:
  4813  0021C4  EF0E  F011         	goto	l7497
  4814  0021C8                     u9940:
  4815  0021C8                     
  4816                           ; BSR set to: 0
  4817  0021C8  BF94               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4818  0021CA  EFEB  F010         	goto	u9950
  4819  0021CE  EFE9  F010         	goto	u9951
  4820  0021D2                     u9951:
  4821  0021D2  EF0E  F011         	goto	l7497
  4822  0021D6                     u9950:
  4823  0021D6                     
  4824                           ; BSR set to: 0
  4825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4826  0021D6  0E3E               	movlw	low _dbuf
  4827  0021D8  25B5               	addwf	efgtoa@n& (0+255),w,b
  4828  0021DA  6ED9               	movwf	fsr2l,c
  4829  0021DC  0E01               	movlw	high _dbuf
  4830  0021DE  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4831  0021E0  6EDA               	movwf	fsr2h,c
  4832  0021E2  0E2E               	movlw	46
  4833  0021E4  6EDF               	movwf	indf2,c
  4834  0021E6                     
  4835                           ; BSR set to: 0
  4836  0021E6  4BB5               	infsnz	efgtoa@n& (0+255),f,b
  4837  0021E8  2BB6               	incf	(efgtoa@n+1)& (0+255),f,b
  4838  0021EA                     
  4839                           ; BSR set to: 0
  4840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4841  0021EA  07A1               	decf	efgtoa@w& (0+255),f,b
  4842  0021EC  A0D8               	btfss	status,0,c
  4843  0021EE  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  4844  0021F0                     
  4845                           ; BSR set to: 0
  4846                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4847  0021F0  0E00               	movlw	0
  4848  0021F2  6F92               	movwf	(efgtoa@pp+1)& (0+255),b
  4849  0021F4  0E01               	movlw	1
  4850  0021F6  6F91               	movwf	efgtoa@pp& (0+255),b
  4851  0021F8  EF0E  F011         	goto	l7497
  4852  0021FC                     l7489:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4856  0021FC  0E3E               	movlw	low _dbuf
  4857  0021FE  25B5               	addwf	efgtoa@n& (0+255),w,b
  4858  002200  6ED9               	movwf	fsr2l,c
  4859  002202  0E01               	movlw	high _dbuf
  4860  002204  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4861  002206  6EDA               	movwf	fsr2h,c
  4862  002208  0E30               	movlw	48
  4863  00220A  6EDF               	movwf	indf2,c
  4864  00220C                     
  4865                           ; BSR set to: 0
  4866  00220C  4BB5               	infsnz	efgtoa@n& (0+255),f,b
  4867  00220E  2BB6               	incf	(efgtoa@n+1)& (0+255),f,b
  4868  002210                     
  4869                           ; BSR set to: 0
  4870                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4871  002210  07A1               	decf	efgtoa@w& (0+255),f,b
  4872  002212  A0D8               	btfss	status,0,c
  4873  002214  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  4874  002216                     
  4875                           ; BSR set to: 0
  4876                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4877  002216  078F               	decf	efgtoa@t& (0+255),f,b
  4878  002218  A0D8               	btfss	status,0,c
  4879  00221A  0790               	decf	(efgtoa@t+1)& (0+255),f,b
  4880  00221C                     l7497:
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4884  00221C  518F               	movf	efgtoa@t& (0+255),w,b
  4885  00221E  1190               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4886  002220  A4D8               	btfss	status,2,c
  4887  002222  EF15  F011         	goto	u9961
  4888  002226  EF17  F011         	goto	u9960
  4889  00222A                     u9961:
  4890  00222A  EFFE  F010         	goto	l7489
  4891  00222E                     u9960:
  4892  00222E                     
  4893                           ; BSR set to: 0
  4894                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4895  00222E  0E3E               	movlw	low _dbuf
  4896  002230  25B5               	addwf	efgtoa@n& (0+255),w,b
  4897  002232  6ED9               	movwf	fsr2l,c
  4898  002234  0E01               	movlw	high _dbuf
  4899  002236  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4900  002238  6EDA               	movwf	fsr2h,c
  4901  00223A  519B               	movf	efgtoa@d& (0+255),w,b
  4902  00223C  0F30               	addlw	48
  4903  00223E  6EDF               	movwf	indf2,c
  4904  002240                     
  4905                           ; BSR set to: 0
  4906  002240  4BB5               	infsnz	efgtoa@n& (0+255),f,b
  4907  002242  2BB6               	incf	(efgtoa@n+1)& (0+255),f,b
  4908  002244                     
  4909                           ; BSR set to: 0
  4910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4911  002244  07A1               	decf	efgtoa@w& (0+255),f,b
  4912  002246  A0D8               	btfss	status,0,c
  4913  002248  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  4914  00224A                     l7505:
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4918  00224A  C0A5  F025         	movff	efgtoa@h,___flsub@b
  4919  00224E  C0A6  F026         	movff	efgtoa@h+1,___flsub@b+1
  4920  002252  C0A7  F027         	movff	efgtoa@h+2,___flsub@b+2
  4921  002256  C0A8  F028         	movff	efgtoa@h+3,___flsub@b+3
  4922  00225A  C0B7  F031         	movff	efgtoa@u,___flmul@a
  4923  00225E  C0B8  F032         	movff	efgtoa@u+1,___flmul@a+1
  4924  002262  C0B9  F033         	movff	efgtoa@u+2,___flmul@a+2
  4925  002266  C0BA  F034         	movff	efgtoa@u+3,___flmul@a+3
  4926  00226A  C0A9  F02D         	movff	efgtoa@l,___flmul@b
  4927  00226E  C0AA  F02E         	movff	efgtoa@l+1,___flmul@b+1
  4928  002272  C0AB  F02F         	movff	efgtoa@l+2,___flmul@b+2
  4929  002276  C0AC  F030         	movff	efgtoa@l+3,___flmul@b+3
  4930  00227A  EC52  F01A         	call	___flmul	;wreg free
  4931  00227E  C02D  F029         	movff	?___flmul,___flsub@a
  4932  002282  C02E  F02A         	movff	?___flmul+1,___flsub@a+1
  4933  002286  C02F  F02B         	movff	?___flmul+2,___flsub@a+2
  4934  00228A  C030  F02C         	movff	?___flmul+3,___flsub@a+3
  4935  00228E  EC47  F02D         	call	___flsub	;wreg free
  4936  002292  C025  F0A5         	movff	?___flsub,efgtoa@h
  4937  002296  C026  F0A6         	movff	?___flsub+1,efgtoa@h+1
  4938  00229A  C027  F0A7         	movff	?___flsub+2,efgtoa@h+2
  4939  00229E  C028  F0A8         	movff	?___flsub+3,efgtoa@h+3
  4940  0022A2                     
  4941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4942  0022A2  C0B7  F046         	movff	efgtoa@u,___fldiv@b
  4943  0022A6  C0B8  F047         	movff	efgtoa@u+1,___fldiv@b+1
  4944  0022AA  C0B9  F048         	movff	efgtoa@u+2,___fldiv@b+2
  4945  0022AE  C0BA  F049         	movff	efgtoa@u+3,___fldiv@b+3
  4946  0022B2  0E00               	movlw	0
  4947  0022B4  6E4A               	movwf	___fldiv@a^0,c
  4948  0022B6  0E00               	movlw	0
  4949  0022B8  6E4B               	movwf	(___fldiv@a+1)^0,c
  4950  0022BA  0E20               	movlw	32
  4951  0022BC  6E4C               	movwf	(___fldiv@a+2)^0,c
  4952  0022BE  0E41               	movlw	65
  4953  0022C0  6E4D               	movwf	(___fldiv@a+3)^0,c
  4954  0022C2  EC67  F01C         	call	___fldiv	;wreg free
  4955  0022C6  C046  F0B7         	movff	?___fldiv,efgtoa@u
  4956  0022CA  C047  F0B8         	movff	?___fldiv+1,efgtoa@u+1
  4957  0022CE  C048  F0B9         	movff	?___fldiv+2,efgtoa@u+2
  4958  0022D2  C049  F0BA         	movff	?___fldiv+3,efgtoa@u+3
  4959  0022D6                     
  4960                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4961  0022D6  0100               	movlb	0	; () banked
  4962  0022D8  0793               	decf	efgtoa@ne& (0+255),f,b
  4963  0022DA  A0D8               	btfss	status,0,c
  4964  0022DC  0794               	decf	(efgtoa@ne+1)& (0+255),f,b
  4965  0022DE                     
  4966                           ; BSR set to: 0
  4967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4968  0022DE  4BAD               	infsnz	efgtoa@i& (0+255),f,b
  4969  0022E0  2BAE               	incf	(efgtoa@i+1)& (0+255),f,b
  4970  0022E2                     l7513:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4974  0022E2  5195               	movf	efgtoa@m& (0+255),w,b
  4975  0022E4  5DAD               	subwf	efgtoa@i& (0+255),w,b
  4976  0022E6  51AE               	movf	(efgtoa@i+1)& (0+255),w,b
  4977  0022E8  0A80               	xorlw	128
  4978  0022EA  6F84               	movwf	??_efgtoa& (0+255),b
  4979  0022EC  5196               	movf	(efgtoa@m+1)& (0+255),w,b
  4980  0022EE  0A80               	xorlw	128
  4981  0022F0  5984               	subwfb	??_efgtoa& (0+255),w,b
  4982  0022F2  B0D8               	btfsc	status,0,c
  4983  0022F4  EF7E  F011         	goto	u9971
  4984  0022F8  EF80  F011         	goto	u9970
  4985  0022FC                     u9971:
  4986  0022FC  EF8E  F011         	goto	l7517
  4987  002300                     u9970:
  4988  002300                     
  4989                           ; BSR set to: 0
  4990  002300  BFB6               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4991  002302  EF8C  F011         	goto	u9981
  4992  002306  51B6               	movf	(efgtoa@n+1)& (0+255),w,b
  4993  002308  E109               	bnz	u9980
  4994  00230A  0E4B               	movlw	75
  4995  00230C  5DB5               	subwf	efgtoa@n& (0+255),w,b
  4996  00230E  A0D8               	btfss	status,0,c
  4997  002310  EF8C  F011         	goto	u9981
  4998  002314  EF8E  F011         	goto	u9980
  4999  002318                     u9981:
  5000  002318  EF83  F010         	goto	l7465
  5001  00231C                     u9980:
  5002  00231C                     l7517:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5006  00231C  5191               	movf	efgtoa@pp& (0+255),w,b
  5007  00231E  1192               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5008  002320  A4D8               	btfss	status,2,c
  5009  002322  EF95  F011         	goto	u9991
  5010  002326  EF97  F011         	goto	u9990
  5011  00232A                     u9991:
  5012  00232A  EFA8  F011         	goto	l7525
  5013  00232E                     u9990:
  5014  00232E                     
  5015                           ; BSR set to: 0
  5016  00232E  A85A               	btfss	_flags^0,4,c
  5017  002330  EF9C  F011         	goto	u10001
  5018  002334  EF9E  F011         	goto	u10000
  5019  002338                     u10001:
  5020  002338  EFA8  F011         	goto	l7525
  5021  00233C                     u10000:
  5022  00233C                     
  5023                           ; BSR set to: 0
  5024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5025  00233C  0E3E               	movlw	low _dbuf
  5026  00233E  25B5               	addwf	efgtoa@n& (0+255),w,b
  5027  002340  6ED9               	movwf	fsr2l,c
  5028  002342  0E01               	movlw	high _dbuf
  5029  002344  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5030  002346  6EDA               	movwf	fsr2h,c
  5031  002348  0E2E               	movlw	46
  5032  00234A  6EDF               	movwf	indf2,c
  5033  00234C                     
  5034                           ; BSR set to: 0
  5035  00234C  4BB5               	infsnz	efgtoa@n& (0+255),f,b
  5036  00234E  2BB6               	incf	(efgtoa@n+1)& (0+255),f,b
  5037  002350                     l7525:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5041  002350  0E3E               	movlw	low _dbuf
  5042  002352  25B5               	addwf	efgtoa@n& (0+255),w,b
  5043  002354  6ED9               	movwf	fsr2l,c
  5044  002356  0E01               	movlw	high _dbuf
  5045  002358  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5046  00235A  6EDA               	movwf	fsr2h,c
  5047  00235C  0E00               	movlw	0
  5048  00235E  6EDF               	movwf	indf2,c
  5049  002360                     
  5050                           ; BSR set to: 0
  5051                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5052  002360  0E65               	movlw	101
  5053  002362  19A3               	xorwf	efgtoa@nmode& (0+255),w,b
  5054  002364  A4D8               	btfss	status,2,c
  5055  002366  EFB7  F011         	goto	u10011
  5056  00236A  EFB9  F011         	goto	u10010
  5057  00236E                     u10011:
  5058  00236E  EF1F  F00D         	goto	l7327
  5059  002372                     u10010:
  5060  002372                     
  5061                           ; BSR set to: 0
  5062                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5063  002372  0E00               	movlw	0
  5064  002374  6FAE               	movwf	(efgtoa@i+1)& (0+255),b
  5065  002376  0E4F               	movlw	79
  5066  002378  6FAD               	movwf	efgtoa@i& (0+255),b
  5067  00237A                     
  5068                           ; BSR set to: 0
  5069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5070  00237A  0E3E               	movlw	low _dbuf
  5071  00237C  25AD               	addwf	efgtoa@i& (0+255),w,b
  5072  00237E  6ED9               	movwf	fsr2l,c
  5073  002380  0E01               	movlw	high _dbuf
  5074  002382  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5075  002384  6EDA               	movwf	fsr2h,c
  5076  002386  0E00               	movlw	0
  5077  002388  6EDF               	movwf	indf2,c
  5078  00238A                     
  5079                           ; BSR set to: 0
  5080                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5081  00238A  0E00               	movlw	0
  5082  00238C  6F9E               	movwf	(efgtoa@sign+1)& (0+255),b
  5083  00238E  0E00               	movlw	0
  5084  002390  6F9D               	movwf	efgtoa@sign& (0+255),b
  5085  002392                     
  5086                           ; BSR set to: 0
  5087                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5088  002392  BFB4               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5089  002394  EFD0  F011         	goto	u10020
  5090  002398  EFCE  F011         	goto	u10021
  5091  00239C                     u10021:
  5092  00239C  EFD8  F011         	goto	l7541
  5093  0023A0                     u10020:
  5094  0023A0                     
  5095                           ; BSR set to: 0
  5096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5097  0023A0  0E00               	movlw	0
  5098  0023A2  6F9E               	movwf	(efgtoa@sign+1)& (0+255),b
  5099  0023A4  0E01               	movlw	1
  5100  0023A6  6F9D               	movwf	efgtoa@sign& (0+255),b
  5101  0023A8                     
  5102                           ; BSR set to: 0
  5103                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5104  0023A8  6DB3               	negf	efgtoa@e& (0+255),b
  5105  0023AA  1FB4               	comf	(efgtoa@e+1)& (0+255),f,b
  5106  0023AC  B0D8               	btfsc	status,0,c
  5107  0023AE  2BB4               	incf	(efgtoa@e+1)& (0+255),f,b
  5108  0023B0                     l7541:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5112  0023B0  0E00               	movlw	0
  5113  0023B2  6FA0               	movwf	(efgtoa@p+1)& (0+255),b
  5114  0023B4  0E02               	movlw	2
  5115  0023B6  6F9F               	movwf	efgtoa@p& (0+255),b
  5116                           
  5117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5118  0023B8  EF09  F012         	goto	l7553
  5119  0023BC                     l7543:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5123  0023BC  07AD               	decf	efgtoa@i& (0+255),f,b
  5124  0023BE  A0D8               	btfss	status,0,c
  5125  0023C0  07AE               	decf	(efgtoa@i+1)& (0+255),f,b
  5126  0023C2                     
  5127                           ; BSR set to: 0
  5128                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5129  0023C2  0E3E               	movlw	low _dbuf
  5130  0023C4  25AD               	addwf	efgtoa@i& (0+255),w,b
  5131  0023C6  6ED9               	movwf	fsr2l,c
  5132  0023C8  0E01               	movlw	high _dbuf
  5133  0023CA  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5134  0023CC  6EDA               	movwf	fsr2h,c
  5135  0023CE  C0B3  F003         	movff	efgtoa@e,___awmod@dividend
  5136  0023D2  C0B4  F004         	movff	efgtoa@e+1,___awmod@dividend+1
  5137  0023D6  0E00               	movlw	0
  5138  0023D8  6E06               	movwf	(___awmod@divisor+1)^0,c
  5139  0023DA  0E0A               	movlw	10
  5140  0023DC  6E05               	movwf	___awmod@divisor^0,c
  5141  0023DE  ECDE  F029         	call	___awmod	;wreg free
  5142  0023E2  5003               	movf	?___awmod^0,w,c
  5143  0023E4  0F30               	addlw	48
  5144  0023E6  6EDF               	movwf	indf2,c
  5145  0023E8                     
  5146                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5147  0023E8  C0B3  F003         	movff	efgtoa@e,___awdiv@dividend
  5148  0023EC  C0B4  F004         	movff	efgtoa@e+1,___awdiv@dividend+1
  5149  0023F0  0E00               	movlw	0
  5150  0023F2  6E06               	movwf	(___awdiv@divisor+1)^0,c
  5151  0023F4  0E0A               	movlw	10
  5152  0023F6  6E05               	movwf	___awdiv@divisor^0,c
  5153  0023F8  ECBF  F028         	call	___awdiv	;wreg free
  5154  0023FC  C003  F0B3         	movff	?___awdiv,efgtoa@e
  5155  002400  C004  F0B4         	movff	?___awdiv+1,efgtoa@e+1
  5156  002404                     
  5157                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5158  002404  0100               	movlb	0	; () banked
  5159  002406  079F               	decf	efgtoa@p& (0+255),f,b
  5160  002408  A0D8               	btfss	status,0,c
  5161  00240A  07A0               	decf	(efgtoa@p+1)& (0+255),f,b
  5162  00240C                     
  5163                           ; BSR set to: 0
  5164                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5165  00240C  07A1               	decf	efgtoa@w& (0+255),f,b
  5166  00240E  A0D8               	btfss	status,0,c
  5167  002410  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  5168  002412                     l7553:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5172  002412  51B3               	movf	efgtoa@e& (0+255),w,b
  5173  002414  11B4               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5174  002416  A4D8               	btfss	status,2,c
  5175  002418  EF10  F012         	goto	u10031
  5176  00241C  EF12  F012         	goto	u10030
  5177  002420                     u10031:
  5178  002420  EFDE  F011         	goto	l7543
  5179  002424                     u10030:
  5180  002424                     
  5181                           ; BSR set to: 0
  5182  002424  BFA0               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5183  002426  EF1F  F012         	goto	u10040
  5184  00242A  51A0               	movf	(efgtoa@p+1)& (0+255),w,b
  5185  00242C  E106               	bnz	u10041
  5186  00242E  059F               	decf	efgtoa@p& (0+255),w,b
  5187  002430  B0D8               	btfsc	status,0,c
  5188  002432  EF1D  F012         	goto	u10041
  5189  002436  EF1F  F012         	goto	u10040
  5190  00243A                     u10041:
  5191  00243A  EFDE  F011         	goto	l7543
  5192  00243E                     u10040:
  5193  00243E                     
  5194                           ; BSR set to: 0
  5195                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  5196  00243E  07AD               	decf	efgtoa@i& (0+255),f,b
  5197  002440  A0D8               	btfss	status,0,c
  5198  002442  07AE               	decf	(efgtoa@i+1)& (0+255),f,b
  5199  002444                     
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5202  002444  519D               	movf	efgtoa@sign& (0+255),w,b
  5203  002446  119E               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5204  002448  A4D8               	btfss	status,2,c
  5205  00244A  EF29  F012         	goto	u10051
  5206  00244E  EF2B  F012         	goto	u10050
  5207  002452                     u10051:
  5208  002452  EF31  F012         	goto	l7563
  5209  002456                     u10050:
  5210  002456                     
  5211                           ; BSR set to: 0
  5212  002456  0E00               	movlw	0
  5213  002458  6F8C               	movwf	(_efgtoa$1375+1)& (0+255),b
  5214  00245A  0E2B               	movlw	43
  5215  00245C  6F8B               	movwf	_efgtoa$1375& (0+255),b
  5216  00245E  EF35  F012         	goto	l7565
  5217  002462                     l7563:
  5218                           
  5219                           ; BSR set to: 0
  5220  002462  0E00               	movlw	0
  5221  002464  6F8C               	movwf	(_efgtoa$1375+1)& (0+255),b
  5222  002466  0E2D               	movlw	45
  5223  002468  6F8B               	movwf	_efgtoa$1375& (0+255),b
  5224  00246A                     l7565:
  5225                           
  5226                           ; BSR set to: 0
  5227  00246A  0E3E               	movlw	low _dbuf
  5228  00246C  25AD               	addwf	efgtoa@i& (0+255),w,b
  5229  00246E  6ED9               	movwf	fsr2l,c
  5230  002470  0E01               	movlw	high _dbuf
  5231  002472  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5232  002474  6EDA               	movwf	fsr2h,c
  5233  002476  C08B  FFDF         	movff	_efgtoa$1375,indf2
  5234  00247A                     
  5235                           ; BSR set to: 0
  5236                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  5237  00247A  07A1               	decf	efgtoa@w& (0+255),f,b
  5238  00247C  A0D8               	btfss	status,0,c
  5239  00247E  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  5240  002480                     
  5241                           ; BSR set to: 0
  5242                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  5243  002480  07AD               	decf	efgtoa@i& (0+255),f,b
  5244  002482  A0D8               	btfss	status,0,c
  5245  002484  07AE               	decf	(efgtoa@i+1)& (0+255),f,b
  5246  002486                     
  5247                           ; BSR set to: 0
  5248  002486  0EBF               	movlw	191
  5249  002488  6F84               	movwf	??_efgtoa& (0+255),b
  5250  00248A  0EFF               	movlw	255
  5251  00248C  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  5252  00248E  5183               	movf	efgtoa@c& (0+255),w,b
  5253  002490  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  5254  002492  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  5255  002494  5184               	movf	??_efgtoa& (0+255),w,b
  5256  002496  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  5257  002498  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  5258  00249A  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5259  00249C  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  5260  00249E  E109               	bnz	u10060
  5261  0024A0  0E1A               	movlw	26
  5262  0024A2  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  5263  0024A4  A0D8               	btfss	status,0,c
  5264  0024A6  EF57  F012         	goto	u10061
  5265  0024AA  EF59  F012         	goto	u10060
  5266  0024AE                     u10061:
  5267  0024AE  EF5F  F012         	goto	l7577
  5268  0024B2                     u10060:
  5269  0024B2                     
  5270                           ; BSR set to: 0
  5271  0024B2  0E00               	movlw	0
  5272  0024B4  6F8E               	movwf	(_efgtoa$1376+1)& (0+255),b
  5273  0024B6  0E65               	movlw	101
  5274  0024B8  6F8D               	movwf	_efgtoa$1376& (0+255),b
  5275  0024BA  EF63  F012         	goto	l7579
  5276  0024BE                     l7577:
  5277                           
  5278                           ; BSR set to: 0
  5279  0024BE  0E00               	movlw	0
  5280  0024C0  6F8E               	movwf	(_efgtoa$1376+1)& (0+255),b
  5281  0024C2  0E45               	movlw	69
  5282  0024C4  6F8D               	movwf	_efgtoa$1376& (0+255),b
  5283  0024C6                     l7579:
  5284                           
  5285                           ; BSR set to: 0
  5286  0024C6  0E3E               	movlw	low _dbuf
  5287  0024C8  25AD               	addwf	efgtoa@i& (0+255),w,b
  5288  0024CA  6ED9               	movwf	fsr2l,c
  5289  0024CC  0E01               	movlw	high _dbuf
  5290  0024CE  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5291  0024D0  6EDA               	movwf	fsr2h,c
  5292  0024D2  C08D  FFDF         	movff	_efgtoa$1376,indf2
  5293  0024D6                     
  5294                           ; BSR set to: 0
  5295                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  5296  0024D6  07A1               	decf	efgtoa@w& (0+255),f,b
  5297  0024D8  A0D8               	btfss	status,0,c
  5298  0024DA  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  5299  0024DC                     
  5300                           ; BSR set to: 0
  5301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5302  0024DC  0E3E               	movlw	low _dbuf
  5303  0024DE  25B5               	addwf	efgtoa@n& (0+255),w,b
  5304  0024E0  6E03               	movwf	strcpy@dest^0,c
  5305  0024E2  0E01               	movlw	high _dbuf
  5306  0024E4  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5307  0024E6  6E04               	movwf	(strcpy@dest+1)^0,c
  5308  0024E8  0E3E               	movlw	low _dbuf
  5309  0024EA  25AD               	addwf	efgtoa@i& (0+255),w,b
  5310  0024EC  6E05               	movwf	strcpy@src^0,c
  5311  0024EE  0E01               	movlw	high _dbuf
  5312  0024F0  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5313  0024F2  6E06               	movwf	(strcpy@src+1)^0,c
  5314  0024F4  EC52  F02C         	call	_strcpy	;wreg free
  5315  0024F8  EF1F  F00D         	goto	l7327
  5316  0024FC                     l998:
  5317  0024FC  0012               	return		;funcret
  5318  0024FE                     __end_of_efgtoa:
  5319                           	callstack 0
  5320                           
  5321 ;; *************** function _tolower *****************
  5322 ;; Defined at:
  5323 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  c               2    8[COMRAM] int 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  2    8[COMRAM] int 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5337 ;;      Params:         2       0       0       0       0       0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5339 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5340 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5341 ;;Total ram usage:        6 bytes
  5342 ;; Hardware stack levels used: 1
  5343 ;; Hardware stack levels required when called: 3
  5344 ;; This function calls:
  5345 ;;		_isupper
  5346 ;; This function is called by:
  5347 ;;		_efgtoa
  5348 ;;		_vfpfcnvrt
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text10
  5353  005A48                     __ptext10:
  5354                           	callstack 0
  5355  005A48                     _tolower:
  5356                           	callstack 24
  5357  005A48  0EBF               	movlw	191
  5358  005A4A  6E0B               	movwf	??_tolower^0,c
  5359  005A4C  0EFF               	movlw	255
  5360  005A4E  6E0C               	movwf	(??_tolower+1)^0,c
  5361  005A50  C009  F00D         	movff	tolower@c,??_tolower+2
  5362  005A54  C00A  F00E         	movff	tolower@c+1,??_tolower+3
  5363  005A58  500B               	movf	??_tolower^0,w,c
  5364  005A5A  260D               	addwf	(??_tolower+2)^0,f,c
  5365  005A5C  500C               	movf	(??_tolower+1)^0,w,c
  5366  005A5E  220E               	addwfc	(??_tolower+3)^0,f,c
  5367  005A60  500E               	movf	(??_tolower+3)^0,w,c
  5368  005A62  E107               	bnz	u9291
  5369  005A64  0E1A               	movlw	26
  5370  005A66  5C0D               	subwf	(??_tolower+2)^0,w,c
  5371  005A68  B0D8               	btfsc	status,0,c
  5372  005A6A  EF39  F02D         	goto	u9291
  5373  005A6E  EF3B  F02D         	goto	u9290
  5374  005A72                     u9291:
  5375  005A72  EF42  F02D         	goto	l1474
  5376  005A76                     u9290:
  5377  005A76  0E20               	movlw	32
  5378  005A78  1009               	iorwf	tolower@c^0,w,c
  5379  005A7A  6E09               	movwf	?_tolower^0,c
  5380  005A7C  500A               	movf	(tolower@c+1)^0,w,c
  5381  005A7E  6E0A               	movwf	(?_tolower+1)^0,c
  5382  005A80  EF46  F02D         	goto	l1477
  5383  005A84                     l1474:
  5384  005A84  C009  F009         	movff	tolower@c,?_tolower
  5385  005A88  C00A  F00A         	movff	tolower@c+1,?_tolower+1
  5386  005A8C                     l1477:
  5387  005A8C  0012               	return		;funcret
  5388  005A8E                     __end_of_tolower:
  5389                           	callstack 0
  5390                           
  5391 ;; *************** function _isupper *****************
  5392 ;; Defined at:
  5393 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  c               2    2[COMRAM] int 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;		None
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  2    2[COMRAM] int 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5407 ;;      Params:         2       0       0       0       0       0       0       0       0
  5408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5409 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5410 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5411 ;;Total ram usage:        6 bytes
  5412 ;; Hardware stack levels used: 1
  5413 ;; Hardware stack levels required when called: 2
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_efgtoa
  5418 ;;		_vfpfcnvrt
  5419 ;;		_tolower
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text11
  5424  005BE0                     __ptext11:
  5425                           	callstack 0
  5426  005BE0                     _isupper:
  5427                           	callstack 24
  5428  005BE0  0EBF               	movlw	191
  5429  005BE2  6E05               	movwf	??_isupper^0,c
  5430  005BE4  0EFF               	movlw	255
  5431  005BE6  6E06               	movwf	(??_isupper+1)^0,c
  5432  005BE8  C003  F007         	movff	isupper@c,??_isupper+2
  5433  005BEC  C004  F008         	movff	isupper@c+1,??_isupper+3
  5434  005BF0  5005               	movf	??_isupper^0,w,c
  5435  005BF2  2607               	addwf	(??_isupper+2)^0,f,c
  5436  005BF4  5006               	movf	(??_isupper+1)^0,w,c
  5437  005BF6  2208               	addwfc	(??_isupper+3)^0,f,c
  5438  005BF8  5008               	movf	(??_isupper+3)^0,w,c
  5439  005BFA  E10A               	bnz	u8300
  5440  005BFC  0E1A               	movlw	26
  5441  005BFE  5C07               	subwf	(??_isupper+2)^0,w,c
  5442  005C00  A0D8               	btfss	status,0,c
  5443  005C02  EF05  F02E         	goto	u8301
  5444  005C06  EF08  F02E         	goto	u8300
  5445  005C0A                     u8301:
  5446  005C0A  0E01               	movlw	1
  5447  005C0C  EF09  F02E         	goto	u8310
  5448  005C10                     u8300:
  5449  005C10  0E00               	movlw	0
  5450  005C12                     u8310:
  5451  005C12  6E03               	movwf	?_isupper^0,c
  5452  005C14  6A04               	clrf	(?_isupper+1)^0,c
  5453  005C16  0012               	return		;funcret
  5454  005C18                     __end_of_isupper:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function _strcpy *****************
  5458 ;; Defined at:
  5459 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  dest            2    2[COMRAM] PTR unsigned char 
  5462 ;;		 -> dbuf(80), 
  5463 ;;  src             2    4[COMRAM] PTR const unsigned char 
  5464 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  5465 ;;		 -> dbuf(80), 
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  d               2   10[COMRAM] PTR unsigned char 
  5468 ;;		 -> dbuf(80), 
  5469 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5470 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  5471 ;;		 -> dbuf(80), 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  2    2[COMRAM] PTR unsigned char 
  5474 ;; Registers used:
  5475 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5481 ;;      Params:         4       0       0       0       0       0       0       0       0
  5482 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5483 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5484 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5485 ;;Total ram usage:       10 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 2
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_efgtoa
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text12
  5496  0058A4                     __ptext12:
  5497                           	callstack 0
  5498  0058A4                     _strcpy:
  5499                           	callstack 24
  5500  0058A4  C005  F009         	movff	strcpy@src,strcpy@s
  5501  0058A8  C006  F00A         	movff	strcpy@src+1,strcpy@s+1
  5502  0058AC  C003  F00B         	movff	strcpy@dest,strcpy@d
  5503  0058B0  C004  F00C         	movff	strcpy@dest+1,strcpy@d+1
  5504  0058B4                     l7165:
  5505  0058B4  5009               	movf	strcpy@s^0,w,c
  5506  0058B6  6E07               	movwf	??_strcpy^0,c
  5507  0058B8  500A               	movf	(strcpy@s+1)^0,w,c
  5508  0058BA  6E08               	movwf	(??_strcpy+1)^0,c
  5509  0058BC  4A09               	infsnz	strcpy@s^0,f,c
  5510  0058BE  2A0A               	incf	(strcpy@s+1)^0,f,c
  5511  0058C0  C007  FFF6         	movff	??_strcpy,tblptrl
  5512  0058C4  C008  FFF7         	movff	??_strcpy+1,tblptrh
  5513  0058C8  6AF8               	clrf	tblptru,c
  5514  0058CA  C00B  FFD9         	movff	strcpy@d,fsr2l
  5515  0058CE  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  5516  0058D2  4A0B               	infsnz	strcpy@d^0,f,c
  5517  0058D4  2A0C               	incf	(strcpy@d+1)^0,f,c
  5518  0058D6  0E07               	movlw	(high __ramtop+-1)
  5519  0058D8  64F7               	cpfsgt	tblptrh,c
  5520  0058DA  D003               	bra	u9277
  5521  0058DC  0008               	tblrd		*
  5522  0058DE  50F5               	movf	tablat,w,c
  5523  0058E0  D005               	bra	u9270
  5524  0058E2                     u9277:
  5525  0058E2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5526  0058E6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5527  0058EA  50EF               	movf	indf0,w,c
  5528  0058EC                     u9270:
  5529  0058EC  6EDF               	movwf	indf2,c
  5530  0058EE  50DF               	movf	indf2,w,c
  5531  0058F0  A4D8               	btfss	status,2,c
  5532  0058F2  EF7D  F02C         	goto	u9281
  5533  0058F6  EF7F  F02C         	goto	u9280
  5534  0058FA                     u9281:
  5535  0058FA  EF5A  F02C         	goto	l7165
  5536  0058FE                     u9280:
  5537  0058FE  0012               	return		;funcret
  5538  005900                     __end_of_strcpy:
  5539                           	callstack 0
  5540                           
  5541 ;; *************** function _floorf *****************
  5542 ;; Defined at:
  5543 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  x               4   81[COMRAM] float 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  u               4   25[BANK0 ] struct .
  5548 ;;  m               4   19[BANK0 ] unsigned long 
  5549 ;;  e               2   23[BANK0 ] int 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  4   81[COMRAM] float 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2, status,0
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5559 ;;      Params:         4       0       0       0       0       0       0       0       0
  5560 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5561 ;;      Temps:          0       6       0       0       0       0       0       0       0
  5562 ;;      Totals:         4      16       0       0       0       0       0       0       0
  5563 ;;Total ram usage:       20 bytes
  5564 ;; Hardware stack levels used: 1
  5565 ;; Hardware stack levels required when called: 2
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_efgtoa
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text13
  5574  004184                     __ptext13:
  5575                           	callstack 0
  5576  004184                     _floorf:
  5577                           	callstack 24
  5578  004184  C110  F079         	movff	floorf@F526,floorf@u
  5579  004188  C111  F07A         	movff	floorf@F526+1,floorf@u+1
  5580  00418C  C112  F07B         	movff	floorf@F526+2,floorf@u+2
  5581  004190  C113  F07C         	movff	floorf@F526+3,floorf@u+3
  5582  004194  C052  F079         	movff	floorf@x,floorf@u
  5583  004198  C053  F07A         	movff	floorf@x+1,floorf@u+1
  5584  00419C  C054  F07B         	movff	floorf@x+2,floorf@u+2
  5585  0041A0  C055  F07C         	movff	floorf@x+3,floorf@u+3
  5586  0041A4  0E81               	movlw	129
  5587  0041A6  0100               	movlb	0	; () banked
  5588  0041A8  6F6D               	movwf	??_floorf& (0+255),b
  5589  0041AA  0EFF               	movlw	255
  5590  0041AC  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5591  0041AE  C079  F06F         	movff	floorf@u,??_floorf+2
  5592  0041B2  C07A  F070         	movff	floorf@u+1,??_floorf+3
  5593  0041B6  C07B  F071         	movff	floorf@u+2,??_floorf+4
  5594  0041BA  C07C  F072         	movff	floorf@u+3,??_floorf+5
  5595  0041BE  0E18               	movlw	24
  5596  0041C0  EFE7  F020         	goto	u9300
  5597  0041C4                     u9305:
  5598  0041C4  90D8               	bcf	status,0,c
  5599  0041C6  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  5600  0041C8  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5601  0041CA  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5602  0041CC  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5603  0041CE                     u9300:
  5604  0041CE  2EE8               	decfsz	wreg,f,c
  5605  0041D0  EFE2  F020         	goto	u9305
  5606  0041D4  516F               	movf	(??_floorf+2)& (0+255),w,b
  5607  0041D6  256D               	addwf	??_floorf& (0+255),w,b
  5608  0041D8  6F77               	movwf	floorf@e& (0+255),b
  5609  0041DA  0E00               	movlw	0
  5610  0041DC  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  5611  0041DE  6F78               	movwf	(floorf@e+1)& (0+255),b
  5612  0041E0  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5613  0041E2  EFFC  F020         	goto	u9311
  5614  0041E6  5178               	movf	(floorf@e+1)& (0+255),w,b
  5615  0041E8  E109               	bnz	u9310
  5616  0041EA  0E17               	movlw	23
  5617  0041EC  5D77               	subwf	floorf@e& (0+255),w,b
  5618  0041EE  A0D8               	btfss	status,0,c
  5619  0041F0  EFFC  F020         	goto	u9311
  5620  0041F4  EFFE  F020         	goto	u9310
  5621  0041F8                     u9311:
  5622  0041F8  EF08  F021         	goto	l7183
  5623  0041FC                     u9310:
  5624  0041FC                     l7181:
  5625                           
  5626                           ; BSR set to: 0
  5627  0041FC  C052  F052         	movff	floorf@x,?_floorf
  5628  004200  C053  F053         	movff	floorf@x+1,?_floorf+1
  5629  004204  C054  F054         	movff	floorf@x+2,?_floorf+2
  5630  004208  C055  F055         	movff	floorf@x+3,?_floorf+3
  5631  00420C  EFCC  F021         	goto	l1168
  5632  004210                     l7183:
  5633                           
  5634                           ; BSR set to: 0
  5635  004210  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5636  004212  EF0D  F021         	goto	u9321
  5637  004216  EF0F  F021         	goto	u9320
  5638  00421A                     u9321:
  5639  00421A  EF80  F021         	goto	l7193
  5640  00421E                     u9320:
  5641  00421E                     
  5642                           ; BSR set to: 0
  5643  00421E  C077  F06D         	movff	floorf@e,??_floorf
  5644  004222  0EFF               	movlw	255
  5645  004224  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5646  004226  0EFF               	movlw	255
  5647  004228  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5648  00422A  0E7F               	movlw	127
  5649  00422C  6F70               	movwf	(??_floorf+3)& (0+255),b
  5650  00422E  0E00               	movlw	0
  5651  004230  6F71               	movwf	(??_floorf+4)& (0+255),b
  5652  004232                     u9335:
  5653  004232  676D               	tstfsz	??_floorf& (0+255),b
  5654  004234  EF1E  F021         	goto	u9336
  5655  004238  EF26  F021         	goto	u9337
  5656  00423C                     u9336:
  5657  00423C  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  5658  00423E  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5659  004240  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5660  004242  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5661  004244  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5662  004246  2F6D               	decfsz	??_floorf& (0+255),f,b
  5663  004248  EF19  F021         	goto	u9335
  5664  00424C                     u9337:
  5665  00424C  C06E  F073         	movff	??_floorf+1,floorf@m
  5666  004250  C06F  F074         	movff	??_floorf+2,floorf@m+1
  5667  004254  C070  F075         	movff	??_floorf+3,floorf@m+2
  5668  004258  C071  F076         	movff	??_floorf+4,floorf@m+3
  5669  00425C  0100               	movlb	0	; () banked
  5670  00425E  5173               	movf	floorf@m& (0+255),w,b
  5671  004260  1579               	andwf	floorf@u& (0+255),w,b
  5672  004262  6F6D               	movwf	??_floorf& (0+255),b
  5673  004264  5174               	movf	(floorf@m+1)& (0+255),w,b
  5674  004266  157A               	andwf	(floorf@u+1)& (0+255),w,b
  5675  004268  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5676  00426A  5175               	movf	(floorf@m+2)& (0+255),w,b
  5677  00426C  157B               	andwf	(floorf@u+2)& (0+255),w,b
  5678  00426E  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5679  004270  5176               	movf	(floorf@m+3)& (0+255),w,b
  5680  004272  157C               	andwf	(floorf@u+3)& (0+255),w,b
  5681  004274  6F70               	movwf	(??_floorf+3)& (0+255),b
  5682  004276  516D               	movf	??_floorf& (0+255),w,b
  5683  004278  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5684  00427A  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5685  00427C  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5686  00427E  A4D8               	btfss	status,2,c
  5687  004280  EF44  F021         	goto	u9341
  5688  004284  EF46  F021         	goto	u9340
  5689  004288                     u9341:
  5690  004288  EF48  F021         	goto	l7189
  5691  00428C                     u9340:
  5692  00428C  EFFE  F020         	goto	l7181
  5693  004290                     l7189:
  5694                           
  5695                           ; BSR set to: 0
  5696  004290  C079  F06D         	movff	floorf@u,??_floorf
  5697  004294  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5698  004298  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5699  00429C  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5700  0042A0  0E20               	movlw	32
  5701  0042A2  EF58  F021         	goto	u9350
  5702  0042A6                     u9355:
  5703  0042A6  90D8               	bcf	status,0,c
  5704  0042A8  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5705  0042AA  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5706  0042AC  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5707  0042AE  336D               	rrcf	??_floorf& (0+255),f,b
  5708  0042B0                     u9350:
  5709  0042B0  2EE8               	decfsz	wreg,f,c
  5710  0042B2  EF53  F021         	goto	u9355
  5711  0042B6  516D               	movf	??_floorf& (0+255),w,b
  5712  0042B8  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5713  0042BA  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5714  0042BC  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5715  0042BE  B4D8               	btfsc	status,2,c
  5716  0042C0  EF64  F021         	goto	u9361
  5717  0042C4  EF66  F021         	goto	u9360
  5718  0042C8                     u9361:
  5719  0042C8  EF6E  F021         	goto	l1171
  5720  0042CC                     u9360:
  5721  0042CC                     
  5722                           ; BSR set to: 0
  5723  0042CC  5173               	movf	floorf@m& (0+255),w,b
  5724  0042CE  2779               	addwf	floorf@u& (0+255),f,b
  5725  0042D0  5174               	movf	(floorf@m+1)& (0+255),w,b
  5726  0042D2  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  5727  0042D4  5175               	movf	(floorf@m+2)& (0+255),w,b
  5728  0042D6  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  5729  0042D8  5176               	movf	(floorf@m+3)& (0+255),w,b
  5730  0042DA  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  5731  0042DC                     l1171:
  5732                           
  5733                           ; BSR set to: 0
  5734  0042DC  1D73               	comf	floorf@m& (0+255),w,b
  5735  0042DE  6F6D               	movwf	??_floorf& (0+255),b
  5736  0042E0  1D74               	comf	(floorf@m+1)& (0+255),w,b
  5737  0042E2  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5738  0042E4  1D75               	comf	(floorf@m+2)& (0+255),w,b
  5739  0042E6  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5740  0042E8  1D76               	comf	(floorf@m+3)& (0+255),w,b
  5741  0042EA  6F70               	movwf	(??_floorf+3)& (0+255),b
  5742  0042EC  516D               	movf	??_floorf& (0+255),w,b
  5743  0042EE  1779               	andwf	floorf@u& (0+255),f,b
  5744  0042F0  516E               	movf	(??_floorf+1)& (0+255),w,b
  5745  0042F2  177A               	andwf	(floorf@u+1)& (0+255),f,b
  5746  0042F4  516F               	movf	(??_floorf+2)& (0+255),w,b
  5747  0042F6  177B               	andwf	(floorf@u+2)& (0+255),f,b
  5748  0042F8  5170               	movf	(??_floorf+3)& (0+255),w,b
  5749  0042FA  177C               	andwf	(floorf@u+3)& (0+255),f,b
  5750  0042FC  EFC4  F021         	goto	l7201
  5751  004300                     l7193:
  5752                           
  5753                           ; BSR set to: 0
  5754  004300  C079  F06D         	movff	floorf@u,??_floorf
  5755  004304  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5756  004308  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5757  00430C  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5758  004310  0E20               	movlw	32
  5759  004312  EF90  F021         	goto	u9370
  5760  004316                     u9375:
  5761  004316  90D8               	bcf	status,0,c
  5762  004318  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5763  00431A  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5764  00431C  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5765  00431E  336D               	rrcf	??_floorf& (0+255),f,b
  5766  004320                     u9370:
  5767  004320  2EE8               	decfsz	wreg,f,c
  5768  004322  EF8B  F021         	goto	u9375
  5769  004326  516D               	movf	??_floorf& (0+255),w,b
  5770  004328  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5771  00432A  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5772  00432C  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5773  00432E  A4D8               	btfss	status,2,c
  5774  004330  EF9C  F021         	goto	u9381
  5775  004334  EF9E  F021         	goto	u9380
  5776  004338                     u9381:
  5777  004338  EFA8  F021         	goto	l7197
  5778  00433C                     u9380:
  5779  00433C                     
  5780                           ; BSR set to: 0
  5781  00433C  0E00               	movlw	0
  5782  00433E  6F79               	movwf	floorf@u& (0+255),b
  5783  004340  0E00               	movlw	0
  5784  004342  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5785  004344  0E00               	movlw	0
  5786  004346  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5787  004348  0E00               	movlw	0
  5788  00434A  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5789  00434C  EFC4  F021         	goto	l7201
  5790  004350                     l7197:
  5791                           
  5792                           ; BSR set to: 0
  5793  004350  90D8               	bcf	status,0,c
  5794  004352  3579               	rlcf	floorf@u& (0+255),w,b
  5795  004354  6F6D               	movwf	??_floorf& (0+255),b
  5796  004356  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  5797  004358  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5798  00435A  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  5799  00435C  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5800  00435E  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  5801  004360  6F70               	movwf	(??_floorf+3)& (0+255),b
  5802  004362  516D               	movf	??_floorf& (0+255),w,b
  5803  004364  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5804  004366  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5805  004368  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5806  00436A  B4D8               	btfsc	status,2,c
  5807  00436C  EFBA  F021         	goto	u9391
  5808  004370  EFBC  F021         	goto	u9390
  5809  004374                     u9391:
  5810  004374  EFC4  F021         	goto	l7201
  5811  004378                     u9390:
  5812  004378                     
  5813                           ; BSR set to: 0
  5814  004378  0E00               	movlw	0
  5815  00437A  6F79               	movwf	floorf@u& (0+255),b
  5816  00437C  0E00               	movlw	0
  5817  00437E  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5818  004380  0E80               	movlw	128
  5819  004382  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5820  004384  0EBF               	movlw	191
  5821  004386  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5822  004388                     l7201:
  5823                           
  5824                           ; BSR set to: 0
  5825  004388  C079  F052         	movff	floorf@u,?_floorf
  5826  00438C  C07A  F053         	movff	floorf@u+1,?_floorf+1
  5827  004390  C07B  F054         	movff	floorf@u+2,?_floorf+2
  5828  004394  C07C  F055         	movff	floorf@u+3,?_floorf+3
  5829  004398                     l1168:
  5830                           
  5831                           ; BSR set to: 0
  5832  004398  0012               	return		;funcret
  5833  00439A                     __end_of_floorf:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function ___fpclassifyf *****************
  5837 ;; Defined at:
  5838 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  x               4    2[COMRAM] float 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  u               4   12[COMRAM] struct .
  5843 ;;  e               2   10[COMRAM] int 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  2    2[COMRAM] int 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5853 ;;      Params:         4       0       0       0       0       0       0       0       0
  5854 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5855 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5856 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5857 ;;Total ram usage:       14 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; Hardware stack levels required when called: 2
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_efgtoa
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text14
  5868  004D12                     __ptext14:
  5869                           	callstack 0
  5870  004D12                     ___fpclassifyf:
  5871                           	callstack 24
  5872  004D12  C114  F00D         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5873  004D16  C115  F00E         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5874  004D1A  C116  F00F         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5875  004D1E  C117  F010         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5876  004D22  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
  5877  004D26  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5878  004D2A  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5879  004D2E  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5880  004D32  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  5881  004D36  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5882  004D3A  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5883  004D3E  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5884  004D42  0E18               	movlw	24
  5885  004D44  EFA9  F026         	goto	u9200
  5886  004D48                     u9205:
  5887  004D48  90D8               	bcf	status,0,c
  5888  004D4A  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
  5889  004D4C  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
  5890  004D4E  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
  5891  004D50  3207               	rrcf	??___fpclassifyf^0,f,c
  5892  004D52                     u9200:
  5893  004D52  2EE8               	decfsz	wreg,f,c
  5894  004D54  EFA4  F026         	goto	u9205
  5895  004D58  5007               	movf	??___fpclassifyf^0,w,c
  5896  004D5A  6E0B               	movwf	___fpclassifyf@e^0,c
  5897  004D5C  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
  5898  004D5E  500B               	movf	___fpclassifyf@e^0,w,c
  5899  004D60  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5900  004D62  A4D8               	btfss	status,2,c
  5901  004D64  EFB6  F026         	goto	u9211
  5902  004D68  EFB8  F026         	goto	u9210
  5903  004D6C                     u9211:
  5904  004D6C  EFD8  F026         	goto	l7153
  5905  004D70                     u9210:
  5906  004D70  90D8               	bcf	status,0,c
  5907  004D72  340D               	rlcf	___fpclassifyf@u^0,w,c
  5908  004D74  6E07               	movwf	??___fpclassifyf^0,c
  5909  004D76  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5910  004D78  6E08               	movwf	(??___fpclassifyf+1)^0,c
  5911  004D7A  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5912  004D7C  6E09               	movwf	(??___fpclassifyf+2)^0,c
  5913  004D7E  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5914  004D80  6E0A               	movwf	(??___fpclassifyf+3)^0,c
  5915  004D82  5007               	movf	??___fpclassifyf^0,w,c
  5916  004D84  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  5917  004D86  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  5918  004D88  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  5919  004D8A  A4D8               	btfss	status,2,c
  5920  004D8C  EFCA  F026         	goto	u9221
  5921  004D90  EFCC  F026         	goto	u9220
  5922  004D94                     u9221:
  5923  004D94  EFD2  F026         	goto	l7149
  5924  004D98                     u9220:
  5925  004D98  0E00               	movlw	0
  5926  004D9A  6E04               	movwf	(?___fpclassifyf+1)^0,c
  5927  004D9C  0E02               	movlw	2
  5928  004D9E  6E03               	movwf	?___fpclassifyf^0,c
  5929  004DA0  EF07  F027         	goto	l1129
  5930  004DA4                     l7149:
  5931  004DA4  0E00               	movlw	0
  5932  004DA6  6E04               	movwf	(?___fpclassifyf+1)^0,c
  5933  004DA8  0E03               	movlw	3
  5934  004DAA  6E03               	movwf	?___fpclassifyf^0,c
  5935  004DAC  EF07  F027         	goto	l1129
  5936  004DB0                     l7153:
  5937  004DB0  280B               	incf	___fpclassifyf@e^0,w,c
  5938  004DB2  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5939  004DB4  A4D8               	btfss	status,2,c
  5940  004DB6  EFDF  F026         	goto	u9231
  5941  004DBA  EFE1  F026         	goto	u9230
  5942  004DBE                     u9231:
  5943  004DBE  EF03  F027         	goto	l7159
  5944  004DC2                     u9230:
  5945  004DC2  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  5946  004DC6  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5947  004DCA  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5948  004DCE  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5949  004DD2  0E09               	movlw	9
  5950  004DD4                     u9245:
  5951  004DD4  90D8               	bcf	status,0,c
  5952  004DD6  3607               	rlcf	??___fpclassifyf^0,f,c
  5953  004DD8  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
  5954  004DDA  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
  5955  004DDC  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
  5956  004DDE  2EE8               	decfsz	wreg,f,c
  5957  004DE0  EFEA  F026         	goto	u9245
  5958  004DE4  5007               	movf	??___fpclassifyf^0,w,c
  5959  004DE6  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  5960  004DE8  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  5961  004DEA  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  5962  004DEC  B4D8               	btfsc	status,2,c
  5963  004DEE  EFFB  F026         	goto	u9251
  5964  004DF2  EFFE  F026         	goto	u9250
  5965  004DF6                     u9251:
  5966  004DF6  0E01               	movlw	1
  5967  004DF8  EFFF  F026         	goto	u9260
  5968  004DFC                     u9250:
  5969  004DFC  0E00               	movlw	0
  5970  004DFE                     u9260:
  5971  004DFE  6E03               	movwf	?___fpclassifyf^0,c
  5972  004E00  6A04               	clrf	(?___fpclassifyf+1)^0,c
  5973  004E02  EF07  F027         	goto	l1129
  5974  004E06                     l7159:
  5975  004E06  0E00               	movlw	0
  5976  004E08  6E04               	movwf	(?___fpclassifyf+1)^0,c
  5977  004E0A  0E04               	movlw	4
  5978  004E0C  6E03               	movwf	?___fpclassifyf^0,c
  5979  004E0E                     l1129:
  5980  004E0E  0012               	return		;funcret
  5981  004E10                     __end_of___fpclassifyf:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function ___flsub *****************
  5985 ;; Defined at:
  5986 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  b               4   36[COMRAM] int 
  5989 ;;  a               4   40[COMRAM] int 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  4   36[COMRAM] int 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6001 ;;      Params:         8       0       0       0       0       0       0       0       0
  6002 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6004 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6005 ;;Total ram usage:        8 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 3
  6008 ;; This function calls:
  6009 ;;		___fladd
  6010 ;; This function is called by:
  6011 ;;		_main
  6012 ;;		_efgtoa
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text15
  6017  005A8E                     __ptext15:
  6018                           	callstack 0
  6019  005A8E                     ___flsub:
  6020                           	callstack 23
  6021  005A8E  0E00               	movlw	0
  6022  005A90  1A29               	xorwf	___flsub@a^0,f,c
  6023  005A92  0E00               	movlw	0
  6024  005A94  1A2A               	xorwf	(___flsub@a+1)^0,f,c
  6025  005A96  0E00               	movlw	0
  6026  005A98  1A2B               	xorwf	(___flsub@a+2)^0,f,c
  6027  005A9A  0E80               	movlw	128
  6028  005A9C  1A2C               	xorwf	(___flsub@a+3)^0,f,c
  6029  005A9E  C025  F015         	movff	___flsub@b,___fladd@b
  6030  005AA2  C026  F016         	movff	___flsub@b+1,___fladd@b+1
  6031  005AA6  C027  F017         	movff	___flsub@b+2,___fladd@b+2
  6032  005AAA  C028  F018         	movff	___flsub@b+3,___fladd@b+3
  6033  005AAE  C029  F019         	movff	___flsub@a,___fladd@a
  6034  005AB2  C02A  F01A         	movff	___flsub@a+1,___fladd@a+1
  6035  005AB6  C02B  F01B         	movff	___flsub@a+2,___fladd@a+2
  6036  005ABA  C02C  F01C         	movff	___flsub@a+3,___fladd@a+3
  6037  005ABE  ECD2  F015         	call	___fladd	;wreg free
  6038  005AC2  C015  F025         	movff	?___fladd,?___flsub
  6039  005AC6  C016  F026         	movff	?___fladd+1,?___flsub+1
  6040  005ACA  C017  F027         	movff	?___fladd+2,?___flsub+2
  6041  005ACE  C018  F028         	movff	?___fladd+3,?___flsub+3
  6042  005AD2  0012               	return		;funcret
  6043  005AD4                     __end_of___flsub:
  6044                           	callstack 0
  6045                           
  6046 ;; *************** function ___awmod *****************
  6047 ;; Defined at:
  6048 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  dividend        2    2[COMRAM] int 
  6051 ;;  divisor         2    4[COMRAM] int 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  sign            1    7[COMRAM] unsigned char 
  6054 ;;  counter         1    6[COMRAM] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  2    2[COMRAM] int 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6064 ;;      Params:         4       0       0       0       0       0       0       0       0
  6065 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6067 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6068 ;;Total ram usage:        6 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 2
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_efgtoa
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text16
  6079  0053BC                     __ptext16:
  6080                           	callstack 0
  6081  0053BC                     ___awmod:
  6082                           	callstack 24
  6083  0053BC  0E00               	movlw	0
  6084  0053BE  6E08               	movwf	___awmod@sign^0,c
  6085  0053C0  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
  6086  0053C2  EFE7  F029         	goto	u8930
  6087  0053C6  EFE5  F029         	goto	u8931
  6088  0053CA                     u8931:
  6089  0053CA  EFED  F029         	goto	l6997
  6090  0053CE                     u8930:
  6091  0053CE  6C03               	negf	___awmod@dividend^0,c
  6092  0053D0  1E04               	comf	(___awmod@dividend+1)^0,f,c
  6093  0053D2  B0D8               	btfsc	status,0,c
  6094  0053D4  2A04               	incf	(___awmod@dividend+1)^0,f,c
  6095  0053D6  0E01               	movlw	1
  6096  0053D8  6E08               	movwf	___awmod@sign^0,c
  6097  0053DA                     l6997:
  6098  0053DA  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  6099  0053DC  EFF4  F029         	goto	u8940
  6100  0053E0  EFF2  F029         	goto	u8941
  6101  0053E4                     u8941:
  6102  0053E4  EFF8  F029         	goto	l7001
  6103  0053E8                     u8940:
  6104  0053E8  6C05               	negf	___awmod@divisor^0,c
  6105  0053EA  1E06               	comf	(___awmod@divisor+1)^0,f,c
  6106  0053EC  B0D8               	btfsc	status,0,c
  6107  0053EE  2A06               	incf	(___awmod@divisor+1)^0,f,c
  6108  0053F0                     l7001:
  6109  0053F0  5005               	movf	___awmod@divisor^0,w,c
  6110  0053F2  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  6111  0053F4  B4D8               	btfsc	status,2,c
  6112  0053F6  EFFF  F029         	goto	u8951
  6113  0053FA  EF01  F02A         	goto	u8950
  6114  0053FE                     u8951:
  6115  0053FE  EF25  F02A         	goto	l7017
  6116  005402                     u8950:
  6117  005402  0E01               	movlw	1
  6118  005404  6E07               	movwf	___awmod@counter^0,c
  6119  005406  EF09  F02A         	goto	l7007
  6120  00540A                     l7005:
  6121  00540A  90D8               	bcf	status,0,c
  6122  00540C  3605               	rlcf	___awmod@divisor^0,f,c
  6123  00540E  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  6124  005410  2A07               	incf	___awmod@counter^0,f,c
  6125  005412                     l7007:
  6126  005412  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  6127  005414  EF0E  F02A         	goto	u8961
  6128  005418  EF10  F02A         	goto	u8960
  6129  00541C                     u8961:
  6130  00541C  EF05  F02A         	goto	l7005
  6131  005420                     u8960:
  6132  005420                     l7009:
  6133  005420  5005               	movf	___awmod@divisor^0,w,c
  6134  005422  5C03               	subwf	___awmod@dividend^0,w,c
  6135  005424  5006               	movf	(___awmod@divisor+1)^0,w,c
  6136  005426  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  6137  005428  A0D8               	btfss	status,0,c
  6138  00542A  EF19  F02A         	goto	u8971
  6139  00542E  EF1B  F02A         	goto	u8970
  6140  005432                     u8971:
  6141  005432  EF1F  F02A         	goto	l7013
  6142  005436                     u8970:
  6143  005436  5005               	movf	___awmod@divisor^0,w,c
  6144  005438  5E03               	subwf	___awmod@dividend^0,f,c
  6145  00543A  5006               	movf	(___awmod@divisor+1)^0,w,c
  6146  00543C  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  6147  00543E                     l7013:
  6148  00543E  90D8               	bcf	status,0,c
  6149  005440  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  6150  005442  3205               	rrcf	___awmod@divisor^0,f,c
  6151  005444  2E07               	decfsz	___awmod@counter^0,f,c
  6152  005446  EF10  F02A         	goto	l7009
  6153  00544A                     l7017:
  6154  00544A  5008               	movf	___awmod@sign^0,w,c
  6155  00544C  B4D8               	btfsc	status,2,c
  6156  00544E  EF2B  F02A         	goto	u8981
  6157  005452  EF2D  F02A         	goto	u8980
  6158  005456                     u8981:
  6159  005456  EF31  F02A         	goto	l7021
  6160  00545A                     u8980:
  6161  00545A  6C03               	negf	___awmod@dividend^0,c
  6162  00545C  1E04               	comf	(___awmod@dividend+1)^0,f,c
  6163  00545E  B0D8               	btfsc	status,0,c
  6164  005460  2A04               	incf	(___awmod@dividend+1)^0,f,c
  6165  005462                     l7021:
  6166  005462  C003  F003         	movff	___awmod@dividend,?___awmod
  6167  005466  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  6168  00546A  0012               	return		;funcret
  6169  00546C                     __end_of___awmod:
  6170                           	callstack 0
  6171                           
  6172 ;; *************** function ___awdiv *****************
  6173 ;; Defined at:
  6174 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  dividend        2    2[COMRAM] int 
  6177 ;;  divisor         2    4[COMRAM] int 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  quotient        2    8[COMRAM] int 
  6180 ;;  sign            1    7[COMRAM] unsigned char 
  6181 ;;  counter         1    6[COMRAM] unsigned char 
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  2    2[COMRAM] int 
  6184 ;; Registers used:
  6185 ;;		wreg, status,2, status,0
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6191 ;;      Params:         4       0       0       0       0       0       0       0       0
  6192 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6194 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6195 ;;Total ram usage:        8 bytes
  6196 ;; Hardware stack levels used: 1
  6197 ;; Hardware stack levels required when called: 2
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_efgtoa
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text17
  6206  00517E                     __ptext17:
  6207                           	callstack 0
  6208  00517E                     ___awdiv:
  6209                           	callstack 24
  6210  00517E  0E00               	movlw	0
  6211  005180  6E08               	movwf	___awdiv@sign^0,c
  6212  005182  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  6213  005184  EFC8  F028         	goto	u8870
  6214  005188  EFC6  F028         	goto	u8871
  6215  00518C                     u8871:
  6216  00518C  EFCE  F028         	goto	l6953
  6217  005190                     u8870:
  6218  005190  6C05               	negf	___awdiv@divisor^0,c
  6219  005192  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  6220  005194  B0D8               	btfsc	status,0,c
  6221  005196  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  6222  005198  0E01               	movlw	1
  6223  00519A  6E08               	movwf	___awdiv@sign^0,c
  6224  00519C                     l6953:
  6225  00519C  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  6226  00519E  EFD5  F028         	goto	u8880
  6227  0051A2  EFD3  F028         	goto	u8881
  6228  0051A6                     u8881:
  6229  0051A6  EFDB  F028         	goto	l6959
  6230  0051AA                     u8880:
  6231  0051AA  6C03               	negf	___awdiv@dividend^0,c
  6232  0051AC  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  6233  0051AE  B0D8               	btfsc	status,0,c
  6234  0051B0  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  6235  0051B2  0E01               	movlw	1
  6236  0051B4  1A08               	xorwf	___awdiv@sign^0,f,c
  6237  0051B6                     l6959:
  6238  0051B6  0E00               	movlw	0
  6239  0051B8  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  6240  0051BA  0E00               	movlw	0
  6241  0051BC  6E09               	movwf	___awdiv@quotient^0,c
  6242  0051BE  5005               	movf	___awdiv@divisor^0,w,c
  6243  0051C0  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  6244  0051C2  B4D8               	btfsc	status,2,c
  6245  0051C4  EFE6  F028         	goto	u8891
  6246  0051C8  EFE8  F028         	goto	u8890
  6247  0051CC                     u8891:
  6248  0051CC  EF10  F029         	goto	l6981
  6249  0051D0                     u8890:
  6250  0051D0  0E01               	movlw	1
  6251  0051D2  6E07               	movwf	___awdiv@counter^0,c
  6252  0051D4  EFF0  F028         	goto	l6967
  6253  0051D8                     l6965:
  6254  0051D8  90D8               	bcf	status,0,c
  6255  0051DA  3605               	rlcf	___awdiv@divisor^0,f,c
  6256  0051DC  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  6257  0051DE  2A07               	incf	___awdiv@counter^0,f,c
  6258  0051E0                     l6967:
  6259  0051E0  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  6260  0051E2  EFF5  F028         	goto	u8901
  6261  0051E6  EFF7  F028         	goto	u8900
  6262  0051EA                     u8901:
  6263  0051EA  EFEC  F028         	goto	l6965
  6264  0051EE                     u8900:
  6265  0051EE                     l6969:
  6266  0051EE  90D8               	bcf	status,0,c
  6267  0051F0  3609               	rlcf	___awdiv@quotient^0,f,c
  6268  0051F2  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  6269  0051F4  5005               	movf	___awdiv@divisor^0,w,c
  6270  0051F6  5C03               	subwf	___awdiv@dividend^0,w,c
  6271  0051F8  5006               	movf	(___awdiv@divisor+1)^0,w,c
  6272  0051FA  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  6273  0051FC  A0D8               	btfss	status,0,c
  6274  0051FE  EF03  F029         	goto	u8911
  6275  005202  EF05  F029         	goto	u8910
  6276  005206                     u8911:
  6277  005206  EF0A  F029         	goto	l6977
  6278  00520A                     u8910:
  6279  00520A  5005               	movf	___awdiv@divisor^0,w,c
  6280  00520C  5E03               	subwf	___awdiv@dividend^0,f,c
  6281  00520E  5006               	movf	(___awdiv@divisor+1)^0,w,c
  6282  005210  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  6283  005212  8009               	bsf	___awdiv@quotient^0,0,c
  6284  005214                     l6977:
  6285  005214  90D8               	bcf	status,0,c
  6286  005216  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  6287  005218  3205               	rrcf	___awdiv@divisor^0,f,c
  6288  00521A  2E07               	decfsz	___awdiv@counter^0,f,c
  6289  00521C  EFF7  F028         	goto	l6969
  6290  005220                     l6981:
  6291  005220  5008               	movf	___awdiv@sign^0,w,c
  6292  005222  B4D8               	btfsc	status,2,c
  6293  005224  EF16  F029         	goto	u8921
  6294  005228  EF18  F029         	goto	u8920
  6295  00522C                     u8921:
  6296  00522C  EF1C  F029         	goto	l6985
  6297  005230                     u8920:
  6298  005230  6C09               	negf	___awdiv@quotient^0,c
  6299  005232  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  6300  005234  B0D8               	btfsc	status,0,c
  6301  005236  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  6302  005238                     l6985:
  6303  005238  C009  F003         	movff	___awdiv@quotient,?___awdiv
  6304  00523C  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  6305  005240  0012               	return		;funcret
  6306  005242                     __end_of___awdiv:
  6307                           	callstack 0
  6308                           
  6309 ;; *************** function _dtoa *****************
  6310 ;; Defined at:
  6311 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6314 ;;		 -> sprintf@f(11), 
  6315 ;;  d               8   31[COMRAM] long long 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  n               8   55[COMRAM] long long 
  6318 ;;  i               2   63[COMRAM] int 
  6319 ;;  s               2   53[COMRAM] int 
  6320 ;;  w               2   51[COMRAM] int 
  6321 ;;  p               2   49[COMRAM] int 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  2   29[COMRAM] int 
  6324 ;; Registers used:
  6325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6331 ;;      Params:        10       0       0       0       0       0       0       0       0
  6332 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6333 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6334 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6335 ;;Total ram usage:       36 bytes
  6336 ;; Hardware stack levels used: 1
  6337 ;; Hardware stack levels required when called: 6
  6338 ;; This function calls:
  6339 ;;		___aodiv
  6340 ;;		___aomod
  6341 ;;		_abs
  6342 ;;		_pad
  6343 ;; This function is called by:
  6344 ;;		_vfpfcnvrt
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text18
  6349  003C6A                     __ptext18:
  6350                           	callstack 0
  6351  003C6A                     _dtoa:
  6352                           	callstack 21
  6353  003C6A                     
  6354                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6355  003C6A  C020  F038         	movff	dtoa@d,dtoa@n
  6356  003C6E  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  6357  003C72  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  6358  003C76  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  6359  003C7A  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  6360  003C7E  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  6361  003C82  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  6362  003C86  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  6363  003C8A                     
  6364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6365  003C8A  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  6366  003C8C  EF4A  F01E         	goto	u9441
  6367  003C90  EF4D  F01E         	goto	u9440
  6368  003C94                     u9441:
  6369  003C94  0E01               	movlw	1
  6370  003C96  EF4E  F01E         	goto	u9450
  6371  003C9A                     u9440:
  6372  003C9A  0E00               	movlw	0
  6373  003C9C                     u9450:
  6374  003C9C  6E36               	movwf	dtoa@s^0,c
  6375  003C9E  6A37               	clrf	(dtoa@s+1)^0,c
  6376                           
  6377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6378  003CA0  5036               	movf	dtoa@s^0,w,c
  6379  003CA2  1037               	iorwf	(dtoa@s+1)^0,w,c
  6380  003CA4  B4D8               	btfsc	status,2,c
  6381  003CA6  EF57  F01E         	goto	u9461
  6382  003CAA  EF59  F01E         	goto	u9460
  6383  003CAE                     u9461:
  6384  003CAE  EF69  F01E         	goto	l7227
  6385  003CB2                     u9460:
  6386  003CB2                     
  6387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6388  003CB2  1E3F               	comf	(dtoa@n+7)^0,f,c
  6389  003CB4  1E3E               	comf	(dtoa@n+6)^0,f,c
  6390  003CB6  1E3D               	comf	(dtoa@n+5)^0,f,c
  6391  003CB8  1E3C               	comf	(dtoa@n+4)^0,f,c
  6392  003CBA  1E3B               	comf	(dtoa@n+3)^0,f,c
  6393  003CBC  1E3A               	comf	(dtoa@n+2)^0,f,c
  6394  003CBE  1E39               	comf	(dtoa@n+1)^0,f,c
  6395  003CC0  6C38               	negf	dtoa@n^0,c
  6396  003CC2  0E00               	movlw	0
  6397  003CC4  2239               	addwfc	(dtoa@n+1)^0,f,c
  6398  003CC6  223A               	addwfc	(dtoa@n+2)^0,f,c
  6399  003CC8  223B               	addwfc	(dtoa@n+3)^0,f,c
  6400  003CCA  223C               	addwfc	(dtoa@n+4)^0,f,c
  6401  003CCC  223D               	addwfc	(dtoa@n+5)^0,f,c
  6402  003CCE  223E               	addwfc	(dtoa@n+6)^0,f,c
  6403  003CD0  223F               	addwfc	(dtoa@n+7)^0,f,c
  6404  003CD2                     l7227:
  6405                           
  6406                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6407  003CD2  0100               	movlb	0	; () banked
  6408  003CD4  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  6409  003CD6  EF6F  F01E         	goto	u9471
  6410  003CDA  EF71  F01E         	goto	u9470
  6411  003CDE                     u9471:
  6412  003CDE  EF72  F01E         	goto	l7231
  6413  003CE2                     u9470:
  6414  003CE2                     
  6415                           ; BSR set to: 0
  6416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6417  003CE2  925A               	bcf	_flags^0,1,c
  6418  003CE4                     l7231:
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6422  003CE4  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  6423  003CE6  EF7F  F01E         	goto	u9480
  6424  003CEA  51F8               	movf	(_prec+1)& (0+255),w,b
  6425  003CEC  E106               	bnz	u9481
  6426  003CEE  05F7               	decf	_prec& (0+255),w,b
  6427  003CF0  B0D8               	btfsc	status,0,c
  6428  003CF2  EF7D  F01E         	goto	u9481
  6429  003CF6  EF7F  F01E         	goto	u9480
  6430  003CFA                     u9481:
  6431  003CFA  EF85  F01E         	goto	l962
  6432  003CFE                     u9480:
  6433  003CFE                     
  6434                           ; BSR set to: 0
  6435  003CFE  0E00               	movlw	0
  6436  003D00  6E33               	movwf	(dtoa@p+1)^0,c
  6437  003D02  0E01               	movlw	1
  6438  003D04  6E32               	movwf	dtoa@p^0,c
  6439  003D06  EF89  F01E         	goto	l964
  6440  003D0A                     l962:
  6441                           
  6442                           ; BSR set to: 0
  6443  003D0A  C0F7  F032         	movff	_prec,dtoa@p
  6444  003D0E  C0F8  F033         	movff	_prec+1,dtoa@p+1
  6445  003D12                     l964:
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6449  003D12  C134  F034         	movff	_width,dtoa@w
  6450  003D16  C135  F035         	movff	_width+1,dtoa@w+1
  6451  003D1A                     
  6452                           ; BSR set to: 0
  6453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6454  003D1A  5036               	movf	dtoa@s^0,w,c
  6455  003D1C  1037               	iorwf	(dtoa@s+1)^0,w,c
  6456  003D1E  A4D8               	btfss	status,2,c
  6457  003D20  EF94  F01E         	goto	u9491
  6458  003D24  EF96  F01E         	goto	u9490
  6459  003D28                     u9491:
  6460  003D28  EF9D  F01E         	goto	l7239
  6461  003D2C                     u9490:
  6462  003D2C                     
  6463                           ; BSR set to: 0
  6464  003D2C  A45A               	btfss	_flags^0,2,c
  6465  003D2E  EF9B  F01E         	goto	u9501
  6466  003D32  EF9D  F01E         	goto	u9500
  6467  003D36                     u9501:
  6468  003D36  EFA0  F01E         	goto	l7241
  6469  003D3A                     u9500:
  6470  003D3A                     l7239:
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  6474  003D3A  0634               	decf	dtoa@w^0,f,c
  6475  003D3C  A0D8               	btfss	status,0,c
  6476  003D3E  0635               	decf	(dtoa@w+1)^0,f,c
  6477  003D40                     l7241:
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6481  003D40  0E00               	movlw	0
  6482  003D42  6E41               	movwf	(dtoa@i+1)^0,c
  6483  003D44  0E4F               	movlw	79
  6484  003D46  6E40               	movwf	dtoa@i^0,c
  6485  003D48                     
  6486                           ; BSR set to: 0
  6487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6488  003D48  0E00               	movlw	0
  6489  003D4A  0101               	movlb	1	; () banked
  6490  003D4C  6F8D               	movwf	(_dbuf+79)& (0+255),b
  6491                           
  6492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6493  003D4E  EF25  F01F         	goto	l7255
  6494  003D52                     l7245:
  6495                           
  6496                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  6497  003D52  0640               	decf	dtoa@i^0,f,c
  6498  003D54  A0D8               	btfss	status,0,c
  6499  003D56  0641               	decf	(dtoa@i+1)^0,f,c
  6500  003D58                     
  6501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6502  003D58  0E3E               	movlw	low _dbuf
  6503  003D5A  2440               	addwf	dtoa@i^0,w,c
  6504  003D5C  6ED9               	movwf	fsr2l,c
  6505  003D5E  0E01               	movlw	high _dbuf
  6506  003D60  2041               	addwfc	(dtoa@i+1)^0,w,c
  6507  003D62  6EDA               	movwf	fsr2h,c
  6508  003D64  C038  F003         	movff	dtoa@n,___aomod@dividend
  6509  003D68  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  6510  003D6C  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  6511  003D70  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  6512  003D74  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  6513  003D78  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  6514  003D7C  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  6515  003D80  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  6516  003D84  0E0A               	movlw	10
  6517  003D86  6E0B               	movwf	___aomod@divisor^0,c
  6518  003D88  0E00               	movlw	0
  6519  003D8A  6E0C               	movwf	(___aomod@divisor+1)^0,c
  6520  003D8C  0E00               	movlw	0
  6521  003D8E  6E0D               	movwf	(___aomod@divisor+2)^0,c
  6522  003D90  0E00               	movlw	0
  6523  003D92  6E0E               	movwf	(___aomod@divisor+3)^0,c
  6524  003D94  0E00               	movlw	0
  6525  003D96  6E0F               	movwf	(___aomod@divisor+4)^0,c
  6526  003D98  0E00               	movlw	0
  6527  003D9A  6E10               	movwf	(___aomod@divisor+5)^0,c
  6528  003D9C  0E00               	movlw	0
  6529  003D9E  6E11               	movwf	(___aomod@divisor+6)^0,c
  6530  003DA0  0E00               	movlw	0
  6531  003DA2  6E12               	movwf	(___aomod@divisor+7)^0,c
  6532  003DA4  EC26  F024         	call	___aomod	;wreg free
  6533  003DA8  C003  F028         	movff	?___aomod,??_dtoa
  6534  003DAC  C004  F029         	movff	?___aomod+1,??_dtoa+1
  6535  003DB0  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  6536  003DB4  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  6537  003DB8  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  6538  003DBC  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  6539  003DC0  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  6540  003DC4  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  6541  003DC8  C028  F015         	movff	??_dtoa,abs@a
  6542  003DCC  C02A  F016         	movff	??_dtoa+2,abs@a+1
  6543  003DD0  ECD0  F02D         	call	_abs	;wreg free
  6544  003DD4  5015               	movf	?_abs^0,w,c
  6545  003DD6  0F30               	addlw	48
  6546  003DD8  6EDF               	movwf	indf2,c
  6547  003DDA                     
  6548                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  6549  003DDA  0632               	decf	dtoa@p^0,f,c
  6550  003DDC  A0D8               	btfss	status,0,c
  6551  003DDE  0633               	decf	(dtoa@p+1)^0,f,c
  6552  003DE0                     
  6553                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  6554  003DE0  0634               	decf	dtoa@w^0,f,c
  6555  003DE2  A0D8               	btfss	status,0,c
  6556  003DE4  0635               	decf	(dtoa@w+1)^0,f,c
  6557  003DE6                     
  6558                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6559  003DE6  C038  F003         	movff	dtoa@n,___aodiv@dividend
  6560  003DEA  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  6561  003DEE  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  6562  003DF2  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  6563  003DF6  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  6564  003DFA  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  6565  003DFE  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  6566  003E02  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  6567  003E06  0E0A               	movlw	10
  6568  003E08  6E0B               	movwf	___aodiv@divisor^0,c
  6569  003E0A  0E00               	movlw	0
  6570  003E0C  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  6571  003E0E  0E00               	movlw	0
  6572  003E10  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  6573  003E12  0E00               	movlw	0
  6574  003E14  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  6575  003E16  0E00               	movlw	0
  6576  003E18  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  6577  003E1A  0E00               	movlw	0
  6578  003E1C  6E10               	movwf	(___aodiv@divisor+5)^0,c
  6579  003E1E  0E00               	movlw	0
  6580  003E20  6E11               	movwf	(___aodiv@divisor+6)^0,c
  6581  003E22  0E00               	movlw	0
  6582  003E24  6E12               	movwf	(___aodiv@divisor+7)^0,c
  6583  003E26  ECA7  F022         	call	___aodiv	;wreg free
  6584  003E2A  C003  F038         	movff	?___aodiv,dtoa@n
  6585  003E2E  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  6586  003E32  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  6587  003E36  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  6588  003E3A  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  6589  003E3E  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  6590  003E42  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  6591  003E46  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  6592  003E4A                     l7255:
  6593                           
  6594                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6595  003E4A  BE41               	btfsc	(dtoa@i+1)^0,7,c
  6596  003E4C  EF30  F01F         	goto	u9511
  6597  003E50  5041               	movf	(dtoa@i+1)^0,w,c
  6598  003E52  E108               	bnz	u9510
  6599  003E54  0440               	decf	dtoa@i^0,w,c
  6600  003E56  A0D8               	btfss	status,0,c
  6601  003E58  EF30  F01F         	goto	u9511
  6602  003E5C  EF32  F01F         	goto	u9510
  6603  003E60                     u9511:
  6604  003E60  EF62  F01F         	goto	l7265
  6605  003E64                     u9510:
  6606  003E64  5038               	movf	dtoa@n^0,w,c
  6607  003E66  1039               	iorwf	(dtoa@n+1)^0,w,c
  6608  003E68  103A               	iorwf	(dtoa@n+2)^0,w,c
  6609  003E6A  103B               	iorwf	(dtoa@n+3)^0,w,c
  6610  003E6C  103C               	iorwf	(dtoa@n+4)^0,w,c
  6611  003E6E  103D               	iorwf	(dtoa@n+5)^0,w,c
  6612  003E70  103E               	iorwf	(dtoa@n+6)^0,w,c
  6613  003E72  103F               	iorwf	(dtoa@n+7)^0,w,c
  6614  003E74  A4D8               	btfss	status,2,c
  6615  003E76  EF3F  F01F         	goto	u9521
  6616  003E7A  EF41  F01F         	goto	u9520
  6617  003E7E                     u9521:
  6618  003E7E  EFA9  F01E         	goto	l7245
  6619  003E82                     u9520:
  6620  003E82  BE33               	btfsc	(dtoa@p+1)^0,7,c
  6621  003E84  EF4E  F01F         	goto	u9530
  6622  003E88  5033               	movf	(dtoa@p+1)^0,w,c
  6623  003E8A  E106               	bnz	u9531
  6624  003E8C  0432               	decf	dtoa@p^0,w,c
  6625  003E8E  B0D8               	btfsc	status,0,c
  6626  003E90  EF4C  F01F         	goto	u9531
  6627  003E94  EF4E  F01F         	goto	u9530
  6628  003E98                     u9531:
  6629  003E98  EFA9  F01E         	goto	l7245
  6630  003E9C                     u9530:
  6631  003E9C  BE35               	btfsc	(dtoa@w+1)^0,7,c
  6632  003E9E  EF59  F01F         	goto	u9541
  6633  003EA2  5035               	movf	(dtoa@w+1)^0,w,c
  6634  003EA4  E108               	bnz	u9540
  6635  003EA6  0434               	decf	dtoa@w^0,w,c
  6636  003EA8  A0D8               	btfss	status,0,c
  6637  003EAA  EF59  F01F         	goto	u9541
  6638  003EAE  EF5B  F01F         	goto	u9540
  6639  003EB2                     u9541:
  6640  003EB2  EF62  F01F         	goto	l7265
  6641  003EB6                     u9540:
  6642  003EB6  B25A               	btfsc	_flags^0,1,c
  6643  003EB8  EF60  F01F         	goto	u9551
  6644  003EBC  EF62  F01F         	goto	u9550
  6645  003EC0                     u9551:
  6646  003EC0  EFA9  F01E         	goto	l7245
  6647  003EC4                     u9550:
  6648  003EC4                     l7265:
  6649                           
  6650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6651  003EC4  5036               	movf	dtoa@s^0,w,c
  6652  003EC6  1037               	iorwf	(dtoa@s+1)^0,w,c
  6653  003EC8  A4D8               	btfss	status,2,c
  6654  003ECA  EF69  F01F         	goto	u9561
  6655  003ECE  EF6B  F01F         	goto	u9560
  6656  003ED2                     u9561:
  6657  003ED2  EF72  F01F         	goto	l7269
  6658  003ED6                     u9560:
  6659  003ED6  A45A               	btfss	_flags^0,2,c
  6660  003ED8  EF70  F01F         	goto	u9571
  6661  003EDC  EF72  F01F         	goto	u9570
  6662  003EE0                     u9571:
  6663  003EE0  EF90  F01F         	goto	l7279
  6664  003EE4                     u9570:
  6665  003EE4                     l7269:
  6666                           
  6667                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  6668  003EE4  0640               	decf	dtoa@i^0,f,c
  6669  003EE6  A0D8               	btfss	status,0,c
  6670  003EE8  0641               	decf	(dtoa@i+1)^0,f,c
  6671  003EEA                     
  6672                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6673  003EEA  5036               	movf	dtoa@s^0,w,c
  6674  003EEC  1037               	iorwf	(dtoa@s+1)^0,w,c
  6675  003EEE  A4D8               	btfss	status,2,c
  6676  003EF0  EF7C  F01F         	goto	u9581
  6677  003EF4  EF7E  F01F         	goto	u9580
  6678  003EF8                     u9581:
  6679  003EF8  EF84  F01F         	goto	l7275
  6680  003EFC                     u9580:
  6681  003EFC  0E00               	movlw	0
  6682  003EFE  6E31               	movwf	(_dtoa$1344+1)^0,c
  6683  003F00  0E2B               	movlw	43
  6684  003F02  6E30               	movwf	_dtoa$1344^0,c
  6685  003F04  EF88  F01F         	goto	l7277
  6686  003F08                     l7275:
  6687  003F08  0E00               	movlw	0
  6688  003F0A  6E31               	movwf	(_dtoa$1344+1)^0,c
  6689  003F0C  0E2D               	movlw	45
  6690  003F0E  6E30               	movwf	_dtoa$1344^0,c
  6691  003F10                     l7277:
  6692  003F10  0E3E               	movlw	low _dbuf
  6693  003F12  2440               	addwf	dtoa@i^0,w,c
  6694  003F14  6ED9               	movwf	fsr2l,c
  6695  003F16  0E01               	movlw	high _dbuf
  6696  003F18  2041               	addwfc	(dtoa@i+1)^0,w,c
  6697  003F1A  6EDA               	movwf	fsr2h,c
  6698  003F1C  C030  FFDF         	movff	_dtoa$1344,indf2
  6699  003F20                     l7279:
  6700                           
  6701                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6702  003F20  C01E  F013         	movff	dtoa@fp,pad@fp
  6703  003F24  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  6704  003F28  0E3E               	movlw	low _dbuf
  6705  003F2A  2440               	addwf	dtoa@i^0,w,c
  6706  003F2C  6E15               	movwf	pad@buf^0,c
  6707  003F2E  0E01               	movlw	high _dbuf
  6708  003F30  2041               	addwfc	(dtoa@i+1)^0,w,c
  6709  003F32  6E16               	movwf	(pad@buf+1)^0,c
  6710  003F34  C034  F017         	movff	dtoa@w,pad@p
  6711  003F38  C035  F018         	movff	dtoa@w+1,pad@p+1
  6712  003F3C  EC21  F029         	call	_pad	;wreg free
  6713  003F40  C013  F01E         	movff	?_pad,?_dtoa
  6714  003F44  C014  F01F         	movff	?_pad+1,?_dtoa+1
  6715  003F48  0012               	return		;funcret
  6716  003F4A                     __end_of_dtoa:
  6717                           	callstack 0
  6718                           
  6719 ;; *************** function _pad *****************
  6720 ;; Defined at:
  6721 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  6724 ;;		 -> sprintf@f(11), 
  6725 ;;  buf             2   20[COMRAM] PTR unsigned char 
  6726 ;;		 -> dbuf(80), 
  6727 ;;  p               2   22[COMRAM] int 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;  w               2   27[COMRAM] int 
  6730 ;;  i               2   25[COMRAM] int 
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  2   18[COMRAM] int 
  6733 ;; Registers used:
  6734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6740 ;;      Params:         6       0       0       0       0       0       0       0       0
  6741 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6742 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6743 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6744 ;;Total ram usage:       11 bytes
  6745 ;; Hardware stack levels used: 1
  6746 ;; Hardware stack levels required when called: 5
  6747 ;; This function calls:
  6748 ;;		_fputc
  6749 ;;		_fputs
  6750 ;;		_strlen
  6751 ;; This function is called by:
  6752 ;;		_dtoa
  6753 ;;		_efgtoa
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text19
  6758  005242                     __ptext19:
  6759                           	callstack 0
  6760  005242                     _pad:
  6761                           	callstack 21
  6762  005242                     
  6763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6764  005242  A05A               	btfss	_flags^0,0,c
  6765  005244  EF26  F029         	goto	u9151
  6766  005248  EF28  F029         	goto	u9150
  6767  00524C                     u9151:
  6768  00524C  EF32  F029         	goto	l7119
  6769  005250                     u9150:
  6770  005250                     
  6771                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6772  005250  C015  F00C         	movff	pad@buf,fputs@s
  6773  005254  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6774  005258  C013  F00E         	movff	pad@fp,fputs@fp
  6775  00525C  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6776  005260  EC8C  F02D         	call	_fputs	;wreg free
  6777  005264                     l7119:
  6778                           
  6779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6780  005264  BE18               	btfsc	(pad@p+1)^0,7,c
  6781  005266  EF37  F029         	goto	u9161
  6782  00526A  EF39  F029         	goto	u9160
  6783  00526E                     u9161:
  6784  00526E  EF3F  F029         	goto	l7123
  6785  005272                     u9160:
  6786  005272  C017  F01C         	movff	pad@p,pad@w
  6787  005276  C018  F01D         	movff	pad@p+1,pad@w+1
  6788  00527A  EF43  F029         	goto	l951
  6789  00527E                     l7123:
  6790  00527E  0E00               	movlw	0
  6791  005280  6E1D               	movwf	(pad@w+1)^0,c
  6792  005282  0E00               	movlw	0
  6793  005284  6E1C               	movwf	pad@w^0,c
  6794  005286                     l951:
  6795                           
  6796                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6797  005286  0E00               	movlw	0
  6798  005288  6E1B               	movwf	(pad@i+1)^0,c
  6799  00528A  0E00               	movlw	0
  6800  00528C  6E1A               	movwf	pad@i^0,c
  6801                           
  6802                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6803  00528E  EF55  F029         	goto	l7129
  6804  005292                     l7125:
  6805                           
  6806                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6807  005292  0E00               	movlw	0
  6808  005294  6E04               	movwf	(fputc@c+1)^0,c
  6809  005296  0E20               	movlw	32
  6810  005298  6E03               	movwf	fputc@c^0,c
  6811  00529A  C013  F005         	movff	pad@fp,fputc@fp
  6812  00529E  C014  F006         	movff	pad@fp+1,fputc@fp+1
  6813  0052A2  EC5A  F028         	call	_fputc	;wreg free
  6814  0052A6                     
  6815                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6816  0052A6  4A1A               	infsnz	pad@i^0,f,c
  6817  0052A8  2A1B               	incf	(pad@i+1)^0,f,c
  6818  0052AA                     l7129:
  6819                           
  6820                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6821  0052AA  501C               	movf	pad@w^0,w,c
  6822  0052AC  5C1A               	subwf	pad@i^0,w,c
  6823  0052AE  501B               	movf	(pad@i+1)^0,w,c
  6824  0052B0  0A80               	xorlw	128
  6825  0052B2  6E19               	movwf	??_pad^0,c
  6826  0052B4  501D               	movf	(pad@w+1)^0,w,c
  6827  0052B6  0A80               	xorlw	128
  6828  0052B8  5819               	subwfb	??_pad^0,w,c
  6829  0052BA  A0D8               	btfss	status,0,c
  6830  0052BC  EF62  F029         	goto	u9171
  6831  0052C0  EF64  F029         	goto	u9170
  6832  0052C4                     u9171:
  6833  0052C4  EF49  F029         	goto	l7125
  6834  0052C8                     u9170:
  6835  0052C8                     
  6836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6837  0052C8  B05A               	btfsc	_flags^0,0,c
  6838  0052CA  EF69  F029         	goto	u9181
  6839  0052CE  EF6B  F029         	goto	u9180
  6840  0052D2                     u9181:
  6841  0052D2  EF75  F029         	goto	l7133
  6842  0052D6                     u9180:
  6843  0052D6                     
  6844                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6845  0052D6  C015  F00C         	movff	pad@buf,fputs@s
  6846  0052DA  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6847  0052DE  C013  F00E         	movff	pad@fp,fputs@fp
  6848  0052E2  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6849  0052E6  EC8C  F02D         	call	_fputs	;wreg free
  6850  0052EA                     l7133:
  6851                           
  6852                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6853  0052EA  C015  F003         	movff	pad@buf,strlen@s
  6854  0052EE  C016  F004         	movff	pad@buf+1,strlen@s+1
  6855  0052F2  EC60  F02E         	call	_strlen	;wreg free
  6856  0052F6  501C               	movf	pad@w^0,w,c
  6857  0052F8  2403               	addwf	?_strlen^0,w,c
  6858  0052FA  6E13               	movwf	?_pad^0,c
  6859  0052FC  501D               	movf	(pad@w+1)^0,w,c
  6860  0052FE  2004               	addwfc	(?_strlen+1)^0,w,c
  6861  005300  6E14               	movwf	(?_pad+1)^0,c
  6862  005302  0012               	return		;funcret
  6863  005304                     __end_of_pad:
  6864                           	callstack 0
  6865                           
  6866 ;; *************** function _strlen *****************
  6867 ;; Defined at:
  6868 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  s               2    2[COMRAM] PTR const unsigned char 
  6871 ;;		 -> dbuf(80), 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  a               2    4[COMRAM] PTR const unsigned char 
  6874 ;;		 -> dbuf(80), 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  2    2[COMRAM] unsigned int 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6884 ;;      Params:         2       0       0       0       0       0       0       0       0
  6885 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6887 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6888 ;;Total ram usage:        4 bytes
  6889 ;; Hardware stack levels used: 1
  6890 ;; Hardware stack levels required when called: 2
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_pad
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text20
  6899  005CC0                     __ptext20:
  6900                           	callstack 0
  6901  005CC0                     _strlen:
  6902                           	callstack 23
  6903  005CC0  C003  F005         	movff	strlen@s,strlen@a
  6904  005CC4  C004  F006         	movff	strlen@s+1,strlen@a+1
  6905  005CC8  EF68  F02E         	goto	l6575
  6906  005CCC                     l6573:
  6907  005CCC  4A03               	infsnz	strlen@s^0,f,c
  6908  005CCE  2A04               	incf	(strlen@s+1)^0,f,c
  6909  005CD0                     l6575:
  6910  005CD0  C003  FFD9         	movff	strlen@s,fsr2l
  6911  005CD4  C004  FFDA         	movff	strlen@s+1,fsr2h
  6912  005CD8  50DF               	movf	indf2,w,c
  6913  005CDA  A4D8               	btfss	status,2,c
  6914  005CDC  EF72  F02E         	goto	u8291
  6915  005CE0  EF74  F02E         	goto	u8290
  6916  005CE4                     u8291:
  6917  005CE4  EF66  F02E         	goto	l6573
  6918  005CE8                     u8290:
  6919  005CE8  5005               	movf	strlen@a^0,w,c
  6920  005CEA  5C03               	subwf	strlen@s^0,w,c
  6921  005CEC  6E03               	movwf	?_strlen^0,c
  6922  005CEE  5006               	movf	(strlen@a+1)^0,w,c
  6923  005CF0  5804               	subwfb	(strlen@s+1)^0,w,c
  6924  005CF2  6E04               	movwf	(?_strlen+1)^0,c
  6925  005CF4  0012               	return		;funcret
  6926  005CF6                     __end_of_strlen:
  6927                           	callstack 0
  6928                           
  6929 ;; *************** function _fputs *****************
  6930 ;; Defined at:
  6931 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6934 ;;		 -> dbuf(80), 
  6935 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6936 ;;		 -> sprintf@f(11), 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  i               2   16[COMRAM] int 
  6939 ;;  c               1   15[COMRAM] unsigned char 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  2   11[COMRAM] int 
  6942 ;; Registers used:
  6943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6949 ;;      Params:         4       0       0       0       0       0       0       0       0
  6950 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6952 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6953 ;;Total ram usage:        7 bytes
  6954 ;; Hardware stack levels used: 1
  6955 ;; Hardware stack levels required when called: 4
  6956 ;; This function calls:
  6957 ;;		_fputc
  6958 ;; This function is called by:
  6959 ;;		_pad
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text21
  6964  005B18                     __ptext21:
  6965                           	callstack 0
  6966  005B18                     _fputs:
  6967                           	callstack 21
  6968  005B18  0E00               	movlw	0
  6969  005B1A  6E12               	movwf	(fputs@i+1)^0,c
  6970  005B1C  0E00               	movlw	0
  6971  005B1E  6E11               	movwf	fputs@i^0,c
  6972  005B20  EF9D  F02D         	goto	l6569
  6973  005B24                     l6565:
  6974  005B24  C010  F003         	movff	fputs@c,fputc@c
  6975  005B28  6A04               	clrf	(fputc@c+1)^0,c
  6976  005B2A  C00E  F005         	movff	fputs@fp,fputc@fp
  6977  005B2E  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  6978  005B32  EC5A  F028         	call	_fputc	;wreg free
  6979  005B36  4A11               	infsnz	fputs@i^0,f,c
  6980  005B38  2A12               	incf	(fputs@i+1)^0,f,c
  6981  005B3A                     l6569:
  6982  005B3A  5011               	movf	fputs@i^0,w,c
  6983  005B3C  240C               	addwf	fputs@s^0,w,c
  6984  005B3E  6ED9               	movwf	fsr2l,c
  6985  005B40  5012               	movf	(fputs@i+1)^0,w,c
  6986  005B42  200D               	addwfc	(fputs@s+1)^0,w,c
  6987  005B44  6EDA               	movwf	fsr2h,c
  6988  005B46  50DF               	movf	indf2,w,c
  6989  005B48  6E10               	movwf	fputs@c^0,c
  6990  005B4A  5010               	movf	fputs@c^0,w,c
  6991  005B4C  A4D8               	btfss	status,2,c
  6992  005B4E  EFAB  F02D         	goto	u8281
  6993  005B52  EFAD  F02D         	goto	u8280
  6994  005B56                     u8281:
  6995  005B56  EF92  F02D         	goto	l6565
  6996  005B5A                     u8280:
  6997  005B5A  0012               	return		;funcret
  6998  005B5C                     __end_of_fputs:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _fputc *****************
  7002 ;; Defined at:
  7003 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  c               2    2[COMRAM] int 
  7006 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  7007 ;;		 -> sprintf@f(11), 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  2    2[COMRAM] int 
  7012 ;; Registers used:
  7013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7019 ;;      Params:         4       0       0       0       0       0       0       0       0
  7020 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7021 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7022 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7023 ;;Total ram usage:        9 bytes
  7024 ;; Hardware stack levels used: 1
  7025 ;; Hardware stack levels required when called: 3
  7026 ;; This function calls:
  7027 ;;		_putch
  7028 ;; This function is called by:
  7029 ;;		_pad
  7030 ;;		_vfpfcnvrt
  7031 ;;		_fputs
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text22
  7036  0050B4                     __ptext22:
  7037                           	callstack 0
  7038  0050B4                     _fputc:
  7039                           	callstack 24
  7040  0050B4  5005               	movf	fputc@fp^0,w,c
  7041  0050B6  1006               	iorwf	(fputc@fp+1)^0,w,c
  7042  0050B8  B4D8               	btfsc	status,2,c
  7043  0050BA  EF61  F028         	goto	u7851
  7044  0050BE  EF63  F028         	goto	u7850
  7045  0050C2                     u7851:
  7046  0050C2  EF6C  F028         	goto	l6351
  7047  0050C6                     u7850:
  7048  0050C6  5005               	movf	fputc@fp^0,w,c
  7049  0050C8  1006               	iorwf	(fputc@fp+1)^0,w,c
  7050  0050CA  A4D8               	btfss	status,2,c
  7051  0050CC  EF6A  F028         	goto	u7861
  7052  0050D0  EF6C  F028         	goto	u7860
  7053  0050D4                     u7861:
  7054  0050D4  EF71  F028         	goto	l6353
  7055  0050D8                     u7860:
  7056  0050D8                     l6351:
  7057  0050D8  5003               	movf	fputc@c^0,w,c
  7058  0050DA  ECFC  F02E         	call	_putch
  7059  0050DE  EFBE  F028         	goto	l1207
  7060  0050E2                     l6353:
  7061  0050E2  EE20 F009          	lfsr	2,9
  7062  0050E6  5005               	movf	fputc@fp^0,w,c
  7063  0050E8  26D9               	addwf	fsr2l,f,c
  7064  0050EA  5006               	movf	(fputc@fp+1)^0,w,c
  7065  0050EC  22DA               	addwfc	fsr2h,f,c
  7066  0050EE  50DE               	movf	postinc2,w,c
  7067  0050F0  10DE               	iorwf	postinc2,w,c
  7068  0050F2  B4D8               	btfsc	status,2,c
  7069  0050F4  EF7E  F028         	goto	u7871
  7070  0050F8  EF80  F028         	goto	u7870
  7071  0050FC                     u7871:
  7072  0050FC  EF9B  F028         	goto	l6357
  7073  005100                     u7870:
  7074  005100  EE20 F009          	lfsr	2,9
  7075  005104  5005               	movf	fputc@fp^0,w,c
  7076  005106  26D9               	addwf	fsr2l,f,c
  7077  005108  5006               	movf	(fputc@fp+1)^0,w,c
  7078  00510A  22DA               	addwfc	fsr2h,f,c
  7079  00510C  EE10 F003          	lfsr	1,3
  7080  005110  5005               	movf	fputc@fp^0,w,c
  7081  005112  26E1               	addwf	fsr1l,f,c
  7082  005114  5006               	movf	(fputc@fp+1)^0,w,c
  7083  005116  22E2               	addwfc	fsr1h,f,c
  7084  005118  50DE               	movf	postinc2,w,c
  7085  00511A  5CE6               	subwf	postinc1,w,c
  7086  00511C  50E6               	movf	postinc1,w,c
  7087  00511E  0A80               	xorlw	128
  7088  005120  6E0B               	movwf	(??_fputc+4)^0,c
  7089  005122  50DE               	movf	postinc2,w,c
  7090  005124  0A80               	xorlw	128
  7091  005126  580B               	subwfb	(??_fputc+4)^0,w,c
  7092  005128  B0D8               	btfsc	status,0,c
  7093  00512A  EF99  F028         	goto	u7881
  7094  00512E  EF9B  F028         	goto	u7880
  7095  005132                     u7881:
  7096  005132  EFBE  F028         	goto	l1207
  7097  005136                     u7880:
  7098  005136                     l6357:
  7099  005136  EE20 F003          	lfsr	2,3
  7100  00513A  5005               	movf	fputc@fp^0,w,c
  7101  00513C  26D9               	addwf	fsr2l,f,c
  7102  00513E  5006               	movf	(fputc@fp+1)^0,w,c
  7103  005140  22DA               	addwfc	fsr2h,f,c
  7104  005142  CFDE F007          	movff	postinc2,??_fputc
  7105  005146  CFDD F008          	movff	postdec2,??_fputc+1
  7106  00514A  C005  FFD9         	movff	fputc@fp,fsr2l
  7107  00514E  C006  FFDA         	movff	fputc@fp+1,fsr2h
  7108  005152  CFDE F009          	movff	postinc2,??_fputc+2
  7109  005156  CFDD F00A          	movff	postdec2,??_fputc+3
  7110  00515A  5007               	movf	??_fputc^0,w,c
  7111  00515C  2409               	addwf	(??_fputc+2)^0,w,c
  7112  00515E  6ED9               	movwf	fsr2l,c
  7113  005160  5008               	movf	(??_fputc+1)^0,w,c
  7114  005162  200A               	addwfc	(??_fputc+3)^0,w,c
  7115  005164  6EDA               	movwf	fsr2h,c
  7116  005166  C003  FFDF         	movff	fputc@c,indf2
  7117  00516A  EE20 F003          	lfsr	2,3
  7118  00516E  5005               	movf	fputc@fp^0,w,c
  7119  005170  26D9               	addwf	fsr2l,f,c
  7120  005172  5006               	movf	(fputc@fp+1)^0,w,c
  7121  005174  22DA               	addwfc	fsr2h,f,c
  7122  005176  2ADE               	incf	postinc2,f,c
  7123  005178  0E00               	movlw	0
  7124  00517A  22DD               	addwfc	postdec2,f,c
  7125  00517C                     l1207:
  7126  00517C  0012               	return		;funcret
  7127  00517E                     __end_of_fputc:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _putch *****************
  7131 ;; Defined at:
  7132 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  c               1    wreg     unsigned char 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  c               1    0[COMRAM] unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7146 ;;      Params:         0       0       0       0       0       0       0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7149 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7150 ;;Total ram usage:        0 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 2
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		_fputc
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           	psect	text23
  7161  005DF8                     __ptext23:
  7162                           	callstack 0
  7163  005DF8                     _putch:
  7164                           	callstack 24
  7165  005DF8  0012               	return		;funcret
  7166  005DFA                     __end_of_putch:
  7167                           	callstack 0
  7168                           
  7169 ;; *************** function _abs *****************
  7170 ;; Defined at:
  7171 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;  a               2   20[COMRAM] int 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  2   20[COMRAM] int 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7185 ;;      Params:         2       0       0       0       0       0       0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7187 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7188 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7189 ;;Total ram usage:        4 bytes
  7190 ;; Hardware stack levels used: 1
  7191 ;; Hardware stack levels required when called: 2
  7192 ;; This function calls:
  7193 ;;		Nothing
  7194 ;; This function is called by:
  7195 ;;		_dtoa
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text24
  7200  005BA0                     __ptext24:
  7201                           	callstack 0
  7202  005BA0                     _abs:
  7203                           	callstack 24
  7204  005BA0  BE16               	btfsc	(abs@a+1)^0,7,c
  7205  005BA2  EFDD  F02D         	goto	u9190
  7206  005BA6  5016               	movf	(abs@a+1)^0,w,c
  7207  005BA8  E106               	bnz	u9191
  7208  005BAA  0415               	decf	abs@a^0,w,c
  7209  005BAC  B0D8               	btfsc	status,0,c
  7210  005BAE  EFDB  F02D         	goto	u9191
  7211  005BB2  EFDD  F02D         	goto	u9190
  7212  005BB6                     u9191:
  7213  005BB6  EFEB  F02D         	goto	l1134
  7214  005BBA                     u9190:
  7215  005BBA  C015  F017         	movff	abs@a,??_abs
  7216  005BBE  C016  F018         	movff	abs@a+1,??_abs+1
  7217  005BC2  1E17               	comf	??_abs^0,f,c
  7218  005BC4  1E18               	comf	(??_abs+1)^0,f,c
  7219  005BC6  4A17               	infsnz	??_abs^0,f,c
  7220  005BC8  2A18               	incf	(??_abs+1)^0,f,c
  7221  005BCA  C017  F015         	movff	??_abs,?_abs
  7222  005BCE  C018  F016         	movff	??_abs+1,?_abs+1
  7223  005BD2  EFEF  F02D         	goto	l1137
  7224  005BD6                     l1134:
  7225  005BD6  C015  F015         	movff	abs@a,?_abs
  7226  005BDA  C016  F016         	movff	abs@a+1,?_abs+1
  7227  005BDE                     l1137:
  7228  005BDE  0012               	return		;funcret
  7229  005BE0                     __end_of_abs:
  7230                           	callstack 0
  7231                           
  7232 ;; *************** function ___aomod *****************
  7233 ;; Defined at:
  7234 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  dividend        8    2[COMRAM] long long 
  7237 ;;  divisor         8   10[COMRAM] long long 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;  sign            1   19[COMRAM] unsigned char 
  7240 ;;  counter         1   18[COMRAM] unsigned char 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  8    2[COMRAM] long long 
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, status,0
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7250 ;;      Params:        16       0       0       0       0       0       0       0       0
  7251 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7253 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7254 ;;Total ram usage:       18 bytes
  7255 ;; Hardware stack levels used: 1
  7256 ;; Hardware stack levels required when called: 2
  7257 ;; This function calls:
  7258 ;;		Nothing
  7259 ;; This function is called by:
  7260 ;;		_dtoa
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text25
  7265  00484C                     __ptext25:
  7266                           	callstack 0
  7267  00484C                     ___aomod:
  7268                           	callstack 24
  7269  00484C  0E00               	movlw	0
  7270  00484E  6E14               	movwf	___aomod@sign^0,c
  7271  004850  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  7272  004852  EF2F  F024         	goto	u8390
  7273  004856  EF2D  F024         	goto	u8391
  7274  00485A                     u8391:
  7275  00485A  EF41  F024         	goto	l6643
  7276  00485E                     u8390:
  7277  00485E  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  7278  004860  1E09               	comf	(___aomod@dividend+6)^0,f,c
  7279  004862  1E08               	comf	(___aomod@dividend+5)^0,f,c
  7280  004864  1E07               	comf	(___aomod@dividend+4)^0,f,c
  7281  004866  1E06               	comf	(___aomod@dividend+3)^0,f,c
  7282  004868  1E05               	comf	(___aomod@dividend+2)^0,f,c
  7283  00486A  1E04               	comf	(___aomod@dividend+1)^0,f,c
  7284  00486C  6C03               	negf	___aomod@dividend^0,c
  7285  00486E  0E00               	movlw	0
  7286  004870  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  7287  004872  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  7288  004874  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  7289  004876  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  7290  004878  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  7291  00487A  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  7292  00487C  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  7293  00487E  0E01               	movlw	1
  7294  004880  6E14               	movwf	___aomod@sign^0,c
  7295  004882                     l6643:
  7296  004882  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  7297  004884  EF48  F024         	goto	u8400
  7298  004888  EF46  F024         	goto	u8401
  7299  00488C                     u8401:
  7300  00488C  EF58  F024         	goto	l6647
  7301  004890                     u8400:
  7302  004890  1E12               	comf	(___aomod@divisor+7)^0,f,c
  7303  004892  1E11               	comf	(___aomod@divisor+6)^0,f,c
  7304  004894  1E10               	comf	(___aomod@divisor+5)^0,f,c
  7305  004896  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  7306  004898  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  7307  00489A  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  7308  00489C  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  7309  00489E  6C0B               	negf	___aomod@divisor^0,c
  7310  0048A0  0E00               	movlw	0
  7311  0048A2  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  7312  0048A4  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  7313  0048A6  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  7314  0048A8  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  7315  0048AA  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  7316  0048AC  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  7317  0048AE  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  7318  0048B0                     l6647:
  7319  0048B0  500B               	movf	___aomod@divisor^0,w,c
  7320  0048B2  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  7321  0048B4  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  7322  0048B6  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  7323  0048B8  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  7324  0048BA  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  7325  0048BC  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  7326  0048BE  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  7327  0048C0  B4D8               	btfsc	status,2,c
  7328  0048C2  EF65  F024         	goto	u8411
  7329  0048C6  EF67  F024         	goto	u8410
  7330  0048CA                     u8411:
  7331  0048CA  EFAF  F024         	goto	l6663
  7332  0048CE                     u8410:
  7333  0048CE  0E01               	movlw	1
  7334  0048D0  6E13               	movwf	___aomod@counter^0,c
  7335  0048D2  EF75  F024         	goto	l6653
  7336  0048D6                     l6651:
  7337  0048D6  90D8               	bcf	status,0,c
  7338  0048D8  360B               	rlcf	___aomod@divisor^0,f,c
  7339  0048DA  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  7340  0048DC  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  7341  0048DE  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  7342  0048E0  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  7343  0048E2  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  7344  0048E4  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  7345  0048E6  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  7346  0048E8  2A13               	incf	___aomod@counter^0,f,c
  7347  0048EA                     l6653:
  7348  0048EA  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  7349  0048EC  EF7A  F024         	goto	u8421
  7350  0048F0  EF7C  F024         	goto	u8420
  7351  0048F4                     u8421:
  7352  0048F4  EF6B  F024         	goto	l6651
  7353  0048F8                     u8420:
  7354  0048F8                     l6655:
  7355  0048F8  500B               	movf	___aomod@divisor^0,w,c
  7356  0048FA  5C03               	subwf	___aomod@dividend^0,w,c
  7357  0048FC  500C               	movf	(___aomod@divisor+1)^0,w,c
  7358  0048FE  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  7359  004900  500D               	movf	(___aomod@divisor+2)^0,w,c
  7360  004902  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  7361  004904  500E               	movf	(___aomod@divisor+3)^0,w,c
  7362  004906  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  7363  004908  500F               	movf	(___aomod@divisor+4)^0,w,c
  7364  00490A  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  7365  00490C  5010               	movf	(___aomod@divisor+5)^0,w,c
  7366  00490E  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  7367  004910  5011               	movf	(___aomod@divisor+6)^0,w,c
  7368  004912  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  7369  004914  5012               	movf	(___aomod@divisor+7)^0,w,c
  7370  004916  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  7371  004918  A0D8               	btfss	status,0,c
  7372  00491A  EF91  F024         	goto	u8431
  7373  00491E  EF93  F024         	goto	u8430
  7374  004922                     u8431:
  7375  004922  EFA3  F024         	goto	l6659
  7376  004926                     u8430:
  7377  004926  500B               	movf	___aomod@divisor^0,w,c
  7378  004928  5E03               	subwf	___aomod@dividend^0,f,c
  7379  00492A  500C               	movf	(___aomod@divisor+1)^0,w,c
  7380  00492C  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  7381  00492E  500D               	movf	(___aomod@divisor+2)^0,w,c
  7382  004930  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  7383  004932  500E               	movf	(___aomod@divisor+3)^0,w,c
  7384  004934  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  7385  004936  500F               	movf	(___aomod@divisor+4)^0,w,c
  7386  004938  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  7387  00493A  5010               	movf	(___aomod@divisor+5)^0,w,c
  7388  00493C  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  7389  00493E  5011               	movf	(___aomod@divisor+6)^0,w,c
  7390  004940  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  7391  004942  5012               	movf	(___aomod@divisor+7)^0,w,c
  7392  004944  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  7393  004946                     l6659:
  7394  004946  90D8               	bcf	status,0,c
  7395  004948  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  7396  00494A  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  7397  00494C  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  7398  00494E  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  7399  004950  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  7400  004952  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  7401  004954  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  7402  004956  320B               	rrcf	___aomod@divisor^0,f,c
  7403  004958  2E13               	decfsz	___aomod@counter^0,f,c
  7404  00495A  EF7C  F024         	goto	l6655
  7405  00495E                     l6663:
  7406  00495E  5014               	movf	___aomod@sign^0,w,c
  7407  004960  B4D8               	btfsc	status,2,c
  7408  004962  EFB5  F024         	goto	u8441
  7409  004966  EFB7  F024         	goto	u8440
  7410  00496A                     u8441:
  7411  00496A  EFC7  F024         	goto	l6667
  7412  00496E                     u8440:
  7413  00496E  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  7414  004970  1E09               	comf	(___aomod@dividend+6)^0,f,c
  7415  004972  1E08               	comf	(___aomod@dividend+5)^0,f,c
  7416  004974  1E07               	comf	(___aomod@dividend+4)^0,f,c
  7417  004976  1E06               	comf	(___aomod@dividend+3)^0,f,c
  7418  004978  1E05               	comf	(___aomod@dividend+2)^0,f,c
  7419  00497A  1E04               	comf	(___aomod@dividend+1)^0,f,c
  7420  00497C  6C03               	negf	___aomod@dividend^0,c
  7421  00497E  0E00               	movlw	0
  7422  004980  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  7423  004982  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  7424  004984  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  7425  004986  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  7426  004988  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  7427  00498A  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  7428  00498C  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  7429  00498E                     l6667:
  7430  00498E  C003  F003         	movff	___aomod@dividend,?___aomod
  7431  004992  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  7432  004996  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  7433  00499A  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  7434  00499E  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  7435  0049A2  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  7436  0049A6  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  7437  0049AA  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  7438  0049AE  0012               	return		;funcret
  7439  0049B0                     __end_of___aomod:
  7440                           	callstack 0
  7441                           
  7442 ;; *************** function ___aodiv *****************
  7443 ;; Defined at:
  7444 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  dividend        8    2[COMRAM] long long 
  7447 ;;  divisor         8   10[COMRAM] long long 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;  quotient        8   20[COMRAM] long long 
  7450 ;;  sign            1   19[COMRAM] unsigned char 
  7451 ;;  counter         1   18[COMRAM] unsigned char 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  8    2[COMRAM] long long 
  7454 ;; Registers used:
  7455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7461 ;;      Params:        16       0       0       0       0       0       0       0       0
  7462 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7464 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7465 ;;Total ram usage:       26 bytes
  7466 ;; Hardware stack levels used: 1
  7467 ;; Hardware stack levels required when called: 2
  7468 ;; This function calls:
  7469 ;;		Nothing
  7470 ;; This function is called by:
  7471 ;;		_dtoa
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           	psect	text26
  7476  00454E                     __ptext26:
  7477                           	callstack 0
  7478  00454E                     ___aodiv:
  7479                           	callstack 24
  7480  00454E  0E00               	movlw	0
  7481  004550  6E14               	movwf	___aodiv@sign^0,c
  7482  004552  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  7483  004554  EFB0  F022         	goto	u8320
  7484  004558  EFAE  F022         	goto	u8321
  7485  00455C                     u8321:
  7486  00455C  EFC2  F022         	goto	l6599
  7487  004560                     u8320:
  7488  004560  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  7489  004562  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  7490  004564  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  7491  004566  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  7492  004568  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  7493  00456A  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  7494  00456C  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  7495  00456E  6C0B               	negf	___aodiv@divisor^0,c
  7496  004570  0E00               	movlw	0
  7497  004572  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  7498  004574  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  7499  004576  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  7500  004578  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  7501  00457A  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  7502  00457C  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  7503  00457E  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  7504  004580  0E01               	movlw	1
  7505  004582  6E14               	movwf	___aodiv@sign^0,c
  7506  004584                     l6599:
  7507  004584  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  7508  004586  EFC9  F022         	goto	u8330
  7509  00458A  EFC7  F022         	goto	u8331
  7510  00458E                     u8331:
  7511  00458E  EFDB  F022         	goto	l6605
  7512  004592                     u8330:
  7513  004592  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  7514  004594  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  7515  004596  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  7516  004598  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  7517  00459A  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  7518  00459C  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  7519  00459E  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  7520  0045A0  6C03               	negf	___aodiv@dividend^0,c
  7521  0045A2  0E00               	movlw	0
  7522  0045A4  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  7523  0045A6  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  7524  0045A8  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  7525  0045AA  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  7526  0045AC  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  7527  0045AE  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  7528  0045B0  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  7529  0045B2  0E01               	movlw	1
  7530  0045B4  1A14               	xorwf	___aodiv@sign^0,f,c
  7531  0045B6                     l6605:
  7532  0045B6  EE20  F015         	lfsr	2,___aodiv@quotient
  7533  0045BA  0E07               	movlw	7
  7534  0045BC                     u8341:
  7535  0045BC  6ADE               	clrf	postinc2,c
  7536  0045BE  06E8               	decf	wreg,f,c
  7537  0045C0  E2FD               	bc	u8341
  7538  0045C2  500B               	movf	___aodiv@divisor^0,w,c
  7539  0045C4  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  7540  0045C6  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  7541  0045C8  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  7542  0045CA  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  7543  0045CC  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  7544  0045CE  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  7545  0045D0  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  7546  0045D2  B4D8               	btfsc	status,2,c
  7547  0045D4  EFEE  F022         	goto	u8351
  7548  0045D8  EFF0  F022         	goto	u8350
  7549  0045DC                     u8351:
  7550  0045DC  EF42  F023         	goto	l6627
  7551  0045E0                     u8350:
  7552  0045E0  0E01               	movlw	1
  7553  0045E2  6E13               	movwf	___aodiv@counter^0,c
  7554  0045E4  EFFE  F022         	goto	l6613
  7555  0045E8                     l6611:
  7556  0045E8  90D8               	bcf	status,0,c
  7557  0045EA  360B               	rlcf	___aodiv@divisor^0,f,c
  7558  0045EC  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  7559  0045EE  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  7560  0045F0  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  7561  0045F2  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  7562  0045F4  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  7563  0045F6  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  7564  0045F8  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  7565  0045FA  2A13               	incf	___aodiv@counter^0,f,c
  7566  0045FC                     l6613:
  7567  0045FC  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  7568  0045FE  EF03  F023         	goto	u8361
  7569  004602  EF05  F023         	goto	u8360
  7570  004606                     u8361:
  7571  004606  EFF4  F022         	goto	l6611
  7572  00460A                     u8360:
  7573  00460A                     l6615:
  7574  00460A  90D8               	bcf	status,0,c
  7575  00460C  3615               	rlcf	___aodiv@quotient^0,f,c
  7576  00460E  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  7577  004610  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  7578  004612  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  7579  004614  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  7580  004616  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  7581  004618  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  7582  00461A  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  7583  00461C  500B               	movf	___aodiv@divisor^0,w,c
  7584  00461E  5C03               	subwf	___aodiv@dividend^0,w,c
  7585  004620  500C               	movf	(___aodiv@divisor+1)^0,w,c
  7586  004622  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  7587  004624  500D               	movf	(___aodiv@divisor+2)^0,w,c
  7588  004626  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  7589  004628  500E               	movf	(___aodiv@divisor+3)^0,w,c
  7590  00462A  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  7591  00462C  500F               	movf	(___aodiv@divisor+4)^0,w,c
  7592  00462E  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  7593  004630  5010               	movf	(___aodiv@divisor+5)^0,w,c
  7594  004632  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  7595  004634  5011               	movf	(___aodiv@divisor+6)^0,w,c
  7596  004636  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  7597  004638  5012               	movf	(___aodiv@divisor+7)^0,w,c
  7598  00463A  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  7599  00463C  A0D8               	btfss	status,0,c
  7600  00463E  EF23  F023         	goto	u8371
  7601  004642  EF25  F023         	goto	u8370
  7602  004646                     u8371:
  7603  004646  EF36  F023         	goto	l6623
  7604  00464A                     u8370:
  7605  00464A  500B               	movf	___aodiv@divisor^0,w,c
  7606  00464C  5E03               	subwf	___aodiv@dividend^0,f,c
  7607  00464E  500C               	movf	(___aodiv@divisor+1)^0,w,c
  7608  004650  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  7609  004652  500D               	movf	(___aodiv@divisor+2)^0,w,c
  7610  004654  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  7611  004656  500E               	movf	(___aodiv@divisor+3)^0,w,c
  7612  004658  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  7613  00465A  500F               	movf	(___aodiv@divisor+4)^0,w,c
  7614  00465C  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  7615  00465E  5010               	movf	(___aodiv@divisor+5)^0,w,c
  7616  004660  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  7617  004662  5011               	movf	(___aodiv@divisor+6)^0,w,c
  7618  004664  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  7619  004666  5012               	movf	(___aodiv@divisor+7)^0,w,c
  7620  004668  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  7621  00466A  8015               	bsf	___aodiv@quotient^0,0,c
  7622  00466C                     l6623:
  7623  00466C  90D8               	bcf	status,0,c
  7624  00466E  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  7625  004670  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  7626  004672  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  7627  004674  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  7628  004676  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  7629  004678  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  7630  00467A  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  7631  00467C  320B               	rrcf	___aodiv@divisor^0,f,c
  7632  00467E  2E13               	decfsz	___aodiv@counter^0,f,c
  7633  004680  EF05  F023         	goto	l6615
  7634  004684                     l6627:
  7635  004684  5014               	movf	___aodiv@sign^0,w,c
  7636  004686  B4D8               	btfsc	status,2,c
  7637  004688  EF48  F023         	goto	u8381
  7638  00468C  EF4A  F023         	goto	u8380
  7639  004690                     u8381:
  7640  004690  EF5A  F023         	goto	l6631
  7641  004694                     u8380:
  7642  004694  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  7643  004696  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  7644  004698  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  7645  00469A  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  7646  00469C  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  7647  00469E  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  7648  0046A0  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  7649  0046A2  6C15               	negf	___aodiv@quotient^0,c
  7650  0046A4  0E00               	movlw	0
  7651  0046A6  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  7652  0046A8  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  7653  0046AA  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  7654  0046AC  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  7655  0046AE  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  7656  0046B0  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  7657  0046B2  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  7658  0046B4                     l6631:
  7659  0046B4  C015  F003         	movff	___aodiv@quotient,?___aodiv
  7660  0046B8  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  7661  0046BC  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  7662  0046C0  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  7663  0046C4  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  7664  0046C8  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  7665  0046CC  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  7666  0046D0  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  7667  0046D4  0012               	return		;funcret
  7668  0046D6                     __end_of___aodiv:
  7669                           	callstack 0
  7670                           
  7671 ;; *************** function _atoi *****************
  7672 ;; Defined at:
  7673 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7676 ;;		 -> STR_3(33), 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;  n               2   17[COMRAM] int 
  7679 ;;  neg             2   15[COMRAM] int 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  2    9[COMRAM] int 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7689 ;;      Params:         2       0       0       0       0       0       0       0       0
  7690 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7691 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7692 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7693 ;;Total ram usage:       10 bytes
  7694 ;; Hardware stack levels used: 1
  7695 ;; Hardware stack levels required when called: 3
  7696 ;; This function calls:
  7697 ;;		___wmul
  7698 ;;		_isdigit
  7699 ;;		_isspace
  7700 ;; This function is called by:
  7701 ;;		_vfpfcnvrt
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           	psect	text27
  7706  0049B0                     __ptext27:
  7707                           	callstack 0
  7708  0049B0                     _atoi:
  7709                           	callstack 24
  7710  0049B0  0E00               	movlw	0
  7711  0049B2  6E13               	movwf	(atoi@n+1)^0,c
  7712  0049B4  0E00               	movlw	0
  7713  0049B6  6E12               	movwf	atoi@n^0,c
  7714  0049B8  0E00               	movlw	0
  7715  0049BA  6E11               	movwf	(atoi@neg+1)^0,c
  7716  0049BC  0E00               	movlw	0
  7717  0049BE  6E10               	movwf	atoi@neg^0,c
  7718  0049C0  EFE4  F024         	goto	l7595
  7719  0049C4                     l7591:
  7720  0049C4  4A0A               	infsnz	atoi@s^0,f,c
  7721  0049C6  2A0B               	incf	(atoi@s+1)^0,f,c
  7722  0049C8                     l7595:
  7723  0049C8  C00A  FFF6         	movff	atoi@s,tblptrl
  7724  0049CC  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7725  0049D0                     	if	0	;tblptru may be non-zero
  7726  0049D0                     	endif
  7727  0049D0                     	if	0	;tblptru may be non-zero
  7728  0049D0                     	endif
  7729  0049D0  0008               	tblrd		*
  7730  0049D2  50F5               	movf	tablat,w,c
  7731  0049D4  0A20               	xorlw	32
  7732  0049D6  B4D8               	btfsc	status,2,c
  7733  0049D8  EFF0  F024         	goto	u10071
  7734  0049DC  EFF2  F024         	goto	u10070
  7735  0049E0                     u10071:
  7736  0049E0  EFE2  F024         	goto	l7591
  7737  0049E4                     u10070:
  7738  0049E4  0EF7               	movlw	247
  7739  0049E6  6E0C               	movwf	??_atoi^0,c
  7740  0049E8  0EFF               	movlw	255
  7741  0049EA  6E0D               	movwf	(??_atoi+1)^0,c
  7742  0049EC  C00A  FFF6         	movff	atoi@s,tblptrl
  7743  0049F0  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7744  0049F4                     	if	0	;tblptru may be non-zero
  7745  0049F4                     	endif
  7746  0049F4                     	if	0	;tblptru may be non-zero
  7747  0049F4                     	endif
  7748  0049F4  0008               	tblrd		*
  7749  0049F6  50F5               	movf	tablat,w,c
  7750  0049F8  6E0E               	movwf	(??_atoi+2)^0,c
  7751  0049FA  6A0F               	clrf	(??_atoi+3)^0,c
  7752  0049FC  500C               	movf	??_atoi^0,w,c
  7753  0049FE  260E               	addwf	(??_atoi+2)^0,f,c
  7754  004A00  500D               	movf	(??_atoi+1)^0,w,c
  7755  004A02  220F               	addwfc	(??_atoi+3)^0,f,c
  7756  004A04  500F               	movf	(??_atoi+3)^0,w,c
  7757  004A06  E109               	bnz	u10080
  7758  004A08  0E05               	movlw	5
  7759  004A0A  5C0E               	subwf	(??_atoi+2)^0,w,c
  7760  004A0C  A0D8               	btfss	status,0,c
  7761  004A0E  EF0B  F025         	goto	u10081
  7762  004A12  EF0D  F025         	goto	u10080
  7763  004A16                     u10081:
  7764  004A16  EFE2  F024         	goto	l7591
  7765  004A1A                     u10080:
  7766  004A1A  EF17  F025         	goto	l7603
  7767  004A1E                     l7599:
  7768  004A1E  0E00               	movlw	0
  7769  004A20  6E11               	movwf	(atoi@neg+1)^0,c
  7770  004A22  0E01               	movlw	1
  7771  004A24  6E10               	movwf	atoi@neg^0,c
  7772  004A26                     l7601:
  7773  004A26  4A0A               	infsnz	atoi@s^0,f,c
  7774  004A28  2A0B               	incf	(atoi@s+1)^0,f,c
  7775  004A2A  EF4C  F025         	goto	l7611
  7776  004A2E                     l7603:
  7777  004A2E  C00A  FFF6         	movff	atoi@s,tblptrl
  7778  004A32  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7779  004A36                     	if	0	;tblptru may be non-zero
  7780  004A36                     	endif
  7781  004A36                     	if	0	;tblptru may be non-zero
  7782  004A36                     	endif
  7783  004A36  0008               	tblrd		*
  7784  004A38  50F5               	movf	tablat,w,c
  7785  004A3A  6E0C               	movwf	??_atoi^0,c
  7786  004A3C  6A0D               	clrf	(??_atoi+1)^0,c
  7787                           
  7788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7789                           ; Switch size 1, requested type "simple"
  7790                           ; Number of cases is 1, Range of values is 0 to 0
  7791                           ; switch strategies available:
  7792                           ; Name         Instructions Cycles
  7793                           ; simple_byte            4     3 (average)
  7794                           ;	Chosen strategy is simple_byte
  7795  004A3E  500D               	movf	(??_atoi+1)^0,w,c
  7796  004A40  0A00               	xorlw	0	; case 0
  7797  004A42  B4D8               	btfsc	status,2,c
  7798  004A44  EF26  F025         	goto	l8493
  7799  004A48  EF4C  F025         	goto	l7611
  7800  004A4C                     l8493:
  7801                           
  7802                           ; Switch size 1, requested type "simple"
  7803                           ; Number of cases is 2, Range of values is 43 to 45
  7804                           ; switch strategies available:
  7805                           ; Name         Instructions Cycles
  7806                           ; simple_byte            7     4 (average)
  7807                           ;	Chosen strategy is simple_byte
  7808  004A4C  500C               	movf	??_atoi^0,w,c
  7809  004A4E  0A2B               	xorlw	43	; case 43
  7810  004A50  B4D8               	btfsc	status,2,c
  7811  004A52  EF13  F025         	goto	l7601
  7812  004A56  0A06               	xorlw	6	; case 45
  7813  004A58  B4D8               	btfsc	status,2,c
  7814  004A5A  EF0F  F025         	goto	l7599
  7815  004A5E  EF4C  F025         	goto	l7611
  7816  004A62                     l7605:
  7817  004A62  C012  F003         	movff	atoi@n,___wmul@multiplier
  7818  004A66  C013  F004         	movff	atoi@n+1,___wmul@multiplier+1
  7819  004A6A  0E00               	movlw	0
  7820  004A6C  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  7821  004A6E  0E0A               	movlw	10
  7822  004A70  6E05               	movwf	___wmul@multiplicand^0,c
  7823  004A72  ECBF  F02E         	call	___wmul	;wreg free
  7824  004A76  C00A  FFF6         	movff	atoi@s,tblptrl
  7825  004A7A  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7826  004A7E                     	if	0	;tblptru may be non-zero
  7827  004A7E                     	endif
  7828  004A7E                     	if	0	;tblptru may be non-zero
  7829  004A7E                     	endif
  7830  004A7E  0008               	tblrd		*
  7831  004A80  50F5               	movf	tablat,w,c
  7832  004A82  5E03               	subwf	?___wmul^0,f,c
  7833  004A84  0E00               	movlw	0
  7834  004A86  5A04               	subwfb	(?___wmul+1)^0,f,c
  7835  004A88  0E30               	movlw	48
  7836  004A8A  2403               	addwf	?___wmul^0,w,c
  7837  004A8C  6E12               	movwf	atoi@n^0,c
  7838  004A8E  0E00               	movlw	0
  7839  004A90  2004               	addwfc	(?___wmul+1)^0,w,c
  7840  004A92  6E13               	movwf	(atoi@n+1)^0,c
  7841  004A94  EF13  F025         	goto	l7601
  7842  004A98                     l7611:
  7843  004A98  0ED0               	movlw	208
  7844  004A9A  6E0C               	movwf	??_atoi^0,c
  7845  004A9C  0EFF               	movlw	255
  7846  004A9E  6E0D               	movwf	(??_atoi+1)^0,c
  7847  004AA0  C00A  FFF6         	movff	atoi@s,tblptrl
  7848  004AA4  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7849  004AA8                     	if	0	;tblptru may be non-zero
  7850  004AA8                     	endif
  7851  004AA8                     	if	0	;tblptru may be non-zero
  7852  004AA8                     	endif
  7853  004AA8  0008               	tblrd		*
  7854  004AAA  50F5               	movf	tablat,w,c
  7855  004AAC  6E0E               	movwf	(??_atoi+2)^0,c
  7856  004AAE  6A0F               	clrf	(??_atoi+3)^0,c
  7857  004AB0  500C               	movf	??_atoi^0,w,c
  7858  004AB2  260E               	addwf	(??_atoi+2)^0,f,c
  7859  004AB4  500D               	movf	(??_atoi+1)^0,w,c
  7860  004AB6  220F               	addwfc	(??_atoi+3)^0,f,c
  7861  004AB8  500F               	movf	(??_atoi+3)^0,w,c
  7862  004ABA  E109               	bnz	u10090
  7863  004ABC  0E0A               	movlw	10
  7864  004ABE  5C0E               	subwf	(??_atoi+2)^0,w,c
  7865  004AC0  A0D8               	btfss	status,0,c
  7866  004AC2  EF65  F025         	goto	u10091
  7867  004AC6  EF67  F025         	goto	u10090
  7868  004ACA                     u10091:
  7869  004ACA  EF31  F025         	goto	l7605
  7870  004ACE                     u10090:
  7871  004ACE  5010               	movf	atoi@neg^0,w,c
  7872  004AD0  1011               	iorwf	(atoi@neg+1)^0,w,c
  7873  004AD2  A4D8               	btfss	status,2,c
  7874  004AD4  EF6E  F025         	goto	u10101
  7875  004AD8  EF70  F025         	goto	u10100
  7876  004ADC                     u10101:
  7877  004ADC  EF7E  F025         	goto	l1159
  7878  004AE0                     u10100:
  7879  004AE0  C012  F00C         	movff	atoi@n,??_atoi
  7880  004AE4  C013  F00D         	movff	atoi@n+1,??_atoi+1
  7881  004AE8  1E0C               	comf	??_atoi^0,f,c
  7882  004AEA  1E0D               	comf	(??_atoi+1)^0,f,c
  7883  004AEC  4A0C               	infsnz	??_atoi^0,f,c
  7884  004AEE  2A0D               	incf	(??_atoi+1)^0,f,c
  7885  004AF0  C00C  F00A         	movff	??_atoi,?_atoi
  7886  004AF4  C00D  F00B         	movff	??_atoi+1,?_atoi+1
  7887  004AF8  EF82  F025         	goto	l1162
  7888  004AFC                     l1159:
  7889  004AFC  C012  F00A         	movff	atoi@n,?_atoi
  7890  004B00  C013  F00B         	movff	atoi@n+1,?_atoi+1
  7891  004B04                     l1162:
  7892  004B04  0012               	return		;funcret
  7893  004B06                     __end_of_atoi:
  7894                           	callstack 0
  7895                           
  7896 ;; *************** function _memset *****************
  7897 ;; Defined at:
  7898 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;  dest            2    2[COMRAM] PTR void 
  7901 ;;		 -> bufferRx(50), 
  7902 ;;  c               2    4[COMRAM] int 
  7903 ;;  n               2    6[COMRAM] unsigned int 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  s               2   12[COMRAM] PTR unsigned char 
  7906 ;;		 -> bufferRx(50), 
  7907 ;;  k               2   10[COMRAM] unsigned int 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  2    2[COMRAM] PTR void 
  7910 ;; Registers used:
  7911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7917 ;;      Params:         6       0       0       0       0       0       0       0       0
  7918 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7919 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7920 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7921 ;;Total ram usage:       12 bytes
  7922 ;; Hardware stack levels used: 1
  7923 ;; Hardware stack levels required when called: 2
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_main
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text28
  7932  0046D6                     __ptext28:
  7933                           	callstack 0
  7934  0046D6                     _memset:
  7935                           	callstack 28
  7936  0046D6  C003  F00D         	movff	memset@dest,memset@s
  7937  0046DA  C004  F00E         	movff	memset@dest+1,memset@s+1
  7938  0046DE  5007               	movf	memset@n^0,w,c
  7939  0046E0  1008               	iorwf	(memset@n+1)^0,w,c
  7940  0046E2  A4D8               	btfss	status,2,c
  7941  0046E4  EF76  F023         	goto	u7691
  7942  0046E8  EF78  F023         	goto	u7690
  7943  0046EC                     u7691:
  7944  0046EC  EF7A  F023         	goto	l6057
  7945  0046F0                     u7690:
  7946  0046F0  EF25  F024         	goto	l895
  7947  0046F4                     l6057:
  7948  0046F4  C00D  FFD9         	movff	memset@s,fsr2l
  7949  0046F8  C00E  FFDA         	movff	memset@s+1,fsr2h
  7950  0046FC  C005  FFDF         	movff	memset@c,indf2
  7951  004700  5007               	movf	memset@n^0,w,c
  7952  004702  240D               	addwf	memset@s^0,w,c
  7953  004704  6E09               	movwf	??_memset^0,c
  7954  004706  5008               	movf	(memset@n+1)^0,w,c
  7955  004708  200E               	addwfc	(memset@s+1)^0,w,c
  7956  00470A  6E0A               	movwf	(??_memset+1)^0,c
  7957  00470C  0EFF               	movlw	255
  7958  00470E  2409               	addwf	??_memset^0,w,c
  7959  004710  6ED9               	movwf	fsr2l,c
  7960  004712  0EFF               	movlw	255
  7961  004714  200A               	addwfc	(??_memset+1)^0,w,c
  7962  004716  6EDA               	movwf	fsr2h,c
  7963  004718  C005  FFDF         	movff	memset@c,indf2
  7964  00471C  5008               	movf	(memset@n+1)^0,w,c
  7965  00471E  E107               	bnz	u7701
  7966  004720  0E03               	movlw	3
  7967  004722  5C07               	subwf	memset@n^0,w,c
  7968  004724  B0D8               	btfsc	status,0,c
  7969  004726  EF97  F023         	goto	u7701
  7970  00472A  EF99  F023         	goto	u7700
  7971  00472E                     u7701:
  7972  00472E  EF9B  F023         	goto	l6063
  7973  004732                     u7700:
  7974  004732  EF25  F024         	goto	l895
  7975  004736                     l6063:
  7976  004736  EE20 F001          	lfsr	2,1
  7977  00473A  500D               	movf	memset@s^0,w,c
  7978  00473C  26D9               	addwf	fsr2l,f,c
  7979  00473E  500E               	movf	(memset@s+1)^0,w,c
  7980  004740  22DA               	addwfc	fsr2h,f,c
  7981  004742  C005  FFDF         	movff	memset@c,indf2
  7982  004746  EE20 F002          	lfsr	2,2
  7983  00474A  500D               	movf	memset@s^0,w,c
  7984  00474C  26D9               	addwf	fsr2l,f,c
  7985  00474E  500E               	movf	(memset@s+1)^0,w,c
  7986  004750  22DA               	addwfc	fsr2h,f,c
  7987  004752  C005  FFDF         	movff	memset@c,indf2
  7988  004756  5007               	movf	memset@n^0,w,c
  7989  004758  240D               	addwf	memset@s^0,w,c
  7990  00475A  6E09               	movwf	??_memset^0,c
  7991  00475C  5008               	movf	(memset@n+1)^0,w,c
  7992  00475E  200E               	addwfc	(memset@s+1)^0,w,c
  7993  004760  6E0A               	movwf	(??_memset+1)^0,c
  7994  004762  0EFE               	movlw	254
  7995  004764  2409               	addwf	??_memset^0,w,c
  7996  004766  6ED9               	movwf	fsr2l,c
  7997  004768  0EFF               	movlw	255
  7998  00476A  200A               	addwfc	(??_memset+1)^0,w,c
  7999  00476C  6EDA               	movwf	fsr2h,c
  8000  00476E  C005  FFDF         	movff	memset@c,indf2
  8001  004772  5007               	movf	memset@n^0,w,c
  8002  004774  240D               	addwf	memset@s^0,w,c
  8003  004776  6E09               	movwf	??_memset^0,c
  8004  004778  5008               	movf	(memset@n+1)^0,w,c
  8005  00477A  200E               	addwfc	(memset@s+1)^0,w,c
  8006  00477C  6E0A               	movwf	(??_memset+1)^0,c
  8007  00477E  0EFD               	movlw	253
  8008  004780  2409               	addwf	??_memset^0,w,c
  8009  004782  6ED9               	movwf	fsr2l,c
  8010  004784  0EFF               	movlw	255
  8011  004786  200A               	addwfc	(??_memset+1)^0,w,c
  8012  004788  6EDA               	movwf	fsr2h,c
  8013  00478A  C005  FFDF         	movff	memset@c,indf2
  8014  00478E  5008               	movf	(memset@n+1)^0,w,c
  8015  004790  E107               	bnz	u7711
  8016  004792  0E07               	movlw	7
  8017  004794  5C07               	subwf	memset@n^0,w,c
  8018  004796  B0D8               	btfsc	status,0,c
  8019  004798  EFD0  F023         	goto	u7711
  8020  00479C  EFD2  F023         	goto	u7710
  8021  0047A0                     u7711:
  8022  0047A0  EFD4  F023         	goto	l6069
  8023  0047A4                     u7710:
  8024  0047A4  EF25  F024         	goto	l895
  8025  0047A8                     l6069:
  8026  0047A8  EE20 F003          	lfsr	2,3
  8027  0047AC  500D               	movf	memset@s^0,w,c
  8028  0047AE  26D9               	addwf	fsr2l,f,c
  8029  0047B0  500E               	movf	(memset@s+1)^0,w,c
  8030  0047B2  22DA               	addwfc	fsr2h,f,c
  8031  0047B4  C005  FFDF         	movff	memset@c,indf2
  8032  0047B8  5007               	movf	memset@n^0,w,c
  8033  0047BA  240D               	addwf	memset@s^0,w,c
  8034  0047BC  6E09               	movwf	??_memset^0,c
  8035  0047BE  5008               	movf	(memset@n+1)^0,w,c
  8036  0047C0  200E               	addwfc	(memset@s+1)^0,w,c
  8037  0047C2  6E0A               	movwf	(??_memset+1)^0,c
  8038  0047C4  0EFC               	movlw	252
  8039  0047C6  2409               	addwf	??_memset^0,w,c
  8040  0047C8  6ED9               	movwf	fsr2l,c
  8041  0047CA  0EFF               	movlw	255
  8042  0047CC  200A               	addwfc	(??_memset+1)^0,w,c
  8043  0047CE  6EDA               	movwf	fsr2h,c
  8044  0047D0  C005  FFDF         	movff	memset@c,indf2
  8045  0047D4  5008               	movf	(memset@n+1)^0,w,c
  8046  0047D6  E107               	bnz	u7721
  8047  0047D8  0E09               	movlw	9
  8048  0047DA  5C07               	subwf	memset@n^0,w,c
  8049  0047DC  B0D8               	btfsc	status,0,c
  8050  0047DE  EFF3  F023         	goto	u7721
  8051  0047E2  EFF5  F023         	goto	u7720
  8052  0047E6                     u7721:
  8053  0047E6  EFF7  F023         	goto	l6075
  8054  0047EA                     u7720:
  8055  0047EA  EF25  F024         	goto	l895
  8056  0047EE                     l6075:
  8057  0047EE  C00D  F009         	movff	memset@s,??_memset
  8058  0047F2  C00E  F00A         	movff	memset@s+1,??_memset+1
  8059  0047F6  1E09               	comf	??_memset^0,f,c
  8060  0047F8  1E0A               	comf	(??_memset+1)^0,f,c
  8061  0047FA  4A09               	infsnz	??_memset^0,f,c
  8062  0047FC  2A0A               	incf	(??_memset+1)^0,f,c
  8063  0047FE  0E03               	movlw	3
  8064  004800  1409               	andwf	??_memset^0,w,c
  8065  004802  6E0B               	movwf	memset@k^0,c
  8066  004804  6A0C               	clrf	(memset@k+1)^0,c
  8067  004806  500B               	movf	memset@k^0,w,c
  8068  004808  260D               	addwf	memset@s^0,f,c
  8069  00480A  500C               	movf	(memset@k+1)^0,w,c
  8070  00480C  220E               	addwfc	(memset@s+1)^0,f,c
  8071  00480E  500B               	movf	memset@k^0,w,c
  8072  004810  5E07               	subwf	memset@n^0,f,c
  8073  004812  500C               	movf	(memset@k+1)^0,w,c
  8074  004814  5A08               	subwfb	(memset@n+1)^0,f,c
  8075  004816  0EFC               	movlw	252
  8076  004818  1607               	andwf	memset@n^0,f,c
  8077  00481A  0EFF               	movlw	255
  8078  00481C  1608               	andwf	(memset@n+1)^0,f,c
  8079  00481E  EF1C  F024         	goto	l6083
  8080  004822                     l6077:
  8081  004822  C00D  FFD9         	movff	memset@s,fsr2l
  8082  004826  C00E  FFDA         	movff	memset@s+1,fsr2h
  8083  00482A  C005  FFDF         	movff	memset@c,indf2
  8084  00482E  0607               	decf	memset@n^0,f,c
  8085  004830  A0D8               	btfss	status,0,c
  8086  004832  0608               	decf	(memset@n+1)^0,f,c
  8087  004834  4A0D               	infsnz	memset@s^0,f,c
  8088  004836  2A0E               	incf	(memset@s+1)^0,f,c
  8089  004838                     l6083:
  8090  004838  5007               	movf	memset@n^0,w,c
  8091  00483A  1008               	iorwf	(memset@n+1)^0,w,c
  8092  00483C  A4D8               	btfss	status,2,c
  8093  00483E  EF23  F024         	goto	u7731
  8094  004842  EF25  F024         	goto	u7730
  8095  004846                     u7731:
  8096  004846  EF11  F024         	goto	l6077
  8097  00484A                     u7730:
  8098  00484A                     l895:
  8099  00484A  0012               	return		;funcret
  8100  00484C                     __end_of_memset:
  8101                           	callstack 0
  8102                           
  8103 ;; *************** function _getDistance *****************
  8104 ;; Defined at:
  8105 ;;		line 133 in file "main.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;		None
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;  count           2    4[COMRAM] unsigned short 
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  2    2[COMRAM] unsigned short 
  8112 ;; Registers used:
  8113 ;;		wreg, status,2, status,0
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8119 ;;      Params:         2       0       0       0       0       0       0       0       0
  8120 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8122 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8123 ;;Total ram usage:        4 bytes
  8124 ;; Hardware stack levels used: 1
  8125 ;; Hardware stack levels required when called: 2
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_main
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text29
  8134  0059FE                     __ptext29:
  8135                           	callstack 0
  8136  0059FE                     _getDistance:
  8137                           	callstack 28
  8138  0059FE                     
  8139                           ;main.c: 134:     uint16_t count=0;
  8140  0059FE  0E00               	movlw	0
  8141  005A00  6E06               	movwf	(getDistance@count+1)^0,c
  8142  005A02  0E00               	movlw	0
  8143  005A04  6E05               	movwf	getDistance@count^0,c
  8144  005A06                     
  8145                           ;main.c: 135:     PORTBbits.RB0 = 1;
  8146  005A06  8081               	bsf	129,0,c	;volatile
  8147  005A08                     
  8148                           ;main.c: 136:     _delay((unsigned long)((10)*(20000000UL/4000000.0)));
  8149  005A08  0E10               	movlw	16
  8150  005A0A                     u11327:
  8151  005A0A  2EE8               	decfsz	wreg,f,c
  8152  005A0C  D7FE               	bra	u11327
  8153  005A0E  D000               	nop2	
  8154  005A10                     
  8155                           ;main.c: 137:     PORTBbits.RB0 = 0;
  8156  005A10  9081               	bcf	129,0,c	;volatile
  8157  005A12                     l105:
  8158  005A12  A281               	btfss	129,1,c	;volatile
  8159  005A14  EF0E  F02D         	goto	u7741
  8160  005A18  EF10  F02D         	goto	u7740
  8161  005A1C                     u7741:
  8162  005A1C  EF09  F02D         	goto	l105
  8163  005A20                     u7740:
  8164  005A20  EF18  F02D         	goto	l6097
  8165  005A24                     l6093:
  8166                           
  8167                           ;main.c: 141:         count++;
  8168  005A24  4A05               	infsnz	getDistance@count^0,f,c
  8169  005A26  2A06               	incf	(getDistance@count+1)^0,f,c
  8170  005A28                     
  8171                           ;main.c: 142:         _delay((unsigned long)((58)*(20000000UL/4000000.0)));
  8172  005A28  0E60               	movlw	96
  8173  005A2A                     u11337:
  8174  005A2A  2EE8               	decfsz	wreg,f,c
  8175  005A2C  D7FE               	bra	u11337
  8176  005A2E  D000               	nop2	
  8177  005A30                     l6097:
  8178                           
  8179                           ;main.c: 140:     while(PORTBbits.RB1 == 1){
  8180  005A30  B281               	btfsc	129,1,c	;volatile
  8181  005A32  EF1D  F02D         	goto	u7751
  8182  005A36  EF1F  F02D         	goto	u7750
  8183  005A3A                     u7751:
  8184  005A3A  EF12  F02D         	goto	l6093
  8185  005A3E                     u7750:
  8186  005A3E                     
  8187                           ;main.c: 145:     return(count);
  8188  005A3E  C005  F003         	movff	getDistance@count,?_getDistance
  8189  005A42  C006  F004         	movff	getDistance@count+1,?_getDistance+1
  8190  005A46  0012               	return		;funcret
  8191  005A48                     __end_of_getDistance:
  8192                           	callstack 0
  8193                           
  8194 ;; *************** function _atof *****************
  8195 ;; Defined at:
  8196 ;;		line 423 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strtof.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;  s               2   30[BANK0 ] PTR const unsigned char 
  8199 ;;		 -> NULL(0), bufferRx(50), 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;		None
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  4   30[BANK0 ] PTR const unsigned char 
  8204 ;; Registers used:
  8205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8211 ;;      Params:         0       4       0       0       0       0       0       0       0
  8212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8214 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8215 ;;Total ram usage:        4 bytes
  8216 ;; Hardware stack levels used: 1
  8217 ;; Hardware stack levels required when called: 5
  8218 ;; This function calls:
  8219 ;;		_strtof
  8220 ;; This function is called by:
  8221 ;;		_main
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text30
  8226  005D58                     __ptext30:
  8227                           	callstack 0
  8228  005D58                     _atof:
  8229                           	callstack 25
  8230  005D58  C07E  F052         	movff	atof@s,strtof@s
  8231  005D5C  C07F  F053         	movff	atof@s+1,strtof@s+1
  8232  005D60  0E00               	movlw	0
  8233  005D62  6E54               	movwf	strtof@res^0,c
  8234  005D64  0E00               	movlw	0
  8235  005D66  6E55               	movwf	(strtof@res+1)^0,c
  8236  005D68  EC25  F004         	call	_strtof	;wreg free
  8237  005D6C  C052  F07E         	movff	?_strtof,?_atof
  8238  005D70  C053  F07F         	movff	?_strtof+1,?_atof+1
  8239  005D74  C054  F080         	movff	?_strtof+2,?_atof+2
  8240  005D78  C055  F081         	movff	?_strtof+3,?_atof+3
  8241  005D7C  0012               	return		;funcret
  8242  005D7E                     __end_of_atof:
  8243                           	callstack 0
  8244                           
  8245 ;; *************** function _strtof *****************
  8246 ;; Defined at:
  8247 ;;		line 95 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strtof.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  s               2   81[COMRAM] PTR const unsigned char 
  8250 ;;		 -> NULL(0), bufferRx(50), 
  8251 ;;  res             2   83[COMRAM] PTR PTR unsigned char 
  8252 ;;		 -> NULL(0), 
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;  _u              4   25[BANK0 ] struct .
  8255 ;;  eexp            2   23[BANK0 ] int 
  8256 ;;  expon           2   21[BANK0 ] int 
  8257 ;;  i               1   29[BANK0 ] unsigned char 
  8258 ;;  flags           1   20[BANK0 ] unsigned char 
  8259 ;;  digit           1   19[BANK0 ] unsigned char 
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  4   81[COMRAM] float 
  8262 ;; Registers used:
  8263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8269 ;;      Params:         4       0       0       0       0       0       0       0       0
  8270 ;;      Locals:         0      11       0       0       0       0       0       0       0
  8271 ;;      Temps:          0       6       0       0       0       0       0       0       0
  8272 ;;      Totals:         4      17       0       0       0       0       0       0       0
  8273 ;;Total ram usage:       21 bytes
  8274 ;; Hardware stack levels used: 1
  8275 ;; Hardware stack levels required when called: 4
  8276 ;; This function calls:
  8277 ;;		___fldiv
  8278 ;;		___fleq
  8279 ;;		___flge
  8280 ;;		___flmul
  8281 ;;		___flneg
  8282 ;;		___lmul
  8283 ;;		___wmul
  8284 ;;		___xxtofl
  8285 ;;		_isdigit
  8286 ;;		_isspace
  8287 ;;		_isxdigit
  8288 ;;		_nanf
  8289 ;;		_toupper
  8290 ;; This function is called by:
  8291 ;;		_atof
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text31
  8296  00084A                     __ptext31:
  8297                           	callstack 0
  8298  00084A                     _strtof:
  8299                           	callstack 25
  8300  00084A  5054               	movf	strtof@res^0,w,c
  8301  00084C  1055               	iorwf	(strtof@res+1)^0,w,c
  8302  00084E  B4D8               	btfsc	status,2,c
  8303  000850  EF2C  F004         	goto	u10361
  8304  000854  EF2E  F004         	goto	u10360
  8305  000858                     u10361:
  8306  000858  EF3A  F004         	goto	l7829
  8307  00085C                     u10360:
  8308  00085C  C054  FFD9         	movff	strtof@res,fsr2l
  8309  000860  C055  FFDA         	movff	strtof@res+1,fsr2h
  8310  000864  C052  FFDE         	movff	strtof@s,postinc2
  8311  000868  C053  FFDD         	movff	strtof@s+1,postdec2
  8312  00086C  EF3A  F004         	goto	l7829
  8313  000870                     l7825:
  8314                           
  8315                           ; BSR set to: 0
  8316  000870  4A52               	infsnz	strtof@s^0,f,c
  8317  000872  2A53               	incf	(strtof@s+1)^0,f,c
  8318  000874                     l7829:
  8319  000874  C052  FFD9         	movff	strtof@s,fsr2l
  8320  000878  C053  FFDA         	movff	strtof@s+1,fsr2h
  8321  00087C  0E20               	movlw	32
  8322  00087E  18DE               	xorwf	postinc2,w,c
  8323  000880  B4D8               	btfsc	status,2,c
  8324  000882  EF45  F004         	goto	u10371
  8325  000886  EF48  F004         	goto	u10370
  8326  00088A                     u10371:
  8327  00088A  0E01               	movlw	1
  8328  00088C  EF49  F004         	goto	u10380
  8329  000890                     u10370:
  8330  000890  0E00               	movlw	0
  8331  000892                     u10380:
  8332  000892  0100               	movlb	0	; () banked
  8333  000894  6F77               	movwf	strtof@eexp& (0+255),b
  8334  000896  6B78               	clrf	(strtof@eexp+1)& (0+255),b
  8335  000898  5177               	movf	strtof@eexp& (0+255),w,b
  8336  00089A  1178               	iorwf	(strtof@eexp+1)& (0+255),w,b
  8337  00089C  A4D8               	btfss	status,2,c
  8338  00089E  EF53  F004         	goto	u10391
  8339  0008A2  EF55  F004         	goto	u10390
  8340  0008A6                     u10391:
  8341  0008A6  EF38  F004         	goto	l7825
  8342  0008AA                     u10390:
  8343  0008AA                     
  8344                           ; BSR set to: 0
  8345  0008AA  0EF7               	movlw	247
  8346  0008AC  6F6D               	movwf	??_strtof& (0+255),b
  8347  0008AE  0EFF               	movlw	255
  8348  0008B0  6F6E               	movwf	(??_strtof+1)& (0+255),b
  8349  0008B2  C052  FFD9         	movff	strtof@s,fsr2l
  8350  0008B6  C053  FFDA         	movff	strtof@s+1,fsr2h
  8351  0008BA  50DF               	movf	indf2,w,c
  8352  0008BC  6F6F               	movwf	(??_strtof+2)& (0+255),b
  8353  0008BE  516F               	movf	(??_strtof+2)& (0+255),w,b
  8354  0008C0  6F77               	movwf	strtof@eexp& (0+255),b
  8355  0008C2  6B78               	clrf	(strtof@eexp+1)& (0+255),b
  8356  0008C4  C077  F070         	movff	strtof@eexp,??_strtof+3
  8357  0008C8  C078  F071         	movff	strtof@eexp+1,??_strtof+4
  8358  0008CC  516D               	movf	??_strtof& (0+255),w,b
  8359  0008CE  2770               	addwf	(??_strtof+3)& (0+255),f,b
  8360  0008D0  516E               	movf	(??_strtof+1)& (0+255),w,b
  8361  0008D2  2371               	addwfc	(??_strtof+4)& (0+255),f,b
  8362  0008D4  5171               	movf	(??_strtof+4)& (0+255),w,b
  8363  0008D6  E109               	bnz	u10400
  8364  0008D8  0E05               	movlw	5
  8365  0008DA  5D70               	subwf	(??_strtof+3)& (0+255),w,b
  8366  0008DC  A0D8               	btfss	status,0,c
  8367  0008DE  EF73  F004         	goto	u10401
  8368  0008E2  EF75  F004         	goto	u10400
  8369  0008E6                     u10401:
  8370  0008E6  EF38  F004         	goto	l7825
  8371  0008EA                     u10400:
  8372  0008EA                     
  8373                           ; BSR set to: 0
  8374  0008EA  0E00               	movlw	0
  8375  0008EC  6F74               	movwf	strtof@flags& (0+255),b
  8376  0008EE                     
  8377                           ; BSR set to: 0
  8378  0008EE  0E2D               	movlw	45
  8379  0008F0  1977               	xorwf	strtof@eexp& (0+255),w,b
  8380  0008F2  1178               	iorwf	(strtof@eexp+1)& (0+255),w,b
  8381  0008F4  A4D8               	btfss	status,2,c
  8382  0008F6  EF7F  F004         	goto	u10411
  8383  0008FA  EF81  F004         	goto	u10410
  8384  0008FE                     u10411:
  8385  0008FE  EF87  F004         	goto	l7841
  8386  000902                     u10410:
  8387  000902                     
  8388                           ; BSR set to: 0
  8389  000902  0E01               	movlw	1
  8390  000904  6F74               	movwf	strtof@flags& (0+255),b
  8391  000906                     l7839:
  8392                           
  8393                           ; BSR set to: 0
  8394  000906  4A52               	infsnz	strtof@s^0,f,c
  8395  000908  2A53               	incf	(strtof@s+1)^0,f,c
  8396  00090A  EF93  F004         	goto	l7845
  8397  00090E                     l7841:
  8398                           
  8399                           ; BSR set to: 0
  8400  00090E  0E2B               	movlw	43
  8401  000910  1977               	xorwf	strtof@eexp& (0+255),w,b
  8402  000912  1178               	iorwf	(strtof@eexp+1)& (0+255),w,b
  8403  000914  A4D8               	btfss	status,2,c
  8404  000916  EF8F  F004         	goto	u10421
  8405  00091A  EF91  F004         	goto	u10420
  8406  00091E                     u10421:
  8407  00091E  EF93  F004         	goto	l7845
  8408  000922                     u10420:
  8409  000922  EF83  F004         	goto	l7839
  8410  000926                     l7845:
  8411                           
  8412                           ; BSR set to: 0
  8413  000926  0E00               	movlw	0
  8414  000928  6F7D               	movwf	strtof@i& (0+255),b
  8415  00092A  EF98  F004         	goto	l7849
  8416  00092E                     l7847:
  8417                           
  8418                           ; BSR set to: 0
  8419  00092E  2B7D               	incf	strtof@i& (0+255),f,b
  8420  000930                     l7849:
  8421                           
  8422                           ; BSR set to: 0
  8423  000930  517D               	movf	strtof@i& (0+255),w,b
  8424  000932  2452               	addwf	strtof@s^0,w,c
  8425  000934  6ED9               	movwf	fsr2l,c
  8426  000936  0E00               	movlw	0
  8427  000938  2053               	addwfc	(strtof@s+1)^0,w,c
  8428  00093A  6EDA               	movwf	fsr2h,c
  8429  00093C  50DF               	movf	indf2,w,c
  8430  00093E  B4D8               	btfsc	status,2,c
  8431  000940  EFA4  F004         	goto	u10431
  8432  000944  EFA6  F004         	goto	u10430
  8433  000948                     u10431:
  8434  000948  EFD6  F004         	goto	l7855
  8435  00094C                     u10430:
  8436  00094C                     
  8437                           ; BSR set to: 0
  8438  00094C  517D               	movf	strtof@i& (0+255),w,b
  8439  00094E  2452               	addwf	strtof@s^0,w,c
  8440  000950  6ED9               	movwf	fsr2l,c
  8441  000952  0E00               	movlw	0
  8442  000954  2053               	addwfc	(strtof@s+1)^0,w,c
  8443  000956  6EDA               	movwf	fsr2h,c
  8444  000958  50DF               	movf	indf2,w,c
  8445  00095A  6F6D               	movwf	??_strtof& (0+255),b
  8446  00095C  0E2B               	movlw	low STR_17
  8447  00095E  257D               	addwf	strtof@i& (0+255),w,b
  8448  000960  6EF6               	movwf	tblptrl,c
  8449  000962  6AF7               	clrf	tblptrh,c
  8450  000964  0E08               	movlw	high STR_17
  8451  000966  22F7               	addwfc	tblptrh,f,c
  8452  000968                     	if	0	;There are less than 3 active tblptr bytes
  8453  000968                     	endif
  8454  000968  0008               	tblrd		*
  8455  00096A  50F5               	movf	tablat,w,c
  8456  00096C  196D               	xorwf	??_strtof& (0+255),w,b
  8457  00096E  B4D8               	btfsc	status,2,c
  8458  000970  EFBC  F004         	goto	u10441
  8459  000974  EFBE  F004         	goto	u10440
  8460  000978                     u10441:
  8461  000978  EF97  F004         	goto	l7847
  8462  00097C                     u10440:
  8463  00097C                     
  8464                           ; BSR set to: 0
  8465  00097C  517D               	movf	strtof@i& (0+255),w,b
  8466  00097E  2452               	addwf	strtof@s^0,w,c
  8467  000980  6ED9               	movwf	fsr2l,c
  8468  000982  0E00               	movlw	0
  8469  000984  2053               	addwfc	(strtof@s+1)^0,w,c
  8470  000986  6EDA               	movwf	fsr2h,c
  8471  000988  50DF               	movf	indf2,w,c
  8472  00098A  6F6D               	movwf	??_strtof& (0+255),b
  8473  00098C  0E22               	movlw	low STR_18
  8474  00098E  257D               	addwf	strtof@i& (0+255),w,b
  8475  000990  6EF6               	movwf	tblptrl,c
  8476  000992  6AF7               	clrf	tblptrh,c
  8477  000994  0E08               	movlw	high STR_18
  8478  000996  22F7               	addwfc	tblptrh,f,c
  8479  000998                     	if	0	;There are less than 3 active tblptr bytes
  8480  000998                     	endif
  8481  000998  0008               	tblrd		*
  8482  00099A  50F5               	movf	tablat,w,c
  8483  00099C  196D               	xorwf	??_strtof& (0+255),w,b
  8484  00099E  B4D8               	btfsc	status,2,c
  8485  0009A0  EFD4  F004         	goto	u10451
  8486  0009A4  EFD6  F004         	goto	u10450
  8487  0009A8                     u10451:
  8488  0009A8  EF97  F004         	goto	l7847
  8489  0009AC                     u10450:
  8490  0009AC                     l7855:
  8491                           
  8492                           ; BSR set to: 0
  8493  0009AC  0E02               	movlw	2
  8494  0009AE  657D               	cpfsgt	strtof@i& (0+255),b
  8495  0009B0  EFDC  F004         	goto	u10461
  8496  0009B4  EFDE  F004         	goto	u10460
  8497  0009B8                     u10461:
  8498  0009B8  EF0A  F005         	goto	l7867
  8499  0009BC                     u10460:
  8500  0009BC                     
  8501                           ; BSR set to: 0
  8502  0009BC  0E00               	movlw	0
  8503  0009BE  6F79               	movwf	strtof@_u& (0+255),b
  8504  0009C0  0E00               	movlw	0
  8505  0009C2  6F7A               	movwf	(strtof@_u+1)& (0+255),b
  8506  0009C4  0E80               	movlw	128
  8507  0009C6  6F7B               	movwf	(strtof@_u+2)& (0+255),b
  8508  0009C8  0E7F               	movlw	127
  8509  0009CA  6F7C               	movwf	(strtof@_u+3)& (0+255),b
  8510  0009CC                     
  8511                           ; BSR set to: 0
  8512  0009CC  5054               	movf	strtof@res^0,w,c
  8513  0009CE  1055               	iorwf	(strtof@res+1)^0,w,c
  8514  0009D0  B4D8               	btfsc	status,2,c
  8515  0009D2  EFED  F004         	goto	u10471
  8516  0009D6  EFEF  F004         	goto	u10470
  8517  0009DA                     u10471:
  8518  0009DA  EF56  F00C         	goto	l1270
  8519  0009DE                     u10470:
  8520  0009DE                     
  8521                           ; BSR set to: 0
  8522  0009DE  0E08               	movlw	8
  8523  0009E0  197D               	xorwf	strtof@i& (0+255),w,b
  8524  0009E2  B4D8               	btfsc	status,2,c
  8525  0009E4  EFF6  F004         	goto	u10481
  8526  0009E8  EFF8  F004         	goto	u10480
  8527  0009EC                     u10481:
  8528  0009EC  EFFA  F004         	goto	l7865
  8529  0009F0                     u10480:
  8530  0009F0                     
  8531                           ; BSR set to: 0
  8532  0009F0  0E03               	movlw	3
  8533  0009F2  6F7D               	movwf	strtof@i& (0+255),b
  8534  0009F4                     l7865:
  8535                           
  8536                           ; BSR set to: 0
  8537  0009F4  517D               	movf	strtof@i& (0+255),w,b
  8538  0009F6  2452               	addwf	strtof@s^0,w,c
  8539  0009F8  6F6D               	movwf	??_strtof& (0+255),b
  8540  0009FA  0E00               	movlw	0
  8541  0009FC  2053               	addwfc	(strtof@s+1)^0,w,c
  8542  0009FE  6F6E               	movwf	(??_strtof+1)& (0+255),b
  8543  000A00  C054  FFD9         	movff	strtof@res,fsr2l
  8544  000A04  C055  FFDA         	movff	strtof@res+1,fsr2h
  8545  000A08  C06D  FFDE         	movff	??_strtof,postinc2
  8546  000A0C  C06E  FFDD         	movff	??_strtof+1,postdec2
  8547  000A10  EF56  F00C         	goto	l1270
  8548  000A14                     l7867:
  8549                           
  8550                           ; BSR set to: 0
  8551  000A14  0E00               	movlw	0
  8552  000A16  6F7D               	movwf	strtof@i& (0+255),b
  8553  000A18  EF0F  F005         	goto	l7871
  8554  000A1C                     l7869:
  8555                           
  8556                           ; BSR set to: 0
  8557  000A1C  2B7D               	incf	strtof@i& (0+255),f,b
  8558  000A1E                     l7871:
  8559                           
  8560                           ; BSR set to: 0
  8561  000A1E  517D               	movf	strtof@i& (0+255),w,b
  8562  000A20  2452               	addwf	strtof@s^0,w,c
  8563  000A22  6ED9               	movwf	fsr2l,c
  8564  000A24  0E00               	movlw	0
  8565  000A26  2053               	addwfc	(strtof@s+1)^0,w,c
  8566  000A28  6EDA               	movwf	fsr2h,c
  8567  000A2A  50DF               	movf	indf2,w,c
  8568  000A2C  B4D8               	btfsc	status,2,c
  8569  000A2E  EF1B  F005         	goto	u10491
  8570  000A32  EF1D  F005         	goto	u10490
  8571  000A36                     u10491:
  8572  000A36  EF4D  F005         	goto	l7877
  8573  000A3A                     u10490:
  8574  000A3A                     
  8575                           ; BSR set to: 0
  8576  000A3A  517D               	movf	strtof@i& (0+255),w,b
  8577  000A3C  2452               	addwf	strtof@s^0,w,c
  8578  000A3E  6ED9               	movwf	fsr2l,c
  8579  000A40  0E00               	movlw	0
  8580  000A42  2053               	addwfc	(strtof@s+1)^0,w,c
  8581  000A44  6EDA               	movwf	fsr2h,c
  8582  000A46  50DF               	movf	indf2,w,c
  8583  000A48  6F6D               	movwf	??_strtof& (0+255),b
  8584  000A4A  0E40               	movlw	low STR_9
  8585  000A4C  257D               	addwf	strtof@i& (0+255),w,b
  8586  000A4E  6EF6               	movwf	tblptrl,c
  8587  000A50  6AF7               	clrf	tblptrh,c
  8588  000A52  0E08               	movlw	high STR_9
  8589  000A54  22F7               	addwfc	tblptrh,f,c
  8590  000A56                     	if	0	;There are less than 3 active tblptr bytes
  8591  000A56                     	endif
  8592  000A56  0008               	tblrd		*
  8593  000A58  50F5               	movf	tablat,w,c
  8594  000A5A  196D               	xorwf	??_strtof& (0+255),w,b
  8595  000A5C  B4D8               	btfsc	status,2,c
  8596  000A5E  EF33  F005         	goto	u10501
  8597  000A62  EF35  F005         	goto	u10500
  8598  000A66                     u10501:
  8599  000A66  EF0E  F005         	goto	l7869
  8600  000A6A                     u10500:
  8601  000A6A                     
  8602                           ; BSR set to: 0
  8603  000A6A  517D               	movf	strtof@i& (0+255),w,b
  8604  000A6C  2452               	addwf	strtof@s^0,w,c
  8605  000A6E  6ED9               	movwf	fsr2l,c
  8606  000A70  0E00               	movlw	0
  8607  000A72  2053               	addwfc	(strtof@s+1)^0,w,c
  8608  000A74  6EDA               	movwf	fsr2h,c
  8609  000A76  50DF               	movf	indf2,w,c
  8610  000A78  6F6D               	movwf	??_strtof& (0+255),b
  8611  000A7A  0E38               	movlw	low STR_8
  8612  000A7C  257D               	addwf	strtof@i& (0+255),w,b
  8613  000A7E  6EF6               	movwf	tblptrl,c
  8614  000A80  6AF7               	clrf	tblptrh,c
  8615  000A82  0E08               	movlw	high STR_8
  8616  000A84  22F7               	addwfc	tblptrh,f,c
  8617  000A86                     	if	0	;There are less than 3 active tblptr bytes
  8618  000A86                     	endif
  8619  000A86  0008               	tblrd		*
  8620  000A88  50F5               	movf	tablat,w,c
  8621  000A8A  196D               	xorwf	??_strtof& (0+255),w,b
  8622  000A8C  B4D8               	btfsc	status,2,c
  8623  000A8E  EF4B  F005         	goto	u10511
  8624  000A92  EF4D  F005         	goto	u10510
  8625  000A96                     u10511:
  8626  000A96  EF0E  F005         	goto	l7869
  8627  000A9A                     u10510:
  8628  000A9A                     l7877:
  8629                           
  8630                           ; BSR set to: 0
  8631  000A9A  0E03               	movlw	3
  8632  000A9C  197D               	xorwf	strtof@i& (0+255),w,b
  8633  000A9E  A4D8               	btfss	status,2,c
  8634  000AA0  EF54  F005         	goto	u10521
  8635  000AA4  EF56  F005         	goto	u10520
  8636  000AA8                     u10521:
  8637  000AA8  EFC5  F005         	goto	l7901
  8638  000AAC                     u10520:
  8639  000AAC                     
  8640                           ; BSR set to: 0
  8641  000AAC  0E21               	movlw	low (STR_3+32)
  8642  000AAE  6E03               	movwf	nanf@s^0,c
  8643  000AB0  0E08               	movlw	high (STR_3+32)
  8644  000AB2  6E04               	movwf	(nanf@s+1)^0,c
  8645  000AB4  ECD2  F02E         	call	_nanf	;wreg free
  8646  000AB8  C003  F079         	movff	?_nanf,strtof@_u
  8647  000ABC  C004  F07A         	movff	?_nanf+1,strtof@_u+1
  8648  000AC0  C005  F07B         	movff	?_nanf+2,strtof@_u+2
  8649  000AC4  C006  F07C         	movff	?_nanf+3,strtof@_u+3
  8650  000AC8  5054               	movf	strtof@res^0,w,c
  8651  000ACA  1055               	iorwf	(strtof@res+1)^0,w,c
  8652  000ACC  B4D8               	btfsc	status,2,c
  8653  000ACE  EF6B  F005         	goto	u10531
  8654  000AD2  EF6D  F005         	goto	u10530
  8655  000AD6                     u10531:
  8656  000AD6  EF56  F00C         	goto	l1270
  8657  000ADA                     u10530:
  8658  000ADA  0100               	movlb	0	; () banked
  8659  000ADC  517D               	movf	strtof@i& (0+255),w,b
  8660  000ADE  2652               	addwf	strtof@s^0,f,c
  8661  000AE0  0E00               	movlw	0
  8662  000AE2  2253               	addwfc	(strtof@s+1)^0,f,c
  8663  000AE4                     
  8664                           ; BSR set to: 0
  8665  000AE4  C052  FFD9         	movff	strtof@s,fsr2l
  8666  000AE8  C053  FFDA         	movff	strtof@s+1,fsr2h
  8667  000AEC  0E28               	movlw	40
  8668  000AEE  18DE               	xorwf	postinc2,w,c
  8669  000AF0  A4D8               	btfss	status,2,c
  8670  000AF2  EF7D  F005         	goto	u10541
  8671  000AF6  EF7F  F005         	goto	u10540
  8672  000AFA                     u10541:
  8673  000AFA  EFBB  F005         	goto	l7899
  8674  000AFE                     u10540:
  8675  000AFE                     
  8676                           ; BSR set to: 0
  8677  000AFE  0E00               	movlw	0
  8678  000B00  6F7D               	movwf	strtof@i& (0+255),b
  8679  000B02  EF84  F005         	goto	l7891
  8680  000B06                     l7889:
  8681                           
  8682                           ; BSR set to: 0
  8683  000B06  2B7D               	incf	strtof@i& (0+255),f,b
  8684  000B08                     l7891:
  8685                           
  8686                           ; BSR set to: 0
  8687  000B08  517D               	movf	strtof@i& (0+255),w,b
  8688  000B0A  2452               	addwf	strtof@s^0,w,c
  8689  000B0C  6ED9               	movwf	fsr2l,c
  8690  000B0E  0E00               	movlw	0
  8691  000B10  2053               	addwfc	(strtof@s+1)^0,w,c
  8692  000B12  6EDA               	movwf	fsr2h,c
  8693  000B14  50DF               	movf	indf2,w,c
  8694  000B16  B4D8               	btfsc	status,2,c
  8695  000B18  EF90  F005         	goto	u10551
  8696  000B1C  EF92  F005         	goto	u10550
  8697  000B20                     u10551:
  8698  000B20  EFA1  F005         	goto	l7895
  8699  000B24                     u10550:
  8700  000B24                     
  8701                           ; BSR set to: 0
  8702  000B24  517D               	movf	strtof@i& (0+255),w,b
  8703  000B26  2452               	addwf	strtof@s^0,w,c
  8704  000B28  6ED9               	movwf	fsr2l,c
  8705  000B2A  0E00               	movlw	0
  8706  000B2C  2053               	addwfc	(strtof@s+1)^0,w,c
  8707  000B2E  6EDA               	movwf	fsr2h,c
  8708  000B30  0E29               	movlw	41
  8709  000B32  18DE               	xorwf	postinc2,w,c
  8710  000B34  A4D8               	btfss	status,2,c
  8711  000B36  EF9F  F005         	goto	u10561
  8712  000B3A  EFA1  F005         	goto	u10560
  8713  000B3E                     u10561:
  8714  000B3E  EF83  F005         	goto	l7889
  8715  000B42                     u10560:
  8716  000B42                     l7895:
  8717                           
  8718                           ; BSR set to: 0
  8719  000B42  517D               	movf	strtof@i& (0+255),w,b
  8720  000B44  2452               	addwf	strtof@s^0,w,c
  8721  000B46  6ED9               	movwf	fsr2l,c
  8722  000B48  0E00               	movlw	0
  8723  000B4A  2053               	addwfc	(strtof@s+1)^0,w,c
  8724  000B4C  6EDA               	movwf	fsr2h,c
  8725  000B4E  0E29               	movlw	41
  8726  000B50  18DE               	xorwf	postinc2,w,c
  8727  000B52  A4D8               	btfss	status,2,c
  8728  000B54  EFAE  F005         	goto	u10571
  8729  000B58  EFB0  F005         	goto	u10570
  8730  000B5C                     u10571:
  8731  000B5C  EFBB  F005         	goto	l7899
  8732  000B60                     u10570:
  8733  000B60                     
  8734                           ; BSR set to: 0
  8735  000B60  517D               	movf	strtof@i& (0+255),w,b
  8736  000B62  6F6D               	movwf	??_strtof& (0+255),b
  8737  000B64  6B6E               	clrf	(??_strtof+1)& (0+255),b
  8738  000B66  0E01               	movlw	1
  8739  000B68  276D               	addwf	??_strtof& (0+255),f,b
  8740  000B6A  0E00               	movlw	0
  8741  000B6C  236E               	addwfc	(??_strtof+1)& (0+255),f,b
  8742  000B6E  516D               	movf	??_strtof& (0+255),w,b
  8743  000B70  2652               	addwf	strtof@s^0,f,c
  8744  000B72  516E               	movf	(??_strtof+1)& (0+255),w,b
  8745  000B74  2253               	addwfc	(strtof@s+1)^0,f,c
  8746  000B76                     l7899:
  8747                           
  8748                           ; BSR set to: 0
  8749  000B76  C054  FFD9         	movff	strtof@res,fsr2l
  8750  000B7A  C055  FFDA         	movff	strtof@res+1,fsr2h
  8751  000B7E  C052  FFDE         	movff	strtof@s,postinc2
  8752  000B82  C053  FFDD         	movff	strtof@s+1,postdec2
  8753  000B86  EF56  F00C         	goto	l1270
  8754  000B8A                     l7901:
  8755                           
  8756                           ; BSR set to: 0
  8757  000B8A  0E00               	movlw	0
  8758  000B8C  6F78               	movwf	(strtof@eexp+1)& (0+255),b
  8759  000B8E  0E00               	movlw	0
  8760  000B90  6F77               	movwf	strtof@eexp& (0+255),b
  8761  000B92  0E00               	movlw	0
  8762  000B94  6F79               	movwf	strtof@_u& (0+255),b
  8763  000B96  0E00               	movlw	0
  8764  000B98  6F7A               	movwf	(strtof@_u+1)& (0+255),b
  8765  000B9A  0E00               	movlw	0
  8766  000B9C  6F7B               	movwf	(strtof@_u+2)& (0+255),b
  8767  000B9E  0E00               	movlw	0
  8768  000BA0  6F7C               	movwf	(strtof@_u+3)& (0+255),b
  8769  000BA2  0E00               	movlw	0
  8770  000BA4  6F76               	movwf	(strtof@expon+1)& (0+255),b
  8771  000BA6  0E00               	movlw	0
  8772  000BA8  6F75               	movwf	strtof@expon& (0+255),b
  8773  000BAA  0E00               	movlw	0
  8774  000BAC  6F7D               	movwf	strtof@i& (0+255),b
  8775  000BAE  EFDA  F005         	goto	l7905
  8776  000BB2                     l7903:
  8777                           
  8778                           ; BSR set to: 0
  8779  000BB2  2B7D               	incf	strtof@i& (0+255),f,b
  8780  000BB4                     l7905:
  8781                           
  8782                           ; BSR set to: 0
  8783  000BB4  517D               	movf	strtof@i& (0+255),w,b
  8784  000BB6  2452               	addwf	strtof@s^0,w,c
  8785  000BB8  6ED9               	movwf	fsr2l,c
  8786  000BBA  0E00               	movlw	0
  8787  000BBC  2053               	addwfc	(strtof@s+1)^0,w,c
  8788  000BBE  6EDA               	movwf	fsr2h,c
  8789  000BC0  0E30               	movlw	48
  8790  000BC2  18DE               	xorwf	postinc2,w,c
  8791  000BC4  B4D8               	btfsc	status,2,c
  8792  000BC6  EFE7  F005         	goto	u10581
  8793  000BCA  EFE9  F005         	goto	u10580
  8794  000BCE                     u10581:
  8795  000BCE  EFD9  F005         	goto	l7903
  8796  000BD2                     u10580:
  8797  000BD2                     
  8798                           ; BSR set to: 0
  8799  000BD2  517D               	movf	strtof@i& (0+255),w,b
  8800  000BD4  B4D8               	btfsc	status,2,c
  8801  000BD6  EFEF  F005         	goto	u10591
  8802  000BDA  EFF1  F005         	goto	u10590
  8803  000BDE                     u10591:
  8804  000BDE  EF67  F009         	goto	l1355
  8805  000BE2                     u10590:
  8806  000BE2                     
  8807                           ; BSR set to: 0
  8808  000BE2  517D               	movf	strtof@i& (0+255),w,b
  8809  000BE4  2452               	addwf	strtof@s^0,w,c
  8810  000BE6  6ED9               	movwf	fsr2l,c
  8811  000BE8  0E00               	movlw	0
  8812  000BEA  2053               	addwfc	(strtof@s+1)^0,w,c
  8813  000BEC  6EDA               	movwf	fsr2h,c
  8814  000BEE  0E78               	movlw	120
  8815  000BF0  18DE               	xorwf	postinc2,w,c
  8816  000BF2  B4D8               	btfsc	status,2,c
  8817  000BF4  EFFE  F005         	goto	u10601
  8818  000BF8  EF00  F006         	goto	u10600
  8819  000BFC                     u10601:
  8820  000BFC  EF0F  F006         	goto	l7913
  8821  000C00                     u10600:
  8822  000C00                     
  8823                           ; BSR set to: 0
  8824  000C00  517D               	movf	strtof@i& (0+255),w,b
  8825  000C02  2452               	addwf	strtof@s^0,w,c
  8826  000C04  6ED9               	movwf	fsr2l,c
  8827  000C06  0E00               	movlw	0
  8828  000C08  2053               	addwfc	(strtof@s+1)^0,w,c
  8829  000C0A  6EDA               	movwf	fsr2h,c
  8830  000C0C  0E58               	movlw	88
  8831  000C0E  18DE               	xorwf	postinc2,w,c
  8832  000C10  A4D8               	btfss	status,2,c
  8833  000C12  EF0D  F006         	goto	u10611
  8834  000C16  EF0F  F006         	goto	u10610
  8835  000C1A                     u10611:
  8836  000C1A  EF67  F009         	goto	l1355
  8837  000C1E                     u10610:
  8838  000C1E                     l7913:
  8839                           
  8840                           ; BSR set to: 0
  8841  000C1E  517D               	movf	strtof@i& (0+255),w,b
  8842  000C20  6F6D               	movwf	??_strtof& (0+255),b
  8843  000C22  6B6E               	clrf	(??_strtof+1)& (0+255),b
  8844  000C24  0E01               	movlw	1
  8845  000C26  276D               	addwf	??_strtof& (0+255),f,b
  8846  000C28  0E00               	movlw	0
  8847  000C2A  236E               	addwfc	(??_strtof+1)& (0+255),f,b
  8848  000C2C  516D               	movf	??_strtof& (0+255),w,b
  8849  000C2E  2652               	addwf	strtof@s^0,f,c
  8850  000C30  516E               	movf	(??_strtof+1)& (0+255),w,b
  8851  000C32  2253               	addwfc	(strtof@s+1)^0,f,c
  8852  000C34                     
  8853                           ; BSR set to: 0
  8854  000C34  0E00               	movlw	0
  8855  000C36  6F7D               	movwf	strtof@i& (0+255),b
  8856  000C38  EF1F  F006         	goto	l7919
  8857  000C3C                     l7917:
  8858                           
  8859                           ; BSR set to: 0
  8860  000C3C  2B7D               	incf	strtof@i& (0+255),f,b
  8861  000C3E                     l7919:
  8862                           
  8863                           ; BSR set to: 0
  8864  000C3E  517D               	movf	strtof@i& (0+255),w,b
  8865  000C40  2452               	addwf	strtof@s^0,w,c
  8866  000C42  6ED9               	movwf	fsr2l,c
  8867  000C44  0E00               	movlw	0
  8868  000C46  2053               	addwfc	(strtof@s+1)^0,w,c
  8869  000C48  6EDA               	movwf	fsr2h,c
  8870  000C4A  0E30               	movlw	48
  8871  000C4C  18DE               	xorwf	postinc2,w,c
  8872  000C4E  B4D8               	btfsc	status,2,c
  8873  000C50  EF2C  F006         	goto	u10621
  8874  000C54  EF2E  F006         	goto	u10620
  8875  000C58                     u10621:
  8876  000C58  EF1E  F006         	goto	l7917
  8877  000C5C                     u10620:
  8878  000C5C                     
  8879                           ; BSR set to: 0
  8880  000C5C  0E00               	movlw	0
  8881  000C5E  6F7D               	movwf	strtof@i& (0+255),b
  8882  000C60                     l7923:
  8883                           
  8884                           ; BSR set to: 0
  8885  000C60  517D               	movf	strtof@i& (0+255),w,b
  8886  000C62  2452               	addwf	strtof@s^0,w,c
  8887  000C64  6ED9               	movwf	fsr2l,c
  8888  000C66  0E00               	movlw	0
  8889  000C68  2053               	addwfc	(strtof@s+1)^0,w,c
  8890  000C6A  6EDA               	movwf	fsr2h,c
  8891  000C6C  0E70               	movlw	112
  8892  000C6E  18DE               	xorwf	postinc2,w,c
  8893  000C70  B4D8               	btfsc	status,2,c
  8894  000C72  EF3D  F006         	goto	u10631
  8895  000C76  EF3F  F006         	goto	u10630
  8896  000C7A                     u10631:
  8897  000C7A  EFB6  F007         	goto	l7993
  8898  000C7E                     u10630:
  8899  000C7E                     
  8900                           ; BSR set to: 0
  8901  000C7E  517D               	movf	strtof@i& (0+255),w,b
  8902  000C80  2452               	addwf	strtof@s^0,w,c
  8903  000C82  6ED9               	movwf	fsr2l,c
  8904  000C84  0E00               	movlw	0
  8905  000C86  2053               	addwfc	(strtof@s+1)^0,w,c
  8906  000C88  6EDA               	movwf	fsr2h,c
  8907  000C8A  0E50               	movlw	80
  8908  000C8C  18DE               	xorwf	postinc2,w,c
  8909  000C8E  A4D8               	btfss	status,2,c
  8910  000C90  EF4C  F006         	goto	u10641
  8911  000C94  EF4E  F006         	goto	u10640
  8912  000C98                     u10641:
  8913  000C98  EF50  F006         	goto	l7929
  8914  000C9C                     u10640:
  8915  000C9C  EFB6  F007         	goto	l7993
  8916  000CA0                     l7929:
  8917                           
  8918                           ; BSR set to: 0
  8919  000CA0  517D               	movf	strtof@i& (0+255),w,b
  8920  000CA2  2452               	addwf	strtof@s^0,w,c
  8921  000CA4  6ED9               	movwf	fsr2l,c
  8922  000CA6  0E00               	movlw	0
  8923  000CA8  2053               	addwfc	(strtof@s+1)^0,w,c
  8924  000CAA  6EDA               	movwf	fsr2h,c
  8925  000CAC  0E2E               	movlw	46
  8926  000CAE  18DE               	xorwf	postinc2,w,c
  8927  000CB0  A4D8               	btfss	status,2,c
  8928  000CB2  EF5D  F006         	goto	u10651
  8929  000CB6  EF5F  F006         	goto	u10650
  8930  000CBA                     u10651:
  8931  000CBA  EF63  F006         	goto	l7935
  8932  000CBE                     u10650:
  8933  000CBE                     
  8934                           ; BSR set to: 0
  8935  000CBE  8974               	bsf	strtof@flags& (0+255),4,b
  8936  000CC0  2B7D               	incf	strtof@i& (0+255),f,b
  8937  000CC2  EFB6  F007         	goto	l7993
  8938  000CC6                     l7935:
  8939                           
  8940                           ; BSR set to: 0
  8941  000CC6  517D               	movf	strtof@i& (0+255),w,b
  8942  000CC8  2452               	addwf	strtof@s^0,w,c
  8943  000CCA  6ED9               	movwf	fsr2l,c
  8944  000CCC  0E00               	movlw	0
  8945  000CCE  2053               	addwfc	(strtof@s+1)^0,w,c
  8946  000CD0  6EDA               	movwf	fsr2h,c
  8947  000CD2  50DF               	movf	indf2,w,c
  8948  000CD4  6F6D               	movwf	??_strtof& (0+255),b
  8949  000CD6  516D               	movf	??_strtof& (0+255),w,b
  8950  000CD8  6E09               	movwf	isxdigit@c^0,c
  8951  000CDA  6A0A               	clrf	(isxdigit@c+1)^0,c
  8952  000CDC  EC17  F02B         	call	_isxdigit	;wreg free
  8953  000CE0  5009               	movf	?_isxdigit^0,w,c
  8954  000CE2  100A               	iorwf	(?_isxdigit+1)^0,w,c
  8955  000CE4  B4D8               	btfsc	status,2,c
  8956  000CE6  EF77  F006         	goto	u10661
  8957  000CEA  EF79  F006         	goto	u10660
  8958  000CEE                     u10661:
  8959  000CEE  EFE9  F006         	goto	l7955
  8960  000CF2                     u10660:
  8961  000CF2  0E00               	movlw	0
  8962  000CF4  0100               	movlb	0	; () banked
  8963  000CF6  6F73               	movwf	strtof@digit& (0+255),b
  8964  000CF8                     
  8965                           ; BSR set to: 0
  8966  000CF8  0ED0               	movlw	208
  8967  000CFA  6F6D               	movwf	??_strtof& (0+255),b
  8968  000CFC  0EFF               	movlw	255
  8969  000CFE  6F6E               	movwf	(??_strtof+1)& (0+255),b
  8970  000D00  517D               	movf	strtof@i& (0+255),w,b
  8971  000D02  2452               	addwf	strtof@s^0,w,c
  8972  000D04  6ED9               	movwf	fsr2l,c
  8973  000D06  0E00               	movlw	0
  8974  000D08  2053               	addwfc	(strtof@s+1)^0,w,c
  8975  000D0A  6EDA               	movwf	fsr2h,c
  8976  000D0C  50DF               	movf	indf2,w,c
  8977  000D0E  6F6F               	movwf	(??_strtof+2)& (0+255),b
  8978  000D10  6B70               	clrf	(??_strtof+3)& (0+255),b
  8979  000D12  516D               	movf	??_strtof& (0+255),w,b
  8980  000D14  276F               	addwf	(??_strtof+2)& (0+255),f,b
  8981  000D16  516E               	movf	(??_strtof+1)& (0+255),w,b
  8982  000D18  2370               	addwfc	(??_strtof+3)& (0+255),f,b
  8983  000D1A  5170               	movf	(??_strtof+3)& (0+255),w,b
  8984  000D1C  E107               	bnz	u10671
  8985  000D1E  0E0A               	movlw	10
  8986  000D20  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
  8987  000D22  B0D8               	btfsc	status,0,c
  8988  000D24  EF96  F006         	goto	u10671
  8989  000D28  EF98  F006         	goto	u10670
  8990  000D2C                     u10671:
  8991  000D2C  EFA3  F006         	goto	l7945
  8992  000D30                     u10670:
  8993  000D30                     
  8994                           ; BSR set to: 0
  8995  000D30  517D               	movf	strtof@i& (0+255),w,b
  8996  000D32  2452               	addwf	strtof@s^0,w,c
  8997  000D34  6ED9               	movwf	fsr2l,c
  8998  000D36  0E00               	movlw	0
  8999  000D38  2053               	addwfc	(strtof@s+1)^0,w,c
  9000  000D3A  6EDA               	movwf	fsr2h,c
  9001  000D3C  50DF               	movf	indf2,w,c
  9002  000D3E  0FD0               	addlw	208
  9003  000D40  6F73               	movwf	strtof@digit& (0+255),b
  9004  000D42  EFB4  F006         	goto	l7947
  9005  000D46                     l7945:
  9006                           
  9007                           ; BSR set to: 0
  9008  000D46  517D               	movf	strtof@i& (0+255),w,b
  9009  000D48  2452               	addwf	strtof@s^0,w,c
  9010  000D4A  6ED9               	movwf	fsr2l,c
  9011  000D4C  0E00               	movlw	0
  9012  000D4E  2053               	addwfc	(strtof@s+1)^0,w,c
  9013  000D50  6EDA               	movwf	fsr2h,c
  9014  000D52  50DF               	movf	indf2,w,c
  9015  000D54  6F6D               	movwf	??_strtof& (0+255),b
  9016  000D56  516D               	movf	??_strtof& (0+255),w,b
  9017  000D58  6E09               	movwf	toupper@c^0,c
  9018  000D5A  6A0A               	clrf	(toupper@c+1)^0,c
  9019  000D5C  ECAE  F02D         	call	_toupper	;wreg free
  9020  000D60  5009               	movf	?_toupper^0,w,c
  9021  000D62  0FC9               	addlw	201
  9022  000D64  0100               	movlb	0	; () banked
  9023  000D66  6F73               	movwf	strtof@digit& (0+255),b
  9024  000D68                     l7947:
  9025                           
  9026                           ; BSR set to: 0
  9027  000D68  BF78               	btfsc	(strtof@eexp+1)& (0+255),7,b
  9028  000D6A  EFC2  F006         	goto	u10680
  9029  000D6E  5178               	movf	(strtof@eexp+1)& (0+255),w,b
  9030  000D70  E107               	bnz	u10681
  9031  000D72  0E08               	movlw	8
  9032  000D74  5D77               	subwf	strtof@eexp& (0+255),w,b
  9033  000D76  B0D8               	btfsc	status,0,c
  9034  000D78  EFC0  F006         	goto	u10681
  9035  000D7C  EFC2  F006         	goto	u10680
  9036  000D80                     u10681:
  9037  000D80  EFE1  F006         	goto	l7951
  9038  000D84                     u10680:
  9039  000D84                     
  9040                           ; BSR set to: 0
  9041  000D84  5177               	movf	strtof@eexp& (0+255),w,b
  9042  000D86  0807               	sublw	7
  9043  000D88  6F6D               	movwf	??_strtof& (0+255),b
  9044  000D8A  90D8               	bcf	status,0,c
  9045  000D8C  376D               	rlcf	??_strtof& (0+255),f,b
  9046  000D8E  90D8               	bcf	status,0,c
  9047  000D90  376D               	rlcf	??_strtof& (0+255),f,b
  9048  000D92  C073  F06E         	movff	strtof@digit,??_strtof+1
  9049  000D96  6B6F               	clrf	(??_strtof+2)& (0+255),b
  9050  000D98  6B70               	clrf	(??_strtof+3)& (0+255),b
  9051  000D9A  6B71               	clrf	(??_strtof+4)& (0+255),b
  9052  000D9C  2B6D               	incf	??_strtof& (0+255),f,b
  9053  000D9E  EFD6  F006         	goto	u10690
  9054  000DA2                     u10695:
  9055  000DA2  90D8               	bcf	status,0,c
  9056  000DA4  376E               	rlcf	(??_strtof+1)& (0+255),f,b
  9057  000DA6  376F               	rlcf	(??_strtof+2)& (0+255),f,b
  9058  000DA8  3770               	rlcf	(??_strtof+3)& (0+255),f,b
  9059  000DAA  3771               	rlcf	(??_strtof+4)& (0+255),f,b
  9060  000DAC                     u10690:
  9061  000DAC  2F6D               	decfsz	??_strtof& (0+255),f,b
  9062  000DAE  EFD1  F006         	goto	u10695
  9063  000DB2  516E               	movf	(??_strtof+1)& (0+255),w,b
  9064  000DB4  1379               	iorwf	strtof@_u& (0+255),f,b
  9065  000DB6  516F               	movf	(??_strtof+2)& (0+255),w,b
  9066  000DB8  137A               	iorwf	(strtof@_u+1)& (0+255),f,b
  9067  000DBA  5170               	movf	(??_strtof+3)& (0+255),w,b
  9068  000DBC  137B               	iorwf	(strtof@_u+2)& (0+255),f,b
  9069  000DBE  5171               	movf	(??_strtof+4)& (0+255),w,b
  9070  000DC0  137C               	iorwf	(strtof@_u+3)& (0+255),f,b
  9071  000DC2                     l7951:
  9072                           
  9073                           ; BSR set to: 0
  9074  000DC2  4B77               	infsnz	strtof@eexp& (0+255),f,b
  9075  000DC4  2B78               	incf	(strtof@eexp+1)& (0+255),f,b
  9076  000DC6                     
  9077                           ; BSR set to: 0
  9078  000DC6  0E04               	movlw	4
  9079  000DC8  2775               	addwf	strtof@expon& (0+255),f,b
  9080  000DCA  0E00               	movlw	0
  9081  000DCC  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
  9082  000DCE  EFF3  F006         	goto	l7959
  9083  000DD2                     l7955:
  9084  000DD2  0E00               	movlw	0
  9085  000DD4  6E52               	movwf	?_strtof^0,c
  9086  000DD6  0E00               	movlw	0
  9087  000DD8  6E53               	movwf	(?_strtof+1)^0,c
  9088  000DDA  0E00               	movlw	0
  9089  000DDC  6E54               	movwf	(?_strtof+2)^0,c
  9090  000DDE  0E00               	movlw	0
  9091  000DE0  6E55               	movwf	(?_strtof+3)^0,c
  9092  000DE2  EF78  F00C         	goto	l1314
  9093  000DE6                     l7959:
  9094                           
  9095                           ; BSR set to: 0
  9096  000DE6  2B7D               	incf	strtof@i& (0+255),f,b
  9097  000DE8  EF30  F006         	goto	l7923
  9098  000DEC                     l7961:
  9099                           
  9100                           ; BSR set to: 0
  9101  000DEC  517D               	movf	strtof@i& (0+255),w,b
  9102  000DEE  2452               	addwf	strtof@s^0,w,c
  9103  000DF0  6ED9               	movwf	fsr2l,c
  9104  000DF2  0E00               	movlw	0
  9105  000DF4  2053               	addwfc	(strtof@s+1)^0,w,c
  9106  000DF6  6EDA               	movwf	fsr2h,c
  9107  000DF8  0E70               	movlw	112
  9108  000DFA  18DE               	xorwf	postinc2,w,c
  9109  000DFC  B4D8               	btfsc	status,2,c
  9110  000DFE  EF03  F007         	goto	u10701
  9111  000E02  EF05  F007         	goto	u10700
  9112  000E06                     u10701:
  9113  000E06  EFBD  F007         	goto	l7995
  9114  000E0A                     u10700:
  9115  000E0A                     
  9116                           ; BSR set to: 0
  9117  000E0A  517D               	movf	strtof@i& (0+255),w,b
  9118  000E0C  2452               	addwf	strtof@s^0,w,c
  9119  000E0E  6ED9               	movwf	fsr2l,c
  9120  000E10  0E00               	movlw	0
  9121  000E12  2053               	addwfc	(strtof@s+1)^0,w,c
  9122  000E14  6EDA               	movwf	fsr2h,c
  9123  000E16  0E50               	movlw	80
  9124  000E18  18DE               	xorwf	postinc2,w,c
  9125  000E1A  A4D8               	btfss	status,2,c
  9126  000E1C  EF12  F007         	goto	u10711
  9127  000E20  EF14  F007         	goto	u10710
  9128  000E24                     u10711:
  9129  000E24  EF16  F007         	goto	l7967
  9130  000E28                     u10710:
  9131  000E28  EFBD  F007         	goto	l7995
  9132  000E2C                     l7967:
  9133                           
  9134                           ; BSR set to: 0
  9135  000E2C  517D               	movf	strtof@i& (0+255),w,b
  9136  000E2E  2452               	addwf	strtof@s^0,w,c
  9137  000E30  6ED9               	movwf	fsr2l,c
  9138  000E32  0E00               	movlw	0
  9139  000E34  2053               	addwfc	(strtof@s+1)^0,w,c
  9140  000E36  6EDA               	movwf	fsr2h,c
  9141  000E38  0E30               	movlw	48
  9142  000E3A  18DE               	xorwf	postinc2,w,c
  9143  000E3C  A4D8               	btfss	status,2,c
  9144  000E3E  EF23  F007         	goto	u10721
  9145  000E42  EF25  F007         	goto	u10720
  9146  000E46                     u10721:
  9147  000E46  EF34  F007         	goto	l7973
  9148  000E4A                     u10720:
  9149  000E4A                     
  9150                           ; BSR set to: 0
  9151  000E4A  5177               	movf	strtof@eexp& (0+255),w,b
  9152  000E4C  1178               	iorwf	(strtof@eexp+1)& (0+255),w,b
  9153  000E4E  A4D8               	btfss	status,2,c
  9154  000E50  EF2C  F007         	goto	u10731
  9155  000E54  EF2E  F007         	goto	u10730
  9156  000E58                     u10731:
  9157  000E58  EF34  F007         	goto	l7973
  9158  000E5C                     u10730:
  9159  000E5C                     
  9160                           ; BSR set to: 0
  9161  000E5C  0EFC               	movlw	252
  9162  000E5E  2775               	addwf	strtof@expon& (0+255),f,b
  9163  000E60  0EFF               	movlw	255
  9164  000E62  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
  9165  000E64  EFB4  F007         	goto	l7991
  9166  000E68                     l7973:
  9167                           
  9168                           ; BSR set to: 0
  9169  000E68  517D               	movf	strtof@i& (0+255),w,b
  9170  000E6A  2452               	addwf	strtof@s^0,w,c
  9171  000E6C  6ED9               	movwf	fsr2l,c
  9172  000E6E  0E00               	movlw	0
  9173  000E70  2053               	addwfc	(strtof@s+1)^0,w,c
  9174  000E72  6EDA               	movwf	fsr2h,c
  9175  000E74  50DF               	movf	indf2,w,c
  9176  000E76  6F6D               	movwf	??_strtof& (0+255),b
  9177  000E78  516D               	movf	??_strtof& (0+255),w,b
  9178  000E7A  6E09               	movwf	isxdigit@c^0,c
  9179  000E7C  6A0A               	clrf	(isxdigit@c+1)^0,c
  9180  000E7E  EC17  F02B         	call	_isxdigit	;wreg free
  9181  000E82  5009               	movf	?_isxdigit^0,w,c
  9182  000E84  100A               	iorwf	(?_isxdigit+1)^0,w,c
  9183  000E86  B4D8               	btfsc	status,2,c
  9184  000E88  EF48  F007         	goto	u10741
  9185  000E8C  EF4A  F007         	goto	u10740
  9186  000E90                     u10741:
  9187  000E90  EFB4  F007         	goto	l7991
  9188  000E94                     u10740:
  9189  000E94  0E00               	movlw	0
  9190  000E96  0100               	movlb	0	; () banked
  9191  000E98  6F73               	movwf	strtof@digit& (0+255),b
  9192  000E9A                     
  9193                           ; BSR set to: 0
  9194  000E9A  0ED0               	movlw	208
  9195  000E9C  6F6D               	movwf	??_strtof& (0+255),b
  9196  000E9E  0EFF               	movlw	255
  9197  000EA0  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9198  000EA2  517D               	movf	strtof@i& (0+255),w,b
  9199  000EA4  2452               	addwf	strtof@s^0,w,c
  9200  000EA6  6ED9               	movwf	fsr2l,c
  9201  000EA8  0E00               	movlw	0
  9202  000EAA  2053               	addwfc	(strtof@s+1)^0,w,c
  9203  000EAC  6EDA               	movwf	fsr2h,c
  9204  000EAE  50DF               	movf	indf2,w,c
  9205  000EB0  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9206  000EB2  6B70               	clrf	(??_strtof+3)& (0+255),b
  9207  000EB4  516D               	movf	??_strtof& (0+255),w,b
  9208  000EB6  276F               	addwf	(??_strtof+2)& (0+255),f,b
  9209  000EB8  516E               	movf	(??_strtof+1)& (0+255),w,b
  9210  000EBA  2370               	addwfc	(??_strtof+3)& (0+255),f,b
  9211  000EBC  5170               	movf	(??_strtof+3)& (0+255),w,b
  9212  000EBE  E107               	bnz	u10751
  9213  000EC0  0E0A               	movlw	10
  9214  000EC2  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
  9215  000EC4  B0D8               	btfsc	status,0,c
  9216  000EC6  EF67  F007         	goto	u10751
  9217  000ECA  EF69  F007         	goto	u10750
  9218  000ECE                     u10751:
  9219  000ECE  EF74  F007         	goto	l7983
  9220  000ED2                     u10750:
  9221  000ED2                     
  9222                           ; BSR set to: 0
  9223  000ED2  517D               	movf	strtof@i& (0+255),w,b
  9224  000ED4  2452               	addwf	strtof@s^0,w,c
  9225  000ED6  6ED9               	movwf	fsr2l,c
  9226  000ED8  0E00               	movlw	0
  9227  000EDA  2053               	addwfc	(strtof@s+1)^0,w,c
  9228  000EDC  6EDA               	movwf	fsr2h,c
  9229  000EDE  50DF               	movf	indf2,w,c
  9230  000EE0  0FD0               	addlw	208
  9231  000EE2  6F73               	movwf	strtof@digit& (0+255),b
  9232  000EE4  EF85  F007         	goto	l7985
  9233  000EE8                     l7983:
  9234                           
  9235                           ; BSR set to: 0
  9236  000EE8  517D               	movf	strtof@i& (0+255),w,b
  9237  000EEA  2452               	addwf	strtof@s^0,w,c
  9238  000EEC  6ED9               	movwf	fsr2l,c
  9239  000EEE  0E00               	movlw	0
  9240  000EF0  2053               	addwfc	(strtof@s+1)^0,w,c
  9241  000EF2  6EDA               	movwf	fsr2h,c
  9242  000EF4  50DF               	movf	indf2,w,c
  9243  000EF6  6F6D               	movwf	??_strtof& (0+255),b
  9244  000EF8  516D               	movf	??_strtof& (0+255),w,b
  9245  000EFA  6E09               	movwf	toupper@c^0,c
  9246  000EFC  6A0A               	clrf	(toupper@c+1)^0,c
  9247  000EFE  ECAE  F02D         	call	_toupper	;wreg free
  9248  000F02  5009               	movf	?_toupper^0,w,c
  9249  000F04  0FC9               	addlw	201
  9250  000F06  0100               	movlb	0	; () banked
  9251  000F08  6F73               	movwf	strtof@digit& (0+255),b
  9252  000F0A                     l7985:
  9253                           
  9254                           ; BSR set to: 0
  9255  000F0A  BF78               	btfsc	(strtof@eexp+1)& (0+255),7,b
  9256  000F0C  EF93  F007         	goto	u10760
  9257  000F10  5178               	movf	(strtof@eexp+1)& (0+255),w,b
  9258  000F12  E107               	bnz	u10761
  9259  000F14  0E08               	movlw	8
  9260  000F16  5D77               	subwf	strtof@eexp& (0+255),w,b
  9261  000F18  B0D8               	btfsc	status,0,c
  9262  000F1A  EF91  F007         	goto	u10761
  9263  000F1E  EF93  F007         	goto	u10760
  9264  000F22                     u10761:
  9265  000F22  EFB2  F007         	goto	l7989
  9266  000F26                     u10760:
  9267  000F26                     
  9268                           ; BSR set to: 0
  9269  000F26  5177               	movf	strtof@eexp& (0+255),w,b
  9270  000F28  0807               	sublw	7
  9271  000F2A  6F6D               	movwf	??_strtof& (0+255),b
  9272  000F2C  90D8               	bcf	status,0,c
  9273  000F2E  376D               	rlcf	??_strtof& (0+255),f,b
  9274  000F30  90D8               	bcf	status,0,c
  9275  000F32  376D               	rlcf	??_strtof& (0+255),f,b
  9276  000F34  C073  F06E         	movff	strtof@digit,??_strtof+1
  9277  000F38  6B6F               	clrf	(??_strtof+2)& (0+255),b
  9278  000F3A  6B70               	clrf	(??_strtof+3)& (0+255),b
  9279  000F3C  6B71               	clrf	(??_strtof+4)& (0+255),b
  9280  000F3E  2B6D               	incf	??_strtof& (0+255),f,b
  9281  000F40  EFA7  F007         	goto	u10770
  9282  000F44                     u10775:
  9283  000F44  90D8               	bcf	status,0,c
  9284  000F46  376E               	rlcf	(??_strtof+1)& (0+255),f,b
  9285  000F48  376F               	rlcf	(??_strtof+2)& (0+255),f,b
  9286  000F4A  3770               	rlcf	(??_strtof+3)& (0+255),f,b
  9287  000F4C  3771               	rlcf	(??_strtof+4)& (0+255),f,b
  9288  000F4E                     u10770:
  9289  000F4E  2F6D               	decfsz	??_strtof& (0+255),f,b
  9290  000F50  EFA2  F007         	goto	u10775
  9291  000F54  516E               	movf	(??_strtof+1)& (0+255),w,b
  9292  000F56  1379               	iorwf	strtof@_u& (0+255),f,b
  9293  000F58  516F               	movf	(??_strtof+2)& (0+255),w,b
  9294  000F5A  137A               	iorwf	(strtof@_u+1)& (0+255),f,b
  9295  000F5C  5170               	movf	(??_strtof+3)& (0+255),w,b
  9296  000F5E  137B               	iorwf	(strtof@_u+2)& (0+255),f,b
  9297  000F60  5171               	movf	(??_strtof+4)& (0+255),w,b
  9298  000F62  137C               	iorwf	(strtof@_u+3)& (0+255),f,b
  9299  000F64                     l7989:
  9300                           
  9301                           ; BSR set to: 0
  9302  000F64  4B77               	infsnz	strtof@eexp& (0+255),f,b
  9303  000F66  2B78               	incf	(strtof@eexp+1)& (0+255),f,b
  9304  000F68                     l7991:
  9305  000F68  0100               	movlb	0	; () banked
  9306  000F6A  2B7D               	incf	strtof@i& (0+255),f,b
  9307  000F6C                     l7993:
  9308                           
  9309                           ; BSR set to: 0
  9310  000F6C  B974               	btfsc	strtof@flags& (0+255),4,b
  9311  000F6E  EFBB  F007         	goto	u10781
  9312  000F72  EFBD  F007         	goto	u10780
  9313  000F76                     u10781:
  9314  000F76  EFF6  F006         	goto	l7961
  9315  000F7A                     u10780:
  9316  000F7A                     l7995:
  9317                           
  9318                           ; BSR set to: 0
  9319  000F7A  517D               	movf	strtof@i& (0+255),w,b
  9320  000F7C  2452               	addwf	strtof@s^0,w,c
  9321  000F7E  6ED9               	movwf	fsr2l,c
  9322  000F80  0E00               	movlw	0
  9323  000F82  2053               	addwfc	(strtof@s+1)^0,w,c
  9324  000F84  6EDA               	movwf	fsr2h,c
  9325  000F86  0E70               	movlw	112
  9326  000F88  18DE               	xorwf	postinc2,w,c
  9327  000F8A  B4D8               	btfsc	status,2,c
  9328  000F8C  EFCA  F007         	goto	u10791
  9329  000F90  EFCC  F007         	goto	u10790
  9330  000F94                     u10791:
  9331  000F94  EFE5  F007         	goto	l8003
  9332  000F98                     u10790:
  9333  000F98                     
  9334                           ; BSR set to: 0
  9335  000F98  517D               	movf	strtof@i& (0+255),w,b
  9336  000F9A  2452               	addwf	strtof@s^0,w,c
  9337  000F9C  6ED9               	movwf	fsr2l,c
  9338  000F9E  0E00               	movlw	0
  9339  000FA0  2053               	addwfc	(strtof@s+1)^0,w,c
  9340  000FA2  6EDA               	movwf	fsr2h,c
  9341  000FA4  0E50               	movlw	80
  9342  000FA6  18DE               	xorwf	postinc2,w,c
  9343  000FA8  B4D8               	btfsc	status,2,c
  9344  000FAA  EFD9  F007         	goto	u10801
  9345  000FAE  EFDB  F007         	goto	u10800
  9346  000FB2                     u10801:
  9347  000FB2  EFE5  F007         	goto	l8003
  9348  000FB6                     u10800:
  9349  000FB6                     
  9350                           ; BSR set to: 0
  9351  000FB6  0E00               	movlw	0
  9352  000FB8  6E52               	movwf	?_strtof^0,c
  9353  000FBA  0E00               	movlw	0
  9354  000FBC  6E53               	movwf	(?_strtof+1)^0,c
  9355  000FBE  0E00               	movlw	0
  9356  000FC0  6E54               	movwf	(?_strtof+2)^0,c
  9357  000FC2  0E00               	movlw	0
  9358  000FC4  6E55               	movwf	(?_strtof+3)^0,c
  9359  000FC6  EF78  F00C         	goto	l1314
  9360  000FCA                     l8003:
  9361                           
  9362                           ; BSR set to: 0
  9363  000FCA  2B7D               	incf	strtof@i& (0+255),f,b
  9364  000FCC                     
  9365                           ; BSR set to: 0
  9366  000FCC  517D               	movf	strtof@i& (0+255),w,b
  9367  000FCE  2452               	addwf	strtof@s^0,w,c
  9368  000FD0  6ED9               	movwf	fsr2l,c
  9369  000FD2  0E00               	movlw	0
  9370  000FD4  2053               	addwfc	(strtof@s+1)^0,w,c
  9371  000FD6  6EDA               	movwf	fsr2h,c
  9372  000FD8  0E2B               	movlw	43
  9373  000FDA  18DE               	xorwf	postinc2,w,c
  9374  000FDC  A4D8               	btfss	status,2,c
  9375  000FDE  EFF3  F007         	goto	u10811
  9376  000FE2  EFF5  F007         	goto	u10810
  9377  000FE6                     u10811:
  9378  000FE6  EFF8  F007         	goto	l8009
  9379  000FEA                     u10810:
  9380  000FEA                     
  9381                           ; BSR set to: 0
  9382  000FEA  2B7D               	incf	strtof@i& (0+255),f,b
  9383  000FEC  EF09  F008         	goto	l8013
  9384  000FF0                     l8009:
  9385                           
  9386                           ; BSR set to: 0
  9387  000FF0  517D               	movf	strtof@i& (0+255),w,b
  9388  000FF2  2452               	addwf	strtof@s^0,w,c
  9389  000FF4  6ED9               	movwf	fsr2l,c
  9390  000FF6  0E00               	movlw	0
  9391  000FF8  2053               	addwfc	(strtof@s+1)^0,w,c
  9392  000FFA  6EDA               	movwf	fsr2h,c
  9393  000FFC  0E2D               	movlw	45
  9394  000FFE  18DE               	xorwf	postinc2,w,c
  9395  001000  A4D8               	btfss	status,2,c
  9396  001002  EF05  F008         	goto	u10821
  9397  001006  EF07  F008         	goto	u10820
  9398  00100A                     u10821:
  9399  00100A  EF09  F008         	goto	l8013
  9400  00100E                     u10820:
  9401  00100E                     
  9402                           ; BSR set to: 0
  9403  00100E  8774               	bsf	strtof@flags& (0+255),3,b
  9404  001010  2B7D               	incf	strtof@i& (0+255),f,b
  9405  001012                     l8013:
  9406                           
  9407                           ; BSR set to: 0
  9408  001012  517D               	movf	strtof@i& (0+255),w,b
  9409  001014  2652               	addwf	strtof@s^0,f,c
  9410  001016  0E00               	movlw	0
  9411  001018  2253               	addwfc	(strtof@s+1)^0,f,c
  9412  00101A                     
  9413                           ; BSR set to: 0
  9414  00101A  0E00               	movlw	0
  9415  00101C  6F7D               	movwf	strtof@i& (0+255),b
  9416  00101E  EF12  F008         	goto	l8019
  9417  001022                     l8017:
  9418                           
  9419                           ; BSR set to: 0
  9420  001022  2B7D               	incf	strtof@i& (0+255),f,b
  9421  001024                     l8019:
  9422                           
  9423                           ; BSR set to: 0
  9424  001024  517D               	movf	strtof@i& (0+255),w,b
  9425  001026  2452               	addwf	strtof@s^0,w,c
  9426  001028  6ED9               	movwf	fsr2l,c
  9427  00102A  0E00               	movlw	0
  9428  00102C  2053               	addwfc	(strtof@s+1)^0,w,c
  9429  00102E  6EDA               	movwf	fsr2h,c
  9430  001030  0E30               	movlw	48
  9431  001032  18DE               	xorwf	postinc2,w,c
  9432  001034  B4D8               	btfsc	status,2,c
  9433  001036  EF1F  F008         	goto	u10831
  9434  00103A  EF21  F008         	goto	u10830
  9435  00103E                     u10831:
  9436  00103E  EF11  F008         	goto	l8017
  9437  001042                     u10830:
  9438  001042                     
  9439                           ; BSR set to: 0
  9440  001042  0E00               	movlw	0
  9441  001044  6F78               	movwf	(strtof@eexp+1)& (0+255),b
  9442  001046  0E00               	movlw	0
  9443  001048  6F77               	movwf	strtof@eexp& (0+255),b
  9444  00104A  EF54  F008         	goto	l8033
  9445  00104E                     l8023:
  9446                           
  9447                           ; BSR set to: 0
  9448  00104E  517D               	movf	strtof@i& (0+255),w,b
  9449  001050  B4D8               	btfsc	status,2,c
  9450  001052  EF2D  F008         	goto	u10841
  9451  001056  EF2F  F008         	goto	u10840
  9452  00105A                     u10841:
  9453  00105A  EF3D  F008         	goto	l8027
  9454  00105E                     u10840:
  9455  00105E                     
  9456                           ; BSR set to: 0
  9457  00105E  C077  F003         	movff	strtof@eexp,___wmul@multiplier
  9458  001062  C078  F004         	movff	strtof@eexp+1,___wmul@multiplier+1
  9459  001066  0E00               	movlw	0
  9460  001068  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  9461  00106A  0E0A               	movlw	10
  9462  00106C  6E05               	movwf	___wmul@multiplicand^0,c
  9463  00106E  ECBF  F02E         	call	___wmul	;wreg free
  9464  001072  C003  F077         	movff	?___wmul,strtof@eexp
  9465  001076  C004  F078         	movff	?___wmul+1,strtof@eexp+1
  9466  00107A                     l8027:
  9467  00107A  0ED0               	movlw	208
  9468  00107C  0100               	movlb	0	; () banked
  9469  00107E  6F6D               	movwf	??_strtof& (0+255),b
  9470  001080  0EFF               	movlw	255
  9471  001082  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9472  001084  517D               	movf	strtof@i& (0+255),w,b
  9473  001086  2452               	addwf	strtof@s^0,w,c
  9474  001088  6ED9               	movwf	fsr2l,c
  9475  00108A  0E00               	movlw	0
  9476  00108C  2053               	addwfc	(strtof@s+1)^0,w,c
  9477  00108E  6EDA               	movwf	fsr2h,c
  9478  001090  50DF               	movf	indf2,w,c
  9479  001092  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9480  001094  6B70               	clrf	(??_strtof+3)& (0+255),b
  9481  001096  516D               	movf	??_strtof& (0+255),w,b
  9482  001098  276F               	addwf	(??_strtof+2)& (0+255),f,b
  9483  00109A  516E               	movf	(??_strtof+1)& (0+255),w,b
  9484  00109C  2370               	addwfc	(??_strtof+3)& (0+255),f,b
  9485  00109E  516F               	movf	(??_strtof+2)& (0+255),w,b
  9486  0010A0  2777               	addwf	strtof@eexp& (0+255),f,b
  9487  0010A2  5170               	movf	(??_strtof+3)& (0+255),w,b
  9488  0010A4  2378               	addwfc	(strtof@eexp+1)& (0+255),f,b
  9489  0010A6                     
  9490                           ; BSR set to: 0
  9491  0010A6  2B7D               	incf	strtof@i& (0+255),f,b
  9492  0010A8                     l8033:
  9493                           
  9494                           ; BSR set to: 0
  9495  0010A8  0ED0               	movlw	208
  9496  0010AA  6F6D               	movwf	??_strtof& (0+255),b
  9497  0010AC  0EFF               	movlw	255
  9498  0010AE  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9499  0010B0  517D               	movf	strtof@i& (0+255),w,b
  9500  0010B2  2452               	addwf	strtof@s^0,w,c
  9501  0010B4  6ED9               	movwf	fsr2l,c
  9502  0010B6  0E00               	movlw	0
  9503  0010B8  2053               	addwfc	(strtof@s+1)^0,w,c
  9504  0010BA  6EDA               	movwf	fsr2h,c
  9505  0010BC  50DF               	movf	indf2,w,c
  9506  0010BE  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9507  0010C0  6B70               	clrf	(??_strtof+3)& (0+255),b
  9508  0010C2  516D               	movf	??_strtof& (0+255),w,b
  9509  0010C4  276F               	addwf	(??_strtof+2)& (0+255),f,b
  9510  0010C6  516E               	movf	(??_strtof+1)& (0+255),w,b
  9511  0010C8  2370               	addwfc	(??_strtof+3)& (0+255),f,b
  9512  0010CA  5170               	movf	(??_strtof+3)& (0+255),w,b
  9513  0010CC  E109               	bnz	u10850
  9514  0010CE  0E0A               	movlw	10
  9515  0010D0  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
  9516  0010D2  A0D8               	btfss	status,0,c
  9517  0010D4  EF6E  F008         	goto	u10851
  9518  0010D8  EF70  F008         	goto	u10850
  9519  0010DC                     u10851:
  9520  0010DC  EF27  F008         	goto	l8023
  9521  0010E0                     u10850:
  9522  0010E0                     
  9523                           ; BSR set to: 0
  9524  0010E0  517D               	movf	strtof@i& (0+255),w,b
  9525  0010E2  A4D8               	btfss	status,2,c
  9526  0010E4  EF76  F008         	goto	u10861
  9527  0010E8  EF78  F008         	goto	u10860
  9528  0010EC                     u10861:
  9529  0010EC  EF82  F008         	goto	l1344
  9530  0010F0                     u10860:
  9531  0010F0                     
  9532                           ; BSR set to: 0
  9533  0010F0  0E00               	movlw	0
  9534  0010F2  6E52               	movwf	?_strtof^0,c
  9535  0010F4  0E00               	movlw	0
  9536  0010F6  6E53               	movwf	(?_strtof+1)^0,c
  9537  0010F8  0E00               	movlw	0
  9538  0010FA  6E54               	movwf	(?_strtof+2)^0,c
  9539  0010FC  0E00               	movlw	0
  9540  0010FE  6E55               	movwf	(?_strtof+3)^0,c
  9541  001100  EF78  F00C         	goto	l1314
  9542  001104                     l1344:
  9543                           
  9544                           ; BSR set to: 0
  9545  001104  A774               	btfss	strtof@flags& (0+255),3,b
  9546  001106  EF87  F008         	goto	u10871
  9547  00110A  EF89  F008         	goto	u10870
  9548  00110E                     u10871:
  9549  00110E  EF8D  F008         	goto	l8043
  9550  001112                     u10870:
  9551  001112                     
  9552                           ; BSR set to: 0
  9553  001112  6D77               	negf	strtof@eexp& (0+255),b
  9554  001114  1F78               	comf	(strtof@eexp+1)& (0+255),f,b
  9555  001116  B0D8               	btfsc	status,0,c
  9556  001118  2B78               	incf	(strtof@eexp+1)& (0+255),f,b
  9557  00111A                     l8043:
  9558                           
  9559                           ; BSR set to: 0
  9560  00111A  5177               	movf	strtof@eexp& (0+255),w,b
  9561  00111C  2775               	addwf	strtof@expon& (0+255),f,b
  9562  00111E  5178               	movf	(strtof@eexp+1)& (0+255),w,b
  9563  001120  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
  9564  001122                     
  9565                           ; BSR set to: 0
  9566  001122  5054               	movf	strtof@res^0,w,c
  9567  001124  1055               	iorwf	(strtof@res+1)^0,w,c
  9568  001126  B4D8               	btfsc	status,2,c
  9569  001128  EF98  F008         	goto	u10881
  9570  00112C  EF9A  F008         	goto	u10880
  9571  001130                     u10881:
  9572  001130  EFA8  F008         	goto	l8049
  9573  001134                     u10880:
  9574  001134                     
  9575                           ; BSR set to: 0
  9576  001134  517D               	movf	strtof@i& (0+255),w,b
  9577  001136  2452               	addwf	strtof@s^0,w,c
  9578  001138  6F6D               	movwf	??_strtof& (0+255),b
  9579  00113A  0E00               	movlw	0
  9580  00113C  2053               	addwfc	(strtof@s+1)^0,w,c
  9581  00113E  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9582  001140  C054  FFD9         	movff	strtof@res,fsr2l
  9583  001144  C055  FFDA         	movff	strtof@res+1,fsr2h
  9584  001148  C06D  FFDE         	movff	??_strtof,postinc2
  9585  00114C  C06E  FFDD         	movff	??_strtof+1,postdec2
  9586  001150                     l8049:
  9587                           
  9588                           ; BSR set to: 0
  9589  001150  5179               	movf	strtof@_u& (0+255),w,b
  9590  001152  117A               	iorwf	(strtof@_u+1)& (0+255),w,b
  9591  001154  117B               	iorwf	(strtof@_u+2)& (0+255),w,b
  9592  001156  117C               	iorwf	(strtof@_u+3)& (0+255),w,b
  9593  001158  A4D8               	btfss	status,2,c
  9594  00115A  EFB1  F008         	goto	u10891
  9595  00115E  EFB3  F008         	goto	u10890
  9596  001162                     u10891:
  9597  001162  EFBD  F008         	goto	l8055
  9598  001166                     u10890:
  9599  001166                     
  9600                           ; BSR set to: 0
  9601  001166  0E00               	movlw	0
  9602  001168  6E52               	movwf	?_strtof^0,c
  9603  00116A  0E00               	movlw	0
  9604  00116C  6E53               	movwf	(?_strtof+1)^0,c
  9605  00116E  0E00               	movlw	0
  9606  001170  6E54               	movwf	(?_strtof+2)^0,c
  9607  001172  0E00               	movlw	0
  9608  001174  6E55               	movwf	(?_strtof+3)^0,c
  9609  001176  EF78  F00C         	goto	l1314
  9610  00117A                     l8055:
  9611                           
  9612                           ; BSR set to: 0
  9613  00117A  0EFF               	movlw	255
  9614  00117C  1579               	andwf	strtof@_u& (0+255),w,b
  9615  00117E  6F6D               	movwf	??_strtof& (0+255),b
  9616  001180  0E00               	movlw	0
  9617  001182  157A               	andwf	(strtof@_u+1)& (0+255),w,b
  9618  001184  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9619  001186  0E00               	movlw	0
  9620  001188  157B               	andwf	(strtof@_u+2)& (0+255),w,b
  9621  00118A  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9622  00118C  0E00               	movlw	0
  9623  00118E  157C               	andwf	(strtof@_u+3)& (0+255),w,b
  9624  001190  6F70               	movwf	(??_strtof+3)& (0+255),b
  9625  001192  5170               	movf	(??_strtof+3)& (0+255),w,b
  9626  001194  116F               	iorwf	(??_strtof+2)& (0+255),w,b
  9627  001196  116E               	iorwf	(??_strtof+1)& (0+255),w,b
  9628  001198  E109               	bnz	u10900
  9629  00119A  0E81               	movlw	129
  9630  00119C  5D6D               	subwf	??_strtof& (0+255),w,b
  9631  00119E  A0D8               	btfss	status,0,c
  9632  0011A0  EFD4  F008         	goto	u10901
  9633  0011A4  EFD6  F008         	goto	u10900
  9634  0011A8                     u10901:
  9635  0011A8  EFE8  F008         	goto	l8061
  9636  0011AC                     u10900:
  9637  0011AC                     
  9638                           ; BSR set to: 0
  9639  0011AC  0E00               	movlw	0
  9640  0011AE  2779               	addwf	strtof@_u& (0+255),f,b
  9641  0011B0  0E01               	movlw	1
  9642  0011B2  237A               	addwfc	(strtof@_u+1)& (0+255),f,b
  9643  0011B4  0E00               	movlw	0
  9644  0011B6  237B               	addwfc	(strtof@_u+2)& (0+255),f,b
  9645  0011B8  0E00               	movlw	0
  9646  0011BA  237C               	addwfc	(strtof@_u+3)& (0+255),f,b
  9647  0011BC  EFE8  F008         	goto	l8061
  9648  0011C0                     l8059:
  9649                           
  9650                           ; BSR set to: 0
  9651  0011C0  90D8               	bcf	status,0,c
  9652  0011C2  3779               	rlcf	strtof@_u& (0+255),f,b
  9653  0011C4  377A               	rlcf	(strtof@_u+1)& (0+255),f,b
  9654  0011C6  377B               	rlcf	(strtof@_u+2)& (0+255),f,b
  9655  0011C8  377C               	rlcf	(strtof@_u+3)& (0+255),f,b
  9656  0011CA  0775               	decf	strtof@expon& (0+255),f,b
  9657  0011CC  A0D8               	btfss	status,0,c
  9658  0011CE  0776               	decf	(strtof@expon+1)& (0+255),f,b
  9659  0011D0                     l8061:
  9660                           
  9661                           ; BSR set to: 0
  9662  0011D0  AF7C               	btfss	(strtof@_u+3)& (0+255),7,b
  9663  0011D2  EFED  F008         	goto	u10911
  9664  0011D6  EFEF  F008         	goto	u10910
  9665  0011DA                     u10911:
  9666  0011DA  EFE0  F008         	goto	l8059
  9667  0011DE                     u10910:
  9668  0011DE                     
  9669                           ; BSR set to: 0
  9670  0011DE  AF76               	btfss	(strtof@expon+1)& (0+255),7,b
  9671  0011E0  EFFB  F008         	goto	u10921
  9672  0011E4  0E83               	movlw	131
  9673  0011E6  5D75               	subwf	strtof@expon& (0+255),w,b
  9674  0011E8  0EFF               	movlw	255
  9675  0011EA  5976               	subwfb	(strtof@expon+1)& (0+255),w,b
  9676  0011EC  B0D8               	btfsc	status,0,c
  9677  0011EE  EFFB  F008         	goto	u10921
  9678  0011F2  EFFD  F008         	goto	u10920
  9679  0011F6                     u10921:
  9680  0011F6  EF09  F009         	goto	l8067
  9681  0011FA                     u10920:
  9682  0011FA                     
  9683                           ; BSR set to: 0
  9684  0011FA  0EFF               	movlw	255
  9685  0011FC  6F76               	movwf	(strtof@expon+1)& (0+255),b
  9686  0011FE  0E81               	movlw	129
  9687  001200  6F75               	movwf	strtof@expon& (0+255),b
  9688  001202  0E00               	movlw	0
  9689  001204  6F79               	movwf	strtof@_u& (0+255),b
  9690  001206  0E00               	movlw	0
  9691  001208  6F7A               	movwf	(strtof@_u+1)& (0+255),b
  9692  00120A  0E00               	movlw	0
  9693  00120C  6F7B               	movwf	(strtof@_u+2)& (0+255),b
  9694  00120E  0E00               	movlw	0
  9695  001210  6F7C               	movwf	(strtof@_u+3)& (0+255),b
  9696  001212                     l8067:
  9697                           
  9698                           ; BSR set to: 0
  9699  001212  0E81               	movlw	129
  9700  001214  1975               	xorwf	strtof@expon& (0+255),w,b
  9701  001216  E108               	bnz	u10930
  9702  001218  2976               	incf	(strtof@expon+1)& (0+255),w,b
  9703  00121A  B4D8               	btfsc	status,2,c
  9704  00121C  EF12  F009         	goto	u10931
  9705  001220  EF14  F009         	goto	u10930
  9706  001224                     u10931:
  9707  001224  EF1C  F009         	goto	l8071
  9708  001228                     u10930:
  9709  001228                     
  9710                           ; BSR set to: 0
  9711  001228  90D8               	bcf	status,0,c
  9712  00122A  3779               	rlcf	strtof@_u& (0+255),f,b
  9713  00122C  377A               	rlcf	(strtof@_u+1)& (0+255),f,b
  9714  00122E  377B               	rlcf	(strtof@_u+2)& (0+255),f,b
  9715  001230  377C               	rlcf	(strtof@_u+3)& (0+255),f,b
  9716  001232  0775               	decf	strtof@expon& (0+255),f,b
  9717  001234  A0D8               	btfss	status,0,c
  9718  001236  0776               	decf	(strtof@expon+1)& (0+255),f,b
  9719  001238                     l8071:
  9720                           
  9721                           ; BSR set to: 0
  9722  001238  BF76               	btfsc	(strtof@expon+1)& (0+255),7,b
  9723  00123A  EF28  F009         	goto	u10941
  9724  00123E  5176               	movf	(strtof@expon+1)& (0+255),w,b
  9725  001240  E109               	bnz	u10940
  9726  001242  0E80               	movlw	128
  9727  001244  5D75               	subwf	strtof@expon& (0+255),w,b
  9728  001246  A0D8               	btfss	status,0,c
  9729  001248  EF28  F009         	goto	u10941
  9730  00124C  EF2A  F009         	goto	u10940
  9731  001250                     u10941:
  9732  001250  EF36  F009         	goto	l8075
  9733  001254                     u10940:
  9734  001254                     
  9735                           ; BSR set to: 0
  9736  001254  0E00               	movlw	0
  9737  001256  6F79               	movwf	strtof@_u& (0+255),b
  9738  001258  0E00               	movlw	0
  9739  00125A  6F7A               	movwf	(strtof@_u+1)& (0+255),b
  9740  00125C  0E00               	movlw	0
  9741  00125E  6F7B               	movwf	(strtof@_u+2)& (0+255),b
  9742  001260  0E00               	movlw	0
  9743  001262  6F7C               	movwf	(strtof@_u+3)& (0+255),b
  9744  001264  0E00               	movlw	0
  9745  001266  6F76               	movwf	(strtof@expon+1)& (0+255),b
  9746  001268  0E80               	movlw	128
  9747  00126A  6F75               	movwf	strtof@expon& (0+255),b
  9748  00126C                     l8075:
  9749                           
  9750                           ; BSR set to: 0
  9751  00126C  0E09               	movlw	9
  9752  00126E  6F6D               	movwf	??_strtof& (0+255),b
  9753  001270                     u10955:
  9754  001270  90D8               	bcf	status,0,c
  9755  001272  337C               	rrcf	(strtof@_u+3)& (0+255),f,b
  9756  001274  337B               	rrcf	(strtof@_u+2)& (0+255),f,b
  9757  001276  337A               	rrcf	(strtof@_u+1)& (0+255),f,b
  9758  001278  3379               	rrcf	strtof@_u& (0+255),f,b
  9759  00127A  2F6D               	decfsz	??_strtof& (0+255),f,b
  9760  00127C  EF38  F009         	goto	u10955
  9761  001280                     
  9762                           ; BSR set to: 0
  9763  001280  0EFF               	movlw	255
  9764  001282  1779               	andwf	strtof@_u& (0+255),f,b
  9765  001284  0EFF               	movlw	255
  9766  001286  177A               	andwf	(strtof@_u+1)& (0+255),f,b
  9767  001288  0E7F               	movlw	127
  9768  00128A  177B               	andwf	(strtof@_u+2)& (0+255),f,b
  9769  00128C  0E00               	movlw	0
  9770  00128E  177C               	andwf	(strtof@_u+3)& (0+255),f,b
  9771  001290                     
  9772                           ; BSR set to: 0
  9773  001290  0E7F               	movlw	127
  9774  001292  2575               	addwf	strtof@expon& (0+255),w,b
  9775  001294  6F6D               	movwf	??_strtof& (0+255),b
  9776  001296  0E00               	movlw	0
  9777  001298  2176               	addwfc	(strtof@expon+1)& (0+255),w,b
  9778  00129A  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9779  00129C  0EFF               	movlw	255
  9780  00129E  156D               	andwf	??_strtof& (0+255),w,b
  9781  0012A0  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9782  0012A2  6B70               	clrf	(??_strtof+3)& (0+255),b
  9783  0012A4  6B71               	clrf	(??_strtof+4)& (0+255),b
  9784  0012A6  6B72               	clrf	(??_strtof+5)& (0+255),b
  9785  0012A8  0E17               	movlw	23
  9786  0012AA                     u10965:
  9787  0012AA  90D8               	bcf	status,0,c
  9788  0012AC  376F               	rlcf	(??_strtof+2)& (0+255),f,b
  9789  0012AE  3770               	rlcf	(??_strtof+3)& (0+255),f,b
  9790  0012B0  3771               	rlcf	(??_strtof+4)& (0+255),f,b
  9791  0012B2  3772               	rlcf	(??_strtof+5)& (0+255),f,b
  9792  0012B4  2EE8               	decfsz	wreg,f,c
  9793  0012B6  EF55  F009         	goto	u10965
  9794  0012BA  516F               	movf	(??_strtof+2)& (0+255),w,b
  9795  0012BC  1379               	iorwf	strtof@_u& (0+255),f,b
  9796  0012BE  5170               	movf	(??_strtof+3)& (0+255),w,b
  9797  0012C0  137A               	iorwf	(strtof@_u+1)& (0+255),f,b
  9798  0012C2  5171               	movf	(??_strtof+4)& (0+255),w,b
  9799  0012C4  137B               	iorwf	(strtof@_u+2)& (0+255),f,b
  9800  0012C6  5172               	movf	(??_strtof+5)& (0+255),w,b
  9801  0012C8  137C               	iorwf	(strtof@_u+3)& (0+255),f,b
  9802  0012CA  EF56  F00C         	goto	l1270
  9803  0012CE                     l1355:
  9804                           
  9805                           ; BSR set to: 0
  9806  0012CE  B974               	btfsc	strtof@flags& (0+255),4,b
  9807  0012D0  EF6C  F009         	goto	u10971
  9808  0012D4  EF6E  F009         	goto	u10970
  9809  0012D8                     u10971:
  9810  0012D8  EF80  F009         	goto	l8087
  9811  0012DC                     u10970:
  9812  0012DC                     
  9813                           ; BSR set to: 0
  9814  0012DC  C052  FFD9         	movff	strtof@s,fsr2l
  9815  0012E0  C053  FFDA         	movff	strtof@s+1,fsr2h
  9816  0012E4  0E2E               	movlw	46
  9817  0012E6  18DE               	xorwf	postinc2,w,c
  9818  0012E8  A4D8               	btfss	status,2,c
  9819  0012EA  EF79  F009         	goto	u10981
  9820  0012EE  EF7B  F009         	goto	u10980
  9821  0012F2                     u10981:
  9822  0012F2  EF80  F009         	goto	l8087
  9823  0012F6                     u10980:
  9824  0012F6                     
  9825                           ; BSR set to: 0
  9826  0012F6  8974               	bsf	strtof@flags& (0+255),4,b
  9827  0012F8  4A52               	infsnz	strtof@s^0,f,c
  9828  0012FA  2A53               	incf	(strtof@s+1)^0,f,c
  9829  0012FC  EF67  F009         	goto	l1355
  9830  001300                     l8087:
  9831                           
  9832                           ; BSR set to: 0
  9833  001300  0ED0               	movlw	208
  9834  001302  6F6D               	movwf	??_strtof& (0+255),b
  9835  001304  0EFF               	movlw	255
  9836  001306  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9837  001308  C052  FFD9         	movff	strtof@s,fsr2l
  9838  00130C  C053  FFDA         	movff	strtof@s+1,fsr2h
  9839  001310  50DF               	movf	indf2,w,c
  9840  001312  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9841  001314  6B70               	clrf	(??_strtof+3)& (0+255),b
  9842  001316  516D               	movf	??_strtof& (0+255),w,b
  9843  001318  276F               	addwf	(??_strtof+2)& (0+255),f,b
  9844  00131A  516E               	movf	(??_strtof+1)& (0+255),w,b
  9845  00131C  2370               	addwfc	(??_strtof+3)& (0+255),f,b
  9846  00131E  5170               	movf	(??_strtof+3)& (0+255),w,b
  9847  001320  E109               	bnz	u10990
  9848  001322  0E0A               	movlw	10
  9849  001324  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
  9850  001326  A0D8               	btfss	status,0,c
  9851  001328  EF98  F009         	goto	u10991
  9852  00132C  EF9A  F009         	goto	u10990
  9853  001330                     u10991:
  9854  001330  EF9C  F009         	goto	l8091
  9855  001334                     u10990:
  9856  001334  EFEB  F009         	goto	l8105
  9857  001338                     l8091:
  9858                           
  9859                           ; BSR set to: 0
  9860  001338  8374               	bsf	strtof@flags& (0+255),1,b
  9861  00133A                     
  9862                           ; BSR set to: 0
  9863  00133A  0E09               	movlw	9
  9864  00133C  1977               	xorwf	strtof@eexp& (0+255),w,b
  9865  00133E  1178               	iorwf	(strtof@eexp+1)& (0+255),w,b
  9866  001340  B4D8               	btfsc	status,2,c
  9867  001342  EFA5  F009         	goto	u11001
  9868  001346  EFA7  F009         	goto	u11000
  9869  00134A                     u11001:
  9870  00134A  EFDE  F009         	goto	l1362
  9871  00134E                     u11000:
  9872  00134E                     
  9873                           ; BSR set to: 0
  9874  00134E  A974               	btfss	strtof@flags& (0+255),4,b
  9875  001350  EFAC  F009         	goto	u11011
  9876  001354  EFAE  F009         	goto	u11010
  9877  001358                     u11011:
  9878  001358  EFB1  F009         	goto	l1363
  9879  00135C                     u11010:
  9880  00135C                     
  9881                           ; BSR set to: 0
  9882  00135C  0775               	decf	strtof@expon& (0+255),f,b
  9883  00135E  A0D8               	btfss	status,0,c
  9884  001360  0776               	decf	(strtof@expon+1)& (0+255),f,b
  9885  001362                     l1363:
  9886                           
  9887                           ; BSR set to: 0
  9888  001362  4B77               	infsnz	strtof@eexp& (0+255),f,b
  9889  001364  2B78               	incf	(strtof@eexp+1)& (0+255),f,b
  9890  001366                     
  9891                           ; BSR set to: 0
  9892  001366  C079  F003         	movff	strtof@_u,___lmul@multiplier
  9893  00136A  C07A  F004         	movff	strtof@_u+1,___lmul@multiplier+1
  9894  00136E  C07B  F005         	movff	strtof@_u+2,___lmul@multiplier+2
  9895  001372  C07C  F006         	movff	strtof@_u+3,___lmul@multiplier+3
  9896  001376  0E0A               	movlw	10
  9897  001378  6E07               	movwf	___lmul@multiplicand^0,c
  9898  00137A  0E00               	movlw	0
  9899  00137C  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  9900  00137E  0E00               	movlw	0
  9901  001380  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  9902  001382  0E00               	movlw	0
  9903  001384  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  9904  001386  EC84  F02B         	call	___lmul	;wreg free
  9905  00138A  C003  F079         	movff	?___lmul,strtof@_u
  9906  00138E  C004  F07A         	movff	?___lmul+1,strtof@_u+1
  9907  001392  C005  F07B         	movff	?___lmul+2,strtof@_u+2
  9908  001396  C006  F07C         	movff	?___lmul+3,strtof@_u+3
  9909  00139A  C052  FFD9         	movff	strtof@s,fsr2l
  9910  00139E  C053  FFDA         	movff	strtof@s+1,fsr2h
  9911  0013A2  50DF               	movf	indf2,w,c
  9912  0013A4  0100               	movlb	0	; () banked
  9913  0013A6  6F6D               	movwf	??_strtof& (0+255),b
  9914  0013A8  0ED0               	movlw	208
  9915  0013AA  276D               	addwf	??_strtof& (0+255),f,b
  9916  0013AC  516D               	movf	??_strtof& (0+255),w,b
  9917  0013AE  2779               	addwf	strtof@_u& (0+255),f,b
  9918  0013B0  0E00               	movlw	0
  9919  0013B2  237A               	addwfc	(strtof@_u+1)& (0+255),f,b
  9920  0013B4  237B               	addwfc	(strtof@_u+2)& (0+255),f,b
  9921  0013B6  237C               	addwfc	(strtof@_u+3)& (0+255),f,b
  9922  0013B8  EFE7  F009         	goto	l1364
  9923  0013BC                     l1362:
  9924                           
  9925                           ; BSR set to: 0
  9926  0013BC  B974               	btfsc	strtof@flags& (0+255),4,b
  9927  0013BE  EFE3  F009         	goto	u11021
  9928  0013C2  EFE5  F009         	goto	u11020
  9929  0013C6                     u11021:
  9930  0013C6  EFE7  F009         	goto	l1364
  9931  0013CA                     u11020:
  9932  0013CA                     
  9933                           ; BSR set to: 0
  9934  0013CA  4B75               	infsnz	strtof@expon& (0+255),f,b
  9935  0013CC  2B76               	incf	(strtof@expon+1)& (0+255),f,b
  9936  0013CE                     l1364:
  9937                           
  9938                           ; BSR set to: 0
  9939  0013CE  4A52               	infsnz	strtof@s^0,f,c
  9940  0013D0  2A53               	incf	(strtof@s+1)^0,f,c
  9941  0013D2  EF67  F009         	goto	l1355
  9942  0013D6                     l8105:
  9943                           
  9944                           ; BSR set to: 0
  9945  0013D6  0E00               	movlw	0
  9946  0013D8  6F78               	movwf	(strtof@eexp+1)& (0+255),b
  9947  0013DA  0E00               	movlw	0
  9948  0013DC  6F77               	movwf	strtof@eexp& (0+255),b
  9949  0013DE                     
  9950                           ; BSR set to: 0
  9951  0013DE  C052  FFD9         	movff	strtof@s,fsr2l
  9952  0013E2  C053  FFDA         	movff	strtof@s+1,fsr2h
  9953  0013E6  0E65               	movlw	101
  9954  0013E8  18DE               	xorwf	postinc2,w,c
  9955  0013EA  B4D8               	btfsc	status,2,c
  9956  0013EC  EFFA  F009         	goto	u11031
  9957  0013F0  EFFC  F009         	goto	u11030
  9958  0013F4                     u11031:
  9959  0013F4  EF09  F00A         	goto	l8111
  9960  0013F8                     u11030:
  9961  0013F8                     
  9962                           ; BSR set to: 0
  9963  0013F8  C052  FFD9         	movff	strtof@s,fsr2l
  9964  0013FC  C053  FFDA         	movff	strtof@s+1,fsr2h
  9965  001400  0E45               	movlw	69
  9966  001402  18DE               	xorwf	postinc2,w,c
  9967  001404  A4D8               	btfss	status,2,c
  9968  001406  EF07  F00A         	goto	u11041
  9969  00140A  EF09  F00A         	goto	u11040
  9970  00140E                     u11041:
  9971  00140E  EFD4  F00A         	goto	l8149
  9972  001412                     u11040:
  9973  001412                     l8111:
  9974                           
  9975                           ; BSR set to: 0
  9976  001412  4A52               	infsnz	strtof@s^0,f,c
  9977  001414  2A53               	incf	(strtof@s+1)^0,f,c
  9978  001416  C052  FFD9         	movff	strtof@s,fsr2l
  9979  00141A  C053  FFDA         	movff	strtof@s+1,fsr2h
  9980  00141E  0E2D               	movlw	45
  9981  001420  18DE               	xorwf	postinc2,w,c
  9982  001422  A4D8               	btfss	status,2,c
  9983  001424  EF16  F00A         	goto	u11051
  9984  001428  EF18  F00A         	goto	u11050
  9985  00142C                     u11051:
  9986  00142C  EF1D  F00A         	goto	l8115
  9987  001430                     u11050:
  9988  001430                     
  9989                           ; BSR set to: 0
  9990  001430  8774               	bsf	strtof@flags& (0+255),3,b
  9991  001432  4A52               	infsnz	strtof@s^0,f,c
  9992  001434  2A53               	incf	(strtof@s+1)^0,f,c
  9993  001436  EF2C  F00A         	goto	l8121
  9994  00143A                     l8115:
  9995                           
  9996                           ; BSR set to: 0
  9997  00143A  C052  FFD9         	movff	strtof@s,fsr2l
  9998  00143E  C053  FFDA         	movff	strtof@s+1,fsr2h
  9999  001442  0E2B               	movlw	43
 10000  001444  18DE               	xorwf	postinc2,w,c
 10001  001446  A4D8               	btfss	status,2,c
 10002  001448  EF28  F00A         	goto	u11061
 10003  00144C  EF2A  F00A         	goto	u11060
 10004  001450                     u11061:
 10005  001450  EF2C  F00A         	goto	l8121
 10006  001454                     u11060:
 10007  001454                     l8117:
 10008  001454  4A52               	infsnz	strtof@s^0,f,c
 10009  001456  2A53               	incf	(strtof@s+1)^0,f,c
 10010  001458                     l8121:
 10011  001458  C052  FFD9         	movff	strtof@s,fsr2l
 10012  00145C  C053  FFDA         	movff	strtof@s+1,fsr2h
 10013  001460  0E30               	movlw	48
 10014  001462  18DE               	xorwf	postinc2,w,c
 10015  001464  B4D8               	btfsc	status,2,c
 10016  001466  EF37  F00A         	goto	u11071
 10017  00146A  EF39  F00A         	goto	u11070
 10018  00146E                     u11071:
 10019  00146E  EF2A  F00A         	goto	l8117
 10020  001472                     u11070:
 10021  001472  0ED0               	movlw	208
 10022  001474  0100               	movlb	0	; () banked
 10023  001476  6F6D               	movwf	??_strtof& (0+255),b
 10024  001478  0EFF               	movlw	255
 10025  00147A  6F6E               	movwf	(??_strtof+1)& (0+255),b
 10026  00147C  C052  FFD9         	movff	strtof@s,fsr2l
 10027  001480  C053  FFDA         	movff	strtof@s+1,fsr2h
 10028  001484  50DF               	movf	indf2,w,c
 10029  001486  6F6F               	movwf	(??_strtof+2)& (0+255),b
 10030  001488  6B70               	clrf	(??_strtof+3)& (0+255),b
 10031  00148A  516D               	movf	??_strtof& (0+255),w,b
 10032  00148C  276F               	addwf	(??_strtof+2)& (0+255),f,b
 10033  00148E  516E               	movf	(??_strtof+1)& (0+255),w,b
 10034  001490  2370               	addwfc	(??_strtof+3)& (0+255),f,b
 10035  001492  5170               	movf	(??_strtof+3)& (0+255),w,b
 10036  001494  E107               	bnz	u11081
 10037  001496  0E0A               	movlw	10
 10038  001498  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
 10039  00149A  B0D8               	btfsc	status,0,c
 10040  00149C  EF52  F00A         	goto	u11081
 10041  0014A0  EF54  F00A         	goto	u11080
 10042  0014A4                     u11081:
 10043  0014A4  EFC9  F00A         	goto	l8145
 10044  0014A8                     u11080:
 10045  0014A8                     
 10046                           ; BSR set to: 0
 10047  0014A8  C052  FFD9         	movff	strtof@s,fsr2l
 10048  0014AC  C053  FFDA         	movff	strtof@s+1,fsr2h
 10049  0014B0  50DF               	movf	indf2,w,c
 10050  0014B2  6F6D               	movwf	??_strtof& (0+255),b
 10051  0014B4  0ED0               	movlw	208
 10052  0014B6  276D               	addwf	??_strtof& (0+255),f,b
 10053  0014B8  516D               	movf	??_strtof& (0+255),w,b
 10054  0014BA  6F77               	movwf	strtof@eexp& (0+255),b
 10055  0014BC  6B78               	clrf	(strtof@eexp+1)& (0+255),b
 10056  0014BE                     
 10057                           ; BSR set to: 0
 10058  0014BE  4A52               	infsnz	strtof@s^0,f,c
 10059  0014C0  2A53               	incf	(strtof@s+1)^0,f,c
 10060  0014C2                     
 10061                           ; BSR set to: 0
 10062  0014C2  0ED0               	movlw	208
 10063  0014C4  6F6D               	movwf	??_strtof& (0+255),b
 10064  0014C6  0EFF               	movlw	255
 10065  0014C8  6F6E               	movwf	(??_strtof+1)& (0+255),b
 10066  0014CA  C052  FFD9         	movff	strtof@s,fsr2l
 10067  0014CE  C053  FFDA         	movff	strtof@s+1,fsr2h
 10068  0014D2  50DF               	movf	indf2,w,c
 10069  0014D4  6F6F               	movwf	(??_strtof+2)& (0+255),b
 10070  0014D6  6B70               	clrf	(??_strtof+3)& (0+255),b
 10071  0014D8  516D               	movf	??_strtof& (0+255),w,b
 10072  0014DA  276F               	addwf	(??_strtof+2)& (0+255),f,b
 10073  0014DC  516E               	movf	(??_strtof+1)& (0+255),w,b
 10074  0014DE  2370               	addwfc	(??_strtof+3)& (0+255),f,b
 10075  0014E0  5170               	movf	(??_strtof+3)& (0+255),w,b
 10076  0014E2  E107               	bnz	u11091
 10077  0014E4  0E0A               	movlw	10
 10078  0014E6  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
 10079  0014E8  B0D8               	btfsc	status,0,c
 10080  0014EA  EF79  F00A         	goto	u11091
 10081  0014EE  EF7B  F00A         	goto	u11090
 10082  0014F2                     u11091:
 10083  0014F2  EFC9  F00A         	goto	l8145
 10084  0014F6                     u11090:
 10085  0014F6                     
 10086                           ; BSR set to: 0
 10087  0014F6  C052  FFD9         	movff	strtof@s,fsr2l
 10088  0014FA  C053  FFDA         	movff	strtof@s+1,fsr2h
 10089  0014FE  50DF               	movf	indf2,w,c
 10090  001500  6F6D               	movwf	??_strtof& (0+255),b
 10091  001502  0ED0               	movlw	208
 10092  001504  276D               	addwf	??_strtof& (0+255),f,b
 10093  001506  C077  F003         	movff	strtof@eexp,___wmul@multiplier
 10094  00150A  C078  F004         	movff	strtof@eexp+1,___wmul@multiplier+1
 10095  00150E  0E00               	movlw	0
 10096  001510  6E06               	movwf	(___wmul@multiplicand+1)^0,c
 10097  001512  0E0A               	movlw	10
 10098  001514  6E05               	movwf	___wmul@multiplicand^0,c
 10099  001516  ECBF  F02E         	call	___wmul	;wreg free
 10100  00151A  0100               	movlb	0	; () banked
 10101  00151C  516D               	movf	??_strtof& (0+255),w,b
 10102  00151E  2403               	addwf	?___wmul^0,w,c
 10103  001520  6F77               	movwf	strtof@eexp& (0+255),b
 10104  001522  0E00               	movlw	0
 10105  001524  2004               	addwfc	(?___wmul+1)^0,w,c
 10106  001526  6F78               	movwf	(strtof@eexp+1)& (0+255),b
 10107  001528                     
 10108                           ; BSR set to: 0
 10109  001528  4A52               	infsnz	strtof@s^0,f,c
 10110  00152A  2A53               	incf	(strtof@s+1)^0,f,c
 10111  00152C                     
 10112                           ; BSR set to: 0
 10113  00152C  0ED0               	movlw	208
 10114  00152E  6F6D               	movwf	??_strtof& (0+255),b
 10115  001530  0EFF               	movlw	255
 10116  001532  6F6E               	movwf	(??_strtof+1)& (0+255),b
 10117  001534  C052  FFD9         	movff	strtof@s,fsr2l
 10118  001538  C053  FFDA         	movff	strtof@s+1,fsr2h
 10119  00153C  50DF               	movf	indf2,w,c
 10120  00153E  6F6F               	movwf	(??_strtof+2)& (0+255),b
 10121  001540  6B70               	clrf	(??_strtof+3)& (0+255),b
 10122  001542  516D               	movf	??_strtof& (0+255),w,b
 10123  001544  276F               	addwf	(??_strtof+2)& (0+255),f,b
 10124  001546  516E               	movf	(??_strtof+1)& (0+255),w,b
 10125  001548  2370               	addwfc	(??_strtof+3)& (0+255),f,b
 10126  00154A  5170               	movf	(??_strtof+3)& (0+255),w,b
 10127  00154C  E107               	bnz	u11101
 10128  00154E  0E0A               	movlw	10
 10129  001550  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
 10130  001552  B0D8               	btfsc	status,0,c
 10131  001554  EFAE  F00A         	goto	u11101
 10132  001558  EFB0  F00A         	goto	u11100
 10133  00155C                     u11101:
 10134  00155C  EFC9  F00A         	goto	l8145
 10135  001560                     u11100:
 10136  001560                     
 10137                           ; BSR set to: 0
 10138  001560  C052  FFD9         	movff	strtof@s,fsr2l
 10139  001564  C053  FFDA         	movff	strtof@s+1,fsr2h
 10140  001568  50DF               	movf	indf2,w,c
 10141  00156A  6F6D               	movwf	??_strtof& (0+255),b
 10142  00156C  0ED0               	movlw	208
 10143  00156E  276D               	addwf	??_strtof& (0+255),f,b
 10144  001570  C077  F003         	movff	strtof@eexp,___wmul@multiplier
 10145  001574  C078  F004         	movff	strtof@eexp+1,___wmul@multiplier+1
 10146  001578  0E00               	movlw	0
 10147  00157A  6E06               	movwf	(___wmul@multiplicand+1)^0,c
 10148  00157C  0E0A               	movlw	10
 10149  00157E  6E05               	movwf	___wmul@multiplicand^0,c
 10150  001580  ECBF  F02E         	call	___wmul	;wreg free
 10151  001584  0100               	movlb	0	; () banked
 10152  001586  516D               	movf	??_strtof& (0+255),w,b
 10153  001588  2403               	addwf	?___wmul^0,w,c
 10154  00158A  6F77               	movwf	strtof@eexp& (0+255),b
 10155  00158C  0E00               	movlw	0
 10156  00158E  2004               	addwfc	(?___wmul+1)^0,w,c
 10157  001590  6F78               	movwf	(strtof@eexp+1)& (0+255),b
 10158  001592                     l8145:
 10159                           
 10160                           ; BSR set to: 0
 10161  001592  A774               	btfss	strtof@flags& (0+255),3,b
 10162  001594  EFCE  F00A         	goto	u11111
 10163  001598  EFD0  F00A         	goto	u11110
 10164  00159C                     u11111:
 10165  00159C  EFD4  F00A         	goto	l8149
 10166  0015A0                     u11110:
 10167  0015A0                     
 10168                           ; BSR set to: 0
 10169  0015A0  6D77               	negf	strtof@eexp& (0+255),b
 10170  0015A2  1F78               	comf	(strtof@eexp+1)& (0+255),f,b
 10171  0015A4  B0D8               	btfsc	status,0,c
 10172  0015A6  2B78               	incf	(strtof@eexp+1)& (0+255),f,b
 10173  0015A8                     l8149:
 10174                           
 10175                           ; BSR set to: 0
 10176  0015A8  5177               	movf	strtof@eexp& (0+255),w,b
 10177  0015AA  2775               	addwf	strtof@expon& (0+255),f,b
 10178  0015AC  5178               	movf	(strtof@eexp+1)& (0+255),w,b
 10179  0015AE  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
 10180  0015B0                     
 10181                           ; BSR set to: 0
 10182  0015B0  5054               	movf	strtof@res^0,w,c
 10183  0015B2  1055               	iorwf	(strtof@res+1)^0,w,c
 10184  0015B4  B4D8               	btfsc	status,2,c
 10185  0015B6  EFDF  F00A         	goto	u11121
 10186  0015BA  EFE1  F00A         	goto	u11120
 10187  0015BE                     u11121:
 10188  0015BE  EFF0  F00A         	goto	l8157
 10189  0015C2                     u11120:
 10190  0015C2                     
 10191                           ; BSR set to: 0
 10192  0015C2  A374               	btfss	strtof@flags& (0+255),1,b
 10193  0015C4  EFE6  F00A         	goto	u11131
 10194  0015C8  EFE8  F00A         	goto	u11130
 10195  0015CC                     u11131:
 10196  0015CC  EFF0  F00A         	goto	l8157
 10197  0015D0                     u11130:
 10198  0015D0                     
 10199                           ; BSR set to: 0
 10200  0015D0  C054  FFD9         	movff	strtof@res,fsr2l
 10201  0015D4  C055  FFDA         	movff	strtof@res+1,fsr2h
 10202  0015D8  C052  FFDE         	movff	strtof@s,postinc2
 10203  0015DC  C053  FFDD         	movff	strtof@s+1,postdec2
 10204  0015E0                     l8157:
 10205                           
 10206                           ; BSR set to: 0
 10207  0015E0  C079  F007         	movff	strtof@_u,___xxtofl@val
 10208  0015E4  C07A  F008         	movff	strtof@_u+1,___xxtofl@val+1
 10209  0015E8  C07B  F009         	movff	strtof@_u+2,___xxtofl@val+2
 10210  0015EC  C07C  F00A         	movff	strtof@_u+3,___xxtofl@val+3
 10211  0015F0  0E00               	movlw	0
 10212  0015F2  ECCD  F021         	call	___xxtofl
 10213  0015F6  C007  F079         	movff	?___xxtofl,strtof@_u
 10214  0015FA  C008  F07A         	movff	?___xxtofl+1,strtof@_u+1
 10215  0015FE  C009  F07B         	movff	?___xxtofl+2,strtof@_u+2
 10216  001602  C00A  F07C         	movff	?___xxtofl+3,strtof@_u+3
 10217  001606  C079  F003         	movff	strtof@_u,___fleq@ff1
 10218  00160A  C07A  F004         	movff	strtof@_u+1,___fleq@ff1+1
 10219  00160E  C07B  F005         	movff	strtof@_u+2,___fleq@ff1+2
 10220  001612  C07C  F006         	movff	strtof@_u+3,___fleq@ff1+3
 10221  001616  0E00               	movlw	0
 10222  001618  6E07               	movwf	___fleq@ff2^0,c
 10223  00161A  0E00               	movlw	0
 10224  00161C  6E08               	movwf	(___fleq@ff2+1)^0,c
 10225  00161E  0E00               	movlw	0
 10226  001620  6E09               	movwf	(___fleq@ff2+2)^0,c
 10227  001622  0E00               	movlw	0
 10228  001624  6E0A               	movwf	(___fleq@ff2+3)^0,c
 10229  001626  EC36  F02A         	call	___fleq	;wreg free
 10230  00162A  A0D8               	btfss	status,0,c
 10231  00162C  EF1A  F00B         	goto	u11141
 10232  001630  EF1C  F00B         	goto	u11140
 10233  001634                     u11141:
 10234  001634  EF26  F00B         	goto	l8165
 10235  001638                     u11140:
 10236  001638  0E00               	movlw	0
 10237  00163A  6E52               	movwf	?_strtof^0,c
 10238  00163C  0E00               	movlw	0
 10239  00163E  6E53               	movwf	(?_strtof+1)^0,c
 10240  001640  0E00               	movlw	0
 10241  001642  6E54               	movwf	(?_strtof+2)^0,c
 10242  001644  0E00               	movlw	0
 10243  001646  6E55               	movwf	(?_strtof+3)^0,c
 10244  001648  EF78  F00C         	goto	l1314
 10245  00164C                     l8165:
 10246  00164C  0100               	movlb	0	; () banked
 10247  00164E  BF76               	btfsc	(strtof@expon+1)& (0+255),7,b
 10248  001650  EF2E  F00B         	goto	u11150
 10249  001654  EF2C  F00B         	goto	u11151
 10250  001658                     u11151:
 10251  001658  EFBF  F00B         	goto	l8193
 10252  00165C                     u11150:
 10253  00165C                     
 10254                           ; BSR set to: 0
 10255  00165C  6D75               	negf	strtof@expon& (0+255),b
 10256  00165E  1F76               	comf	(strtof@expon+1)& (0+255),f,b
 10257  001660  B0D8               	btfsc	status,0,c
 10258  001662  2B76               	incf	(strtof@expon+1)& (0+255),f,b
 10259  001664  EF53  F00B         	goto	l8173
 10260  001668                     l8169:
 10261                           
 10262                           ; BSR set to: 0
 10263  001668  C079  F046         	movff	strtof@_u,___fldiv@b
 10264  00166C  C07A  F047         	movff	strtof@_u+1,___fldiv@b+1
 10265  001670  C07B  F048         	movff	strtof@_u+2,___fldiv@b+2
 10266  001674  C07C  F049         	movff	strtof@_u+3,___fldiv@b+3
 10267  001678  0EF9               	movlw	249
 10268  00167A  6E4A               	movwf	___fldiv@a^0,c
 10269  00167C  0E02               	movlw	2
 10270  00167E  6E4B               	movwf	(___fldiv@a+1)^0,c
 10271  001680  0E15               	movlw	21
 10272  001682  6E4C               	movwf	(___fldiv@a+2)^0,c
 10273  001684  0E50               	movlw	80
 10274  001686  6E4D               	movwf	(___fldiv@a+3)^0,c
 10275  001688  EC67  F01C         	call	___fldiv	;wreg free
 10276  00168C  C046  F079         	movff	?___fldiv,strtof@_u
 10277  001690  C047  F07A         	movff	?___fldiv+1,strtof@_u+1
 10278  001694  C048  F07B         	movff	?___fldiv+2,strtof@_u+2
 10279  001698  C049  F07C         	movff	?___fldiv+3,strtof@_u+3
 10280  00169C  0100               	movlb	0	; () banked
 10281  00169E  0EF6               	movlw	246
 10282  0016A0  2775               	addwf	strtof@expon& (0+255),f,b
 10283  0016A2  0EFF               	movlw	255
 10284  0016A4  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
 10285  0016A6                     l8173:
 10286                           
 10287                           ; BSR set to: 0
 10288  0016A6  BF76               	btfsc	(strtof@expon+1)& (0+255),7,b
 10289  0016A8  EF61  F00B         	goto	u11160
 10290  0016AC  5176               	movf	(strtof@expon+1)& (0+255),w,b
 10291  0016AE  E107               	bnz	u11161
 10292  0016B0  0E0A               	movlw	10
 10293  0016B2  5D75               	subwf	strtof@expon& (0+255),w,b
 10294  0016B4  B0D8               	btfsc	status,0,c
 10295  0016B6  EF5F  F00B         	goto	u11161
 10296  0016BA  EF61  F00B         	goto	u11160
 10297  0016BE                     u11161:
 10298  0016BE  EF34  F00B         	goto	l8169
 10299  0016C2                     u11160:
 10300  0016C2  EF81  F00B         	goto	l8179
 10301  0016C6                     l8175:
 10302                           
 10303                           ; BSR set to: 0
 10304  0016C6  C079  F046         	movff	strtof@_u,___fldiv@b
 10305  0016CA  C07A  F047         	movff	strtof@_u+1,___fldiv@b+1
 10306  0016CE  C07B  F048         	movff	strtof@_u+2,___fldiv@b+2
 10307  0016D2  C07C  F049         	movff	strtof@_u+3,___fldiv@b+3
 10308  0016D6  0E00               	movlw	0
 10309  0016D8  6E4A               	movwf	___fldiv@a^0,c
 10310  0016DA  0E00               	movlw	0
 10311  0016DC  6E4B               	movwf	(___fldiv@a+1)^0,c
 10312  0016DE  0E20               	movlw	32
 10313  0016E0  6E4C               	movwf	(___fldiv@a+2)^0,c
 10314  0016E2  0E41               	movlw	65
 10315  0016E4  6E4D               	movwf	(___fldiv@a+3)^0,c
 10316  0016E6  EC67  F01C         	call	___fldiv	;wreg free
 10317  0016EA  C046  F079         	movff	?___fldiv,strtof@_u
 10318  0016EE  C047  F07A         	movff	?___fldiv+1,strtof@_u+1
 10319  0016F2  C048  F07B         	movff	?___fldiv+2,strtof@_u+2
 10320  0016F6  C049  F07C         	movff	?___fldiv+3,strtof@_u+3
 10321  0016FA  0100               	movlb	0	; () banked
 10322  0016FC  0775               	decf	strtof@expon& (0+255),f,b
 10323  0016FE  A0D8               	btfss	status,0,c
 10324  001700  0776               	decf	(strtof@expon+1)& (0+255),f,b
 10325  001702                     l8179:
 10326                           
 10327                           ; BSR set to: 0
 10328  001702  5175               	movf	strtof@expon& (0+255),w,b
 10329  001704  1176               	iorwf	(strtof@expon+1)& (0+255),w,b
 10330  001706  A4D8               	btfss	status,2,c
 10331  001708  EF88  F00B         	goto	u11171
 10332  00170C  EF8A  F00B         	goto	u11170
 10333  001710                     u11171:
 10334  001710  EF63  F00B         	goto	l8175
 10335  001714                     u11170:
 10336  001714                     
 10337                           ; BSR set to: 0
 10338  001714  C079  F046         	movff	strtof@_u,___flge@ff1
 10339  001718  C07A  F047         	movff	strtof@_u+1,___flge@ff1+1
 10340  00171C  C07B  F048         	movff	strtof@_u+2,___flge@ff1+2
 10341  001720  C07C  F049         	movff	strtof@_u+3,___flge@ff1+3
 10342  001724  0E00               	movlw	0
 10343  001726  6E4A               	movwf	___flge@ff2^0,c
 10344  001728  0E00               	movlw	0
 10345  00172A  6E4B               	movwf	(___flge@ff2+1)^0,c
 10346  00172C  0E80               	movlw	128
 10347  00172E  6E4C               	movwf	(___flge@ff2+2)^0,c
 10348  001730  0E00               	movlw	0
 10349  001732  6E4D               	movwf	(___flge@ff2+3)^0,c
 10350  001734  EC07  F026         	call	___flge	;wreg free
 10351  001738  B0D8               	btfsc	status,0,c
 10352  00173A  EFA1  F00B         	goto	u11181
 10353  00173E  EFA3  F00B         	goto	u11180
 10354  001742                     u11181:
 10355  001742  EF56  F00C         	goto	l1270
 10356  001746                     u11180:
 10357  001746  0100               	movlb	0	; () banked
 10358  001748  A174               	btfss	strtof@flags& (0+255),0,b
 10359  00174A  EFA9  F00B         	goto	u11191
 10360  00174E  EFAB  F00B         	goto	u11190
 10361  001752                     u11191:
 10362  001752  EFB5  F00B         	goto	l8189
 10363  001756                     u11190:
 10364  001756                     
 10365                           ; BSR set to: 0
 10366  001756  0E00               	movlw	0
 10367  001758  6E52               	movwf	?_strtof^0,c
 10368  00175A  0E00               	movlw	0
 10369  00175C  6E53               	movwf	(?_strtof+1)^0,c
 10370  00175E  0E80               	movlw	128
 10371  001760  6E54               	movwf	(?_strtof+2)^0,c
 10372  001762  0E80               	movlw	128
 10373  001764  6E55               	movwf	(?_strtof+3)^0,c
 10374  001766  EF78  F00C         	goto	l1314
 10375  00176A                     l8189:
 10376                           
 10377                           ; BSR set to: 0
 10378  00176A  0E00               	movlw	0
 10379  00176C  6E52               	movwf	?_strtof^0,c
 10380  00176E  0E00               	movlw	0
 10381  001770  6E53               	movwf	(?_strtof+1)^0,c
 10382  001772  0E80               	movlw	128
 10383  001774  6E54               	movwf	(?_strtof+2)^0,c
 10384  001776  0E00               	movlw	0
 10385  001778  6E55               	movwf	(?_strtof+3)^0,c
 10386  00177A  EF78  F00C         	goto	l1314
 10387  00177E                     l8193:
 10388                           
 10389                           ; BSR set to: 0
 10390  00177E  BF76               	btfsc	(strtof@expon+1)& (0+255),7,b
 10391  001780  EFCA  F00B         	goto	u11201
 10392  001784  5176               	movf	(strtof@expon+1)& (0+255),w,b
 10393  001786  E108               	bnz	u11200
 10394  001788  0575               	decf	strtof@expon& (0+255),w,b
 10395  00178A  A0D8               	btfss	status,0,c
 10396  00178C  EFCA  F00B         	goto	u11201
 10397  001790  EFCC  F00B         	goto	u11200
 10398  001794                     u11201:
 10399  001794  EF56  F00C         	goto	l1270
 10400  001798                     u11200:
 10401  001798  EFED  F00B         	goto	l8201
 10402  00179C                     l8197:
 10403                           
 10404                           ; BSR set to: 0
 10405  00179C  C079  F02D         	movff	strtof@_u,___flmul@b
 10406  0017A0  C07A  F02E         	movff	strtof@_u+1,___flmul@b+1
 10407  0017A4  C07B  F02F         	movff	strtof@_u+2,___flmul@b+2
 10408  0017A8  C07C  F030         	movff	strtof@_u+3,___flmul@b+3
 10409  0017AC  0EF9               	movlw	249
 10410  0017AE  6E31               	movwf	___flmul@a^0,c
 10411  0017B0  0E02               	movlw	2
 10412  0017B2  6E32               	movwf	(___flmul@a+1)^0,c
 10413  0017B4  0E15               	movlw	21
 10414  0017B6  6E33               	movwf	(___flmul@a+2)^0,c
 10415  0017B8  0E50               	movlw	80
 10416  0017BA  6E34               	movwf	(___flmul@a+3)^0,c
 10417  0017BC  EC52  F01A         	call	___flmul	;wreg free
 10418  0017C0  C02D  F079         	movff	?___flmul,strtof@_u
 10419  0017C4  C02E  F07A         	movff	?___flmul+1,strtof@_u+1
 10420  0017C8  C02F  F07B         	movff	?___flmul+2,strtof@_u+2
 10421  0017CC  C030  F07C         	movff	?___flmul+3,strtof@_u+3
 10422  0017D0  0100               	movlb	0	; () banked
 10423  0017D2  0EF6               	movlw	246
 10424  0017D4  2775               	addwf	strtof@expon& (0+255),f,b
 10425  0017D6  0EFF               	movlw	255
 10426  0017D8  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
 10427  0017DA                     l8201:
 10428                           
 10429                           ; BSR set to: 0
 10430  0017DA  5176               	movf	(strtof@expon+1)& (0+255),w,b
 10431  0017DC  E107               	bnz	u11211
 10432  0017DE  0E0A               	movlw	10
 10433  0017E0  5D75               	subwf	strtof@expon& (0+255),w,b
 10434  0017E2  B0D8               	btfsc	status,0,c
 10435  0017E4  EFF6  F00B         	goto	u11211
 10436  0017E8  EFF8  F00B         	goto	u11210
 10437  0017EC                     u11211:
 10438  0017EC  EFCE  F00B         	goto	l8197
 10439  0017F0                     u11210:
 10440  0017F0  EF18  F00C         	goto	l8207
 10441  0017F4                     l8203:
 10442                           
 10443                           ; BSR set to: 0
 10444  0017F4  C079  F02D         	movff	strtof@_u,___flmul@b
 10445  0017F8  C07A  F02E         	movff	strtof@_u+1,___flmul@b+1
 10446  0017FC  C07B  F02F         	movff	strtof@_u+2,___flmul@b+2
 10447  001800  C07C  F030         	movff	strtof@_u+3,___flmul@b+3
 10448  001804  0E00               	movlw	0
 10449  001806  6E31               	movwf	___flmul@a^0,c
 10450  001808  0E00               	movlw	0
 10451  00180A  6E32               	movwf	(___flmul@a+1)^0,c
 10452  00180C  0E20               	movlw	32
 10453  00180E  6E33               	movwf	(___flmul@a+2)^0,c
 10454  001810  0E41               	movlw	65
 10455  001812  6E34               	movwf	(___flmul@a+3)^0,c
 10456  001814  EC52  F01A         	call	___flmul	;wreg free
 10457  001818  C02D  F079         	movff	?___flmul,strtof@_u
 10458  00181C  C02E  F07A         	movff	?___flmul+1,strtof@_u+1
 10459  001820  C02F  F07B         	movff	?___flmul+2,strtof@_u+2
 10460  001824  C030  F07C         	movff	?___flmul+3,strtof@_u+3
 10461  001828  0100               	movlb	0	; () banked
 10462  00182A  0775               	decf	strtof@expon& (0+255),f,b
 10463  00182C  A0D8               	btfss	status,0,c
 10464  00182E  0776               	decf	(strtof@expon+1)& (0+255),f,b
 10465  001830                     l8207:
 10466                           
 10467                           ; BSR set to: 0
 10468  001830  5175               	movf	strtof@expon& (0+255),w,b
 10469  001832  1176               	iorwf	(strtof@expon+1)& (0+255),w,b
 10470  001834  A4D8               	btfss	status,2,c
 10471  001836  EF1F  F00C         	goto	u11221
 10472  00183A  EF21  F00C         	goto	u11220
 10473  00183E                     u11221:
 10474  00183E  EFFA  F00B         	goto	l8203
 10475  001842                     u11220:
 10476  001842                     
 10477                           ; BSR set to: 0
 10478  001842  0EFF               	movlw	255
 10479  001844  6E46               	movwf	___flge@ff1^0,c
 10480  001846  0EFF               	movlw	255
 10481  001848  6E47               	movwf	(___flge@ff1+1)^0,c
 10482  00184A  0E7F               	movlw	127
 10483  00184C  6E48               	movwf	(___flge@ff1+2)^0,c
 10484  00184E  0E7F               	movlw	127
 10485  001850  6E49               	movwf	(___flge@ff1+3)^0,c
 10486  001852  C079  F04A         	movff	strtof@_u,___flge@ff2
 10487  001856  C07A  F04B         	movff	strtof@_u+1,___flge@ff2+1
 10488  00185A  C07B  F04C         	movff	strtof@_u+2,___flge@ff2+2
 10489  00185E  C07C  F04D         	movff	strtof@_u+3,___flge@ff2+3
 10490  001862  EC07  F026         	call	___flge	;wreg free
 10491  001866  B0D8               	btfsc	status,0,c
 10492  001868  EF38  F00C         	goto	u11231
 10493  00186C  EF3A  F00C         	goto	u11230
 10494  001870                     u11231:
 10495  001870  EF56  F00C         	goto	l1270
 10496  001874                     u11230:
 10497  001874  0100               	movlb	0	; () banked
 10498  001876  A174               	btfss	strtof@flags& (0+255),0,b
 10499  001878  EF40  F00C         	goto	u11241
 10500  00187C  EF42  F00C         	goto	u11240
 10501  001880                     u11241:
 10502  001880  EF4C  F00C         	goto	l8217
 10503  001884                     u11240:
 10504  001884                     
 10505                           ; BSR set to: 0
 10506  001884  0E00               	movlw	0
 10507  001886  6E52               	movwf	?_strtof^0,c
 10508  001888  0E00               	movlw	0
 10509  00188A  6E53               	movwf	(?_strtof+1)^0,c
 10510  00188C  0E80               	movlw	128
 10511  00188E  6E54               	movwf	(?_strtof+2)^0,c
 10512  001890  0E80               	movlw	128
 10513  001892  6E55               	movwf	(?_strtof+3)^0,c
 10514  001894  EF78  F00C         	goto	l1314
 10515  001898                     l8217:
 10516                           
 10517                           ; BSR set to: 0
 10518  001898  0E00               	movlw	0
 10519  00189A  6E52               	movwf	?_strtof^0,c
 10520  00189C  0E00               	movlw	0
 10521  00189E  6E53               	movwf	(?_strtof+1)^0,c
 10522  0018A0  0E80               	movlw	128
 10523  0018A2  6E54               	movwf	(?_strtof+2)^0,c
 10524  0018A4  0E00               	movlw	0
 10525  0018A6  6E55               	movwf	(?_strtof+3)^0,c
 10526  0018A8  EF78  F00C         	goto	l1314
 10527  0018AC                     l1270:
 10528  0018AC  0100               	movlb	0	; () banked
 10529  0018AE  A174               	btfss	strtof@flags& (0+255),0,b
 10530  0018B0  EF5C  F00C         	goto	u11251
 10531  0018B4  EF5E  F00C         	goto	u11250
 10532  0018B8                     u11251:
 10533  0018B8  EF70  F00C         	goto	l8223
 10534  0018BC                     u11250:
 10535  0018BC                     
 10536                           ; BSR set to: 0
 10537  0018BC  C079  F003         	movff	strtof@_u,___flneg@f1
 10538  0018C0  C07A  F004         	movff	strtof@_u+1,___flneg@f1+1
 10539  0018C4  C07B  F005         	movff	strtof@_u+2,___flneg@f1+2
 10540  0018C8  C07C  F006         	movff	strtof@_u+3,___flneg@f1+3
 10541  0018CC  EC44  F02E         	call	___flneg	;wreg free
 10542  0018D0  C003  F079         	movff	?___flneg,strtof@_u
 10543  0018D4  C004  F07A         	movff	?___flneg+1,strtof@_u+1
 10544  0018D8  C005  F07B         	movff	?___flneg+2,strtof@_u+2
 10545  0018DC  C006  F07C         	movff	?___flneg+3,strtof@_u+3
 10546  0018E0                     l8223:
 10547  0018E0  C079  F052         	movff	strtof@_u,?_strtof
 10548  0018E4  C07A  F053         	movff	strtof@_u+1,?_strtof+1
 10549  0018E8  C07B  F054         	movff	strtof@_u+2,?_strtof+2
 10550  0018EC  C07C  F055         	movff	strtof@_u+3,?_strtof+3
 10551  0018F0                     l1314:
 10552  0018F0  0012               	return		;funcret
 10553  0018F2                     __end_of_strtof:
 10554                           	callstack 0
 10555                           
 10556 ;; *************** function _toupper *****************
 10557 ;; Defined at:
 10558 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\toupper.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  c               2    8[COMRAM] int 
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;		None
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  2    8[COMRAM] int 
 10565 ;; Registers used:
 10566 ;;		wreg, status,2, status,0
 10567 ;; Tracked objects:
 10568 ;;		On entry : 0/0
 10569 ;;		On exit  : 0/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10572 ;;      Params:         2       0       0       0       0       0       0       0       0
 10573 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10574 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10575 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10576 ;;Total ram usage:        6 bytes
 10577 ;; Hardware stack levels used: 1
 10578 ;; Hardware stack levels required when called: 3
 10579 ;; This function calls:
 10580 ;;		_islower
 10581 ;; This function is called by:
 10582 ;;		_strtof
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text32
 10587  005B5C                     __ptext32:
 10588                           	callstack 0
 10589  005B5C                     _toupper:
 10590                           	callstack 25
 10591  005B5C  0E9F               	movlw	159
 10592  005B5E  6E0B               	movwf	??_toupper^0,c
 10593  005B60  0EFF               	movlw	255
 10594  005B62  6E0C               	movwf	(??_toupper+1)^0,c
 10595  005B64  C009  F00D         	movff	toupper@c,??_toupper+2
 10596  005B68  C00A  F00E         	movff	toupper@c+1,??_toupper+3
 10597  005B6C  500B               	movf	??_toupper^0,w,c
 10598  005B6E  260D               	addwf	(??_toupper+2)^0,f,c
 10599  005B70  500C               	movf	(??_toupper+1)^0,w,c
 10600  005B72  220E               	addwfc	(??_toupper+3)^0,f,c
 10601  005B74  500E               	movf	(??_toupper+3)^0,w,c
 10602  005B76  E107               	bnz	u6571
 10603  005B78  0E1A               	movlw	26
 10604  005B7A  5C0D               	subwf	(??_toupper+2)^0,w,c
 10605  005B7C  B0D8               	btfsc	status,0,c
 10606  005B7E  EFC3  F02D         	goto	u6571
 10607  005B82  EFC5  F02D         	goto	u6570
 10608  005B86                     u6571:
 10609  005B86  EFCB  F02D         	goto	l1485
 10610  005B8A                     u6570:
 10611  005B8A  0E5F               	movlw	95
 10612  005B8C  1409               	andwf	toupper@c^0,w,c
 10613  005B8E  6E09               	movwf	?_toupper^0,c
 10614  005B90  6A0A               	clrf	(?_toupper+1)^0,c
 10615  005B92  EFCF  F02D         	goto	l1488
 10616  005B96                     l1485:
 10617  005B96  C009  F009         	movff	toupper@c,?_toupper
 10618  005B9A  C00A  F00A         	movff	toupper@c+1,?_toupper+1
 10619  005B9E                     l1488:
 10620  005B9E  0012               	return		;funcret
 10621  005BA0                     __end_of_toupper:
 10622                           	callstack 0
 10623                           
 10624 ;; *************** function _islower *****************
 10625 ;; Defined at:
 10626 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\islower.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;  c               2    2[COMRAM] int 
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  2    2[COMRAM] int 
 10633 ;; Registers used:
 10634 ;;		wreg, status,2, status,0
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10640 ;;      Params:         2       0       0       0       0       0       0       0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10642 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10643 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10644 ;;Total ram usage:        6 bytes
 10645 ;; Hardware stack levels used: 1
 10646 ;; Hardware stack levels required when called: 2
 10647 ;; This function calls:
 10648 ;;		Nothing
 10649 ;; This function is called by:
 10650 ;;		_toupper
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           	psect	text33
 10655  005C18                     __ptext33:
 10656                           	callstack 0
 10657  005C18                     _islower:
 10658                           	callstack 25
 10659  005C18  0E9F               	movlw	159
 10660  005C1A  6E05               	movwf	??_islower^0,c
 10661  005C1C  0EFF               	movlw	255
 10662  005C1E  6E06               	movwf	(??_islower+1)^0,c
 10663  005C20  C003  F007         	movff	islower@c,??_islower+2
 10664  005C24  C004  F008         	movff	islower@c+1,??_islower+3
 10665  005C28  5005               	movf	??_islower^0,w,c
 10666  005C2A  2607               	addwf	(??_islower+2)^0,f,c
 10667  005C2C  5006               	movf	(??_islower+1)^0,w,c
 10668  005C2E  2208               	addwfc	(??_islower+3)^0,f,c
 10669  005C30  5008               	movf	(??_islower+3)^0,w,c
 10670  005C32  E10A               	bnz	u6240
 10671  005C34  0E1A               	movlw	26
 10672  005C36  5C07               	subwf	(??_islower+2)^0,w,c
 10673  005C38  A0D8               	btfss	status,0,c
 10674  005C3A  EF21  F02E         	goto	u6241
 10675  005C3E  EF24  F02E         	goto	u6240
 10676  005C42                     u6241:
 10677  005C42  0E01               	movlw	1
 10678  005C44  EF25  F02E         	goto	u6250
 10679  005C48                     u6240:
 10680  005C48  0E00               	movlw	0
 10681  005C4A                     u6250:
 10682  005C4A  6E03               	movwf	?_islower^0,c
 10683  005C4C  6A04               	clrf	(?_islower+1)^0,c
 10684  005C4E  0012               	return		;funcret
 10685  005C50                     __end_of_islower:
 10686                           	callstack 0
 10687                           
 10688 ;; *************** function _nanf *****************
 10689 ;; Defined at:
 10690 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nanf.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;  s               2    2[COMRAM] PTR const unsigned char 
 10693 ;;		 -> STR_25(1), 
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;  u               4    6[COMRAM] struct .
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  4    2[COMRAM] float 
 10698 ;; Registers used:
 10699 ;;		wreg, status,2
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10705 ;;      Params:         4       0       0       0       0       0       0       0       0
 10706 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10707 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10708 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10709 ;;Total ram usage:        8 bytes
 10710 ;; Hardware stack levels used: 1
 10711 ;; Hardware stack levels required when called: 2
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_strtof
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           	psect	text34
 10720  005DA4                     __ptext34:
 10721                           	callstack 0
 10722  005DA4                     _nanf:
 10723                           	callstack 26
 10724  005DA4  0EFF               	movlw	255
 10725  005DA6  6E07               	movwf	nanf@u^0,c
 10726  005DA8  0EFF               	movlw	255
 10727  005DAA  6E08               	movwf	(nanf@u+1)^0,c
 10728  005DAC  0EFF               	movlw	255
 10729  005DAE  6E09               	movwf	(nanf@u+2)^0,c
 10730  005DB0  0E7F               	movlw	127
 10731  005DB2  6E0A               	movwf	(nanf@u+3)^0,c
 10732  005DB4  C007  F003         	movff	nanf@u,?_nanf
 10733  005DB8  C008  F004         	movff	nanf@u+1,?_nanf+1
 10734  005DBC  C009  F005         	movff	nanf@u+2,?_nanf+2
 10735  005DC0  C00A  F006         	movff	nanf@u+3,?_nanf+3
 10736  005DC4  0012               	return		;funcret
 10737  005DC6                     __end_of_nanf:
 10738                           	callstack 0
 10739                           
 10740 ;; *************** function _isxdigit *****************
 10741 ;; Defined at:
 10742 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isxdigit.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;  c               2    8[COMRAM] int 
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;		None
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  2    8[COMRAM] int 
 10749 ;; Registers used:
 10750 ;;		wreg, status,2, status,0
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10756 ;;      Params:         2       0       0       0       0       0       0       0       0
 10757 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10758 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10759 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10760 ;;Total ram usage:        7 bytes
 10761 ;; Hardware stack levels used: 1
 10762 ;; Hardware stack levels required when called: 3
 10763 ;; This function calls:
 10764 ;;		_isdigit
 10765 ;; This function is called by:
 10766 ;;		_strtof
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           	psect	text35
 10771  00562E                     __ptext35:
 10772                           	callstack 0
 10773  00562E                     _isxdigit:
 10774                           	callstack 25
 10775  00562E  0E01               	movlw	1
 10776  005630  6E0F               	movwf	_isxdigit$1590^0,c
 10777  005632  0ED0               	movlw	208
 10778  005634  6E0B               	movwf	??_isxdigit^0,c
 10779  005636  0EFF               	movlw	255
 10780  005638  6E0C               	movwf	(??_isxdigit+1)^0,c
 10781  00563A  C009  F00D         	movff	isxdigit@c,??_isxdigit+2
 10782  00563E  C00A  F00E         	movff	isxdigit@c+1,??_isxdigit+3
 10783  005642  500B               	movf	??_isxdigit^0,w,c
 10784  005644  260D               	addwf	(??_isxdigit+2)^0,f,c
 10785  005646  500C               	movf	(??_isxdigit+1)^0,w,c
 10786  005648  220E               	addwfc	(??_isxdigit+3)^0,f,c
 10787  00564A  500E               	movf	(??_isxdigit+3)^0,w,c
 10788  00564C  E109               	bnz	u10330
 10789  00564E  0E0A               	movlw	10
 10790  005650  5C0D               	subwf	(??_isxdigit+2)^0,w,c
 10791  005652  A0D8               	btfss	status,0,c
 10792  005654  EF2E  F02B         	goto	u10331
 10793  005658  EF30  F02B         	goto	u10330
 10794  00565C                     u10331:
 10795  00565C  EF4B  F02B         	goto	l7809
 10796  005660                     u10330:
 10797  005660  0E9F               	movlw	159
 10798  005662  6E0B               	movwf	??_isxdigit^0,c
 10799  005664  0EFF               	movlw	255
 10800  005666  6E0C               	movwf	(??_isxdigit+1)^0,c
 10801  005668  0E20               	movlw	32
 10802  00566A  1009               	iorwf	isxdigit@c^0,w,c
 10803  00566C  6E0D               	movwf	(??_isxdigit+2)^0,c
 10804  00566E  0E00               	movlw	0
 10805  005670  100A               	iorwf	(isxdigit@c+1)^0,w,c
 10806  005672  6E0E               	movwf	(??_isxdigit+3)^0,c
 10807  005674  500B               	movf	??_isxdigit^0,w,c
 10808  005676  260D               	addwf	(??_isxdigit+2)^0,f,c
 10809  005678  500C               	movf	(??_isxdigit+1)^0,w,c
 10810  00567A  220E               	addwfc	(??_isxdigit+3)^0,f,c
 10811  00567C  500E               	movf	(??_isxdigit+3)^0,w,c
 10812  00567E  E109               	bnz	u10340
 10813  005680  0E06               	movlw	6
 10814  005682  5C0D               	subwf	(??_isxdigit+2)^0,w,c
 10815  005684  A0D8               	btfss	status,0,c
 10816  005686  EF47  F02B         	goto	u10341
 10817  00568A  EF49  F02B         	goto	u10340
 10818  00568E                     u10341:
 10819  00568E  EF4B  F02B         	goto	l7809
 10820  005692                     u10340:
 10821  005692  0E00               	movlw	0
 10822  005694  6E0F               	movwf	_isxdigit$1590^0,c
 10823  005696                     l7809:
 10824  005696  C00F  F009         	movff	_isxdigit$1590,?_isxdigit
 10825  00569A  6A0A               	clrf	(?_isxdigit+1)^0,c
 10826  00569C  0012               	return		;funcret
 10827  00569E                     __end_of_isxdigit:
 10828                           	callstack 0
 10829                           
 10830 ;; *************** function _isdigit *****************
 10831 ;; Defined at:
 10832 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  c               2    2[COMRAM] int 
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;		None
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  2    2[COMRAM] int 
 10839 ;; Registers used:
 10840 ;;		wreg, status,2, status,0
 10841 ;; Tracked objects:
 10842 ;;		On entry : 0/0
 10843 ;;		On exit  : 0/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10846 ;;      Params:         2       0       0       0       0       0       0       0       0
 10847 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10848 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10849 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10850 ;;Total ram usage:        6 bytes
 10851 ;; Hardware stack levels used: 1
 10852 ;; Hardware stack levels required when called: 2
 10853 ;; This function calls:
 10854 ;;		Nothing
 10855 ;; This function is called by:
 10856 ;;		_vfpfcnvrt
 10857 ;;		_atoi
 10858 ;;		_strtof
 10859 ;;		_isxdigit
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           
 10863                           	psect	text36
 10864  005C50                     __ptext36:
 10865                           	callstack 0
 10866  005C50                     _isdigit:
 10867                           	callstack 25
 10868  005C50  0ED0               	movlw	208
 10869  005C52  6E05               	movwf	??_isdigit^0,c
 10870  005C54  0EFF               	movlw	255
 10871  005C56  6E06               	movwf	(??_isdigit+1)^0,c
 10872  005C58  C003  F007         	movff	isdigit@c,??_isdigit+2
 10873  005C5C  C004  F008         	movff	isdigit@c+1,??_isdigit+3
 10874  005C60  5005               	movf	??_isdigit^0,w,c
 10875  005C62  2607               	addwf	(??_isdigit+2)^0,f,c
 10876  005C64  5006               	movf	(??_isdigit+1)^0,w,c
 10877  005C66  2208               	addwfc	(??_isdigit+3)^0,f,c
 10878  005C68  5008               	movf	(??_isdigit+3)^0,w,c
 10879  005C6A  E10A               	bnz	u9400
 10880  005C6C  0E0A               	movlw	10
 10881  005C6E  5C07               	subwf	(??_isdigit+2)^0,w,c
 10882  005C70  A0D8               	btfss	status,0,c
 10883  005C72  EF3D  F02E         	goto	u9401
 10884  005C76  EF40  F02E         	goto	u9400
 10885  005C7A                     u9401:
 10886  005C7A  0E01               	movlw	1
 10887  005C7C  EF41  F02E         	goto	u9410
 10888  005C80                     u9400:
 10889  005C80  0E00               	movlw	0
 10890  005C82                     u9410:
 10891  005C82  6E03               	movwf	?_isdigit^0,c
 10892  005C84  6A04               	clrf	(?_isdigit+1)^0,c
 10893  005C86  0012               	return		;funcret
 10894  005C88                     __end_of_isdigit:
 10895                           	callstack 0
 10896                           
 10897 ;; *************** function _isspace *****************
 10898 ;; Defined at:
 10899 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;  c               2    2[COMRAM] int 
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;		None
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  2    2[COMRAM] int 
 10906 ;; Registers used:
 10907 ;;		wreg, status,2, status,0
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10913 ;;      Params:         2       0       0       0       0       0       0       0       0
 10914 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10915 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10916 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10917 ;;Total ram usage:        7 bytes
 10918 ;; Hardware stack levels used: 1
 10919 ;; Hardware stack levels required when called: 2
 10920 ;; This function calls:
 10921 ;;		Nothing
 10922 ;; This function is called by:
 10923 ;;		_atoi
 10924 ;;		_strtof
 10925 ;; This function uses a non-reentrant model
 10926 ;;
 10927                           
 10928                           	psect	text37
 10929  0059AC                     __ptext37:
 10930                           	callstack 0
 10931  0059AC                     _isspace:
 10932                           	callstack 24
 10933  0059AC  0E01               	movlw	1
 10934  0059AE  6E09               	movwf	_isspace$1457^0,c
 10935  0059B0  0E20               	movlw	32
 10936  0059B2  1803               	xorwf	isspace@c^0,w,c
 10937  0059B4  1004               	iorwf	(isspace@c+1)^0,w,c
 10938  0059B6  B4D8               	btfsc	status,2,c
 10939  0059B8  EFE0  F02C         	goto	u9421
 10940  0059BC  EFE2  F02C         	goto	u9420
 10941  0059C0                     u9421:
 10942  0059C0  EFFB  F02C         	goto	l7217
 10943  0059C4                     u9420:
 10944  0059C4  0EF7               	movlw	247
 10945  0059C6  6E05               	movwf	??_isspace^0,c
 10946  0059C8  0EFF               	movlw	255
 10947  0059CA  6E06               	movwf	(??_isspace+1)^0,c
 10948  0059CC  C003  F007         	movff	isspace@c,??_isspace+2
 10949  0059D0  C004  F008         	movff	isspace@c+1,??_isspace+3
 10950  0059D4  5005               	movf	??_isspace^0,w,c
 10951  0059D6  2607               	addwf	(??_isspace+2)^0,f,c
 10952  0059D8  5006               	movf	(??_isspace+1)^0,w,c
 10953  0059DA  2208               	addwfc	(??_isspace+3)^0,f,c
 10954  0059DC  5008               	movf	(??_isspace+3)^0,w,c
 10955  0059DE  E109               	bnz	u9430
 10956  0059E0  0E05               	movlw	5
 10957  0059E2  5C07               	subwf	(??_isspace+2)^0,w,c
 10958  0059E4  A0D8               	btfss	status,0,c
 10959  0059E6  EFF7  F02C         	goto	u9431
 10960  0059EA  EFF9  F02C         	goto	u9430
 10961  0059EE                     u9431:
 10962  0059EE  EFFB  F02C         	goto	l7217
 10963  0059F2                     u9430:
 10964  0059F2  0E00               	movlw	0
 10965  0059F4  6E09               	movwf	_isspace$1457^0,c
 10966  0059F6                     l7217:
 10967  0059F6  C009  F003         	movff	_isspace$1457,?_isspace
 10968  0059FA  6A04               	clrf	(?_isspace+1)^0,c
 10969  0059FC  0012               	return		;funcret
 10970  0059FE                     __end_of_isspace:
 10971                           	callstack 0
 10972                           
 10973 ;; *************** function ___wmul *****************
 10974 ;; Defined at:
 10975 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  multiplier      2    2[COMRAM] unsigned int 
 10978 ;;  multiplicand    2    4[COMRAM] unsigned int 
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;  product         2    6[COMRAM] unsigned int 
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  2    2[COMRAM] unsigned int 
 10983 ;; Registers used:
 10984 ;;		wreg, status,2, status,0, prodl, prodh
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/0
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10990 ;;      Params:         4       0       0       0       0       0       0       0       0
 10991 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10992 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10993 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10994 ;;Total ram usage:        6 bytes
 10995 ;; Hardware stack levels used: 1
 10996 ;; Hardware stack levels required when called: 2
 10997 ;; This function calls:
 10998 ;;		Nothing
 10999 ;; This function is called by:
 11000 ;;		_atoi
 11001 ;;		_strtof
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           
 11005                           	psect	text38
 11006  005D7E                     __ptext38:
 11007                           	callstack 0
 11008  005D7E                     ___wmul:
 11009                           	callstack 24
 11010  005D7E  5003               	movf	___wmul@multiplier^0,w,c
 11011  005D80  0205               	mulwf	___wmul@multiplicand^0,c
 11012  005D82  CFF3 F007          	movff	prodl,___wmul@product
 11013  005D86  CFF4 F008          	movff	prodh,___wmul@product+1
 11014  005D8A  5003               	movf	___wmul@multiplier^0,w,c
 11015  005D8C  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 11016  005D8E  50F3               	movf	243,w,c
 11017  005D90  2608               	addwf	(___wmul@product+1)^0,f,c
 11018  005D92  5004               	movf	(___wmul@multiplier+1)^0,w,c
 11019  005D94  0205               	mulwf	___wmul@multiplicand^0,c
 11020  005D96  50F3               	movf	243,w,c
 11021  005D98  2608               	addwf	(___wmul@product+1)^0,f,c
 11022  005D9A  C007  F003         	movff	___wmul@product,?___wmul
 11023  005D9E  C008  F004         	movff	___wmul@product+1,?___wmul+1
 11024  005DA2  0012               	return		;funcret
 11025  005DA4                     __end_of___wmul:
 11026                           	callstack 0
 11027                           
 11028 ;; *************** function ___lmul *****************
 11029 ;; Defined at:
 11030 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;  multiplier      4    2[COMRAM] unsigned long 
 11033 ;;  multiplicand    4    6[COMRAM] unsigned long 
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;  product         4   10[COMRAM] unsigned long 
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  4    2[COMRAM] unsigned long 
 11038 ;; Registers used:
 11039 ;;		wreg, status,2, status,0
 11040 ;; Tracked objects:
 11041 ;;		On entry : 0/0
 11042 ;;		On exit  : 0/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11045 ;;      Params:         8       0       0       0       0       0       0       0       0
 11046 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11047 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11048 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11049 ;;Total ram usage:       12 bytes
 11050 ;; Hardware stack levels used: 1
 11051 ;; Hardware stack levels required when called: 2
 11052 ;; This function calls:
 11053 ;;		Nothing
 11054 ;; This function is called by:
 11055 ;;		_strtof
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           	psect	text39
 11060  005708                     __ptext39:
 11061                           	callstack 0
 11062  005708                     ___lmul:
 11063                           	callstack 26
 11064  005708  0E00               	movlw	0
 11065  00570A  6E0B               	movwf	___lmul@product^0,c
 11066  00570C  0E00               	movlw	0
 11067  00570E  6E0C               	movwf	(___lmul@product+1)^0,c
 11068  005710  0E00               	movlw	0
 11069  005712  6E0D               	movwf	(___lmul@product+2)^0,c
 11070  005714  0E00               	movlw	0
 11071  005716  6E0E               	movwf	(___lmul@product+3)^0,c
 11072  005718                     l5231:
 11073  005718  A003               	btfss	___lmul@multiplier^0,0,c
 11074  00571A  EF91  F02B         	goto	u6261
 11075  00571E  EF93  F02B         	goto	u6260
 11076  005722                     u6261:
 11077  005722  EF9B  F02B         	goto	l5235
 11078  005726                     u6260:
 11079  005726  5007               	movf	___lmul@multiplicand^0,w,c
 11080  005728  260B               	addwf	___lmul@product^0,f,c
 11081  00572A  5008               	movf	(___lmul@multiplicand+1)^0,w,c
 11082  00572C  220C               	addwfc	(___lmul@product+1)^0,f,c
 11083  00572E  5009               	movf	(___lmul@multiplicand+2)^0,w,c
 11084  005730  220D               	addwfc	(___lmul@product+2)^0,f,c
 11085  005732  500A               	movf	(___lmul@multiplicand+3)^0,w,c
 11086  005734  220E               	addwfc	(___lmul@product+3)^0,f,c
 11087  005736                     l5235:
 11088  005736  90D8               	bcf	status,0,c
 11089  005738  3607               	rlcf	___lmul@multiplicand^0,f,c
 11090  00573A  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
 11091  00573C  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
 11092  00573E  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
 11093  005740  90D8               	bcf	status,0,c
 11094  005742  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
 11095  005744  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
 11096  005746  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
 11097  005748  3203               	rrcf	___lmul@multiplier^0,f,c
 11098  00574A  5003               	movf	___lmul@multiplier^0,w,c
 11099  00574C  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
 11100  00574E  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
 11101  005750  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
 11102  005752  A4D8               	btfss	status,2,c
 11103  005754  EFAE  F02B         	goto	u6271
 11104  005758  EFB0  F02B         	goto	u6270
 11105  00575C                     u6271:
 11106  00575C  EF8C  F02B         	goto	l5231
 11107  005760                     u6270:
 11108  005760  C00B  F003         	movff	___lmul@product,?___lmul
 11109  005764  C00C  F004         	movff	___lmul@product+1,?___lmul+1
 11110  005768  C00D  F005         	movff	___lmul@product+2,?___lmul+2
 11111  00576C  C00E  F006         	movff	___lmul@product+3,?___lmul+3
 11112  005770  0012               	return		;funcret
 11113  005772                     __end_of___lmul:
 11114                           	callstack 0
 11115                           
 11116 ;; *************** function ___flneg *****************
 11117 ;; Defined at:
 11118 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;  f1              4    2[COMRAM] unsigned long 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;		None
 11123 ;; Return value:  Size  Location     Type
 11124 ;;                  4    2[COMRAM] unsigned long 
 11125 ;; Registers used:
 11126 ;;		wreg, status,2, status,0
 11127 ;; Tracked objects:
 11128 ;;		On entry : 0/0
 11129 ;;		On exit  : 0/0
 11130 ;;		Unchanged: 0/0
 11131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11132 ;;      Params:         4       0       0       0       0       0       0       0       0
 11133 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11134 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11135 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11136 ;;Total ram usage:        4 bytes
 11137 ;; Hardware stack levels used: 1
 11138 ;; Hardware stack levels required when called: 2
 11139 ;; This function calls:
 11140 ;;		Nothing
 11141 ;; This function is called by:
 11142 ;;		_efgtoa
 11143 ;;		_strtof
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text40
 11148  005C88                     __ptext40:
 11149                           	callstack 0
 11150  005C88                     ___flneg:
 11151                           	callstack 24
 11152  005C88  5003               	movf	___flneg@f1^0,w,c
 11153  005C8A  1004               	iorwf	(___flneg@f1+1)^0,w,c
 11154  005C8C  1005               	iorwf	(___flneg@f1+2)^0,w,c
 11155  005C8E  1006               	iorwf	(___flneg@f1+3)^0,w,c
 11156  005C90  B4D8               	btfsc	status,2,c
 11157  005C92  EF4D  F02E         	goto	u9071
 11158  005C96  EF4F  F02E         	goto	u9070
 11159  005C9A                     u9071:
 11160  005C9A  EF57  F02E         	goto	l7067
 11161  005C9E                     u9070:
 11162  005C9E  0E00               	movlw	0
 11163  005CA0  1A03               	xorwf	___flneg@f1^0,f,c
 11164  005CA2  0E00               	movlw	0
 11165  005CA4  1A04               	xorwf	(___flneg@f1+1)^0,f,c
 11166  005CA6  0E00               	movlw	0
 11167  005CA8  1A05               	xorwf	(___flneg@f1+2)^0,f,c
 11168  005CAA  0E80               	movlw	128
 11169  005CAC  1A06               	xorwf	(___flneg@f1+3)^0,f,c
 11170  005CAE                     l7067:
 11171  005CAE  C003  F003         	movff	___flneg@f1,?___flneg
 11172  005CB2  C004  F004         	movff	___flneg@f1+1,?___flneg+1
 11173  005CB6  C005  F005         	movff	___flneg@f1+2,?___flneg+2
 11174  005CBA  C006  F006         	movff	___flneg@f1+3,?___flneg+3
 11175  005CBE  0012               	return		;funcret
 11176  005CC0                     __end_of___flneg:
 11177                           	callstack 0
 11178                           
 11179 ;; *************** function ___flge *****************
 11180 ;; Defined at:
 11181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;  ff1             4   69[COMRAM] unsigned long 
 11184 ;;  ff2             4   73[COMRAM] unsigned long 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;		None
 11187 ;; Return value:  Size  Location     Type
 11188 ;;		None               void
 11189 ;; Registers used:
 11190 ;;		wreg, status,2, status,0
 11191 ;; Tracked objects:
 11192 ;;		On entry : 0/0
 11193 ;;		On exit  : 0/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11196 ;;      Params:         8       0       0       0       0       0       0       0       0
 11197 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11198 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11199 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11200 ;;Total ram usage:       12 bytes
 11201 ;; Hardware stack levels used: 1
 11202 ;; Hardware stack levels required when called: 2
 11203 ;; This function calls:
 11204 ;;		Nothing
 11205 ;; This function is called by:
 11206 ;;		_main
 11207 ;;		_efgtoa
 11208 ;;		_strtof
 11209 ;; This function uses a non-reentrant model
 11210 ;;
 11211                           
 11212                           	psect	text41
 11213  004C0E                     __ptext41:
 11214                           	callstack 0
 11215  004C0E                     ___flge:
 11216                           	callstack 24
 11217  004C0E  0E00               	movlw	0
 11218  004C10  1446               	andwf	___flge@ff1^0,w,c
 11219  004C12  6E4E               	movwf	??___flge^0,c
 11220  004C14  0E00               	movlw	0
 11221  004C16  1447               	andwf	(___flge@ff1+1)^0,w,c
 11222  004C18  6E4F               	movwf	(??___flge+1)^0,c
 11223  004C1A  0E80               	movlw	128
 11224  004C1C  1448               	andwf	(___flge@ff1+2)^0,w,c
 11225  004C1E  6E50               	movwf	(??___flge+2)^0,c
 11226  004C20  0E7F               	movlw	127
 11227  004C22  1449               	andwf	(___flge@ff1+3)^0,w,c
 11228  004C24  6E51               	movwf	(??___flge+3)^0,c
 11229  004C26  504E               	movf	??___flge^0,w,c
 11230  004C28  104F               	iorwf	(??___flge+1)^0,w,c
 11231  004C2A  1050               	iorwf	(??___flge+2)^0,w,c
 11232  004C2C  1051               	iorwf	(??___flge+3)^0,w,c
 11233  004C2E  A4D8               	btfss	status,2,c
 11234  004C30  EF1C  F026         	goto	u9021
 11235  004C34  EF1E  F026         	goto	u9020
 11236  004C38                     u9021:
 11237  004C38  EF26  F026         	goto	l7045
 11238  004C3C                     u9020:
 11239  004C3C  0E00               	movlw	0
 11240  004C3E  6E46               	movwf	___flge@ff1^0,c
 11241  004C40  0E00               	movlw	0
 11242  004C42  6E47               	movwf	(___flge@ff1+1)^0,c
 11243  004C44  0E00               	movlw	0
 11244  004C46  6E48               	movwf	(___flge@ff1+2)^0,c
 11245  004C48  0E00               	movlw	0
 11246  004C4A  6E49               	movwf	(___flge@ff1+3)^0,c
 11247  004C4C                     l7045:
 11248  004C4C  0E00               	movlw	0
 11249  004C4E  144A               	andwf	___flge@ff2^0,w,c
 11250  004C50  6E4E               	movwf	??___flge^0,c
 11251  004C52  0E00               	movlw	0
 11252  004C54  144B               	andwf	(___flge@ff2+1)^0,w,c
 11253  004C56  6E4F               	movwf	(??___flge+1)^0,c
 11254  004C58  0E80               	movlw	128
 11255  004C5A  144C               	andwf	(___flge@ff2+2)^0,w,c
 11256  004C5C  6E50               	movwf	(??___flge+2)^0,c
 11257  004C5E  0E7F               	movlw	127
 11258  004C60  144D               	andwf	(___flge@ff2+3)^0,w,c
 11259  004C62  6E51               	movwf	(??___flge+3)^0,c
 11260  004C64  504E               	movf	??___flge^0,w,c
 11261  004C66  104F               	iorwf	(??___flge+1)^0,w,c
 11262  004C68  1050               	iorwf	(??___flge+2)^0,w,c
 11263  004C6A  1051               	iorwf	(??___flge+3)^0,w,c
 11264  004C6C  A4D8               	btfss	status,2,c
 11265  004C6E  EF3B  F026         	goto	u9031
 11266  004C72  EF3D  F026         	goto	u9030
 11267  004C76                     u9031:
 11268  004C76  EF45  F026         	goto	l7049
 11269  004C7A                     u9030:
 11270  004C7A  0E00               	movlw	0
 11271  004C7C  6E4A               	movwf	___flge@ff2^0,c
 11272  004C7E  0E00               	movlw	0
 11273  004C80  6E4B               	movwf	(___flge@ff2+1)^0,c
 11274  004C82  0E00               	movlw	0
 11275  004C84  6E4C               	movwf	(___flge@ff2+2)^0,c
 11276  004C86  0E00               	movlw	0
 11277  004C88  6E4D               	movwf	(___flge@ff2+3)^0,c
 11278  004C8A                     l7049:
 11279  004C8A  AE49               	btfss	(___flge@ff1+3)^0,7,c
 11280  004C8C  EF4A  F026         	goto	u9041
 11281  004C90  EF4C  F026         	goto	u9040
 11282  004C94                     u9041:
 11283  004C94  EF55  F026         	goto	l7053
 11284  004C98                     u9040:
 11285  004C98  6C46               	negf	___flge@ff1^0,c
 11286  004C9A  1E47               	comf	(___flge@ff1+1)^0,f,c
 11287  004C9C  B0D8               	btfsc	status,0,c
 11288  004C9E  2A47               	incf	(___flge@ff1+1)^0,f,c
 11289  004CA0  1E48               	comf	(___flge@ff1+2)^0,f,c
 11290  004CA2  B0D8               	btfsc	status,0,c
 11291  004CA4  2A48               	incf	(___flge@ff1+2)^0,f,c
 11292  004CA6  0E80               	movlw	128
 11293  004CA8  5649               	subfwb	(___flge@ff1+3)^0,f,c
 11294  004CAA                     l7053:
 11295  004CAA  AE4D               	btfss	(___flge@ff2+3)^0,7,c
 11296  004CAC  EF5A  F026         	goto	u9051
 11297  004CB0  EF5C  F026         	goto	u9050
 11298  004CB4                     u9051:
 11299  004CB4  EF65  F026         	goto	l485
 11300  004CB8                     u9050:
 11301  004CB8  6C4A               	negf	___flge@ff2^0,c
 11302  004CBA  1E4B               	comf	(___flge@ff2+1)^0,f,c
 11303  004CBC  B0D8               	btfsc	status,0,c
 11304  004CBE  2A4B               	incf	(___flge@ff2+1)^0,f,c
 11305  004CC0  1E4C               	comf	(___flge@ff2+2)^0,f,c
 11306  004CC2  B0D8               	btfsc	status,0,c
 11307  004CC4  2A4C               	incf	(___flge@ff2+2)^0,f,c
 11308  004CC6  0E80               	movlw	128
 11309  004CC8  564D               	subfwb	(___flge@ff2+3)^0,f,c
 11310  004CCA                     l485:
 11311  004CCA  0E00               	movlw	0
 11312  004CCC  1A46               	xorwf	___flge@ff1^0,f,c
 11313  004CCE  0E00               	movlw	0
 11314  004CD0  1A47               	xorwf	(___flge@ff1+1)^0,f,c
 11315  004CD2  0E00               	movlw	0
 11316  004CD4  1A48               	xorwf	(___flge@ff1+2)^0,f,c
 11317  004CD6  0E80               	movlw	128
 11318  004CD8  1A49               	xorwf	(___flge@ff1+3)^0,f,c
 11319  004CDA  0E00               	movlw	0
 11320  004CDC  1A4A               	xorwf	___flge@ff2^0,f,c
 11321  004CDE  0E00               	movlw	0
 11322  004CE0  1A4B               	xorwf	(___flge@ff2+1)^0,f,c
 11323  004CE2  0E00               	movlw	0
 11324  004CE4  1A4C               	xorwf	(___flge@ff2+2)^0,f,c
 11325  004CE6  0E80               	movlw	128
 11326  004CE8  1A4D               	xorwf	(___flge@ff2+3)^0,f,c
 11327  004CEA  504A               	movf	___flge@ff2^0,w,c
 11328  004CEC  5C46               	subwf	___flge@ff1^0,w,c
 11329  004CEE  504B               	movf	(___flge@ff2+1)^0,w,c
 11330  004CF0  5847               	subwfb	(___flge@ff1+1)^0,w,c
 11331  004CF2  504C               	movf	(___flge@ff2+2)^0,w,c
 11332  004CF4  5848               	subwfb	(___flge@ff1+2)^0,w,c
 11333  004CF6  504D               	movf	(___flge@ff2+3)^0,w,c
 11334  004CF8  5849               	subwfb	(___flge@ff1+3)^0,w,c
 11335  004CFA  B0D8               	btfsc	status,0,c
 11336  004CFC  EF82  F026         	goto	u9061
 11337  004D00  EF84  F026         	goto	u9060
 11338  004D04                     u9061:
 11339  004D04  EF87  F026         	goto	l7059
 11340  004D08                     u9060:
 11341  004D08  90D8               	bcf	status,0,c
 11342  004D0A  EF88  F026         	goto	l490
 11343  004D0E                     l7059:
 11344  004D0E  80D8               	bsf	status,0,c
 11345  004D10                     l490:
 11346  004D10  0012               	return		;funcret
 11347  004D12                     __end_of___flge:
 11348                           	callstack 0
 11349                           
 11350 ;; *************** function ___fleq *****************
 11351 ;; Defined at:
 11352 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;  ff1             4    2[COMRAM] unsigned long 
 11355 ;;  ff2             4    6[COMRAM] unsigned long 
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;		None
 11358 ;; Return value:  Size  Location     Type
 11359 ;;		None               void
 11360 ;; Registers used:
 11361 ;;		wreg, status,2, status,0
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11367 ;;      Params:         8       0       0       0       0       0       0       0       0
 11368 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11369 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11370 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11371 ;;Total ram usage:       12 bytes
 11372 ;; Hardware stack levels used: 1
 11373 ;; Hardware stack levels required when called: 2
 11374 ;; This function calls:
 11375 ;;		Nothing
 11376 ;; This function is called by:
 11377 ;;		_efgtoa
 11378 ;;		_strtof
 11379 ;; This function uses a non-reentrant model
 11380 ;;
 11381                           
 11382                           	psect	text42
 11383  00546C                     __ptext42:
 11384                           	callstack 0
 11385  00546C                     ___fleq:
 11386                           	callstack 24
 11387  00546C  0E00               	movlw	0
 11388  00546E  1403               	andwf	___fleq@ff1^0,w,c
 11389  005470  6E0B               	movwf	??___fleq^0,c
 11390  005472  0E00               	movlw	0
 11391  005474  1404               	andwf	(___fleq@ff1+1)^0,w,c
 11392  005476  6E0C               	movwf	(??___fleq+1)^0,c
 11393  005478  0E80               	movlw	128
 11394  00547A  1405               	andwf	(___fleq@ff1+2)^0,w,c
 11395  00547C  6E0D               	movwf	(??___fleq+2)^0,c
 11396  00547E  0E7F               	movlw	127
 11397  005480  1406               	andwf	(___fleq@ff1+3)^0,w,c
 11398  005482  6E0E               	movwf	(??___fleq+3)^0,c
 11399  005484  500B               	movf	??___fleq^0,w,c
 11400  005486  100C               	iorwf	(??___fleq+1)^0,w,c
 11401  005488  100D               	iorwf	(??___fleq+2)^0,w,c
 11402  00548A  100E               	iorwf	(??___fleq+3)^0,w,c
 11403  00548C  A4D8               	btfss	status,2,c
 11404  00548E  EF4B  F02A         	goto	u8991
 11405  005492  EF4D  F02A         	goto	u8990
 11406  005496                     u8991:
 11407  005496  EF55  F02A         	goto	l7029
 11408  00549A                     u8990:
 11409  00549A  0E00               	movlw	0
 11410  00549C  6E03               	movwf	___fleq@ff1^0,c
 11411  00549E  0E00               	movlw	0
 11412  0054A0  6E04               	movwf	(___fleq@ff1+1)^0,c
 11413  0054A2  0E00               	movlw	0
 11414  0054A4  6E05               	movwf	(___fleq@ff1+2)^0,c
 11415  0054A6  0E00               	movlw	0
 11416  0054A8  6E06               	movwf	(___fleq@ff1+3)^0,c
 11417  0054AA                     l7029:
 11418  0054AA  0E00               	movlw	0
 11419  0054AC  1407               	andwf	___fleq@ff2^0,w,c
 11420  0054AE  6E0B               	movwf	??___fleq^0,c
 11421  0054B0  0E00               	movlw	0
 11422  0054B2  1408               	andwf	(___fleq@ff2+1)^0,w,c
 11423  0054B4  6E0C               	movwf	(??___fleq+1)^0,c
 11424  0054B6  0E80               	movlw	128
 11425  0054B8  1409               	andwf	(___fleq@ff2+2)^0,w,c
 11426  0054BA  6E0D               	movwf	(??___fleq+2)^0,c
 11427  0054BC  0E7F               	movlw	127
 11428  0054BE  140A               	andwf	(___fleq@ff2+3)^0,w,c
 11429  0054C0  6E0E               	movwf	(??___fleq+3)^0,c
 11430  0054C2  500B               	movf	??___fleq^0,w,c
 11431  0054C4  100C               	iorwf	(??___fleq+1)^0,w,c
 11432  0054C6  100D               	iorwf	(??___fleq+2)^0,w,c
 11433  0054C8  100E               	iorwf	(??___fleq+3)^0,w,c
 11434  0054CA  A4D8               	btfss	status,2,c
 11435  0054CC  EF6A  F02A         	goto	u9001
 11436  0054D0  EF6C  F02A         	goto	u9000
 11437  0054D4                     u9001:
 11438  0054D4  EF74  F02A         	goto	l7033
 11439  0054D8                     u9000:
 11440  0054D8  0E00               	movlw	0
 11441  0054DA  6E07               	movwf	___fleq@ff2^0,c
 11442  0054DC  0E00               	movlw	0
 11443  0054DE  6E08               	movwf	(___fleq@ff2+1)^0,c
 11444  0054E0  0E00               	movlw	0
 11445  0054E2  6E09               	movwf	(___fleq@ff2+2)^0,c
 11446  0054E4  0E00               	movlw	0
 11447  0054E6  6E0A               	movwf	(___fleq@ff2+3)^0,c
 11448  0054E8                     l7033:
 11449  0054E8  5007               	movf	___fleq@ff2^0,w,c
 11450  0054EA  1803               	xorwf	___fleq@ff1^0,w,c
 11451  0054EC  E10F               	bnz	u9010
 11452  0054EE  5008               	movf	(___fleq@ff2+1)^0,w,c
 11453  0054F0  1804               	xorwf	(___fleq@ff1+1)^0,w,c
 11454  0054F2  E10C               	bnz	u9010
 11455  0054F4  5009               	movf	(___fleq@ff2+2)^0,w,c
 11456  0054F6  1805               	xorwf	(___fleq@ff1+2)^0,w,c
 11457  0054F8  E109               	bnz	u9010
 11458  0054FA  500A               	movf	(___fleq@ff2+3)^0,w,c
 11459  0054FC  1806               	xorwf	(___fleq@ff1+3)^0,w,c
 11460  0054FE  B4D8               	btfsc	status,2,c
 11461  005500  EF84  F02A         	goto	u9011
 11462  005504  EF86  F02A         	goto	u9010
 11463  005508                     u9011:
 11464  005508  EF89  F02A         	goto	l7037
 11465  00550C                     u9010:
 11466  00550C  90D8               	bcf	status,0,c
 11467  00550E  EF8A  F02A         	goto	l479
 11468  005512                     l7037:
 11469  005512  80D8               	bsf	status,0,c
 11470  005514                     l479:
 11471  005514  0012               	return		;funcret
 11472  005516                     __end_of___fleq:
 11473                           	callstack 0
 11474                           
 11475 ;; *************** function _UART_Write_Text *****************
 11476 ;; Defined at:
 11477 ;;		line 46 in file "UART_LIB.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;  text            2    3[COMRAM] PTR unsigned char 
 11480 ;;		 -> strUART(50), 
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;		None
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  1    wreg      void 
 11485 ;; Registers used:
 11486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11492 ;;      Params:         2       0       0       0       0       0       0       0       0
 11493 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11494 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11495 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11496 ;;Total ram usage:        2 bytes
 11497 ;; Hardware stack levels used: 1
 11498 ;; Hardware stack levels required when called: 3
 11499 ;; This function calls:
 11500 ;;		_UART_Write_Chr
 11501 ;; This function is called by:
 11502 ;;		_main
 11503 ;; This function uses a non-reentrant model
 11504 ;;
 11505                           
 11506                           	psect	text43
 11507  005D28                     __ptext43:
 11508                           	callstack 0
 11509  005D28                     _UART_Write_Text:
 11510                           	callstack 27
 11511  005D28                     
 11512                           ;UART_LIB.c: 47:     while(*text){
 11513  005D28  EF9F  F02E         	goto	l6117
 11514  005D2C                     l6113:
 11515                           
 11516                           ;UART_LIB.c: 48:         UART_Write_Chr(*text);
 11517  005D2C  C004  FFD9         	movff	UART_Write_Text@text,fsr2l
 11518  005D30  C005  FFDA         	movff	UART_Write_Text@text+1,fsr2h
 11519  005D34  50DF               	movf	indf2,w,c
 11520  005D36  ECE3  F02E         	call	_UART_Write_Chr
 11521  005D3A                     
 11522                           ;UART_LIB.c: 49:         text++;
 11523  005D3A  4A04               	infsnz	UART_Write_Text@text^0,f,c
 11524  005D3C  2A05               	incf	(UART_Write_Text@text+1)^0,f,c
 11525  005D3E                     l6117:
 11526                           
 11527                           ;UART_LIB.c: 47:     while(*text){
 11528  005D3E  C004  FFD9         	movff	UART_Write_Text@text,fsr2l
 11529  005D42  C005  FFDA         	movff	UART_Write_Text@text+1,fsr2h
 11530  005D46  50DF               	movf	indf2,w,c
 11531  005D48  A4D8               	btfss	status,2,c
 11532  005D4A  EFA9  F02E         	goto	u7761
 11533  005D4E  EFAB  F02E         	goto	u7760
 11534  005D52                     u7761:
 11535  005D52  EF96  F02E         	goto	l6113
 11536  005D56                     u7760:
 11537  005D56  0012               	return		;funcret
 11538  005D58                     __end_of_UART_Write_Text:
 11539                           	callstack 0
 11540                           
 11541 ;; *************** function _UART_Write_Chr *****************
 11542 ;; Defined at:
 11543 ;;		line 42 in file "UART_LIB.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;  letter          1    wreg     unsigned char 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  letter          1    2[COMRAM] unsigned char 
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0
 11558 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11560 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11561 ;;Total ram usage:        1 bytes
 11562 ;; Hardware stack levels used: 1
 11563 ;; Hardware stack levels required when called: 2
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_UART_Write_Text
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           	psect	text44
 11572  005DC6                     __ptext44:
 11573                           	callstack 0
 11574  005DC6                     _UART_Write_Chr:
 11575                           	callstack 27
 11576                           
 11577                           ;incstack = 0
 11578                           ;UART_Write_Chr@letter stored from wreg
 11579  005DC6  6E03               	movwf	UART_Write_Chr@letter^0,c
 11580  005DC8                     l158:
 11581  005DC8  A2AC               	btfss	172,1,c	;volatile
 11582  005DCA  EFE9  F02E         	goto	u6601
 11583  005DCE  EFEB  F02E         	goto	u6600
 11584  005DD2                     u6601:
 11585  005DD2  EFE4  F02E         	goto	l158
 11586  005DD6                     u6600:
 11587  005DD6                     
 11588                           ;UART_LIB.c: 44:     TXREG = letter;
 11589  005DD6  C003  FFAD         	movff	UART_Write_Chr@letter,4013	;volatile
 11590  005DDA  0012               	return		;funcret
 11591  005DDC                     __end_of_UART_Write_Chr:
 11592                           	callstack 0
 11593                           
 11594 ;; *************** function _UART_Init *****************
 11595 ;; Defined at:
 11596 ;;		line 5 in file "UART_LIB.c"
 11597 ;; Parameters:    Size  Location     Type
 11598 ;;  config          8   15[COMRAM] struct .
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;  spbrg_val       4   27[COMRAM] unsigned long 
 11601 ;; Return value:  Size  Location     Type
 11602 ;;                  1    wreg      void 
 11603 ;; Registers used:
 11604 ;;		wreg, status,2, status,0, cstack
 11605 ;; Tracked objects:
 11606 ;;		On entry : 0/0
 11607 ;;		On exit  : 0/0
 11608 ;;		Unchanged: 0/0
 11609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11610 ;;      Params:         8       0       0       0       0       0       0       0       0
 11611 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11612 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11613 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11614 ;;Total ram usage:       16 bytes
 11615 ;; Hardware stack levels used: 1
 11616 ;; Hardware stack levels required when called: 3
 11617 ;; This function calls:
 11618 ;;		___lldiv
 11619 ;; This function is called by:
 11620 ;;		_main
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           	psect	text45
 11625  004E10                     __ptext45:
 11626                           	callstack 0
 11627  004E10                     _UART_Init:
 11628                           	callstack 27
 11629  004E10                     
 11630                           ;UART_LIB.c: 6:     TRISCbits.TRISC6 = 0;
 11631  004E10  9C94               	bcf	148,6,c	;volatile
 11632                           
 11633                           ;UART_LIB.c: 7:     TRISCbits.TRISC7 = 1;
 11634  004E12  8E94               	bsf	148,7,c	;volatile
 11635  004E14                     
 11636                           ;UART_LIB.c: 9:     unsigned long spbrg_val = (20000000UL / (16 * config.baud_rate)) - 1
      +                          ;
 11637  004E14  0E00               	movlw	0
 11638  004E16  6E03               	movwf	___lldiv@dividend^0,c
 11639  004E18  0E2D               	movlw	45
 11640  004E1A  6E04               	movwf	(___lldiv@dividend+1)^0,c
 11641  004E1C  0E31               	movlw	49
 11642  004E1E  6E05               	movwf	(___lldiv@dividend+2)^0,c
 11643  004E20  0E01               	movlw	1
 11644  004E22  6E06               	movwf	(___lldiv@dividend+3)^0,c
 11645  004E24  C010  F018         	movff	UART_Init@config,??_UART_Init
 11646  004E28  C011  F019         	movff	UART_Init@config+1,??_UART_Init+1
 11647  004E2C  C012  F01A         	movff	UART_Init@config+2,??_UART_Init+2
 11648  004E30  C013  F01B         	movff	UART_Init@config+3,??_UART_Init+3
 11649  004E34  0E04               	movlw	4
 11650  004E36                     u7605:
 11651  004E36  90D8               	bcf	status,0,c
 11652  004E38  3618               	rlcf	??_UART_Init^0,f,c
 11653  004E3A  3619               	rlcf	(??_UART_Init+1)^0,f,c
 11654  004E3C  361A               	rlcf	(??_UART_Init+2)^0,f,c
 11655  004E3E  361B               	rlcf	(??_UART_Init+3)^0,f,c
 11656  004E40  2EE8               	decfsz	wreg,f,c
 11657  004E42  EF1B  F027         	goto	u7605
 11658  004E46  C018  F007         	movff	??_UART_Init,___lldiv@divisor
 11659  004E4A  C019  F008         	movff	??_UART_Init+1,___lldiv@divisor+1
 11660  004E4E  C01A  F009         	movff	??_UART_Init+2,___lldiv@divisor+2
 11661  004E52  C01B  F00A         	movff	??_UART_Init+3,___lldiv@divisor+3
 11662  004E56  EC8B  F02A         	call	___lldiv	;wreg free
 11663  004E5A  0EFF               	movlw	255
 11664  004E5C  2403               	addwf	?___lldiv^0,w,c
 11665  004E5E  6E1C               	movwf	UART_Init@spbrg_val^0,c
 11666  004E60  0EFF               	movlw	255
 11667  004E62  2004               	addwfc	(?___lldiv+1)^0,w,c
 11668  004E64  6E1D               	movwf	(UART_Init@spbrg_val+1)^0,c
 11669  004E66  0EFF               	movlw	255
 11670  004E68  2005               	addwfc	(?___lldiv+2)^0,w,c
 11671  004E6A  6E1E               	movwf	(UART_Init@spbrg_val+2)^0,c
 11672  004E6C  0EFF               	movlw	255
 11673  004E6E  2006               	addwfc	(?___lldiv+3)^0,w,c
 11674  004E70  6E1F               	movwf	(UART_Init@spbrg_val+3)^0,c
 11675  004E72                     
 11676                           ;UART_LIB.c: 10:     SPBRG = (unsigned char)(spbrg_val);
 11677  004E72  C01C  FFAF         	movff	UART_Init@spbrg_val,4015	;volatile
 11678  004E76                     
 11679                           ;UART_LIB.c: 13:     TXSTA = 0x24;
 11680  004E76  0E24               	movlw	36
 11681  004E78  6EAC               	movwf	172,c	;volatile
 11682  004E7A                     
 11683                           ;UART_LIB.c: 14:     RCSTA = 0x90;
 11684  004E7A  0E90               	movlw	144
 11685  004E7C  6EAB               	movwf	171,c	;volatile
 11686  004E7E                     
 11687                           ;UART_LIB.c: 17:     TX9 = config.data_bits == 9 ? 1 : 0;
 11688  004E7E  0E09               	movlw	9
 11689  004E80  1814               	xorwf	(UART_Init@config+4)^0,w,c
 11690  004E82  B4D8               	btfsc	status,2,c
 11691  004E84  EF46  F027         	goto	u7611
 11692  004E88  EF49  F027         	goto	u7610
 11693  004E8C                     u7611:
 11694  004E8C  8CAC               	bsf	4012,6,c	;volatile
 11695  004E8E  EF4A  F027         	goto	u7625
 11696  004E92                     u7610:
 11697  004E92  9CAC               	bcf	4012,6,c	;volatile
 11698  004E94                     u7625:
 11699  004E94                     
 11700                           ;UART_LIB.c: 18:     RX9 = config.data_bits == 9 ? 1 : 0;
 11701  004E94  0E09               	movlw	9
 11702  004E96  1814               	xorwf	(UART_Init@config+4)^0,w,c
 11703  004E98  B4D8               	btfsc	status,2,c
 11704  004E9A  EF51  F027         	goto	u7631
 11705  004E9E  EF54  F027         	goto	u7630
 11706  004EA2                     u7631:
 11707  004EA2  8CAB               	bsf	4011,6,c	;volatile
 11708  004EA4  EF55  F027         	goto	u7645
 11709  004EA8                     u7630:
 11710  004EA8  9CAB               	bcf	4011,6,c	;volatile
 11711  004EAA                     u7645:
 11712  004EAA                     
 11713                           ;UART_LIB.c: 19:     TXEN = 1;
 11714  004EAA  8AAC               	bsf	4012,5,c	;volatile
 11715  004EAC                     
 11716                           ;UART_LIB.c: 20:     SYNC = 0;
 11717  004EAC  98AC               	bcf	4012,4,c	;volatile
 11718  004EAE                     
 11719                           ;UART_LIB.c: 21:     SPEN = 1;
 11720  004EAE  8EAB               	bsf	4011,7,c	;volatile
 11721                           
 11722                           ;UART_LIB.c: 24:     switch (config.parity) {
 11723  004EB0  EF68  F027         	goto	l6013
 11724  004EB4                     l151:
 11725                           
 11726                           ;UART_LIB.c: 26:             BRGH = 1;
 11727  004EB4  84AC               	bsf	4012,2,c	;volatile
 11728                           
 11729                           ;UART_LIB.c: 27:             TX9D = 0;
 11730  004EB6  90AC               	bcf	4012,0,c	;volatile
 11731  004EB8                     l6005:
 11732                           
 11733                           ;UART_LIB.c: 28:             RCSTA |= 0x02;
 11734  004EB8  82AB               	bsf	171,1,c	;volatile
 11735                           
 11736                           ;UART_LIB.c: 29:             break;
 11737  004EBA  EF7D  F027         	goto	l155
 11738  004EBE                     l153:
 11739                           
 11740                           ;UART_LIB.c: 31:             BRGH = 1;
 11741  004EBE  84AC               	bsf	4012,2,c	;volatile
 11742                           
 11743                           ;UART_LIB.c: 32:             TX9D = 1;
 11744  004EC0  80AC               	bsf	4012,0,c	;volatile
 11745  004EC2  EF5C  F027         	goto	l6005
 11746  004EC6                     l154:
 11747                           
 11748                           ;UART_LIB.c: 36:             BRGH = 1;
 11749  004EC6  84AC               	bsf	4012,2,c	;volatile
 11750                           
 11751                           ;UART_LIB.c: 37:             TX9D = 0;
 11752  004EC8  90AC               	bcf	4012,0,c	;volatile
 11753  004ECA                     
 11754                           ;UART_LIB.c: 38:             RCSTA &= ~0x02;
 11755  004ECA  92AB               	bcf	171,1,c	;volatile
 11756                           
 11757                           ;UART_LIB.c: 39:             break;
 11758  004ECC  EF7D  F027         	goto	l155
 11759  004ED0                     l6013:
 11760  004ED0  5015               	movf	(UART_Init@config+5)^0,w,c
 11761  004ED2  6E18               	movwf	??_UART_Init^0,c
 11762  004ED4  6A19               	clrf	(??_UART_Init+1)^0,c
 11763                           
 11764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11765                           ; Switch size 1, requested type "simple"
 11766                           ; Number of cases is 1, Range of values is 0 to 0
 11767                           ; switch strategies available:
 11768                           ; Name         Instructions Cycles
 11769                           ; simple_byte            4     3 (average)
 11770                           ;	Chosen strategy is simple_byte
 11771  004ED6  5019               	movf	(??_UART_Init+1)^0,w,c
 11772  004ED8  0A00               	xorlw	0	; case 0
 11773  004EDA  B4D8               	btfsc	status,2,c
 11774  004EDC  EF72  F027         	goto	l8495
 11775  004EE0  EF63  F027         	goto	l154
 11776  004EE4                     l8495:
 11777                           
 11778                           ; Switch size 1, requested type "simple"
 11779                           ; Number of cases is 2, Range of values is 1 to 2
 11780                           ; switch strategies available:
 11781                           ; Name         Instructions Cycles
 11782                           ; simple_byte            7     4 (average)
 11783                           ;	Chosen strategy is simple_byte
 11784  004EE4  5018               	movf	??_UART_Init^0,w,c
 11785  004EE6  0A01               	xorlw	1	; case 1
 11786  004EE8  B4D8               	btfsc	status,2,c
 11787  004EEA  EF5A  F027         	goto	l151
 11788  004EEE  0A03               	xorlw	3	; case 2
 11789  004EF0  B4D8               	btfsc	status,2,c
 11790  004EF2  EF5F  F027         	goto	l153
 11791  004EF6  EF63  F027         	goto	l154
 11792  004EFA                     l155:
 11793  004EFA  0012               	return		;funcret
 11794  004EFC                     __end_of_UART_Init:
 11795                           	callstack 0
 11796                           
 11797 ;; *************** function ___lldiv *****************
 11798 ;; Defined at:
 11799 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;  dividend        4    2[COMRAM] unsigned long 
 11802 ;;  divisor         4    6[COMRAM] unsigned long 
 11803 ;; Auto vars:     Size  Location     Type
 11804 ;;  quotient        4   10[COMRAM] unsigned long 
 11805 ;;  counter         1   14[COMRAM] unsigned char 
 11806 ;; Return value:  Size  Location     Type
 11807 ;;                  4    2[COMRAM] unsigned long 
 11808 ;; Registers used:
 11809 ;;		wreg, status,2, status,0
 11810 ;; Tracked objects:
 11811 ;;		On entry : 0/0
 11812 ;;		On exit  : 0/0
 11813 ;;		Unchanged: 0/0
 11814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11815 ;;      Params:         8       0       0       0       0       0       0       0       0
 11816 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11817 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11818 ;;      Totals:        13       0       0       0       0       0       0       0       0
 11819 ;;Total ram usage:       13 bytes
 11820 ;; Hardware stack levels used: 1
 11821 ;; Hardware stack levels required when called: 2
 11822 ;; This function calls:
 11823 ;;		Nothing
 11824 ;; This function is called by:
 11825 ;;		_UART_Init
 11826 ;; This function uses a non-reentrant model
 11827 ;;
 11828                           
 11829                           	psect	text46
 11830  005516                     __ptext46:
 11831                           	callstack 0
 11832  005516                     ___lldiv:
 11833                           	callstack 27
 11834  005516  0E00               	movlw	0
 11835  005518  6E0B               	movwf	___lldiv@quotient^0,c
 11836  00551A  0E00               	movlw	0
 11837  00551C  6E0C               	movwf	(___lldiv@quotient+1)^0,c
 11838  00551E  0E00               	movlw	0
 11839  005520  6E0D               	movwf	(___lldiv@quotient+2)^0,c
 11840  005522  0E00               	movlw	0
 11841  005524  6E0E               	movwf	(___lldiv@quotient+3)^0,c
 11842  005526  5007               	movf	___lldiv@divisor^0,w,c
 11843  005528  1008               	iorwf	(___lldiv@divisor+1)^0,w,c
 11844  00552A  1009               	iorwf	(___lldiv@divisor+2)^0,w,c
 11845  00552C  100A               	iorwf	(___lldiv@divisor+3)^0,w,c
 11846  00552E  B4D8               	btfsc	status,2,c
 11847  005530  EF9C  F02A         	goto	u6611
 11848  005534  EF9E  F02A         	goto	u6610
 11849  005538                     u6611:
 11850  005538  EFD4  F02A         	goto	l247
 11851  00553C                     u6610:
 11852  00553C  0E01               	movlw	1
 11853  00553E  6E0F               	movwf	___lldiv@counter^0,c
 11854  005540  EFA8  F02A         	goto	l5497
 11855  005544                     l5495:
 11856  005544  90D8               	bcf	status,0,c
 11857  005546  3607               	rlcf	___lldiv@divisor^0,f,c
 11858  005548  3608               	rlcf	(___lldiv@divisor+1)^0,f,c
 11859  00554A  3609               	rlcf	(___lldiv@divisor+2)^0,f,c
 11860  00554C  360A               	rlcf	(___lldiv@divisor+3)^0,f,c
 11861  00554E  2A0F               	incf	___lldiv@counter^0,f,c
 11862  005550                     l5497:
 11863  005550  AE0A               	btfss	(___lldiv@divisor+3)^0,7,c
 11864  005552  EFAD  F02A         	goto	u6621
 11865  005556  EFAF  F02A         	goto	u6620
 11866  00555A                     u6621:
 11867  00555A  EFA2  F02A         	goto	l5495
 11868  00555E                     u6620:
 11869  00555E                     l5499:
 11870  00555E  90D8               	bcf	status,0,c
 11871  005560  360B               	rlcf	___lldiv@quotient^0,f,c
 11872  005562  360C               	rlcf	(___lldiv@quotient+1)^0,f,c
 11873  005564  360D               	rlcf	(___lldiv@quotient+2)^0,f,c
 11874  005566  360E               	rlcf	(___lldiv@quotient+3)^0,f,c
 11875  005568  5007               	movf	___lldiv@divisor^0,w,c
 11876  00556A  5C03               	subwf	___lldiv@dividend^0,w,c
 11877  00556C  5008               	movf	(___lldiv@divisor+1)^0,w,c
 11878  00556E  5804               	subwfb	(___lldiv@dividend+1)^0,w,c
 11879  005570  5009               	movf	(___lldiv@divisor+2)^0,w,c
 11880  005572  5805               	subwfb	(___lldiv@dividend+2)^0,w,c
 11881  005574  500A               	movf	(___lldiv@divisor+3)^0,w,c
 11882  005576  5806               	subwfb	(___lldiv@dividend+3)^0,w,c
 11883  005578  A0D8               	btfss	status,0,c
 11884  00557A  EFC1  F02A         	goto	u6631
 11885  00557E  EFC3  F02A         	goto	u6630
 11886  005582                     u6631:
 11887  005582  EFCC  F02A         	goto	l5507
 11888  005586                     u6630:
 11889  005586  5007               	movf	___lldiv@divisor^0,w,c
 11890  005588  5E03               	subwf	___lldiv@dividend^0,f,c
 11891  00558A  5008               	movf	(___lldiv@divisor+1)^0,w,c
 11892  00558C  5A04               	subwfb	(___lldiv@dividend+1)^0,f,c
 11893  00558E  5009               	movf	(___lldiv@divisor+2)^0,w,c
 11894  005590  5A05               	subwfb	(___lldiv@dividend+2)^0,f,c
 11895  005592  500A               	movf	(___lldiv@divisor+3)^0,w,c
 11896  005594  5A06               	subwfb	(___lldiv@dividend+3)^0,f,c
 11897  005596  800B               	bsf	___lldiv@quotient^0,0,c
 11898  005598                     l5507:
 11899  005598  90D8               	bcf	status,0,c
 11900  00559A  320A               	rrcf	(___lldiv@divisor+3)^0,f,c
 11901  00559C  3209               	rrcf	(___lldiv@divisor+2)^0,f,c
 11902  00559E  3208               	rrcf	(___lldiv@divisor+1)^0,f,c
 11903  0055A0  3207               	rrcf	___lldiv@divisor^0,f,c
 11904  0055A2  2E0F               	decfsz	___lldiv@counter^0,f,c
 11905  0055A4  EFAF  F02A         	goto	l5499
 11906  0055A8                     l247:
 11907  0055A8  C00B  F003         	movff	___lldiv@quotient,?___lldiv
 11908  0055AC  C00C  F004         	movff	___lldiv@quotient+1,?___lldiv+1
 11909  0055B0  C00D  F005         	movff	___lldiv@quotient+2,?___lldiv+2
 11910  0055B4  C00E  F006         	movff	___lldiv@quotient+3,?___lldiv+3
 11911  0055B8  0012               	return		;funcret
 11912  0055BA                     __end_of___lldiv:
 11913                           	callstack 0
 11914                           
 11915 ;; *************** function _PWM1_Start *****************
 11916 ;; Defined at:
 11917 ;;		line 68 in file "PWM_LIB.c"
 11918 ;; Parameters:    Size  Location     Type
 11919 ;;		None
 11920 ;; Auto vars:     Size  Location     Type
 11921 ;;		None
 11922 ;; Return value:  Size  Location     Type
 11923 ;;                  1    wreg      void 
 11924 ;; Registers used:
 11925 ;;		None
 11926 ;; Tracked objects:
 11927 ;;		On entry : 0/0
 11928 ;;		On exit  : 0/0
 11929 ;;		Unchanged: 0/0
 11930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11931 ;;      Params:         0       0       0       0       0       0       0       0       0
 11932 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11933 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11934 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11935 ;;Total ram usage:        0 bytes
 11936 ;; Hardware stack levels used: 1
 11937 ;; Hardware stack levels required when called: 2
 11938 ;; This function calls:
 11939 ;;		Nothing
 11940 ;; This function is called by:
 11941 ;;		_main
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945                           	psect	text47
 11946  005DF4                     __ptext47:
 11947                           	callstack 0
 11948  005DF4                     _PWM1_Start:
 11949                           	callstack 28
 11950  005DF4                     
 11951                           ;PWM_LIB.c: 69:     T2CONbits.TMR2ON = 1;
 11952  005DF4  84CA               	bsf	202,2,c	;volatile
 11953  005DF6  0012               	return		;funcret
 11954  005DF8                     __end_of_PWM1_Start:
 11955                           	callstack 0
 11956                           
 11957 ;; *************** function _PWM1_Set_Duty *****************
 11958 ;; Defined at:
 11959 ;;		line 60 in file "PWM_LIB.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;  duty            1    wreg     unsigned char 
 11962 ;; Auto vars:     Size  Location     Type
 11963 ;;  duty            1   15[BANK0 ] unsigned char 
 11964 ;;  val             4   16[BANK0 ] float 
 11965 ;; Return value:  Size  Location     Type
 11966 ;;                  1    wreg      void 
 11967 ;; Registers used:
 11968 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11969 ;; Tracked objects:
 11970 ;;		On entry : 0/0
 11971 ;;		On exit  : 0/0
 11972 ;;		Unchanged: 0/0
 11973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11974 ;;      Params:         0       0       0       0       0       0       0       0       0
 11975 ;;      Locals:         0       5       0       0       0       0       0       0       0
 11976 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11977 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11978 ;;Total ram usage:        5 bytes
 11979 ;; Hardware stack levels used: 1
 11980 ;; Hardware stack levels required when called: 3
 11981 ;; This function calls:
 11982 ;;		___fldiv
 11983 ;;		___flmul
 11984 ;;		___fltol
 11985 ;;		___xxtofl
 11986 ;; This function is called by:
 11987 ;;		_main
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           	psect	text48
 11992  005304                     __ptext48:
 11993                           	callstack 0
 11994  005304                     _PWM1_Set_Duty:
 11995                           	callstack 27
 11996                           
 11997                           ;incstack = 0
 11998                           ;PWM1_Set_Duty@duty stored from wreg
 11999  005304  0100               	movlb	0	; () banked
 12000  005306  6F6F               	movwf	PWM1_Set_Duty@duty& (0+255),b
 12001  005308                     
 12002                           ;PWM_LIB.c: 61:     float val = duty*reg10bits/100.0;
 12003  005308  C118  F031         	movff	_reg10bits,___flmul@a
 12004  00530C  C119  F032         	movff	_reg10bits+1,___flmul@a+1
 12005  005310  C11A  F033         	movff	_reg10bits+2,___flmul@a+2
 12006  005314  C11B  F034         	movff	_reg10bits+3,___flmul@a+3
 12007  005318  0100               	movlb	0	; () banked
 12008  00531A  516F               	movf	PWM1_Set_Duty@duty& (0+255),w,b
 12009  00531C  6E07               	movwf	___xxtofl@val^0,c
 12010  00531E  6A08               	clrf	(___xxtofl@val+1)^0,c
 12011  005320  6A09               	clrf	(___xxtofl@val+2)^0,c
 12012  005322  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12013  005324  0E01               	movlw	1
 12014  005326  ECCD  F021         	call	___xxtofl
 12015  00532A  C007  F02D         	movff	?___xxtofl,___flmul@b
 12016  00532E  C008  F02E         	movff	?___xxtofl+1,___flmul@b+1
 12017  005332  C009  F02F         	movff	?___xxtofl+2,___flmul@b+2
 12018  005336  C00A  F030         	movff	?___xxtofl+3,___flmul@b+3
 12019  00533A  EC52  F01A         	call	___flmul	;wreg free
 12020  00533E  C02D  F046         	movff	?___flmul,___fldiv@b
 12021  005342  C02E  F047         	movff	?___flmul+1,___fldiv@b+1
 12022  005346  C02F  F048         	movff	?___flmul+2,___fldiv@b+2
 12023  00534A  C030  F049         	movff	?___flmul+3,___fldiv@b+3
 12024  00534E  0E00               	movlw	0
 12025  005350  6E4A               	movwf	___fldiv@a^0,c
 12026  005352  0E00               	movlw	0
 12027  005354  6E4B               	movwf	(___fldiv@a+1)^0,c
 12028  005356  0EC8               	movlw	200
 12029  005358  6E4C               	movwf	(___fldiv@a+2)^0,c
 12030  00535A  0E42               	movlw	66
 12031  00535C  6E4D               	movwf	(___fldiv@a+3)^0,c
 12032  00535E  EC67  F01C         	call	___fldiv	;wreg free
 12033  005362  C046  F070         	movff	?___fldiv,PWM1_Set_Duty@val
 12034  005366  C047  F071         	movff	?___fldiv+1,PWM1_Set_Duty@val+1
 12035  00536A  C048  F072         	movff	?___fldiv+2,PWM1_Set_Duty@val+2
 12036  00536E  C049  F073         	movff	?___fldiv+3,PWM1_Set_Duty@val+3
 12037  005372                     
 12038                           ;PWM_LIB.c: 62:     CCPR1L = (int)(val)>>2;
 12039  005372  C070  F052         	movff	PWM1_Set_Duty@val,___fltol@f1
 12040  005376  C071  F053         	movff	PWM1_Set_Duty@val+1,___fltol@f1+1
 12041  00537A  C072  F054         	movff	PWM1_Set_Duty@val+2,___fltol@f1+2
 12042  00537E  C073  F055         	movff	PWM1_Set_Duty@val+3,___fltol@f1+3
 12043  005382  EC83  F025         	call	___fltol	;wreg free
 12044  005386  3453               	rlcf	(?___fltol+1)^0,w,c
 12045  005388  3253               	rrcf	(?___fltol+1)^0,f,c
 12046  00538A  3252               	rrcf	?___fltol^0,f,c
 12047  00538C  3453               	rlcf	(?___fltol+1)^0,w,c
 12048  00538E  3253               	rrcf	(?___fltol+1)^0,f,c
 12049  005390  3252               	rrcf	?___fltol^0,f,c
 12050  005392  5052               	movf	?___fltol^0,w,c
 12051  005394  6EBE               	movwf	190,c	;volatile
 12052  005396                     
 12053                           ;PWM_LIB.c: 63:     CCP1CONbits.DC1B = (int)(val)& 0x003;
 12054  005396  C070  F052         	movff	PWM1_Set_Duty@val,___fltol@f1
 12055  00539A  C071  F053         	movff	PWM1_Set_Duty@val+1,___fltol@f1+1
 12056  00539E  C072  F054         	movff	PWM1_Set_Duty@val+2,___fltol@f1+2
 12057  0053A2  C073  F055         	movff	PWM1_Set_Duty@val+3,___fltol@f1+3
 12058  0053A6  EC83  F025         	call	___fltol	;wreg free
 12059  0053AA  0E03               	movlw	3
 12060  0053AC  1652               	andwf	?___fltol^0,f,c
 12061  0053AE  3A52               	swapf	?___fltol^0,f,c
 12062  0053B0  50BD               	movf	189,w,c	;volatile
 12063  0053B2  1852               	xorwf	?___fltol^0,w,c
 12064  0053B4  0BCF               	andlw	-49
 12065  0053B6  1852               	xorwf	?___fltol^0,w,c
 12066  0053B8  6EBD               	movwf	189,c	;volatile
 12067  0053BA  0012               	return		;funcret
 12068  0053BC                     __end_of_PWM1_Set_Duty:
 12069                           	callstack 0
 12070                           
 12071 ;; *************** function _PWM1_Init *****************
 12072 ;; Defined at:
 12073 ;;		line 7 in file "PWM_LIB.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;  freq            2   15[BANK0 ] unsigned short 
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;  prees           1   23[BANK0 ] unsigned char 
 12078 ;; Return value:  Size  Location     Type
 12079 ;;                  1    wreg      void 
 12080 ;; Registers used:
 12081 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12082 ;; Tracked objects:
 12083 ;;		On entry : 0/0
 12084 ;;		On exit  : 0/0
 12085 ;;		Unchanged: 0/0
 12086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12087 ;;      Params:         0       2       0       0       0       0       0       0       0
 12088 ;;      Locals:         0       5       0       0       0       0       0       0       0
 12089 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12090 ;;      Totals:         0       9       0       0       0       0       0       0       0
 12091 ;;Total ram usage:        9 bytes
 12092 ;; Hardware stack levels used: 1
 12093 ;; Hardware stack levels required when called: 3
 12094 ;; This function calls:
 12095 ;;		___fladd
 12096 ;;		___fldiv
 12097 ;;		___flmul
 12098 ;;		___fltol
 12099 ;;		___xxtofl
 12100 ;; This function is called by:
 12101 ;;		_main
 12102 ;; This function uses a non-reentrant model
 12103 ;;
 12104                           
 12105                           	psect	text49
 12106  003F4A                     __ptext49:
 12107                           	callstack 0
 12108  003F4A                     _PWM1_Init:
 12109                           	callstack 27
 12110  003F4A                     
 12111                           ;PWM_LIB.c: 9:     uint8_t prees;;PWM_LIB.c: 11:     switch(2){
 12112  003F4A  EFB3  F01F         	goto	l8237
 12113  003F4E                     l8229:
 12114                           
 12115                           ; BSR set to: 0
 12116  003F4E  0E01               	movlw	1
 12117  003F50  6F77               	movwf	PWM1_Init@prees& (0+255),b
 12118  003F52  EFCE  F01F         	goto	l194
 12119  003F56                     l8231:
 12120                           
 12121                           ; BSR set to: 0
 12122  003F56  0E04               	movlw	4
 12123  003F58  6F77               	movwf	PWM1_Init@prees& (0+255),b
 12124  003F5A  EFCE  F01F         	goto	l194
 12125  003F5E                     l8233:
 12126                           
 12127                           ; BSR set to: 0
 12128  003F5E  0E10               	movlw	16
 12129  003F60  6F77               	movwf	PWM1_Init@prees& (0+255),b
 12130  003F62  EFCE  F01F         	goto	l194
 12131  003F66                     l8237:
 12132  003F66  0E02               	movlw	2
 12133  003F68  0100               	movlb	0	; () banked
 12134  003F6A  6F71               	movwf	??_PWM1_Init& (0+255),b
 12135  003F6C  0E00               	movlw	0
 12136  003F6E  6F72               	movwf	(??_PWM1_Init+1)& (0+255),b
 12137                           
 12138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12139                           ; Switch size 1, requested type "simple"
 12140                           ; Number of cases is 1, Range of values is 0 to 0
 12141                           ; switch strategies available:
 12142                           ; Name         Instructions Cycles
 12143                           ; simple_byte            4     3 (average)
 12144                           ;	Chosen strategy is simple_byte
 12145  003F70  5172               	movf	(??_PWM1_Init+1)& (0+255),w,b
 12146  003F72  0A00               	xorlw	0	; case 0
 12147  003F74  B4D8               	btfsc	status,2,c
 12148  003F76  EFBF  F01F         	goto	l8497
 12149  003F7A  EFCE  F01F         	goto	l194
 12150  003F7E                     l8497:
 12151                           
 12152                           ; BSR set to: 0
 12153                           ; Switch size 1, requested type "simple"
 12154                           ; Number of cases is 3, Range of values is 0 to 2
 12155                           ; switch strategies available:
 12156                           ; Name         Instructions Cycles
 12157                           ; simple_byte           10     6 (average)
 12158                           ;	Chosen strategy is simple_byte
 12159  003F7E  5171               	movf	??_PWM1_Init& (0+255),w,b
 12160  003F80  0A00               	xorlw	0	; case 0
 12161  003F82  B4D8               	btfsc	status,2,c
 12162  003F84  EFA7  F01F         	goto	l8229
 12163  003F88  0A01               	xorlw	1	; case 1
 12164  003F8A  B4D8               	btfsc	status,2,c
 12165  003F8C  EFAB  F01F         	goto	l8231
 12166  003F90  0A03               	xorlw	3	; case 2
 12167  003F92  B4D8               	btfsc	status,2,c
 12168  003F94  EFAF  F01F         	goto	l8233
 12169  003F98  EFCE  F01F         	goto	l194
 12170  003F9C                     l194:
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;PWM_LIB.c: 18:     TRISCbits.TRISC2 = 0;
 12174  003F9C  9494               	bcf	148,2,c	;volatile
 12175  003F9E                     
 12176                           ; BSR set to: 0
 12177                           ;PWM_LIB.c: 21:     CCP1CONbits.CCP1M = 0b1100;
 12178  003F9E  50BD               	movf	189,w,c	;volatile
 12179  003FA0  0BF0               	andlw	-16
 12180  003FA2  090C               	iorlw	12
 12181  003FA4  6EBD               	movwf	189,c	;volatile
 12182                           
 12183                           ;PWM_LIB.c: 24:     T2CONbits.T2CKPS = 2;
 12184  003FA6  50CA               	movf	202,w,c	;volatile
 12185  003FA8  0BFC               	andlw	-4
 12186  003FAA  0902               	iorlw	2
 12187  003FAC  6ECA               	movwf	202,c	;volatile
 12188  003FAE                     
 12189                           ; BSR set to: 0
 12190                           ;PWM_LIB.c: 27:     PR2 = (uint8_t)((20000000UL / (4.0*freq*prees) ) - 1.0);
 12191  003FAE  0E00               	movlw	0
 12192  003FB0  6E31               	movwf	___flmul@a^0,c
 12193  003FB2  0E00               	movlw	0
 12194  003FB4  6E32               	movwf	(___flmul@a+1)^0,c
 12195  003FB6  0E80               	movlw	128
 12196  003FB8  6E33               	movwf	(___flmul@a+2)^0,c
 12197  003FBA  0E40               	movlw	64
 12198  003FBC  6E34               	movwf	(___flmul@a+3)^0,c
 12199  003FBE  C06F  F007         	movff	PWM1_Init@freq,___xxtofl@val
 12200  003FC2  C070  F008         	movff	PWM1_Init@freq+1,___xxtofl@val+1
 12201  003FC6  6A09               	clrf	(___xxtofl@val+2)^0,c
 12202  003FC8  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12203  003FCA  0E00               	movlw	0
 12204  003FCC  ECCD  F021         	call	___xxtofl
 12205  003FD0  C007  F02D         	movff	?___xxtofl,___flmul@b
 12206  003FD4  C008  F02E         	movff	?___xxtofl+1,___flmul@b+1
 12207  003FD8  C009  F02F         	movff	?___xxtofl+2,___flmul@b+2
 12208  003FDC  C00A  F030         	movff	?___xxtofl+3,___flmul@b+3
 12209  003FE0  EC52  F01A         	call	___flmul	;wreg free
 12210  003FE4  C02D  F073         	movff	?___flmul,_PWM1_Init$1897
 12211  003FE8  C02E  F074         	movff	?___flmul+1,_PWM1_Init$1897+1
 12212  003FEC  C02F  F075         	movff	?___flmul+2,_PWM1_Init$1897+2
 12213  003FF0  C030  F076         	movff	?___flmul+3,_PWM1_Init$1897+3
 12214  003FF4                     
 12215                           ;PWM_LIB.c: 27:     PR2 = (uint8_t)((20000000UL / (4.0*freq*prees) ) - 1.0);
 12216  003FF4  0E00               	movlw	0
 12217  003FF6  6E19               	movwf	___fladd@a^0,c
 12218  003FF8  0E00               	movlw	0
 12219  003FFA  6E1A               	movwf	(___fladd@a+1)^0,c
 12220  003FFC  0E80               	movlw	128
 12221  003FFE  6E1B               	movwf	(___fladd@a+2)^0,c
 12222  004000  0EBF               	movlw	191
 12223  004002  6E1C               	movwf	(___fladd@a+3)^0,c
 12224  004004  0100               	movlb	0	; () banked
 12225  004006  5177               	movf	PWM1_Init@prees& (0+255),w,b
 12226  004008  6E07               	movwf	___xxtofl@val^0,c
 12227  00400A  6A08               	clrf	(___xxtofl@val+1)^0,c
 12228  00400C  6A09               	clrf	(___xxtofl@val+2)^0,c
 12229  00400E  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12230  004010  0E01               	movlw	1
 12231  004012  ECCD  F021         	call	___xxtofl
 12232  004016  C007  F031         	movff	?___xxtofl,___flmul@a
 12233  00401A  C008  F032         	movff	?___xxtofl+1,___flmul@a+1
 12234  00401E  C009  F033         	movff	?___xxtofl+2,___flmul@a+2
 12235  004022  C00A  F034         	movff	?___xxtofl+3,___flmul@a+3
 12236  004026  C073  F02D         	movff	_PWM1_Init$1897,___flmul@b
 12237  00402A  C074  F02E         	movff	_PWM1_Init$1897+1,___flmul@b+1
 12238  00402E  C075  F02F         	movff	_PWM1_Init$1897+2,___flmul@b+2
 12239  004032  C076  F030         	movff	_PWM1_Init$1897+3,___flmul@b+3
 12240  004036  EC52  F01A         	call	___flmul	;wreg free
 12241  00403A  C02D  F04A         	movff	?___flmul,___fldiv@a
 12242  00403E  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 12243  004042  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 12244  004046  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 12245  00404A  0E80               	movlw	128
 12246  00404C  6E46               	movwf	___fldiv@b^0,c
 12247  00404E  0E96               	movlw	150
 12248  004050  6E47               	movwf	(___fldiv@b+1)^0,c
 12249  004052  0E98               	movlw	152
 12250  004054  6E48               	movwf	(___fldiv@b+2)^0,c
 12251  004056  0E4B               	movlw	75
 12252  004058  6E49               	movwf	(___fldiv@b+3)^0,c
 12253  00405A  EC67  F01C         	call	___fldiv	;wreg free
 12254  00405E  C046  F015         	movff	?___fldiv,___fladd@b
 12255  004062  C047  F016         	movff	?___fldiv+1,___fladd@b+1
 12256  004066  C048  F017         	movff	?___fldiv+2,___fladd@b+2
 12257  00406A  C049  F018         	movff	?___fldiv+3,___fladd@b+3
 12258  00406E  ECD2  F015         	call	___fladd	;wreg free
 12259  004072  C015  F052         	movff	?___fladd,___fltol@f1
 12260  004076  C016  F053         	movff	?___fladd+1,___fltol@f1+1
 12261  00407A  C017  F054         	movff	?___fladd+2,___fltol@f1+2
 12262  00407E  C018  F055         	movff	?___fladd+3,___fltol@f1+3
 12263  004082  EC83  F025         	call	___fltol	;wreg free
 12264  004086  5052               	movf	?___fltol^0,w,c
 12265  004088  6ECB               	movwf	203,c	;volatile
 12266  00408A                     
 12267                           ;PWM_LIB.c: 29:     reg10bits = (20000000UL/(1.0*freq*prees));
 12268  00408A  0E00               	movlw	0
 12269  00408C  6E31               	movwf	___flmul@a^0,c
 12270  00408E  0E00               	movlw	0
 12271  004090  6E32               	movwf	(___flmul@a+1)^0,c
 12272  004092  0E80               	movlw	128
 12273  004094  6E33               	movwf	(___flmul@a+2)^0,c
 12274  004096  0E3F               	movlw	63
 12275  004098  6E34               	movwf	(___flmul@a+3)^0,c
 12276  00409A  C06F  F007         	movff	PWM1_Init@freq,___xxtofl@val
 12277  00409E  C070  F008         	movff	PWM1_Init@freq+1,___xxtofl@val+1
 12278  0040A2  6A09               	clrf	(___xxtofl@val+2)^0,c
 12279  0040A4  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12280  0040A6  0E00               	movlw	0
 12281  0040A8  ECCD  F021         	call	___xxtofl
 12282  0040AC  C007  F02D         	movff	?___xxtofl,___flmul@b
 12283  0040B0  C008  F02E         	movff	?___xxtofl+1,___flmul@b+1
 12284  0040B4  C009  F02F         	movff	?___xxtofl+2,___flmul@b+2
 12285  0040B8  C00A  F030         	movff	?___xxtofl+3,___flmul@b+3
 12286  0040BC  EC52  F01A         	call	___flmul	;wreg free
 12287  0040C0  C02D  F073         	movff	?___flmul,_PWM1_Init$1897
 12288  0040C4  C02E  F074         	movff	?___flmul+1,_PWM1_Init$1897+1
 12289  0040C8  C02F  F075         	movff	?___flmul+2,_PWM1_Init$1897+2
 12290  0040CC  C030  F076         	movff	?___flmul+3,_PWM1_Init$1897+3
 12291  0040D0                     
 12292                           ;PWM_LIB.c: 29:     reg10bits = (20000000UL/(1.0*freq*prees));
 12293  0040D0  0E80               	movlw	128
 12294  0040D2  6E46               	movwf	___fldiv@b^0,c
 12295  0040D4  0E96               	movlw	150
 12296  0040D6  6E47               	movwf	(___fldiv@b+1)^0,c
 12297  0040D8  0E98               	movlw	152
 12298  0040DA  6E48               	movwf	(___fldiv@b+2)^0,c
 12299  0040DC  0E4B               	movlw	75
 12300  0040DE  6E49               	movwf	(___fldiv@b+3)^0,c
 12301  0040E0  0100               	movlb	0	; () banked
 12302  0040E2  5177               	movf	PWM1_Init@prees& (0+255),w,b
 12303  0040E4  6E07               	movwf	___xxtofl@val^0,c
 12304  0040E6  6A08               	clrf	(___xxtofl@val+1)^0,c
 12305  0040E8  6A09               	clrf	(___xxtofl@val+2)^0,c
 12306  0040EA  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12307  0040EC  0E01               	movlw	1
 12308  0040EE  ECCD  F021         	call	___xxtofl
 12309  0040F2  C007  F031         	movff	?___xxtofl,___flmul@a
 12310  0040F6  C008  F032         	movff	?___xxtofl+1,___flmul@a+1
 12311  0040FA  C009  F033         	movff	?___xxtofl+2,___flmul@a+2
 12312  0040FE  C00A  F034         	movff	?___xxtofl+3,___flmul@a+3
 12313  004102  C073  F02D         	movff	_PWM1_Init$1897,___flmul@b
 12314  004106  C074  F02E         	movff	_PWM1_Init$1897+1,___flmul@b+1
 12315  00410A  C075  F02F         	movff	_PWM1_Init$1897+2,___flmul@b+2
 12316  00410E  C076  F030         	movff	_PWM1_Init$1897+3,___flmul@b+3
 12317  004112  EC52  F01A         	call	___flmul	;wreg free
 12318  004116  C02D  F04A         	movff	?___flmul,___fldiv@a
 12319  00411A  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 12320  00411E  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 12321  004122  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 12322  004126  EC67  F01C         	call	___fldiv	;wreg free
 12323  00412A  C046  F118         	movff	?___fldiv,_reg10bits
 12324  00412E  C047  F119         	movff	?___fldiv+1,_reg10bits+1
 12325  004132  C048  F11A         	movff	?___fldiv+2,_reg10bits+2
 12326  004136  C049  F11B         	movff	?___fldiv+3,_reg10bits+3
 12327  00413A                     
 12328                           ;PWM_LIB.c: 31:     CCPR1L = (int)(reg10bits)>>2;
 12329  00413A  C118  F052         	movff	_reg10bits,___fltol@f1
 12330  00413E  C119  F053         	movff	_reg10bits+1,___fltol@f1+1
 12331  004142  C11A  F054         	movff	_reg10bits+2,___fltol@f1+2
 12332  004146  C11B  F055         	movff	_reg10bits+3,___fltol@f1+3
 12333  00414A  EC83  F025         	call	___fltol	;wreg free
 12334  00414E  3453               	rlcf	(?___fltol+1)^0,w,c
 12335  004150  3253               	rrcf	(?___fltol+1)^0,f,c
 12336  004152  3252               	rrcf	?___fltol^0,f,c
 12337  004154  3453               	rlcf	(?___fltol+1)^0,w,c
 12338  004156  3253               	rrcf	(?___fltol+1)^0,f,c
 12339  004158  3252               	rrcf	?___fltol^0,f,c
 12340  00415A  5052               	movf	?___fltol^0,w,c
 12341  00415C  6EBE               	movwf	190,c	;volatile
 12342  00415E                     
 12343                           ;PWM_LIB.c: 32:     CCP1CONbits.DC1B = (int)(reg10bits)& 0x003;
 12344  00415E  C118  F052         	movff	_reg10bits,___fltol@f1
 12345  004162  C119  F053         	movff	_reg10bits+1,___fltol@f1+1
 12346  004166  C11A  F054         	movff	_reg10bits+2,___fltol@f1+2
 12347  00416A  C11B  F055         	movff	_reg10bits+3,___fltol@f1+3
 12348  00416E  EC83  F025         	call	___fltol	;wreg free
 12349  004172  0E03               	movlw	3
 12350  004174  1652               	andwf	?___fltol^0,f,c
 12351  004176  3A52               	swapf	?___fltol^0,f,c
 12352  004178  50BD               	movf	189,w,c	;volatile
 12353  00417A  1852               	xorwf	?___fltol^0,w,c
 12354  00417C  0BCF               	andlw	-49
 12355  00417E  1852               	xorwf	?___fltol^0,w,c
 12356  004180  6EBD               	movwf	189,c	;volatile
 12357  004182  0012               	return		;funcret
 12358  004184                     __end_of_PWM1_Init:
 12359                           	callstack 0
 12360                           
 12361 ;; *************** function ___xxtofl *****************
 12362 ;; Defined at:
 12363 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;  sign            1    wreg     unsigned char 
 12366 ;;  val             4    6[COMRAM] long 
 12367 ;; Auto vars:     Size  Location     Type
 12368 ;;  sign            1   14[COMRAM] unsigned char 
 12369 ;;  arg             4   16[COMRAM] unsigned long 
 12370 ;;  exp             1   15[COMRAM] unsigned char 
 12371 ;; Return value:  Size  Location     Type
 12372 ;;                  4    6[COMRAM] unsigned char 
 12373 ;; Registers used:
 12374 ;;		wreg, status,2, status,0
 12375 ;; Tracked objects:
 12376 ;;		On entry : 0/0
 12377 ;;		On exit  : 0/0
 12378 ;;		Unchanged: 0/0
 12379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12380 ;;      Params:         4       0       0       0       0       0       0       0       0
 12381 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12382 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12383 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12384 ;;Total ram usage:       14 bytes
 12385 ;; Hardware stack levels used: 1
 12386 ;; Hardware stack levels required when called: 2
 12387 ;; This function calls:
 12388 ;;		Nothing
 12389 ;; This function is called by:
 12390 ;;		_main
 12391 ;;		_PWM1_Init
 12392 ;;		_PWM1_Set_Duty
 12393 ;;		_strtof
 12394 ;;		_PWM2_Init
 12395 ;; This function uses a non-reentrant model
 12396 ;;
 12397                           
 12398                           	psect	text50
 12399  00439A                     __ptext50:
 12400                           	callstack 0
 12401  00439A                     ___xxtofl:
 12402                           	callstack 26
 12403                           
 12404                           ;incstack = 0
 12405                           ;___xxtofl@sign stored from wreg
 12406  00439A  6E0F               	movwf	___xxtofl@sign^0,c
 12407  00439C  500F               	movf	___xxtofl@sign^0,w,c
 12408  00439E  B4D8               	btfsc	status,2,c
 12409  0043A0  EFD4  F021         	goto	u6281
 12410  0043A4  EFD6  F021         	goto	u6280
 12411  0043A8                     u6281:
 12412  0043A8  EFF8  F021         	goto	l875
 12413  0043AC                     u6280:
 12414  0043AC  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
 12415  0043AE  EFDD  F021         	goto	u6290
 12416  0043B2  EFDB  F021         	goto	u6291
 12417  0043B6                     u6291:
 12418  0043B6  EFF8  F021         	goto	l875
 12419  0043BA                     u6290:
 12420  0043BA  C007  F00B         	movff	___xxtofl@val,??___xxtofl
 12421  0043BE  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
 12422  0043C2  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
 12423  0043C6  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
 12424  0043CA  1E0B               	comf	??___xxtofl^0,f,c
 12425  0043CC  1E0C               	comf	(??___xxtofl+1)^0,f,c
 12426  0043CE  1E0D               	comf	(??___xxtofl+2)^0,f,c
 12427  0043D0  1E0E               	comf	(??___xxtofl+3)^0,f,c
 12428  0043D2  2A0B               	incf	??___xxtofl^0,f,c
 12429  0043D4  0E00               	movlw	0
 12430  0043D6  220C               	addwfc	(??___xxtofl+1)^0,f,c
 12431  0043D8  220D               	addwfc	(??___xxtofl+2)^0,f,c
 12432  0043DA  220E               	addwfc	(??___xxtofl+3)^0,f,c
 12433  0043DC  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
 12434  0043E0  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
 12435  0043E4  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
 12436  0043E8  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
 12437  0043EC  EF00  F022         	goto	l5245
 12438  0043F0                     l875:
 12439  0043F0  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
 12440  0043F4  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12441  0043F8  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12442  0043FC  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12443  004400                     l5245:
 12444  004400  5007               	movf	___xxtofl@val^0,w,c
 12445  004402  1008               	iorwf	(___xxtofl@val+1)^0,w,c
 12446  004404  1009               	iorwf	(___xxtofl@val+2)^0,w,c
 12447  004406  100A               	iorwf	(___xxtofl@val+3)^0,w,c
 12448  004408  A4D8               	btfss	status,2,c
 12449  00440A  EF09  F022         	goto	u6301
 12450  00440E  EF0B  F022         	goto	u6300
 12451  004412                     u6301:
 12452  004412  EF15  F022         	goto	l5251
 12453  004416                     u6300:
 12454  004416  0E00               	movlw	0
 12455  004418  6E07               	movwf	?___xxtofl^0,c
 12456  00441A  0E00               	movlw	0
 12457  00441C  6E08               	movwf	(?___xxtofl+1)^0,c
 12458  00441E  0E00               	movlw	0
 12459  004420  6E09               	movwf	(?___xxtofl+2)^0,c
 12460  004422  0E00               	movlw	0
 12461  004424  6E0A               	movwf	(?___xxtofl+3)^0,c
 12462  004426  EFA6  F022         	goto	l878
 12463  00442A                     l5251:
 12464  00442A  0E96               	movlw	150
 12465  00442C  6E10               	movwf	___xxtofl@exp^0,c
 12466  00442E  EF1F  F022         	goto	l5255
 12467  004432                     l5253:
 12468  004432  2A10               	incf	___xxtofl@exp^0,f,c
 12469  004434  90D8               	bcf	status,0,c
 12470  004436  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
 12471  004438  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
 12472  00443A  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
 12473  00443C  3211               	rrcf	___xxtofl@arg^0,f,c
 12474  00443E                     l5255:
 12475  00443E  0E00               	movlw	0
 12476  004440  1411               	andwf	___xxtofl@arg^0,w,c
 12477  004442  6E0B               	movwf	??___xxtofl^0,c
 12478  004444  0E00               	movlw	0
 12479  004446  1412               	andwf	(___xxtofl@arg+1)^0,w,c
 12480  004448  6E0C               	movwf	(??___xxtofl+1)^0,c
 12481  00444A  0E00               	movlw	0
 12482  00444C  1413               	andwf	(___xxtofl@arg+2)^0,w,c
 12483  00444E  6E0D               	movwf	(??___xxtofl+2)^0,c
 12484  004450  0EFE               	movlw	254
 12485  004452  1414               	andwf	(___xxtofl@arg+3)^0,w,c
 12486  004454  6E0E               	movwf	(??___xxtofl+3)^0,c
 12487  004456  500B               	movf	??___xxtofl^0,w,c
 12488  004458  100C               	iorwf	(??___xxtofl+1)^0,w,c
 12489  00445A  100D               	iorwf	(??___xxtofl+2)^0,w,c
 12490  00445C  100E               	iorwf	(??___xxtofl+3)^0,w,c
 12491  00445E  A4D8               	btfss	status,2,c
 12492  004460  EF34  F022         	goto	u6311
 12493  004464  EF36  F022         	goto	u6310
 12494  004468                     u6311:
 12495  004468  EF19  F022         	goto	l5253
 12496  00446C                     u6310:
 12497  00446C  EF44  F022         	goto	l882
 12498  004470                     l5257:
 12499  004470  2A10               	incf	___xxtofl@exp^0,f,c
 12500  004472  0E01               	movlw	1
 12501  004474  2611               	addwf	___xxtofl@arg^0,f,c
 12502  004476  0E00               	movlw	0
 12503  004478  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
 12504  00447A  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
 12505  00447C  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
 12506  00447E  90D8               	bcf	status,0,c
 12507  004480  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
 12508  004482  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
 12509  004484  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
 12510  004486  3211               	rrcf	___xxtofl@arg^0,f,c
 12511  004488                     l882:
 12512  004488  0E00               	movlw	0
 12513  00448A  1411               	andwf	___xxtofl@arg^0,w,c
 12514  00448C  6E0B               	movwf	??___xxtofl^0,c
 12515  00448E  0E00               	movlw	0
 12516  004490  1412               	andwf	(___xxtofl@arg+1)^0,w,c
 12517  004492  6E0C               	movwf	(??___xxtofl+1)^0,c
 12518  004494  0E00               	movlw	0
 12519  004496  1413               	andwf	(___xxtofl@arg+2)^0,w,c
 12520  004498  6E0D               	movwf	(??___xxtofl+2)^0,c
 12521  00449A  0EFF               	movlw	255
 12522  00449C  1414               	andwf	(___xxtofl@arg+3)^0,w,c
 12523  00449E  6E0E               	movwf	(??___xxtofl+3)^0,c
 12524  0044A0  500B               	movf	??___xxtofl^0,w,c
 12525  0044A2  100C               	iorwf	(??___xxtofl+1)^0,w,c
 12526  0044A4  100D               	iorwf	(??___xxtofl+2)^0,w,c
 12527  0044A6  100E               	iorwf	(??___xxtofl+3)^0,w,c
 12528  0044A8  A4D8               	btfss	status,2,c
 12529  0044AA  EF59  F022         	goto	u6321
 12530  0044AE  EF5B  F022         	goto	u6320
 12531  0044B2                     u6321:
 12532  0044B2  EF38  F022         	goto	l5257
 12533  0044B6                     u6320:
 12534  0044B6  EF63  F022         	goto	l5265
 12535  0044BA                     l5263:
 12536  0044BA  0610               	decf	___xxtofl@exp^0,f,c
 12537  0044BC  90D8               	bcf	status,0,c
 12538  0044BE  3611               	rlcf	___xxtofl@arg^0,f,c
 12539  0044C0  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
 12540  0044C2  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
 12541  0044C4  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
 12542  0044C6                     l5265:
 12543  0044C6  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
 12544  0044C8  EF68  F022         	goto	u6331
 12545  0044CC  EF6A  F022         	goto	u6330
 12546  0044D0                     u6331:
 12547  0044D0  EF72  F022         	goto	l889
 12548  0044D4                     u6330:
 12549  0044D4  0E02               	movlw	2
 12550  0044D6  6010               	cpfslt	___xxtofl@exp^0,c
 12551  0044D8  EF70  F022         	goto	u6341
 12552  0044DC  EF72  F022         	goto	u6340
 12553  0044E0                     u6341:
 12554  0044E0  EF5D  F022         	goto	l5263
 12555  0044E4                     u6340:
 12556  0044E4                     l889:
 12557  0044E4  B010               	btfsc	___xxtofl@exp^0,0,c
 12558  0044E6  EF77  F022         	goto	u6351
 12559  0044EA  EF79  F022         	goto	u6350
 12560  0044EE                     u6351:
 12561  0044EE  EF7A  F022         	goto	l5271
 12562  0044F2                     u6350:
 12563  0044F2  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
 12564  0044F4                     l5271:
 12565  0044F4  90D8               	bcf	status,0,c
 12566  0044F6  3210               	rrcf	___xxtofl@exp^0,f,c
 12567  0044F8  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
 12568  0044FC  6A0C               	clrf	(??___xxtofl+1)^0,c
 12569  0044FE  6A0D               	clrf	(??___xxtofl+2)^0,c
 12570  004500  6A0E               	clrf	(??___xxtofl+3)^0,c
 12571  004502  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
 12572  004506  6A0D               	clrf	(??___xxtofl+2)^0,c
 12573  004508  6A0C               	clrf	(??___xxtofl+1)^0,c
 12574  00450A  6A0B               	clrf	??___xxtofl^0,c
 12575  00450C  500B               	movf	??___xxtofl^0,w,c
 12576  00450E  1211               	iorwf	___xxtofl@arg^0,f,c
 12577  004510  500C               	movf	(??___xxtofl+1)^0,w,c
 12578  004512  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
 12579  004514  500D               	movf	(??___xxtofl+2)^0,w,c
 12580  004516  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
 12581  004518  500E               	movf	(??___xxtofl+3)^0,w,c
 12582  00451A  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
 12583  00451C  500F               	movf	___xxtofl@sign^0,w,c
 12584  00451E  B4D8               	btfsc	status,2,c
 12585  004520  EF94  F022         	goto	u6361
 12586  004524  EF96  F022         	goto	u6360
 12587  004528                     u6361:
 12588  004528  EF9E  F022         	goto	l5281
 12589  00452C                     u6360:
 12590  00452C  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
 12591  00452E  EF9D  F022         	goto	u6370
 12592  004532  EF9B  F022         	goto	u6371
 12593  004536                     u6371:
 12594  004536  EF9E  F022         	goto	l5281
 12595  00453A                     u6370:
 12596  00453A  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
 12597  00453C                     l5281:
 12598  00453C  C011  F007         	movff	___xxtofl@arg,?___xxtofl
 12599  004540  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
 12600  004544  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
 12601  004548  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
 12602  00454C                     l878:
 12603  00454C  0012               	return		;funcret
 12604  00454E                     __end_of___xxtofl:
 12605                           	callstack 0
 12606                           
 12607 ;; *************** function ___fltol *****************
 12608 ;; Defined at:
 12609 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;  f1              4   81[COMRAM] unsigned char 
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;  exp1            1   14[BANK0 ] unsigned char 
 12614 ;;  sign1           1   13[BANK0 ] unsigned char 
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  4   81[COMRAM] long 
 12617 ;; Registers used:
 12618 ;;		wreg, status,2, status,0
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12624 ;;      Params:         4       0       0       0       0       0       0       0       0
 12625 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12626 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12627 ;;      Totals:         8       2       0       0       0       0       0       0       0
 12628 ;;Total ram usage:       10 bytes
 12629 ;; Hardware stack levels used: 1
 12630 ;; Hardware stack levels required when called: 2
 12631 ;; This function calls:
 12632 ;;		Nothing
 12633 ;; This function is called by:
 12634 ;;		_main
 12635 ;;		_PWM1_Init
 12636 ;;		_PWM1_Set_Duty
 12637 ;;		_efgtoa
 12638 ;;		_PWM2_Init
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           	psect	text51
 12643  004B06                     __ptext51:
 12644                           	callstack 0
 12645  004B06                     ___fltol:
 12646                           	callstack 24
 12647  004B06  3454               	rlcf	(___fltol@f1+2)^0,w,c
 12648  004B08  3455               	rlcf	(___fltol@f1+3)^0,w,c
 12649  004B0A  0100               	movlb	0	; () banked
 12650  004B0C  6F6E               	movwf	___fltol@exp1& (0+255),b
 12651  004B0E  516E               	movf	___fltol@exp1& (0+255),w,b
 12652  004B10  A4D8               	btfss	status,2,c
 12653  004B12  EF8D  F025         	goto	u9081
 12654  004B16  EF8F  F025         	goto	u9080
 12655  004B1A                     u9081:
 12656  004B1A  EF99  F025         	goto	l7077
 12657  004B1E                     u9080:
 12658  004B1E                     l7073:
 12659                           
 12660                           ; BSR set to: 0
 12661  004B1E  0E00               	movlw	0
 12662  004B20  6E52               	movwf	?___fltol^0,c
 12663  004B22  0E00               	movlw	0
 12664  004B24  6E53               	movwf	(?___fltol+1)^0,c
 12665  004B26  0E00               	movlw	0
 12666  004B28  6E54               	movwf	(?___fltol+2)^0,c
 12667  004B2A  0E00               	movlw	0
 12668  004B2C  6E55               	movwf	(?___fltol+3)^0,c
 12669  004B2E  EF06  F026         	goto	l517
 12670  004B32                     l7077:
 12671                           
 12672                           ; BSR set to: 0
 12673  004B32  C052  F056         	movff	___fltol@f1,??___fltol
 12674  004B36  C053  F057         	movff	___fltol@f1+1,??___fltol+1
 12675  004B3A  C054  F058         	movff	___fltol@f1+2,??___fltol+2
 12676  004B3E  C055  F059         	movff	___fltol@f1+3,??___fltol+3
 12677  004B42  0E20               	movlw	32
 12678  004B44  EFA9  F025         	goto	u9090
 12679  004B48                     u9095:
 12680  004B48  90D8               	bcf	status,0,c
 12681  004B4A  3259               	rrcf	(??___fltol+3)^0,f,c
 12682  004B4C  3258               	rrcf	(??___fltol+2)^0,f,c
 12683  004B4E  3257               	rrcf	(??___fltol+1)^0,f,c
 12684  004B50  3256               	rrcf	??___fltol^0,f,c
 12685  004B52                     u9090:
 12686  004B52  2EE8               	decfsz	wreg,f,c
 12687  004B54  EFA4  F025         	goto	u9095
 12688  004B58  5056               	movf	??___fltol^0,w,c
 12689  004B5A  6F6D               	movwf	___fltol@sign1& (0+255),b
 12690  004B5C                     
 12691                           ; BSR set to: 0
 12692  004B5C  8E54               	bsf	(___fltol@f1+2)^0,7,c
 12693  004B5E                     
 12694                           ; BSR set to: 0
 12695  004B5E  0EFF               	movlw	255
 12696  004B60  1652               	andwf	___fltol@f1^0,f,c
 12697  004B62  0EFF               	movlw	255
 12698  004B64  1653               	andwf	(___fltol@f1+1)^0,f,c
 12699  004B66  0EFF               	movlw	255
 12700  004B68  1654               	andwf	(___fltol@f1+2)^0,f,c
 12701  004B6A  0E00               	movlw	0
 12702  004B6C  1655               	andwf	(___fltol@f1+3)^0,f,c
 12703  004B6E                     
 12704                           ; BSR set to: 0
 12705  004B6E  0E96               	movlw	150
 12706  004B70  5F6E               	subwf	___fltol@exp1& (0+255),f,b
 12707  004B72                     
 12708                           ; BSR set to: 0
 12709  004B72  BF6E               	btfsc	___fltol@exp1& (0+255),7,b
 12710  004B74  EFC0  F025         	goto	u9100
 12711  004B78  EFBE  F025         	goto	u9101
 12712  004B7C                     u9101:
 12713  004B7C  EFD6  F025         	goto	l7097
 12714  004B80                     u9100:
 12715  004B80                     
 12716                           ; BSR set to: 0
 12717  004B80  516E               	movf	___fltol@exp1& (0+255),w,b
 12718  004B82  0A80               	xorlw	128
 12719  004B84  0F97               	addlw	151
 12720  004B86  B0D8               	btfsc	status,0,c
 12721  004B88  EFC8  F025         	goto	u9111
 12722  004B8C  EFCA  F025         	goto	u9110
 12723  004B90                     u9111:
 12724  004B90  EFCC  F025         	goto	l7093
 12725  004B94                     u9110:
 12726  004B94  EF8F  F025         	goto	l7073
 12727  004B98                     l7093:
 12728                           
 12729                           ; BSR set to: 0
 12730  004B98  90D8               	bcf	status,0,c
 12731  004B9A  3255               	rrcf	(___fltol@f1+3)^0,f,c
 12732  004B9C  3254               	rrcf	(___fltol@f1+2)^0,f,c
 12733  004B9E  3253               	rrcf	(___fltol@f1+1)^0,f,c
 12734  004BA0  3252               	rrcf	___fltol@f1^0,f,c
 12735  004BA2                     
 12736                           ; BSR set to: 0
 12737  004BA2  3F6E               	incfsz	___fltol@exp1& (0+255),f,b
 12738  004BA4  EFCC  F025         	goto	l7093
 12739  004BA8  EFEE  F025         	goto	l7107
 12740  004BAC                     l7097:
 12741                           
 12742                           ; BSR set to: 0
 12743  004BAC  0E1F               	movlw	31
 12744  004BAE  656E               	cpfsgt	___fltol@exp1& (0+255),b
 12745  004BB0  EFDC  F025         	goto	u9121
 12746  004BB4  EFDE  F025         	goto	u9120
 12747  004BB8                     u9121:
 12748  004BB8  EFE6  F025         	goto	l7105
 12749  004BBC                     u9120:
 12750  004BBC  EF8F  F025         	goto	l7073
 12751  004BC0                     l7103:
 12752                           
 12753                           ; BSR set to: 0
 12754  004BC0  90D8               	bcf	status,0,c
 12755  004BC2  3652               	rlcf	___fltol@f1^0,f,c
 12756  004BC4  3653               	rlcf	(___fltol@f1+1)^0,f,c
 12757  004BC6  3654               	rlcf	(___fltol@f1+2)^0,f,c
 12758  004BC8  3655               	rlcf	(___fltol@f1+3)^0,f,c
 12759  004BCA  076E               	decf	___fltol@exp1& (0+255),f,b
 12760  004BCC                     l7105:
 12761                           
 12762                           ; BSR set to: 0
 12763  004BCC  516E               	movf	___fltol@exp1& (0+255),w,b
 12764  004BCE  A4D8               	btfss	status,2,c
 12765  004BD0  EFEC  F025         	goto	u9131
 12766  004BD4  EFEE  F025         	goto	u9130
 12767  004BD8                     u9131:
 12768  004BD8  EFE0  F025         	goto	l7103
 12769  004BDC                     u9130:
 12770  004BDC                     l7107:
 12771                           
 12772                           ; BSR set to: 0
 12773  004BDC  516D               	movf	___fltol@sign1& (0+255),w,b
 12774  004BDE  B4D8               	btfsc	status,2,c
 12775  004BE0  EFF4  F025         	goto	u9141
 12776  004BE4  EFF6  F025         	goto	u9140
 12777  004BE8                     u9141:
 12778  004BE8  EFFE  F025         	goto	l7111
 12779  004BEC                     u9140:
 12780  004BEC                     
 12781                           ; BSR set to: 0
 12782  004BEC  1E55               	comf	(___fltol@f1+3)^0,f,c
 12783  004BEE  1E54               	comf	(___fltol@f1+2)^0,f,c
 12784  004BF0  1E53               	comf	(___fltol@f1+1)^0,f,c
 12785  004BF2  6C52               	negf	___fltol@f1^0,c
 12786  004BF4  0E00               	movlw	0
 12787  004BF6  2253               	addwfc	(___fltol@f1+1)^0,f,c
 12788  004BF8  2254               	addwfc	(___fltol@f1+2)^0,f,c
 12789  004BFA  2255               	addwfc	(___fltol@f1+3)^0,f,c
 12790  004BFC                     l7111:
 12791                           
 12792                           ; BSR set to: 0
 12793  004BFC  C052  F052         	movff	___fltol@f1,?___fltol
 12794  004C00  C053  F053         	movff	___fltol@f1+1,?___fltol+1
 12795  004C04  C054  F054         	movff	___fltol@f1+2,?___fltol+2
 12796  004C08  C055  F055         	movff	___fltol@f1+3,?___fltol+3
 12797  004C0C                     l517:
 12798                           
 12799                           ; BSR set to: 0
 12800  004C0C  0012               	return		;funcret
 12801  004C0E                     __end_of___fltol:
 12802                           	callstack 0
 12803                           
 12804 ;; *************** function ___flmul *****************
 12805 ;; Defined at:
 12806 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
 12807 ;; Parameters:    Size  Location     Type
 12808 ;;  b               4   44[COMRAM] long 
 12809 ;;  a               4   48[COMRAM] long 
 12810 ;; Auto vars:     Size  Location     Type
 12811 ;;  prod            4   63[COMRAM] struct .
 12812 ;;  grs             4   58[COMRAM] unsigned long 
 12813 ;;  temp            2   67[COMRAM] struct .
 12814 ;;  bexp            1   62[COMRAM] unsigned char 
 12815 ;;  aexp            1   57[COMRAM] unsigned char 
 12816 ;;  sign            1   56[COMRAM] unsigned char 
 12817 ;; Return value:  Size  Location     Type
 12818 ;;                  4   44[COMRAM] unsigned char 
 12819 ;; Registers used:
 12820 ;;		wreg, status,2, status,0, prodl, prodh
 12821 ;; Tracked objects:
 12822 ;;		On entry : 0/0
 12823 ;;		On exit  : 0/0
 12824 ;;		Unchanged: 0/0
 12825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12826 ;;      Params:         8       0       0       0       0       0       0       0       0
 12827 ;;      Locals:        13       0       0       0       0       0       0       0       0
 12828 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12829 ;;      Totals:        25       0       0       0       0       0       0       0       0
 12830 ;;Total ram usage:       25 bytes
 12831 ;; Hardware stack levels used: 1
 12832 ;; Hardware stack levels required when called: 2
 12833 ;; This function calls:
 12834 ;;		Nothing
 12835 ;; This function is called by:
 12836 ;;		_main
 12837 ;;		_PWM1_Init
 12838 ;;		_PWM1_Set_Duty
 12839 ;;		_efgtoa
 12840 ;;		_strtof
 12841 ;;		_PWM2_Init
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           	psect	text52
 12846  0034A4                     __ptext52:
 12847                           	callstack 0
 12848  0034A4                     ___flmul:
 12849                           	callstack 24
 12850  0034A4  5030               	movf	(___flmul@b+3)^0,w,c
 12851  0034A6  0B80               	andlw	128
 12852  0034A8  6E39               	movwf	___flmul@sign^0,c
 12853  0034AA  5030               	movf	(___flmul@b+3)^0,w,c
 12854  0034AC  2430               	addwf	(___flmul@b+3)^0,w,c
 12855  0034AE  6E3F               	movwf	___flmul@bexp^0,c
 12856  0034B0  AE2F               	btfss	(___flmul@b+2)^0,7,c
 12857  0034B2  EF5D  F01A         	goto	u8681
 12858  0034B6  EF5F  F01A         	goto	u8680
 12859  0034BA                     u8681:
 12860  0034BA  EF60  F01A         	goto	l6815
 12861  0034BE                     u8680:
 12862  0034BE  803F               	bsf	___flmul@bexp^0,0,c
 12863  0034C0                     l6815:
 12864  0034C0  503F               	movf	___flmul@bexp^0,w,c
 12865  0034C2  B4D8               	btfsc	status,2,c
 12866  0034C4  EF66  F01A         	goto	u8691
 12867  0034C8  EF68  F01A         	goto	u8690
 12868  0034CC                     u8691:
 12869  0034CC  EF7B  F01A         	goto	l6823
 12870  0034D0                     u8690:
 12871  0034D0  283F               	incf	___flmul@bexp^0,w,c
 12872  0034D2  A4D8               	btfss	status,2,c
 12873  0034D4  EF6E  F01A         	goto	u8701
 12874  0034D8  EF70  F01A         	goto	u8700
 12875  0034DC                     u8701:
 12876  0034DC  EF78  F01A         	goto	l6821
 12877  0034E0                     u8700:
 12878  0034E0  0E00               	movlw	0
 12879  0034E2  6E2D               	movwf	___flmul@b^0,c
 12880  0034E4  0E00               	movlw	0
 12881  0034E6  6E2E               	movwf	(___flmul@b+1)^0,c
 12882  0034E8  0E00               	movlw	0
 12883  0034EA  6E2F               	movwf	(___flmul@b+2)^0,c
 12884  0034EC  0E00               	movlw	0
 12885  0034EE  6E30               	movwf	(___flmul@b+3)^0,c
 12886  0034F0                     l6821:
 12887  0034F0  8E2F               	bsf	(___flmul@b+2)^0,7,c
 12888  0034F2  EF83  F01A         	goto	l6825
 12889  0034F6                     l6823:
 12890  0034F6  0E00               	movlw	0
 12891  0034F8  6E2D               	movwf	___flmul@b^0,c
 12892  0034FA  0E00               	movlw	0
 12893  0034FC  6E2E               	movwf	(___flmul@b+1)^0,c
 12894  0034FE  0E00               	movlw	0
 12895  003500  6E2F               	movwf	(___flmul@b+2)^0,c
 12896  003502  0E00               	movlw	0
 12897  003504  6E30               	movwf	(___flmul@b+3)^0,c
 12898  003506                     l6825:
 12899  003506  5034               	movf	(___flmul@a+3)^0,w,c
 12900  003508  0B80               	andlw	128
 12901  00350A  1A39               	xorwf	___flmul@sign^0,f,c
 12902  00350C  5034               	movf	(___flmul@a+3)^0,w,c
 12903  00350E  2434               	addwf	(___flmul@a+3)^0,w,c
 12904  003510  6E3A               	movwf	___flmul@aexp^0,c
 12905  003512  AE33               	btfss	(___flmul@a+2)^0,7,c
 12906  003514  EF8E  F01A         	goto	u8711
 12907  003518  EF90  F01A         	goto	u8710
 12908  00351C                     u8711:
 12909  00351C  EF91  F01A         	goto	l6833
 12910  003520                     u8710:
 12911  003520  803A               	bsf	___flmul@aexp^0,0,c
 12912  003522                     l6833:
 12913  003522  503A               	movf	___flmul@aexp^0,w,c
 12914  003524  B4D8               	btfsc	status,2,c
 12915  003526  EF97  F01A         	goto	u8721
 12916  00352A  EF99  F01A         	goto	u8720
 12917  00352E                     u8721:
 12918  00352E  EFAC  F01A         	goto	l6841
 12919  003532                     u8720:
 12920  003532  283A               	incf	___flmul@aexp^0,w,c
 12921  003534  A4D8               	btfss	status,2,c
 12922  003536  EF9F  F01A         	goto	u8731
 12923  00353A  EFA1  F01A         	goto	u8730
 12924  00353E                     u8731:
 12925  00353E  EFA9  F01A         	goto	l6839
 12926  003542                     u8730:
 12927  003542  0E00               	movlw	0
 12928  003544  6E31               	movwf	___flmul@a^0,c
 12929  003546  0E00               	movlw	0
 12930  003548  6E32               	movwf	(___flmul@a+1)^0,c
 12931  00354A  0E00               	movlw	0
 12932  00354C  6E33               	movwf	(___flmul@a+2)^0,c
 12933  00354E  0E00               	movlw	0
 12934  003550  6E34               	movwf	(___flmul@a+3)^0,c
 12935  003552                     l6839:
 12936  003552  8E33               	bsf	(___flmul@a+2)^0,7,c
 12937  003554  EFB4  F01A         	goto	l834
 12938  003558                     l6841:
 12939  003558  0E00               	movlw	0
 12940  00355A  6E31               	movwf	___flmul@a^0,c
 12941  00355C  0E00               	movlw	0
 12942  00355E  6E32               	movwf	(___flmul@a+1)^0,c
 12943  003560  0E00               	movlw	0
 12944  003562  6E33               	movwf	(___flmul@a+2)^0,c
 12945  003564  0E00               	movlw	0
 12946  003566  6E34               	movwf	(___flmul@a+3)^0,c
 12947  003568                     l834:
 12948  003568  503A               	movf	___flmul@aexp^0,w,c
 12949  00356A  B4D8               	btfsc	status,2,c
 12950  00356C  EFBA  F01A         	goto	u8741
 12951  003570  EFBC  F01A         	goto	u8740
 12952  003574                     u8741:
 12953  003574  EFC4  F01A         	goto	l6845
 12954  003578                     u8740:
 12955  003578  503F               	movf	___flmul@bexp^0,w,c
 12956  00357A  A4D8               	btfss	status,2,c
 12957  00357C  EFC2  F01A         	goto	u8751
 12958  003580  EFC4  F01A         	goto	u8750
 12959  003584                     u8751:
 12960  003584  EFCE  F01A         	goto	l6849
 12961  003588                     u8750:
 12962  003588                     l6845:
 12963  003588  0E00               	movlw	0
 12964  00358A  6E2D               	movwf	?___flmul^0,c
 12965  00358C  0E00               	movlw	0
 12966  00358E  6E2E               	movwf	(?___flmul+1)^0,c
 12967  003590  0E00               	movlw	0
 12968  003592  6E2F               	movwf	(?___flmul+2)^0,c
 12969  003594  0E00               	movlw	0
 12970  003596  6E30               	movwf	(?___flmul+3)^0,c
 12971  003598  EF66  F01C         	goto	l838
 12972  00359C                     l6849:
 12973  00359C  5033               	movf	(___flmul@a+2)^0,w,c
 12974  00359E  022D               	mulwf	___flmul@b^0,c
 12975  0035A0  CFF3 F044          	movff	prodl,___flmul@temp
 12976  0035A4  CFF4 F045          	movff	prodh,___flmul@temp+1
 12977  0035A8  5044               	movf	___flmul@temp^0,w,c
 12978  0035AA  6E3B               	movwf	___flmul@grs^0,c
 12979  0035AC  6A3C               	clrf	(___flmul@grs+1)^0,c
 12980  0035AE  6A3D               	clrf	(___flmul@grs+2)^0,c
 12981  0035B0  6A3E               	clrf	(___flmul@grs+3)^0,c
 12982  0035B2  5045               	movf	(___flmul@temp+1)^0,w,c
 12983  0035B4  6E40               	movwf	___flmul@prod^0,c
 12984  0035B6  6A41               	clrf	(___flmul@prod+1)^0,c
 12985  0035B8  6A42               	clrf	(___flmul@prod+2)^0,c
 12986  0035BA  6A43               	clrf	(___flmul@prod+3)^0,c
 12987  0035BC  5032               	movf	(___flmul@a+1)^0,w,c
 12988  0035BE  022E               	mulwf	(___flmul@b+1)^0,c
 12989  0035C0  CFF3 F044          	movff	prodl,___flmul@temp
 12990  0035C4  CFF4 F045          	movff	prodh,___flmul@temp+1
 12991  0035C8  5044               	movf	___flmul@temp^0,w,c
 12992  0035CA  263B               	addwf	___flmul@grs^0,f,c
 12993  0035CC  0E00               	movlw	0
 12994  0035CE  223C               	addwfc	(___flmul@grs+1)^0,f,c
 12995  0035D0  223D               	addwfc	(___flmul@grs+2)^0,f,c
 12996  0035D2  223E               	addwfc	(___flmul@grs+3)^0,f,c
 12997  0035D4  5045               	movf	(___flmul@temp+1)^0,w,c
 12998  0035D6  2640               	addwf	___flmul@prod^0,f,c
 12999  0035D8  0E00               	movlw	0
 13000  0035DA  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13001  0035DC  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13002  0035DE  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13003  0035E0  5031               	movf	___flmul@a^0,w,c
 13004  0035E2  022F               	mulwf	(___flmul@b+2)^0,c
 13005  0035E4  CFF3 F044          	movff	prodl,___flmul@temp
 13006  0035E8  CFF4 F045          	movff	prodh,___flmul@temp+1
 13007  0035EC  5044               	movf	___flmul@temp^0,w,c
 13008  0035EE  263B               	addwf	___flmul@grs^0,f,c
 13009  0035F0  0E00               	movlw	0
 13010  0035F2  223C               	addwfc	(___flmul@grs+1)^0,f,c
 13011  0035F4  223D               	addwfc	(___flmul@grs+2)^0,f,c
 13012  0035F6  223E               	addwfc	(___flmul@grs+3)^0,f,c
 13013  0035F8  5045               	movf	(___flmul@temp+1)^0,w,c
 13014  0035FA  2640               	addwf	___flmul@prod^0,f,c
 13015  0035FC  0E00               	movlw	0
 13016  0035FE  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13017  003600  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13018  003602  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13019  003604  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 13020  003608  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 13021  00360C  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 13022  003610  6A3B               	clrf	___flmul@grs^0,c
 13023  003612  5031               	movf	___flmul@a^0,w,c
 13024  003614  022E               	mulwf	(___flmul@b+1)^0,c
 13025  003616  CFF3 F044          	movff	prodl,___flmul@temp
 13026  00361A  CFF4 F045          	movff	prodh,___flmul@temp+1
 13027  00361E  5044               	movf	___flmul@temp^0,w,c
 13028  003620  263B               	addwf	___flmul@grs^0,f,c
 13029  003622  5045               	movf	(___flmul@temp+1)^0,w,c
 13030  003624  223C               	addwfc	(___flmul@grs+1)^0,f,c
 13031  003626  0E00               	movlw	0
 13032  003628  223D               	addwfc	(___flmul@grs+2)^0,f,c
 13033  00362A  0E00               	movlw	0
 13034  00362C  223E               	addwfc	(___flmul@grs+3)^0,f,c
 13035  00362E  5032               	movf	(___flmul@a+1)^0,w,c
 13036  003630  022D               	mulwf	___flmul@b^0,c
 13037  003632  CFF3 F044          	movff	prodl,___flmul@temp
 13038  003636  CFF4 F045          	movff	prodh,___flmul@temp+1
 13039  00363A  5044               	movf	___flmul@temp^0,w,c
 13040  00363C  263B               	addwf	___flmul@grs^0,f,c
 13041  00363E  5045               	movf	(___flmul@temp+1)^0,w,c
 13042  003640  223C               	addwfc	(___flmul@grs+1)^0,f,c
 13043  003642  0E00               	movlw	0
 13044  003644  223D               	addwfc	(___flmul@grs+2)^0,f,c
 13045  003646  0E00               	movlw	0
 13046  003648  223E               	addwfc	(___flmul@grs+3)^0,f,c
 13047  00364A  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 13048  00364E  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 13049  003652  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 13050  003656  6A3B               	clrf	___flmul@grs^0,c
 13051  003658  5031               	movf	___flmul@a^0,w,c
 13052  00365A  022D               	mulwf	___flmul@b^0,c
 13053  00365C  CFF3 F044          	movff	prodl,___flmul@temp
 13054  003660  CFF4 F045          	movff	prodh,___flmul@temp+1
 13055  003664  5044               	movf	___flmul@temp^0,w,c
 13056  003666  263B               	addwf	___flmul@grs^0,f,c
 13057  003668  5045               	movf	(___flmul@temp+1)^0,w,c
 13058  00366A  223C               	addwfc	(___flmul@grs+1)^0,f,c
 13059  00366C  0E00               	movlw	0
 13060  00366E  223D               	addwfc	(___flmul@grs+2)^0,f,c
 13061  003670  0E00               	movlw	0
 13062  003672  223E               	addwfc	(___flmul@grs+3)^0,f,c
 13063  003674  5033               	movf	(___flmul@a+2)^0,w,c
 13064  003676  022E               	mulwf	(___flmul@b+1)^0,c
 13065  003678  CFF3 F044          	movff	prodl,___flmul@temp
 13066  00367C  CFF4 F045          	movff	prodh,___flmul@temp+1
 13067  003680  5044               	movf	___flmul@temp^0,w,c
 13068  003682  2640               	addwf	___flmul@prod^0,f,c
 13069  003684  5045               	movf	(___flmul@temp+1)^0,w,c
 13070  003686  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13071  003688  0E00               	movlw	0
 13072  00368A  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13073  00368C  0E00               	movlw	0
 13074  00368E  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13075  003690  5032               	movf	(___flmul@a+1)^0,w,c
 13076  003692  022F               	mulwf	(___flmul@b+2)^0,c
 13077  003694  CFF3 F044          	movff	prodl,___flmul@temp
 13078  003698  CFF4 F045          	movff	prodh,___flmul@temp+1
 13079  00369C  5044               	movf	___flmul@temp^0,w,c
 13080  00369E  2640               	addwf	___flmul@prod^0,f,c
 13081  0036A0  5045               	movf	(___flmul@temp+1)^0,w,c
 13082  0036A2  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13083  0036A4  0E00               	movlw	0
 13084  0036A6  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13085  0036A8  0E00               	movlw	0
 13086  0036AA  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13087  0036AC  5033               	movf	(___flmul@a+2)^0,w,c
 13088  0036AE  022F               	mulwf	(___flmul@b+2)^0,c
 13089  0036B0  CFF3 F044          	movff	prodl,___flmul@temp
 13090  0036B4  CFF4 F045          	movff	prodh,___flmul@temp+1
 13091  0036B8  5044               	movf	___flmul@temp^0,w,c
 13092  0036BA  6E35               	movwf	??___flmul^0,c
 13093  0036BC  5045               	movf	(___flmul@temp+1)^0,w,c
 13094  0036BE  6E36               	movwf	(??___flmul+1)^0,c
 13095  0036C0  6A37               	clrf	(??___flmul+2)^0,c
 13096  0036C2  6A38               	clrf	(??___flmul+3)^0,c
 13097  0036C4  C037  F038         	movff	??___flmul+2,??___flmul+3
 13098  0036C8  C036  F037         	movff	??___flmul+1,??___flmul+2
 13099  0036CC  C035  F036         	movff	??___flmul,??___flmul+1
 13100  0036D0  6A35               	clrf	??___flmul^0,c
 13101  0036D2  5035               	movf	??___flmul^0,w,c
 13102  0036D4  2640               	addwf	___flmul@prod^0,f,c
 13103  0036D6  5036               	movf	(??___flmul+1)^0,w,c
 13104  0036D8  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13105  0036DA  5037               	movf	(??___flmul+2)^0,w,c
 13106  0036DC  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13107  0036DE  5038               	movf	(??___flmul+3)^0,w,c
 13108  0036E0  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13109  0036E2  C03B  F035         	movff	___flmul@grs,??___flmul
 13110  0036E6  C03C  F036         	movff	___flmul@grs+1,??___flmul+1
 13111  0036EA  C03D  F037         	movff	___flmul@grs+2,??___flmul+2
 13112  0036EE  C03E  F038         	movff	___flmul@grs+3,??___flmul+3
 13113  0036F2  0E19               	movlw	25
 13114  0036F4  EF81  F01B         	goto	u8760
 13115  0036F8                     u8765:
 13116  0036F8  90D8               	bcf	status,0,c
 13117  0036FA  3238               	rrcf	(??___flmul+3)^0,f,c
 13118  0036FC  3237               	rrcf	(??___flmul+2)^0,f,c
 13119  0036FE  3236               	rrcf	(??___flmul+1)^0,f,c
 13120  003700  3235               	rrcf	??___flmul^0,f,c
 13121  003702                     u8760:
 13122  003702  2EE8               	decfsz	wreg,f,c
 13123  003704  EF7C  F01B         	goto	u8765
 13124  003708  5035               	movf	??___flmul^0,w,c
 13125  00370A  2640               	addwf	___flmul@prod^0,f,c
 13126  00370C  5036               	movf	(??___flmul+1)^0,w,c
 13127  00370E  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13128  003710  5037               	movf	(??___flmul+2)^0,w,c
 13129  003712  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13130  003714  5038               	movf	(??___flmul+3)^0,w,c
 13131  003716  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13132  003718  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 13133  00371C  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 13134  003720  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 13135  003724  6A3B               	clrf	___flmul@grs^0,c
 13136  003726  503A               	movf	___flmul@aexp^0,w,c
 13137  003728  C03F  F035         	movff	___flmul@bexp,??___flmul
 13138  00372C  6A36               	clrf	(??___flmul+1)^0,c
 13139  00372E  2635               	addwf	??___flmul^0,f,c
 13140  003730  0E00               	movlw	0
 13141  003732  2236               	addwfc	(??___flmul+1)^0,f,c
 13142  003734  0E82               	movlw	130
 13143  003736  2435               	addwf	??___flmul^0,w,c
 13144  003738  6E44               	movwf	___flmul@temp^0,c
 13145  00373A  0EFF               	movlw	255
 13146  00373C  2036               	addwfc	(??___flmul+1)^0,w,c
 13147  00373E  6E45               	movwf	(___flmul@temp+1)^0,c
 13148  003740  EFB7  F01B         	goto	l6897
 13149  003744                     l6891:
 13150  003744  90D8               	bcf	status,0,c
 13151  003746  3640               	rlcf	___flmul@prod^0,f,c
 13152  003748  3641               	rlcf	(___flmul@prod+1)^0,f,c
 13153  00374A  3642               	rlcf	(___flmul@prod+2)^0,f,c
 13154  00374C  3643               	rlcf	(___flmul@prod+3)^0,f,c
 13155  00374E  AE3E               	btfss	(___flmul@grs+3)^0,7,c
 13156  003750  EFAC  F01B         	goto	u8771
 13157  003754  EFAE  F01B         	goto	u8770
 13158  003758                     u8771:
 13159  003758  EFAF  F01B         	goto	l841
 13160  00375C                     u8770:
 13161  00375C  8040               	bsf	___flmul@prod^0,0,c
 13162  00375E                     l841:
 13163  00375E  90D8               	bcf	status,0,c
 13164  003760  363B               	rlcf	___flmul@grs^0,f,c
 13165  003762  363C               	rlcf	(___flmul@grs+1)^0,f,c
 13166  003764  363D               	rlcf	(___flmul@grs+2)^0,f,c
 13167  003766  363E               	rlcf	(___flmul@grs+3)^0,f,c
 13168  003768  0644               	decf	___flmul@temp^0,f,c
 13169  00376A  A0D8               	btfss	status,0,c
 13170  00376C  0645               	decf	(___flmul@temp+1)^0,f,c
 13171  00376E                     l6897:
 13172  00376E  AE42               	btfss	(___flmul@prod+2)^0,7,c
 13173  003770  EFBC  F01B         	goto	u8781
 13174  003774  EFBE  F01B         	goto	u8780
 13175  003778                     u8781:
 13176  003778  EFA2  F01B         	goto	l6891
 13177  00377C                     u8780:
 13178  00377C  0E00               	movlw	0
 13179  00377E  6E3A               	movwf	___flmul@aexp^0,c
 13180  003780  AE3E               	btfss	(___flmul@grs+3)^0,7,c
 13181  003782  EFC5  F01B         	goto	u8791
 13182  003786  EFC7  F01B         	goto	u8790
 13183  00378A                     u8791:
 13184  00378A  EFEB  F01B         	goto	l843
 13185  00378E                     u8790:
 13186  00378E  0EFF               	movlw	255
 13187  003790  143B               	andwf	___flmul@grs^0,w,c
 13188  003792  6E35               	movwf	??___flmul^0,c
 13189  003794  0EFF               	movlw	255
 13190  003796  143C               	andwf	(___flmul@grs+1)^0,w,c
 13191  003798  6E36               	movwf	(??___flmul+1)^0,c
 13192  00379A  0EFF               	movlw	255
 13193  00379C  143D               	andwf	(___flmul@grs+2)^0,w,c
 13194  00379E  6E37               	movwf	(??___flmul+2)^0,c
 13195  0037A0  0E7F               	movlw	127
 13196  0037A2  143E               	andwf	(___flmul@grs+3)^0,w,c
 13197  0037A4  6E38               	movwf	(??___flmul+3)^0,c
 13198  0037A6  5035               	movf	??___flmul^0,w,c
 13199  0037A8  1036               	iorwf	(??___flmul+1)^0,w,c
 13200  0037AA  1037               	iorwf	(??___flmul+2)^0,w,c
 13201  0037AC  1038               	iorwf	(??___flmul+3)^0,w,c
 13202  0037AE  B4D8               	btfsc	status,2,c
 13203  0037B0  EFDC  F01B         	goto	u8801
 13204  0037B4  EFDE  F01B         	goto	u8800
 13205  0037B8                     u8801:
 13206  0037B8  EFE2  F01B         	goto	l844
 13207  0037BC                     u8800:
 13208  0037BC                     l6905:
 13209  0037BC  0E01               	movlw	1
 13210  0037BE  6E3A               	movwf	___flmul@aexp^0,c
 13211  0037C0  EFEB  F01B         	goto	l843
 13212  0037C4                     l844:
 13213  0037C4  A040               	btfss	___flmul@prod^0,0,c
 13214  0037C6  EFE7  F01B         	goto	u8811
 13215  0037CA  EFE9  F01B         	goto	u8810
 13216  0037CE                     u8811:
 13217  0037CE  EFEB  F01B         	goto	l843
 13218  0037D2                     u8810:
 13219  0037D2  EFDE  F01B         	goto	l6905
 13220  0037D6                     l843:
 13221  0037D6  503A               	movf	___flmul@aexp^0,w,c
 13222  0037D8  B4D8               	btfsc	status,2,c
 13223  0037DA  EFF1  F01B         	goto	u8821
 13224  0037DE  EFF3  F01B         	goto	u8820
 13225  0037E2                     u8821:
 13226  0037E2  EF17  F01C         	goto	l6917
 13227  0037E6                     u8820:
 13228  0037E6  0E01               	movlw	1
 13229  0037E8  2640               	addwf	___flmul@prod^0,f,c
 13230  0037EA  0E00               	movlw	0
 13231  0037EC  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13232  0037EE  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13233  0037F0  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13234  0037F2  A043               	btfss	(___flmul@prod+3)^0,0,c
 13235  0037F4  EFFE  F01B         	goto	u8831
 13236  0037F8  EF00  F01C         	goto	u8830
 13237  0037FC                     u8831:
 13238  0037FC  EF17  F01C         	goto	l6917
 13239  003800                     u8830:
 13240  003800  C040  F035         	movff	___flmul@prod,??___flmul
 13241  003804  C041  F036         	movff	___flmul@prod+1,??___flmul+1
 13242  003808  C042  F037         	movff	___flmul@prod+2,??___flmul+2
 13243  00380C  C043  F038         	movff	___flmul@prod+3,??___flmul+3
 13244  003810  3438               	rlcf	(??___flmul+3)^0,w,c
 13245  003812  3238               	rrcf	(??___flmul+3)^0,f,c
 13246  003814  3237               	rrcf	(??___flmul+2)^0,f,c
 13247  003816  3236               	rrcf	(??___flmul+1)^0,f,c
 13248  003818  3235               	rrcf	??___flmul^0,f,c
 13249  00381A  C035  F040         	movff	??___flmul,___flmul@prod
 13250  00381E  C036  F041         	movff	??___flmul+1,___flmul@prod+1
 13251  003822  C037  F042         	movff	??___flmul+2,___flmul@prod+2
 13252  003826  C038  F043         	movff	??___flmul+3,___flmul@prod+3
 13253  00382A  4A44               	infsnz	___flmul@temp^0,f,c
 13254  00382C  2A45               	incf	(___flmul@temp+1)^0,f,c
 13255  00382E                     l6917:
 13256  00382E  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 13257  003830  EF22  F01C         	goto	u8841
 13258  003834  5045               	movf	(___flmul@temp+1)^0,w,c
 13259  003836  E108               	bnz	u8840
 13260  003838  2844               	incf	___flmul@temp^0,w,c
 13261  00383A  A0D8               	btfss	status,0,c
 13262  00383C  EF22  F01C         	goto	u8841
 13263  003840  EF24  F01C         	goto	u8840
 13264  003844                     u8841:
 13265  003844  EF2E  F01C         	goto	l6921
 13266  003848                     u8840:
 13267  003848  0E00               	movlw	0
 13268  00384A  6E40               	movwf	___flmul@prod^0,c
 13269  00384C  0E00               	movlw	0
 13270  00384E  6E41               	movwf	(___flmul@prod+1)^0,c
 13271  003850  0E80               	movlw	128
 13272  003852  6E42               	movwf	(___flmul@prod+2)^0,c
 13273  003854  0E7F               	movlw	127
 13274  003856  6E43               	movwf	(___flmul@prod+3)^0,c
 13275  003858  EF5C  F01C         	goto	l6933
 13276  00385C                     l6921:
 13277  00385C  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 13278  00385E  EF3B  F01C         	goto	u8850
 13279  003862  5045               	movf	(___flmul@temp+1)^0,w,c
 13280  003864  E106               	bnz	u8851
 13281  003866  0444               	decf	___flmul@temp^0,w,c
 13282  003868  B0D8               	btfsc	status,0,c
 13283  00386A  EF39  F01C         	goto	u8851
 13284  00386E  EF3B  F01C         	goto	u8850
 13285  003872                     u8851:
 13286  003872  EF47  F01C         	goto	l851
 13287  003876                     u8850:
 13288  003876  0E00               	movlw	0
 13289  003878  6E40               	movwf	___flmul@prod^0,c
 13290  00387A  0E00               	movlw	0
 13291  00387C  6E41               	movwf	(___flmul@prod+1)^0,c
 13292  00387E  0E00               	movlw	0
 13293  003880  6E42               	movwf	(___flmul@prod+2)^0,c
 13294  003882  0E00               	movlw	0
 13295  003884  6E43               	movwf	(___flmul@prod+3)^0,c
 13296  003886  0E00               	movlw	0
 13297  003888  6E39               	movwf	___flmul@sign^0,c
 13298  00388A  EF5C  F01C         	goto	l6933
 13299  00388E                     l851:
 13300  00388E  C044  F03F         	movff	___flmul@temp,___flmul@bexp
 13301  003892  0EFF               	movlw	255
 13302  003894  1640               	andwf	___flmul@prod^0,f,c
 13303  003896  0EFF               	movlw	255
 13304  003898  1641               	andwf	(___flmul@prod+1)^0,f,c
 13305  00389A  0E7F               	movlw	127
 13306  00389C  1642               	andwf	(___flmul@prod+2)^0,f,c
 13307  00389E  0E00               	movlw	0
 13308  0038A0  1643               	andwf	(___flmul@prod+3)^0,f,c
 13309  0038A2  A03F               	btfss	___flmul@bexp^0,0,c
 13310  0038A4  EF56  F01C         	goto	u8861
 13311  0038A8  EF58  F01C         	goto	u8860
 13312  0038AC                     u8861:
 13313  0038AC  EF59  F01C         	goto	l6931
 13314  0038B0                     u8860:
 13315  0038B0  8E42               	bsf	(___flmul@prod+2)^0,7,c
 13316  0038B2                     l6931:
 13317  0038B2  90D8               	bcf	status,0,c
 13318  0038B4  303F               	rrcf	___flmul@bexp^0,w,c
 13319  0038B6  6E43               	movwf	(___flmul@prod+3)^0,c
 13320  0038B8                     l6933:
 13321  0038B8  5039               	movf	___flmul@sign^0,w,c
 13322  0038BA  1243               	iorwf	(___flmul@prod+3)^0,f,c
 13323  0038BC  C040  F02D         	movff	___flmul@prod,?___flmul
 13324  0038C0  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
 13325  0038C4  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
 13326  0038C8  C043  F030         	movff	___flmul@prod+3,?___flmul+3
 13327  0038CC                     l838:
 13328  0038CC  0012               	return		;funcret
 13329  0038CE                     __end_of___flmul:
 13330                           	callstack 0
 13331                           
 13332 ;; *************** function ___fldiv *****************
 13333 ;; Defined at:
 13334 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
 13335 ;; Parameters:    Size  Location     Type
 13336 ;;  b               4   69[COMRAM] unsigned char 
 13337 ;;  a               4   73[COMRAM] unsigned char 
 13338 ;; Auto vars:     Size  Location     Type
 13339 ;;  grs             4    7[BANK0 ] unsigned long 
 13340 ;;  rem             4    0[BANK0 ] unsigned long 
 13341 ;;  new_exp         2    5[BANK0 ] short 
 13342 ;;  aexp            1   12[BANK0 ] unsigned char 
 13343 ;;  bexp            1   11[BANK0 ] unsigned char 
 13344 ;;  sign            1    4[BANK0 ] unsigned char 
 13345 ;; Return value:  Size  Location     Type
 13346 ;;                  4   69[COMRAM] unsigned char 
 13347 ;; Registers used:
 13348 ;;		wreg, status,2, status,0
 13349 ;; Tracked objects:
 13350 ;;		On entry : 0/0
 13351 ;;		On exit  : 0/0
 13352 ;;		Unchanged: 0/0
 13353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13354 ;;      Params:         8       0       0       0       0       0       0       0       0
 13355 ;;      Locals:         0      13       0       0       0       0       0       0       0
 13356 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13357 ;;      Totals:        12      13       0       0       0       0       0       0       0
 13358 ;;Total ram usage:       25 bytes
 13359 ;; Hardware stack levels used: 1
 13360 ;; Hardware stack levels required when called: 2
 13361 ;; This function calls:
 13362 ;;		Nothing
 13363 ;; This function is called by:
 13364 ;;		_PWM1_Init
 13365 ;;		_PWM1_Set_Duty
 13366 ;;		_efgtoa
 13367 ;;		_strtof
 13368 ;;		_PWM2_Init
 13369 ;; This function uses a non-reentrant model
 13370 ;;
 13371                           
 13372                           	psect	text53
 13373  0038CE                     __ptext53:
 13374                           	callstack 0
 13375  0038CE                     ___fldiv:
 13376                           	callstack 24
 13377  0038CE  5049               	movf	(___fldiv@b+3)^0,w,c
 13378  0038D0  0B80               	andlw	128
 13379  0038D2  0100               	movlb	0	; () banked
 13380  0038D4  6F64               	movwf	___fldiv@sign& (0+255),b
 13381  0038D6  5049               	movf	(___fldiv@b+3)^0,w,c
 13382  0038D8  2449               	addwf	(___fldiv@b+3)^0,w,c
 13383  0038DA  6F6B               	movwf	___fldiv@bexp& (0+255),b
 13384  0038DC                     
 13385                           ; BSR set to: 0
 13386  0038DC  AE48               	btfss	(___fldiv@b+2)^0,7,c
 13387  0038DE  EF73  F01C         	goto	u8451
 13388  0038E2  EF75  F01C         	goto	u8450
 13389  0038E6                     u8451:
 13390  0038E6  EF76  F01C         	goto	l6677
 13391  0038EA                     u8450:
 13392  0038EA                     
 13393                           ; BSR set to: 0
 13394  0038EA  816B               	bsf	___fldiv@bexp& (0+255),0,b
 13395  0038EC                     l6677:
 13396                           
 13397                           ; BSR set to: 0
 13398  0038EC  516B               	movf	___fldiv@bexp& (0+255),w,b
 13399  0038EE  B4D8               	btfsc	status,2,c
 13400  0038F0  EF7C  F01C         	goto	u8461
 13401  0038F4  EF7E  F01C         	goto	u8460
 13402  0038F8                     u8461:
 13403  0038F8  EF93  F01C         	goto	l6687
 13404  0038FC                     u8460:
 13405  0038FC                     
 13406                           ; BSR set to: 0
 13407  0038FC  296B               	incf	___fldiv@bexp& (0+255),w,b
 13408  0038FE  A4D8               	btfss	status,2,c
 13409  003900  EF84  F01C         	goto	u8471
 13410  003904  EF86  F01C         	goto	u8470
 13411  003908                     u8471:
 13412  003908  EF8E  F01C         	goto	l6683
 13413  00390C                     u8470:
 13414  00390C                     
 13415                           ; BSR set to: 0
 13416  00390C  0E00               	movlw	0
 13417  00390E  6E46               	movwf	___fldiv@b^0,c
 13418  003910  0E00               	movlw	0
 13419  003912  6E47               	movwf	(___fldiv@b+1)^0,c
 13420  003914  0E00               	movlw	0
 13421  003916  6E48               	movwf	(___fldiv@b+2)^0,c
 13422  003918  0E00               	movlw	0
 13423  00391A  6E49               	movwf	(___fldiv@b+3)^0,c
 13424  00391C                     l6683:
 13425                           
 13426                           ; BSR set to: 0
 13427  00391C  8E48               	bsf	(___fldiv@b+2)^0,7,c
 13428  00391E                     
 13429                           ; BSR set to: 0
 13430  00391E  0E00               	movlw	0
 13431  003920  6E49               	movwf	(___fldiv@b+3)^0,c
 13432  003922  EF9B  F01C         	goto	l6689
 13433  003926                     l6687:
 13434                           
 13435                           ; BSR set to: 0
 13436  003926  0E00               	movlw	0
 13437  003928  6E46               	movwf	___fldiv@b^0,c
 13438  00392A  0E00               	movlw	0
 13439  00392C  6E47               	movwf	(___fldiv@b+1)^0,c
 13440  00392E  0E00               	movlw	0
 13441  003930  6E48               	movwf	(___fldiv@b+2)^0,c
 13442  003932  0E00               	movlw	0
 13443  003934  6E49               	movwf	(___fldiv@b+3)^0,c
 13444  003936                     l6689:
 13445                           
 13446                           ; BSR set to: 0
 13447  003936  504D               	movf	(___fldiv@a+3)^0,w,c
 13448  003938  0B80               	andlw	128
 13449  00393A  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 13450  00393C                     
 13451                           ; BSR set to: 0
 13452  00393C  504D               	movf	(___fldiv@a+3)^0,w,c
 13453  00393E  244D               	addwf	(___fldiv@a+3)^0,w,c
 13454  003940  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13455  003942                     
 13456                           ; BSR set to: 0
 13457  003942  AE4C               	btfss	(___fldiv@a+2)^0,7,c
 13458  003944  EFA6  F01C         	goto	u8481
 13459  003948  EFA8  F01C         	goto	u8480
 13460  00394C                     u8481:
 13461  00394C  EFA9  F01C         	goto	l6697
 13462  003950                     u8480:
 13463  003950                     
 13464                           ; BSR set to: 0
 13465  003950  816C               	bsf	___fldiv@aexp& (0+255),0,b
 13466  003952                     l6697:
 13467                           
 13468                           ; BSR set to: 0
 13469  003952  516C               	movf	___fldiv@aexp& (0+255),w,b
 13470  003954  B4D8               	btfsc	status,2,c
 13471  003956  EFAF  F01C         	goto	u8491
 13472  00395A  EFB1  F01C         	goto	u8490
 13473  00395E                     u8491:
 13474  00395E  EFC6  F01C         	goto	l6707
 13475  003962                     u8490:
 13476  003962                     
 13477                           ; BSR set to: 0
 13478  003962  296C               	incf	___fldiv@aexp& (0+255),w,b
 13479  003964  A4D8               	btfss	status,2,c
 13480  003966  EFB7  F01C         	goto	u8501
 13481  00396A  EFB9  F01C         	goto	u8500
 13482  00396E                     u8501:
 13483  00396E  EFC1  F01C         	goto	l6703
 13484  003972                     u8500:
 13485  003972                     
 13486                           ; BSR set to: 0
 13487  003972  0E00               	movlw	0
 13488  003974  6E4A               	movwf	___fldiv@a^0,c
 13489  003976  0E00               	movlw	0
 13490  003978  6E4B               	movwf	(___fldiv@a+1)^0,c
 13491  00397A  0E00               	movlw	0
 13492  00397C  6E4C               	movwf	(___fldiv@a+2)^0,c
 13493  00397E  0E00               	movlw	0
 13494  003980  6E4D               	movwf	(___fldiv@a+3)^0,c
 13495  003982                     l6703:
 13496                           
 13497                           ; BSR set to: 0
 13498  003982  8E4C               	bsf	(___fldiv@a+2)^0,7,c
 13499  003984                     
 13500                           ; BSR set to: 0
 13501  003984  0E00               	movlw	0
 13502  003986  6E4D               	movwf	(___fldiv@a+3)^0,c
 13503  003988  EFCE  F01C         	goto	l6709
 13504  00398C                     l6707:
 13505                           
 13506                           ; BSR set to: 0
 13507  00398C  0E00               	movlw	0
 13508  00398E  6E4A               	movwf	___fldiv@a^0,c
 13509  003990  0E00               	movlw	0
 13510  003992  6E4B               	movwf	(___fldiv@a+1)^0,c
 13511  003994  0E00               	movlw	0
 13512  003996  6E4C               	movwf	(___fldiv@a+2)^0,c
 13513  003998  0E00               	movlw	0
 13514  00399A  6E4D               	movwf	(___fldiv@a+3)^0,c
 13515  00399C                     l6709:
 13516                           
 13517                           ; BSR set to: 0
 13518  00399C  504A               	movf	___fldiv@a^0,w,c
 13519  00399E  104B               	iorwf	(___fldiv@a+1)^0,w,c
 13520  0039A0  104C               	iorwf	(___fldiv@a+2)^0,w,c
 13521  0039A2  104D               	iorwf	(___fldiv@a+3)^0,w,c
 13522  0039A4  A4D8               	btfss	status,2,c
 13523  0039A6  EFD7  F01C         	goto	u8511
 13524  0039AA  EFD9  F01C         	goto	u8510
 13525  0039AE                     u8511:
 13526  0039AE  EFF1  F01C         	goto	l6721
 13527  0039B2                     u8510:
 13528  0039B2                     
 13529                           ; BSR set to: 0
 13530  0039B2  0E00               	movlw	0
 13531  0039B4  6E46               	movwf	___fldiv@b^0,c
 13532  0039B6  0E00               	movlw	0
 13533  0039B8  6E47               	movwf	(___fldiv@b+1)^0,c
 13534  0039BA  0E00               	movlw	0
 13535  0039BC  6E48               	movwf	(___fldiv@b+2)^0,c
 13536  0039BE  0E00               	movlw	0
 13537  0039C0  6E49               	movwf	(___fldiv@b+3)^0,c
 13538  0039C2                     
 13539                           ; BSR set to: 0
 13540  0039C2  0E80               	movlw	128
 13541  0039C4  1248               	iorwf	(___fldiv@b+2)^0,f,c
 13542  0039C6  0E7F               	movlw	127
 13543  0039C8  1249               	iorwf	(___fldiv@b+3)^0,f,c
 13544  0039CA                     l6715:
 13545                           
 13546                           ; BSR set to: 0
 13547  0039CA  5164               	movf	___fldiv@sign& (0+255),w,b
 13548  0039CC  1249               	iorwf	(___fldiv@b+3)^0,f,c
 13549  0039CE                     
 13550                           ; BSR set to: 0
 13551  0039CE  C046  F046         	movff	___fldiv@b,?___fldiv
 13552  0039D2  C047  F047         	movff	___fldiv@b+1,?___fldiv+1
 13553  0039D6  C048  F048         	movff	___fldiv@b+2,?___fldiv+2
 13554  0039DA  C049  F049         	movff	___fldiv@b+3,?___fldiv+3
 13555  0039DE  EF34  F01E         	goto	l802
 13556  0039E2                     l6721:
 13557                           
 13558                           ; BSR set to: 0
 13559  0039E2  516B               	movf	___fldiv@bexp& (0+255),w,b
 13560  0039E4  A4D8               	btfss	status,2,c
 13561  0039E6  EFF7  F01C         	goto	u8521
 13562  0039EA  EFF9  F01C         	goto	u8520
 13563  0039EE                     u8521:
 13564  0039EE  EF03  F01D         	goto	l6729
 13565  0039F2                     u8520:
 13566  0039F2                     
 13567                           ; BSR set to: 0
 13568  0039F2  0E00               	movlw	0
 13569  0039F4  6E46               	movwf	?___fldiv^0,c
 13570  0039F6  0E00               	movlw	0
 13571  0039F8  6E47               	movwf	(?___fldiv+1)^0,c
 13572  0039FA  0E00               	movlw	0
 13573  0039FC  6E48               	movwf	(?___fldiv+2)^0,c
 13574  0039FE  0E00               	movlw	0
 13575  003A00  6E49               	movwf	(?___fldiv+3)^0,c
 13576  003A02  EF34  F01E         	goto	l802
 13577  003A06                     l6729:
 13578                           
 13579                           ; BSR set to: 0
 13580  003A06  516C               	movf	___fldiv@aexp& (0+255),w,b
 13581  003A08  C06B  F04E         	movff	___fldiv@bexp,??___fldiv
 13582  003A0C  6A4F               	clrf	(??___fldiv+1)^0,c
 13583  003A0E  5E4E               	subwf	??___fldiv^0,f,c
 13584  003A10  0E00               	movlw	0
 13585  003A12  5A4F               	subwfb	(??___fldiv+1)^0,f,c
 13586  003A14  0E7F               	movlw	127
 13587  003A16  244E               	addwf	??___fldiv^0,w,c
 13588  003A18  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13589  003A1A  0E00               	movlw	0
 13590  003A1C  204F               	addwfc	(??___fldiv+1)^0,w,c
 13591  003A1E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13592  003A20                     
 13593                           ; BSR set to: 0
 13594  003A20  C046  F060         	movff	___fldiv@b,___fldiv@rem
 13595  003A24  C047  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 13596  003A28  C048  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 13597  003A2C  C049  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 13598  003A30                     
 13599                           ; BSR set to: 0
 13600  003A30  0E00               	movlw	0
 13601  003A32  6E46               	movwf	___fldiv@b^0,c
 13602  003A34  0E00               	movlw	0
 13603  003A36  6E47               	movwf	(___fldiv@b+1)^0,c
 13604  003A38  0E00               	movlw	0
 13605  003A3A  6E48               	movwf	(___fldiv@b+2)^0,c
 13606  003A3C  0E00               	movlw	0
 13607  003A3E  6E49               	movwf	(___fldiv@b+3)^0,c
 13608  003A40                     
 13609                           ; BSR set to: 0
 13610  003A40  0E00               	movlw	0
 13611  003A42  6F67               	movwf	___fldiv@grs& (0+255),b
 13612  003A44  0E00               	movlw	0
 13613  003A46  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 13614  003A48  0E00               	movlw	0
 13615  003A4A  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 13616  003A4C  0E00               	movlw	0
 13617  003A4E  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 13618  003A50                     
 13619                           ; BSR set to: 0
 13620  003A50  0E00               	movlw	0
 13621  003A52  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13622  003A54  EF64  F01D         	goto	l804
 13623  003A58                     l6739:
 13624                           
 13625                           ; BSR set to: 0
 13626  003A58  516C               	movf	___fldiv@aexp& (0+255),w,b
 13627  003A5A  B4D8               	btfsc	status,2,c
 13628  003A5C  EF32  F01D         	goto	u8531
 13629  003A60  EF34  F01D         	goto	u8530
 13630  003A64                     u8531:
 13631  003A64  EF4B  F01D         	goto	l6747
 13632  003A68                     u8530:
 13633  003A68                     
 13634                           ; BSR set to: 0
 13635  003A68  90D8               	bcf	status,0,c
 13636  003A6A  3760               	rlcf	___fldiv@rem& (0+255),f,b
 13637  003A6C  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13638  003A6E  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13639  003A70  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13640  003A72  90D8               	bcf	status,0,c
 13641  003A74  3646               	rlcf	___fldiv@b^0,f,c
 13642  003A76  3647               	rlcf	(___fldiv@b+1)^0,f,c
 13643  003A78  3648               	rlcf	(___fldiv@b+2)^0,f,c
 13644  003A7A  3649               	rlcf	(___fldiv@b+3)^0,f,c
 13645  003A7C                     
 13646                           ; BSR set to: 0
 13647  003A7C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13648  003A7E  EF43  F01D         	goto	u8541
 13649  003A82  EF45  F01D         	goto	u8540
 13650  003A86                     u8541:
 13651  003A86  EF46  F01D         	goto	l807
 13652  003A8A                     u8540:
 13653  003A8A                     
 13654                           ; BSR set to: 0
 13655  003A8A  8046               	bsf	___fldiv@b^0,0,c
 13656  003A8C                     l807:
 13657                           
 13658                           ; BSR set to: 0
 13659  003A8C  90D8               	bcf	status,0,c
 13660  003A8E  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13661  003A90  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13662  003A92  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13663  003A94  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13664  003A96                     l6747:
 13665                           
 13666                           ; BSR set to: 0
 13667  003A96  504A               	movf	___fldiv@a^0,w,c
 13668  003A98  5D60               	subwf	___fldiv@rem& (0+255),w,b
 13669  003A9A  504B               	movf	(___fldiv@a+1)^0,w,c
 13670  003A9C  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13671  003A9E  504C               	movf	(___fldiv@a+2)^0,w,c
 13672  003AA0  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13673  003AA2  504D               	movf	(___fldiv@a+3)^0,w,c
 13674  003AA4  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13675  003AA6  A0D8               	btfss	status,0,c
 13676  003AA8  EF58  F01D         	goto	u8551
 13677  003AAC  EF5A  F01D         	goto	u8550
 13678  003AB0                     u8551:
 13679  003AB0  EF63  F01D         	goto	l6753
 13680  003AB4                     u8550:
 13681  003AB4                     
 13682                           ; BSR set to: 0
 13683  003AB4  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13684  003AB6                     
 13685                           ; BSR set to: 0
 13686  003AB6  504A               	movf	___fldiv@a^0,w,c
 13687  003AB8  5F60               	subwf	___fldiv@rem& (0+255),f,b
 13688  003ABA  504B               	movf	(___fldiv@a+1)^0,w,c
 13689  003ABC  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13690  003ABE  504C               	movf	(___fldiv@a+2)^0,w,c
 13691  003AC0  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13692  003AC2  504D               	movf	(___fldiv@a+3)^0,w,c
 13693  003AC4  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13694  003AC6                     l6753:
 13695                           
 13696                           ; BSR set to: 0
 13697  003AC6  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 13698  003AC8                     l804:
 13699                           
 13700                           ; BSR set to: 0
 13701  003AC8  0E19               	movlw	25
 13702  003ACA  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 13703  003ACC  EF6A  F01D         	goto	u8561
 13704  003AD0  EF6C  F01D         	goto	u8560
 13705  003AD4                     u8561:
 13706  003AD4  EF2C  F01D         	goto	l6739
 13707  003AD8                     u8560:
 13708  003AD8                     
 13709                           ; BSR set to: 0
 13710  003AD8  5160               	movf	___fldiv@rem& (0+255),w,b
 13711  003ADA  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13712  003ADC  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13713  003ADE  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13714  003AE0  B4D8               	btfsc	status,2,c
 13715  003AE2  EF75  F01D         	goto	u8571
 13716  003AE6  EF77  F01D         	goto	u8570
 13717  003AEA                     u8571:
 13718  003AEA  EF8F  F01D         	goto	l6765
 13719  003AEE                     u8570:
 13720  003AEE                     
 13721                           ; BSR set to: 0
 13722  003AEE  8167               	bsf	___fldiv@grs& (0+255),0,b
 13723  003AF0  EF8F  F01D         	goto	l6765
 13724  003AF4                     l6759:
 13725                           
 13726                           ; BSR set to: 0
 13727  003AF4  90D8               	bcf	status,0,c
 13728  003AF6  3646               	rlcf	___fldiv@b^0,f,c
 13729  003AF8  3647               	rlcf	(___fldiv@b+1)^0,f,c
 13730  003AFA  3648               	rlcf	(___fldiv@b+2)^0,f,c
 13731  003AFC  3649               	rlcf	(___fldiv@b+3)^0,f,c
 13732  003AFE                     
 13733                           ; BSR set to: 0
 13734  003AFE  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13735  003B00  EF84  F01D         	goto	u8581
 13736  003B04  EF86  F01D         	goto	u8580
 13737  003B08                     u8581:
 13738  003B08  EF87  F01D         	goto	l813
 13739  003B0C                     u8580:
 13740  003B0C                     
 13741                           ; BSR set to: 0
 13742  003B0C  8046               	bsf	___fldiv@b^0,0,c
 13743  003B0E                     l813:
 13744                           
 13745                           ; BSR set to: 0
 13746  003B0E  90D8               	bcf	status,0,c
 13747  003B10  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13748  003B12  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13749  003B14  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13750  003B16  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13751  003B18  0765               	decf	___fldiv@new_exp& (0+255),f,b
 13752  003B1A  A0D8               	btfss	status,0,c
 13753  003B1C  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13754  003B1E                     l6765:
 13755                           
 13756                           ; BSR set to: 0
 13757  003B1E  AE48               	btfss	(___fldiv@b+2)^0,7,c
 13758  003B20  EF94  F01D         	goto	u8591
 13759  003B24  EF96  F01D         	goto	u8590
 13760  003B28                     u8591:
 13761  003B28  EF7A  F01D         	goto	l6759
 13762  003B2C                     u8590:
 13763  003B2C                     
 13764                           ; BSR set to: 0
 13765  003B2C  0E00               	movlw	0
 13766  003B2E  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13767  003B30                     
 13768                           ; BSR set to: 0
 13769  003B30  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13770  003B32  EF9D  F01D         	goto	u8601
 13771  003B36  EF9F  F01D         	goto	u8600
 13772  003B3A                     u8601:
 13773  003B3A  EFC3  F01D         	goto	l815
 13774  003B3E                     u8600:
 13775  003B3E                     
 13776                           ; BSR set to: 0
 13777  003B3E  0EFF               	movlw	255
 13778  003B40  1567               	andwf	___fldiv@grs& (0+255),w,b
 13779  003B42  6E4E               	movwf	??___fldiv^0,c
 13780  003B44  0EFF               	movlw	255
 13781  003B46  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13782  003B48  6E4F               	movwf	(??___fldiv+1)^0,c
 13783  003B4A  0EFF               	movlw	255
 13784  003B4C  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13785  003B4E  6E50               	movwf	(??___fldiv+2)^0,c
 13786  003B50  0E7F               	movlw	127
 13787  003B52  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13788  003B54  6E51               	movwf	(??___fldiv+3)^0,c
 13789  003B56  504E               	movf	??___fldiv^0,w,c
 13790  003B58  104F               	iorwf	(??___fldiv+1)^0,w,c
 13791  003B5A  1050               	iorwf	(??___fldiv+2)^0,w,c
 13792  003B5C  1051               	iorwf	(??___fldiv+3)^0,w,c
 13793  003B5E  B4D8               	btfsc	status,2,c
 13794  003B60  EFB4  F01D         	goto	u8611
 13795  003B64  EFB6  F01D         	goto	u8610
 13796  003B68                     u8611:
 13797  003B68  EFBA  F01D         	goto	l816
 13798  003B6C                     u8610:
 13799  003B6C                     l6773:
 13800                           
 13801                           ; BSR set to: 0
 13802  003B6C  0E01               	movlw	1
 13803  003B6E  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13804  003B70  EFC3  F01D         	goto	l815
 13805  003B74                     l816:
 13806                           
 13807                           ; BSR set to: 0
 13808  003B74  A046               	btfss	___fldiv@b^0,0,c
 13809  003B76  EFBF  F01D         	goto	u8621
 13810  003B7A  EFC1  F01D         	goto	u8620
 13811  003B7E                     u8621:
 13812  003B7E  EFC3  F01D         	goto	l815
 13813  003B82                     u8620:
 13814  003B82  EFB6  F01D         	goto	l6773
 13815  003B86                     l815:
 13816                           
 13817                           ; BSR set to: 0
 13818  003B86  516C               	movf	___fldiv@aexp& (0+255),w,b
 13819  003B88  B4D8               	btfsc	status,2,c
 13820  003B8A  EFC9  F01D         	goto	u8631
 13821  003B8E  EFCB  F01D         	goto	u8630
 13822  003B92                     u8631:
 13823  003B92  EFEF  F01D         	goto	l6785
 13824  003B96                     u8630:
 13825  003B96                     
 13826                           ; BSR set to: 0
 13827  003B96  0E01               	movlw	1
 13828  003B98  2646               	addwf	___fldiv@b^0,f,c
 13829  003B9A  0E00               	movlw	0
 13830  003B9C  2247               	addwfc	(___fldiv@b+1)^0,f,c
 13831  003B9E  2248               	addwfc	(___fldiv@b+2)^0,f,c
 13832  003BA0  2249               	addwfc	(___fldiv@b+3)^0,f,c
 13833  003BA2                     
 13834                           ; BSR set to: 0
 13835  003BA2  A049               	btfss	(___fldiv@b+3)^0,0,c
 13836  003BA4  EFD6  F01D         	goto	u8641
 13837  003BA8  EFD8  F01D         	goto	u8640
 13838  003BAC                     u8641:
 13839  003BAC  EFEF  F01D         	goto	l6785
 13840  003BB0                     u8640:
 13841  003BB0                     
 13842                           ; BSR set to: 0
 13843  003BB0  C046  F04E         	movff	___fldiv@b,??___fldiv
 13844  003BB4  C047  F04F         	movff	___fldiv@b+1,??___fldiv+1
 13845  003BB8  C048  F050         	movff	___fldiv@b+2,??___fldiv+2
 13846  003BBC  C049  F051         	movff	___fldiv@b+3,??___fldiv+3
 13847  003BC0  3451               	rlcf	(??___fldiv+3)^0,w,c
 13848  003BC2  3251               	rrcf	(??___fldiv+3)^0,f,c
 13849  003BC4  3250               	rrcf	(??___fldiv+2)^0,f,c
 13850  003BC6  324F               	rrcf	(??___fldiv+1)^0,f,c
 13851  003BC8  324E               	rrcf	??___fldiv^0,f,c
 13852  003BCA  C04E  F046         	movff	??___fldiv,___fldiv@b
 13853  003BCE  C04F  F047         	movff	??___fldiv+1,___fldiv@b+1
 13854  003BD2  C050  F048         	movff	??___fldiv+2,___fldiv@b+2
 13855  003BD6  C051  F049         	movff	??___fldiv+3,___fldiv@b+3
 13856  003BDA                     
 13857                           ; BSR set to: 0
 13858  003BDA  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 13859  003BDC  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13860  003BDE                     l6785:
 13861                           
 13862                           ; BSR set to: 0
 13863  003BDE  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13864  003BE0  EFFA  F01D         	goto	u8651
 13865  003BE4  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13866  003BE6  E108               	bnz	u8650
 13867  003BE8  2965               	incf	___fldiv@new_exp& (0+255),w,b
 13868  003BEA  A0D8               	btfss	status,0,c
 13869  003BEC  EFFA  F01D         	goto	u8651
 13870  003BF0  EFFC  F01D         	goto	u8650
 13871  003BF4                     u8651:
 13872  003BF4  EF07  F01E         	goto	l6789
 13873  003BF8                     u8650:
 13874  003BF8                     
 13875                           ; BSR set to: 0
 13876  003BF8  0E00               	movlw	0
 13877  003BFA  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13878  003BFC  6965               	setf	___fldiv@new_exp& (0+255),b
 13879  003BFE  0E00               	movlw	0
 13880  003C00  6E46               	movwf	___fldiv@b^0,c
 13881  003C02  0E00               	movlw	0
 13882  003C04  6E47               	movwf	(___fldiv@b+1)^0,c
 13883  003C06  0E00               	movlw	0
 13884  003C08  6E48               	movwf	(___fldiv@b+2)^0,c
 13885  003C0A  0E00               	movlw	0
 13886  003C0C  6E49               	movwf	(___fldiv@b+3)^0,c
 13887  003C0E                     l6789:
 13888                           
 13889                           ; BSR set to: 0
 13890  003C0E  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13891  003C10  EF14  F01E         	goto	u8660
 13892  003C14  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13893  003C16  E106               	bnz	u8661
 13894  003C18  0565               	decf	___fldiv@new_exp& (0+255),w,b
 13895  003C1A  B0D8               	btfsc	status,0,c
 13896  003C1C  EF12  F01E         	goto	u8661
 13897  003C20  EF14  F01E         	goto	u8660
 13898  003C24                     u8661:
 13899  003C24  EF22  F01E         	goto	l6793
 13900  003C28                     u8660:
 13901  003C28                     
 13902                           ; BSR set to: 0
 13903  003C28  0E00               	movlw	0
 13904  003C2A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13905  003C2C  0E00               	movlw	0
 13906  003C2E  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13907  003C30  0E00               	movlw	0
 13908  003C32  6E46               	movwf	___fldiv@b^0,c
 13909  003C34  0E00               	movlw	0
 13910  003C36  6E47               	movwf	(___fldiv@b+1)^0,c
 13911  003C38  0E00               	movlw	0
 13912  003C3A  6E48               	movwf	(___fldiv@b+2)^0,c
 13913  003C3C  0E00               	movlw	0
 13914  003C3E  6E49               	movwf	(___fldiv@b+3)^0,c
 13915  003C40  0E00               	movlw	0
 13916  003C42  6F64               	movwf	___fldiv@sign& (0+255),b
 13917  003C44                     l6793:
 13918                           
 13919                           ; BSR set to: 0
 13920  003C44  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 13921  003C48                     
 13922                           ; BSR set to: 0
 13923  003C48  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 13924  003C4A  EF29  F01E         	goto	u8671
 13925  003C4E  EF2B  F01E         	goto	u8670
 13926  003C52                     u8671:
 13927  003C52  EF2E  F01E         	goto	l6799
 13928  003C56                     u8670:
 13929  003C56                     
 13930                           ; BSR set to: 0
 13931  003C56  8E48               	bsf	(___fldiv@b+2)^0,7,c
 13932  003C58  EF2F  F01E         	goto	l6801
 13933  003C5C                     l6799:
 13934                           
 13935                           ; BSR set to: 0
 13936  003C5C  9E48               	bcf	(___fldiv@b+2)^0,7,c
 13937  003C5E                     l6801:
 13938                           
 13939                           ; BSR set to: 0
 13940  003C5E  90D8               	bcf	status,0,c
 13941  003C60  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 13942  003C62  6E49               	movwf	(___fldiv@b+3)^0,c
 13943  003C64  EFE5  F01C         	goto	l6715
 13944  003C68                     l802:
 13945                           
 13946                           ; BSR set to: 0
 13947  003C68  0012               	return		;funcret
 13948  003C6A                     __end_of___fldiv:
 13949                           	callstack 0
 13950                           
 13951 ;; *************** function ___fladd *****************
 13952 ;; Defined at:
 13953 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
 13954 ;; Parameters:    Size  Location     Type
 13955 ;;  b               4   20[COMRAM] unsigned char 
 13956 ;;  a               4   24[COMRAM] unsigned char 
 13957 ;; Auto vars:     Size  Location     Type
 13958 ;;  grs             1   35[COMRAM] unsigned char 
 13959 ;;  bexp            1   34[COMRAM] unsigned char 
 13960 ;;  aexp            1   33[COMRAM] unsigned char 
 13961 ;;  signs           1   32[COMRAM] unsigned char 
 13962 ;; Return value:  Size  Location     Type
 13963 ;;                  4   20[COMRAM] unsigned char 
 13964 ;; Registers used:
 13965 ;;		wreg, status,2, status,0
 13966 ;; Tracked objects:
 13967 ;;		On entry : 0/0
 13968 ;;		On exit  : 0/0
 13969 ;;		Unchanged: 0/0
 13970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13971 ;;      Params:         8       0       0       0       0       0       0       0       0
 13972 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13973 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13974 ;;      Totals:        16       0       0       0       0       0       0       0       0
 13975 ;;Total ram usage:       16 bytes
 13976 ;; Hardware stack levels used: 1
 13977 ;; Hardware stack levels required when called: 2
 13978 ;; This function calls:
 13979 ;;		Nothing
 13980 ;; This function is called by:
 13981 ;;		_main
 13982 ;;		_PWM1_Init
 13983 ;;		___flsub
 13984 ;;		_efgtoa
 13985 ;;		_PWM2_Init
 13986 ;; This function uses a non-reentrant model
 13987 ;;
 13988                           
 13989                           	psect	text54
 13990  002BA4                     __ptext54:
 13991                           	callstack 0
 13992  002BA4                     ___fladd:
 13993                           	callstack 23
 13994  002BA4  5018               	movf	(___fladd@b+3)^0,w,c
 13995  002BA6  0B80               	andlw	128
 13996  002BA8  6E21               	movwf	___fladd@signs^0,c
 13997  002BAA  5018               	movf	(___fladd@b+3)^0,w,c
 13998  002BAC  2418               	addwf	(___fladd@b+3)^0,w,c
 13999  002BAE  6E23               	movwf	___fladd@bexp^0,c
 14000  002BB0  AE17               	btfss	(___fladd@b+2)^0,7,c
 14001  002BB2  EFDD  F015         	goto	u7891
 14002  002BB6  EFDF  F015         	goto	u7890
 14003  002BBA                     u7891:
 14004  002BBA  EFE0  F015         	goto	l6367
 14005  002BBE                     u7890:
 14006  002BBE  8023               	bsf	___fladd@bexp^0,0,c
 14007  002BC0                     l6367:
 14008  002BC0  5023               	movf	___fladd@bexp^0,w,c
 14009  002BC2  B4D8               	btfsc	status,2,c
 14010  002BC4  EFE6  F015         	goto	u7901
 14011  002BC8  EFE8  F015         	goto	u7900
 14012  002BCC                     u7901:
 14013  002BCC  EFFD  F015         	goto	l6377
 14014  002BD0                     u7900:
 14015  002BD0  2823               	incf	___fladd@bexp^0,w,c
 14016  002BD2  A4D8               	btfss	status,2,c
 14017  002BD4  EFEE  F015         	goto	u7911
 14018  002BD8  EFF0  F015         	goto	u7910
 14019  002BDC                     u7911:
 14020  002BDC  EFF8  F015         	goto	l6373
 14021  002BE0                     u7910:
 14022  002BE0  0E00               	movlw	0
 14023  002BE2  6E15               	movwf	___fladd@b^0,c
 14024  002BE4  0E00               	movlw	0
 14025  002BE6  6E16               	movwf	(___fladd@b+1)^0,c
 14026  002BE8  0E00               	movlw	0
 14027  002BEA  6E17               	movwf	(___fladd@b+2)^0,c
 14028  002BEC  0E00               	movlw	0
 14029  002BEE  6E18               	movwf	(___fladd@b+3)^0,c
 14030  002BF0                     l6373:
 14031  002BF0  8E17               	bsf	(___fladd@b+2)^0,7,c
 14032  002BF2  0E00               	movlw	0
 14033  002BF4  6E18               	movwf	(___fladd@b+3)^0,c
 14034  002BF6  EF05  F016         	goto	l6379
 14035  002BFA                     l6377:
 14036  002BFA  0E00               	movlw	0
 14037  002BFC  6E15               	movwf	___fladd@b^0,c
 14038  002BFE  0E00               	movlw	0
 14039  002C00  6E16               	movwf	(___fladd@b+1)^0,c
 14040  002C02  0E00               	movlw	0
 14041  002C04  6E17               	movwf	(___fladd@b+2)^0,c
 14042  002C06  0E00               	movlw	0
 14043  002C08  6E18               	movwf	(___fladd@b+3)^0,c
 14044  002C0A                     l6379:
 14045  002C0A  501C               	movf	(___fladd@a+3)^0,w,c
 14046  002C0C  0B80               	andlw	128
 14047  002C0E  6E22               	movwf	___fladd@aexp^0,c
 14048  002C10  5021               	movf	___fladd@signs^0,w,c
 14049  002C12  1822               	xorwf	___fladd@aexp^0,w,c
 14050  002C14  B4D8               	btfsc	status,2,c
 14051  002C16  EF0F  F016         	goto	u7921
 14052  002C1A  EF11  F016         	goto	u7920
 14053  002C1E                     u7921:
 14054  002C1E  EF12  F016         	goto	l6385
 14055  002C22                     u7920:
 14056  002C22  8C21               	bsf	___fladd@signs^0,6,c
 14057  002C24                     l6385:
 14058  002C24  501C               	movf	(___fladd@a+3)^0,w,c
 14059  002C26  241C               	addwf	(___fladd@a+3)^0,w,c
 14060  002C28  6E22               	movwf	___fladd@aexp^0,c
 14061  002C2A  AE1B               	btfss	(___fladd@a+2)^0,7,c
 14062  002C2C  EF1A  F016         	goto	u7931
 14063  002C30  EF1C  F016         	goto	u7930
 14064  002C34                     u7931:
 14065  002C34  EF1D  F016         	goto	l6391
 14066  002C38                     u7930:
 14067  002C38  8022               	bsf	___fladd@aexp^0,0,c
 14068  002C3A                     l6391:
 14069  002C3A  5022               	movf	___fladd@aexp^0,w,c
 14070  002C3C  B4D8               	btfsc	status,2,c
 14071  002C3E  EF23  F016         	goto	u7941
 14072  002C42  EF25  F016         	goto	u7940
 14073  002C46                     u7941:
 14074  002C46  EF3A  F016         	goto	l6401
 14075  002C4A                     u7940:
 14076  002C4A  2822               	incf	___fladd@aexp^0,w,c
 14077  002C4C  A4D8               	btfss	status,2,c
 14078  002C4E  EF2B  F016         	goto	u7951
 14079  002C52  EF2D  F016         	goto	u7950
 14080  002C56                     u7951:
 14081  002C56  EF35  F016         	goto	l6397
 14082  002C5A                     u7950:
 14083  002C5A  0E00               	movlw	0
 14084  002C5C  6E19               	movwf	___fladd@a^0,c
 14085  002C5E  0E00               	movlw	0
 14086  002C60  6E1A               	movwf	(___fladd@a+1)^0,c
 14087  002C62  0E00               	movlw	0
 14088  002C64  6E1B               	movwf	(___fladd@a+2)^0,c
 14089  002C66  0E00               	movlw	0
 14090  002C68  6E1C               	movwf	(___fladd@a+3)^0,c
 14091  002C6A                     l6397:
 14092  002C6A  8E1B               	bsf	(___fladd@a+2)^0,7,c
 14093  002C6C  0E00               	movlw	0
 14094  002C6E  6E1C               	movwf	(___fladd@a+3)^0,c
 14095  002C70  EF42  F016         	goto	l6403
 14096  002C74                     l6401:
 14097  002C74  0E00               	movlw	0
 14098  002C76  6E19               	movwf	___fladd@a^0,c
 14099  002C78  0E00               	movlw	0
 14100  002C7A  6E1A               	movwf	(___fladd@a+1)^0,c
 14101  002C7C  0E00               	movlw	0
 14102  002C7E  6E1B               	movwf	(___fladd@a+2)^0,c
 14103  002C80  0E00               	movlw	0
 14104  002C82  6E1C               	movwf	(___fladd@a+3)^0,c
 14105  002C84                     l6403:
 14106  002C84  5023               	movf	___fladd@bexp^0,w,c
 14107  002C86  5C22               	subwf	___fladd@aexp^0,w,c
 14108  002C88  B0D8               	btfsc	status,0,c
 14109  002C8A  EF49  F016         	goto	u7961
 14110  002C8E  EF4B  F016         	goto	u7960
 14111  002C92                     u7961:
 14112  002C92  EF72  F016         	goto	l6439
 14113  002C96                     u7960:
 14114  002C96  AC21               	btfss	___fladd@signs^0,6,c
 14115  002C98  EF50  F016         	goto	u7971
 14116  002C9C  EF52  F016         	goto	u7970
 14117  002CA0                     u7971:
 14118  002CA0  EF54  F016         	goto	l6409
 14119  002CA4                     u7970:
 14120  002CA4  0E80               	movlw	128
 14121  002CA6  1A21               	xorwf	___fladd@signs^0,f,c
 14122  002CA8                     l6409:
 14123  002CA8  C023  F024         	movff	___fladd@bexp,___fladd@grs
 14124  002CAC  C022  F023         	movff	___fladd@aexp,___fladd@bexp
 14125  002CB0  C024  F022         	movff	___fladd@grs,___fladd@aexp
 14126  002CB4  C015  F024         	movff	___fladd@b,___fladd@grs
 14127  002CB8  C019  F015         	movff	___fladd@a,___fladd@b
 14128  002CBC  C024  F019         	movff	___fladd@grs,___fladd@a
 14129  002CC0  C016  F024         	movff	___fladd@b+1,___fladd@grs
 14130  002CC4  C01A  F016         	movff	___fladd@a+1,___fladd@b+1
 14131  002CC8  C024  F01A         	movff	___fladd@grs,___fladd@a+1
 14132  002CCC  C017  F024         	movff	___fladd@b+2,___fladd@grs
 14133  002CD0  C01B  F017         	movff	___fladd@a+2,___fladd@b+2
 14134  002CD4  C024  F01B         	movff	___fladd@grs,___fladd@a+2
 14135  002CD8  C018  F024         	movff	___fladd@b+3,___fladd@grs
 14136  002CDC  C01C  F018         	movff	___fladd@a+3,___fladd@b+3
 14137  002CE0  C024  F01C         	movff	___fladd@grs,___fladd@a+3
 14138  002CE4                     l6439:
 14139  002CE4  0E00               	movlw	0
 14140  002CE6  6E24               	movwf	___fladd@grs^0,c
 14141  002CE8  5023               	movf	___fladd@bexp^0,w,c
 14142  002CEA  C022  F01D         	movff	___fladd@aexp,??___fladd
 14143  002CEE  6A1E               	clrf	(??___fladd+1)^0,c
 14144  002CF0  5E1D               	subwf	??___fladd^0,f,c
 14145  002CF2  0E00               	movlw	0
 14146  002CF4  5A1E               	subwfb	(??___fladd+1)^0,f,c
 14147  002CF6  BE1E               	btfsc	(??___fladd+1)^0,7,c
 14148  002CF8  EF87  F016         	goto	u7981
 14149  002CFC  501E               	movf	(??___fladd+1)^0,w,c
 14150  002CFE  E109               	bnz	u7980
 14151  002D00  0E1A               	movlw	26
 14152  002D02  5C1D               	subwf	??___fladd^0,w,c
 14153  002D04  A0D8               	btfss	status,0,c
 14154  002D06  EF87  F016         	goto	u7981
 14155  002D0A  EF89  F016         	goto	u7980
 14156  002D0E                     u7981:
 14157  002D0E  EFC0  F016         	goto	l749
 14158  002D12                     u7980:
 14159  002D12  5015               	movf	___fladd@b^0,w,c
 14160  002D14  1016               	iorwf	(___fladd@b+1)^0,w,c
 14161  002D16  1017               	iorwf	(___fladd@b+2)^0,w,c
 14162  002D18  1018               	iorwf	(___fladd@b+3)^0,w,c
 14163  002D1A  A4D8               	btfss	status,2,c
 14164  002D1C  EF92  F016         	goto	u7991
 14165  002D20  EF95  F016         	goto	u7990
 14166  002D24                     u7991:
 14167  002D24  0E01               	movlw	1
 14168  002D26  EF96  F016         	goto	u8000
 14169  002D2A                     u7990:
 14170  002D2A  0E00               	movlw	0
 14171  002D2C                     u8000:
 14172  002D2C  6E24               	movwf	___fladd@grs^0,c
 14173  002D2E  0E00               	movlw	0
 14174  002D30  6E15               	movwf	___fladd@b^0,c
 14175  002D32  0E00               	movlw	0
 14176  002D34  6E16               	movwf	(___fladd@b+1)^0,c
 14177  002D36  0E00               	movlw	0
 14178  002D38  6E17               	movwf	(___fladd@b+2)^0,c
 14179  002D3A  0E00               	movlw	0
 14180  002D3C  6E18               	movwf	(___fladd@b+3)^0,c
 14181  002D3E  C022  F023         	movff	___fladd@aexp,___fladd@bexp
 14182  002D42  EFC9  F016         	goto	l748
 14183  002D46                     l750:
 14184  002D46  A024               	btfss	___fladd@grs^0,0,c
 14185  002D48  EFA8  F016         	goto	u8011
 14186  002D4C  EFAA  F016         	goto	u8010
 14187  002D50                     u8011:
 14188  002D50  EFB0  F016         	goto	l6451
 14189  002D54                     u8010:
 14190  002D54  90D8               	bcf	status,0,c
 14191  002D56  3024               	rrcf	___fladd@grs^0,w,c
 14192  002D58  0901               	iorlw	1
 14193  002D5A  6E24               	movwf	___fladd@grs^0,c
 14194  002D5C  EFB2  F016         	goto	l6453
 14195  002D60                     l6451:
 14196  002D60  90D8               	bcf	status,0,c
 14197  002D62  3224               	rrcf	___fladd@grs^0,f,c
 14198  002D64                     l6453:
 14199  002D64  A015               	btfss	___fladd@b^0,0,c
 14200  002D66  EFB7  F016         	goto	u8021
 14201  002D6A  EFB9  F016         	goto	u8020
 14202  002D6E                     u8021:
 14203  002D6E  EFBA  F016         	goto	l6457
 14204  002D72                     u8020:
 14205  002D72  8E24               	bsf	___fladd@grs^0,7,c
 14206  002D74                     l6457:
 14207  002D74  3418               	rlcf	(___fladd@b+3)^0,w,c
 14208  002D76  3218               	rrcf	(___fladd@b+3)^0,f,c
 14209  002D78  3217               	rrcf	(___fladd@b+2)^0,f,c
 14210  002D7A  3216               	rrcf	(___fladd@b+1)^0,f,c
 14211  002D7C  3215               	rrcf	___fladd@b^0,f,c
 14212  002D7E  2A23               	incf	___fladd@bexp^0,f,c
 14213  002D80                     l749:
 14214  002D80  5022               	movf	___fladd@aexp^0,w,c
 14215  002D82  5C23               	subwf	___fladd@bexp^0,w,c
 14216  002D84  A0D8               	btfss	status,0,c
 14217  002D86  EFC7  F016         	goto	u8031
 14218  002D8A  EFC9  F016         	goto	u8030
 14219  002D8E                     u8031:
 14220  002D8E  EFA3  F016         	goto	l750
 14221  002D92                     u8030:
 14222  002D92                     l748:
 14223  002D92  BC21               	btfsc	___fladd@signs^0,6,c
 14224  002D94  EFCE  F016         	goto	u8041
 14225  002D98  EFD0  F016         	goto	u8040
 14226  002D9C                     u8041:
 14227  002D9C  EF10  F017         	goto	l6485
 14228  002DA0                     u8040:
 14229  002DA0  5023               	movf	___fladd@bexp^0,w,c
 14230  002DA2  A4D8               	btfss	status,2,c
 14231  002DA4  EFD6  F016         	goto	u8051
 14232  002DA8  EFD8  F016         	goto	u8050
 14233  002DAC                     u8051:
 14234  002DAC  EFE2  F016         	goto	l6467
 14235  002DB0                     u8050:
 14236  002DB0  0E00               	movlw	0
 14237  002DB2  6E15               	movwf	?___fladd^0,c
 14238  002DB4  0E00               	movlw	0
 14239  002DB6  6E16               	movwf	(?___fladd+1)^0,c
 14240  002DB8  0E00               	movlw	0
 14241  002DBA  6E17               	movwf	(?___fladd+2)^0,c
 14242  002DBC  0E00               	movlw	0
 14243  002DBE  6E18               	movwf	(?___fladd+3)^0,c
 14244  002DC0  EF31  F018         	goto	l757
 14245  002DC4                     l6467:
 14246  002DC4  5019               	movf	___fladd@a^0,w,c
 14247  002DC6  2615               	addwf	___fladd@b^0,f,c
 14248  002DC8  501A               	movf	(___fladd@a+1)^0,w,c
 14249  002DCA  2216               	addwfc	(___fladd@b+1)^0,f,c
 14250  002DCC  501B               	movf	(___fladd@a+2)^0,w,c
 14251  002DCE  2217               	addwfc	(___fladd@b+2)^0,f,c
 14252  002DD0  501C               	movf	(___fladd@a+3)^0,w,c
 14253  002DD2  2218               	addwfc	(___fladd@b+3)^0,f,c
 14254  002DD4  A018               	btfss	(___fladd@b+3)^0,0,c
 14255  002DD6  EFEF  F016         	goto	u8061
 14256  002DDA  EFF1  F016         	goto	u8060
 14257  002DDE                     u8061:
 14258  002DDE  EF9D  F017         	goto	l6521
 14259  002DE2                     u8060:
 14260  002DE2  A024               	btfss	___fladd@grs^0,0,c
 14261  002DE4  EFF6  F016         	goto	u8071
 14262  002DE8  EFF8  F016         	goto	u8070
 14263  002DEC                     u8071:
 14264  002DEC  EFFE  F016         	goto	l6475
 14265  002DF0                     u8070:
 14266  002DF0  90D8               	bcf	status,0,c
 14267  002DF2  3024               	rrcf	___fladd@grs^0,w,c
 14268  002DF4  0901               	iorlw	1
 14269  002DF6  6E24               	movwf	___fladd@grs^0,c
 14270  002DF8  EF00  F017         	goto	l6477
 14271  002DFC                     l6475:
 14272  002DFC  90D8               	bcf	status,0,c
 14273  002DFE  3224               	rrcf	___fladd@grs^0,f,c
 14274  002E00                     l6477:
 14275  002E00  A015               	btfss	___fladd@b^0,0,c
 14276  002E02  EF05  F017         	goto	u8081
 14277  002E06  EF07  F017         	goto	u8080
 14278  002E0A                     u8081:
 14279  002E0A  EF08  F017         	goto	l6481
 14280  002E0E                     u8080:
 14281  002E0E  8E24               	bsf	___fladd@grs^0,7,c
 14282  002E10                     l6481:
 14283  002E10  3418               	rlcf	(___fladd@b+3)^0,w,c
 14284  002E12  3218               	rrcf	(___fladd@b+3)^0,f,c
 14285  002E14  3217               	rrcf	(___fladd@b+2)^0,f,c
 14286  002E16  3216               	rrcf	(___fladd@b+1)^0,f,c
 14287  002E18  3215               	rrcf	___fladd@b^0,f,c
 14288  002E1A  2A23               	incf	___fladd@bexp^0,f,c
 14289  002E1C  EF9D  F017         	goto	l6521
 14290  002E20                     l6485:
 14291  002E20  5019               	movf	___fladd@a^0,w,c
 14292  002E22  5C15               	subwf	___fladd@b^0,w,c
 14293  002E24  501A               	movf	(___fladd@a+1)^0,w,c
 14294  002E26  5816               	subwfb	(___fladd@b+1)^0,w,c
 14295  002E28  501B               	movf	(___fladd@a+2)^0,w,c
 14296  002E2A  5817               	subwfb	(___fladd@b+2)^0,w,c
 14297  002E2C  5018               	movf	(___fladd@b+3)^0,w,c
 14298  002E2E  0A80               	xorlw	128
 14299  002E30  6E1D               	movwf	??___fladd^0,c
 14300  002E32  501C               	movf	(___fladd@a+3)^0,w,c
 14301  002E34  0A80               	xorlw	128
 14302  002E36  581D               	subwfb	??___fladd^0,w,c
 14303  002E38  B0D8               	btfsc	status,0,c
 14304  002E3A  EF21  F017         	goto	u8091
 14305  002E3E  EF23  F017         	goto	u8090
 14306  002E42                     u8091:
 14307  002E42  EF4E  F017         	goto	l6495
 14308  002E46                     u8090:
 14309  002E46  5015               	movf	___fladd@b^0,w,c
 14310  002E48  5C19               	subwf	___fladd@a^0,w,c
 14311  002E4A  6E1D               	movwf	??___fladd^0,c
 14312  002E4C  5016               	movf	(___fladd@b+1)^0,w,c
 14313  002E4E  581A               	subwfb	(___fladd@a+1)^0,w,c
 14314  002E50  6E1E               	movwf	(??___fladd+1)^0,c
 14315  002E52  5017               	movf	(___fladd@b+2)^0,w,c
 14316  002E54  581B               	subwfb	(___fladd@a+2)^0,w,c
 14317  002E56  6E1F               	movwf	(??___fladd+2)^0,c
 14318  002E58  5018               	movf	(___fladd@b+3)^0,w,c
 14319  002E5A  581C               	subwfb	(___fladd@a+3)^0,w,c
 14320  002E5C  6E20               	movwf	(??___fladd+3)^0,c
 14321  002E5E  0EFF               	movlw	255
 14322  002E60  241D               	addwf	??___fladd^0,w,c
 14323  002E62  6E15               	movwf	___fladd@b^0,c
 14324  002E64  0EFF               	movlw	255
 14325  002E66  201E               	addwfc	(??___fladd+1)^0,w,c
 14326  002E68  6E16               	movwf	(___fladd@b+1)^0,c
 14327  002E6A  0EFF               	movlw	255
 14328  002E6C  201F               	addwfc	(??___fladd+2)^0,w,c
 14329  002E6E  6E17               	movwf	(___fladd@b+2)^0,c
 14330  002E70  0EFF               	movlw	255
 14331  002E72  2020               	addwfc	(??___fladd+3)^0,w,c
 14332  002E74  6E18               	movwf	(___fladd@b+3)^0,c
 14333  002E76  0E80               	movlw	128
 14334  002E78  1A21               	xorwf	___fladd@signs^0,f,c
 14335  002E7A  6C24               	negf	___fladd@grs^0,c
 14336  002E7C  5024               	movf	___fladd@grs^0,w,c
 14337  002E7E  A4D8               	btfss	status,2,c
 14338  002E80  EF44  F017         	goto	u8101
 14339  002E84  EF46  F017         	goto	u8100
 14340  002E88                     u8101:
 14341  002E88  EF56  F017         	goto	l765
 14342  002E8C                     u8100:
 14343  002E8C  0E01               	movlw	1
 14344  002E8E  2615               	addwf	___fladd@b^0,f,c
 14345  002E90  0E00               	movlw	0
 14346  002E92  2216               	addwfc	(___fladd@b+1)^0,f,c
 14347  002E94  2217               	addwfc	(___fladd@b+2)^0,f,c
 14348  002E96  2218               	addwfc	(___fladd@b+3)^0,f,c
 14349  002E98  EF56  F017         	goto	l765
 14350  002E9C                     l6495:
 14351  002E9C  5019               	movf	___fladd@a^0,w,c
 14352  002E9E  5E15               	subwf	___fladd@b^0,f,c
 14353  002EA0  501A               	movf	(___fladd@a+1)^0,w,c
 14354  002EA2  5A16               	subwfb	(___fladd@b+1)^0,f,c
 14355  002EA4  501B               	movf	(___fladd@a+2)^0,w,c
 14356  002EA6  5A17               	subwfb	(___fladd@b+2)^0,f,c
 14357  002EA8  501C               	movf	(___fladd@a+3)^0,w,c
 14358  002EAA  5A18               	subwfb	(___fladd@b+3)^0,f,c
 14359  002EAC                     l765:
 14360  002EAC  5015               	movf	___fladd@b^0,w,c
 14361  002EAE  1016               	iorwf	(___fladd@b+1)^0,w,c
 14362  002EB0  1017               	iorwf	(___fladd@b+2)^0,w,c
 14363  002EB2  1018               	iorwf	(___fladd@b+3)^0,w,c
 14364  002EB4  A4D8               	btfss	status,2,c
 14365  002EB6  EF5F  F017         	goto	u8111
 14366  002EBA  EF61  F017         	goto	u8110
 14367  002EBE                     u8111:
 14368  002EBE  EF96  F017         	goto	l6519
 14369  002EC2                     u8110:
 14370  002EC2  5024               	movf	___fladd@grs^0,w,c
 14371  002EC4  A4D8               	btfss	status,2,c
 14372  002EC6  EF67  F017         	goto	u8121
 14373  002ECA  EF69  F017         	goto	u8120
 14374  002ECE                     u8121:
 14375  002ECE  EF96  F017         	goto	l6519
 14376  002ED2                     u8120:
 14377  002ED2  0E00               	movlw	0
 14378  002ED4  6E15               	movwf	?___fladd^0,c
 14379  002ED6  0E00               	movlw	0
 14380  002ED8  6E16               	movwf	(?___fladd+1)^0,c
 14381  002EDA  0E00               	movlw	0
 14382  002EDC  6E17               	movwf	(?___fladd+2)^0,c
 14383  002EDE  0E00               	movlw	0
 14384  002EE0  6E18               	movwf	(?___fladd+3)^0,c
 14385  002EE2  EF31  F018         	goto	l757
 14386  002EE6                     l6503:
 14387  002EE6  90D8               	bcf	status,0,c
 14388  002EE8  3615               	rlcf	___fladd@b^0,f,c
 14389  002EEA  3616               	rlcf	(___fladd@b+1)^0,f,c
 14390  002EEC  3617               	rlcf	(___fladd@b+2)^0,f,c
 14391  002EEE  3618               	rlcf	(___fladd@b+3)^0,f,c
 14392  002EF0  AE24               	btfss	___fladd@grs^0,7,c
 14393  002EF2  EF7D  F017         	goto	u8131
 14394  002EF6  EF7F  F017         	goto	u8130
 14395  002EFA                     u8131:
 14396  002EFA  EF80  F017         	goto	l6509
 14397  002EFE                     u8130:
 14398  002EFE  8015               	bsf	___fladd@b^0,0,c
 14399  002F00                     l6509:
 14400  002F00  A024               	btfss	___fladd@grs^0,0,c
 14401  002F02  EF85  F017         	goto	u8141
 14402  002F06  EF87  F017         	goto	u8140
 14403  002F0A                     u8141:
 14404  002F0A  EF8B  F017         	goto	l6513
 14405  002F0E                     u8140:
 14406  002F0E  80D8               	bsf	status,0,c
 14407  002F10  3624               	rlcf	___fladd@grs^0,f,c
 14408  002F12  EF8D  F017         	goto	l6515
 14409  002F16                     l6513:
 14410  002F16  90D8               	bcf	status,0,c
 14411  002F18  3624               	rlcf	___fladd@grs^0,f,c
 14412  002F1A                     l6515:
 14413  002F1A  5023               	movf	___fladd@bexp^0,w,c
 14414  002F1C  B4D8               	btfsc	status,2,c
 14415  002F1E  EF93  F017         	goto	u8151
 14416  002F22  EF95  F017         	goto	u8150
 14417  002F26                     u8151:
 14418  002F26  EF96  F017         	goto	l6519
 14419  002F2A                     u8150:
 14420  002F2A  0623               	decf	___fladd@bexp^0,f,c
 14421  002F2C                     l6519:
 14422  002F2C  AE17               	btfss	(___fladd@b+2)^0,7,c
 14423  002F2E  EF9B  F017         	goto	u8161
 14424  002F32  EF9D  F017         	goto	u8160
 14425  002F36                     u8161:
 14426  002F36  EF73  F017         	goto	l6503
 14427  002F3A                     u8160:
 14428  002F3A                     l6521:
 14429  002F3A  0E00               	movlw	0
 14430  002F3C  6E22               	movwf	___fladd@aexp^0,c
 14431  002F3E  AE24               	btfss	___fladd@grs^0,7,c
 14432  002F40  EFA4  F017         	goto	u8171
 14433  002F44  EFA6  F017         	goto	u8170
 14434  002F48                     u8171:
 14435  002F48  EFBE  F017         	goto	l774
 14436  002F4C                     u8170:
 14437  002F4C  C024  F01D         	movff	___fladd@grs,??___fladd
 14438  002F50  0E7F               	movlw	127
 14439  002F52  161D               	andwf	??___fladd^0,f,c
 14440  002F54  B4D8               	btfsc	status,2,c
 14441  002F56  EFAF  F017         	goto	u8181
 14442  002F5A  EFB1  F017         	goto	u8180
 14443  002F5E                     u8181:
 14444  002F5E  EFB5  F017         	goto	l775
 14445  002F62                     u8180:
 14446  002F62                     l6527:
 14447  002F62  0E01               	movlw	1
 14448  002F64  6E22               	movwf	___fladd@aexp^0,c
 14449  002F66  EFBE  F017         	goto	l774
 14450  002F6A                     l775:
 14451  002F6A  A015               	btfss	___fladd@b^0,0,c
 14452  002F6C  EFBA  F017         	goto	u8191
 14453  002F70  EFBC  F017         	goto	u8190
 14454  002F74                     u8191:
 14455  002F74  EFBE  F017         	goto	l774
 14456  002F78                     u8190:
 14457  002F78  EFB1  F017         	goto	l6527
 14458  002F7C                     l774:
 14459  002F7C  5022               	movf	___fladd@aexp^0,w,c
 14460  002F7E  B4D8               	btfsc	status,2,c
 14461  002F80  EFC4  F017         	goto	u8201
 14462  002F84  EFC6  F017         	goto	u8200
 14463  002F88                     u8201:
 14464  002F88  EFF1  F017         	goto	l6539
 14465  002F8C                     u8200:
 14466  002F8C  0E01               	movlw	1
 14467  002F8E  2615               	addwf	___fladd@b^0,f,c
 14468  002F90  0E00               	movlw	0
 14469  002F92  2216               	addwfc	(___fladd@b+1)^0,f,c
 14470  002F94  2217               	addwfc	(___fladd@b+2)^0,f,c
 14471  002F96  2218               	addwfc	(___fladd@b+3)^0,f,c
 14472  002F98  A018               	btfss	(___fladd@b+3)^0,0,c
 14473  002F9A  EFD1  F017         	goto	u8211
 14474  002F9E  EFD3  F017         	goto	u8210
 14475  002FA2                     u8211:
 14476  002FA2  EFF1  F017         	goto	l6539
 14477  002FA6                     u8210:
 14478  002FA6  C015  F01D         	movff	___fladd@b,??___fladd
 14479  002FAA  C016  F01E         	movff	___fladd@b+1,??___fladd+1
 14480  002FAE  C017  F01F         	movff	___fladd@b+2,??___fladd+2
 14481  002FB2  C018  F020         	movff	___fladd@b+3,??___fladd+3
 14482  002FB6  3420               	rlcf	(??___fladd+3)^0,w,c
 14483  002FB8  3220               	rrcf	(??___fladd+3)^0,f,c
 14484  002FBA  321F               	rrcf	(??___fladd+2)^0,f,c
 14485  002FBC  321E               	rrcf	(??___fladd+1)^0,f,c
 14486  002FBE  321D               	rrcf	??___fladd^0,f,c
 14487  002FC0  C01D  F015         	movff	??___fladd,___fladd@b
 14488  002FC4  C01E  F016         	movff	??___fladd+1,___fladd@b+1
 14489  002FC8  C01F  F017         	movff	??___fladd+2,___fladd@b+2
 14490  002FCC  C020  F018         	movff	??___fladd+3,___fladd@b+3
 14491  002FD0  2823               	incf	___fladd@bexp^0,w,c
 14492  002FD2  B4D8               	btfsc	status,2,c
 14493  002FD4  EFEE  F017         	goto	u8221
 14494  002FD8  EFF0  F017         	goto	u8220
 14495  002FDC                     u8221:
 14496  002FDC  EFF1  F017         	goto	l6539
 14497  002FE0                     u8220:
 14498  002FE0  2A23               	incf	___fladd@bexp^0,f,c
 14499  002FE2                     l6539:
 14500  002FE2  2823               	incf	___fladd@bexp^0,w,c
 14501  002FE4  B4D8               	btfsc	status,2,c
 14502  002FE6  EFF7  F017         	goto	u8231
 14503  002FEA  EFF9  F017         	goto	u8230
 14504  002FEE                     u8231:
 14505  002FEE  EF01  F018         	goto	l6543
 14506  002FF2                     u8230:
 14507  002FF2  5023               	movf	___fladd@bexp^0,w,c
 14508  002FF4  A4D8               	btfss	status,2,c
 14509  002FF6  EFFF  F017         	goto	u8241
 14510  002FFA  EF01  F018         	goto	u8240
 14511  002FFE                     u8241:
 14512  002FFE  EF13  F018         	goto	l6547
 14513  003002                     u8240:
 14514  003002                     l6543:
 14515  003002  0E00               	movlw	0
 14516  003004  6E15               	movwf	___fladd@b^0,c
 14517  003006  0E00               	movlw	0
 14518  003008  6E16               	movwf	(___fladd@b+1)^0,c
 14519  00300A  0E00               	movlw	0
 14520  00300C  6E17               	movwf	(___fladd@b+2)^0,c
 14521  00300E  0E00               	movlw	0
 14522  003010  6E18               	movwf	(___fladd@b+3)^0,c
 14523  003012  5023               	movf	___fladd@bexp^0,w,c
 14524  003014  A4D8               	btfss	status,2,c
 14525  003016  EF0F  F018         	goto	u8251
 14526  00301A  EF11  F018         	goto	u8250
 14527  00301E                     u8251:
 14528  00301E  EF13  F018         	goto	l6547
 14529  003022                     u8250:
 14530  003022  0E00               	movlw	0
 14531  003024  6E21               	movwf	___fladd@signs^0,c
 14532  003026                     l6547:
 14533  003026  A023               	btfss	___fladd@bexp^0,0,c
 14534  003028  EF18  F018         	goto	u8261
 14535  00302C  EF1A  F018         	goto	u8260
 14536  003030                     u8261:
 14537  003030  EF1D  F018         	goto	l6551
 14538  003034                     u8260:
 14539  003034  8E17               	bsf	(___fladd@b+2)^0,7,c
 14540  003036  EF1E  F018         	goto	l6553
 14541  00303A                     l6551:
 14542  00303A  9E17               	bcf	(___fladd@b+2)^0,7,c
 14543  00303C                     l6553:
 14544  00303C  90D8               	bcf	status,0,c
 14545  00303E  3023               	rrcf	___fladd@bexp^0,w,c
 14546  003040  6E18               	movwf	(___fladd@b+3)^0,c
 14547  003042  AE21               	btfss	___fladd@signs^0,7,c
 14548  003044  EF26  F018         	goto	u8271
 14549  003048  EF28  F018         	goto	u8270
 14550  00304C                     u8271:
 14551  00304C  EF29  F018         	goto	l6559
 14552  003050                     u8270:
 14553  003050  8E18               	bsf	(___fladd@b+3)^0,7,c
 14554  003052                     l6559:
 14555  003052  C015  F015         	movff	___fladd@b,?___fladd
 14556  003056  C016  F016         	movff	___fladd@b+1,?___fladd+1
 14557  00305A  C017  F017         	movff	___fladd@b+2,?___fladd+2
 14558  00305E  C018  F018         	movff	___fladd@b+3,?___fladd+3
 14559  003062                     l757:
 14560  003062  0012               	return		;funcret
 14561  003064                     __end_of___fladd:
 14562                           	callstack 0
 14563                           
 14564 ;; *************** function _Motor_Start *****************
 14565 ;; Defined at:
 14566 ;;		line 148 in file "main.c"
 14567 ;; Parameters:    Size  Location     Type
 14568 ;;		None
 14569 ;; Auto vars:     Size  Location     Type
 14570 ;;		None
 14571 ;; Return value:  Size  Location     Type
 14572 ;;                  1    wreg      void 
 14573 ;; Registers used:
 14574 ;;		None
 14575 ;; Tracked objects:
 14576 ;;		On entry : 0/0
 14577 ;;		On exit  : 0/0
 14578 ;;		Unchanged: 0/0
 14579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14580 ;;      Params:         0       0       0       0       0       0       0       0       0
 14581 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14582 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14583 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14584 ;;Total ram usage:        0 bytes
 14585 ;; Hardware stack levels used: 1
 14586 ;; Hardware stack levels required when called: 2
 14587 ;; This function calls:
 14588 ;;		Nothing
 14589 ;; This function is called by:
 14590 ;;		_main
 14591 ;; This function uses a non-reentrant model
 14592 ;;
 14593                           
 14594                           	psect	text55
 14595  005DEE                     __ptext55:
 14596                           	callstack 0
 14597  005DEE                     _Motor_Start:
 14598                           	callstack 28
 14599  005DEE                     
 14600                           ;main.c: 149:     PORTDbits.RD0 = 1;
 14601  005DEE  8083               	bsf	131,0,c	;volatile
 14602                           
 14603                           ;main.c: 150:     PORTDbits.RD1 = 0;
 14604  005DF0  9283               	bcf	131,1,c	;volatile
 14605  005DF2  0012               	return		;funcret
 14606  005DF4                     __end_of_Motor_Start:
 14607                           	callstack 0
 14608                           
 14609 ;; *************** function _dataRx *****************
 14610 ;; Defined at:
 14611 ;;		line 39 in file "main.c"
 14612 ;; Parameters:    Size  Location     Type
 14613 ;;		None
 14614 ;; Auto vars:     Size  Location     Type
 14615 ;;		None
 14616 ;; Return value:  Size  Location     Type
 14617 ;;                  1    wreg      void 
 14618 ;; Registers used:
 14619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14620 ;; Tracked objects:
 14621 ;;		On entry : 0/0
 14622 ;;		On exit  : 0/0
 14623 ;;		Unchanged: 0/0
 14624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14625 ;;      Params:         0       0       0       0       0       0       0       0       0
 14626 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14627 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14628 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14629 ;;Total ram usage:        2 bytes
 14630 ;; Hardware stack levels used: 1
 14631 ;; Hardware stack levels required when called: 1
 14632 ;; This function calls:
 14633 ;;		_UART_Read
 14634 ;; This function is called by:
 14635 ;;		Interrupt level 2
 14636 ;; This function uses a non-reentrant model
 14637 ;;
 14638                           
 14639                           	psect	intcode
 14640  000008                     __pintcode:
 14641                           	callstack 0
 14642  000008                     _dataRx:
 14643                           	callstack 21
 14644                           
 14645                           ;incstack = 0
 14646  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14647  00000A  EDDD  F02A         	call	int_func,f	;refresh shadow registers
 14648                           
 14649                           	psect	intcode_body
 14650  0055BA                     __pintcode_body:
 14651                           	callstack 21
 14652  0055BA                     int_func:
 14653                           	callstack 21
 14654  0055BA  0006               	pop		; remove dummy address from shadow register refresh
 14655  0055BC  CFD9 F001          	movff	fsr2l,??_dataRx
 14656  0055C0  CFDA F002          	movff	fsr2h,??_dataRx+1
 14657  0055C4                     
 14658                           ;main.c: 41:     if( PIR1bits.RC1IF == 1 ){
 14659  0055C4  AA9E               	btfss	158,5,c	;volatile
 14660  0055C6  EFE7  F02A         	goto	i2u777_41
 14661  0055CA  EFE9  F02A         	goto	i2u777_40
 14662  0055CE                     i2u777_41:
 14663  0055CE  EF11  F02B         	goto	i2l83
 14664  0055D2                     i2u777_40:
 14665  0055D2                     
 14666                           ;main.c: 43:         letra = UART_Read();
 14667  0055D2  ECEE  F02E         	call	_UART_Read	;wreg free
 14668  0055D6  6E5C               	movwf	_letra^0,c
 14669  0055D8                     
 14670                           ;main.c: 44:         if(letra == '#'){
 14671  0055D8  0E23               	movlw	35
 14672  0055DA  185C               	xorwf	_letra^0,w,c
 14673  0055DC  A4D8               	btfss	status,2,c
 14674  0055DE  EFF3  F02A         	goto	i2u778_41
 14675  0055E2  EFF5  F02A         	goto	i2u778_40
 14676  0055E6                     i2u778_41:
 14677  0055E6  EFFC  F02A         	goto	i2l6127
 14678  0055EA                     i2u778_40:
 14679  0055EA                     
 14680                           ;main.c: 45:                 flag_Rx_completed = 1;
 14681  0055EA  0E00               	movlw	0
 14682  0055EC  0101               	movlb	1	; () banked
 14683  0055EE  6F3B               	movwf	(_flag_Rx_completed+1)& (0+255),b
 14684  0055F0  0E01               	movlw	1
 14685  0055F2  6F3A               	movwf	_flag_Rx_completed& (0+255),b
 14686                           
 14687                           ;main.c: 46:         }
 14688  0055F4  EF10  F02B         	goto	i2l6133
 14689  0055F8                     i2l6127:
 14690                           
 14691                           ;main.c: 48:             if( letra != '*'){
 14692  0055F8  0E2A               	movlw	42
 14693  0055FA  185C               	xorwf	_letra^0,w,c
 14694  0055FC  B4D8               	btfsc	status,2,c
 14695  0055FE  EF03  F02B         	goto	i2u779_41
 14696  005602  EF05  F02B         	goto	i2u779_40
 14697  005606                     i2u779_41:
 14698  005606  EF10  F02B         	goto	i2l6133
 14699  00560A                     i2u779_40:
 14700  00560A                     
 14701                           ;main.c: 49:                 bufferRx[indiceRx] = letra;
 14702  00560A  0EA0               	movlw	low _bufferRx
 14703  00560C  0101               	movlb	1	; () banked
 14704  00560E  253C               	addwf	_indiceRx& (0+255),w,b
 14705  005610  6ED9               	movwf	fsr2l,c
 14706  005612  0E01               	movlw	high _bufferRx
 14707  005614  213D               	addwfc	(_indiceRx+1)& (0+255),w,b
 14708  005616  6EDA               	movwf	fsr2h,c
 14709  005618  C05C  FFDF         	movff	_letra,indf2
 14710  00561C                     
 14711                           ; BSR set to: 1
 14712                           ;main.c: 50:                 indiceRx++;
 14713  00561C  4B3C               	infsnz	_indiceRx& (0+255),f,b
 14714  00561E  2B3D               	incf	(_indiceRx+1)& (0+255),f,b
 14715  005620                     i2l6133:
 14716                           
 14717                           ;main.c: 55:         PIR1bits.RC1IF = 0;
 14718  005620  9A9E               	bcf	158,5,c	;volatile
 14719  005622                     i2l83:
 14720  005622  C002  FFDA         	movff	??_dataRx+1,fsr2h
 14721  005626  C001  FFD9         	movff	??_dataRx,fsr2l
 14722  00562A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14723  00562C  0011               	retfie		f
 14724  00562E                     __end_of_dataRx:
 14725                           	callstack 0
 14726                           
 14727 ;; *************** function _UART_Read *****************
 14728 ;; Defined at:
 14729 ;;		line 52 in file "UART_LIB.c"
 14730 ;; Parameters:    Size  Location     Type
 14731 ;;		None
 14732 ;; Auto vars:     Size  Location     Type
 14733 ;;		None
 14734 ;; Return value:  Size  Location     Type
 14735 ;;                  1    wreg      unsigned char 
 14736 ;; Registers used:
 14737 ;;		wreg, status,2
 14738 ;; Tracked objects:
 14739 ;;		On entry : 0/0
 14740 ;;		On exit  : 0/0
 14741 ;;		Unchanged: 0/0
 14742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14743 ;;      Params:         0       0       0       0       0       0       0       0       0
 14744 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14745 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14746 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14747 ;;Total ram usage:        0 bytes
 14748 ;; Hardware stack levels used: 1
 14749 ;; This function calls:
 14750 ;;		Nothing
 14751 ;; This function is called by:
 14752 ;;		_dataRx
 14753 ;; This function uses a non-reentrant model
 14754 ;;
 14755                           
 14756                           	psect	text57
 14757  005DDC                     __ptext57:
 14758                           	callstack 0
 14759  005DDC                     _UART_Read:
 14760                           	callstack 21
 14761  005DDC                     i2l170:
 14762  005DDC  AA9E               	btfss	158,5,c	;volatile
 14763  005DDE  EFF3  F02E         	goto	i2u759_41
 14764  005DE2  EFF5  F02E         	goto	i2u759_40
 14765  005DE6                     i2u759_41:
 14766  005DE6  EFEE  F02E         	goto	i2l170
 14767  005DEA                     i2u759_40:
 14768  005DEA                     
 14769                           ;UART_LIB.c: 54:     return RCREG;
 14770  005DEA  50AE               	movf	174,w,c	;volatile
 14771  005DEC  0012               	return		;funcret
 14772  005DEE                     __end_of_UART_Read:
 14773                           	callstack 0
 14774                           
 14775                           	psect	rparam
 14776  0000                     
 14777                           	psect	temp
 14778  00005D                     btemp:
 14779                           	callstack 0
 14780  00005D                     	ds	1
 14781  0000                     int$flags	set	btemp
 14782  0000                     wtemp8	set	btemp+1
 14783  0000                     ttemp5	set	btemp+1
 14784  0000                     ttemp6	set	btemp+4
 14785  0000                     ttemp7	set	btemp+8
 14786                           
 14787                           	psect	idloc
 14788                           
 14789                           ;Config register IDLOC0 @ 0x200000
 14790                           ;	unspecified, using default values
 14791  200000                     	org	2097152
 14792  200000  FF                 	db	255
 14793                           
 14794                           ;Config register IDLOC1 @ 0x200001
 14795                           ;	unspecified, using default values
 14796  200001                     	org	2097153
 14797  200001  FF                 	db	255
 14798                           
 14799                           ;Config register IDLOC2 @ 0x200002
 14800                           ;	unspecified, using default values
 14801  200002                     	org	2097154
 14802  200002  FF                 	db	255
 14803                           
 14804                           ;Config register IDLOC3 @ 0x200003
 14805                           ;	unspecified, using default values
 14806  200003                     	org	2097155
 14807  200003  FF                 	db	255
 14808                           
 14809                           ;Config register IDLOC4 @ 0x200004
 14810                           ;	unspecified, using default values
 14811  200004                     	org	2097156
 14812  200004  FF                 	db	255
 14813                           
 14814                           ;Config register IDLOC5 @ 0x200005
 14815                           ;	unspecified, using default values
 14816  200005                     	org	2097157
 14817  200005  FF                 	db	255
 14818                           
 14819                           ;Config register IDLOC6 @ 0x200006
 14820                           ;	unspecified, using default values
 14821  200006                     	org	2097158
 14822  200006  FF                 	db	255
 14823                           
 14824                           ;Config register IDLOC7 @ 0x200007
 14825                           ;	unspecified, using default values
 14826  200007                     	org	2097159
 14827  200007  FF                 	db	255
 14828                           
 14829                           	psect	config
 14830                           
 14831                           ;Config register CONFIG1L @ 0x300000
 14832                           ;	PLL Prescaler Selection bits
 14833                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 14834                           ;	System Clock Postscaler Selection bits
 14835                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 14836                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 14837                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 14838  300000                     	org	3145728
 14839  300000  00                 	db	0
 14840                           
 14841                           ;Config register CONFIG1H @ 0x300001
 14842                           ;	Oscillator Selection bits
 14843                           ;	FOSC = HS, HS oscillator (HS)
 14844                           ;	Fail-Safe Clock Monitor Enable bit
 14845                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14846                           ;	Internal/External Oscillator Switchover bit
 14847                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14848  300001                     	org	3145729
 14849  300001  0C                 	db	12
 14850                           
 14851                           ;Config register CONFIG2L @ 0x300002
 14852                           ;	Power-up Timer Enable bit
 14853                           ;	PWRT = OFF, PWRT disabled
 14854                           ;	Brown-out Reset Enable bits
 14855                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 14856                           ;	Brown-out Reset Voltage bits
 14857                           ;	BORV = 3, Minimum setting 2.05V
 14858                           ;	USB Voltage Regulator Enable bit
 14859                           ;	VREGEN = OFF, USB voltage regulator disabled
 14860  300002                     	org	3145730
 14861  300002  1F                 	db	31
 14862                           
 14863                           ;Config register CONFIG2H @ 0x300003
 14864                           ;	Watchdog Timer Enable bit
 14865                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 14866                           ;	Watchdog Timer Postscale Select bits
 14867                           ;	WDTPS = 32768, 1:32768
 14868  300003                     	org	3145731
 14869  300003  1E                 	db	30
 14870                           
 14871                           ; Padding undefined space
 14872  300004                     	org	3145732
 14873  300004  FF                 	db	255
 14874                           
 14875                           ;Config register CONFIG3H @ 0x300005
 14876                           ;	CCP2 MUX bit
 14877                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 14878                           ;	PORTB A/D Enable bit
 14879                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 14880                           ;	Low-Power Timer 1 Oscillator Enable bit
 14881                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 14882                           ;	MCLR Pin Enable bit
 14883                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 14884  300005                     	org	3145733
 14885  300005  81                 	db	129
 14886                           
 14887                           ;Config register CONFIG4L @ 0x300006
 14888                           ;	Stack Full/Underflow Reset Enable bit
 14889                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14890                           ;	Single-Supply ICSP Enable bit
 14891                           ;	LVP = OFF, Single-Supply ICSP disabled
 14892                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 14893                           ;	ICPRT = OFF, ICPORT disabled
 14894                           ;	Extended Instruction Set Enable bit
 14895                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14896                           ;	Background Debugger Enable bit
 14897                           ;	DEBUG = 0x1, unprogrammed default
 14898  300006                     	org	3145734
 14899  300006  81                 	db	129
 14900                           
 14901                           ; Padding undefined space
 14902  300007                     	org	3145735
 14903  300007  FF                 	db	255
 14904                           
 14905                           ;Config register CONFIG5L @ 0x300008
 14906                           ;	Code Protection bit
 14907                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 14908                           ;	Code Protection bit
 14909                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 14910                           ;	Code Protection bit
 14911                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 14912                           ;	Code Protection bit
 14913                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 14914  300008                     	org	3145736
 14915  300008  0F                 	db	15
 14916                           
 14917                           ;Config register CONFIG5H @ 0x300009
 14918                           ;	Boot Block Code Protection bit
 14919                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 14920                           ;	Data EEPROM Code Protection bit
 14921                           ;	CPD = OFF, Data EEPROM is not code-protected
 14922  300009                     	org	3145737
 14923  300009  C0                 	db	192
 14924                           
 14925                           ;Config register CONFIG6L @ 0x30000A
 14926                           ;	Write Protection bit
 14927                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 14928                           ;	Write Protection bit
 14929                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 14930                           ;	Write Protection bit
 14931                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 14932                           ;	Write Protection bit
 14933                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 14934  30000A                     	org	3145738
 14935  30000A  0F                 	db	15
 14936                           
 14937                           ;Config register CONFIG6H @ 0x30000B
 14938                           ;	Configuration Register Write Protection bit
 14939                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 14940                           ;	Boot Block Write Protection bit
 14941                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 14942                           ;	Data EEPROM Write Protection bit
 14943                           ;	WRTD = OFF, Data EEPROM is not write-protected
 14944  30000B                     	org	3145739
 14945  30000B  E0                 	db	224
 14946                           
 14947                           ;Config register CONFIG7L @ 0x30000C
 14948                           ;	Table Read Protection bit
 14949                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 14950                           ;	Table Read Protection bit
 14951                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 14952                           ;	Table Read Protection bit
 14953                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 14954                           ;	Table Read Protection bit
 14955                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 14956  30000C                     	org	3145740
 14957  30000C  0F                 	db	15
 14958                           
 14959                           ;Config register CONFIG7H @ 0x30000D
 14960                           ;	Boot Block Table Read Protection bit
 14961                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 14962  30000D                     	org	3145741
 14963  30000D  40                 	db	64
 14964                           tosu	equ	0xFFF
 14965                           tosh	equ	0xFFE
 14966                           tosl	equ	0xFFD
 14967                           stkptr	equ	0xFFC
 14968                           pclatu	equ	0xFFB
 14969                           pclath	equ	0xFFA
 14970                           pcl	equ	0xFF9
 14971                           tblptru	equ	0xFF8
 14972                           tblptrh	equ	0xFF7
 14973                           tblptrl	equ	0xFF6
 14974                           tablat	equ	0xFF5
 14975                           prodh	equ	0xFF4
 14976                           prodl	equ	0xFF3
 14977                           indf0	equ	0xFEF
 14978                           postinc0	equ	0xFEE
 14979                           postdec0	equ	0xFED
 14980                           preinc0	equ	0xFEC
 14981                           plusw0	equ	0xFEB
 14982                           fsr0h	equ	0xFEA
 14983                           fsr0l	equ	0xFE9
 14984                           wreg	equ	0xFE8
 14985                           indf1	equ	0xFE7
 14986                           postinc1	equ	0xFE6
 14987                           postdec1	equ	0xFE5
 14988                           preinc1	equ	0xFE4
 14989                           plusw1	equ	0xFE3
 14990                           fsr1h	equ	0xFE2
 14991                           fsr1l	equ	0xFE1
 14992                           bsr	equ	0xFE0
 14993                           indf2	equ	0xFDF
 14994                           postinc2	equ	0xFDE
 14995                           postdec2	equ	0xFDD
 14996                           preinc2	equ	0xFDC
 14997                           plusw2	equ	0xFDB
 14998                           fsr2h	equ	0xFDA
 14999                           fsr2l	equ	0xFD9
 15000                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    0
    Data        118
    BSS         147
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      92
    BANK0           160    151     153
    BANK1           256     35     245
    BANK2           256      0      50
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_25(CODE[1]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_2(CODE[2]), NULL(NULL[0]), STR_1(CODE[2]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    atof@s	PTR const unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    strtof@s	PTR const unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    strtof@res	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_3(CODE[33]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_3(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_3(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_3(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK2[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1219$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1219$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 50
		 -> bufferRx(BANK1[50]), 

    memset@s	PTR unsigned char  size(2) Largest target is 50
		 -> bufferRx(BANK1[50]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK2[50]), 

    sp__memset	PTR void  size(2) Largest target is 50
		 -> bufferRx(BANK1[50]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    main@pch	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _efgtoa->___fltol
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _atof->_strtof
    _strtof->___fldiv
    _strtof->___flge
    _toupper->_islower
    _isxdigit->_isdigit
    ___flge->___flmul
    _UART_Write_Text->_UART_Write_Chr
    _UART_Init->___lldiv
    _PWM1_Set_Duty->___fltol
    _PWM1_Init->___fltol
    ___xxtofl->_getDistance
    ___fltol->___fldiv
    ___flmul->___flsub
    ___fldiv->___flmul
    ___fladd->___xxtofl

Critical Paths under _dataRx in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _atof->_strtof
    _strtof->___fldiv
    _PWM1_Set_Duty->___fltol
    _PWM1_Init->___fltol
    ___fltol->___fldiv

Critical Paths under _dataRx in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _dataRx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _dataRx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _dataRx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _dataRx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _dataRx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _dataRx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _dataRx in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0  133102
                                            149 BANK0      2     2      0
                                             13 BANK1     22    22      0
                        _Motor_Start
                          _PWM1_Init
                      _PWM1_Set_Duty
                         _PWM1_Start
                          _UART_Init
                    _UART_Write_Text
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _atof
                        _getDistance
                             _memset
                            _sprintf
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               4     0      4    1752
                                             13 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     3      4     635
                                              6 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     3      4     635
                                              6 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               4     0      4     392
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             37    15     22   54483
                                            127 BANK0     22     0     22
                                              0 BANK1     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   53967
                                            119 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   53371
                                             91 BANK0     28    22      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   37222
                                             29 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1105
                                              8 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             81 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5267
                                             36 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6493
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4227
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    3034
                                              9 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6     947
                                              2 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _getDistance                                          4     2      2      24
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _atof                                                 4     0      4   25310
                                             30 BANK0      4     0      4
                             _strtof
 ---------------------------------------------------------------------------------
 (2) _strtof                                              21    17      4   25189
                                             81 COMRAM     4     0      4
                                             13 BANK0     17    17      0
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                             ___wmul
                           ___xxtofl
                            _isdigit
                            _isspace
                           _isxdigit
                               _nanf
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              6     4      2     464
                                              8 COMRAM     6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (4) _islower                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 8     4      4      99
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _isxdigit                                             8     6      2    1477
                                              8 COMRAM     7     5      2
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2    1091
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     349
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1052
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     245
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1526
                                             69 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     950
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2     143
                                              3 COMRAM     2     0      2
                     _UART_Write_Chr
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Chr                                       1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16     8      8     504
                                             15 COMRAM    16     8      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        5     5      0   12677
                                             15 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            9     7      2   17214
                                             15 BANK0      9     7      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1158
                                              6 COMRAM    14    10      4
                        _getDistance (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1327
                                             81 COMRAM     8     4      4
                                             13 BANK0      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    6113
                                             44 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3983
                                             69 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4342
                                             20 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Motor_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _dataRx                                               2     2      0       0
                                              0 COMRAM     2     2      0
                          _UART_Read
 ---------------------------------------------------------------------------------
 (10) _UART_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Motor_Start
   _PWM1_Init
     ___fladd
       ___xxtofl (ARG)
         _getDistance (ARG)
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _PWM1_Set_Duty
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _PWM1_Start
   _UART_Init
     ___lldiv
   _UART_Write_Text
     _UART_Write_Chr
   ___fladd
   ___flge
     ___flmul (ARG)
   ___flmul
   ___flsub
   ___fltol
   ___xxtofl
   _atof
     _strtof
       ___fldiv
       ___fleq
       ___flge
       ___flmul
       ___flneg
       ___lmul
       ___wmul
       ___xxtofl
       _isdigit
       _isspace
       _isxdigit
         _isdigit
       _nanf
       _toupper
         _islower
   _getDistance
   _memset
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 _dataRx (ROOT)
   _UART_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      32       9       19.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      F5       7       95.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     97      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5C       1       97.9%
BITBIGSFRhhlh       26      0       0      21        0.0%
BITBIGSFRlll        21      0       0      30        0.0%
BITBIGSFRllhh        F      0       0      28        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhlll        C      0       0      26        0.0%
BITBIGSFRhlhll       A      0       0      25        0.0%
BITBIGSFRhhll        8      0       0      22        0.0%
BITBIGSFRlhh         7      0       0      27        0.0%
BITBIGSFRhlhh        2      0       0      23        0.0%
BITBIGSFRhlhlh       1      0       0      24        0.0%
BITBIGSFRllhl        1      0       0      29        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21C      31        0.0%
DATA                 0      0     21C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 02 11:17:34 2023

       PWM1_Set_Duty@val 0070             ___fldiv@aexp 006C             ___fldiv@bexp 006B  
           ___fldiv@sign 0064        PWM1_Set_Duty@duty 006F                       l96 3172  
                     _Kd 0196                       _Ki 0192                       _Kp 019A  
           ___awdiv@sign 0008      ___wmul@multiplicand 0005                      l110 5A3E  
                    l111 5A46                      l105 5A12                      l114 5DF2  
                    l220 5DA2                      l214 5DF6                      l151 4EB4  
                    l231 5760                      l208 53BA                      l232 5770  
                    l153 4EBE                      l161 5DDA                      l154 4EC6  
                    l155 4EFA                      l254 55B8                      l158 5DC8  
                    l334 46D4                      l247 55A8                      l167 5D56  
                    l194 3F9C                      l347 49AE                      l451 5240  
                    l517 4C0C                      l197 4182                      l464 546A  
                    l802 3C68                      l490 4D10                      l804 3AC8  
                    l813 3B0E                      l485 4CCA                      l750 2D46  
                    l494 5CBE                      l815 3B86                      l807 3A8C  
                    l479 5514                      l816 3B74                      l841 375E  
                    l834 3568                      l851 388E                      l843 37D6  
                    l748 2D92                      l844 37C4                      l908 5958  
                    l765 2EAC                      l757 3062                      l749 2D80  
                    l774 2F7C                      l838 38CC                      l790 5AD2  
                    l775 2F6A                      l951 5286                      l882 4488  
                    l954 52C8                      l962 3D0A                      l875 43F0  
                    l956 5302                      l964 3D12                      l878 454C  
                    l982 3F48                      l895 484A                      l889 44E4  
                    l998 24FC                      _PR2 000FCB                      _RX9 007D5E  
                    _TX9 007D66                      _abs 5BA0                      _pad 5242  
                    _ref 018E             ___awmod@sign 0008                      wreg 000FE8  
           ___flmul@aexp 003A             ___flmul@bexp 003F             ___flmul@sign 0039  
           ___flmul@temp 0044             ___flmul@prod 0040             ___fltol@exp1 006E  
                   l1014 1CAA                     l1112 2AE8                     l1042 20EA  
                   l1106 2BA2                     ?_abs 0015                     l1134 5BD6  
                   l1230 5CF4                     l1118 56FE                     l1207 517C  
                   l1215 5B5A                     l1119 5706                     l1224 58FE  
                   l1137 5BDE                     l1129 4E0E                     l1314 18F0  
                   l1162 4B04                     l1218 5DF8                     l1234 50B2  
                   l1171 42DC                     l1083 25F2                     l1430 5DC4  
                   l1270 18AC                     l1159 4AFC                     l1424 569C  
                   l1344 1104                     l1168 4398                     l1192 5C16  
                   l1440 4FDC                     l1409 5D7C                     l1186 59FC  
                   l1178 5C86                     l1362 13BC                     l1363 1362  
                   l1355 12CE                     l1443 4FD4                     l1364 13CE  
                   l1452 589A                     l1453 58A2                     l1456 595A  
                   l1474 5A84                     l1458 59AA                     l1468 5834  
                   l1485 5B96                     l1477 5A8C                     l1469 583C  
                   l1494 5C4E                     l1488 5B9E                     l6001 4EAC  
                   l6003 4EAE                     l6005 4EB8                     l6013 4ED0  
                   l6021 4EFC                     l6111 5D28                     l5231 5718  
                   l6031 4F50                     l6023 4F0E                     l5241 43AC  
                   l6009 4ECA                     l6113 5D2C                     l5233 5726  
                   l5225 5C18                     l7001 53F0                     l6041 4FB8  
                   l6033 4F68                     l6025 4F28                     l6019 5DEE  
                   l5251 442A                     l5243 43BA                     l6115 5D3A  
                   l5235 5736                     l7011 5436                     l7003 5402  
                   l6043 4FC4                     l5261 447E                     l5253 4432  
                   l5245 4400                     l5501 5568                     l6117 5D3E  
                   l5237 5740                     l5229 5708                     l6053 46D6  
                   l7021 5462                     l7013 543E                     l7005 540A  
                   l6045 4FCC                     l6037 4F7E                     l6029 4F34  
                   ?_pad 0013                     l7111 4BFC                     l7103 4BC0  
                   l5271 44F4                     l5263 44BA                     l5255 443E  
                   l5247 4416                     l5239 439C                     l5503 5586  
                   l7031 54D8                     l6071 47D4                     l6063 4736  
                   l7015 5444                     l7007 5412                     l6039 4FA0  
                   l6401 2C74                     l7105 4BCC                     l5281 453C  
                   l5273 44F8                     l5265 44C6                     l5257 4470  
                   l5505 5596                     l7033 54E8                     l7025 546C  
                   l7041 4C0E                     l5441 5DB4                     l6081 4834  
                   l6065 478E                     l6057 46F4                     l7121 5272  
                   l7009 5420                     l7017 544A                     l7201 4388  
                   l6411 2CAC                     l6403 2C84                     l7107 4BDC  
                   l5275 451C                     l5267 44D4                     l5259 4472  
                   l5507 5598                     l7035 550C                     l7027 549A  
                   l7051 4C98                     l7043 4C3C                     l7211 59B0  
                   l8011 100E                     l8003 0FCA                     l6091 5A10  
                   l6083 4838                     l6075 47EE                     l6059 4700  
                   l7131 52D6                     l7123 527E                     l7115 5242  
                   l7019 545A                     l6421 2CC0                     l6413 2CB0  
                   l6405 2C96                     l7109 4BEC                     l5277 452C  
                   l5269 44F2                     l5509 55A2                     l7037 5512  
                   l7029 54AA                     l7053 4CAA                     l7045 4C4C  
                   l7213 59C4                     l7205 5C50                     l8101 139A  
                   l8021 1042                     l8013 1012                     l8005 0FCC  
                   l6093 5A24                     l6085 59FE                     l6077 4822  
                   l6069 47A8                     l7133 52EA                     l7125 5292  
                   l7117 5250                     l7221 3C6A                     l7141 4D12  
                   l7301 1978                     l6511 2F0E                     l6503 2EE6  
                   l6431 2CD4                     l6423 2CC4                     l6415 2CB4  
                   l6407 2CA4                     l7071 4B06                     l5279 453A  
                   l7055 4CB8                     l7047 4C7A                     l7063 5C88  
                   l7215 59F2                     l5439 5DA4                     l5463 5B5C  
                   l8111 1412                     l8103 13CA                     l8023 104E  
                   l8015 101A                     l8007 0FEA                     l6095 5A28  
                   l6087 5A06                     l6079 482E                     l6351 50D8  
                   l7127 52A6                     l7119 5264                     l7231 3CE4  
                   l7223 3C8A                     l7143 4D32                     l7311 19A6  
                   l7303 198A                     l6513 2F16                     l6505 2EF0  
                   l6521 2F3A                     l6441 2CE8                     l6433 2CD8  
                   l6425 2CC8                     l6417 2CB8                     l6409 2CA8  
                   l6361 2BA4                     l7081 4B5E                     l7073 4B1E  
                   l7057 4D08                     l7049 4C8A                     l7065 5C9E  
                   l7217 59F6                     l7209 59AC                     l8201 17DA  
                   l8121 1458                     l8113 1430                     l8105 13D6  
                   l8041 1112                     l8025 105E                     l8033 10A8  
                   l8017 1022                     l8009 0FF0                     l6097 5A30  
                   l6089 5A08                     l6601 4592                     l7137 5BA0  
                   l6353 50E2                     l7129 52AA                     l7241 3D40  
                   l7233 3CFE                     l7225 3CB2                     l7145 4D70  
                   l7153 4DB0                     l7401 1D52                     l7321 1A00  
                   l7305 1996                     l7313 19AC                     l5481 59A2  
                   l5473 595A                     l6531 2F8C                     l6523 2F3E  
                   l6515 2F1A                     l6507 2EFE                     l6451 2D60  
                   l6443 2D12                     l6435 2CDC                     l6427 2CCC  
                   l6419 2CBC                     l6371 2BE0                     l6363 2BB0  
                   l7083 4B6E                     l5491 5526                     l7059 4D0E  
                   l7067 5CAE                     l5467 5B5C                     l8211 1874  
                   l8203 17F4                     l8115 143A                     l8107 13DE  
                   l8051 1166                     l8043 111A                     l8035 10E0  
                   l8027 107A                     l8019 1024                     l6611 45E8  
                   l6603 45B2                     l7139 5BBA                     l6355 5100  
                   l6347 50B4                     l7251 3DE0                     l7243 3D48  
                   l7235 3D1A                     l7227 3CD2                     l7155 4DC2  
                   l7147 4D98                     l7163 58A4                     l7171 5A48  
                   l7411 1D96                     l7403 1D64                     l7323 1A1C  
                   l7331 1A66                     l7307 199E                     l5475 5976  
                   l6541 2FF2                     l6533 2F98                     l6525 2F4C  
                   l6517 2F2A                     l6509 2F00                     l6461 2DA0  
                   l6453 2D64                     l6445 2D2E                     l6437 2CE0  
                   l6429 2CD0                     l6381 2C10                     l6373 2BF0  
                   l6365 2BBE                     l6701 3972                     l7093 4B98  
                   l7085 4B72                     l7077 4B32                     l5493 553C  
                   l5485 5DC8                     l5469 5B8A                     l8221 18BC  
                   l8213 1884                     l8205 1828                     l8141 152C  
                   l8133 14C2                     l8125 1472                     l8117 1454  
                   l8109 13F8                     l8061 11D0                     l8045 1122  
                   l8037 10F0                     l8029 10A6                     l6621 466A  
                   l6613 45FC                     l6605 45B6                     l6357 5136  
                   l6349 50C6                     l7261 3E9C                     l7253 3DE6  
                   l7245 3D52                     l7237 3D2C                     l7229 3CE2  
                   l7149 4DA4                     l7181 41FC                     l7165 58B4  
                   l7173 5A76                     l7501 2240                     l7421 1DE0  
                   l7413 1DAE                     l7405 1D72                     l7341 1AD6  
                   l7325 1A34                     l7309 19A2                     l8301 30A2  
                   l6551 303A                     l6543 3002                     l6535 2FA6  
                   l6527 2F62                     l6519 2F2C                     l6471 2DE2  
                   l6463 2DB0                     l6455 2D72                     l6447 2D3E  
                   l6439 2CE4                     l6391 2C3A                     l6383 2C22  
                   l6375 2BF2                     l6367 2BC0                     l6711 39B2  
                   l6703 3982                     l7095 4BA2                     l7087 4B80  
                   l7079 4B5C                     l8231 3F56                     l5495 5544  
                   l5487 5DD6                     l8223 18E0                     l8207 1830  
                   l8151 15B0                     l8143 1560                     l8135 14F6  
                   l8127 14A8                     l8071 1238                     l8063 11DE  
                   l8055 117A                     l8047 1134                     l6631 46B4  
                   l6623 466C                     l6615 460A                     l6607 45C2  
                   l7271 3EEA                     l7263 3EB6                     l7247 3D58  
                   l7255 3E4A                     l7239 3D3A                     l7159 4E06  
                   l7191 42CC                     l7183 4210                     l7167 5A48  
                   l7511 22DE                     l7503 2244                     l7423 1DF4  
                   l7431 1EEA                     l7415 1DC0                     l7407 1D76  
                   l7351 1B0C                     l7327 1A3E                     l7319 19D2  
                   l5479 5982                     l8311 30C4                     l8303 30A6  
                   l6553 303C                     l6545 3022                     l6537 2FE0  
                   l6481 2E10                     l6473 2DF0                     l6457 2D74  
                   l6449 2D54                     l6393 2C4A                     l6385 2C24  
                   l6369 2BD0                     l6377 2BFA                     l6801 3C5E  
                   l6713 39C2                     l6721 39E2                     l6705 3984  
                   l7097 4BAC                     l8241 3FAE                     l8233 3F5E  
                   l5497 5550                     l5489 5516                     l8217 1898  
                   l8209 1842                     l8161 1638                     l8153 15C2  
                   l8137 1528                     l8129 14BE                     l8145 1592  
                   l8081 12DC                     l8073 1254                     l8065 11FA  
                   l8057 11AC                     l8049 1150                     l7601 4A26  
                   l6625 467E                     l6617 461C                     l6609 45E0  
                   l6641 487E                     l7273 3EFC                     l7257 3E64  
                   l7265 3EC4                     l7249 3DDA                     l7185 421E  
                   l7193 4300                     l7177 4184                     l7521 233C  
                   l7505 224A                     l7513 22E2                     l7441 1FB6  
                   l7433 1F08                     l7425 1E58                     l7409 1D88  
                   l7417 1DC8                     l7361 1BD6                     l7337 1A8C  
                   l8321 3158                     l8313 30C6                     l8305 30BC  
                   l6555 3042                     l6547 3026                     l6539 2FE2  
                   l6491 2E7C                     l6483 2E1A                     l6475 2DFC  
                   l6467 2DC4                     l6459 2D7E                     l6395 2C5A  
                   l6387 2C2A                     l6379 2C0A                     l6731 3A20  
                   l6723 39F2                     l6715 39CA                     l6707 398C  
                   l6811 34B0                     l8251 415E                     l8243 3FF4  
                   l8227 3F4A                     l5499 555E                     l8171 169C  
                   l8155 15D0                     l8147 15A0                     l8091 1338  
                   l8083 12F6                     l8075 126C                     l8067 1212  
                   l8059 11C0                     l7611 4A98                     l7603 4A2E  
                   l6619 464A                     l6627 4684                     l6651 48D6  
                   l6643 4882                     l6635 484C                     l6563 5B18  
                   l6571 5CC0                     l7275 3F08                     l7267 3ED6  
                   l7259 3E82                     l7195 433C                     l7179 41A4  
                   l7531 237A                     l7523 234C                     l7515 2300  
                   l7507 22A2                     l7451 2066                     l7443 1FC6  
                   l7435 1F3C                     l7427 1EB0                     l7419 1DD0  
                   l7371 1C58                     l7363 1C0A                     l7355 1B42  
                   l7339 1ABA                     l7291 1922                     l7283 18F2  
                   l5931 5804                     l8323 315E                     l8315 30DA  
                   l8331 31E8                     l8307 30C0                     l6557 3050  
                   l6549 3034                     l6493 2E8C                     l6477 2E00  
                   l6469 2DD4                     l6485 2E20                     l6397 2C6A  
                   l6389 2C38                     l6741 3A68                     l6733 3A30  
                   l6725 39F2                     l6717 39CE                     l6709 399C  
                   l6901 3780                     l6821 34F0                     l6813 34BE  
                   l8245 408A                     l8229 3F4E                     l8237 3F66  
                   l8261 5396                     l8181 1714                     l8173 16A6  
                   l8165 164C                     l8157 15E0                     l8149 15A8  
                   l8093 133A                     l8077 1280                     l8069 1228  
                   l7613 4ACE                     l7605 4A62                     l6629 4694  
                   l6661 4958                     l6653 48EA                     l6645 4890  
                   l6637 4850                     l6565 5B24                     l6573 5CCC  
                   l7277 3F10                     l7269 3EE4                     l7197 4350  
                   l7189 4290                     l6581 5BE0                     l7541 23B0  
                   l7533 238A                     l7525 2350                     l7517 231C  
                   l7509 22D6                     l7461 20D6                     l7453 209A  
                   l7445 1FD6                     l7437 1F6E                     l7429 1EE4  
                   l7373 1C6A                     l7381 1CB6                     l7365 1C12  
                   l7357 1B76                     l7349 1AF2                     l7293 1946  
                   l7285 18FC                     l7621 4FDE                     l7701 2716  
                   l5933 583E                     l5925 57D8                     l8341 335C  
                   l8333 3220                     l8325 31B2                     l8317 30FA  
                   l8309 30C2                     l6559 3052                     l6487 2E46  
                   l6495 2E9C                     l6479 2E0E                     l6399 2C6C  
                   l6751 3AB6                     l6743 3A7C                     l6735 3A40  
                   l6671 38CE                     l6911 37F2                     l6903 378E  
                   l6831 3520                     l6823 34F6                     l6815 34C0  
                   l8247 40D0                     l8239 3F9E                     l8183 1746  
                   l8175 16C6                     l8167 165C                     l8159 1606  
                   l8095 134E                     l8087 1300                     l8079 1290  
                   l8263 5D58                     l7615 4AE0                     l6591 454E  
                   l6655 48F8                     l6663 495E                     l6647 48B0  
                   l6639 485E                     l6567 5B36                     l6575 5CD0  
                   l7279 3F20                     l7199 4378                     l7551 240C  
                   l7543 23BC                     l7535 2392                     l7527 2360  
                   l7519 232E                     l7471 218C                     l7463 20E2  
                   l7455 20AE                     l7447 200A                     l7439 1F84  
                   l7391 1CF6                     l7375 1C7C                     l7359 1B7C  
                   l7367 1C44                     l7295 1950                     l7287 190C  
                   l7631 503A                     l7623 5008                     l7703 2724  
                   l8271 591A                     l5935 584A                     l5927 57E4  
                   l8351 33F8                     l8343 3390                     l8335 3254  
                   l8327 31C2                     l8319 313C                     l6497 2EC2  
                   l6489 2E7A                     l6761 3AFE                     l6753 3AC6  
                   l6745 3A8A                     l6737 3A50                     l6729 3A06  
                   l6681 390C                     l6673 38DC                     l6921 385C  
                   l6913 3800                     l6905 37BC                     l6841 3558  
                   l6833 3522                     l6825 3506                     l6817 34D0  
                   l6809 34A4                     l8249 413A                     l8257 5308  
                   l6585 5D7E                     l7801 562E                     l8185 1756  
                   l8177 16FA                     l8169 1668                     l8193 177E  
                   l8097 135C                     l6593 4552                     l6665 496E  
                   l6657 4926                     l6649 48CE                     l6569 5B3A  
                   l6577 5CE8                     l7561 2456                     l7545 23C2  
                   l7553 2412                     l7537 23A0                     l7529 2372  
                   l7481 21D6                     l7473 219E                     l7465 2106  
                   l7449 2060                     l7457 20B2                     l7393 1D2C  
                   l7377 1C84                     l7369 1C54                     l7297 1958  
                   l7289 191A                     l7633 5056                     l7721 2854  
                   l7713 27B0                     l7705 2748                     l7641 24FE  
                   l8273 5922                     l5937 5852                     l5929 57EC  
                   l8353 3412                     l8345 33C2                     l8337 32AC  
                   l8329 31DE                     l8281 3068                     l6499 2ED2  
                   l6771 3B3E                     l6763 3B0C                     l6755 3AD8  
                   l6747 3A96                     l6739 3A58                     l6691 393C  
                   l6683 391C                     l6675 38EA                     l6931 38B2  
                   l6923 3876                     l6915 382A                     l6851 35A8  
                   l6843 3578                     l6835 3532                     l6827 350C  
                   l6819 34E0                     l8259 5372                     l6587 5D9A  
                   l7803 5632                     l8179 1702                     l8099 1366  
                   l6595 4560                     l6667 498E                     l6659 4946  
                   l7563 2462                     l7555 2424                     l7547 23E8  
                   l7539 23A8                     l7491 220C                     l7483 21E6  
                   l7475 21AC                     l7467 216A                     l7459 20C2  
                   l7395 1D34                     l7387 1CC8                     l7379 1C9E  
                   l7299 196A                     l7635 5068                     l7627 5014  
                   l7731 2926                     l7723 2864                     l7707 2782  
                   l7715 27F0                     l7651 2554                     l7643 2522  
                   l8275 5940                     l8267 5900                     l5939 586A  
                   l8355 3470                     l8347 33D8                     l8339 3304  
                   l8291 307E                     l8283 306A                     l6781 3BB0  
                   l6773 3B6C                     l6757 3AEE                     l6765 3B1E  
                   l6749 3AB4                     l6693 3942                     l6685 391E  
                   l6677 38EC                     l6925 3892                     l6933 38B8  
                   l6909 37E6                     l6917 382E                     l6861 35F8  
                   l6853 35B2                     l6845 3588                     l6837 3542  
                   l6829 3512                     l7805 5660                     l8197 179C  
                   l8189 176A                     l7901 0B8A                     l7821 084A  
                   l6597 4580                     l6941 5A9E                     l7581 24D6  
                   l7573 2486                     l7565 246A                     l7557 243E  
                   l7549 2404                     l7493 2210                     l7485 21EA  
                   l7469 2178                     l7477 21B4                     l7389 1CDA  
                   l7397 1D38                     l7637 5090                     l7629 5022  
                   l7741 2994                     l7725 2896                     l7717 2812  
                   l7709 27A2                     l7653 2556                     l7645 2530  
                   l7813 569E                     l8269 5912                     l8357 347C  
                   l8349 33E8                     l8293 3084                     l8285 306C  
                   l6791 3C28                     l6783 3BDA                     l6767 3B2C  
                   l6759 3AF4                     l6695 3950                     l6679 38FC  
                   l6687 3926                     l6935 38BC                     l6927 38A2  
                   l6919 3848                     l6871 363A                     l6863 3604  
                   l6855 35C8                     l6839 3552                     l5983 5DF4  
                   l5991 4E76                     l7807 5692                     l8199 17D0  
                   l7911 0C00                     l7903 0BB2                     l7831 08AA  
                   l7823 085C                     l7591 49C4                     l6599 4584  
                   l6951 5198                     l7583 24DC                     l7575 24B2  
                   l7567 247A                     l7559 2444                     l7495 2216  
                   l7487 21F0                     l7479 21C8                     l7399 1D40  
                   l7743 29C4                     l7735 295E                     l7727 28BA  
                   l7719 2822                     l7671 2580                     l7663 2574  
                   l7655 2568                     l7647 2542                     l7815 56A6  
                   l8359 348C                     l8295 3088                     l8287 306E  
                   l8279 3064                     l6793 3C44                     l6777 3B96  
                   l6785 3BDE                     l6769 3B30                     l6697 3952  
                   l6689 3936                     l6929 38B0                     l6881 369C  
                   l6873 364A                     l6865 3612                     l6857 35D4  
                   l6849 359C                     l5993 4E7A                     l5985 4E10  
                   l7809 5696                     l7921 0C5C                     l7913 0C1E  
                   l7905 0BB4                     l7841 090E                     l7833 08EA  
                   l7825 0870                     l6961 51BE                     l6953 519C  
                   l6945 517E                     l7577 24BE                     l7569 2480  
                   l7489 21FC                     l7497 221C                     l7753 2A46  
                   l7737 2970                     l7729 28DE                     l7681 2602  
                   l7649 2548                     l7817 56B4                     l8297 309A  
                   l8289 3070                     l6795 3C48                     l6787 3BF8  
                   l6779 3BA2                     l6699 3962                     l6891 3744  
                   l6883 36B8                     l6875 3664                     l6867 361E  
                   l6859 35EC                     l5995 4E7E                     l5987 4E14  
                   l7931 0CBE                     l7923 0C60                     l7915 0C34  
                   l7907 0BD2                     l7851 094C                     l7835 08EE  
                   l7595 49C8                     l6971 51F4                     l6963 51D0  
                   l6955 51AA                     l6947 5182                     l6939 5A8E  
                   l7579 24C6                     l7499 222E                     l7755 2A84  
                   l7763 2AFC                     l7739 2986                     l7747 29F0  
                   l7691 269A                     l7683 2626                     l8491 25B2  
                   l7675 258C                     l7667 257A                     l7659 256E  
                   l7819 56E2                     l8299 309E                     l6797 3C56  
                   l6789 3C0E                     l6893 374E                     l6885 36E2  
                   l6877 3674                     l6869 362E                     l5997 4E94  
                   l5989 4E72                     l7941 0CF8                     l7925 0C7E  
                   l7917 0C3C                     l7909 0BE2                     l7861 09DE  
                   l7853 097C                     l7845 0926                     l7837 0902  
                   l7829 0874                     l8493 4A4C                     l7597 49E4  
                   l7589 49B0                     l6973 520A                     l6965 51D8  
                   l6981 5220                     l6957 51B2                     l6949 5190  
                   l7781 2B90                     l7765 2B20                     l7773 2B50  
                   l7757 2AB8                     l7749 2A1E                     l7685 265C  
                   l7677 25E0                     l6799 3C5C                     l6895 375C  
                   l6887 3718                     l6879 3690                     l8495 4EE4  
                   l5999 4EAA                     l7951 0DC2                     l7943 0D30  
                   l7935 0CC6                     l7919 0C3E                     l7871 0A1E  
                   l7863 09F0                     l7855 09AC                     l7847 092E  
                   l7839 0906                     l7599 4A1E                     l6983 5230  
                   l6975 5212                     l6967 51E0                     l6959 51B6  
                   l6991 53C0                     l7775 2B5E                     l7767 2B2E  
                   l7695 26A8                     l7687 266C                     l7679 2600  
                   l6897 376E                     l6889 3726                     l8497 3F7E  
                   l7961 0DEC                     l7953 0DC6                     l7945 0D46  
                   l7937 0CF2                     l7929 0CA0                     l7881 0AC8  
                   l7873 0A3A                     l7865 09F4                     l7857 09BC  
                   l7849 0930                     l6985 5238                     l6977 5214  
                   l6969 51EE                     l6993 53CE                     l7769 2B42  
                   l7697 26E8                     l7689 267A                     l6899 377C  
                   l7795 562E                     l7971 0E5C                     l7963 0E0A  
                   l7947 0D68                     l7955 0DD2                     l7891 0B08  
                   l7883 0ADA                     l7875 0A6A                     l7859 09CC  
                   l7867 0A14                     l6979 521A                     l6995 53D6  
                   l7699 270C                     l7779 2B6C                     l7981 0ED2  
                   l7973 0E68                     l7949 0D84                     l7893 0B24  
                   l7885 0AE4                     l7877 0A9A                     l7869 0A1C  
                   l6997 53DA                     l6989 53BC                     l7983 0EE8  
                   l7975 0E94                     l7991 0F68                     l7967 0E2C  
                   l7959 0DE6                     l7895 0B42                     l7887 0AFE  
                   l7879 0AAC                     l6999 53E8                     l7985 0F0A  
                   l7969 0E4A                     l7993 0F6C                     l7897 0B60  
                   l7889 0B06                     l7987 0F26                     l7979 0E9A  
                   l7995 0F7A                     l7899 0B76                     l7997 0F98  
                   l7989 0F64                     l7999 0FB6                     STR_1 0847  
                   STR_2 0847                     STR_3 0801                     STR_4 0834  
                   STR_5 083C                     STR_8 0838                     STR_9 0840  
                   _BRGH 007D62                     u6300 4416                     u6301 4412  
                   u6310 446C                     u6311 4468                     u8000 2D2C  
                   u6320 44B6                     u6240 5C48                     u6321 44B2  
                   u6241 5C42                     u8010 2D54                     u6330 44D4  
                   u6250 5C4A                     u8011 2D50                     u6331 44D0  
                   u8100 2E8C                     u8020 2D72                     u6340 44E4  
                   u6260 5726                     u8101 2E88                     u8021 2D6E  
                   u6341 44E0                     u6261 5722                     u8110 2EC2  
                   u8030 2D92                     u6350 44F2                     u6270 5760  
                   u8111 2EBE                     u8031 2D8E                     u6351 44EE  
                   u6271 575C                     u8200 2F8C                     u8120 2ED2  
                   u8040 2DA0                     u6360 452C                     u6280 43AC  
                   u6600 5DD6                     u9000 54D8                     u8201 2F88  
                   u8121 2ECE                     u8041 2D9C                     u6361 4528  
                   u6281 43A8                     u6601 5DD2                     u9001 54D4  
                   u8210 2FA6                     u8130 2EFE                     u8050 2DB0  
                   u6370 453A                     u6290 43BA                     u6610 553C  
                   u9010 550C                     u8211 2FA2                     u8131 2EFA  
                   u8051 2DAC                     u6371 4536                     u6291 43B6  
                   u6611 5538                     u9011 5508                     u8220 2FE0  
                   u8140 2F0E                     u8060 2DE2                     u9100 4B80  
                   u6620 555E                     u9020 4C3C                     u8300 5C10  
                   u8221 2FDC                     u8141 2F0A                     u8061 2DDE  
                   u9101 4B7C                     u6621 555A                     u9021 4C38  
                   u8301 5C0A                     u8230 2FF2                     u8150 2F2A  
                   u8070 2DF0                     u9110 4B94                     u6630 5586  
                   u9030 4C7A                     u8310 5C12                     u8231 2FEE  
                   u8151 2F26                     u8071 2DEC                     u9111 4B90  
                   u6631 5582                     u9031 4C76                     u8240 3002  
                   u8160 2F3A                     u8080 2E0E                     u9120 4BBC  
                   u9040 4C98                     u8320 4560                     u8400 4890  
                   u9200 4D52                     u8241 2FFE                     u8161 2F36  
                   u8081 2E0A                     u9121 4BB8                     u9041 4C94  
                   u8321 455C                     u8401 488C                     u8250 3022  
                   u8170 2F4C                     u8090 2E46                     u9130 4BDC  
                   u7610 4E92                     u9050 4CB8                     u6570 5B8A  
                   u8330 4592                     u8410 48CE                     u9210 4D70  
                   i2l83 5622                     u8251 301E                     u8171 2F48  
                   u8091 2E42                     u9131 4BD8                     u7611 4E8C  
                   u9051 4CB4                     u6571 5B86                     u8331 458E  
                   u8411 48CA                     u9211 4D6C                     u8260 3034  
                   u8180 2F62                     u8500 3972                     u9140 4BEC  
                   u9060 4D08                     u7700 4732                     u8420 48F8  
                   u9220 4D98                     u9300 41CE                     u6580 5976  
                   u8261 3030                     u8181 2F5E                     u8501 396E  
                   u9141 4BE8                     u7605 4E36                     u9061 4D04  
                   u7701 472E                     u8341 45BC                     u8421 48F4  
                   u9221 4D94                     u9205 4D48                     u6581 5972  
                   u8270 3050                     u8190 2F78                     u8510 39B2  
                   u7630 4EA8                     u9070 5C9E                     u7710 47A4  
                   u8350 45E0                     u8430 4926                     u9150 5250  
                   u9230 4DC2                     u9310 41FC                     u6590 59A2  
                   u7550 5804                     u8271 304C                     u8191 2F74  
                   u8511 39AE                     u7631 4EA2                     u9071 5C9A  
                   u7711 47A0                     u8351 45DC                     u8431 4922  
                   u9151 524C                     u9231 4DBE                     u9311 41F8  
                   u6591 599E                     u7551 5800                     u8600 3B3E  
                   u8520 39F2                     u9080 4B1E                     u9400 5C80  
                   u7720 47EA                     u8360 460A                     u8440 496E  
                   u8280 5B5A                     u9160 5272                     u9320 421E  
                   u7560 5834                     u8601 3B3A                     u8521 39EE  
                   u9081 4B1A                     u7625 4E94                     u9401 5C7A  
                   u7721 47E6                     u8361 4606                     u8441 496A  
                   u8281 5B56                     u9161 526E                     u9321 421A  
                   u9305 41C4                     u7561 5830                     u8610 3B6C  
                   u8530 3A68                     u8450 38EA                     u9090 4B52  
                   u9410 5C82                     u7730 484A                     u8370 464A  
                   u8290 5CE8                     u9170 52C8                     u9250 4DFC  
                   u7570 586A                     u7650 4F0E                     u8611 3B68  
                   u8531 3A64                     u8451 38E6                     u7731 4846  
                   u8371 4646                     u8291 5CE4                     u9171 52C4  
                   u9251 4DF6                     u7571 5866                     u7651 4F0A  
                   u7900 2BD0                     u8620 3B82                     u8540 3A8A  
                   u8460 38FC                     u8700 34E0                     u9420 59C4  
                   u7740 5A20                     u8380 4694                     u9180 52D6  
                   u9500 3D3A                     u9260 4DFE                     u9340 428C  
                   u7580 589A                     u7660 4F28                     u7901 2BCC  
                   u8621 3B7E                     u8541 3A86                     u8461 38F8  
                   u8701 34DC                     u7645 4EAA                     u9421 59C0  
                   u7741 5A1C                     u8381 4690                     u9181 52D2  
                   u9501 3D36                     u9245 4DD4                     u9341 4288  
                   u7581 5896                     u7661 4F24                     u7910 2BE0  
                   u8630 3B96                     u8550 3AB4                     u8470 390C  
                   u8710 3520                     u9430 59F2                     u7750 5A3E  
                   u8390 485E                     u9190 5BBA                     u9510 3E64  
                   u9350 42B0                     u9270 58EC                     u7670 4F68  
                   u7911 2BDC                     u8631 3B92                     u8551 3AB0  
                   u8471 3908                     u8711 351C                     u9095 4B48  
                   u9431 59EE                     u7751 5A3A                     u8391 485A  
                   u9191 5BB6                     u9511 3E60                     u9335 4232  
                   u7671 4F64                     u7920 2C22                     u8640 3BB0  
                   u8560 3AD8                     u8480 3950                     u8800 37BC  
                   u8720 3532                     u7760 5D56                     u9520 3E82  
                   u9440 3C9A                     u9360 42CC                     u9336 423C  
                   u9280 58FE                     u9600 196A                     u7680 4FB8  
                   u7921 2C1E                     u8641 3BAC                     u8561 3AD4  
                   u8481 394C                     u8801 37B8                     u8721 352E  
                   u7761 5D52                     u9521 3E7E                     u9441 3C94  
                   u9361 42C8                     u9337 424C                     u9281 58FA  
                   u9601 1966                     u7681 4FB4                     u7930 2C38  
                   u8650 3BF8                     u8570 3AEE                     u8490 3962  
                   u8810 37D2                     u8730 3542                     u7690 46F0  
                   u7850 50C6                     u9530 3E9C                     u9450 3C9C  
                   u9370 4320                     u9290 5A76                     u9610 1978  
                   u7931 2C34                     u8651 3BF4                     u8571 3AEA  
                   u8491 395E                     u8811 37CE                     u8731 353E  
                   u7691 46EC                     u7851 50C2                     u9531 3E98  
                   u9355 42A6                     u9291 5A72                     u9611 1974  
                   u7940 2C4A                     u8660 3C28                     u8580 3B0C  
                   u8820 37E6                     u8740 3578                     u7860 50D8  
                   u9540 3EB6                     u9460 3CB2                     u8900 51EE  
                   u9380 433C                     u9700 1C6A                     u9620 198A  
                   u7941 2C46                     u8661 3C24                     u8581 3B08  
                   u8821 37E2                     u8741 3574                     u7861 50D4  
                   u9541 3EB2                     u9461 3CAE                     u8901 51EA  
                   u9381 4338                     u9277 58E2                     u9701 1C66  
                   u9621 1986                     u7950 2C5A                     u8670 3C56  
                   u8590 3B2C                     u8830 3800                     u8750 3588  
                   u7870 5100                     u9550 3EC4                     u9470 3CE2  
                   u8910 520A                     u9390 4378                     u9710 1C7C  
                   u9630 19D2                     u7951 2C56                     u8671 3C52  
                   u8591 3B28                     u8831 37FC                     u8751 3584  
                   u7871 50FC                     u9551 3EC0                     u9471 3CDE  
                   u8911 5206                     u9391 4374                     u9375 4316  
                   u9711 1C78                     u9631 19CE                     u7960 2C96  
                   u8840 3848                     u8760 3702                     u8680 34BE  
                   u7880 5136                     u9560 3ED6                     u9480 3CFE  
                   u8920 5230                     u9800 1D88                     u9720 1C9E  
                   u9640 1A00                     u7961 2C92                     u8841 3844  
                   u8681 34BA                     u7881 5132                     u9561 3ED2  
                   u9481 3CFA                     u8921 522C                     u9801 1D84  
                   u9721 1C9A                     u9641 19FC                     u7970 2CA4  
                   u7890 2BBE                     u8850 3876                     u8770 375C  
                   u8690 34D0                     u9570 3EE4                     u9490 3D2C  
                   u8930 53CE                     u9810 1D96                     u9730 1CC4  
                   u9650 1A8C                     u7971 2CA0                     u7891 2BBA  
                   u8851 3872                     u8771 3758                     u8691 34CC  
                   u9571 3EE0                     u9491 3D28                     u8931 53CA  
                   u9811 1D92                     u9731 1CC0                     u9651 1A88  
                   u7980 2D12                     u8860 38B0                     u8780 377C  
                   u9580 3EFC                     u8940 53E8                     u9900 2178  
                   u9820 1DC0                     u9740 1CDA                     u9660 1ABA  
                   u7981 2D0E                     u8861 38AC                     u8781 3778  
                   u8765 36F8                     u9581 3EF8                     u8941 53E4  
                   u9901 2174                     u9821 1DBC                     u9741 1CD6  
                   u9661 1AB6                     u7990 2D2A                     u8790 378E  
                   u8870 5190                     u8950 5402                     u9910 218C  
                   u9830 1F08                     u9750 1CF6                     u9670 1B3E  
                   u9590 191A                     u7991 2D24                     u8791 378A  
                   u8871 518C                     u8951 53FE                     u9911 2188  
                   u9831 1F04                     u9751 1CF2                     u9671 1B3A  
                   u9591 1916                     u8880 51AA                     u8960 5420  
                   u9920 219E                     u9840 1F6E                     u9760 1D2C  
                   u9680 1BD2                     u8881 51A6                     u8961 541C  
                   u9921 219A                     u9841 1F6A                     u9761 1D28  
                   u9681 1BCE                     u8890 51D0                     u8970 5436  
                   u9930 21AC                     u9850 1FB6                     u9770 1D52  
                   u9690 1C44                     u8891 51CC                     u8971 5432  
                   u9931 21A8                     u9851 1FB2                     u9771 1D4E  
                   u9691 1C40                     u8980 545A                     u9940 21C8  
                   u9860 1FC6                     u9780 1D64                     u8981 5456  
                   u9941 21C4                     u9861 1FC2                     u9781 1D60  
                   u8990 549A                     u9950 21D6                     u9870 2060  
                   u9790 1D72                     u8991 5496                     u9951 21D2  
                   u9871 205C                     u9791 1D6E                     u9960 222E  
                   u9880 20AE                     u9961 222A                     u9881 20AA  
                   u9970 2300                     u9890 20D6                     u9971 22FC  
                   u9891 20D2                     u9980 231C                     u9981 2318  
                   u9990 232E                     u9991 232A                     _SPEN 007D5F  
                   _TX9D 007D60                     _TXEN 007D65                     _SYNC 007D64  
                   abs@a 0015                     _dbuf 013E                     _atof 5D58  
                   _atoi 49B0                     _main 3064                     _dtoa 3C6A  
                   _nanf 5DA4                     _duty 019E                     _prec 00F7  
                   _nout 0132                     pad@i 001A                     pad@p 0017  
                   fsr0h 000FEA                     fsr1h 000FE2                     indf0 000FEF  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001C                     fsr2l 000FD9  
                   _suma 0124                     btemp 005D            ___fpclassifyf 4D12  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
        ___fldiv@new_exp 0065             ___param_bank 000000  __end_of_UART_Write_Text 5D58  
                  ??_abs 0017                    ??_pad 0019            ___fltol@sign1 006D  
        __end_of___aodiv 46D6                    ?_atof 007E                    ?_atoi 000A  
        __end_of___fladd 3064                    ?_main 0001                    ?_dtoa 001E  
                  ?_nanf 0003          __end_of___aomod 49B0          __end_of___fldiv 3C6A  
        __end_of___awdiv 5242          __end_of___flneg 5CC0                    STR_12 0844  
                  STR_14 0844                    STR_22 0840                    STR_23 0838  
                  STR_25 0821                    STR_17 082B                    STR_18 0822  
        __end_of___awmod 546C          __end_of___flmul 38CE          __end_of___flsub 5AD4  
        __end_of___fltol 4C0E                    u10000 233C                    u10001 2338  
                  u10010 2372          __end_of___lldiv 55BA                    u10011 236E  
                  u10100 4AE0                    u10020 23A0                    u10101 4ADC  
                  u10021 239C                    u10030 2424                    u10110 5008  
                  u10031 2420                    u10111 5004                    u11000 134E  
                  u10040 243E                    u10120 503A                    u10200 266C  
                  u11001 134A                    u10041 243A                    u10121 5036  
                  u10201 2668                    u11010 135C                    u10050 2456  
                  u10130 5056                    u10210 26E8                    u11011 1358  
                  u10051 2452                    u10131 5052                    u10211 26E4  
                  u11100 1560                    u11020 13CA                    u10060 24B2  
                  u10140 5068                    u10300 2A1E                    u10220 270C  
                  u11101 155C                    u11021 13C6                    u10061 24AE  
                  u10141 5064                    u10301 2A1A                    u10221 2708  
                  u11110 15A0                    u11030 13F8                    u10070 49E4  
                  u10150 5090                    u10310 2A84                    u10230 2748  
                  u11111 159C                    u11031 13F4                    u10071 49E0  
                  u10151 508C                    u10311 2A80                    u10231 2744  
                  u11200 1798                    u11120 15C2                    u11040 1412  
                  u10400 08EA                    u10080 4A1A                    u10320 2B20  
                  u10240 27F0                    u10160 2522                    u11201 1794  
                  u11121 15BE                    u11041 140E                    u10401 08E6  
                  u10081 4A16                    u10321 2B1C                    u10241 27EC  
                  u10161 251E                    u10330 5660                    u11210 17F0  
                  u11130 15D0                    u11050 1430                    u10410 0902  
                  u10090 4ACE                    u10250 2822                    u10170 25F2  
                  u10331 565C                    u11211 17EC                    u11131 15CC  
                  u11051 142C                    u10411 08FE                    u10091 4ACA  
                  u10251 281E                    u10171 25EE                    u10340 5692  
                  u11220 1842                    u11140 1638                    u11060 1454  
                  u10500 0A6A                    u10420 0922                    u10260 2864  
                  u10180 2600                    u11300 33E8                    u10341 568E  
                  u11221 183E                    u11141 1634                    u11061 1450  
                  u10501 0A66                    u10421 091E                    u10261 2860  
                  u10181 25FC                    u11301 33E4                    u11230 1874  
                  u11150 165C                    u11070 1472                    u10510 0A9A  
                  u10430 094C                    u10270 28BA                    u10190 2626  
                  u10350 56FE                    u11231 1870                    u11151 1658  
                  u11071 146E                    u10511 0A96                    u10431 0948  
                  u10271 28B6                    u10191 2622                    u10351 56FA  
                  u11240 1884                    u11160 16C2                    u11080 14A8  
                  u10600 0C00                    u10520 0AAC                    u10440 097C  
                  u10360 085C                    u10280 28DE                    u11241 1880  
                  u11161 16BE                    u11081 14A4                    u10601 0BFC  
                  u10521 0AA8                    u10441 0978                    u10361 0858  
                  u10281 28DA                    u11250 18BC                    u11170 1714  
                  u11090 14F6                    u10610 0C1E                    u10530 0ADA  
                  u10450 09AC                    u10370 0890                    u10290 2970  
                  u11251 18B8                    u11171 1710                    u11091 14F2  
                  u10611 0C1A                    u10531 0AD6                    u10451 09A8  
                  u10371 088A                    u10291 296C                    u11180 1746  
                  u10700 0E0A                    u10620 0C5C                    u10540 0AFE  
                  u10460 09BC                    u10380 0892          ___awdiv@divisor 0005  
                  u11181 1742                    u10701 0E06                    u10621 0C58  
                  u10541 0AFA                    u10461 09B8                    u11317 3484  
                  u11261 30B0                    u11190 1756                    u10710 0E28  
                  u10630 0C7E                    u10550 0B24                    u10470 09DE  
                  u10390 08AA                    u11270 30DA                    u11191 1752  
                  u10711 0E24                    u10631 0C7A                    u10551 0B20  
                  u10471 09DA                    u10391 08A6                    u11327 5A0A  
                  u11271 30D6                    u10800 0FB6                    u10720 0E4A  
                  u10640 0C9C                    u10560 0B42                    u10480 09F0  
                  u11280 3172                    u10801 0FB2                    u10721 0E46  
                  u10641 0C98                    u10561 0B3E                    u10481 09EC  
                  u11337 5A2A                    u11281 316E                    u10810 0FEA  
                  u10730 0E5C                    u10650 0CBE                    u10570 0B60  
                  u10490 0A3A                    u11290 33C2                    u10811 0FE6  
                  u10731 0E58                    u10651 0CBA                    u10571 0B5C  
                  u10491 0A36                    u11291 33BE                    u10900 11AC  
                  u10820 100E                    u10740 0E94                    u10660 0CF2  
                  u10580 0BD2                    u10901 11A8                    u10821 100A  
                  u10741 0E90                    u10661 0CEE                    u10581 0BCE  
                  u10910 11DE                    u10830 1042                    u10750 0ED2  
                  u10670 0D30                    u10590 0BE2                    u10911 11DA  
                  u10831 103E                    u10751 0ECE                    u10671 0D2C  
                  u10591 0BDE                    u10920 11FA                    u10840 105E  
                  u10760 0F26                    u10680 0D84                    u10921 11F6  
                  u10841 105A                    u10761 0F22                    u10681 0D80  
                  u10930 1228                    u10850 10E0                    u10770 0F4E  
                  u10690 0DAC                    u10931 1224                    u10851 10DC  
                  u10940 1254                    u10860 10F0                    u10780 0F7A  
                  u10941 1250                    u10861 10EC                    u10781 0F76  
                  u10870 1112                    u10790 0F98                    u10871 110E  
                  u10791 0F94                    u10775 0F44                    u10695 0DA2  
                  u10880 1134                    u10881 1130                    u10970 12DC  
                  u10890 1166                    u10971 12D8                    u10955 1270  
                  u10891 1162                    u10980 12F6                    u10981 12F2  
                  u10965 12AA                    u10990 1334                    u10991 1330  
                  i2l170 5DDC                    i2l173 5DEC          ___awdiv@counter 0007  
                  _RCREG 000FAE                    _RCSTA 000FAB             vfpfcnvrt@fmt 00BD  
                  _SPBRG 000FAF                    _TXREG 000FAD                    _TXSTA 000FAC  
    ___lmul@multiplicand 0007              ?_PWM1_Start 0001                    _flags 005A  
                  _error 0128                    _letra 005C                    _fputc 50B4  
                  _fputs 5B18          __end_of_isdigit 5C88                    atof@s 007E  
                  atoi@n 0012                    pad@fp 0013                    atoi@s 000A  
                  _width 0134                    _putch 5DF8                    dtoa@d 0020  
                  dtoa@i 0040                    dtoa@n 0038                    dtoa@p 0032  
                  dtoa@s 0036                    dtoa@w 0034                    nanf@s 0003  
                  nanf@u 0007          __end_of_islower 5C50          __end_of_isspace 59FE  
        __end_of_isupper 5C18                    tablat 000FF5                    plusw0 000FEB  
                  plusw2 000FDB                    ttemp5 005E                    ttemp6 0061  
                  ttemp7 0065                    status 000FD8                    wtemp8 005E  
        __end_of_sprintf 595A           ?___fpclassifyf 0003          __end_of_tolower 5A8E  
        __end_of_strcspn 58A4          __end_of_strncmp 50B4          __end_of_toupper 5BA0  
        __initialization 5772             __end_of_atof 5D7E             __end_of_atoi 4B06  
           __end_of_main 34A4             __end_of_dtoa 3F4A             __end_of_nanf 5DC6  
                 ??_atof 0056                   ??_atoi 000C                   ??_main 00F5  
                 ??_dtoa 0028                   ??_nanf 0007            __activetblptr 000002  
                 _ADCON1 000FC1                   ?_fputc 0003                   ?_fputs 000C  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB         ___awdiv@dividend 0003  
                 ?_putch 0001                   i2l6121 55D2                   i2l6131 561C  
                 i2l6123 55D8                   i2l6133 5620                   i2l6125 55EA  
                 i2l6127 55F8                   i2l6119 55C4                   i2l6129 560A  
                 i2l5941 5DDC                   i2l5943 5DEA            vfpfcnvrt@done 00CD  
       __end_of___xxtofl 454E             vfprintf@cfmt 00DD        __end_of_UART_Init 4EFC  
      __end_of_UART_Read 5DEE                   ___flge 4C0E                   ___fleq 546C  
      __end_of_PWM1_Init 4184            ??_Motor_Start 0003                   ___lmul 5708  
              ??___aodiv 0013                ??___fladd 001D                ??___aomod 0013  
                 ___wmul 5D7E                ??___fldiv 004E                ??___awdiv 0007  
              ??___flneg 0007                   _dataRx 0008                ??___awmod 0007  
              ??___flmul 0035         ?_UART_Write_Text 0004                ??___flsub 002D  
              ??___fltol 0056                   _actual 0120                ??___lldiv 000B  
                 _efgtoa 18F2                   _floorf 4184                   _memset 46D6  
                 clear_0 57B8         ___awdiv@quotient 0009          ___awmod@divisor 0005  
                 isa$std 000001          ___awmod@counter 0007                   pad@buf 0015  
                 dtoa@fp 001E                   _strchr 595A                   _strcpy 58A4  
                 _strlen 5CC0                   _strtof 084A                   _strtok 4EFC  
                 _strspn 57D8         __end_of_isxdigit 569E                   fputc@c 0003  
                 fputs@c 0010                   fputs@i 0011                   fputs@s 000C  
              ??_isdigit 0005          ___fpclassifyf@e 000B          ___fpclassifyf@u 000D  
        ___fpclassifyf@x 0003                ??_islower 0005             __mediumconst 0000  
              ??_isspace 0005                   tblptrh 000FF7                ??_isupper 0005  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 5708                ??_sprintf 005A                ??_tolower 000B  
              ??_strcspn 000B                ??_strncmp 0009                ??_toupper 000B  
             ___flge@ff1 0046               ___flge@ff2 004A          ??___fpclassifyf 0007  
           ___xxtofl@arg 0011             ___xxtofl@exp 0010             ___xxtofl@val 0007  
             ___fleq@ff1 0003               ___fleq@ff2 0007               __accesstop 0060  
__end_of__initialization 57CA               ___flneg@f1 0003            ___rparam_used 000001  
             ___fltol@f1 0052           __pcstackCOMRAM 0001    __end_of_PWM1_Set_Duty 53BC  
           __pidataBANK1 5AD4             __pidataBANK2 5CF6            __end_of_fputc 517E  
          __end_of_fputs 5B5C            __end_of_putch 5DFA      __end_of_Motor_Start 5DF4  
                ??_fputc 0007                  ??_fputs 0010                  ??_putch 0003  
             __pbssBANK0 00F7               __pbssBANK1 0100                  ?___flge 0046  
                ?___fleq 0003                  ?___lmul 0003                  ?___wmul 0003  
                ?_dataRx 0001                  ?_efgtoa 007D                  ?_floorf 0052  
                ?_memset 0003           ___lmul@product 000B                  ?_strchr 0003  
                ?_strcpy 0003                  ?_strlen 0003                  ?_strtof 0052  
                ?_strtok 000E                  ?_strspn 0007                ?___xxtofl 0007  
           ??_PWM1_Start 0003                  __Hparam 0000                ?_isxdigit 0009  
                __Lparam 0000                  ___aodiv 454E                  ___fladd 2BA4  
                ___aomod 484C                  ___fldiv 38CE              _Motor_Start 5DEE  
                ___awdiv 517E                  ___flneg 5C88                  ___awmod 53BC  
                ___flmul 34A4                  ___flsub 5A8E                  ___fltol 4B06  
                ___lldiv 5516                ?_vfprintf 00D7       __end_of_PWM1_Start 5DF8  
           __psmallconst 0800                  __pcinit 5772                  __ramtop 0800  
                __ptext0 3064                  __ptext1 4EFC                  __ptext2 57D8  
                __ptext3 583E                  __ptext4 595A                  __ptext5 5900  
                __ptext6 569E                  __ptext7 24FE                  __ptext8 4FDE  
                __ptext9 18F2                _T2CONbits 000FCA                  _isdigit 5C50  
             ??___xxtofl 000B         ___awmod@dividend 0003                  _islower 5C18  
                _isspace 59AC           main@uartConfig 01ED                  _isupper 5BE0  
         _PWM1_Init$1897 0073                  efgtoa@c 0083                  efgtoa@d 009B  
                efgtoa@e 00B3                  efgtoa@f 007F                  efgtoa@g 00AF  
                efgtoa@h 00A5                  efgtoa@i 00AD                  efgtoa@l 00A9  
                efgtoa@m 0095                  efgtoa@n 00B5                  efgtoa@p 009F  
                efgtoa@t 008F                  efgtoa@u 00B7                  efgtoa@w 00A1  
                _strUART 0200                  atoi@neg 0010                  main@pch 01EB  
                _sprintf 5900                  _tolower 5A48                  _strcspn 583E  
                _strncmp 4FDE           __pintcode_body 55BA                  _toupper 5B5C  
   end_of_initialization 57CA                  floorf@e 0077                  floorf@m 0073  
                floorf@u 0079                  floorf@x 0052           PWM1_Init@prees 0077  
                fputc@fp 0005                  memset@c 0005                  memset@k 000B  
                memset@n 0007                  memset@s 000D            __Lmediumconst 0000  
                int_func 55BA                  fputs@fp 000E          ___lldiv@divisor 0007  
             ??_isxdigit 000B          ___lldiv@counter 000F        __end_of_vfpfcnvrt 2BA4  
             efgtoa@mode 00A4               efgtoa@sign 009D                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE            ??_getDistance 0005           _UART_Write_Chr 5DC6  
             ??_vfprintf 005A                  strchr@c 0005                  strchr@s 0003  
                strcpy@d 000B                  strlen@a 0005                  strcpy@s 0009  
                strlen@s 0003                _UART_Init 4E10                _UART_Read 5DDC  
              _PWM1_Init 3F4A                  strtof@i 007D                  strtof@s 0052  
                strspn@c 0009                  strspn@i 000C                  strtok@p 0130  
                strtok@s 000E                  strspn@s 0007                _PORTBbits 000F81  
              _PORTDbits 000F83              ___fladd@grs 0024            ___xxtofl@sign 000F  
              _TRISBbits 000F93                _TRISCbits 000F94                _TRISDbits 000F95  
            ___fldiv@grs 0067              ___fldiv@rem 0060              ___flmul@grs 003B  
            _CCP1CONbits 000FBD              _CCP2CONbits 000FBA                _TXSTAbits 000FAC  
   UART_Write_Chr@letter 0003   __end_of_UART_Write_Chr 5DDC           __end_of___flge 4D12  
         __end_of___fleq 5516           __end_of___lmul 5772              vfpfcnvrt@ap 00BF  
            vfpfcnvrt@ct 00D3              vfpfcnvrt@fp 00BB              vfpfcnvrt@ll 00C5  
         __end_of___wmul 5DA4           __end_of_dataRx 562E               ?_UART_Init 0010  
             ?_UART_Read 0001           __end_of_efgtoa 24FE               ?_PWM1_Init 006F  
         __end_of_floorf 439A               floorf@F526 0110           __end_of_memset 484C  
         __end_of_strchr 59AC      __end_of_getDistance 5A48           __end_of_strcpy 5900  
         __end_of_strlen 5CF6             _indice_array 0136           __end_of_strtof 18F2  
         __end_of_strtok 4FDE           __end_of_strspn 583E      start_initialization 5772  
            __end_of_abs 5BE0              __end_of_pad 5304         getDistance@count 0005  
     UART_Init@spbrg_val 001C    __end_of___fpclassifyf 4E10              vfprintf@fmt 00D9  
        ?_UART_Write_Chr 0001                 ??___flge 004E                 ??___fleq 000B  
          _isxdigit$1590 000F                 ??___lmul 000B                 ??___wmul 0007  
               ??_dataRx 0001                 ??_efgtoa 0084              __pdataBANK1 018E  
            __pdataBANK2 0200                 ??_floorf 006D                 ??_memset 0009  
             memset@dest 0003                 ??_strchr 0007                 ??_strcpy 0007  
               ??_strlen 0005                 ??_strtof 006D                 ??_strtok 0012  
               ??_strspn 000B                ___fladd@a 0019                ___fladd@b 0015  
              ___fldiv@a 004A                ___fldiv@b 0046                ___flmul@a 0031  
              ___flmul@b 002D              __pbssCOMRAM 005A                ___flsub@a 0029  
              ___flsub@b 0025            __pcstackBANK0 0060            __pcstackBANK1 01D2  
       ___aodiv@dividend 0003              _efgtoa$1375 008B              _efgtoa$1376 008D  
            _efgtoa$1368 0089                _main$1894 01DF                _main$1895 01E3  
              _main$1896 01E7                _dtoa$1344 0030                __pintcode 0008  
               ?___aodiv 0003             ?_Motor_Start 0001                 ?___fladd 0015  
               ?___aomod 0003                 ?___fldiv 0046                 ?___awdiv 0003  
       ___aodiv@quotient 0015                 ?___flneg 0003                 ?___awmod 0003  
               ?___flmul 002D                 ?___flsub 0025                 ?___fltol 0052  
               ?___lldiv 0003                _reg10bits 0118              _getDistance 59FE  
            ??_UART_Init 0018              ??_UART_Read 0001              ??_PWM1_Init 0071  
              _distancia 012C          UART_Init@config 0010              __smallconst 0800  
               ?_isdigit 0003                 ?_islower 0003                 ?_isspace 0003  
               ?_isupper 0003                _errorAnte 011C                 ?_sprintf 00DF  
               ?_tolower 0009                 ?_strcspn 0007                 ?_strncmp 0003  
               ?_toupper 0009        ??_UART_Write_Text 0006           ___wmul@product 0007  
          PWM1_Init@freq 006F                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               i2u759_40 5DEA                 i2u759_41 5DE6                 i2u777_40 55D2  
               i2u777_41 55CE                 i2u778_40 55EA                 i2u778_41 55E6  
               i2u779_40 560A                 i2u779_41 5606            _PWM1_Set_Duty 5304  
            strtof@digit 0073              strtof@flags 0074              strtof@expon 0075  
              _vfpfcnvrt 24FE        ___wmul@multiplier 0003             _isspace$1457 0009  
             vfpfcnvrt@c 00D6               vfpfcnvrt@f 00CF        ___lmul@multiplier 0003  
              copy_data0 5786                copy_data1 57A6                 __Hrparam 0000  
             vfprintf@ap 00DB                 __Lrparam 0000               vfprintf@fp 00D7  
         ?_PWM1_Set_Duty 0001               ?_vfpfcnvrt 00BB          ___aodiv@divisor 000B  
          _flag_start_Rx 0138          ___aodiv@counter 0013       ___fpclassifyf@F465 0114  
             sprintf@fmt 00E1         _array_constantes 0100                 ___xxtofl 439A  
               __ptext10 5A48                 __ptext11 5BE0                 __ptext20 5CC0  
               __ptext12 58A4                 __ptext21 5B18                 __ptext13 4184  
               __ptext30 5D58                 __ptext22 50B4                 __ptext14 4D12  
               __ptext31 084A                 __ptext23 5DF8                 __ptext15 5A8E  
               __ptext40 5C88                 __ptext32 5B5C                 __ptext24 5BA0  
               __ptext16 53BC                 __ptext41 4C0E                 __ptext33 5C18  
               __ptext25 484C                 __ptext17 517E                 __ptext50 439A  
               __ptext42 546C                 __ptext34 5DA4                 __ptext26 454E  
               __ptext18 3C6A                 __ptext51 4B06                 __ptext43 5D28  
               __ptext35 562E                 __ptext27 49B0                 __ptext19 5242  
               __ptext52 34A4                 __ptext44 5DC6                 __ptext36 5C50  
               __ptext28 46D6                 __ptext53 38CE                 __ptext45 4E10  
               __ptext37 59AC                 __ptext29 59FE                 __ptext54 2BA4  
               __ptext46 5516                 __ptext38 5D7E                 __ptext55 5DEE  
               __ptext47 5DF4                 __ptext39 5708                 __ptext48 5304  
               __ptext57 5DDC                 __ptext49 3F4A                 _bufferRx 01A0  
              isxdigit@c 0009               strcpy@dest 0003                 _indiceRx 013C  
    UART_Write_Text@text 0004         ??_UART_Write_Chr 0003                 _isxdigit 562E  
               efgtoa@fp 007D                 efgtoa@ne 0093                 efgtoa@pp 0091  
               efgtoa@ou 0097                 isa$xinst 000000               strtof@eexp 0077  
               int$flags 005D                 _vfprintf 569E         ___aomod@dividend 0003  
             _INTCONbits 000FF2                 isdigit@c 0003                 intlevel2 0000  
              sprintf@ap 01D2                 islower@c 0003                 isspace@c 0003  
       ___lldiv@dividend 0003                strcpy@src 0005                 isupper@c 0003  
              strncmp@_l 0003                strncmp@_r 0005          ??_PWM1_Set_Duty 005A  
              strtof@res 0054              efgtoa@nmode 00A3                strtok@sep 0010  
           ?_getDistance 0003          ___aomod@divisor 000B              ??_vfpfcnvrt 00C1  
        ___aomod@counter 0013          _UART_Write_Text 5D28                 sprintf@f 01D4  
               tolower@c 0009                 sprintf@s 00DF         ___lldiv@quotient 000B  
               strcspn@c 0009                 strcspn@i 000C                 strcspn@s 0007  
               strncmp@l 000A                 strncmp@n 0007                 strncmp@r 000C  
               toupper@c 0009                 strtof@_u 0079               _PWM1_Start 5DF4  
          ___fladd@signs 0021             ___aodiv@sign 0014             ___fladd@aexp 0022  
           ___fladd@bexp 0023        _flag_Rx_completed 013A             ___aomod@sign 0014  
