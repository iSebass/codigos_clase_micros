

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 26 09:32:45 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  003D16                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _Kp
   101  003D16  0000               	dw	0
   102  003D18  3F00               	dw	16128
   103                           
   104                           ;initializer for _duty
   105  003D1A  46                 	db	70
   106                           
   107                           	psect	idataBANK1
   108  003B88                     __pidataBANK1:
   109                           	callstack 0
   110                           
   111                           ;initializer for _ref
   112  003B88  0000               	dw	0
   113  003B8A  42A0               	dw	17056
   114                           
   115                           ;initializer for _Ki
   116  003B8C  CCCD               	dw	52429
   117  003B8E  3DCC               	dw	15820
   118                           
   119                           ;initializer for _Kd
   120  003B90  CCCD               	dw	52429
   121  003B92  3ECC               	dw	16076
   122                           
   123                           ;initializer for _strUART
   124  003B94  20                 	db	32
   125  003B95  00                 	db	0
   126  003B96  00                 	db	0
   127  003B97  00                 	db	0
   128  003B98  00                 	db	0
   129  003B99  00                 	db	0
   130  003B9A  00                 	db	0
   131  003B9B  00                 	db	0
   132  003B9C  00                 	db	0
   133  003B9D  00                 	db	0
   134  003B9E  00                 	db	0
   135  003B9F  00                 	db	0
   136  003BA0  00                 	db	0
   137  003BA1  00                 	db	0
   138  003BA2  00                 	db	0
   139  003BA3  00                 	db	0
   140  003BA4  00                 	db	0
   141  003BA5  00                 	db	0
   142  003BA6  00                 	db	0
   143  003BA7  00                 	db	0
   144  003BA8  00                 	db	0
   145  003BA9  00                 	db	0
   146  003BAA  00                 	db	0
   147  003BAB  00                 	db	0
   148  003BAC  00                 	db	0
   149  003BAD  00                 	db	0
   150  003BAE  00                 	db	0
   151  003BAF  00                 	db	0
   152  003BB0  00                 	db	0
   153  003BB1  00                 	db	0
   154  003BB2  00                 	db	0
   155  003BB3  00                 	db	0
   156  003BB4  00                 	db	0
   157  003BB5  00                 	db	0
   158  003BB6  00                 	db	0
   159  003BB7  00                 	db	0
   160  003BB8  00                 	db	0
   161  003BB9  00                 	db	0
   162  003BBA  00                 	db	0
   163  003BBB  00                 	db	0
   164  003BBC  00                 	db	0
   165  003BBD  00                 	db	0
   166  003BBE  00                 	db	0
   167  003BBF  00                 	db	0
   168  003BC0  00                 	db	0
   169  003BC1  00                 	db	0
   170  003BC2  00                 	db	0
   171  003BC3  00                 	db	0
   172  003BC4  00                 	db	0
   173  003BC5  00                 	db	0
   174  0000                     _TRISCbits	set	3988
   175  0000                     _RCREG	set	4014
   176  0000                     _TXREG	set	4013
   177  0000                     _TRISDbits	set	3989
   178  0000                     _TXSTAbits	set	4012
   179  0000                     _TX9D	set	32096
   180  0000                     _BRGH	set	32098
   181  0000                     _SPEN	set	32095
   182  0000                     _SYNC	set	32100
   183  0000                     _TXEN	set	32101
   184  0000                     _RX9	set	32094
   185  0000                     _TX9	set	32102
   186  0000                     _PORTBbits	set	3969
   187  0000                     _TRISBbits	set	3987
   188  0000                     _ADCON1	set	4033
   189  0000                     _T2CONbits	set	4042
   190  0000                     _PIR1bits	set	3998
   191  0000                     _RCSTA	set	4011
   192  0000                     _TXSTA	set	4012
   193  0000                     _SPBRG	set	4015
   194  0000                     _PORTDbits	set	3971
   195  0000                     _CCP2CONbits	set	4026
   196  0000                     _CCPR2L	set	4027
   197  0000                     _CCP1CONbits	set	4029
   198  0000                     _CCPR1L	set	4030
   199  0000                     _PR2	set	4043
   200                           
   201                           	psect	smallconst
   202  000800                     __psmallconst:
   203                           	callstack 0
   204  000800  00                 	db	0
   205  000801                     STR_1:
   206  000801  64                 	db	100	;'d'
   207  000802  69                 	db	105	;'i'
   208  000803  73                 	db	115	;'s'
   209  000804  74                 	db	116	;'t'
   210  000805  61                 	db	97	;'a'
   211  000806  6E                 	db	110	;'n'
   212  000807  63                 	db	99	;'c'
   213  000808  69                 	db	105	;'i'
   214  000809  61                 	db	97	;'a'
   215  00080A  3A                 	db	58	;':'
   216  00080B  20                 	db	32
   217  00080C  25                 	db	37
   218  00080D  30                 	db	48	;'0'
   219  00080E  2E                 	db	46
   220  00080F  31                 	db	49	;'1'
   221  000810  66                 	db	102	;'f'
   222  000811  0D                 	db	13
   223  000812  0A                 	db	10
   224  000813  00                 	db	0
   225  000814                     STR_2:
   226  000814  49                 	db	73	;'I'
   227  000815  4E                 	db	78	;'N'
   228  000816  46                 	db	70	;'F'
   229  000817  00                 	db	0
   230  000818                     STR_6:
   231  000818  4E                 	db	78	;'N'
   232  000819  41                 	db	65	;'A'
   233  00081A  4E                 	db	78	;'N'
   234  00081B  00                 	db	0
   235  00081C                     STR_3:
   236  00081C  69                 	db	105	;'i'
   237  00081D  6E                 	db	110	;'n'
   238  00081E  66                 	db	102	;'f'
   239  00081F  00                 	db	0
   240  000820                     STR_7:
   241  000820  6E                 	db	110	;'n'
   242  000821  61                 	db	97	;'a'
   243  000822  6E                 	db	110	;'n'
   244  000823  00                 	db	0
   245  000824                     STR_10:
   246  000824  6C                 	db	108	;'l'
   247  000825  66                 	db	102	;'f'
   248  000826  00                 	db	0
   249  000827  00                 	db	0	; dummy byte at the end
   250  0000                     
   251                           ; #config settings
   252                           
   253                           	psect	cinit
   254  0038AA                     __pcinit:
   255                           	callstack 0
   256  0038AA                     start_initialization:
   257                           	callstack 0
   258  0038AA                     __initialization:
   259                           	callstack 0
   260                           
   261                           ; Initialize objects allocated to BANK1 (62 bytes)
   262                           ; load TBLPTR registers with __pidataBANK1
   263  0038AA  0E88               	movlw	low __pidataBANK1
   264  0038AC  6EF6               	movwf	tblptrl,c
   265  0038AE  0E3B               	movlw	high __pidataBANK1
   266  0038B0  6EF7               	movwf	tblptrh,c
   267  0038B2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   268  0038B4  6EF8               	movwf	tblptru,c
   269  0038B6  EE01  F050         	lfsr	0,__pdataBANK1
   270  0038BA  EE10 F03E          	lfsr	1,62
   271  0038BE                     copy_data0:
   272  0038BE  0009               	tblrd		*+
   273  0038C0  CFF5 FFEE          	movff	tablat,postinc0
   274  0038C4  50E5               	movf	postdec1,w,c
   275  0038C6  50E1               	movf	fsr1l,w,c
   276  0038C8  E1FA               	bnz	copy_data0
   277                           
   278                           ; Initialize objects allocated to BANK0 (5 bytes)
   279                           ; load TBLPTR registers with __pidataBANK0
   280  0038CA  0E16               	movlw	low __pidataBANK0
   281  0038CC  6EF6               	movwf	tblptrl,c
   282  0038CE  0E3D               	movlw	high __pidataBANK0
   283  0038D0  6EF7               	movwf	tblptrh,c
   284  0038D2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   285  0038D4  6EF8               	movwf	tblptru,c
   286  0038D6  EE00  F0FB         	lfsr	0,__pdataBANK0
   287  0038DA  EE10 F005          	lfsr	1,5
   288  0038DE                     copy_data1:
   289  0038DE  0009               	tblrd		*+
   290  0038E0  CFF5 FFEE          	movff	tablat,postinc0
   291  0038E4  50E5               	movf	postdec1,w,c
   292  0038E6  50E1               	movf	fsr1l,w,c
   293  0038E8  E1FA               	bnz	copy_data1
   294                           
   295                           ; Clear objects allocated to BANK1 (80 bytes)
   296  0038EA  EE01  F000         	lfsr	0,__pbssBANK1
   297  0038EE  0E50               	movlw	80
   298  0038F0                     clear_0:
   299  0038F0  6AEE               	clrf	postinc0,c
   300  0038F2  06E8               	decf	wreg,f,c
   301  0038F4  E1FD               	bnz	clear_0
   302                           
   303                           ; Clear objects allocated to BANK0 (36 bytes)
   304  0038F6  EE00  F0D7         	lfsr	0,__pbssBANK0
   305  0038FA  0E24               	movlw	36
   306  0038FC                     clear_1:
   307  0038FC  6AEE               	clrf	postinc0,c
   308  0038FE  06E8               	decf	wreg,f,c
   309  003900  E1FD               	bnz	clear_1
   310  003902                     end_of_initialization:
   311                           	callstack 0
   312  003902                     __end_of__initialization:
   313                           	callstack 0
   314  003902  0E00               	movlw	low (__Lmediumconst shr (0+16))
   315  003904  6EF8               	movwf	tblptru,c
   316  003906  0100               	movlb	0
   317  003908  EFFB  F014         	goto	_main	;jump to C main() function
   318                           
   319                           	psect	bssBANK0
   320  0000D7                     __pbssBANK0:
   321                           	callstack 0
   322  0000D7                     floorf@F526:
   323                           	callstack 0
   324  0000D7                     	ds	4
   325  0000DB                     ___fpclassifyf@F465:
   326                           	callstack 0
   327  0000DB                     	ds	4
   328  0000DF                     _reg10bits:
   329                           	callstack 0
   330  0000DF                     	ds	4
   331  0000E3                     _actual:
   332                           	callstack 0
   333  0000E3                     	ds	4
   334  0000E7                     _suma:
   335                           	callstack 0
   336  0000E7                     	ds	4
   337  0000EB                     _error:
   338                           	callstack 0
   339  0000EB                     	ds	4
   340  0000EF                     _distancia:
   341                           	callstack 0
   342  0000EF                     	ds	4
   343  0000F3                     _nout:
   344                           	callstack 0
   345  0000F3                     	ds	2
   346  0000F5                     _width:
   347                           	callstack 0
   348  0000F5                     	ds	2
   349  0000F7                     _prec:
   350                           	callstack 0
   351  0000F7                     	ds	2
   352  0000F9                     _flags:
   353                           	callstack 0
   354  0000F9                     	ds	2
   355                           
   356                           	psect	dataBANK0
   357  0000FB                     __pdataBANK0:
   358                           	callstack 0
   359  0000FB                     _Kp:
   360                           	callstack 0
   361  0000FB                     	ds	4
   362  0000FF                     _duty:
   363                           	callstack 0
   364  0000FF                     	ds	1
   365                           
   366                           	psect	bssBANK1
   367  000100                     __pbssBANK1:
   368                           	callstack 0
   369  000100                     _dbuf:
   370                           	callstack 0
   371  000100                     	ds	80
   372                           
   373                           	psect	dataBANK1
   374  000150                     __pdataBANK1:
   375                           	callstack 0
   376  000150                     _ref:
   377                           	callstack 0
   378  000150                     	ds	4
   379  000154                     _Ki:
   380                           	callstack 0
   381  000154                     	ds	4
   382  000158                     _Kd:
   383                           	callstack 0
   384  000158                     	ds	4
   385  00015C                     _strUART:
   386                           	callstack 0
   387  00015C                     	ds	50
   388                           
   389                           	psect	cstackBANK0
   390  000060                     __pcstackBANK0:
   391                           	callstack 0
   392  000060                     ?_efgtoa:
   393                           	callstack 0
   394  000060                     PWM1_Set_Duty@duty:
   395                           	callstack 0
   396  000060                     PWM1_Init@freq:
   397                           	callstack 0
   398  000060                     efgtoa@fp:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x0
   402  000060                     	ds	1
   403  000061                     PWM1_Set_Duty@val:
   404                           	callstack 0
   405                           
   406                           ; 4 bytes @ 0x1
   407  000061                     	ds	1
   408  000062                     ??_PWM1_Init:
   409  000062                     efgtoa@f:
   410                           	callstack 0
   411                           
   412                           ; 4 bytes @ 0x2
   413  000062                     	ds	2
   414  000064                     _PWM1_Init$1540:
   415                           	callstack 0
   416                           
   417                           ; 4 bytes @ 0x4
   418  000064                     	ds	2
   419  000066                     efgtoa@c:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x6
   423  000066                     	ds	1
   424  000067                     ??_efgtoa:
   425                           
   426                           ; 1 bytes @ 0x7
   427  000067                     	ds	1
   428  000068                     PWM1_Init@prees:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x8
   432  000068                     	ds	4
   433  00006C                     _efgtoa$1168:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0xC
   437  00006C                     	ds	2
   438  00006E                     _efgtoa$1176:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0xE
   442  00006E                     	ds	2
   443  000070                     _efgtoa$1177:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x10
   447  000070                     	ds	2
   448  000072                     efgtoa@t:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x12
   452  000072                     	ds	2
   453  000074                     efgtoa@pp:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x14
   457  000074                     	ds	2
   458  000076                     efgtoa@ne:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x16
   462  000076                     	ds	2
   463  000078                     efgtoa@m:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x18
   467  000078                     	ds	2
   468  00007A                     efgtoa@ou:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x1A
   472  00007A                     	ds	4
   473  00007E                     efgtoa@d:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x1E
   477  00007E                     	ds	2
   478  000080                     efgtoa@sign:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x20
   482  000080                     	ds	2
   483  000082                     efgtoa@p:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x22
   487  000082                     	ds	2
   488  000084                     efgtoa@w:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x24
   492  000084                     	ds	2
   493  000086                     efgtoa@nmode:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x26
   497  000086                     	ds	1
   498  000087                     efgtoa@mode:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x27
   502  000087                     	ds	1
   503  000088                     efgtoa@h:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x28
   507  000088                     	ds	4
   508  00008C                     efgtoa@l:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x2C
   512  00008C                     	ds	4
   513  000090                     efgtoa@i:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x30
   517  000090                     	ds	2
   518  000092                     efgtoa@g:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x32
   522  000092                     	ds	4
   523  000096                     efgtoa@e:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x36
   527  000096                     	ds	2
   528  000098                     efgtoa@n:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x38
   532  000098                     	ds	2
   533  00009A                     efgtoa@u:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x3A
   537  00009A                     	ds	4
   538  00009E                     ?_vfpfcnvrt:
   539                           	callstack 0
   540  00009E                     vfpfcnvrt@fp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x3E
   544  00009E                     	ds	2
   545  0000A0                     vfpfcnvrt@fmt:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x40
   549  0000A0                     	ds	2
   550  0000A2                     vfpfcnvrt@ap:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x42
   554  0000A2                     	ds	2
   555  0000A4                     ??_vfpfcnvrt:
   556                           
   557                           ; 1 bytes @ 0x44
   558  0000A4                     	ds	4
   559  0000A8                     vfpfcnvrt@done:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x48
   563  0000A8                     	ds	2
   564  0000AA                     vfpfcnvrt@f:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x4A
   568  0000AA                     	ds	4
   569  0000AE                     vfpfcnvrt@ct:
   570                           	callstack 0
   571                           
   572                           ; 3 bytes @ 0x4E
   573  0000AE                     	ds	3
   574  0000B1                     vfpfcnvrt@c:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x51
   578  0000B1                     	ds	1
   579  0000B2                     ?_vfprintf:
   580                           	callstack 0
   581  0000B2                     vfprintf@fp:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x52
   585  0000B2                     	ds	2
   586  0000B4                     vfprintf@fmt:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x54
   590  0000B4                     	ds	2
   591  0000B6                     vfprintf@ap:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x56
   595  0000B6                     	ds	2
   596  0000B8                     vfprintf@cfmt:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x58
   600  0000B8                     	ds	2
   601  0000BA                     ?_sprintf:
   602                           	callstack 0
   603  0000BA                     sprintf@s:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x5A
   607  0000BA                     	ds	2
   608  0000BC                     sprintf@fmt:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x5C
   612  0000BC                     	ds	6
   613  0000C2                     sprintf@ap:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x62
   617  0000C2                     	ds	2
   618  0000C4                     sprintf@f:
   619                           	callstack 0
   620                           
   621                           ; 11 bytes @ 0x64
   622  0000C4                     	ds	11
   623  0000CF                     main@uartConfig:
   624                           	callstack 0
   625                           
   626                           ; 8 bytes @ 0x6F
   627  0000CF                     	ds	8
   628                           
   629                           	psect	cstackCOMRAM
   630  000001                     __pcstackCOMRAM:
   631                           	callstack 0
   632  000001                     ?_getDistance:
   633                           	callstack 0
   634  000001                     ?_strlen:
   635                           	callstack 0
   636  000001                     ?___fpclassifyf:
   637                           	callstack 0
   638  000001                     ?_isupper:
   639                           	callstack 0
   640  000001                     ?_isdigit:
   641                           	callstack 0
   642  000001                     ?_strncmp:
   643                           	callstack 0
   644  000001                     ?_isspace:
   645                           	callstack 0
   646  000001                     ?___wmul:
   647                           	callstack 0
   648  000001                     ?___awdiv:
   649                           	callstack 0
   650  000001                     ?___awmod:
   651                           	callstack 0
   652  000001                     ?___lldiv:
   653                           	callstack 0
   654  000001                     ?___flneg:
   655                           	callstack 0
   656  000001                     UART_Write_Chr@letter:
   657                           	callstack 0
   658  000001                     ___wmul@multiplier:
   659                           	callstack 0
   660  000001                     ___awdiv@dividend:
   661                           	callstack 0
   662  000001                     ___awmod@dividend:
   663                           	callstack 0
   664  000001                     isdigit@c:
   665                           	callstack 0
   666  000001                     isspace@c:
   667                           	callstack 0
   668  000001                     isupper@c:
   669                           	callstack 0
   670  000001                     fputc@c:
   671                           	callstack 0
   672  000001                     strcpy@dest:
   673                           	callstack 0
   674  000001                     strlen@s:
   675                           	callstack 0
   676  000001                     strncmp@_l:
   677                           	callstack 0
   678  000001                     ___lldiv@dividend:
   679                           	callstack 0
   680  000001                     ___fleq@ff1:
   681                           	callstack 0
   682  000001                     ___flneg@f1:
   683                           	callstack 0
   684  000001                     ___fpclassifyf@x:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x0
   688  000001                     	ds	1
   689  000002                     UART_Write_Text@text:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x1
   693  000002                     	ds	1
   694  000003                     ??_isupper:
   695  000003                     ??_isdigit:
   696  000003                     ??_isspace:
   697  000003                     getDistance@count:
   698                           	callstack 0
   699  000003                     ___wmul@multiplicand:
   700                           	callstack 0
   701  000003                     ___awdiv@divisor:
   702                           	callstack 0
   703  000003                     ___awmod@divisor:
   704                           	callstack 0
   705  000003                     fputc@fp:
   706                           	callstack 0
   707  000003                     strcpy@src:
   708                           	callstack 0
   709  000003                     strlen@a:
   710                           	callstack 0
   711  000003                     strncmp@_r:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2
   715  000003                     	ds	1
   716  000004                     
   717                           ; 1 bytes @ 0x3
   718  000004                     	ds	1
   719  000005                     ??_fputc:
   720  000005                     ??___fpclassifyf:
   721  000005                     ??_strcpy:
   722  000005                     ?___xxtofl:
   723                           	callstack 0
   724  000005                     ___awdiv@counter:
   725                           	callstack 0
   726  000005                     ___awmod@counter:
   727                           	callstack 0
   728  000005                     ___wmul@product:
   729                           	callstack 0
   730  000005                     strncmp@n:
   731                           	callstack 0
   732  000005                     ___lldiv@divisor:
   733                           	callstack 0
   734  000005                     ___fleq@ff2:
   735                           	callstack 0
   736  000005                     ___xxtofl@val:
   737                           	callstack 0
   738                           
   739                           ; 4 bytes @ 0x4
   740  000005                     	ds	1
   741  000006                     ___awdiv@sign:
   742                           	callstack 0
   743  000006                     ___awmod@sign:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x5
   747  000006                     	ds	1
   748  000007                     ??_strncmp:
   749  000007                     ?_tolower:
   750                           	callstack 0
   751  000007                     _isspace$1255:
   752                           	callstack 0
   753  000007                     ___awdiv@quotient:
   754                           	callstack 0
   755  000007                     strcpy@s:
   756                           	callstack 0
   757  000007                     tolower@c:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x6
   761  000007                     	ds	1
   762  000008                     ?_atoi:
   763                           	callstack 0
   764  000008                     atoi@s:
   765                           	callstack 0
   766  000008                     strncmp@l:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x7
   770  000008                     	ds	1
   771  000009                     ??_tolower:
   772  000009                     ??___fleq:
   773  000009                     ??___xxtofl:
   774  000009                     ___fpclassifyf@e:
   775                           	callstack 0
   776  000009                     strcpy@d:
   777                           	callstack 0
   778  000009                     ___lldiv@quotient:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x8
   782  000009                     	ds	1
   783  00000A                     ??_atoi:
   784  00000A                     fputs@s:
   785                           	callstack 0
   786  00000A                     strncmp@r:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x9
   790  00000A                     	ds	1
   791  00000B                     ___fpclassifyf@u:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0xA
   795  00000B                     	ds	1
   796  00000C                     fputs@fp:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0xB
   800  00000C                     	ds	1
   801  00000D                     ___lldiv@counter:
   802                           	callstack 0
   803  00000D                     ___xxtofl@sign:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0xC
   807  00000D                     	ds	1
   808  00000E                     ___xxtofl@exp:
   809                           	callstack 0
   810  00000E                     fputs@c:
   811                           	callstack 0
   812  00000E                     atoi@neg:
   813                           	callstack 0
   814  00000E                     UART_Init@config:
   815                           	callstack 0
   816                           
   817                           ; 8 bytes @ 0xD
   818  00000E                     	ds	1
   819  00000F                     fputs@i:
   820                           	callstack 0
   821  00000F                     ___xxtofl@arg:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0xE
   825  00000F                     	ds	1
   826  000010                     atoi@n:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0xF
   830  000010                     	ds	1
   831  000011                     ?_pad:
   832                           	callstack 0
   833  000011                     pad@fp:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x10
   837  000011                     	ds	2
   838  000013                     ?___flmul:
   839                           	callstack 0
   840  000013                     pad@buf:
   841                           	callstack 0
   842  000013                     ___flmul@b:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x12
   846  000013                     	ds	2
   847  000015                     pad@p:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x14
   851  000015                     	ds	1
   852  000016                     ??_UART_Init:
   853                           
   854                           ; 1 bytes @ 0x15
   855  000016                     	ds	1
   856  000017                     ??_pad:
   857  000017                     ___flmul@a:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x16
   861  000017                     	ds	1
   862  000018                     pad@i:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x17
   866  000018                     	ds	2
   867  00001A                     pad@w:
   868                           	callstack 0
   869  00001A                     UART_Init@spbrg_val:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x19
   873  00001A                     	ds	1
   874  00001B                     ??___flmul:
   875                           
   876                           ; 1 bytes @ 0x1A
   877  00001B                     	ds	4
   878  00001F                     ___flmul@sign:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x1E
   882  00001F                     	ds	1
   883  000020                     ___flmul@grs:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x1F
   887  000020                     	ds	4
   888  000024                     ___flmul@aexp:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x23
   892  000024                     	ds	1
   893  000025                     ___flmul@bexp:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x24
   897  000025                     	ds	1
   898  000026                     ___flmul@prod:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x25
   902  000026                     	ds	4
   903  00002A                     ___flmul@temp:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x29
   907  00002A                     	ds	2
   908  00002C                     ?___fldiv:
   909                           	callstack 0
   910  00002C                     ___flge@ff1:
   911                           	callstack 0
   912  00002C                     ___fldiv@b:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x2B
   916  00002C                     	ds	4
   917  000030                     ___flge@ff2:
   918                           	callstack 0
   919  000030                     ___fldiv@a:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0x2F
   923  000030                     	ds	4
   924  000034                     ??___fldiv:
   925  000034                     ??___flge:
   926                           
   927                           ; 1 bytes @ 0x33
   928  000034                     	ds	4
   929  000038                     ___fldiv@rem:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x37
   933  000038                     	ds	4
   934  00003C                     ___fldiv@sign:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x3B
   938  00003C                     	ds	1
   939  00003D                     ___fldiv@new_exp:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x3C
   943  00003D                     	ds	2
   944  00003F                     ___fldiv@grs:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x3E
   948  00003F                     	ds	4
   949  000043                     ___fldiv@bexp:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x42
   953  000043                     	ds	1
   954  000044                     ___fldiv@aexp:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x43
   958  000044                     	ds	1
   959  000045                     ?___fladd:
   960                           	callstack 0
   961  000045                     ?_floorf:
   962                           	callstack 0
   963  000045                     ___fladd@b:
   964                           	callstack 0
   965  000045                     floorf@x:
   966                           	callstack 0
   967                           
   968                           ; 4 bytes @ 0x44
   969  000045                     	ds	4
   970  000049                     ??_floorf:
   971  000049                     ___fladd@a:
   972                           	callstack 0
   973                           
   974                           ; 4 bytes @ 0x48
   975  000049                     	ds	4
   976  00004D                     ??___fladd:
   977                           
   978                           ; 1 bytes @ 0x4C
   979  00004D                     	ds	2
   980  00004F                     floorf@m:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x4E
   984  00004F                     	ds	2
   985  000051                     ___fladd@signs:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x50
   989  000051                     	ds	1
   990  000052                     ___fladd@aexp:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x51
   994  000052                     	ds	1
   995  000053                     ___fladd@bexp:
   996                           	callstack 0
   997  000053                     floorf@e:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x52
  1001  000053                     	ds	1
  1002  000054                     ___fladd@grs:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x53
  1006  000054                     	ds	1
  1007  000055                     ?___flsub:
  1008                           	callstack 0
  1009  000055                     ?___fltol:
  1010                           	callstack 0
  1011  000055                     ___fltol@f1:
  1012                           	callstack 0
  1013  000055                     ___flsub@b:
  1014                           	callstack 0
  1015  000055                     floorf@u:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x54
  1019  000055                     	ds	4
  1020  000059                     ??___fltol:
  1021  000059                     ___flsub@a:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x58
  1025  000059                     	ds	4
  1026  00005D                     ___fltol@sign1:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x5C
  1030  00005D                     	ds	1
  1031  00005E                     ___fltol@exp1:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x5D
  1035  00005E                     	ds	1
  1036  00005F                     ??_main:
  1037                           
  1038                           ; 1 bytes @ 0x5E
  1039  00005F                     	ds	1
  1040                           
  1041 ;;
  1042 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1043 ;;
  1044 ;; *************** function _main *****************
  1045 ;; Defined at:
  1046 ;;		line 31 in file "main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  uartConfig      8  111[BANK0 ] struct .
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1060 ;;      Params:         0       0       0       0       0       0       0       0       0
  1061 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1062 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1063 ;;      Totals:         1       8       0       0       0       0       0       0       0
  1064 ;;Total ram usage:        9 bytes
  1065 ;; Hardware stack levels required when called: 8
  1066 ;; This function calls:
  1067 ;;		_Motor_Start
  1068 ;;		_PWM1_Init
  1069 ;;		_PWM1_Set_Duty
  1070 ;;		_PWM1_Start
  1071 ;;		_UART_Init
  1072 ;;		_UART_Write_Text
  1073 ;;		___fladd
  1074 ;;		___flge
  1075 ;;		___flmul
  1076 ;;		___flsub
  1077 ;;		___fltol
  1078 ;;		___xxtofl
  1079 ;;		_getDistance
  1080 ;;		_sprintf
  1081 ;; This function is called by:
  1082 ;;		Startup code after reset
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text0
  1087  0029F6                     __ptext0:
  1088                           	callstack 0
  1089  0029F6                     _main:
  1090                           	callstack 23
  1091  0029F6                     
  1092                           ;main.c: 32:     ADCON1 = 0x0F;
  1093  0029F6  0E0F               	movlw	15
  1094  0029F8  6EC1               	movwf	193,c	;volatile
  1095  0029FA                     
  1096                           ;main.c: 34:     TRISBbits.TRISB0 = 0;
  1097  0029FA  9093               	bcf	147,0,c	;volatile
  1098  0029FC                     
  1099                           ;main.c: 35:     TRISBbits.TRISB1 = 1;
  1100  0029FC  8293               	bsf	147,1,c	;volatile
  1101  0029FE                     
  1102                           ;main.c: 37:     TRISDbits.TRISD0 = 0;
  1103  0029FE  9095               	bcf	149,0,c	;volatile
  1104  002A00                     
  1105                           ;main.c: 38:     TRISDbits.TRISD1 = 0;
  1106  002A00  9295               	bcf	149,1,c	;volatile
  1107  002A02                     
  1108                           ;main.c: 40:     PWM1_Init(2000);
  1109  002A02  0E07               	movlw	7
  1110  002A04  0100               	movlb	0	; () banked
  1111  002A06  6F61               	movwf	(PWM1_Init@freq+1)& (0+255),b
  1112  002A08  0ED0               	movlw	208
  1113  002A0A  6F60               	movwf	PWM1_Init@freq& (0+255),b
  1114  002A0C  ECD5  F012         	call	_PWM1_Init	;wreg free
  1115  002A10                     
  1116                           ;main.c: 41:     PWM1_Set_Duty(duty);
  1117  002A10  0E46               	movlw	70
  1118  002A12  ECFA  F01A         	call	_PWM1_Set_Duty
  1119  002A16                     
  1120                           ;main.c: 42:     PWM1_Start();
  1121  002A16  EC8E  F01E         	call	_PWM1_Start	;wreg free
  1122  002A1A                     
  1123                           ;main.c: 44:     UART_Config uartConfig;;main.c: 46:     uartConfig.baud_rate = 9600;
  1124  002A1A  0E80               	movlw	128
  1125  002A1C  0100               	movlb	0	; () banked
  1126  002A1E  6FCF               	movwf	main@uartConfig& (0+255),b
  1127  002A20  0E25               	movlw	37
  1128  002A22  6FD0               	movwf	(main@uartConfig+1)& (0+255),b
  1129  002A24  0E00               	movlw	0
  1130  002A26  6FD1               	movwf	(main@uartConfig+2)& (0+255),b
  1131  002A28  0E00               	movlw	0
  1132  002A2A  6FD2               	movwf	(main@uartConfig+3)& (0+255),b
  1133  002A2C                     
  1134                           ; BSR set to: 0
  1135                           ;main.c: 47:     uartConfig.data_bits = 8;
  1136  002A2C  0E08               	movlw	8
  1137  002A2E  6FD3               	movwf	(main@uartConfig+4)& (0+255),b
  1138  002A30                     
  1139                           ; BSR set to: 0
  1140                           ;main.c: 48:     uartConfig.parity = 0;
  1141  002A30  0E00               	movlw	0
  1142  002A32  6FD4               	movwf	(main@uartConfig+5)& (0+255),b
  1143  002A34                     
  1144                           ; BSR set to: 0
  1145                           ;main.c: 49:     uartConfig.stop_bits = 1;
  1146  002A34  0E01               	movlw	1
  1147  002A36  6FD5               	movwf	(main@uartConfig+6)& (0+255),b
  1148  002A38                     
  1149                           ; BSR set to: 0
  1150                           ;main.c: 51:     UART_Init(uartConfig);
  1151  002A38  EE20  F0CF         	lfsr	2,main@uartConfig
  1152  002A3C  EE00  F00E         	lfsr	0,UART_Init@config
  1153  002A40  0E07               	movlw	7
  1154  002A42                     u4791:
  1155  002A42  CFDB FFEB          	movff	plusw2,plusw0
  1156  002A46  06E8               	decf	wreg,f,c
  1157  002A48  E2FC               	bc	u4791
  1158  002A4A  ECF1  F018         	call	_UART_Init	;wreg free
  1159  002A4E                     
  1160                           ;main.c: 53:     Motor_Start();
  1161  002A4E  EC88  F01E         	call	_Motor_Start	;wreg free
  1162  002A52                     l4303:
  1163                           
  1164                           ;main.c: 56:         actual = getDistance();
  1165  002A52  EC37  F01D         	call	_getDistance	;wreg free
  1166  002A56  C001  F005         	movff	?_getDistance,___xxtofl@val
  1167  002A5A  C002  F006         	movff	?_getDistance+1,___xxtofl@val+1
  1168  002A5E  6A07               	clrf	(___xxtofl@val+2)^0,c
  1169  002A60  6A08               	clrf	(___xxtofl@val+3)^0,c
  1170  002A62  0E00               	movlw	0
  1171  002A64  ECE8  F015         	call	___xxtofl
  1172  002A68  C005  F0E3         	movff	?___xxtofl,_actual
  1173  002A6C  C006  F0E4         	movff	?___xxtofl+1,_actual+1
  1174  002A70  C007  F0E5         	movff	?___xxtofl+2,_actual+2
  1175  002A74  C008  F0E6         	movff	?___xxtofl+3,_actual+3
  1176  002A78                     
  1177                           ;main.c: 57:         error = ref - actual;
  1178  002A78  0E00               	movlw	0
  1179  002A7A  6E55               	movwf	___flsub@b^0,c
  1180  002A7C  0E00               	movlw	0
  1181  002A7E  6E56               	movwf	(___flsub@b+1)^0,c
  1182  002A80  0EA0               	movlw	160
  1183  002A82  6E57               	movwf	(___flsub@b+2)^0,c
  1184  002A84  0E42               	movlw	66
  1185  002A86  6E58               	movwf	(___flsub@b+3)^0,c
  1186  002A88  C0E3  F059         	movff	_actual,___flsub@a
  1187  002A8C  C0E4  F05A         	movff	_actual+1,___flsub@a+1
  1188  002A90  C0E5  F05B         	movff	_actual+2,___flsub@a+2
  1189  002A94  C0E6  F05C         	movff	_actual+3,___flsub@a+3
  1190  002A98  EC7F  F01D         	call	___flsub	;wreg free
  1191  002A9C  C055  F0EB         	movff	?___flsub,_error
  1192  002AA0  C056  F0EC         	movff	?___flsub+1,_error+1
  1193  002AA4  C057  F0ED         	movff	?___flsub+2,_error+2
  1194  002AA8  C058  F0EE         	movff	?___flsub+3,_error+3
  1195  002AAC                     
  1196                           ;main.c: 58:         suma += Ki*error;
  1197  002AAC  C0E7  F045         	movff	_suma,___fladd@b
  1198  002AB0  C0E8  F046         	movff	_suma+1,___fladd@b+1
  1199  002AB4  C0E9  F047         	movff	_suma+2,___fladd@b+2
  1200  002AB8  C0EA  F048         	movff	_suma+3,___fladd@b+3
  1201  002ABC  0ECD               	movlw	205
  1202  002ABE  6E17               	movwf	___flmul@a^0,c
  1203  002AC0  0ECC               	movlw	204
  1204  002AC2  6E18               	movwf	(___flmul@a+1)^0,c
  1205  002AC4  0ECC               	movlw	204
  1206  002AC6  6E19               	movwf	(___flmul@a+2)^0,c
  1207  002AC8  0E3D               	movlw	61
  1208  002ACA  6E1A               	movwf	(___flmul@a+3)^0,c
  1209  002ACC  C0EB  F013         	movff	_error,___flmul@b
  1210  002AD0  C0EC  F014         	movff	_error+1,___flmul@b+1
  1211  002AD4  C0ED  F015         	movff	_error+2,___flmul@b+2
  1212  002AD8  C0EE  F016         	movff	_error+3,___flmul@b+3
  1213  002ADC  ECF3  F00E         	call	___flmul	;wreg free
  1214  002AE0  C013  F049         	movff	?___flmul,___fladd@a
  1215  002AE4  C014  F04A         	movff	?___flmul+1,___fladd@a+1
  1216  002AE8  C015  F04B         	movff	?___flmul+2,___fladd@a+2
  1217  002AEC  C016  F04C         	movff	?___flmul+3,___fladd@a+3
  1218  002AF0  EC93  F00C         	call	___fladd	;wreg free
  1219  002AF4  C045  F0E7         	movff	?___fladd,_suma
  1220  002AF8  C046  F0E8         	movff	?___fladd+1,_suma+1
  1221  002AFC  C047  F0E9         	movff	?___fladd+2,_suma+2
  1222  002B00  C048  F0EA         	movff	?___fladd+3,_suma+3
  1223  002B04                     
  1224                           ;main.c: 59:         if(suma>100){
  1225  002B04  0E00               	movlw	0
  1226  002B06  6E2C               	movwf	___flge@ff1^0,c
  1227  002B08  0E00               	movlw	0
  1228  002B0A  6E2D               	movwf	(___flge@ff1+1)^0,c
  1229  002B0C  0EC8               	movlw	200
  1230  002B0E  6E2E               	movwf	(___flge@ff1+2)^0,c
  1231  002B10  0E42               	movlw	66
  1232  002B12  6E2F               	movwf	(___flge@ff1+3)^0,c
  1233  002B14  C0E7  F030         	movff	_suma,___flge@ff2
  1234  002B18  C0E8  F031         	movff	_suma+1,___flge@ff2+1
  1235  002B1C  C0E9  F032         	movff	_suma+2,___flge@ff2+2
  1236  002B20  C0EA  F033         	movff	_suma+3,___flge@ff2+3
  1237  002B24  ECF0  F017         	call	___flge	;wreg free
  1238  002B28  B0D8               	btfsc	status,0,c
  1239  002B2A  EF99  F015         	goto	u4801
  1240  002B2E  EF9B  F015         	goto	u4800
  1241  002B32                     u4801:
  1242  002B32  EFA6  F015         	goto	l4313
  1243  002B36                     u4800:
  1244  002B36                     
  1245                           ;main.c: 60:             suma=100;
  1246  002B36  0E00               	movlw	0
  1247  002B38  0100               	movlb	0	; () banked
  1248  002B3A  6FE7               	movwf	_suma& (0+255),b
  1249  002B3C  0E00               	movlw	0
  1250  002B3E  6FE8               	movwf	(_suma+1)& (0+255),b
  1251  002B40  0EC8               	movlw	200
  1252  002B42  6FE9               	movwf	(_suma+2)& (0+255),b
  1253  002B44  0E42               	movlw	66
  1254  002B46  6FEA               	movwf	(_suma+3)& (0+255),b
  1255                           
  1256                           ;main.c: 61:         }
  1257  002B48  EFB6  F015         	goto	l4317
  1258  002B4C                     l4313:
  1259  002B4C  0100               	movlb	0	; () banked
  1260  002B4E  BFEA               	btfsc	(_suma+3)& (0+255),7,b
  1261  002B50  EFAE  F015         	goto	u4810
  1262  002B54  EFAC  F015         	goto	u4811
  1263  002B58                     u4811:
  1264  002B58  EFB6  F015         	goto	l4317
  1265  002B5C                     u4810:
  1266  002B5C                     
  1267                           ; BSR set to: 0
  1268                           ;main.c: 63:             suma = 0;
  1269  002B5C  0E00               	movlw	0
  1270  002B5E  6FE7               	movwf	_suma& (0+255),b
  1271  002B60  0E00               	movlw	0
  1272  002B62  6FE8               	movwf	(_suma+1)& (0+255),b
  1273  002B64  0E00               	movlw	0
  1274  002B66  6FE9               	movwf	(_suma+2)& (0+255),b
  1275  002B68  0E00               	movlw	0
  1276  002B6A  6FEA               	movwf	(_suma+3)& (0+255),b
  1277  002B6C                     l4317:
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;main.c: 65:         PWM1_Set_Duty(suma);
  1281  002B6C  C0E7  F055         	movff	_suma,___fltol@f1
  1282  002B70  C0E8  F056         	movff	_suma+1,___fltol@f1+1
  1283  002B74  C0E9  F057         	movff	_suma+2,___fltol@f1+2
  1284  002B78  C0EA  F058         	movff	_suma+3,___fltol@f1+3
  1285  002B7C  EC6D  F017         	call	___fltol	;wreg free
  1286  002B80  5055               	movf	?___fltol^0,w,c
  1287  002B82  ECFA  F01A         	call	_PWM1_Set_Duty
  1288  002B86                     
  1289                           ;main.c: 67:         sprintf(strUART,"distancia: %0.1f\r\n", actual);
  1290  002B86  0E5C               	movlw	low _strUART
  1291  002B88  0100               	movlb	0	; () banked
  1292  002B8A  6FBA               	movwf	sprintf@s& (0+255),b
  1293  002B8C  0E01               	movlw	high _strUART
  1294  002B8E  6FBB               	movwf	(sprintf@s+1)& (0+255),b
  1295  002B90  0E01               	movlw	low STR_1
  1296  002B92  6FBC               	movwf	sprintf@fmt& (0+255),b
  1297  002B94  0E08               	movlw	high STR_1
  1298  002B96  6FBD               	movwf	(sprintf@fmt+1)& (0+255),b
  1299  002B98  C0E3  F0BE         	movff	_actual,?_sprintf+4
  1300  002B9C  C0E4  F0BF         	movff	_actual+1,?_sprintf+5
  1301  002BA0  C0E5  F0C0         	movff	_actual+2,?_sprintf+6
  1302  002BA4  C0E6  F0C1         	movff	_actual+3,?_sprintf+7
  1303  002BA8  ECE5  F01C         	call	_sprintf	;wreg free
  1304  002BAC                     
  1305                           ;main.c: 68:         UART_Write_Text(strUART);
  1306  002BAC  0E5C               	movlw	low _strUART
  1307  002BAE  6E02               	movwf	UART_Write_Text@text^0,c
  1308  002BB0  0E01               	movlw	high _strUART
  1309  002BB2  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  1310  002BB4  EC52  F01E         	call	_UART_Write_Text	;wreg free
  1311  002BB8                     
  1312                           ;main.c: 69:         _delay((unsigned long)((1)*(20000000UL/4000.0)));
  1313  002BB8  0E07               	movlw	7
  1314  002BBA  6E5F               	movwf	??_main^0,c
  1315  002BBC  0E7D               	movlw	125
  1316  002BBE                     u4827:
  1317  002BBE  2EE8               	decfsz	wreg,f,c
  1318  002BC0  D7FE               	bra	u4827
  1319  002BC2  2E5F               	decfsz	??_main^0,f,c
  1320  002BC4  D7FC               	bra	u4827
  1321  002BC6  F000               	nop	
  1322  002BC8  EF29  F015         	goto	l4303
  1323  002BCC  EF00  F000         	goto	start
  1324  002BD0                     __end_of_main:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _sprintf *****************
  1328 ;; Defined at:
  1329 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  s               2   90[BANK0 ] PTR unsigned char 
  1332 ;;		 -> strUART(50), 
  1333 ;;  fmt             2   92[BANK0 ] PTR const unsigned char 
  1334 ;;		 -> STR_1(19), 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  f              11  100[BANK0 ] struct _IO_FILE
  1337 ;;  ap              2   98[BANK0 ] PTR void [1]
  1338 ;;		 -> ?_sprintf(2), 
  1339 ;;  ret             2    0        int 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  2   90[BANK0 ] int 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1349 ;;      Params:         0       8       0       0       0       0       0       0       0
  1350 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1352 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1353 ;;Total ram usage:       21 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 7
  1356 ;; This function calls:
  1357 ;;		_vfprintf
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text1
  1364  0039CA                     __ptext1:
  1365                           	callstack 0
  1366  0039CA                     _sprintf:
  1367                           	callstack 23
  1368  0039CA  0EBE               	movlw	low (?_sprintf+4)
  1369  0039CC  0100               	movlb	0	; () banked
  1370  0039CE  6FC2               	movwf	sprintf@ap& (0+255),b
  1371  0039D0  0E00               	movlw	high (?_sprintf+4)
  1372  0039D2  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  1373  0039D4  C0BA  F0C4         	movff	sprintf@s,sprintf@f
  1374  0039D8  C0BB  F0C5         	movff	sprintf@s+1,sprintf@f+1
  1375  0039DC                     
  1376                           ; BSR set to: 0
  1377  0039DC  0E00               	movlw	0
  1378  0039DE  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  1379  0039E0  0E00               	movlw	0
  1380  0039E2  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  1381  0039E4                     
  1382                           ; BSR set to: 0
  1383  0039E4  0E00               	movlw	0
  1384  0039E6  6FCE               	movwf	(sprintf@f+10)& (0+255),b
  1385  0039E8  0E00               	movlw	0
  1386  0039EA  6FCD               	movwf	(sprintf@f+9)& (0+255),b
  1387  0039EC                     
  1388                           ; BSR set to: 0
  1389  0039EC  0EC4               	movlw	low sprintf@f
  1390  0039EE  6FB2               	movwf	vfprintf@fp& (0+255),b
  1391  0039F0  0E00               	movlw	high sprintf@f
  1392  0039F2  6FB3               	movwf	(vfprintf@fp+1)& (0+255),b
  1393  0039F4  C0BC  F0B4         	movff	sprintf@fmt,vfprintf@fmt
  1394  0039F8  C0BD  F0B5         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1395  0039FC  0EC2               	movlw	low sprintf@ap
  1396  0039FE  6FB6               	movwf	vfprintf@ap& (0+255),b
  1397  003A00  0E00               	movlw	high sprintf@ap
  1398  003A02  6FB7               	movwf	(vfprintf@ap+1)& (0+255),b
  1399  003A04  EC86  F01C         	call	_vfprintf	;wreg free
  1400  003A08  0100               	movlb	0	; () banked
  1401  003A0A  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  1402  003A0C  25BA               	addwf	sprintf@s& (0+255),w,b
  1403  003A0E  6ED9               	movwf	fsr2l,c
  1404  003A10  51C8               	movf	(sprintf@f+4)& (0+255),w,b
  1405  003A12  21BB               	addwfc	(sprintf@s+1)& (0+255),w,b
  1406  003A14  6EDA               	movwf	fsr2h,c
  1407  003A16  0E00               	movlw	0
  1408  003A18  6EDF               	movwf	indf2,c
  1409  003A1A                     
  1410                           ; BSR set to: 0
  1411  003A1A  0012               	return		;funcret
  1412  003A1C                     __end_of_sprintf:
  1413                           	callstack 0
  1414                           
  1415 ;; *************** function _vfprintf *****************
  1416 ;; Defined at:
  1417 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  fp              2   82[BANK0 ] PTR struct _IO_FILE
  1420 ;;		 -> sprintf@f(11), 
  1421 ;;  fmt             2   84[BANK0 ] PTR const unsigned char 
  1422 ;;		 -> STR_1(19), 
  1423 ;;  ap              2   86[BANK0 ] PTR PTR void 
  1424 ;;		 -> sprintf@ap(2), 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  cfmt            2   88[BANK0 ] PTR unsigned char 
  1427 ;;		 -> STR_1(19), 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  2   82[BANK0 ] int 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1437 ;;      Params:         0       6       0       0       0       0       0       0       0
  1438 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1440 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1441 ;;Total ram usage:        8 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 6
  1444 ;; This function calls:
  1445 ;;		_vfpfcnvrt
  1446 ;; This function is called by:
  1447 ;;		_sprintf
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text2
  1452  00390C                     __ptext2:
  1453                           	callstack 0
  1454  00390C                     _vfprintf:
  1455                           	callstack 23
  1456  00390C                     
  1457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1458  00390C  C0B4  F0B8         	movff	vfprintf@fmt,vfprintf@cfmt
  1459  003910  C0B5  F0B9         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1460  003914                     
  1461                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1462  003914  0E00               	movlw	0
  1463  003916  0100               	movlb	0	; () banked
  1464  003918  6FF4               	movwf	(_nout+1)& (0+255),b
  1465  00391A  0E00               	movlw	0
  1466  00391C  6FF3               	movwf	_nout& (0+255),b
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1469  00391E  EFA4  F01C         	goto	l4167
  1470  003922                     l4165:
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1474  003922  C0B2  F09E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1475  003926  C0B3  F09F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1476  00392A  0EB8               	movlw	low vfprintf@cfmt
  1477  00392C  6FA0               	movwf	vfpfcnvrt@fmt& (0+255),b
  1478  00392E  0E00               	movlw	high vfprintf@cfmt
  1479  003930  6FA1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1480  003932  C0B6  F0A2         	movff	vfprintf@ap,vfpfcnvrt@ap
  1481  003936  C0B7  F0A3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1482  00393A  EC19  F00A         	call	_vfpfcnvrt	;wreg free
  1483  00393E  0100               	movlb	0	; () banked
  1484  003940  519E               	movf	?_vfpfcnvrt& (0+255),w,b
  1485  003942  27F3               	addwf	_nout& (0+255),f,b
  1486  003944  519F               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1487  003946  23F4               	addwfc	(_nout+1)& (0+255),f,b
  1488  003948                     l4167:
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1492  003948  C0B8  FFF6         	movff	vfprintf@cfmt,tblptrl
  1493  00394C  C0B9  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1494  003950                     	if	0	;tblptru may be non-zero
  1495  003950                     	endif
  1496  003950                     	if	0	;tblptru may be non-zero
  1497  003950                     	endif
  1498  003950  0008               	tblrd		*
  1499  003952  50F5               	movf	tablat,w,c
  1500  003954  0900               	iorlw	0
  1501  003956  A4D8               	btfss	status,2,c
  1502  003958  EFB0  F01C         	goto	u4701
  1503  00395C  EFB2  F01C         	goto	u4700
  1504  003960                     u4701:
  1505  003960  EF91  F01C         	goto	l4165
  1506  003964                     u4700:
  1507  003964                     
  1508                           ; BSR set to: 0
  1509                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1510  003964  C0F3  F0B2         	movff	_nout,?_vfprintf
  1511  003968  C0F4  F0B3         	movff	_nout+1,?_vfprintf+1
  1512  00396C                     
  1513                           ; BSR set to: 0
  1514  00396C  0012               	return		;funcret
  1515  00396E                     __end_of_vfprintf:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function _vfpfcnvrt *****************
  1519 ;; Defined at:
  1520 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  1523 ;;		 -> sprintf@f(11), 
  1524 ;;  fmt             2   64[BANK0 ] PTR PTR unsigned char 
  1525 ;;		 -> vfprintf@cfmt(2), 
  1526 ;;  ap              2   66[BANK0 ] PTR PTR void 
  1527 ;;		 -> sprintf@ap(2), 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  llu             8    0        unsigned long long 
  1530 ;;  ll              8    0        long long 
  1531 ;;  f               4   74[BANK0 ] long long 
  1532 ;;  ct              3   78[BANK0 ] unsigned char [3]
  1533 ;;  vp              3    0        PTR void 
  1534 ;;  cp              3    0        PTR unsigned char 
  1535 ;;  done            2   72[BANK0 ] int 
  1536 ;;  i               2    0        int 
  1537 ;;  c               1   81[BANK0 ] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  2   62[BANK0 ] int 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1547 ;;      Params:         0       6       0       0       0       0       0       0       0
  1548 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1549 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1550 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1551 ;;Total ram usage:       20 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 5
  1554 ;; This function calls:
  1555 ;;		_atoi
  1556 ;;		_efgtoa
  1557 ;;		_fputc
  1558 ;;		_isdigit
  1559 ;;		_isupper
  1560 ;;		_strncmp
  1561 ;;		_tolower
  1562 ;; This function is called by:
  1563 ;;		_vfprintf
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text3
  1568  001432                     __ptext3:
  1569                           	callstack 0
  1570  001432                     _vfpfcnvrt:
  1571                           	callstack 23
  1572  001432                     
  1573                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1574  001432  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1575  001436  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1576  00143A  CFDE FFF6          	movff	postinc2,tblptrl
  1577  00143E  CFDD FFF7          	movff	postdec2,tblptrh
  1578  001442                     	if	0	;tblptru may be non-zero
  1579  001442                     	endif
  1580  001442                     	if	0	;tblptru may be non-zero
  1581  001442                     	endif
  1582  001442  0008               	tblrd		*
  1583  001444  50F5               	movf	tablat,w,c
  1584  001446  0A25               	xorlw	37
  1585  001448  A4D8               	btfss	status,2,c
  1586  00144A  EF29  F00A         	goto	u4441
  1587  00144E  EF2B  F00A         	goto	u4440
  1588  001452                     u4441:
  1589  001452  EF77  F00C         	goto	l4075
  1590  001456                     u4440:
  1591  001456                     
  1592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1593  001456  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1594  00145A  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1595  00145E  2ADE               	incf	postinc2,f,c
  1596  001460  0E00               	movlw	0
  1597  001462  22DD               	addwfc	postdec2,f,c
  1598  001464                     
  1599                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1600  001464  0E00               	movlw	0
  1601  001466  0100               	movlb	0	; () banked
  1602  001468  6FF6               	movwf	(_width+1)& (0+255),b
  1603  00146A  0E00               	movlw	0
  1604  00146C  6FF5               	movwf	_width& (0+255),b
  1605  00146E  C0F5  F0F9         	movff	_width,_flags
  1606  001472  C0F6  F0FA         	movff	_width+1,_flags+1
  1607  001476                     
  1608                           ; BSR set to: 0
  1609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1610  001476  69F7               	setf	_prec& (0+255),b
  1611  001478  69F8               	setf	(_prec+1)& (0+255),b
  1612  00147A                     
  1613                           ; BSR set to: 0
  1614                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1615  00147A  0E00               	movlw	0
  1616  00147C  6FA9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1617  00147E  0E00               	movlw	0
  1618  001480  6FA8               	movwf	vfpfcnvrt@done& (0+255),b
  1619                           
  1620                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1621  001482  EF89  F00A         	goto	l3999
  1622  001486                     l3973:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1626  001486  81F9               	bsf	_flags& (0+255),0,b
  1627  001488                     l3975:
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1631  001488  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1632  00148C  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1633  001490  2ADE               	incf	postinc2,f,c
  1634  001492  0E00               	movlw	0
  1635  001494  22DD               	addwfc	postdec2,f,c
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1638  001496  EF89  F00A         	goto	l3999
  1639  00149A                     l3977:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1643  00149A  83F9               	bsf	_flags& (0+255),1,b
  1644  00149C  EF44  F00A         	goto	l3975
  1645  0014A0                     l3981:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1649  0014A0  85F9               	bsf	_flags& (0+255),2,b
  1650  0014A2  EF44  F00A         	goto	l3975
  1651  0014A6                     l3985:
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1655  0014A6  87F9               	bsf	_flags& (0+255),3,b
  1656  0014A8  EF44  F00A         	goto	l3975
  1657  0014AC                     l3989:
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1661  0014AC  89F9               	bsf	_flags& (0+255),4,b
  1662  0014AE  EF44  F00A         	goto	l3975
  1663  0014B2                     l3993:
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1667  0014B2  0E00               	movlw	0
  1668  0014B4  6FA9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1669  0014B6  0E01               	movlw	1
  1670  0014B8  6FA8               	movwf	vfpfcnvrt@done& (0+255),b
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1673  0014BA  EF89  F00A         	goto	l3999
  1674  0014BE                     l3997:
  1675                           
  1676                           ; BSR set to: 0
  1677  0014BE  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1678  0014C2  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1679  0014C6  CFDE FFF6          	movff	postinc2,tblptrl
  1680  0014CA  CFDD FFF7          	movff	postdec2,tblptrh
  1681  0014CE                     	if	0	;tblptru may be non-zero
  1682  0014CE                     	endif
  1683  0014CE                     	if	0	;tblptru may be non-zero
  1684  0014CE                     	endif
  1685  0014CE  0008               	tblrd		*
  1686  0014D0  50F5               	movf	tablat,w,c
  1687  0014D2  6FA4               	movwf	??_vfpfcnvrt& (0+255),b
  1688  0014D4  6BA5               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1689                           
  1690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1691                           ; Switch size 1, requested type "simple"
  1692                           ; Number of cases is 1, Range of values is 0 to 0
  1693                           ; switch strategies available:
  1694                           ; Name         Instructions Cycles
  1695                           ; simple_byte            4     3 (average)
  1696                           ;	Chosen strategy is simple_byte
  1697  0014D6  51A5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1698  0014D8  0A00               	xorlw	0	; case 0
  1699  0014DA  B4D8               	btfsc	status,2,c
  1700  0014DC  EF72  F00A         	goto	l4445
  1701  0014E0  EF59  F00A         	goto	l3993
  1702  0014E4                     l4445:
  1703                           
  1704                           ; BSR set to: 0
  1705                           ; Switch size 1, requested type "simple"
  1706                           ; Number of cases is 5, Range of values is 32 to 48
  1707                           ; switch strategies available:
  1708                           ; Name         Instructions Cycles
  1709                           ; simple_byte           16     9 (average)
  1710                           ;	Chosen strategy is simple_byte
  1711  0014E4  51A4               	movf	??_vfpfcnvrt& (0+255),w,b
  1712  0014E6  0A20               	xorlw	32	; case 32
  1713  0014E8  B4D8               	btfsc	status,2,c
  1714  0014EA  EF53  F00A         	goto	l3985
  1715  0014EE  0A03               	xorlw	3	; case 35
  1716  0014F0  B4D8               	btfsc	status,2,c
  1717  0014F2  EF56  F00A         	goto	l3989
  1718  0014F6  0A08               	xorlw	8	; case 43
  1719  0014F8  B4D8               	btfsc	status,2,c
  1720  0014FA  EF50  F00A         	goto	l3981
  1721  0014FE  0A06               	xorlw	6	; case 45
  1722  001500  B4D8               	btfsc	status,2,c
  1723  001502  EF43  F00A         	goto	l3973
  1724  001506  0A1D               	xorlw	29	; case 48
  1725  001508  B4D8               	btfsc	status,2,c
  1726  00150A  EF4D  F00A         	goto	l3977
  1727  00150E  EF59  F00A         	goto	l3993
  1728  001512                     l3999:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1732  001512  51A8               	movf	vfpfcnvrt@done& (0+255),w,b
  1733  001514  11A9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1734  001516  B4D8               	btfsc	status,2,c
  1735  001518  EF90  F00A         	goto	u4451
  1736  00151C  EF92  F00A         	goto	u4450
  1737  001520                     u4451:
  1738  001520  EF5F  F00A         	goto	l3997
  1739  001524                     u4450:
  1740  001524                     
  1741                           ; BSR set to: 0
  1742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1743  001524  A1F9               	btfss	_flags& (0+255),0,b
  1744  001526  EF97  F00A         	goto	u4461
  1745  00152A  EF99  F00A         	goto	u4460
  1746  00152E                     u4461:
  1747  00152E  EF9A  F00A         	goto	l4003
  1748  001532                     u4460:
  1749  001532                     
  1750                           ; BSR set to: 0
  1751                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1752  001532  93F9               	bcf	_flags& (0+255),1,b
  1753  001534                     l4003:
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1757  001534  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1758  001538  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1759  00153C  CFDE FFF6          	movff	postinc2,tblptrl
  1760  001540  CFDD FFF7          	movff	postdec2,tblptrh
  1761  001544                     	if	0	;tblptru may be non-zero
  1762  001544                     	endif
  1763  001544                     	if	0	;tblptru may be non-zero
  1764  001544                     	endif
  1765  001544  0008               	tblrd		*
  1766  001546  50F5               	movf	tablat,w,c
  1767  001548  0A2E               	xorlw	46
  1768  00154A  A4D8               	btfss	status,2,c
  1769  00154C  EFAA  F00A         	goto	u4471
  1770  001550  EFAC  F00A         	goto	u4470
  1771  001554                     u4471:
  1772  001554  EF1D  F00B         	goto	l4021
  1773  001558                     u4470:
  1774  001558                     
  1775                           ; BSR set to: 0
  1776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1777  001558  0E00               	movlw	0
  1778  00155A  6FF8               	movwf	(_prec+1)& (0+255),b
  1779  00155C  0E00               	movlw	0
  1780  00155E  6FF7               	movwf	_prec& (0+255),b
  1781  001560                     
  1782                           ; BSR set to: 0
  1783                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1784  001560  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1785  001564  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1786  001568  2ADE               	incf	postinc2,f,c
  1787  00156A  0E00               	movlw	0
  1788  00156C  22DD               	addwfc	postdec2,f,c
  1789  00156E                     
  1790                           ; BSR set to: 0
  1791                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1792  00156E  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1793  001572  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1794  001576  CFDE FFF6          	movff	postinc2,tblptrl
  1795  00157A  CFDD FFF7          	movff	postdec2,tblptrh
  1796  00157E                     	if	0	;tblptru may be non-zero
  1797  00157E                     	endif
  1798  00157E                     	if	0	;tblptru may be non-zero
  1799  00157E                     	endif
  1800  00157E  0008               	tblrd		*
  1801  001580  50F5               	movf	tablat,w,c
  1802  001582  0A2A               	xorlw	42
  1803  001584  A4D8               	btfss	status,2,c
  1804  001586  EFC7  F00A         	goto	u4481
  1805  00158A  EFC9  F00A         	goto	u4480
  1806  00158E                     u4481:
  1807  00158E  EFE6  F00A         	goto	l4013
  1808  001592                     u4480:
  1809  001592                     
  1810                           ; BSR set to: 0
  1811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1812  001592  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1813  001596  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1814  00159A  2ADE               	incf	postinc2,f,c
  1815  00159C  0E00               	movlw	0
  1816  00159E  22DD               	addwfc	postdec2,f,c
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1819  0015A0  C0A2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1820  0015A4  C0A3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1821  0015A8  CFDF F0A4          	movff	indf2,??_vfpfcnvrt
  1822  0015AC  0E02               	movlw	2
  1823  0015AE  26DE               	addwf	postinc2,f,c
  1824  0015B0  CFDF F0A5          	movff	indf2,??_vfpfcnvrt+1
  1825  0015B4  0E00               	movlw	0
  1826  0015B6  22DD               	addwfc	postdec2,f,c
  1827  0015B8  C0A4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1828  0015BC  C0A5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1829  0015C0  CFDE F0F7          	movff	postinc2,_prec
  1830  0015C4  CFDD F0F8          	movff	postdec2,_prec+1
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1833  0015C8  EF1D  F00B         	goto	l4021
  1834  0015CC                     l4013:
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1838  0015CC  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1839  0015D0  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1840  0015D4  CFDE F008          	movff	postinc2,atoi@s
  1841  0015D8  CFDD F009          	movff	postdec2,atoi@s+1
  1842  0015DC  ECC2  F016         	call	_atoi	;wreg free
  1843  0015E0  C008  F0F7         	movff	?_atoi,_prec
  1844  0015E4  C009  F0F8         	movff	?_atoi+1,_prec+1
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1847  0015E8  EFFD  F00A         	goto	l4019
  1848  0015EC                     l4015:
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1852  0015EC  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1853  0015F0  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1854  0015F4  2ADE               	incf	postinc2,f,c
  1855  0015F6  0E00               	movlw	0
  1856  0015F8  22DD               	addwfc	postdec2,f,c
  1857  0015FA                     l4019:
  1858  0015FA  0ED0               	movlw	208
  1859  0015FC  0100               	movlb	0	; () banked
  1860  0015FE  6FA4               	movwf	??_vfpfcnvrt& (0+255),b
  1861  001600  0EFF               	movlw	255
  1862  001602  6FA5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1863  001604  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1864  001608  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1865  00160C  CFDE FFF6          	movff	postinc2,tblptrl
  1866  001610  CFDD FFF7          	movff	postdec2,tblptrh
  1867  001614                     	if	0	;tblptru may be non-zero
  1868  001614                     	endif
  1869  001614                     	if	0	;tblptru may be non-zero
  1870  001614                     	endif
  1871  001614  0008               	tblrd		*
  1872  001616  50F5               	movf	tablat,w,c
  1873  001618  6FA6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1874  00161A  6BA7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1875  00161C  51A4               	movf	??_vfpfcnvrt& (0+255),w,b
  1876  00161E  27A6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1877  001620  51A5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1878  001622  23A7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1879  001624  51A7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1880  001626  E109               	bnz	u4490
  1881  001628  0E0A               	movlw	10
  1882  00162A  5DA6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1883  00162C  A0D8               	btfss	status,0,c
  1884  00162E  EF1B  F00B         	goto	u4491
  1885  001632  EF1D  F00B         	goto	u4490
  1886  001636                     u4491:
  1887  001636  EFF6  F00A         	goto	l4015
  1888  00163A                     u4490:
  1889  00163A                     l4021:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1893  00163A  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1894  00163E  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1895  001642  CFDE FFF6          	movff	postinc2,tblptrl
  1896  001646  CFDD FFF7          	movff	postdec2,tblptrh
  1897  00164A                     	if	0	;tblptru may be non-zero
  1898  00164A                     	endif
  1899  00164A                     	if	0	;tblptru may be non-zero
  1900  00164A                     	endif
  1901  00164A  0008               	tblrd		*
  1902  00164C  50F5               	movf	tablat,w,c
  1903  00164E  6E07               	movwf	tolower@c^0,c
  1904  001650  6A08               	clrf	(tolower@c+1)^0,c
  1905  001652  EC5C  F01D         	call	_tolower	;wreg free
  1906  001656  5007               	movf	?_tolower^0,w,c
  1907  001658  0100               	movlb	0	; () banked
  1908  00165A  6FAE               	movwf	vfpfcnvrt@ct& (0+255),b
  1909  00165C                     
  1910                           ; BSR set to: 0
  1911                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1912  00165C  51AE               	movf	vfpfcnvrt@ct& (0+255),w,b
  1913  00165E  B4D8               	btfsc	status,2,c
  1914  001660  EF34  F00B         	goto	u4501
  1915  001664  EF36  F00B         	goto	u4500
  1916  001668                     u4501:
  1917  001668  EF70  F00B         	goto	l4031
  1918  00166C                     u4500:
  1919  00166C                     
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1922  00166C  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1923  001670  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1924  001674  CFDE F0A4          	movff	postinc2,??_vfpfcnvrt
  1925  001678  CFDD F0A5          	movff	postdec2,??_vfpfcnvrt+1
  1926  00167C  0E01               	movlw	1
  1927  00167E  27A4               	addwf	??_vfpfcnvrt& (0+255),f,b
  1928  001680  0E00               	movlw	0
  1929  001682  23A5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1930  001684  C0A4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1931  001688  C0A5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1932  00168C                     	if	0	;tblptru may be non-zero
  1933  00168C                     	endif
  1934  00168C                     	if	0	;tblptru may be non-zero
  1935  00168C                     	endif
  1936  00168C  0008               	tblrd		*
  1937  00168E  50F5               	movf	tablat,w,c
  1938  001690  6E07               	movwf	tolower@c^0,c
  1939  001692  6A08               	clrf	(tolower@c+1)^0,c
  1940  001694  EC5C  F01D         	call	_tolower	;wreg free
  1941  001698  5007               	movf	?_tolower^0,w,c
  1942  00169A  0100               	movlb	0	; () banked
  1943  00169C  6FAF               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1944  00169E                     
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1947  00169E  51AF               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1948  0016A0  B4D8               	btfsc	status,2,c
  1949  0016A2  EF55  F00B         	goto	u4511
  1950  0016A6  EF57  F00B         	goto	u4510
  1951  0016AA                     u4511:
  1952  0016AA  EF70  F00B         	goto	l4031
  1953  0016AE                     u4510:
  1954  0016AE                     
  1955                           ; BSR set to: 0
  1956                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1957  0016AE  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1958  0016B2  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1959  0016B6  CFDE F0A4          	movff	postinc2,??_vfpfcnvrt
  1960  0016BA  CFDD F0A5          	movff	postdec2,??_vfpfcnvrt+1
  1961  0016BE  0E02               	movlw	2
  1962  0016C0  27A4               	addwf	??_vfpfcnvrt& (0+255),f,b
  1963  0016C2  0E00               	movlw	0
  1964  0016C4  23A5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1965  0016C6  C0A4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1966  0016CA  C0A5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1967  0016CE                     	if	0	;tblptru may be non-zero
  1968  0016CE                     	endif
  1969  0016CE                     	if	0	;tblptru may be non-zero
  1970  0016CE                     	endif
  1971  0016CE  0008               	tblrd		*
  1972  0016D0  50F5               	movf	tablat,w,c
  1973  0016D2  6E07               	movwf	tolower@c^0,c
  1974  0016D4  6A08               	clrf	(tolower@c+1)^0,c
  1975  0016D6  EC5C  F01D         	call	_tolower	;wreg free
  1976  0016DA  5007               	movf	?_tolower^0,w,c
  1977  0016DC  0100               	movlb	0	; () banked
  1978  0016DE  6FB0               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1979  0016E0                     l4031:
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1983  0016E0  0E66               	movlw	102
  1984  0016E2  19AE               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1985  0016E4  A4D8               	btfss	status,2,c
  1986  0016E6  EF77  F00B         	goto	u4521
  1987  0016EA  EF79  F00B         	goto	u4520
  1988  0016EE                     u4521:
  1989  0016EE  EFB9  F00B         	goto	l4043
  1990  0016F2                     u4520:
  1991  0016F2                     
  1992                           ; BSR set to: 0
  1993                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1994  0016F2  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1995  0016F6  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1996  0016FA  CFDE FFF6          	movff	postinc2,tblptrl
  1997  0016FE  CFDD FFF7          	movff	postdec2,tblptrh
  1998  001702                     	if	0	;tblptru may be non-zero
  1999  001702                     	endif
  2000  001702                     	if	0	;tblptru may be non-zero
  2001  001702                     	endif
  2002  001702  0008               	tblrd		*
  2003  001704  CFF5 F0B1          	movff	tablat,vfpfcnvrt@c
  2004  001708                     
  2005                           ; BSR set to: 0
  2006                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2007  001708  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2008  00170C  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2009  001710  2ADE               	incf	postinc2,f,c
  2010  001712  0E00               	movlw	0
  2011  001714  22DD               	addwfc	postdec2,f,c
  2012  001716                     
  2013                           ; BSR set to: 0
  2014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2015  001716  C0A2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2016  00171A  C0A3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2017  00171E  CFDF F0A4          	movff	indf2,??_vfpfcnvrt
  2018  001722  0E04               	movlw	4
  2019  001724  26DE               	addwf	postinc2,f,c
  2020  001726  CFDF F0A5          	movff	indf2,??_vfpfcnvrt+1
  2021  00172A  0E00               	movlw	0
  2022  00172C  22DD               	addwfc	postdec2,f,c
  2023  00172E  C0A4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2024  001732  C0A5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2025  001736  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f
  2026  00173A  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+1
  2027  00173E  CFDE F0AC          	movff	postinc2,vfpfcnvrt@f+2
  2028  001742  CFDE F0AD          	movff	postinc2,vfpfcnvrt@f+3
  2029  001746                     l4039:
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2033  001746  C09E  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2034  00174A  C09F  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2035  00174E  C0AA  F062         	movff	vfpfcnvrt@f,efgtoa@f
  2036  001752  C0AB  F063         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2037  001756  C0AC  F064         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2038  00175A  C0AD  F065         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2039  00175E  C0B1  F066         	movff	vfpfcnvrt@c,efgtoa@c
  2040  001762  EC14  F004         	call	_efgtoa	;wreg free
  2041  001766  C060  F09E         	movff	?_efgtoa,?_vfpfcnvrt
  2042  00176A  C061  F09F         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2043  00176E  EF92  F00C         	goto	l1013
  2044  001772                     l4043:
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2048  001772  0EAE               	movlw	low vfpfcnvrt@ct
  2049  001774  6E01               	movwf	strncmp@_l^0,c
  2050  001776  0E00               	movlw	high vfpfcnvrt@ct
  2051  001778  6E02               	movwf	(strncmp@_l+1)^0,c
  2052  00177A  0E24               	movlw	low STR_10
  2053  00177C  6E03               	movwf	strncmp@_r^0,c
  2054  00177E  0E08               	movlw	high STR_10
  2055  001780  6E04               	movwf	(strncmp@_r+1)^0,c
  2056  001782  0E00               	movlw	0
  2057  001784  6E06               	movwf	(strncmp@n+1)^0,c
  2058  001786  0E02               	movlw	2
  2059  001788  6E05               	movwf	strncmp@n^0,c
  2060  00178A  EC65  F019         	call	_strncmp	;wreg free
  2061  00178E  5001               	movf	?_strncmp^0,w,c
  2062  001790  1002               	iorwf	(?_strncmp+1)^0,w,c
  2063  001792  A4D8               	btfss	status,2,c
  2064  001794  EFCE  F00B         	goto	u4531
  2065  001798  EFD0  F00B         	goto	u4530
  2066  00179C                     u4531:
  2067  00179C  EF3F  F00C         	goto	l4059
  2068  0017A0                     u4530:
  2069  0017A0                     
  2070                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2071  0017A0  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2072  0017A4  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2073  0017A8  CFDE F0A4          	movff	postinc2,??_vfpfcnvrt
  2074  0017AC  CFDD F0A5          	movff	postdec2,??_vfpfcnvrt+1
  2075  0017B0  0E01               	movlw	1
  2076  0017B2  0100               	movlb	0	; () banked
  2077  0017B4  27A4               	addwf	??_vfpfcnvrt& (0+255),f,b
  2078  0017B6  0E00               	movlw	0
  2079  0017B8  23A5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2080  0017BA  C0A4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2081  0017BE  C0A5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2082  0017C2                     	if	0	;tblptru may be non-zero
  2083  0017C2                     	endif
  2084  0017C2                     	if	0	;tblptru may be non-zero
  2085  0017C2                     	endif
  2086  0017C2  0008               	tblrd		*
  2087  0017C4  CFF5 F0B1          	movff	tablat,vfpfcnvrt@c
  2088  0017C8                     
  2089                           ; BSR set to: 0
  2090  0017C8  0EBF               	movlw	191
  2091  0017CA  6FA4               	movwf	??_vfpfcnvrt& (0+255),b
  2092  0017CC  0EFF               	movlw	255
  2093  0017CE  6FA5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2094  0017D0  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2095  0017D4  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2096  0017D8  CFDE FFF6          	movff	postinc2,tblptrl
  2097  0017DC  CFDD FFF7          	movff	postdec2,tblptrh
  2098  0017E0                     	if	0	;tblptru may be non-zero
  2099  0017E0                     	endif
  2100  0017E0                     	if	0	;tblptru may be non-zero
  2101  0017E0                     	endif
  2102  0017E0  0008               	tblrd		*
  2103  0017E2  50F5               	movf	tablat,w,c
  2104  0017E4  6FA6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2105  0017E6  6BA7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2106  0017E8  51A4               	movf	??_vfpfcnvrt& (0+255),w,b
  2107  0017EA  27A6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2108  0017EC  51A5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2109  0017EE  23A7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2110  0017F0  51A7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2111  0017F2  E107               	bnz	u4541
  2112  0017F4  0E1A               	movlw	26
  2113  0017F6  5DA6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2114  0017F8  B0D8               	btfsc	status,0,c
  2115  0017FA  EF01  F00C         	goto	u4541
  2116  0017FE  EF03  F00C         	goto	u4540
  2117  001802                     u4541:
  2118  001802  EF1D  F00C         	goto	l4053
  2119  001806                     u4540:
  2120  001806                     
  2121                           ; BSR set to: 0
  2122                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2123  001806  C0A2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2124  00180A  C0A3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2125  00180E  CFDF F0A4          	movff	indf2,??_vfpfcnvrt
  2126  001812  0E04               	movlw	4
  2127  001814  26DE               	addwf	postinc2,f,c
  2128  001816  CFDF F0A5          	movff	indf2,??_vfpfcnvrt+1
  2129  00181A  0E00               	movlw	0
  2130  00181C  22DD               	addwfc	postdec2,f,c
  2131  00181E  C0A4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2132  001822  C0A5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2133  001826  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f
  2134  00182A  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+1
  2135  00182E  CFDE F0AC          	movff	postinc2,vfpfcnvrt@f+2
  2136  001832  CFDE F0AD          	movff	postinc2,vfpfcnvrt@f+3
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2139  001836  EF35  F00C         	goto	l1018
  2140  00183A                     l4053:
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2144  00183A  C0A2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2145  00183E  C0A3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2146  001842  CFDF F0A4          	movff	indf2,??_vfpfcnvrt
  2147  001846  0E04               	movlw	4
  2148  001848  26DE               	addwf	postinc2,f,c
  2149  00184A  CFDF F0A5          	movff	indf2,??_vfpfcnvrt+1
  2150  00184E  0E00               	movlw	0
  2151  001850  22DD               	addwfc	postdec2,f,c
  2152  001852  C0A4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2153  001856  C0A5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2154  00185A  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f
  2155  00185E  CFDE F0AB          	movff	postinc2,vfpfcnvrt@f+1
  2156  001862  CFDE F0AC          	movff	postinc2,vfpfcnvrt@f+2
  2157  001866  CFDE F0AD          	movff	postinc2,vfpfcnvrt@f+3
  2158  00186A                     l1018:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2162  00186A  0E02               	movlw	2
  2163  00186C  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2164  001870  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2165  001874  26DE               	addwf	postinc2,f,c
  2166  001876  0E00               	movlw	0
  2167  001878  22DD               	addwfc	postdec2,f,c
  2168  00187A  EFA3  F00B         	goto	l4039
  2169  00187E                     l4059:
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2172  00187E  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2173  001882  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2174  001886  CFDE FFF6          	movff	postinc2,tblptrl
  2175  00188A  CFDD FFF7          	movff	postdec2,tblptrh
  2176  00188E                     	if	0	;tblptru may be non-zero
  2177  00188E                     	endif
  2178  00188E                     	if	0	;tblptru may be non-zero
  2179  00188E                     	endif
  2180  00188E  0008               	tblrd		*
  2181  001890  50F5               	movf	tablat,w,c
  2182  001892  0A25               	xorlw	37
  2183  001894  A4D8               	btfss	status,2,c
  2184  001896  EF4F  F00C         	goto	u4551
  2185  00189A  EF51  F00C         	goto	u4550
  2186  00189E                     u4551:
  2187  00189E  EF69  F00C         	goto	l4069
  2188  0018A2                     u4550:
  2189  0018A2                     
  2190                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2191  0018A2  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2192  0018A6  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2193  0018AA  2ADE               	incf	postinc2,f,c
  2194  0018AC  0E00               	movlw	0
  2195  0018AE  22DD               	addwfc	postdec2,f,c
  2196  0018B0                     
  2197                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2198  0018B0  0E00               	movlw	0
  2199  0018B2  6E02               	movwf	(fputc@c+1)^0,c
  2200  0018B4  0E25               	movlw	37
  2201  0018B6  6E01               	movwf	fputc@c^0,c
  2202  0018B8  C09E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2203  0018BC  C09F  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2204  0018C0  ECD0  F019         	call	_fputc	;wreg free
  2205  0018C4                     l4065:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2208  0018C4  0E00               	movlw	0
  2209  0018C6  0100               	movlb	0	; () banked
  2210  0018C8  6F9F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2211  0018CA  0E01               	movlw	1
  2212  0018CC  6F9E               	movwf	?_vfpfcnvrt& (0+255),b
  2213  0018CE  EF92  F00C         	goto	l1013
  2214  0018D2                     l4069:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2217  0018D2  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2218  0018D6  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2219  0018DA  2ADE               	incf	postinc2,f,c
  2220  0018DC  0E00               	movlw	0
  2221  0018DE  22DD               	addwfc	postdec2,f,c
  2222  0018E0                     
  2223                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2224  0018E0  0E00               	movlw	0
  2225  0018E2  0100               	movlb	0	; () banked
  2226  0018E4  6F9F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2227  0018E6  0E00               	movlw	0
  2228  0018E8  6F9E               	movwf	?_vfpfcnvrt& (0+255),b
  2229  0018EA  EF92  F00C         	goto	l1013
  2230  0018EE                     l4075:
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2233  0018EE  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2234  0018F2  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2235  0018F6  CFDE FFF6          	movff	postinc2,tblptrl
  2236  0018FA  CFDD FFF7          	movff	postdec2,tblptrh
  2237  0018FE                     	if	0	;tblptru may be non-zero
  2238  0018FE                     	endif
  2239  0018FE                     	if	0	;tblptru may be non-zero
  2240  0018FE                     	endif
  2241  0018FE  0008               	tblrd		*
  2242  001900  50F5               	movf	tablat,w,c
  2243  001902  6E01               	movwf	fputc@c^0,c
  2244  001904  6A02               	clrf	(fputc@c+1)^0,c
  2245  001906  C09E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2246  00190A  C09F  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2247  00190E  ECD0  F019         	call	_fputc	;wreg free
  2248  001912                     
  2249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2250  001912  C0A0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2251  001916  C0A1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2252  00191A  2ADE               	incf	postinc2,f,c
  2253  00191C  0E00               	movlw	0
  2254  00191E  22DD               	addwfc	postdec2,f,c
  2255  001920  EF62  F00C         	goto	l4065
  2256  001924                     l1013:
  2257  001924  0012               	return		;funcret
  2258  001926                     __end_of_vfpfcnvrt:
  2259                           	callstack 0
  2260                           
  2261 ;; *************** function _strncmp *****************
  2262 ;; Defined at:
  2263 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2266 ;;		 -> vfpfcnvrt@ct(3), 
  2267 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2268 ;;		 -> STR_12(3), 
  2269 ;;  n               2    4[COMRAM] unsigned int 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2272 ;;		 -> STR_12(3), 
  2273 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2274 ;;		 -> vfpfcnvrt@ct(3), 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  2    0[COMRAM] int 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2284 ;;      Params:         6       0       0       0       0       0       0       0       0
  2285 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2286 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2287 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2288 ;;Total ram usage:       11 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_vfpfcnvrt
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text4
  2298  0032CA                     __ptext4:
  2299                           	callstack 0
  2300  0032CA                     _strncmp:
  2301                           	callstack 27
  2302  0032CA  C001  F008         	movff	strncmp@_l,strncmp@l
  2303  0032CE  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2304  0032D2  C003  F00A         	movff	strncmp@_r,strncmp@r
  2305  0032D6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2306  0032DA  0605               	decf	strncmp@n^0,f,c
  2307  0032DC  A0D8               	btfss	status,0,c
  2308  0032DE  0606               	decf	(strncmp@n+1)^0,f,c
  2309  0032E0  2805               	incf	strncmp@n^0,w,c
  2310  0032E2  E106               	bnz	u4391
  2311  0032E4  2806               	incf	(strncmp@n+1)^0,w,c
  2312  0032E6  A4D8               	btfss	status,2,c
  2313  0032E8  EF78  F019         	goto	u4391
  2314  0032EC  EF7A  F019         	goto	u4390
  2315  0032F0                     u4391:
  2316  0032F0  EF87  F019         	goto	l3951
  2317  0032F4                     u4390:
  2318  0032F4  0E00               	movlw	0
  2319  0032F6  6E02               	movwf	(?_strncmp+1)^0,c
  2320  0032F8  0E00               	movlw	0
  2321  0032FA  6E01               	movwf	?_strncmp^0,c
  2322  0032FC  EFCF  F019         	goto	l1133
  2323  003300                     l3949:
  2324  003300  4A08               	infsnz	strncmp@l^0,f,c
  2325  003302  2A09               	incf	(strncmp@l+1)^0,f,c
  2326  003304  4A0A               	infsnz	strncmp@r^0,f,c
  2327  003306  2A0B               	incf	(strncmp@r+1)^0,f,c
  2328  003308  0605               	decf	strncmp@n^0,f,c
  2329  00330A  A0D8               	btfss	status,0,c
  2330  00330C  0606               	decf	(strncmp@n+1)^0,f,c
  2331  00330E                     l3951:
  2332  00330E  C008  FFD9         	movff	strncmp@l,fsr2l
  2333  003312  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2334  003316  50DF               	movf	indf2,w,c
  2335  003318  B4D8               	btfsc	status,2,c
  2336  00331A  EF91  F019         	goto	u4401
  2337  00331E  EF93  F019         	goto	u4400
  2338  003322                     u4401:
  2339  003322  EFBE  F019         	goto	l3959
  2340  003326                     u4400:
  2341  003326  C00A  FFF6         	movff	strncmp@r,tblptrl
  2342  00332A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2343  00332E                     	if	0	;tblptru may be non-zero
  2344  00332E                     	endif
  2345  00332E                     	if	0	;tblptru may be non-zero
  2346  00332E                     	endif
  2347  00332E  0008               	tblrd		*
  2348  003330  50F5               	movf	tablat,w,c
  2349  003332  0900               	iorlw	0
  2350  003334  B4D8               	btfsc	status,2,c
  2351  003336  EF9F  F019         	goto	u4411
  2352  00333A  EFA1  F019         	goto	u4410
  2353  00333E                     u4411:
  2354  00333E  EFBE  F019         	goto	l3959
  2355  003342                     u4410:
  2356  003342  5005               	movf	strncmp@n^0,w,c
  2357  003344  1006               	iorwf	(strncmp@n+1)^0,w,c
  2358  003346  B4D8               	btfsc	status,2,c
  2359  003348  EFA8  F019         	goto	u4421
  2360  00334C  EFAA  F019         	goto	u4420
  2361  003350                     u4421:
  2362  003350  EFBE  F019         	goto	l3959
  2363  003354                     u4420:
  2364  003354  C008  FFD9         	movff	strncmp@l,fsr2l
  2365  003358  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2366  00335C  50DF               	movf	indf2,w,c
  2367  00335E  6E07               	movwf	??_strncmp^0,c
  2368  003360  C00A  FFF6         	movff	strncmp@r,tblptrl
  2369  003364  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2370  003368                     	if	0	;tblptru may be non-zero
  2371  003368                     	endif
  2372  003368                     	if	0	;tblptru may be non-zero
  2373  003368                     	endif
  2374  003368  0008               	tblrd		*
  2375  00336A  50F5               	movf	tablat,w,c
  2376  00336C  1807               	xorwf	??_strncmp^0,w,c
  2377  00336E  B4D8               	btfsc	status,2,c
  2378  003370  EFBC  F019         	goto	u4431
  2379  003374  EFBE  F019         	goto	u4430
  2380  003378                     u4431:
  2381  003378  EF80  F019         	goto	l3949
  2382  00337C                     u4430:
  2383  00337C                     l3959:
  2384  00337C  C008  FFD9         	movff	strncmp@l,fsr2l
  2385  003380  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2386  003384  50DF               	movf	indf2,w,c
  2387  003386  6E07               	movwf	??_strncmp^0,c
  2388  003388  C00A  FFF6         	movff	strncmp@r,tblptrl
  2389  00338C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2390  003390                     	if	0	;tblptru may be non-zero
  2391  003390                     	endif
  2392  003390                     	if	0	;tblptru may be non-zero
  2393  003390                     	endif
  2394  003390  0008               	tblrd		*
  2395  003392  50F5               	movf	tablat,w,c
  2396  003394  5C07               	subwf	??_strncmp^0,w,c
  2397  003396  6E01               	movwf	?_strncmp^0,c
  2398  003398  6A02               	clrf	(?_strncmp+1)^0,c
  2399  00339A  A0D8               	btfss	status,0,c
  2400  00339C  0602               	decf	(?_strncmp+1)^0,f,c
  2401  00339E                     l1133:
  2402  00339E  0012               	return		;funcret
  2403  0033A0                     __end_of_strncmp:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _efgtoa *****************
  2407 ;; Defined at:
  2408 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2411 ;;		 -> sprintf@f(11), 
  2412 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2413 ;;  c               1    6[BANK0 ] unsigned char 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  u               4   58[BANK0 ] unsigned char 
  2416 ;;  g               4   50[BANK0 ] unsigned char 
  2417 ;;  l               4   44[BANK0 ] unsigned char 
  2418 ;;  h               4   40[BANK0 ] unsigned char 
  2419 ;;  ou              4   26[BANK0 ] unsigned char 
  2420 ;;  n               2   56[BANK0 ] int 
  2421 ;;  e               2   54[BANK0 ] int 
  2422 ;;  i               2   48[BANK0 ] int 
  2423 ;;  w               2   36[BANK0 ] int 
  2424 ;;  p               2   34[BANK0 ] int 
  2425 ;;  sign            2   32[BANK0 ] int 
  2426 ;;  d               2   30[BANK0 ] int 
  2427 ;;  m               2   24[BANK0 ] int 
  2428 ;;  ne              2   22[BANK0 ] int 
  2429 ;;  pp              2   20[BANK0 ] int 
  2430 ;;  t               2   18[BANK0 ] int 
  2431 ;;  mode            1   39[BANK0 ] unsigned char 
  2432 ;;  nmode           1   38[BANK0 ] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  2    0[BANK0 ] int 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2442 ;;      Params:         0       7       0       0       0       0       0       0       0
  2443 ;;      Locals:         0      50       0       0       0       0       0       0       0
  2444 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2445 ;;      Totals:         0      62       0       0       0       0       0       0       0
  2446 ;;Total ram usage:       62 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 4
  2449 ;; This function calls:
  2450 ;;		___awdiv
  2451 ;;		___awmod
  2452 ;;		___fladd
  2453 ;;		___fldiv
  2454 ;;		___fleq
  2455 ;;		___flge
  2456 ;;		___flmul
  2457 ;;		___flneg
  2458 ;;		___flsub
  2459 ;;		___fltol
  2460 ;;		___fpclassifyf
  2461 ;;		_floorf
  2462 ;;		_isupper
  2463 ;;		_pad
  2464 ;;		_strcpy
  2465 ;;		_tolower
  2466 ;; This function is called by:
  2467 ;;		_vfpfcnvrt
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text5
  2472  000828                     __ptext5:
  2473                           	callstack 0
  2474  000828                     _efgtoa:
  2475                           	callstack 23
  2476  000828                     
  2477                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2478  000828  0E00               	movlw	0
  2479  00082A  0100               	movlb	0	; () banked
  2480  00082C  6F81               	movwf	(efgtoa@sign+1)& (0+255),b
  2481  00082E  0E00               	movlw	0
  2482  000830  6F80               	movwf	efgtoa@sign& (0+255),b
  2483  000832                     
  2484                           ; BSR set to: 0
  2485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2486  000832  C062  F092         	movff	efgtoa@f,efgtoa@g
  2487  000836  C063  F093         	movff	efgtoa@f+1,efgtoa@g+1
  2488  00083A  C064  F094         	movff	efgtoa@f+2,efgtoa@g+2
  2489  00083E  C065  F095         	movff	efgtoa@f+3,efgtoa@g+3
  2490  000842                     
  2491                           ; BSR set to: 0
  2492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2493  000842  BF95               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2494  000844  EF28  F004         	goto	u3870
  2495  000848  EF26  F004         	goto	u3871
  2496  00084C                     u3871:
  2497  00084C  EF3E  F004         	goto	l3615
  2498  000850                     u3870:
  2499  000850                     
  2500                           ; BSR set to: 0
  2501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2502  000850  0E00               	movlw	0
  2503  000852  6F81               	movwf	(efgtoa@sign+1)& (0+255),b
  2504  000854  0E01               	movlw	1
  2505  000856  6F80               	movwf	efgtoa@sign& (0+255),b
  2506  000858                     
  2507                           ; BSR set to: 0
  2508                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2509  000858  C092  F001         	movff	efgtoa@g,___flneg@f1
  2510  00085C  C093  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2511  000860  C094  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2512  000864  C095  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2513  000868  ECFF  F01D         	call	___flneg	;wreg free
  2514  00086C  C001  F092         	movff	?___flneg,efgtoa@g
  2515  000870  C002  F093         	movff	?___flneg+1,efgtoa@g+1
  2516  000874  C003  F094         	movff	?___flneg+2,efgtoa@g+2
  2517  000878  C004  F095         	movff	?___flneg+3,efgtoa@g+3
  2518  00087C                     l3615:
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2521  00087C  0E00               	movlw	0
  2522  00087E  0100               	movlb	0	; () banked
  2523  000880  6F99               	movwf	(efgtoa@n+1)& (0+255),b
  2524  000882  0E00               	movlw	0
  2525  000884  6F98               	movwf	efgtoa@n& (0+255),b
  2526  000886                     
  2527                           ; BSR set to: 0
  2528                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2529  000886  C0F5  F084         	movff	_width,efgtoa@w
  2530  00088A  C0F6  F085         	movff	_width+1,efgtoa@w+1
  2531  00088E                     
  2532                           ; BSR set to: 0
  2533                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2534  00088E  5180               	movf	efgtoa@sign& (0+255),w,b
  2535  000890  1181               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2536  000892  A4D8               	btfss	status,2,c
  2537  000894  EF4E  F004         	goto	u3881
  2538  000898  EF50  F004         	goto	u3880
  2539  00089C                     u3881:
  2540  00089C  EF57  F004         	goto	l3623
  2541  0008A0                     u3880:
  2542  0008A0                     
  2543                           ; BSR set to: 0
  2544  0008A0  A5F9               	btfss	_flags& (0+255),2,b
  2545  0008A2  EF55  F004         	goto	u3891
  2546  0008A6  EF57  F004         	goto	u3890
  2547  0008AA                     u3891:
  2548  0008AA  EF71  F004         	goto	l3635
  2549  0008AE                     u3890:
  2550  0008AE                     l3623:
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2554  0008AE  5180               	movf	efgtoa@sign& (0+255),w,b
  2555  0008B0  1181               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2556  0008B2  A4D8               	btfss	status,2,c
  2557  0008B4  EF5E  F004         	goto	u3901
  2558  0008B8  EF60  F004         	goto	u3900
  2559  0008BC                     u3901:
  2560  0008BC  EF66  F004         	goto	l3627
  2561  0008C0                     u3900:
  2562  0008C0                     
  2563                           ; BSR set to: 0
  2564  0008C0  0E00               	movlw	0
  2565  0008C2  6F6D               	movwf	(_efgtoa$1168+1)& (0+255),b
  2566  0008C4  0E2B               	movlw	43
  2567  0008C6  6F6C               	movwf	_efgtoa$1168& (0+255),b
  2568  0008C8  EF6A  F004         	goto	l3629
  2569  0008CC                     l3627:
  2570                           
  2571                           ; BSR set to: 0
  2572  0008CC  0E00               	movlw	0
  2573  0008CE  6F6D               	movwf	(_efgtoa$1168+1)& (0+255),b
  2574  0008D0  0E2D               	movlw	45
  2575  0008D2  6F6C               	movwf	_efgtoa$1168& (0+255),b
  2576  0008D4                     l3629:
  2577                           
  2578                           ; BSR set to: 0
  2579  0008D4  C06C  F100         	movff	_efgtoa$1168,_dbuf
  2580  0008D8                     
  2581                           ; BSR set to: 0
  2582                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2583  0008D8  4B98               	infsnz	efgtoa@n& (0+255),f,b
  2584  0008DA  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  2585  0008DC                     
  2586                           ; BSR set to: 0
  2587                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2588  0008DC  0784               	decf	efgtoa@w& (0+255),f,b
  2589  0008DE  A0D8               	btfss	status,0,c
  2590  0008E0  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  2591  0008E2                     l3635:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2595  0008E2  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
  2596  0008E6  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2597  0008EA  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2598  0008EE  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2599  0008F2  EC72  F018         	call	___fpclassifyf	;wreg free
  2600  0008F6  0401               	decf	?___fpclassifyf^0,w,c
  2601  0008F8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2602  0008FA  A4D8               	btfss	status,2,c
  2603  0008FC  EF82  F004         	goto	u3911
  2604  000900  EF84  F004         	goto	u3910
  2605  000904                     u3911:
  2606  000904  EFCE  F004         	goto	l3653
  2607  000908                     u3910:
  2608  000908  0EBF               	movlw	191
  2609  00090A  0100               	movlb	0	; () banked
  2610  00090C  6F67               	movwf	??_efgtoa& (0+255),b
  2611  00090E  0EFF               	movlw	255
  2612  000910  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  2613  000912  5166               	movf	efgtoa@c& (0+255),w,b
  2614  000914  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  2615  000916  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  2616  000918  5167               	movf	??_efgtoa& (0+255),w,b
  2617  00091A  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  2618  00091C  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  2619  00091E  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2620  000920  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  2621  000922  E107               	bnz	u3921
  2622  000924  0E1A               	movlw	26
  2623  000926  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  2624  000928  B0D8               	btfsc	status,0,c
  2625  00092A  EF99  F004         	goto	u3921
  2626  00092E  EF9B  F004         	goto	u3920
  2627  000932                     u3921:
  2628  000932  EFA9  F004         	goto	l3645
  2629  000936                     u3920:
  2630  000936                     
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2633  000936  0E00               	movlw	low _dbuf
  2634  000938  2598               	addwf	efgtoa@n& (0+255),w,b
  2635  00093A  6E01               	movwf	strcpy@dest^0,c
  2636  00093C  0E01               	movlw	high _dbuf
  2637  00093E  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2638  000940  6E02               	movwf	(strcpy@dest+1)^0,c
  2639  000942  0E14               	movlw	low STR_2
  2640  000944  6E03               	movwf	strcpy@src^0,c
  2641  000946  0E08               	movlw	high STR_2
  2642  000948  6E04               	movwf	(strcpy@src+1)^0,c
  2643  00094A  ECB7  F01C         	call	_strcpy	;wreg free
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2646  00094E  EFB5  F004         	goto	l3647
  2647  000952                     l3645:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2651  000952  0E00               	movlw	low _dbuf
  2652  000954  2598               	addwf	efgtoa@n& (0+255),w,b
  2653  000956  6E01               	movwf	strcpy@dest^0,c
  2654  000958  0E01               	movlw	high _dbuf
  2655  00095A  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2656  00095C  6E02               	movwf	(strcpy@dest+1)^0,c
  2657  00095E  0E1C               	movlw	low STR_3
  2658  000960  6E03               	movwf	strcpy@src^0,c
  2659  000962  0E08               	movlw	high STR_3
  2660  000964  6E04               	movwf	(strcpy@src+1)^0,c
  2661  000966  ECB7  F01C         	call	_strcpy	;wreg free
  2662  00096A                     l3647:
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2665  00096A  0100               	movlb	0	; () banked
  2666  00096C  0EFD               	movlw	253
  2667  00096E  2784               	addwf	efgtoa@w& (0+255),f,b
  2668  000970  0EFF               	movlw	255
  2669  000972  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2670  000974                     l3649:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2673  000974  C060  F011         	movff	efgtoa@fp,pad@fp
  2674  000978  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  2675  00097C  0E00               	movlw	low _dbuf
  2676  00097E  6E13               	movwf	pad@buf^0,c
  2677  000980  0E01               	movlw	high _dbuf
  2678  000982  6E14               	movwf	(pad@buf+1)^0,c
  2679  000984  C084  F015         	movff	efgtoa@w,pad@p
  2680  000988  C085  F016         	movff	efgtoa@w+1,pad@p+1
  2681  00098C  EC35  F01A         	call	_pad	;wreg free
  2682  000990  C011  F060         	movff	?_pad,?_efgtoa
  2683  000994  C012  F061         	movff	?_pad+1,?_efgtoa+1
  2684  000998  EF18  F00A         	goto	l915
  2685  00099C                     l3653:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2688  00099C  C092  F001         	movff	efgtoa@g,___fpclassifyf@x
  2689  0009A0  C093  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2690  0009A4  C094  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2691  0009A8  C095  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2692  0009AC  EC72  F018         	call	___fpclassifyf	;wreg free
  2693  0009B0  5001               	movf	?___fpclassifyf^0,w,c
  2694  0009B2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2695  0009B4  A4D8               	btfss	status,2,c
  2696  0009B6  EFDF  F004         	goto	u3931
  2697  0009BA  EFE1  F004         	goto	u3930
  2698  0009BE                     u3931:
  2699  0009BE  EF14  F005         	goto	l3671
  2700  0009C2                     u3930:
  2701  0009C2  0EBF               	movlw	191
  2702  0009C4  0100               	movlb	0	; () banked
  2703  0009C6  6F67               	movwf	??_efgtoa& (0+255),b
  2704  0009C8  0EFF               	movlw	255
  2705  0009CA  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  2706  0009CC  5166               	movf	efgtoa@c& (0+255),w,b
  2707  0009CE  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  2708  0009D0  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  2709  0009D2  5167               	movf	??_efgtoa& (0+255),w,b
  2710  0009D4  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  2711  0009D6  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  2712  0009D8  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2713  0009DA  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  2714  0009DC  E107               	bnz	u3941
  2715  0009DE  0E1A               	movlw	26
  2716  0009E0  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  2717  0009E2  B0D8               	btfsc	status,0,c
  2718  0009E4  EFF6  F004         	goto	u3941
  2719  0009E8  EFF8  F004         	goto	u3940
  2720  0009EC                     u3941:
  2721  0009EC  EF06  F005         	goto	l3663
  2722  0009F0                     u3940:
  2723  0009F0                     
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2726  0009F0  0E00               	movlw	low _dbuf
  2727  0009F2  2598               	addwf	efgtoa@n& (0+255),w,b
  2728  0009F4  6E01               	movwf	strcpy@dest^0,c
  2729  0009F6  0E01               	movlw	high _dbuf
  2730  0009F8  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2731  0009FA  6E02               	movwf	(strcpy@dest+1)^0,c
  2732  0009FC  0E18               	movlw	low STR_6
  2733  0009FE  6E03               	movwf	strcpy@src^0,c
  2734  000A00  0E08               	movlw	high STR_6
  2735  000A02  6E04               	movwf	(strcpy@src+1)^0,c
  2736  000A04  ECB7  F01C         	call	_strcpy	;wreg free
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2739  000A08  EFB5  F004         	goto	l3647
  2740  000A0C                     l3663:
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2744  000A0C  0E00               	movlw	low _dbuf
  2745  000A0E  2598               	addwf	efgtoa@n& (0+255),w,b
  2746  000A10  6E01               	movwf	strcpy@dest^0,c
  2747  000A12  0E01               	movlw	high _dbuf
  2748  000A14  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2749  000A16  6E02               	movwf	(strcpy@dest+1)^0,c
  2750  000A18  0E20               	movlw	low STR_7
  2751  000A1A  6E03               	movwf	strcpy@src^0,c
  2752  000A1C  0E08               	movlw	high STR_7
  2753  000A1E  6E04               	movwf	(strcpy@src+1)^0,c
  2754  000A20  ECB7  F01C         	call	_strcpy	;wreg free
  2755  000A24  EFB5  F004         	goto	l3647
  2756  000A28                     l3671:
  2757                           
  2758                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2759  000A28  0E00               	movlw	0
  2760  000A2A  0100               	movlb	0	; () banked
  2761  000A2C  6F9A               	movwf	efgtoa@u& (0+255),b
  2762  000A2E  0E00               	movlw	0
  2763  000A30  6F9B               	movwf	(efgtoa@u+1)& (0+255),b
  2764  000A32  0E80               	movlw	128
  2765  000A34  6F9C               	movwf	(efgtoa@u+2)& (0+255),b
  2766  000A36  0E3F               	movlw	63
  2767  000A38  6F9D               	movwf	(efgtoa@u+3)& (0+255),b
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2770  000A3A  0E00               	movlw	0
  2771  000A3C  6F97               	movwf	(efgtoa@e+1)& (0+255),b
  2772  000A3E  0E00               	movlw	0
  2773  000A40  6F96               	movwf	efgtoa@e& (0+255),b
  2774  000A42                     
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2777  000A42  C092  F001         	movff	efgtoa@g,___fleq@ff1
  2778  000A46  C093  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2779  000A4A  C094  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2780  000A4E  C095  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2781  000A52  0E00               	movlw	0
  2782  000A54  6E05               	movwf	___fleq@ff2^0,c
  2783  000A56  0E00               	movlw	0
  2784  000A58  6E06               	movwf	(___fleq@ff2+1)^0,c
  2785  000A5A  0E00               	movlw	0
  2786  000A5C  6E07               	movwf	(___fleq@ff2+2)^0,c
  2787  000A5E  0E00               	movlw	0
  2788  000A60  6E08               	movwf	(___fleq@ff2+3)^0,c
  2789  000A62  ECAE  F01B         	call	___fleq	;wreg free
  2790  000A66  B0D8               	btfsc	status,0,c
  2791  000A68  EF38  F005         	goto	u3951
  2792  000A6C  EF3A  F005         	goto	u3950
  2793  000A70                     u3951:
  2794  000A70  EFBD  F005         	goto	l3689
  2795  000A74                     u3950:
  2796  000A74  EF59  F005         	goto	l3681
  2797  000A78                     l3677:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2800  000A78  C09A  F013         	movff	efgtoa@u,___flmul@b
  2801  000A7C  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  2802  000A80  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  2803  000A84  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  2804  000A88  0E00               	movlw	0
  2805  000A8A  6E17               	movwf	___flmul@a^0,c
  2806  000A8C  0E00               	movlw	0
  2807  000A8E  6E18               	movwf	(___flmul@a+1)^0,c
  2808  000A90  0E20               	movlw	32
  2809  000A92  6E19               	movwf	(___flmul@a+2)^0,c
  2810  000A94  0E41               	movlw	65
  2811  000A96  6E1A               	movwf	(___flmul@a+3)^0,c
  2812  000A98  ECF3  F00E         	call	___flmul	;wreg free
  2813  000A9C  C013  F09A         	movff	?___flmul,efgtoa@u
  2814  000AA0  C014  F09B         	movff	?___flmul+1,efgtoa@u+1
  2815  000AA4  C015  F09C         	movff	?___flmul+2,efgtoa@u+2
  2816  000AA8  C016  F09D         	movff	?___flmul+3,efgtoa@u+3
  2817  000AAC                     
  2818                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2819  000AAC  0100               	movlb	0	; () banked
  2820  000AAE  4B96               	infsnz	efgtoa@e& (0+255),f,b
  2821  000AB0  2B97               	incf	(efgtoa@e+1)& (0+255),f,b
  2822  000AB2                     l3681:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2825  000AB2  C092  F02C         	movff	efgtoa@g,___flge@ff1
  2826  000AB6  C093  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  2827  000ABA  C094  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  2828  000ABE  C095  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  2829  000AC2  0E00               	movlw	0
  2830  000AC4  6E17               	movwf	___flmul@a^0,c
  2831  000AC6  0E00               	movlw	0
  2832  000AC8  6E18               	movwf	(___flmul@a+1)^0,c
  2833  000ACA  0E20               	movlw	32
  2834  000ACC  6E19               	movwf	(___flmul@a+2)^0,c
  2835  000ACE  0E41               	movlw	65
  2836  000AD0  6E1A               	movwf	(___flmul@a+3)^0,c
  2837  000AD2  C09A  F013         	movff	efgtoa@u,___flmul@b
  2838  000AD6  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  2839  000ADA  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  2840  000ADE  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  2841  000AE2  ECF3  F00E         	call	___flmul	;wreg free
  2842  000AE6  C013  F030         	movff	?___flmul,___flge@ff2
  2843  000AEA  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  2844  000AEE  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  2845  000AF2  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  2846  000AF6  ECF0  F017         	call	___flge	;wreg free
  2847  000AFA  B0D8               	btfsc	status,0,c
  2848  000AFC  EF82  F005         	goto	u3961
  2849  000B00  EF84  F005         	goto	u3960
  2850  000B04                     u3961:
  2851  000B04  EF3C  F005         	goto	l3677
  2852  000B08                     u3960:
  2853  000B08  EFA4  F005         	goto	l3687
  2854  000B0C                     l3683:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2857  000B0C  C09A  F02C         	movff	efgtoa@u,___fldiv@b
  2858  000B10  C09B  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  2859  000B14  C09C  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  2860  000B18  C09D  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  2861  000B1C  0E00               	movlw	0
  2862  000B1E  6E30               	movwf	___fldiv@a^0,c
  2863  000B20  0E00               	movlw	0
  2864  000B22  6E31               	movwf	(___fldiv@a+1)^0,c
  2865  000B24  0E20               	movlw	32
  2866  000B26  6E32               	movwf	(___fldiv@a+2)^0,c
  2867  000B28  0E41               	movlw	65
  2868  000B2A  6E33               	movwf	(___fldiv@a+3)^0,c
  2869  000B2C  EC08  F011         	call	___fldiv	;wreg free
  2870  000B30  C02C  F09A         	movff	?___fldiv,efgtoa@u
  2871  000B34  C02D  F09B         	movff	?___fldiv+1,efgtoa@u+1
  2872  000B38  C02E  F09C         	movff	?___fldiv+2,efgtoa@u+2
  2873  000B3C  C02F  F09D         	movff	?___fldiv+3,efgtoa@u+3
  2874  000B40                     
  2875                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2876  000B40  0100               	movlb	0	; () banked
  2877  000B42  0796               	decf	efgtoa@e& (0+255),f,b
  2878  000B44  A0D8               	btfss	status,0,c
  2879  000B46  0797               	decf	(efgtoa@e+1)& (0+255),f,b
  2880  000B48                     l3687:
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2883  000B48  C092  F02C         	movff	efgtoa@g,___flge@ff1
  2884  000B4C  C093  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  2885  000B50  C094  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  2886  000B54  C095  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  2887  000B58  C09A  F030         	movff	efgtoa@u,___flge@ff2
  2888  000B5C  C09B  F031         	movff	efgtoa@u+1,___flge@ff2+1
  2889  000B60  C09C  F032         	movff	efgtoa@u+2,___flge@ff2+2
  2890  000B64  C09D  F033         	movff	efgtoa@u+3,___flge@ff2+3
  2891  000B68  ECF0  F017         	call	___flge	;wreg free
  2892  000B6C  A0D8               	btfss	status,0,c
  2893  000B6E  EFBB  F005         	goto	u3971
  2894  000B72  EFBD  F005         	goto	u3970
  2895  000B76                     u3971:
  2896  000B76  EF86  F005         	goto	l3683
  2897  000B7A                     u3970:
  2898  000B7A                     l3689:
  2899                           
  2900                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2901  000B7A  C066  F007         	movff	efgtoa@c,tolower@c
  2902  000B7E  6A08               	clrf	(tolower@c+1)^0,c
  2903  000B80  EC5C  F01D         	call	_tolower	;wreg free
  2904  000B84  5007               	movf	?_tolower^0,w,c
  2905  000B86  0100               	movlb	0	; () banked
  2906  000B88  6F87               	movwf	efgtoa@mode& (0+255),b
  2907  000B8A                     
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2910  000B8A  C087  F086         	movff	efgtoa@mode,efgtoa@nmode
  2911  000B8E                     
  2912                           ; BSR set to: 0
  2913                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2914  000B8E  0E67               	movlw	103
  2915  000B90  1987               	xorwf	efgtoa@mode& (0+255),w,b
  2916  000B92  A4D8               	btfss	status,2,c
  2917  000B94  EFCE  F005         	goto	u3981
  2918  000B98  EFD0  F005         	goto	u3980
  2919  000B9C                     u3981:
  2920  000B9C  EFF6  F005         	goto	l3703
  2921  000BA0                     u3980:
  2922  000BA0                     
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2925  000BA0  51F7               	movf	_prec& (0+255),w,b
  2926  000BA2  11F8               	iorwf	(_prec+1)& (0+255),w,b
  2927  000BA4  A4D8               	btfss	status,2,c
  2928  000BA6  EFD7  F005         	goto	u3991
  2929  000BAA  EFD9  F005         	goto	u3990
  2930  000BAE                     u3991:
  2931  000BAE  EFDD  F005         	goto	l3699
  2932  000BB2                     u3990:
  2933  000BB2                     
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2936  000BB2  0E00               	movlw	0
  2937  000BB4  6FF8               	movwf	(_prec+1)& (0+255),b
  2938  000BB6  0E01               	movlw	1
  2939  000BB8  6FF7               	movwf	_prec& (0+255),b
  2940  000BBA                     l3699:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2944  000BBA  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  2945  000BBC  EFEA  F005         	goto	u4000
  2946  000BC0  51F8               	movf	(_prec+1)& (0+255),w,b
  2947  000BC2  E106               	bnz	u4001
  2948  000BC4  05F7               	decf	_prec& (0+255),w,b
  2949  000BC6  B0D8               	btfsc	status,0,c
  2950  000BC8  EFE8  F005         	goto	u4001
  2951  000BCC  EFEA  F005         	goto	u4000
  2952  000BD0                     u4001:
  2953  000BD0  EFF0  F005         	goto	l931
  2954  000BD4                     u4000:
  2955  000BD4                     l3701:
  2956                           
  2957                           ; BSR set to: 0
  2958  000BD4  0E00               	movlw	0
  2959  000BD6  6F83               	movwf	(efgtoa@p+1)& (0+255),b
  2960  000BD8  0E06               	movlw	6
  2961  000BDA  6F82               	movwf	efgtoa@p& (0+255),b
  2962  000BDC  EFFF  F005         	goto	l3709
  2963  000BE0                     l931:
  2964                           
  2965                           ; BSR set to: 0
  2966  000BE0  C0F7  F082         	movff	_prec,efgtoa@p
  2967  000BE4  C0F8  F083         	movff	_prec+1,efgtoa@p+1
  2968  000BE8  EFFF  F005         	goto	l3709
  2969  000BEC                     l3703:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2973  000BEC  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  2974  000BEE  EFFB  F005         	goto	u4011
  2975  000BF2  EFFD  F005         	goto	u4010
  2976  000BF6                     u4011:
  2977  000BF6  EFEA  F005         	goto	l3701
  2978  000BFA                     u4010:
  2979  000BFA  EFF0  F005         	goto	l931
  2980  000BFE                     l3709:
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2984  000BFE  0E67               	movlw	103
  2985  000C00  1987               	xorwf	efgtoa@mode& (0+255),w,b
  2986  000C02  A4D8               	btfss	status,2,c
  2987  000C04  EF06  F006         	goto	u4021
  2988  000C08  EF08  F006         	goto	u4020
  2989  000C0C                     u4021:
  2990  000C0C  EF37  F006         	goto	l3719
  2991  000C10                     u4020:
  2992  000C10                     
  2993                           ; BSR set to: 0
  2994                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2995  000C10  AF97               	btfss	(efgtoa@e+1)& (0+255),7,b
  2996  000C12  EF16  F006         	goto	u4030
  2997  000C16  0EFC               	movlw	252
  2998  000C18  5D96               	subwf	efgtoa@e& (0+255),w,b
  2999  000C1A  0EFF               	movlw	255
  3000  000C1C  5997               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3001  000C1E  A0D8               	btfss	status,0,c
  3002  000C20  EF14  F006         	goto	u4031
  3003  000C24  EF16  F006         	goto	u4030
  3004  000C28                     u4031:
  3005  000C28  EF35  F006         	goto	l3717
  3006  000C2C                     u4030:
  3007  000C2C                     
  3008                           ; BSR set to: 0
  3009  000C2C  0EFF               	movlw	255
  3010  000C2E  6F67               	movwf	??_efgtoa& (0+255),b
  3011  000C30  0EFF               	movlw	255
  3012  000C32  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  3013  000C34  C082  F069         	movff	efgtoa@p,??_efgtoa+2
  3014  000C38  C083  F06A         	movff	efgtoa@p+1,??_efgtoa+3
  3015  000C3C  5167               	movf	??_efgtoa& (0+255),w,b
  3016  000C3E  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  3017  000C40  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  3018  000C42  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3019  000C44  5196               	movf	efgtoa@e& (0+255),w,b
  3020  000C46  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  3021  000C48  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  3022  000C4A  0A80               	xorlw	128
  3023  000C4C  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  3024  000C4E  5197               	movf	(efgtoa@e+1)& (0+255),w,b
  3025  000C50  0A80               	xorlw	128
  3026  000C52  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3027  000C54  A0D8               	btfss	status,0,c
  3028  000C56  EF2F  F006         	goto	u4041
  3029  000C5A  EF31  F006         	goto	u4040
  3030  000C5E                     u4041:
  3031  000C5E  EF35  F006         	goto	l3717
  3032  000C62                     u4040:
  3033  000C62                     
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3036  000C62  0E66               	movlw	102
  3037  000C64  6F86               	movwf	efgtoa@nmode& (0+255),b
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3040  000C66  EF37  F006         	goto	l3719
  3041  000C6A                     l3717:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3045  000C6A  0E65               	movlw	101
  3046  000C6C  6F86               	movwf	efgtoa@nmode& (0+255),b
  3047  000C6E                     l3719:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3051  000C6E  C082  F078         	movff	efgtoa@p,efgtoa@m
  3052  000C72  C083  F079         	movff	efgtoa@p+1,efgtoa@m+1
  3053  000C76                     
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3056  000C76  0E67               	movlw	103
  3057  000C78  1987               	xorwf	efgtoa@mode& (0+255),w,b
  3058  000C7A  A4D8               	btfss	status,2,c
  3059  000C7C  EF42  F006         	goto	u4051
  3060  000C80  EF44  F006         	goto	u4050
  3061  000C84                     u4051:
  3062  000C84  EF54  F006         	goto	l3727
  3063  000C88                     u4050:
  3064  000C88                     
  3065                           ; BSR set to: 0
  3066  000C88  0E66               	movlw	102
  3067  000C8A  1986               	xorwf	efgtoa@nmode& (0+255),w,b
  3068  000C8C  A4D8               	btfss	status,2,c
  3069  000C8E  EF4B  F006         	goto	u4061
  3070  000C92  EF4D  F006         	goto	u4060
  3071  000C96                     u4061:
  3072  000C96  EF56  F006         	goto	l3729
  3073  000C9A                     u4060:
  3074  000C9A                     
  3075                           ; BSR set to: 0
  3076  000C9A  BF97               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3077  000C9C  EF54  F006         	goto	u4070
  3078  000CA0  EF52  F006         	goto	u4071
  3079  000CA4                     u4071:
  3080  000CA4  EF56  F006         	goto	l3729
  3081  000CA8                     u4070:
  3082  000CA8                     l3727:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3086  000CA8  4B78               	infsnz	efgtoa@m& (0+255),f,b
  3087  000CAA  2B79               	incf	(efgtoa@m+1)& (0+255),f,b
  3088  000CAC                     l3729:
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3092  000CAC  0E66               	movlw	102
  3093  000CAE  1986               	xorwf	efgtoa@nmode& (0+255),w,b
  3094  000CB0  A4D8               	btfss	status,2,c
  3095  000CB2  EF5D  F006         	goto	u4081
  3096  000CB6  EF5F  F006         	goto	u4080
  3097  000CBA                     u4081:
  3098  000CBA  EF7F  F006         	goto	l3739
  3099  000CBE                     u4080:
  3100  000CBE                     
  3101                           ; BSR set to: 0
  3102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3103  000CBE  BF97               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3104  000CC0  EF66  F006         	goto	u4090
  3105  000CC4  EF64  F006         	goto	u4091
  3106  000CC8                     u4091:
  3107  000CC8  EF72  F006         	goto	l3735
  3108  000CCC                     u4090:
  3109  000CCC                     
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3112  000CCC  0E00               	movlw	0
  3113  000CCE  6F9A               	movwf	efgtoa@u& (0+255),b
  3114  000CD0  0E00               	movlw	0
  3115  000CD2  6F9B               	movwf	(efgtoa@u+1)& (0+255),b
  3116  000CD4  0E80               	movlw	128
  3117  000CD6  6F9C               	movwf	(efgtoa@u+2)& (0+255),b
  3118  000CD8  0E3F               	movlw	63
  3119  000CDA  6F9D               	movwf	(efgtoa@u+3)& (0+255),b
  3120                           
  3121                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3122  000CDC  0E00               	movlw	0
  3123  000CDE  6F97               	movwf	(efgtoa@e+1)& (0+255),b
  3124  000CE0  0E00               	movlw	0
  3125  000CE2  6F96               	movwf	efgtoa@e& (0+255),b
  3126  000CE4                     l3735:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3130  000CE4  0E67               	movlw	103
  3131  000CE6  1987               	xorwf	efgtoa@mode& (0+255),w,b
  3132  000CE8  B4D8               	btfsc	status,2,c
  3133  000CEA  EF79  F006         	goto	u4101
  3134  000CEE  EF7B  F006         	goto	u4100
  3135  000CF2                     u4101:
  3136  000CF2  EF7F  F006         	goto	l3739
  3137  000CF6                     u4100:
  3138  000CF6                     
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3141  000CF6  5196               	movf	efgtoa@e& (0+255),w,b
  3142  000CF8  2778               	addwf	efgtoa@m& (0+255),f,b
  3143  000CFA  5197               	movf	(efgtoa@e+1)& (0+255),w,b
  3144  000CFC  2379               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3145  000CFE                     l3739:
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3149  000CFE  0E00               	movlw	0
  3150  000D00  6F91               	movwf	(efgtoa@i+1)& (0+255),b
  3151  000D02  0E00               	movlw	0
  3152  000D04  6F90               	movwf	efgtoa@i& (0+255),b
  3153  000D06                     
  3154                           ; BSR set to: 0
  3155                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3156  000D06  C092  F088         	movff	efgtoa@g,efgtoa@h
  3157  000D0A  C093  F089         	movff	efgtoa@g+1,efgtoa@h+1
  3158  000D0E  C094  F08A         	movff	efgtoa@g+2,efgtoa@h+2
  3159  000D12  C095  F08B         	movff	efgtoa@g+3,efgtoa@h+3
  3160  000D16                     
  3161                           ; BSR set to: 0
  3162                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3163  000D16  C09A  F07A         	movff	efgtoa@u,efgtoa@ou
  3164  000D1A  C09B  F07B         	movff	efgtoa@u+1,efgtoa@ou+1
  3165  000D1E  C09C  F07C         	movff	efgtoa@u+2,efgtoa@ou+2
  3166  000D22  C09D  F07D         	movff	efgtoa@u+3,efgtoa@ou+3
  3167                           
  3168                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3169  000D26  EF10  F007         	goto	l3753
  3170  000D2A                     l3745:
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3174  000D2A  C088  F02C         	movff	efgtoa@h,___fldiv@b
  3175  000D2E  C089  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  3176  000D32  C08A  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  3177  000D36  C08B  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  3178  000D3A  C09A  F030         	movff	efgtoa@u,___fldiv@a
  3179  000D3E  C09B  F031         	movff	efgtoa@u+1,___fldiv@a+1
  3180  000D42  C09C  F032         	movff	efgtoa@u+2,___fldiv@a+2
  3181  000D46  C09D  F033         	movff	efgtoa@u+3,___fldiv@a+3
  3182  000D4A  EC08  F011         	call	___fldiv	;wreg free
  3183  000D4E  C02C  F045         	movff	?___fldiv,floorf@x
  3184  000D52  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  3185  000D56  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  3186  000D5A  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  3187  000D5E  ECF2  F013         	call	_floorf	;wreg free
  3188  000D62  C045  F08C         	movff	?_floorf,efgtoa@l
  3189  000D66  C046  F08D         	movff	?_floorf+1,efgtoa@l+1
  3190  000D6A  C047  F08E         	movff	?_floorf+2,efgtoa@l+2
  3191  000D6E  C048  F08F         	movff	?_floorf+3,efgtoa@l+3
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3194  000D72  C08C  F055         	movff	efgtoa@l,___fltol@f1
  3195  000D76  C08D  F056         	movff	efgtoa@l+1,___fltol@f1+1
  3196  000D7A  C08E  F057         	movff	efgtoa@l+2,___fltol@f1+2
  3197  000D7E  C08F  F058         	movff	efgtoa@l+3,___fltol@f1+3
  3198  000D82  EC6D  F017         	call	___fltol	;wreg free
  3199  000D86  C055  F07E         	movff	?___fltol,efgtoa@d
  3200  000D8A  C056  F07F         	movff	?___fltol+1,efgtoa@d+1
  3201  000D8E                     
  3202                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3203  000D8E  C088  F055         	movff	efgtoa@h,___flsub@b
  3204  000D92  C089  F056         	movff	efgtoa@h+1,___flsub@b+1
  3205  000D96  C08A  F057         	movff	efgtoa@h+2,___flsub@b+2
  3206  000D9A  C08B  F058         	movff	efgtoa@h+3,___flsub@b+3
  3207  000D9E  C09A  F017         	movff	efgtoa@u,___flmul@a
  3208  000DA2  C09B  F018         	movff	efgtoa@u+1,___flmul@a+1
  3209  000DA6  C09C  F019         	movff	efgtoa@u+2,___flmul@a+2
  3210  000DAA  C09D  F01A         	movff	efgtoa@u+3,___flmul@a+3
  3211  000DAE  C08C  F013         	movff	efgtoa@l,___flmul@b
  3212  000DB2  C08D  F014         	movff	efgtoa@l+1,___flmul@b+1
  3213  000DB6  C08E  F015         	movff	efgtoa@l+2,___flmul@b+2
  3214  000DBA  C08F  F016         	movff	efgtoa@l+3,___flmul@b+3
  3215  000DBE  ECF3  F00E         	call	___flmul	;wreg free
  3216  000DC2  C013  F059         	movff	?___flmul,___flsub@a
  3217  000DC6  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  3218  000DCA  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  3219  000DCE  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  3220  000DD2  EC7F  F01D         	call	___flsub	;wreg free
  3221  000DD6  C055  F088         	movff	?___flsub,efgtoa@h
  3222  000DDA  C056  F089         	movff	?___flsub+1,efgtoa@h+1
  3223  000DDE  C057  F08A         	movff	?___flsub+2,efgtoa@h+2
  3224  000DE2  C058  F08B         	movff	?___flsub+3,efgtoa@h+3
  3225  000DE6                     
  3226                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3227  000DE6  C09A  F02C         	movff	efgtoa@u,___fldiv@b
  3228  000DEA  C09B  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  3229  000DEE  C09C  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  3230  000DF2  C09D  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  3231  000DF6  0E00               	movlw	0
  3232  000DF8  6E30               	movwf	___fldiv@a^0,c
  3233  000DFA  0E00               	movlw	0
  3234  000DFC  6E31               	movwf	(___fldiv@a+1)^0,c
  3235  000DFE  0E20               	movlw	32
  3236  000E00  6E32               	movwf	(___fldiv@a+2)^0,c
  3237  000E02  0E41               	movlw	65
  3238  000E04  6E33               	movwf	(___fldiv@a+3)^0,c
  3239  000E06  EC08  F011         	call	___fldiv	;wreg free
  3240  000E0A  C02C  F09A         	movff	?___fldiv,efgtoa@u
  3241  000E0E  C02D  F09B         	movff	?___fldiv+1,efgtoa@u+1
  3242  000E12  C02E  F09C         	movff	?___fldiv+2,efgtoa@u+2
  3243  000E16  C02F  F09D         	movff	?___fldiv+3,efgtoa@u+3
  3244  000E1A                     
  3245                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3246  000E1A  0100               	movlb	0	; () banked
  3247  000E1C  4B90               	infsnz	efgtoa@i& (0+255),f,b
  3248  000E1E  2B91               	incf	(efgtoa@i+1)& (0+255),f,b
  3249  000E20                     l3753:
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3253  000E20  5178               	movf	efgtoa@m& (0+255),w,b
  3254  000E22  5D90               	subwf	efgtoa@i& (0+255),w,b
  3255  000E24  5191               	movf	(efgtoa@i+1)& (0+255),w,b
  3256  000E26  0A80               	xorlw	128
  3257  000E28  6F67               	movwf	??_efgtoa& (0+255),b
  3258  000E2A  5179               	movf	(efgtoa@m+1)& (0+255),w,b
  3259  000E2C  0A80               	xorlw	128
  3260  000E2E  5967               	subwfb	??_efgtoa& (0+255),w,b
  3261  000E30  A0D8               	btfss	status,0,c
  3262  000E32  EF1D  F007         	goto	u4111
  3263  000E36  EF1F  F007         	goto	u4110
  3264  000E3A                     u4111:
  3265  000E3A  EF95  F006         	goto	l3745
  3266  000E3E                     u4110:
  3267  000E3E                     
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3270  000E3E  C09A  F013         	movff	efgtoa@u,___flmul@b
  3271  000E42  C09B  F014         	movff	efgtoa@u+1,___flmul@b+1
  3272  000E46  C09C  F015         	movff	efgtoa@u+2,___flmul@b+2
  3273  000E4A  C09D  F016         	movff	efgtoa@u+3,___flmul@b+3
  3274  000E4E  0E00               	movlw	0
  3275  000E50  6E17               	movwf	___flmul@a^0,c
  3276  000E52  0E00               	movlw	0
  3277  000E54  6E18               	movwf	(___flmul@a+1)^0,c
  3278  000E56  0EA0               	movlw	160
  3279  000E58  6E19               	movwf	(___flmul@a+2)^0,c
  3280  000E5A  0E40               	movlw	64
  3281  000E5C  6E1A               	movwf	(___flmul@a+3)^0,c
  3282  000E5E  ECF3  F00E         	call	___flmul	;wreg free
  3283  000E62  C013  F08C         	movff	?___flmul,efgtoa@l
  3284  000E66  C014  F08D         	movff	?___flmul+1,efgtoa@l+1
  3285  000E6A  C015  F08E         	movff	?___flmul+2,efgtoa@l+2
  3286  000E6E  C016  F08F         	movff	?___flmul+3,efgtoa@l+3
  3287  000E72                     
  3288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3289  000E72  C088  F02C         	movff	efgtoa@h,___flge@ff1
  3290  000E76  C089  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3291  000E7A  C08A  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3292  000E7E  C08B  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3293  000E82  C08C  F030         	movff	efgtoa@l,___flge@ff2
  3294  000E86  C08D  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3295  000E8A  C08E  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3296  000E8E  C08F  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3297  000E92  ECF0  F017         	call	___flge	;wreg free
  3298  000E96  B0D8               	btfsc	status,0,c
  3299  000E98  EF50  F007         	goto	u4121
  3300  000E9C  EF52  F007         	goto	u4120
  3301  000EA0                     u4121:
  3302  000EA0  EF5D  F007         	goto	l3761
  3303  000EA4                     u4120:
  3304  000EA4                     
  3305                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3306  000EA4  0E00               	movlw	0
  3307  000EA6  0100               	movlb	0	; () banked
  3308  000EA8  6F8C               	movwf	efgtoa@l& (0+255),b
  3309  000EAA  0E00               	movlw	0
  3310  000EAC  6F8D               	movwf	(efgtoa@l+1)& (0+255),b
  3311  000EAE  0E00               	movlw	0
  3312  000EB0  6F8E               	movwf	(efgtoa@l+2)& (0+255),b
  3313  000EB2  0E00               	movlw	0
  3314  000EB4  6F8F               	movwf	(efgtoa@l+3)& (0+255),b
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  3317  000EB6  EF86  F007         	goto	l3767
  3318  000EBA                     l3761:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3321  000EBA  C088  F001         	movff	efgtoa@h,___fleq@ff1
  3322  000EBE  C089  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3323  000EC2  C08A  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3324  000EC6  C08B  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3325  000ECA  C08C  F005         	movff	efgtoa@l,___fleq@ff2
  3326  000ECE  C08D  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3327  000ED2  C08E  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3328  000ED6  C08F  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3329  000EDA  ECAE  F01B         	call	___fleq	;wreg free
  3330  000EDE  A0D8               	btfss	status,0,c
  3331  000EE0  EF74  F007         	goto	u4131
  3332  000EE4  EF76  F007         	goto	u4130
  3333  000EE8                     u4131:
  3334  000EE8  EF86  F007         	goto	l3767
  3335  000EEC                     u4130:
  3336  000EEC  0100               	movlb	0	; () banked
  3337  000EEE  B17E               	btfsc	efgtoa@d& (0+255),0,b
  3338  000EF0  EF7C  F007         	goto	u4141
  3339  000EF4  EF7E  F007         	goto	u4140
  3340  000EF8                     u4141:
  3341  000EF8  EF86  F007         	goto	l3767
  3342  000EFC                     u4140:
  3343  000EFC                     
  3344                           ; BSR set to: 0
  3345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3346  000EFC  0E00               	movlw	0
  3347  000EFE  6F8C               	movwf	efgtoa@l& (0+255),b
  3348  000F00  0E00               	movlw	0
  3349  000F02  6F8D               	movwf	(efgtoa@l+1)& (0+255),b
  3350  000F04  0E00               	movlw	0
  3351  000F06  6F8E               	movwf	(efgtoa@l+2)& (0+255),b
  3352  000F08  0E00               	movlw	0
  3353  000F0A  6F8F               	movwf	(efgtoa@l+3)& (0+255),b
  3354  000F0C                     l3767:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3357  000F0C  C092  F045         	movff	efgtoa@g,___fladd@b
  3358  000F10  C093  F046         	movff	efgtoa@g+1,___fladd@b+1
  3359  000F14  C094  F047         	movff	efgtoa@g+2,___fladd@b+2
  3360  000F18  C095  F048         	movff	efgtoa@g+3,___fladd@b+3
  3361  000F1C  C08C  F049         	movff	efgtoa@l,___fladd@a
  3362  000F20  C08D  F04A         	movff	efgtoa@l+1,___fladd@a+1
  3363  000F24  C08E  F04B         	movff	efgtoa@l+2,___fladd@a+2
  3364  000F28  C08F  F04C         	movff	efgtoa@l+3,___fladd@a+3
  3365  000F2C  EC93  F00C         	call	___fladd	;wreg free
  3366  000F30  C045  F088         	movff	?___fladd,efgtoa@h
  3367  000F34  C046  F089         	movff	?___fladd+1,efgtoa@h+1
  3368  000F38  C047  F08A         	movff	?___fladd+2,efgtoa@h+2
  3369  000F3C  C048  F08B         	movff	?___fladd+3,efgtoa@h+3
  3370  000F40                     
  3371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3372  000F40  C088  F02C         	movff	efgtoa@h,___flge@ff1
  3373  000F44  C089  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3374  000F48  C08A  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3375  000F4C  C08B  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3376  000F50  0E00               	movlw	0
  3377  000F52  6E17               	movwf	___flmul@a^0,c
  3378  000F54  0E00               	movlw	0
  3379  000F56  6E18               	movwf	(___flmul@a+1)^0,c
  3380  000F58  0E20               	movlw	32
  3381  000F5A  6E19               	movwf	(___flmul@a+2)^0,c
  3382  000F5C  0E41               	movlw	65
  3383  000F5E  6E1A               	movwf	(___flmul@a+3)^0,c
  3384  000F60  C07A  F013         	movff	efgtoa@ou,___flmul@b
  3385  000F64  C07B  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3386  000F68  C07C  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3387  000F6C  C07D  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3388  000F70  ECF3  F00E         	call	___flmul	;wreg free
  3389  000F74  C013  F030         	movff	?___flmul,___flge@ff2
  3390  000F78  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  3391  000F7C  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  3392  000F80  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  3393  000F84  ECF0  F017         	call	___flge	;wreg free
  3394  000F88  A0D8               	btfss	status,0,c
  3395  000F8A  EFC9  F007         	goto	u4151
  3396  000F8E  EFCB  F007         	goto	u4150
  3397  000F92                     u4151:
  3398  000F92  EFF4  F007         	goto	l3779
  3399  000F96                     u4150:
  3400  000F96                     
  3401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3402  000F96  0100               	movlb	0	; () banked
  3403  000F98  4B96               	infsnz	efgtoa@e& (0+255),f,b
  3404  000F9A  2B97               	incf	(efgtoa@e+1)& (0+255),f,b
  3405  000F9C                     
  3406                           ; BSR set to: 0
  3407                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3408  000F9C  C07A  F013         	movff	efgtoa@ou,___flmul@b
  3409  000FA0  C07B  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3410  000FA4  C07C  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3411  000FA8  C07D  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3412  000FAC  0E00               	movlw	0
  3413  000FAE  6E17               	movwf	___flmul@a^0,c
  3414  000FB0  0E00               	movlw	0
  3415  000FB2  6E18               	movwf	(___flmul@a+1)^0,c
  3416  000FB4  0E20               	movlw	32
  3417  000FB6  6E19               	movwf	(___flmul@a+2)^0,c
  3418  000FB8  0E41               	movlw	65
  3419  000FBA  6E1A               	movwf	(___flmul@a+3)^0,c
  3420  000FBC  ECF3  F00E         	call	___flmul	;wreg free
  3421  000FC0  C013  F07A         	movff	?___flmul,efgtoa@ou
  3422  000FC4  C014  F07B         	movff	?___flmul+1,efgtoa@ou+1
  3423  000FC8  C015  F07C         	movff	?___flmul+2,efgtoa@ou+2
  3424  000FCC  C016  F07D         	movff	?___flmul+3,efgtoa@ou+3
  3425  000FD0                     
  3426                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3427  000FD0  0E66               	movlw	102
  3428  000FD2  0100               	movlb	0	; () banked
  3429  000FD4  1986               	xorwf	efgtoa@nmode& (0+255),w,b
  3430  000FD6  A4D8               	btfss	status,2,c
  3431  000FD8  EFF0  F007         	goto	u4161
  3432  000FDC  EFF2  F007         	goto	u4160
  3433  000FE0                     u4161:
  3434  000FE0  EFF4  F007         	goto	l3779
  3435  000FE4                     u4160:
  3436  000FE4                     
  3437                           ; BSR set to: 0
  3438                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3439  000FE4  4B78               	infsnz	efgtoa@m& (0+255),f,b
  3440  000FE6  2B79               	incf	(efgtoa@m+1)& (0+255),f,b
  3441  000FE8                     l3779:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3444  000FE8  C07A  F09A         	movff	efgtoa@ou,efgtoa@u
  3445  000FEC  C07B  F09B         	movff	efgtoa@ou+1,efgtoa@u+1
  3446  000FF0  C07C  F09C         	movff	efgtoa@ou+2,efgtoa@u+2
  3447  000FF4  C07D  F09D         	movff	efgtoa@ou+3,efgtoa@u+3
  3448  000FF8                     
  3449                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3450  000FF8  0E65               	movlw	101
  3451  000FFA  0100               	movlb	0	; () banked
  3452  000FFC  1986               	xorwf	efgtoa@nmode& (0+255),w,b
  3453  000FFE  B4D8               	btfsc	status,2,c
  3454  001000  EF04  F008         	goto	u4171
  3455  001004  EF06  F008         	goto	u4170
  3456  001008                     u4171:
  3457  001008  EF0C  F008         	goto	l3785
  3458  00100C                     u4170:
  3459  00100C                     
  3460                           ; BSR set to: 0
  3461  00100C  C096  F076         	movff	efgtoa@e,efgtoa@ne
  3462  001010  C097  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3463  001014  EF10  F008         	goto	l959
  3464  001018                     l3785:
  3465                           
  3466                           ; BSR set to: 0
  3467  001018  0E00               	movlw	0
  3468  00101A  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3469  00101C  0E00               	movlw	0
  3470  00101E  6F76               	movwf	efgtoa@ne& (0+255),b
  3471  001020                     l959:
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3475  001020  0E00               	movlw	0
  3476  001022  6F75               	movwf	(efgtoa@pp+1)& (0+255),b
  3477  001024  0E00               	movlw	0
  3478  001026  6F74               	movwf	efgtoa@pp& (0+255),b
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3481  001028  0E00               	movlw	0
  3482  00102A  6F73               	movwf	(efgtoa@t+1)& (0+255),b
  3483  00102C  0E00               	movlw	0
  3484  00102E  6F72               	movwf	efgtoa@t& (0+255),b
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3487  001030  0E00               	movlw	0
  3488  001032  6F91               	movwf	(efgtoa@i+1)& (0+255),b
  3489  001034  0E00               	movlw	0
  3490  001036  6F90               	movwf	efgtoa@i& (0+255),b
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3493  001038  EF0B  F009         	goto	l3835
  3494  00103C                     l3787:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3498  00103C  C088  F02C         	movff	efgtoa@h,___fldiv@b
  3499  001040  C089  F02D         	movff	efgtoa@h+1,___fldiv@b+1
  3500  001044  C08A  F02E         	movff	efgtoa@h+2,___fldiv@b+2
  3501  001048  C08B  F02F         	movff	efgtoa@h+3,___fldiv@b+3
  3502  00104C  C09A  F030         	movff	efgtoa@u,___fldiv@a
  3503  001050  C09B  F031         	movff	efgtoa@u+1,___fldiv@a+1
  3504  001054  C09C  F032         	movff	efgtoa@u+2,___fldiv@a+2
  3505  001058  C09D  F033         	movff	efgtoa@u+3,___fldiv@a+3
  3506  00105C  EC08  F011         	call	___fldiv	;wreg free
  3507  001060  C02C  F045         	movff	?___fldiv,floorf@x
  3508  001064  C02D  F046         	movff	?___fldiv+1,floorf@x+1
  3509  001068  C02E  F047         	movff	?___fldiv+2,floorf@x+2
  3510  00106C  C02F  F048         	movff	?___fldiv+3,floorf@x+3
  3511  001070  ECF2  F013         	call	_floorf	;wreg free
  3512  001074  C045  F08C         	movff	?_floorf,efgtoa@l
  3513  001078  C046  F08D         	movff	?_floorf+1,efgtoa@l+1
  3514  00107C  C047  F08E         	movff	?_floorf+2,efgtoa@l+2
  3515  001080  C048  F08F         	movff	?_floorf+3,efgtoa@l+3
  3516                           
  3517                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3518  001084  C08C  F055         	movff	efgtoa@l,___fltol@f1
  3519  001088  C08D  F056         	movff	efgtoa@l+1,___fltol@f1+1
  3520  00108C  C08E  F057         	movff	efgtoa@l+2,___fltol@f1+2
  3521  001090  C08F  F058         	movff	efgtoa@l+3,___fltol@f1+3
  3522  001094  EC6D  F017         	call	___fltol	;wreg free
  3523  001098  C055  F07E         	movff	?___fltol,efgtoa@d
  3524  00109C  C056  F07F         	movff	?___fltol+1,efgtoa@d+1
  3525  0010A0                     
  3526                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3527  0010A0  0100               	movlb	0	; () banked
  3528  0010A2  B9F9               	btfsc	_flags& (0+255),4,b
  3529  0010A4  EF56  F008         	goto	u4181
  3530  0010A8  EF58  F008         	goto	u4180
  3531  0010AC                     u4181:
  3532  0010AC  EF75  F008         	goto	l3799
  3533  0010B0                     u4180:
  3534  0010B0                     
  3535                           ; BSR set to: 0
  3536  0010B0  517E               	movf	efgtoa@d& (0+255),w,b
  3537  0010B2  117F               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3538  0010B4  A4D8               	btfss	status,2,c
  3539  0010B6  EF5F  F008         	goto	u4191
  3540  0010BA  EF61  F008         	goto	u4190
  3541  0010BE                     u4191:
  3542  0010BE  EF75  F008         	goto	l3799
  3543  0010C2                     u4190:
  3544  0010C2                     
  3545                           ; BSR set to: 0
  3546  0010C2  0E67               	movlw	103
  3547  0010C4  1987               	xorwf	efgtoa@mode& (0+255),w,b
  3548  0010C6  A4D8               	btfss	status,2,c
  3549  0010C8  EF68  F008         	goto	u4201
  3550  0010CC  EF6A  F008         	goto	u4200
  3551  0010D0                     u4201:
  3552  0010D0  EF75  F008         	goto	l3799
  3553  0010D4                     u4200:
  3554  0010D4                     
  3555                           ; BSR set to: 0
  3556  0010D4  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3557  0010D6  EF71  F008         	goto	u4210
  3558  0010DA  EF6F  F008         	goto	u4211
  3559  0010DE                     u4211:
  3560  0010DE  EF75  F008         	goto	l3799
  3561  0010E2                     u4210:
  3562  0010E2                     
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3565  0010E2  4B72               	infsnz	efgtoa@t& (0+255),f,b
  3566  0010E4  2B73               	incf	(efgtoa@t+1)& (0+255),f,b
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3569  0010E6  EFBF  F008         	goto	l3827
  3570  0010EA                     l3799:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3574  0010EA  5174               	movf	efgtoa@pp& (0+255),w,b
  3575  0010EC  1175               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3576  0010EE  A4D8               	btfss	status,2,c
  3577  0010F0  EF7C  F008         	goto	u4221
  3578  0010F4  EF7E  F008         	goto	u4220
  3579  0010F8                     u4221:
  3580  0010F8  EFA8  F008         	goto	l3819
  3581  0010FC                     u4220:
  3582  0010FC                     
  3583                           ; BSR set to: 0
  3584  0010FC  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3585  0010FE  EF85  F008         	goto	u4230
  3586  001102  EF83  F008         	goto	u4231
  3587  001106                     u4231:
  3588  001106  EFA8  F008         	goto	l3819
  3589  00110A                     u4230:
  3590  00110A                     
  3591                           ; BSR set to: 0
  3592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3593  00110A  0E00               	movlw	low _dbuf
  3594  00110C  2598               	addwf	efgtoa@n& (0+255),w,b
  3595  00110E  6ED9               	movwf	fsr2l,c
  3596  001110  0E01               	movlw	high _dbuf
  3597  001112  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3598  001114  6EDA               	movwf	fsr2h,c
  3599  001116  0E2E               	movlw	46
  3600  001118  6EDF               	movwf	indf2,c
  3601  00111A                     
  3602                           ; BSR set to: 0
  3603  00111A  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3604  00111C  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3605  00111E                     
  3606                           ; BSR set to: 0
  3607                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3608  00111E  0784               	decf	efgtoa@w& (0+255),f,b
  3609  001120  A0D8               	btfss	status,0,c
  3610  001122  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3611  001124                     
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3614  001124  0E00               	movlw	0
  3615  001126  6F75               	movwf	(efgtoa@pp+1)& (0+255),b
  3616  001128  0E01               	movlw	1
  3617  00112A  6F74               	movwf	efgtoa@pp& (0+255),b
  3618  00112C  EFA8  F008         	goto	l3819
  3619  001130                     l3811:
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3623  001130  0E00               	movlw	low _dbuf
  3624  001132  2598               	addwf	efgtoa@n& (0+255),w,b
  3625  001134  6ED9               	movwf	fsr2l,c
  3626  001136  0E01               	movlw	high _dbuf
  3627  001138  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3628  00113A  6EDA               	movwf	fsr2h,c
  3629  00113C  0E30               	movlw	48
  3630  00113E  6EDF               	movwf	indf2,c
  3631  001140                     
  3632                           ; BSR set to: 0
  3633  001140  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3634  001142  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3635  001144                     
  3636                           ; BSR set to: 0
  3637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3638  001144  0784               	decf	efgtoa@w& (0+255),f,b
  3639  001146  A0D8               	btfss	status,0,c
  3640  001148  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3641  00114A                     
  3642                           ; BSR set to: 0
  3643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3644  00114A  0772               	decf	efgtoa@t& (0+255),f,b
  3645  00114C  A0D8               	btfss	status,0,c
  3646  00114E  0773               	decf	(efgtoa@t+1)& (0+255),f,b
  3647  001150                     l3819:
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3651  001150  5172               	movf	efgtoa@t& (0+255),w,b
  3652  001152  1173               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3653  001154  A4D8               	btfss	status,2,c
  3654  001156  EFAF  F008         	goto	u4241
  3655  00115A  EFB1  F008         	goto	u4240
  3656  00115E                     u4241:
  3657  00115E  EF98  F008         	goto	l3811
  3658  001162                     u4240:
  3659  001162                     
  3660                           ; BSR set to: 0
  3661                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3662  001162  0E00               	movlw	low _dbuf
  3663  001164  2598               	addwf	efgtoa@n& (0+255),w,b
  3664  001166  6ED9               	movwf	fsr2l,c
  3665  001168  0E01               	movlw	high _dbuf
  3666  00116A  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3667  00116C  6EDA               	movwf	fsr2h,c
  3668  00116E  517E               	movf	efgtoa@d& (0+255),w,b
  3669  001170  0F30               	addlw	48
  3670  001172  6EDF               	movwf	indf2,c
  3671  001174                     
  3672                           ; BSR set to: 0
  3673  001174  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3674  001176  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3675  001178                     
  3676                           ; BSR set to: 0
  3677                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3678  001178  0784               	decf	efgtoa@w& (0+255),f,b
  3679  00117A  A0D8               	btfss	status,0,c
  3680  00117C  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3681  00117E                     l3827:
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3685  00117E  C088  F055         	movff	efgtoa@h,___flsub@b
  3686  001182  C089  F056         	movff	efgtoa@h+1,___flsub@b+1
  3687  001186  C08A  F057         	movff	efgtoa@h+2,___flsub@b+2
  3688  00118A  C08B  F058         	movff	efgtoa@h+3,___flsub@b+3
  3689  00118E  C09A  F017         	movff	efgtoa@u,___flmul@a
  3690  001192  C09B  F018         	movff	efgtoa@u+1,___flmul@a+1
  3691  001196  C09C  F019         	movff	efgtoa@u+2,___flmul@a+2
  3692  00119A  C09D  F01A         	movff	efgtoa@u+3,___flmul@a+3
  3693  00119E  C08C  F013         	movff	efgtoa@l,___flmul@b
  3694  0011A2  C08D  F014         	movff	efgtoa@l+1,___flmul@b+1
  3695  0011A6  C08E  F015         	movff	efgtoa@l+2,___flmul@b+2
  3696  0011AA  C08F  F016         	movff	efgtoa@l+3,___flmul@b+3
  3697  0011AE  ECF3  F00E         	call	___flmul	;wreg free
  3698  0011B2  C013  F059         	movff	?___flmul,___flsub@a
  3699  0011B6  C014  F05A         	movff	?___flmul+1,___flsub@a+1
  3700  0011BA  C015  F05B         	movff	?___flmul+2,___flsub@a+2
  3701  0011BE  C016  F05C         	movff	?___flmul+3,___flsub@a+3
  3702  0011C2  EC7F  F01D         	call	___flsub	;wreg free
  3703  0011C6  C055  F088         	movff	?___flsub,efgtoa@h
  3704  0011CA  C056  F089         	movff	?___flsub+1,efgtoa@h+1
  3705  0011CE  C057  F08A         	movff	?___flsub+2,efgtoa@h+2
  3706  0011D2  C058  F08B         	movff	?___flsub+3,efgtoa@h+3
  3707  0011D6                     
  3708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3709  0011D6  C09A  F02C         	movff	efgtoa@u,___fldiv@b
  3710  0011DA  C09B  F02D         	movff	efgtoa@u+1,___fldiv@b+1
  3711  0011DE  C09C  F02E         	movff	efgtoa@u+2,___fldiv@b+2
  3712  0011E2  C09D  F02F         	movff	efgtoa@u+3,___fldiv@b+3
  3713  0011E6  0E00               	movlw	0
  3714  0011E8  6E30               	movwf	___fldiv@a^0,c
  3715  0011EA  0E00               	movlw	0
  3716  0011EC  6E31               	movwf	(___fldiv@a+1)^0,c
  3717  0011EE  0E20               	movlw	32
  3718  0011F0  6E32               	movwf	(___fldiv@a+2)^0,c
  3719  0011F2  0E41               	movlw	65
  3720  0011F4  6E33               	movwf	(___fldiv@a+3)^0,c
  3721  0011F6  EC08  F011         	call	___fldiv	;wreg free
  3722  0011FA  C02C  F09A         	movff	?___fldiv,efgtoa@u
  3723  0011FE  C02D  F09B         	movff	?___fldiv+1,efgtoa@u+1
  3724  001202  C02E  F09C         	movff	?___fldiv+2,efgtoa@u+2
  3725  001206  C02F  F09D         	movff	?___fldiv+3,efgtoa@u+3
  3726  00120A                     
  3727                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3728  00120A  0100               	movlb	0	; () banked
  3729  00120C  0776               	decf	efgtoa@ne& (0+255),f,b
  3730  00120E  A0D8               	btfss	status,0,c
  3731  001210  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3732  001212                     
  3733                           ; BSR set to: 0
  3734                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3735  001212  4B90               	infsnz	efgtoa@i& (0+255),f,b
  3736  001214  2B91               	incf	(efgtoa@i+1)& (0+255),f,b
  3737  001216                     l3835:
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3741  001216  5178               	movf	efgtoa@m& (0+255),w,b
  3742  001218  5D90               	subwf	efgtoa@i& (0+255),w,b
  3743  00121A  5191               	movf	(efgtoa@i+1)& (0+255),w,b
  3744  00121C  0A80               	xorlw	128
  3745  00121E  6F67               	movwf	??_efgtoa& (0+255),b
  3746  001220  5179               	movf	(efgtoa@m+1)& (0+255),w,b
  3747  001222  0A80               	xorlw	128
  3748  001224  5967               	subwfb	??_efgtoa& (0+255),w,b
  3749  001226  B0D8               	btfsc	status,0,c
  3750  001228  EF18  F009         	goto	u4251
  3751  00122C  EF1A  F009         	goto	u4250
  3752  001230                     u4251:
  3753  001230  EF28  F009         	goto	l3839
  3754  001234                     u4250:
  3755  001234                     
  3756                           ; BSR set to: 0
  3757  001234  BF99               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3758  001236  EF26  F009         	goto	u4261
  3759  00123A  5199               	movf	(efgtoa@n+1)& (0+255),w,b
  3760  00123C  E109               	bnz	u4260
  3761  00123E  0E4B               	movlw	75
  3762  001240  5D98               	subwf	efgtoa@n& (0+255),w,b
  3763  001242  A0D8               	btfss	status,0,c
  3764  001244  EF26  F009         	goto	u4261
  3765  001248  EF28  F009         	goto	u4260
  3766  00124C                     u4261:
  3767  00124C  EF1E  F008         	goto	l3787
  3768  001250                     u4260:
  3769  001250                     l3839:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3773  001250  5174               	movf	efgtoa@pp& (0+255),w,b
  3774  001252  1175               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3775  001254  A4D8               	btfss	status,2,c
  3776  001256  EF2F  F009         	goto	u4271
  3777  00125A  EF31  F009         	goto	u4270
  3778  00125E                     u4271:
  3779  00125E  EF42  F009         	goto	l3847
  3780  001262                     u4270:
  3781  001262                     
  3782                           ; BSR set to: 0
  3783  001262  A9F9               	btfss	_flags& (0+255),4,b
  3784  001264  EF36  F009         	goto	u4281
  3785  001268  EF38  F009         	goto	u4280
  3786  00126C                     u4281:
  3787  00126C  EF42  F009         	goto	l3847
  3788  001270                     u4280:
  3789  001270                     
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3792  001270  0E00               	movlw	low _dbuf
  3793  001272  2598               	addwf	efgtoa@n& (0+255),w,b
  3794  001274  6ED9               	movwf	fsr2l,c
  3795  001276  0E01               	movlw	high _dbuf
  3796  001278  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3797  00127A  6EDA               	movwf	fsr2h,c
  3798  00127C  0E2E               	movlw	46
  3799  00127E  6EDF               	movwf	indf2,c
  3800  001280                     
  3801                           ; BSR set to: 0
  3802  001280  4B98               	infsnz	efgtoa@n& (0+255),f,b
  3803  001282  2B99               	incf	(efgtoa@n+1)& (0+255),f,b
  3804  001284                     l3847:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3808  001284  0E00               	movlw	low _dbuf
  3809  001286  2598               	addwf	efgtoa@n& (0+255),w,b
  3810  001288  6ED9               	movwf	fsr2l,c
  3811  00128A  0E01               	movlw	high _dbuf
  3812  00128C  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3813  00128E  6EDA               	movwf	fsr2h,c
  3814  001290  0E00               	movlw	0
  3815  001292  6EDF               	movwf	indf2,c
  3816  001294                     
  3817                           ; BSR set to: 0
  3818                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3819  001294  0E65               	movlw	101
  3820  001296  1986               	xorwf	efgtoa@nmode& (0+255),w,b
  3821  001298  A4D8               	btfss	status,2,c
  3822  00129A  EF51  F009         	goto	u4291
  3823  00129E  EF53  F009         	goto	u4290
  3824  0012A2                     u4291:
  3825  0012A2  EFBA  F004         	goto	l3649
  3826  0012A6                     u4290:
  3827  0012A6                     
  3828                           ; BSR set to: 0
  3829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3830  0012A6  0E00               	movlw	0
  3831  0012A8  6F91               	movwf	(efgtoa@i+1)& (0+255),b
  3832  0012AA  0E4F               	movlw	79
  3833  0012AC  6F90               	movwf	efgtoa@i& (0+255),b
  3834  0012AE                     
  3835                           ; BSR set to: 0
  3836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3837  0012AE  0E00               	movlw	low _dbuf
  3838  0012B0  2590               	addwf	efgtoa@i& (0+255),w,b
  3839  0012B2  6ED9               	movwf	fsr2l,c
  3840  0012B4  0E01               	movlw	high _dbuf
  3841  0012B6  2191               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3842  0012B8  6EDA               	movwf	fsr2h,c
  3843  0012BA  0E00               	movlw	0
  3844  0012BC  6EDF               	movwf	indf2,c
  3845  0012BE                     
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3848  0012BE  0E00               	movlw	0
  3849  0012C0  6F81               	movwf	(efgtoa@sign+1)& (0+255),b
  3850  0012C2  0E00               	movlw	0
  3851  0012C4  6F80               	movwf	efgtoa@sign& (0+255),b
  3852  0012C6                     
  3853                           ; BSR set to: 0
  3854                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3855  0012C6  BF97               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3856  0012C8  EF6A  F009         	goto	u4300
  3857  0012CC  EF68  F009         	goto	u4301
  3858  0012D0                     u4301:
  3859  0012D0  EF72  F009         	goto	l3863
  3860  0012D4                     u4300:
  3861  0012D4                     
  3862                           ; BSR set to: 0
  3863                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3864  0012D4  0E00               	movlw	0
  3865  0012D6  6F81               	movwf	(efgtoa@sign+1)& (0+255),b
  3866  0012D8  0E01               	movlw	1
  3867  0012DA  6F80               	movwf	efgtoa@sign& (0+255),b
  3868  0012DC                     
  3869                           ; BSR set to: 0
  3870                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3871  0012DC  6D96               	negf	efgtoa@e& (0+255),b
  3872  0012DE  1F97               	comf	(efgtoa@e+1)& (0+255),f,b
  3873  0012E0  B0D8               	btfsc	status,0,c
  3874  0012E2  2B97               	incf	(efgtoa@e+1)& (0+255),f,b
  3875  0012E4                     l3863:
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3879  0012E4  0E00               	movlw	0
  3880  0012E6  6F83               	movwf	(efgtoa@p+1)& (0+255),b
  3881  0012E8  0E02               	movlw	2
  3882  0012EA  6F82               	movwf	efgtoa@p& (0+255),b
  3883                           
  3884                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3885  0012EC  EFA3  F009         	goto	l3875
  3886  0012F0                     l3865:
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3890  0012F0  0790               	decf	efgtoa@i& (0+255),f,b
  3891  0012F2  A0D8               	btfss	status,0,c
  3892  0012F4  0791               	decf	(efgtoa@i+1)& (0+255),f,b
  3893  0012F6                     
  3894                           ; BSR set to: 0
  3895                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3896  0012F6  0E00               	movlw	low _dbuf
  3897  0012F8  2590               	addwf	efgtoa@i& (0+255),w,b
  3898  0012FA  6ED9               	movwf	fsr2l,c
  3899  0012FC  0E01               	movlw	high _dbuf
  3900  0012FE  2191               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3901  001300  6EDA               	movwf	fsr2h,c
  3902  001302  C096  F001         	movff	efgtoa@e,___awmod@dividend
  3903  001306  C097  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3904  00130A  0E00               	movlw	0
  3905  00130C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3906  00130E  0E0A               	movlw	10
  3907  001310  6E03               	movwf	___awmod@divisor^0,c
  3908  001312  EC56  F01B         	call	___awmod	;wreg free
  3909  001316  5001               	movf	?___awmod^0,w,c
  3910  001318  0F30               	addlw	48
  3911  00131A  6EDF               	movwf	indf2,c
  3912  00131C                     
  3913                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3914  00131C  C096  F001         	movff	efgtoa@e,___awdiv@dividend
  3915  001320  C097  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3916  001324  0E00               	movlw	0
  3917  001326  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3918  001328  0E0A               	movlw	10
  3919  00132A  6E03               	movwf	___awdiv@divisor^0,c
  3920  00132C  EC98  F01A         	call	___awdiv	;wreg free
  3921  001330  C001  F096         	movff	?___awdiv,efgtoa@e
  3922  001334  C002  F097         	movff	?___awdiv+1,efgtoa@e+1
  3923  001338                     
  3924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3925  001338  0100               	movlb	0	; () banked
  3926  00133A  0782               	decf	efgtoa@p& (0+255),f,b
  3927  00133C  A0D8               	btfss	status,0,c
  3928  00133E  0783               	decf	(efgtoa@p+1)& (0+255),f,b
  3929  001340                     
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3932  001340  0784               	decf	efgtoa@w& (0+255),f,b
  3933  001342  A0D8               	btfss	status,0,c
  3934  001344  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3935  001346                     l3875:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3939  001346  5196               	movf	efgtoa@e& (0+255),w,b
  3940  001348  1197               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3941  00134A  A4D8               	btfss	status,2,c
  3942  00134C  EFAA  F009         	goto	u4311
  3943  001350  EFAC  F009         	goto	u4310
  3944  001354                     u4311:
  3945  001354  EF78  F009         	goto	l3865
  3946  001358                     u4310:
  3947  001358                     
  3948                           ; BSR set to: 0
  3949  001358  BF83               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3950  00135A  EFB9  F009         	goto	u4320
  3951  00135E  5183               	movf	(efgtoa@p+1)& (0+255),w,b
  3952  001360  E106               	bnz	u4321
  3953  001362  0582               	decf	efgtoa@p& (0+255),w,b
  3954  001364  B0D8               	btfsc	status,0,c
  3955  001366  EFB7  F009         	goto	u4321
  3956  00136A  EFB9  F009         	goto	u4320
  3957  00136E                     u4321:
  3958  00136E  EF78  F009         	goto	l3865
  3959  001372                     u4320:
  3960  001372                     
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  3963  001372  0790               	decf	efgtoa@i& (0+255),f,b
  3964  001374  A0D8               	btfss	status,0,c
  3965  001376  0791               	decf	(efgtoa@i+1)& (0+255),f,b
  3966  001378                     
  3967                           ; BSR set to: 0
  3968                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3969  001378  5180               	movf	efgtoa@sign& (0+255),w,b
  3970  00137A  1181               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3971  00137C  A4D8               	btfss	status,2,c
  3972  00137E  EFC3  F009         	goto	u4331
  3973  001382  EFC5  F009         	goto	u4330
  3974  001386                     u4331:
  3975  001386  EFCB  F009         	goto	l3885
  3976  00138A                     u4330:
  3977  00138A                     
  3978                           ; BSR set to: 0
  3979  00138A  0E00               	movlw	0
  3980  00138C  6F6F               	movwf	(_efgtoa$1176+1)& (0+255),b
  3981  00138E  0E2B               	movlw	43
  3982  001390  6F6E               	movwf	_efgtoa$1176& (0+255),b
  3983  001392  EFCF  F009         	goto	l3887
  3984  001396                     l3885:
  3985                           
  3986                           ; BSR set to: 0
  3987  001396  0E00               	movlw	0
  3988  001398  6F6F               	movwf	(_efgtoa$1176+1)& (0+255),b
  3989  00139A  0E2D               	movlw	45
  3990  00139C  6F6E               	movwf	_efgtoa$1176& (0+255),b
  3991  00139E                     l3887:
  3992                           
  3993                           ; BSR set to: 0
  3994  00139E  0E00               	movlw	low _dbuf
  3995  0013A0  2590               	addwf	efgtoa@i& (0+255),w,b
  3996  0013A2  6ED9               	movwf	fsr2l,c
  3997  0013A4  0E01               	movlw	high _dbuf
  3998  0013A6  2191               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3999  0013A8  6EDA               	movwf	fsr2h,c
  4000  0013AA  C06E  FFDF         	movff	_efgtoa$1176,indf2
  4001  0013AE                     
  4002                           ; BSR set to: 0
  4003                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4004  0013AE  0784               	decf	efgtoa@w& (0+255),f,b
  4005  0013B0  A0D8               	btfss	status,0,c
  4006  0013B2  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4007  0013B4                     
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4010  0013B4  0790               	decf	efgtoa@i& (0+255),f,b
  4011  0013B6  A0D8               	btfss	status,0,c
  4012  0013B8  0791               	decf	(efgtoa@i+1)& (0+255),f,b
  4013  0013BA                     
  4014                           ; BSR set to: 0
  4015  0013BA  0EBF               	movlw	191
  4016  0013BC  6F67               	movwf	??_efgtoa& (0+255),b
  4017  0013BE  0EFF               	movlw	255
  4018  0013C0  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4019  0013C2  5166               	movf	efgtoa@c& (0+255),w,b
  4020  0013C4  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  4021  0013C6  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  4022  0013C8  5167               	movf	??_efgtoa& (0+255),w,b
  4023  0013CA  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4024  0013CC  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4025  0013CE  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4026  0013D0  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4027  0013D2  E109               	bnz	u4340
  4028  0013D4  0E1A               	movlw	26
  4029  0013D6  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4030  0013D8  A0D8               	btfss	status,0,c
  4031  0013DA  EFF1  F009         	goto	u4341
  4032  0013DE  EFF3  F009         	goto	u4340
  4033  0013E2                     u4341:
  4034  0013E2  EFF9  F009         	goto	l3899
  4035  0013E6                     u4340:
  4036  0013E6                     
  4037                           ; BSR set to: 0
  4038  0013E6  0E00               	movlw	0
  4039  0013E8  6F71               	movwf	(_efgtoa$1177+1)& (0+255),b
  4040  0013EA  0E65               	movlw	101
  4041  0013EC  6F70               	movwf	_efgtoa$1177& (0+255),b
  4042  0013EE  EFFD  F009         	goto	l3901
  4043  0013F2                     l3899:
  4044                           
  4045                           ; BSR set to: 0
  4046  0013F2  0E00               	movlw	0
  4047  0013F4  6F71               	movwf	(_efgtoa$1177+1)& (0+255),b
  4048  0013F6  0E45               	movlw	69
  4049  0013F8  6F70               	movwf	_efgtoa$1177& (0+255),b
  4050  0013FA                     l3901:
  4051                           
  4052                           ; BSR set to: 0
  4053  0013FA  0E00               	movlw	low _dbuf
  4054  0013FC  2590               	addwf	efgtoa@i& (0+255),w,b
  4055  0013FE  6ED9               	movwf	fsr2l,c
  4056  001400  0E01               	movlw	high _dbuf
  4057  001402  2191               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4058  001404  6EDA               	movwf	fsr2h,c
  4059  001406  C070  FFDF         	movff	_efgtoa$1177,indf2
  4060  00140A                     
  4061                           ; BSR set to: 0
  4062                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4063  00140A  0784               	decf	efgtoa@w& (0+255),f,b
  4064  00140C  A0D8               	btfss	status,0,c
  4065  00140E  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4066  001410                     
  4067                           ; BSR set to: 0
  4068                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4069  001410  0E00               	movlw	low _dbuf
  4070  001412  2598               	addwf	efgtoa@n& (0+255),w,b
  4071  001414  6E01               	movwf	strcpy@dest^0,c
  4072  001416  0E01               	movlw	high _dbuf
  4073  001418  2199               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4074  00141A  6E02               	movwf	(strcpy@dest+1)^0,c
  4075  00141C  0E00               	movlw	low _dbuf
  4076  00141E  2590               	addwf	efgtoa@i& (0+255),w,b
  4077  001420  6E03               	movwf	strcpy@src^0,c
  4078  001422  0E01               	movlw	high _dbuf
  4079  001424  2191               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4080  001426  6E04               	movwf	(strcpy@src+1)^0,c
  4081  001428  ECB7  F01C         	call	_strcpy	;wreg free
  4082  00142C  EFBA  F004         	goto	l3649
  4083  001430                     l915:
  4084  001430  0012               	return		;funcret
  4085  001432                     __end_of_efgtoa:
  4086                           	callstack 0
  4087                           
  4088 ;; *************** function _tolower *****************
  4089 ;; Defined at:
  4090 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  c               2    6[COMRAM] int 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  2    6[COMRAM] int 
  4097 ;; Registers used:
  4098 ;;		wreg, status,2, status,0
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4104 ;;      Params:         2       0       0       0       0       0       0       0       0
  4105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4106 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4107 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4108 ;;Total ram usage:        6 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 1
  4111 ;; This function calls:
  4112 ;;		_isupper
  4113 ;; This function is called by:
  4114 ;;		_efgtoa
  4115 ;;		_vfpfcnvrt
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text6
  4120  003AB8                     __ptext6:
  4121                           	callstack 0
  4122  003AB8                     _tolower:
  4123                           	callstack 26
  4124  003AB8  0EBF               	movlw	191
  4125  003ABA  6E09               	movwf	??_tolower^0,c
  4126  003ABC  0EFF               	movlw	255
  4127  003ABE  6E0A               	movwf	(??_tolower+1)^0,c
  4128  003AC0  C007  F00B         	movff	tolower@c,??_tolower+2
  4129  003AC4  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4130  003AC8  5009               	movf	??_tolower^0,w,c
  4131  003ACA  260B               	addwf	(??_tolower+2)^0,f,c
  4132  003ACC  500A               	movf	(??_tolower+1)^0,w,c
  4133  003ACE  220C               	addwfc	(??_tolower+3)^0,f,c
  4134  003AD0  500C               	movf	(??_tolower+3)^0,w,c
  4135  003AD2  E107               	bnz	u3721
  4136  003AD4  0E1A               	movlw	26
  4137  003AD6  5C0B               	subwf	(??_tolower+2)^0,w,c
  4138  003AD8  B0D8               	btfsc	status,0,c
  4139  003ADA  EF71  F01D         	goto	u3721
  4140  003ADE  EF73  F01D         	goto	u3720
  4141  003AE2                     u3721:
  4142  003AE2  EF7A  F01D         	goto	l1143
  4143  003AE6                     u3720:
  4144  003AE6  0E20               	movlw	32
  4145  003AE8  1007               	iorwf	tolower@c^0,w,c
  4146  003AEA  6E07               	movwf	?_tolower^0,c
  4147  003AEC  5008               	movf	(tolower@c+1)^0,w,c
  4148  003AEE  6E08               	movwf	(?_tolower+1)^0,c
  4149  003AF0  EF7E  F01D         	goto	l1146
  4150  003AF4                     l1143:
  4151  003AF4  C007  F007         	movff	tolower@c,?_tolower
  4152  003AF8  C008  F008         	movff	tolower@c+1,?_tolower+1
  4153  003AFC                     l1146:
  4154  003AFC  0012               	return		;funcret
  4155  003AFE                     __end_of_tolower:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function _isupper *****************
  4159 ;; Defined at:
  4160 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  c               2    0[COMRAM] int 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  2    0[COMRAM] int 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4174 ;;      Params:         2       0       0       0       0       0       0       0       0
  4175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4176 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4177 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4178 ;;Total ram usage:        6 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_efgtoa
  4184 ;;		_vfpfcnvrt
  4185 ;;		_tolower
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text7
  4190  003BC6                     __ptext7:
  4191                           	callstack 0
  4192  003BC6                     _isupper:
  4193                           	callstack 26
  4194  003BC6  0EBF               	movlw	191
  4195  003BC8  6E03               	movwf	??_isupper^0,c
  4196  003BCA  0EFF               	movlw	255
  4197  003BCC  6E04               	movwf	(??_isupper+1)^0,c
  4198  003BCE  C001  F005         	movff	isupper@c,??_isupper+2
  4199  003BD2  C002  F006         	movff	isupper@c+1,??_isupper+3
  4200  003BD6  5003               	movf	??_isupper^0,w,c
  4201  003BD8  2605               	addwf	(??_isupper+2)^0,f,c
  4202  003BDA  5004               	movf	(??_isupper+1)^0,w,c
  4203  003BDC  2206               	addwfc	(??_isupper+3)^0,f,c
  4204  003BDE  5006               	movf	(??_isupper+3)^0,w,c
  4205  003BE0  E10A               	bnz	u2870
  4206  003BE2  0E1A               	movlw	26
  4207  003BE4  5C05               	subwf	(??_isupper+2)^0,w,c
  4208  003BE6  A0D8               	btfss	status,0,c
  4209  003BE8  EFF8  F01D         	goto	u2871
  4210  003BEC  EFFB  F01D         	goto	u2870
  4211  003BF0                     u2871:
  4212  003BF0  0E01               	movlw	1
  4213  003BF2  EFFC  F01D         	goto	u2880
  4214  003BF6                     u2870:
  4215  003BF6  0E00               	movlw	0
  4216  003BF8                     u2880:
  4217  003BF8  6E01               	movwf	?_isupper^0,c
  4218  003BFA  6A02               	clrf	(?_isupper+1)^0,c
  4219  003BFC  0012               	return		;funcret
  4220  003BFE                     __end_of_isupper:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _strcpy *****************
  4224 ;; Defined at:
  4225 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4228 ;;		 -> dbuf(80), 
  4229 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4230 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4231 ;;		 -> dbuf(80), 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  d               2    8[COMRAM] PTR unsigned char 
  4234 ;;		 -> dbuf(80), 
  4235 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4236 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4237 ;;		 -> dbuf(80), 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  2    0[COMRAM] PTR unsigned char 
  4240 ;; Registers used:
  4241 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4247 ;;      Params:         4       0       0       0       0       0       0       0       0
  4248 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4249 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4250 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4251 ;;Total ram usage:       10 bytes
  4252 ;; Hardware stack levels used: 1
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_efgtoa
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text8
  4261  00396E                     __ptext8:
  4262                           	callstack 0
  4263  00396E                     _strcpy:
  4264                           	callstack 26
  4265  00396E  C003  F007         	movff	strcpy@src,strcpy@s
  4266  003972  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4267  003976  C001  F009         	movff	strcpy@dest,strcpy@d
  4268  00397A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4269  00397E                     l3549:
  4270  00397E  5007               	movf	strcpy@s^0,w,c
  4271  003980  6E05               	movwf	??_strcpy^0,c
  4272  003982  5008               	movf	(strcpy@s+1)^0,w,c
  4273  003984  6E06               	movwf	(??_strcpy+1)^0,c
  4274  003986  4A07               	infsnz	strcpy@s^0,f,c
  4275  003988  2A08               	incf	(strcpy@s+1)^0,f,c
  4276  00398A  C005  FFF6         	movff	??_strcpy,tblptrl
  4277  00398E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4278  003992  6AF8               	clrf	tblptru,c
  4279  003994  C009  FFD9         	movff	strcpy@d,fsr2l
  4280  003998  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4281  00399C  4A09               	infsnz	strcpy@d^0,f,c
  4282  00399E  2A0A               	incf	(strcpy@d+1)^0,f,c
  4283  0039A0  0E07               	movlw	(high __ramtop+-1)
  4284  0039A2  64F7               	cpfsgt	tblptrh,c
  4285  0039A4  D003               	bra	u3707
  4286  0039A6  0008               	tblrd		*
  4287  0039A8  50F5               	movf	tablat,w,c
  4288  0039AA  D005               	bra	u3700
  4289  0039AC                     u3707:
  4290  0039AC  CFF6 FFE9          	movff	tblptrl,fsr0l
  4291  0039B0  CFF7 FFEA          	movff	tblptrh,fsr0h
  4292  0039B4  50EF               	movf	indf0,w,c
  4293  0039B6                     u3700:
  4294  0039B6  6EDF               	movwf	indf2,c
  4295  0039B8  50DF               	movf	indf2,w,c
  4296  0039BA  A4D8               	btfss	status,2,c
  4297  0039BC  EFE2  F01C         	goto	u3711
  4298  0039C0  EFE4  F01C         	goto	u3710
  4299  0039C4                     u3711:
  4300  0039C4  EFBF  F01C         	goto	l3549
  4301  0039C8                     u3710:
  4302  0039C8  0012               	return		;funcret
  4303  0039CA                     __end_of_strcpy:
  4304                           	callstack 0
  4305                           
  4306 ;; *************** function _pad *****************
  4307 ;; Defined at:
  4308 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4311 ;;		 -> sprintf@f(11), 
  4312 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4313 ;;		 -> dbuf(80), 
  4314 ;;  p               2   20[COMRAM] int 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  w               2   25[COMRAM] int 
  4317 ;;  i               2   23[COMRAM] int 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2   16[COMRAM] int 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4327 ;;      Params:         6       0       0       0       0       0       0       0       0
  4328 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4329 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4330 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4331 ;;Total ram usage:       11 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 3
  4334 ;; This function calls:
  4335 ;;		_fputc
  4336 ;;		_fputs
  4337 ;;		_strlen
  4338 ;; This function is called by:
  4339 ;;		_efgtoa
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text9
  4344  00346A                     __ptext9:
  4345                           	callstack 0
  4346  00346A                     _pad:
  4347                           	callstack 23
  4348  00346A                     
  4349                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4350  00346A  0100               	movlb	0	; () banked
  4351  00346C  A1F9               	btfss	_flags& (0+255),0,b
  4352  00346E  EF3B  F01A         	goto	u3591
  4353  003472  EF3D  F01A         	goto	u3590
  4354  003476                     u3591:
  4355  003476  EF47  F01A         	goto	l3507
  4356  00347A                     u3590:
  4357  00347A                     
  4358                           ; BSR set to: 0
  4359                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4360  00347A  C013  F00A         	movff	pad@buf,fputs@s
  4361  00347E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4362  003482  C011  F00C         	movff	pad@fp,fputs@fp
  4363  003486  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4364  00348A  ECA2  F01D         	call	_fputs	;wreg free
  4365  00348E                     l3507:
  4366                           
  4367                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4368  00348E  BE16               	btfsc	(pad@p+1)^0,7,c
  4369  003490  EF4C  F01A         	goto	u3601
  4370  003494  EF4E  F01A         	goto	u3600
  4371  003498                     u3601:
  4372  003498  EF54  F01A         	goto	l3511
  4373  00349C                     u3600:
  4374  00349C  C015  F01A         	movff	pad@p,pad@w
  4375  0034A0  C016  F01B         	movff	pad@p+1,pad@w+1
  4376  0034A4  EF58  F01A         	goto	l894
  4377  0034A8                     l3511:
  4378  0034A8  0E00               	movlw	0
  4379  0034AA  6E1B               	movwf	(pad@w+1)^0,c
  4380  0034AC  0E00               	movlw	0
  4381  0034AE  6E1A               	movwf	pad@w^0,c
  4382  0034B0                     l894:
  4383                           
  4384                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4385  0034B0  0E00               	movlw	0
  4386  0034B2  6E19               	movwf	(pad@i+1)^0,c
  4387  0034B4  0E00               	movlw	0
  4388  0034B6  6E18               	movwf	pad@i^0,c
  4389                           
  4390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4391  0034B8  EF6A  F01A         	goto	l3517
  4392  0034BC                     l3513:
  4393                           
  4394                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4395  0034BC  0E00               	movlw	0
  4396  0034BE  6E02               	movwf	(fputc@c+1)^0,c
  4397  0034C0  0E20               	movlw	32
  4398  0034C2  6E01               	movwf	fputc@c^0,c
  4399  0034C4  C011  F003         	movff	pad@fp,fputc@fp
  4400  0034C8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4401  0034CC  ECD0  F019         	call	_fputc	;wreg free
  4402  0034D0                     
  4403                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4404  0034D0  4A18               	infsnz	pad@i^0,f,c
  4405  0034D2  2A19               	incf	(pad@i+1)^0,f,c
  4406  0034D4                     l3517:
  4407                           
  4408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4409  0034D4  501A               	movf	pad@w^0,w,c
  4410  0034D6  5C18               	subwf	pad@i^0,w,c
  4411  0034D8  5019               	movf	(pad@i+1)^0,w,c
  4412  0034DA  0A80               	xorlw	128
  4413  0034DC  6E17               	movwf	??_pad^0,c
  4414  0034DE  501B               	movf	(pad@w+1)^0,w,c
  4415  0034E0  0A80               	xorlw	128
  4416  0034E2  5817               	subwfb	??_pad^0,w,c
  4417  0034E4  A0D8               	btfss	status,0,c
  4418  0034E6  EF77  F01A         	goto	u3611
  4419  0034EA  EF79  F01A         	goto	u3610
  4420  0034EE                     u3611:
  4421  0034EE  EF5E  F01A         	goto	l3513
  4422  0034F2                     u3610:
  4423  0034F2                     
  4424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4425  0034F2  0100               	movlb	0	; () banked
  4426  0034F4  B1F9               	btfsc	_flags& (0+255),0,b
  4427  0034F6  EF7F  F01A         	goto	u3621
  4428  0034FA  EF81  F01A         	goto	u3620
  4429  0034FE                     u3621:
  4430  0034FE  EF8B  F01A         	goto	l3521
  4431  003502                     u3620:
  4432  003502                     
  4433                           ; BSR set to: 0
  4434                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4435  003502  C013  F00A         	movff	pad@buf,fputs@s
  4436  003506  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4437  00350A  C011  F00C         	movff	pad@fp,fputs@fp
  4438  00350E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4439  003512  ECA2  F01D         	call	_fputs	;wreg free
  4440  003516                     l3521:
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4443  003516  C013  F001         	movff	pad@buf,strlen@s
  4444  00351A  C014  F002         	movff	pad@buf+1,strlen@s+1
  4445  00351E  EC37  F01E         	call	_strlen	;wreg free
  4446  003522  501A               	movf	pad@w^0,w,c
  4447  003524  2401               	addwf	?_strlen^0,w,c
  4448  003526  6E11               	movwf	?_pad^0,c
  4449  003528  501B               	movf	(pad@w+1)^0,w,c
  4450  00352A  2002               	addwfc	(?_strlen+1)^0,w,c
  4451  00352C  6E12               	movwf	(?_pad+1)^0,c
  4452  00352E  0012               	return		;funcret
  4453  003530                     __end_of_pad:
  4454                           	callstack 0
  4455                           
  4456 ;; *************** function _strlen *****************
  4457 ;; Defined at:
  4458 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4461 ;;		 -> dbuf(80), 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4464 ;;		 -> dbuf(80), 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  2    0[COMRAM] unsigned int 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4474 ;;      Params:         2       0       0       0       0       0       0       0       0
  4475 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4477 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4478 ;;Total ram usage:        4 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_pad
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text10
  4488  003C6E                     __ptext10:
  4489                           	callstack 0
  4490  003C6E                     _strlen:
  4491                           	callstack 25
  4492  003C6E  C001  F003         	movff	strlen@s,strlen@a
  4493  003C72  C002  F004         	movff	strlen@s+1,strlen@a+1
  4494  003C76  EF3F  F01E         	goto	l3043
  4495  003C7A                     l3041:
  4496  003C7A  4A01               	infsnz	strlen@s^0,f,c
  4497  003C7C  2A02               	incf	(strlen@s+1)^0,f,c
  4498  003C7E                     l3043:
  4499  003C7E  C001  FFD9         	movff	strlen@s,fsr2l
  4500  003C82  C002  FFDA         	movff	strlen@s+1,fsr2h
  4501  003C86  50DF               	movf	indf2,w,c
  4502  003C88  A4D8               	btfss	status,2,c
  4503  003C8A  EF49  F01E         	goto	u2861
  4504  003C8E  EF4B  F01E         	goto	u2860
  4505  003C92                     u2861:
  4506  003C92  EF3D  F01E         	goto	l3041
  4507  003C96                     u2860:
  4508  003C96  5003               	movf	strlen@a^0,w,c
  4509  003C98  5C01               	subwf	strlen@s^0,w,c
  4510  003C9A  6E01               	movwf	?_strlen^0,c
  4511  003C9C  5004               	movf	(strlen@a+1)^0,w,c
  4512  003C9E  5802               	subwfb	(strlen@s+1)^0,w,c
  4513  003CA0  6E02               	movwf	(?_strlen+1)^0,c
  4514  003CA2  0012               	return		;funcret
  4515  003CA4                     __end_of_strlen:
  4516                           	callstack 0
  4517                           
  4518 ;; *************** function _fputs *****************
  4519 ;; Defined at:
  4520 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4523 ;;		 -> dbuf(80), 
  4524 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4525 ;;		 -> sprintf@f(11), 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  i               2   14[COMRAM] int 
  4528 ;;  c               1   13[COMRAM] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  2    9[COMRAM] int 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4538 ;;      Params:         4       0       0       0       0       0       0       0       0
  4539 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4541 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4542 ;;Total ram usage:        7 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; Hardware stack levels required when called: 2
  4545 ;; This function calls:
  4546 ;;		_fputc
  4547 ;; This function is called by:
  4548 ;;		_pad
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text11
  4553  003B44                     __ptext11:
  4554                           	callstack 0
  4555  003B44                     _fputs:
  4556                           	callstack 23
  4557  003B44  0E00               	movlw	0
  4558  003B46  6E10               	movwf	(fputs@i+1)^0,c
  4559  003B48  0E00               	movlw	0
  4560  003B4A  6E0F               	movwf	fputs@i^0,c
  4561  003B4C  EFB3  F01D         	goto	l3037
  4562  003B50                     l3033:
  4563  003B50  C00E  F001         	movff	fputs@c,fputc@c
  4564  003B54  6A02               	clrf	(fputc@c+1)^0,c
  4565  003B56  C00C  F003         	movff	fputs@fp,fputc@fp
  4566  003B5A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4567  003B5E  ECD0  F019         	call	_fputc	;wreg free
  4568  003B62  4A0F               	infsnz	fputs@i^0,f,c
  4569  003B64  2A10               	incf	(fputs@i+1)^0,f,c
  4570  003B66                     l3037:
  4571  003B66  500F               	movf	fputs@i^0,w,c
  4572  003B68  240A               	addwf	fputs@s^0,w,c
  4573  003B6A  6ED9               	movwf	fsr2l,c
  4574  003B6C  5010               	movf	(fputs@i+1)^0,w,c
  4575  003B6E  200B               	addwfc	(fputs@s+1)^0,w,c
  4576  003B70  6EDA               	movwf	fsr2h,c
  4577  003B72  50DF               	movf	indf2,w,c
  4578  003B74  6E0E               	movwf	fputs@c^0,c
  4579  003B76  500E               	movf	fputs@c^0,w,c
  4580  003B78  A4D8               	btfss	status,2,c
  4581  003B7A  EFC1  F01D         	goto	u2851
  4582  003B7E  EFC3  F01D         	goto	u2850
  4583  003B82                     u2851:
  4584  003B82  EFA8  F01D         	goto	l3033
  4585  003B86                     u2850:
  4586  003B86  0012               	return		;funcret
  4587  003B88                     __end_of_fputs:
  4588                           	callstack 0
  4589                           
  4590 ;; *************** function _fputc *****************
  4591 ;; Defined at:
  4592 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  c               2    0[COMRAM] int 
  4595 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4596 ;;		 -> sprintf@f(11), 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  2    0[COMRAM] int 
  4601 ;; Registers used:
  4602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4608 ;;      Params:         4       0       0       0       0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4610 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4611 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4612 ;;Total ram usage:        9 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 1
  4615 ;; This function calls:
  4616 ;;		_putch
  4617 ;; This function is called by:
  4618 ;;		_pad
  4619 ;;		_vfpfcnvrt
  4620 ;;		_fputs
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text12
  4625  0033A0                     __ptext12:
  4626                           	callstack 0
  4627  0033A0                     _fputc:
  4628                           	callstack 26
  4629  0033A0  5003               	movf	fputc@fp^0,w,c
  4630  0033A2  1004               	iorwf	(fputc@fp+1)^0,w,c
  4631  0033A4  B4D8               	btfsc	status,2,c
  4632  0033A6  EFD7  F019         	goto	u2421
  4633  0033AA  EFD9  F019         	goto	u2420
  4634  0033AE                     u2421:
  4635  0033AE  EFE2  F019         	goto	l2819
  4636  0033B2                     u2420:
  4637  0033B2  5003               	movf	fputc@fp^0,w,c
  4638  0033B4  1004               	iorwf	(fputc@fp+1)^0,w,c
  4639  0033B6  A4D8               	btfss	status,2,c
  4640  0033B8  EFE0  F019         	goto	u2431
  4641  0033BC  EFE2  F019         	goto	u2430
  4642  0033C0                     u2431:
  4643  0033C0  EFE7  F019         	goto	l2821
  4644  0033C4                     u2430:
  4645  0033C4                     l2819:
  4646  0033C4  5001               	movf	fputc@c^0,w,c
  4647  0033C6  EC90  F01E         	call	_putch
  4648  0033CA  EF34  F01A         	goto	l1106
  4649  0033CE                     l2821:
  4650  0033CE  EE20 F009          	lfsr	2,9
  4651  0033D2  5003               	movf	fputc@fp^0,w,c
  4652  0033D4  26D9               	addwf	fsr2l,f,c
  4653  0033D6  5004               	movf	(fputc@fp+1)^0,w,c
  4654  0033D8  22DA               	addwfc	fsr2h,f,c
  4655  0033DA  50DE               	movf	postinc2,w,c
  4656  0033DC  10DE               	iorwf	postinc2,w,c
  4657  0033DE  B4D8               	btfsc	status,2,c
  4658  0033E0  EFF4  F019         	goto	u2441
  4659  0033E4  EFF6  F019         	goto	u2440
  4660  0033E8                     u2441:
  4661  0033E8  EF11  F01A         	goto	l2825
  4662  0033EC                     u2440:
  4663  0033EC  EE20 F009          	lfsr	2,9
  4664  0033F0  5003               	movf	fputc@fp^0,w,c
  4665  0033F2  26D9               	addwf	fsr2l,f,c
  4666  0033F4  5004               	movf	(fputc@fp+1)^0,w,c
  4667  0033F6  22DA               	addwfc	fsr2h,f,c
  4668  0033F8  EE10 F003          	lfsr	1,3
  4669  0033FC  5003               	movf	fputc@fp^0,w,c
  4670  0033FE  26E1               	addwf	fsr1l,f,c
  4671  003400  5004               	movf	(fputc@fp+1)^0,w,c
  4672  003402  22E2               	addwfc	fsr1h,f,c
  4673  003404  50DE               	movf	postinc2,w,c
  4674  003406  5CE6               	subwf	postinc1,w,c
  4675  003408  50E6               	movf	postinc1,w,c
  4676  00340A  0A80               	xorlw	128
  4677  00340C  6E09               	movwf	(??_fputc+4)^0,c
  4678  00340E  50DE               	movf	postinc2,w,c
  4679  003410  0A80               	xorlw	128
  4680  003412  5809               	subwfb	(??_fputc+4)^0,w,c
  4681  003414  B0D8               	btfsc	status,0,c
  4682  003416  EF0F  F01A         	goto	u2451
  4683  00341A  EF11  F01A         	goto	u2450
  4684  00341E                     u2451:
  4685  00341E  EF34  F01A         	goto	l1106
  4686  003422                     u2450:
  4687  003422                     l2825:
  4688  003422  EE20 F003          	lfsr	2,3
  4689  003426  5003               	movf	fputc@fp^0,w,c
  4690  003428  26D9               	addwf	fsr2l,f,c
  4691  00342A  5004               	movf	(fputc@fp+1)^0,w,c
  4692  00342C  22DA               	addwfc	fsr2h,f,c
  4693  00342E  CFDE F005          	movff	postinc2,??_fputc
  4694  003432  CFDD F006          	movff	postdec2,??_fputc+1
  4695  003436  C003  FFD9         	movff	fputc@fp,fsr2l
  4696  00343A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4697  00343E  CFDE F007          	movff	postinc2,??_fputc+2
  4698  003442  CFDD F008          	movff	postdec2,??_fputc+3
  4699  003446  5005               	movf	??_fputc^0,w,c
  4700  003448  2407               	addwf	(??_fputc+2)^0,w,c
  4701  00344A  6ED9               	movwf	fsr2l,c
  4702  00344C  5006               	movf	(??_fputc+1)^0,w,c
  4703  00344E  2008               	addwfc	(??_fputc+3)^0,w,c
  4704  003450  6EDA               	movwf	fsr2h,c
  4705  003452  C001  FFDF         	movff	fputc@c,indf2
  4706  003456  EE20 F003          	lfsr	2,3
  4707  00345A  5003               	movf	fputc@fp^0,w,c
  4708  00345C  26D9               	addwf	fsr2l,f,c
  4709  00345E  5004               	movf	(fputc@fp+1)^0,w,c
  4710  003460  22DA               	addwfc	fsr2h,f,c
  4711  003462  2ADE               	incf	postinc2,f,c
  4712  003464  0E00               	movlw	0
  4713  003466  22DD               	addwfc	postdec2,f,c
  4714  003468                     l1106:
  4715  003468  0012               	return		;funcret
  4716  00346A                     __end_of_fputc:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _putch *****************
  4720 ;; Defined at:
  4721 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  c               1    wreg     unsigned char 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  c               1    0[COMRAM] unsigned char 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      void 
  4728 ;; Registers used:
  4729 ;;		wreg
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4735 ;;      Params:         0       0       0       0       0       0       0       0       0
  4736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4738 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4739 ;;Total ram usage:        0 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_fputc
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           	psect	text13
  4749  003D20                     __ptext13:
  4750                           	callstack 0
  4751  003D20                     _putch:
  4752                           	callstack 26
  4753  003D20  0012               	return		;funcret
  4754  003D22                     __end_of_putch:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _floorf *****************
  4758 ;; Defined at:
  4759 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  x               4   68[COMRAM] float 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  u               4   84[COMRAM] struct .
  4764 ;;  m               4   78[COMRAM] unsigned long 
  4765 ;;  e               2   82[COMRAM] int 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  4   68[COMRAM] float 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4775 ;;      Params:         4       0       0       0       0       0       0       0       0
  4776 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4777 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4778 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4779 ;;Total ram usage:       20 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_efgtoa
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text14
  4789  0027E4                     __ptext14:
  4790                           	callstack 0
  4791  0027E4                     _floorf:
  4792                           	callstack 26
  4793  0027E4  C0D7  F055         	movff	floorf@F526,floorf@u
  4794  0027E8  C0D8  F056         	movff	floorf@F526+1,floorf@u+1
  4795  0027EC  C0D9  F057         	movff	floorf@F526+2,floorf@u+2
  4796  0027F0  C0DA  F058         	movff	floorf@F526+3,floorf@u+3
  4797  0027F4  C045  F055         	movff	floorf@x,floorf@u
  4798  0027F8  C046  F056         	movff	floorf@x+1,floorf@u+1
  4799  0027FC  C047  F057         	movff	floorf@x+2,floorf@u+2
  4800  002800  C048  F058         	movff	floorf@x+3,floorf@u+3
  4801  002804  0E81               	movlw	129
  4802  002806  6E49               	movwf	??_floorf^0,c
  4803  002808  0EFF               	movlw	255
  4804  00280A  6E4A               	movwf	(??_floorf+1)^0,c
  4805  00280C  C055  F04B         	movff	floorf@u,??_floorf+2
  4806  002810  C056  F04C         	movff	floorf@u+1,??_floorf+3
  4807  002814  C057  F04D         	movff	floorf@u+2,??_floorf+4
  4808  002818  C058  F04E         	movff	floorf@u+3,??_floorf+5
  4809  00281C  0E18               	movlw	24
  4810  00281E  EF16  F014         	goto	u3730
  4811  002822                     u3735:
  4812  002822  90D8               	bcf	status,0,c
  4813  002824  324E               	rrcf	(??_floorf+5)^0,f,c
  4814  002826  324D               	rrcf	(??_floorf+4)^0,f,c
  4815  002828  324C               	rrcf	(??_floorf+3)^0,f,c
  4816  00282A  324B               	rrcf	(??_floorf+2)^0,f,c
  4817  00282C                     u3730:
  4818  00282C  2EE8               	decfsz	wreg,f,c
  4819  00282E  EF11  F014         	goto	u3735
  4820  002832  504B               	movf	(??_floorf+2)^0,w,c
  4821  002834  2449               	addwf	??_floorf^0,w,c
  4822  002836  6E53               	movwf	floorf@e^0,c
  4823  002838  0E00               	movlw	0
  4824  00283A  204A               	addwfc	(??_floorf+1)^0,w,c
  4825  00283C  6E54               	movwf	(floorf@e+1)^0,c
  4826  00283E  BE54               	btfsc	(floorf@e+1)^0,7,c
  4827  002840  EF2B  F014         	goto	u3741
  4828  002844  5054               	movf	(floorf@e+1)^0,w,c
  4829  002846  E109               	bnz	u3740
  4830  002848  0E17               	movlw	23
  4831  00284A  5C53               	subwf	floorf@e^0,w,c
  4832  00284C  A0D8               	btfss	status,0,c
  4833  00284E  EF2B  F014         	goto	u3741
  4834  002852  EF2D  F014         	goto	u3740
  4835  002856                     u3741:
  4836  002856  EF37  F014         	goto	l3567
  4837  00285A                     u3740:
  4838  00285A                     l3565:
  4839  00285A  C045  F045         	movff	floorf@x,?_floorf
  4840  00285E  C046  F046         	movff	floorf@x+1,?_floorf+1
  4841  002862  C047  F047         	movff	floorf@x+2,?_floorf+2
  4842  002866  C048  F048         	movff	floorf@x+3,?_floorf+3
  4843  00286A  EFFA  F014         	goto	l1067
  4844  00286E                     l3567:
  4845  00286E  BE54               	btfsc	(floorf@e+1)^0,7,c
  4846  002870  EF3C  F014         	goto	u3751
  4847  002874  EF3E  F014         	goto	u3750
  4848  002878                     u3751:
  4849  002878  EFAE  F014         	goto	l3577
  4850  00287C                     u3750:
  4851  00287C  C053  F049         	movff	floorf@e,??_floorf
  4852  002880  0EFF               	movlw	255
  4853  002882  6E4A               	movwf	(??_floorf+1)^0,c
  4854  002884  0EFF               	movlw	255
  4855  002886  6E4B               	movwf	(??_floorf+2)^0,c
  4856  002888  0E7F               	movlw	127
  4857  00288A  6E4C               	movwf	(??_floorf+3)^0,c
  4858  00288C  0E00               	movlw	0
  4859  00288E  6E4D               	movwf	(??_floorf+4)^0,c
  4860  002890                     u3765:
  4861  002890  6649               	tstfsz	??_floorf^0,c
  4862  002892  EF4D  F014         	goto	u3766
  4863  002896  EF55  F014         	goto	u3767
  4864  00289A                     u3766:
  4865  00289A  344D               	rlcf	(??_floorf+4)^0,w,c
  4866  00289C  324D               	rrcf	(??_floorf+4)^0,f,c
  4867  00289E  324C               	rrcf	(??_floorf+3)^0,f,c
  4868  0028A0  324B               	rrcf	(??_floorf+2)^0,f,c
  4869  0028A2  324A               	rrcf	(??_floorf+1)^0,f,c
  4870  0028A4  2E49               	decfsz	??_floorf^0,f,c
  4871  0028A6  EF48  F014         	goto	u3765
  4872  0028AA                     u3767:
  4873  0028AA  C04A  F04F         	movff	??_floorf+1,floorf@m
  4874  0028AE  C04B  F050         	movff	??_floorf+2,floorf@m+1
  4875  0028B2  C04C  F051         	movff	??_floorf+3,floorf@m+2
  4876  0028B6  C04D  F052         	movff	??_floorf+4,floorf@m+3
  4877  0028BA  504F               	movf	floorf@m^0,w,c
  4878  0028BC  1455               	andwf	floorf@u^0,w,c
  4879  0028BE  6E49               	movwf	??_floorf^0,c
  4880  0028C0  5050               	movf	(floorf@m+1)^0,w,c
  4881  0028C2  1456               	andwf	(floorf@u+1)^0,w,c
  4882  0028C4  6E4A               	movwf	(??_floorf+1)^0,c
  4883  0028C6  5051               	movf	(floorf@m+2)^0,w,c
  4884  0028C8  1457               	andwf	(floorf@u+2)^0,w,c
  4885  0028CA  6E4B               	movwf	(??_floorf+2)^0,c
  4886  0028CC  5052               	movf	(floorf@m+3)^0,w,c
  4887  0028CE  1458               	andwf	(floorf@u+3)^0,w,c
  4888  0028D0  6E4C               	movwf	(??_floorf+3)^0,c
  4889  0028D2  5049               	movf	??_floorf^0,w,c
  4890  0028D4  104A               	iorwf	(??_floorf+1)^0,w,c
  4891  0028D6  104B               	iorwf	(??_floorf+2)^0,w,c
  4892  0028D8  104C               	iorwf	(??_floorf+3)^0,w,c
  4893  0028DA  A4D8               	btfss	status,2,c
  4894  0028DC  EF72  F014         	goto	u3771
  4895  0028E0  EF74  F014         	goto	u3770
  4896  0028E4                     u3771:
  4897  0028E4  EF76  F014         	goto	l3573
  4898  0028E8                     u3770:
  4899  0028E8  EF2D  F014         	goto	l3565
  4900  0028EC                     l3573:
  4901  0028EC  C055  F049         	movff	floorf@u,??_floorf
  4902  0028F0  C056  F04A         	movff	floorf@u+1,??_floorf+1
  4903  0028F4  C057  F04B         	movff	floorf@u+2,??_floorf+2
  4904  0028F8  C058  F04C         	movff	floorf@u+3,??_floorf+3
  4905  0028FC  0E20               	movlw	32
  4906  0028FE  EF86  F014         	goto	u3780
  4907  002902                     u3785:
  4908  002902  90D8               	bcf	status,0,c
  4909  002904  324C               	rrcf	(??_floorf+3)^0,f,c
  4910  002906  324B               	rrcf	(??_floorf+2)^0,f,c
  4911  002908  324A               	rrcf	(??_floorf+1)^0,f,c
  4912  00290A  3249               	rrcf	??_floorf^0,f,c
  4913  00290C                     u3780:
  4914  00290C  2EE8               	decfsz	wreg,f,c
  4915  00290E  EF81  F014         	goto	u3785
  4916  002912  5049               	movf	??_floorf^0,w,c
  4917  002914  104A               	iorwf	(??_floorf+1)^0,w,c
  4918  002916  104B               	iorwf	(??_floorf+2)^0,w,c
  4919  002918  104C               	iorwf	(??_floorf+3)^0,w,c
  4920  00291A  B4D8               	btfsc	status,2,c
  4921  00291C  EF92  F014         	goto	u3791
  4922  002920  EF94  F014         	goto	u3790
  4923  002924                     u3791:
  4924  002924  EF9C  F014         	goto	l1070
  4925  002928                     u3790:
  4926  002928  504F               	movf	floorf@m^0,w,c
  4927  00292A  2655               	addwf	floorf@u^0,f,c
  4928  00292C  5050               	movf	(floorf@m+1)^0,w,c
  4929  00292E  2256               	addwfc	(floorf@u+1)^0,f,c
  4930  002930  5051               	movf	(floorf@m+2)^0,w,c
  4931  002932  2257               	addwfc	(floorf@u+2)^0,f,c
  4932  002934  5052               	movf	(floorf@m+3)^0,w,c
  4933  002936  2258               	addwfc	(floorf@u+3)^0,f,c
  4934  002938                     l1070:
  4935  002938  1C4F               	comf	floorf@m^0,w,c
  4936  00293A  6E49               	movwf	??_floorf^0,c
  4937  00293C  1C50               	comf	(floorf@m+1)^0,w,c
  4938  00293E  6E4A               	movwf	(??_floorf+1)^0,c
  4939  002940  1C51               	comf	(floorf@m+2)^0,w,c
  4940  002942  6E4B               	movwf	(??_floorf+2)^0,c
  4941  002944  1C52               	comf	(floorf@m+3)^0,w,c
  4942  002946  6E4C               	movwf	(??_floorf+3)^0,c
  4943  002948  5049               	movf	??_floorf^0,w,c
  4944  00294A  1655               	andwf	floorf@u^0,f,c
  4945  00294C  504A               	movf	(??_floorf+1)^0,w,c
  4946  00294E  1656               	andwf	(floorf@u+1)^0,f,c
  4947  002950  504B               	movf	(??_floorf+2)^0,w,c
  4948  002952  1657               	andwf	(floorf@u+2)^0,f,c
  4949  002954  504C               	movf	(??_floorf+3)^0,w,c
  4950  002956  1658               	andwf	(floorf@u+3)^0,f,c
  4951  002958  EFF2  F014         	goto	l3585
  4952  00295C                     l3577:
  4953  00295C  C055  F049         	movff	floorf@u,??_floorf
  4954  002960  C056  F04A         	movff	floorf@u+1,??_floorf+1
  4955  002964  C057  F04B         	movff	floorf@u+2,??_floorf+2
  4956  002968  C058  F04C         	movff	floorf@u+3,??_floorf+3
  4957  00296C  0E20               	movlw	32
  4958  00296E  EFBE  F014         	goto	u3800
  4959  002972                     u3805:
  4960  002972  90D8               	bcf	status,0,c
  4961  002974  324C               	rrcf	(??_floorf+3)^0,f,c
  4962  002976  324B               	rrcf	(??_floorf+2)^0,f,c
  4963  002978  324A               	rrcf	(??_floorf+1)^0,f,c
  4964  00297A  3249               	rrcf	??_floorf^0,f,c
  4965  00297C                     u3800:
  4966  00297C  2EE8               	decfsz	wreg,f,c
  4967  00297E  EFB9  F014         	goto	u3805
  4968  002982  5049               	movf	??_floorf^0,w,c
  4969  002984  104A               	iorwf	(??_floorf+1)^0,w,c
  4970  002986  104B               	iorwf	(??_floorf+2)^0,w,c
  4971  002988  104C               	iorwf	(??_floorf+3)^0,w,c
  4972  00298A  A4D8               	btfss	status,2,c
  4973  00298C  EFCA  F014         	goto	u3811
  4974  002990  EFCC  F014         	goto	u3810
  4975  002994                     u3811:
  4976  002994  EFD6  F014         	goto	l3581
  4977  002998                     u3810:
  4978  002998  0E00               	movlw	0
  4979  00299A  6E55               	movwf	floorf@u^0,c
  4980  00299C  0E00               	movlw	0
  4981  00299E  6E56               	movwf	(floorf@u+1)^0,c
  4982  0029A0  0E00               	movlw	0
  4983  0029A2  6E57               	movwf	(floorf@u+2)^0,c
  4984  0029A4  0E00               	movlw	0
  4985  0029A6  6E58               	movwf	(floorf@u+3)^0,c
  4986  0029A8  EFF2  F014         	goto	l3585
  4987  0029AC                     l3581:
  4988  0029AC  90D8               	bcf	status,0,c
  4989  0029AE  3455               	rlcf	floorf@u^0,w,c
  4990  0029B0  6E49               	movwf	??_floorf^0,c
  4991  0029B2  3456               	rlcf	(floorf@u+1)^0,w,c
  4992  0029B4  6E4A               	movwf	(??_floorf+1)^0,c
  4993  0029B6  3457               	rlcf	(floorf@u+2)^0,w,c
  4994  0029B8  6E4B               	movwf	(??_floorf+2)^0,c
  4995  0029BA  3458               	rlcf	(floorf@u+3)^0,w,c
  4996  0029BC  6E4C               	movwf	(??_floorf+3)^0,c
  4997  0029BE  5049               	movf	??_floorf^0,w,c
  4998  0029C0  104A               	iorwf	(??_floorf+1)^0,w,c
  4999  0029C2  104B               	iorwf	(??_floorf+2)^0,w,c
  5000  0029C4  104C               	iorwf	(??_floorf+3)^0,w,c
  5001  0029C6  B4D8               	btfsc	status,2,c
  5002  0029C8  EFE8  F014         	goto	u3821
  5003  0029CC  EFEA  F014         	goto	u3820
  5004  0029D0                     u3821:
  5005  0029D0  EFF2  F014         	goto	l3585
  5006  0029D4                     u3820:
  5007  0029D4  0E00               	movlw	0
  5008  0029D6  6E55               	movwf	floorf@u^0,c
  5009  0029D8  0E00               	movlw	0
  5010  0029DA  6E56               	movwf	(floorf@u+1)^0,c
  5011  0029DC  0E80               	movlw	128
  5012  0029DE  6E57               	movwf	(floorf@u+2)^0,c
  5013  0029E0  0EBF               	movlw	191
  5014  0029E2  6E58               	movwf	(floorf@u+3)^0,c
  5015  0029E4                     l3585:
  5016  0029E4  C055  F045         	movff	floorf@u,?_floorf
  5017  0029E8  C056  F046         	movff	floorf@u+1,?_floorf+1
  5018  0029EC  C057  F047         	movff	floorf@u+2,?_floorf+2
  5019  0029F0  C058  F048         	movff	floorf@u+3,?_floorf+3
  5020  0029F4                     l1067:
  5021  0029F4  0012               	return		;funcret
  5022  0029F6                     __end_of_floorf:
  5023                           	callstack 0
  5024                           
  5025 ;; *************** function ___fpclassifyf *****************
  5026 ;; Defined at:
  5027 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  x               4    0[COMRAM] float 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  u               4   10[COMRAM] struct .
  5032 ;;  e               2    8[COMRAM] int 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  2    0[COMRAM] int 
  5035 ;; Registers used:
  5036 ;;		wreg, status,2, status,0
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5042 ;;      Params:         4       0       0       0       0       0       0       0       0
  5043 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5044 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5045 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5046 ;;Total ram usage:       14 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_efgtoa
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text15
  5056  0030E4                     __ptext15:
  5057                           	callstack 0
  5058  0030E4                     ___fpclassifyf:
  5059                           	callstack 26
  5060  0030E4  C0DB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5061  0030E8  C0DC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5062  0030EC  C0DD  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5063  0030F0  C0DE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5064  0030F4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5065  0030F8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5066  0030FC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5067  003100  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5068  003104  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5069  003108  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5070  00310C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5071  003110  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5072  003114  0E18               	movlw	24
  5073  003116  EF92  F018         	goto	u3630
  5074  00311A                     u3635:
  5075  00311A  90D8               	bcf	status,0,c
  5076  00311C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5077  00311E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5078  003120  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5079  003122  3205               	rrcf	??___fpclassifyf^0,f,c
  5080  003124                     u3630:
  5081  003124  2EE8               	decfsz	wreg,f,c
  5082  003126  EF8D  F018         	goto	u3635
  5083  00312A  5005               	movf	??___fpclassifyf^0,w,c
  5084  00312C  6E09               	movwf	___fpclassifyf@e^0,c
  5085  00312E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5086  003130  5009               	movf	___fpclassifyf@e^0,w,c
  5087  003132  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5088  003134  A4D8               	btfss	status,2,c
  5089  003136  EF9F  F018         	goto	u3641
  5090  00313A  EFA1  F018         	goto	u3640
  5091  00313E                     u3641:
  5092  00313E  EFC1  F018         	goto	l3537
  5093  003142                     u3640:
  5094  003142  90D8               	bcf	status,0,c
  5095  003144  340B               	rlcf	___fpclassifyf@u^0,w,c
  5096  003146  6E05               	movwf	??___fpclassifyf^0,c
  5097  003148  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5098  00314A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5099  00314C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5100  00314E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5101  003150  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5102  003152  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5103  003154  5005               	movf	??___fpclassifyf^0,w,c
  5104  003156  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5105  003158  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5106  00315A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5107  00315C  A4D8               	btfss	status,2,c
  5108  00315E  EFB3  F018         	goto	u3651
  5109  003162  EFB5  F018         	goto	u3650
  5110  003166                     u3651:
  5111  003166  EFBB  F018         	goto	l3533
  5112  00316A                     u3650:
  5113  00316A  0E00               	movlw	0
  5114  00316C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5115  00316E  0E02               	movlw	2
  5116  003170  6E01               	movwf	?___fpclassifyf^0,c
  5117  003172  EFF0  F018         	goto	l1035
  5118  003176                     l3533:
  5119  003176  0E00               	movlw	0
  5120  003178  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5121  00317A  0E03               	movlw	3
  5122  00317C  6E01               	movwf	?___fpclassifyf^0,c
  5123  00317E  EFF0  F018         	goto	l1035
  5124  003182                     l3537:
  5125  003182  2809               	incf	___fpclassifyf@e^0,w,c
  5126  003184  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5127  003186  A4D8               	btfss	status,2,c
  5128  003188  EFC8  F018         	goto	u3661
  5129  00318C  EFCA  F018         	goto	u3660
  5130  003190                     u3661:
  5131  003190  EFEC  F018         	goto	l3543
  5132  003194                     u3660:
  5133  003194  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5134  003198  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5135  00319C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5136  0031A0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5137  0031A4  0E09               	movlw	9
  5138  0031A6                     u3675:
  5139  0031A6  90D8               	bcf	status,0,c
  5140  0031A8  3605               	rlcf	??___fpclassifyf^0,f,c
  5141  0031AA  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5142  0031AC  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5143  0031AE  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5144  0031B0  2EE8               	decfsz	wreg,f,c
  5145  0031B2  EFD3  F018         	goto	u3675
  5146  0031B6  5005               	movf	??___fpclassifyf^0,w,c
  5147  0031B8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5148  0031BA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5149  0031BC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5150  0031BE  B4D8               	btfsc	status,2,c
  5151  0031C0  EFE4  F018         	goto	u3681
  5152  0031C4  EFE7  F018         	goto	u3680
  5153  0031C8                     u3681:
  5154  0031C8  0E01               	movlw	1
  5155  0031CA  EFE8  F018         	goto	u3690
  5156  0031CE                     u3680:
  5157  0031CE  0E00               	movlw	0
  5158  0031D0                     u3690:
  5159  0031D0  6E01               	movwf	?___fpclassifyf^0,c
  5160  0031D2  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5161  0031D4  EFF0  F018         	goto	l1035
  5162  0031D8                     l3543:
  5163  0031D8  0E00               	movlw	0
  5164  0031DA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5165  0031DC  0E04               	movlw	4
  5166  0031DE  6E01               	movwf	?___fpclassifyf^0,c
  5167  0031E0                     l1035:
  5168  0031E0  0012               	return		;funcret
  5169  0031E2                     __end_of___fpclassifyf:
  5170                           	callstack 0
  5171                           
  5172 ;; *************** function ___flsub *****************
  5173 ;; Defined at:
  5174 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  b               4   84[COMRAM] int 
  5177 ;;  a               4   88[COMRAM] int 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  4   84[COMRAM] int 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5189 ;;      Params:         8       0       0       0       0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5192 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5193 ;;Total ram usage:        8 bytes
  5194 ;; Hardware stack levels used: 1
  5195 ;; Hardware stack levels required when called: 1
  5196 ;; This function calls:
  5197 ;;		___fladd
  5198 ;; This function is called by:
  5199 ;;		_main
  5200 ;;		_efgtoa
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text16
  5205  003AFE                     __ptext16:
  5206                           	callstack 0
  5207  003AFE                     ___flsub:
  5208                           	callstack 25
  5209  003AFE  0E00               	movlw	0
  5210  003B00  1A59               	xorwf	___flsub@a^0,f,c
  5211  003B02  0E00               	movlw	0
  5212  003B04  1A5A               	xorwf	(___flsub@a+1)^0,f,c
  5213  003B06  0E00               	movlw	0
  5214  003B08  1A5B               	xorwf	(___flsub@a+2)^0,f,c
  5215  003B0A  0E80               	movlw	128
  5216  003B0C  1A5C               	xorwf	(___flsub@a+3)^0,f,c
  5217  003B0E  C055  F045         	movff	___flsub@b,___fladd@b
  5218  003B12  C056  F046         	movff	___flsub@b+1,___fladd@b+1
  5219  003B16  C057  F047         	movff	___flsub@b+2,___fladd@b+2
  5220  003B1A  C058  F048         	movff	___flsub@b+3,___fladd@b+3
  5221  003B1E  C059  F049         	movff	___flsub@a,___fladd@a
  5222  003B22  C05A  F04A         	movff	___flsub@a+1,___fladd@a+1
  5223  003B26  C05B  F04B         	movff	___flsub@a+2,___fladd@a+2
  5224  003B2A  C05C  F04C         	movff	___flsub@a+3,___fladd@a+3
  5225  003B2E  EC93  F00C         	call	___fladd	;wreg free
  5226  003B32  C045  F055         	movff	?___fladd,?___flsub
  5227  003B36  C046  F056         	movff	?___fladd+1,?___flsub+1
  5228  003B3A  C047  F057         	movff	?___fladd+2,?___flsub+2
  5229  003B3E  C048  F058         	movff	?___fladd+3,?___flsub+3
  5230  003B42  0012               	return		;funcret
  5231  003B44                     __end_of___flsub:
  5232                           	callstack 0
  5233                           
  5234 ;; *************** function ___flneg *****************
  5235 ;; Defined at:
  5236 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  f1              4    0[COMRAM] int 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;		None
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  4    0[COMRAM] int 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5250 ;;      Params:         4       0       0       0       0       0       0       0       0
  5251 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5253 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5254 ;;Total ram usage:        4 bytes
  5255 ;; Hardware stack levels used: 1
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_efgtoa
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text17
  5264  003BFE                     __ptext17:
  5265                           	callstack 0
  5266  003BFE                     ___flneg:
  5267                           	callstack 26
  5268  003BFE  5001               	movf	___flneg@f1^0,w,c
  5269  003C00  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5270  003C02  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5271  003C04  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5272  003C06  B4D8               	btfsc	status,2,c
  5273  003C08  EF08  F01E         	goto	u3511
  5274  003C0C  EF0A  F01E         	goto	u3510
  5275  003C10                     u3511:
  5276  003C10  EF12  F01E         	goto	l3455
  5277  003C14                     u3510:
  5278  003C14  0E00               	movlw	0
  5279  003C16  1A01               	xorwf	___flneg@f1^0,f,c
  5280  003C18  0E00               	movlw	0
  5281  003C1A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5282  003C1C  0E00               	movlw	0
  5283  003C1E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5284  003C20  0E80               	movlw	128
  5285  003C22  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5286  003C24                     l3455:
  5287  003C24  C001  F001         	movff	___flneg@f1,?___flneg
  5288  003C28  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5289  003C2C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5290  003C30  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5291  003C34  0012               	return		;funcret
  5292  003C36                     __end_of___flneg:
  5293                           	callstack 0
  5294                           
  5295 ;; *************** function ___flge *****************
  5296 ;; Defined at:
  5297 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  ff1             4   43[COMRAM] int 
  5300 ;;  ff2             4   47[COMRAM] int 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;		None               void
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5312 ;;      Params:         8       0       0       0       0       0       0       0       0
  5313 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5314 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5315 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5316 ;;Total ram usage:       12 bytes
  5317 ;; Hardware stack levels used: 1
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_main
  5322 ;;		_efgtoa
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text18
  5327  002FE0                     __ptext18:
  5328                           	callstack 0
  5329  002FE0                     ___flge:
  5330                           	callstack 26
  5331  002FE0  0E00               	movlw	0
  5332  002FE2  142C               	andwf	___flge@ff1^0,w,c
  5333  002FE4  6E34               	movwf	??___flge^0,c
  5334  002FE6  0E00               	movlw	0
  5335  002FE8  142D               	andwf	(___flge@ff1+1)^0,w,c
  5336  002FEA  6E35               	movwf	(??___flge+1)^0,c
  5337  002FEC  0E80               	movlw	128
  5338  002FEE  142E               	andwf	(___flge@ff1+2)^0,w,c
  5339  002FF0  6E36               	movwf	(??___flge+2)^0,c
  5340  002FF2  0E7F               	movlw	127
  5341  002FF4  142F               	andwf	(___flge@ff1+3)^0,w,c
  5342  002FF6  6E37               	movwf	(??___flge+3)^0,c
  5343  002FF8  5034               	movf	??___flge^0,w,c
  5344  002FFA  1035               	iorwf	(??___flge+1)^0,w,c
  5345  002FFC  1036               	iorwf	(??___flge+2)^0,w,c
  5346  002FFE  1037               	iorwf	(??___flge+3)^0,w,c
  5347  003000  A4D8               	btfss	status,2,c
  5348  003002  EF05  F018         	goto	u3461
  5349  003006  EF07  F018         	goto	u3460
  5350  00300A                     u3461:
  5351  00300A  EF0F  F018         	goto	l3433
  5352  00300E                     u3460:
  5353  00300E  0E00               	movlw	0
  5354  003010  6E2C               	movwf	___flge@ff1^0,c
  5355  003012  0E00               	movlw	0
  5356  003014  6E2D               	movwf	(___flge@ff1+1)^0,c
  5357  003016  0E00               	movlw	0
  5358  003018  6E2E               	movwf	(___flge@ff1+2)^0,c
  5359  00301A  0E00               	movlw	0
  5360  00301C  6E2F               	movwf	(___flge@ff1+3)^0,c
  5361  00301E                     l3433:
  5362  00301E  0E00               	movlw	0
  5363  003020  1430               	andwf	___flge@ff2^0,w,c
  5364  003022  6E34               	movwf	??___flge^0,c
  5365  003024  0E00               	movlw	0
  5366  003026  1431               	andwf	(___flge@ff2+1)^0,w,c
  5367  003028  6E35               	movwf	(??___flge+1)^0,c
  5368  00302A  0E80               	movlw	128
  5369  00302C  1432               	andwf	(___flge@ff2+2)^0,w,c
  5370  00302E  6E36               	movwf	(??___flge+2)^0,c
  5371  003030  0E7F               	movlw	127
  5372  003032  1433               	andwf	(___flge@ff2+3)^0,w,c
  5373  003034  6E37               	movwf	(??___flge+3)^0,c
  5374  003036  5034               	movf	??___flge^0,w,c
  5375  003038  1035               	iorwf	(??___flge+1)^0,w,c
  5376  00303A  1036               	iorwf	(??___flge+2)^0,w,c
  5377  00303C  1037               	iorwf	(??___flge+3)^0,w,c
  5378  00303E  A4D8               	btfss	status,2,c
  5379  003040  EF24  F018         	goto	u3471
  5380  003044  EF26  F018         	goto	u3470
  5381  003048                     u3471:
  5382  003048  EF2E  F018         	goto	l3437
  5383  00304C                     u3470:
  5384  00304C  0E00               	movlw	0
  5385  00304E  6E30               	movwf	___flge@ff2^0,c
  5386  003050  0E00               	movlw	0
  5387  003052  6E31               	movwf	(___flge@ff2+1)^0,c
  5388  003054  0E00               	movlw	0
  5389  003056  6E32               	movwf	(___flge@ff2+2)^0,c
  5390  003058  0E00               	movlw	0
  5391  00305A  6E33               	movwf	(___flge@ff2+3)^0,c
  5392  00305C                     l3437:
  5393  00305C  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  5394  00305E  EF33  F018         	goto	u3481
  5395  003062  EF35  F018         	goto	u3480
  5396  003066                     u3481:
  5397  003066  EF3E  F018         	goto	l3441
  5398  00306A                     u3480:
  5399  00306A  6C2C               	negf	___flge@ff1^0,c
  5400  00306C  1E2D               	comf	(___flge@ff1+1)^0,f,c
  5401  00306E  B0D8               	btfsc	status,0,c
  5402  003070  2A2D               	incf	(___flge@ff1+1)^0,f,c
  5403  003072  1E2E               	comf	(___flge@ff1+2)^0,f,c
  5404  003074  B0D8               	btfsc	status,0,c
  5405  003076  2A2E               	incf	(___flge@ff1+2)^0,f,c
  5406  003078  0E80               	movlw	128
  5407  00307A  562F               	subfwb	(___flge@ff1+3)^0,f,c
  5408  00307C                     l3441:
  5409  00307C  AE33               	btfss	(___flge@ff2+3)^0,7,c
  5410  00307E  EF43  F018         	goto	u3491
  5411  003082  EF45  F018         	goto	u3490
  5412  003086                     u3491:
  5413  003086  EF4E  F018         	goto	l440
  5414  00308A                     u3490:
  5415  00308A  6C30               	negf	___flge@ff2^0,c
  5416  00308C  1E31               	comf	(___flge@ff2+1)^0,f,c
  5417  00308E  B0D8               	btfsc	status,0,c
  5418  003090  2A31               	incf	(___flge@ff2+1)^0,f,c
  5419  003092  1E32               	comf	(___flge@ff2+2)^0,f,c
  5420  003094  B0D8               	btfsc	status,0,c
  5421  003096  2A32               	incf	(___flge@ff2+2)^0,f,c
  5422  003098  0E80               	movlw	128
  5423  00309A  5633               	subfwb	(___flge@ff2+3)^0,f,c
  5424  00309C                     l440:
  5425  00309C  0E00               	movlw	0
  5426  00309E  1A2C               	xorwf	___flge@ff1^0,f,c
  5427  0030A0  0E00               	movlw	0
  5428  0030A2  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  5429  0030A4  0E00               	movlw	0
  5430  0030A6  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  5431  0030A8  0E80               	movlw	128
  5432  0030AA  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  5433  0030AC  0E00               	movlw	0
  5434  0030AE  1A30               	xorwf	___flge@ff2^0,f,c
  5435  0030B0  0E00               	movlw	0
  5436  0030B2  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  5437  0030B4  0E00               	movlw	0
  5438  0030B6  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  5439  0030B8  0E80               	movlw	128
  5440  0030BA  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  5441  0030BC  5030               	movf	___flge@ff2^0,w,c
  5442  0030BE  5C2C               	subwf	___flge@ff1^0,w,c
  5443  0030C0  5031               	movf	(___flge@ff2+1)^0,w,c
  5444  0030C2  582D               	subwfb	(___flge@ff1+1)^0,w,c
  5445  0030C4  5032               	movf	(___flge@ff2+2)^0,w,c
  5446  0030C6  582E               	subwfb	(___flge@ff1+2)^0,w,c
  5447  0030C8  5033               	movf	(___flge@ff2+3)^0,w,c
  5448  0030CA  582F               	subwfb	(___flge@ff1+3)^0,w,c
  5449  0030CC  B0D8               	btfsc	status,0,c
  5450  0030CE  EF6B  F018         	goto	u3501
  5451  0030D2  EF6D  F018         	goto	u3500
  5452  0030D6                     u3501:
  5453  0030D6  EF70  F018         	goto	l3447
  5454  0030DA                     u3500:
  5455  0030DA  90D8               	bcf	status,0,c
  5456  0030DC  EF71  F018         	goto	l445
  5457  0030E0                     l3447:
  5458  0030E0  80D8               	bsf	status,0,c
  5459  0030E2                     l445:
  5460  0030E2  0012               	return		;funcret
  5461  0030E4                     __end_of___flge:
  5462                           	callstack 0
  5463                           
  5464 ;; *************** function ___fleq *****************
  5465 ;; Defined at:
  5466 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  ff1             4    0[COMRAM] int 
  5469 ;;  ff2             4    4[COMRAM] int 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;		None               void
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5481 ;;      Params:         8       0       0       0       0       0       0       0       0
  5482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5483 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5484 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5485 ;;Total ram usage:       12 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; This function calls:
  5488 ;;		Nothing
  5489 ;; This function is called by:
  5490 ;;		_efgtoa
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text19
  5495  00375C                     __ptext19:
  5496                           	callstack 0
  5497  00375C                     ___fleq:
  5498                           	callstack 26
  5499  00375C  0E00               	movlw	0
  5500  00375E  1401               	andwf	___fleq@ff1^0,w,c
  5501  003760  6E09               	movwf	??___fleq^0,c
  5502  003762  0E00               	movlw	0
  5503  003764  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5504  003766  6E0A               	movwf	(??___fleq+1)^0,c
  5505  003768  0E80               	movlw	128
  5506  00376A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5507  00376C  6E0B               	movwf	(??___fleq+2)^0,c
  5508  00376E  0E7F               	movlw	127
  5509  003770  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5510  003772  6E0C               	movwf	(??___fleq+3)^0,c
  5511  003774  5009               	movf	??___fleq^0,w,c
  5512  003776  100A               	iorwf	(??___fleq+1)^0,w,c
  5513  003778  100B               	iorwf	(??___fleq+2)^0,w,c
  5514  00377A  100C               	iorwf	(??___fleq+3)^0,w,c
  5515  00377C  A4D8               	btfss	status,2,c
  5516  00377E  EFC3  F01B         	goto	u3431
  5517  003782  EFC5  F01B         	goto	u3430
  5518  003786                     u3431:
  5519  003786  EFCD  F01B         	goto	l3417
  5520  00378A                     u3430:
  5521  00378A  0E00               	movlw	0
  5522  00378C  6E01               	movwf	___fleq@ff1^0,c
  5523  00378E  0E00               	movlw	0
  5524  003790  6E02               	movwf	(___fleq@ff1+1)^0,c
  5525  003792  0E00               	movlw	0
  5526  003794  6E03               	movwf	(___fleq@ff1+2)^0,c
  5527  003796  0E00               	movlw	0
  5528  003798  6E04               	movwf	(___fleq@ff1+3)^0,c
  5529  00379A                     l3417:
  5530  00379A  0E00               	movlw	0
  5531  00379C  1405               	andwf	___fleq@ff2^0,w,c
  5532  00379E  6E09               	movwf	??___fleq^0,c
  5533  0037A0  0E00               	movlw	0
  5534  0037A2  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5535  0037A4  6E0A               	movwf	(??___fleq+1)^0,c
  5536  0037A6  0E80               	movlw	128
  5537  0037A8  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5538  0037AA  6E0B               	movwf	(??___fleq+2)^0,c
  5539  0037AC  0E7F               	movlw	127
  5540  0037AE  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5541  0037B0  6E0C               	movwf	(??___fleq+3)^0,c
  5542  0037B2  5009               	movf	??___fleq^0,w,c
  5543  0037B4  100A               	iorwf	(??___fleq+1)^0,w,c
  5544  0037B6  100B               	iorwf	(??___fleq+2)^0,w,c
  5545  0037B8  100C               	iorwf	(??___fleq+3)^0,w,c
  5546  0037BA  A4D8               	btfss	status,2,c
  5547  0037BC  EFE2  F01B         	goto	u3441
  5548  0037C0  EFE4  F01B         	goto	u3440
  5549  0037C4                     u3441:
  5550  0037C4  EFEC  F01B         	goto	l3421
  5551  0037C8                     u3440:
  5552  0037C8  0E00               	movlw	0
  5553  0037CA  6E05               	movwf	___fleq@ff2^0,c
  5554  0037CC  0E00               	movlw	0
  5555  0037CE  6E06               	movwf	(___fleq@ff2+1)^0,c
  5556  0037D0  0E00               	movlw	0
  5557  0037D2  6E07               	movwf	(___fleq@ff2+2)^0,c
  5558  0037D4  0E00               	movlw	0
  5559  0037D6  6E08               	movwf	(___fleq@ff2+3)^0,c
  5560  0037D8                     l3421:
  5561  0037D8  5005               	movf	___fleq@ff2^0,w,c
  5562  0037DA  1801               	xorwf	___fleq@ff1^0,w,c
  5563  0037DC  E10F               	bnz	u3450
  5564  0037DE  5006               	movf	(___fleq@ff2+1)^0,w,c
  5565  0037E0  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5566  0037E2  E10C               	bnz	u3450
  5567  0037E4  5007               	movf	(___fleq@ff2+2)^0,w,c
  5568  0037E6  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5569  0037E8  E109               	bnz	u3450
  5570  0037EA  5008               	movf	(___fleq@ff2+3)^0,w,c
  5571  0037EC  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5572  0037EE  B4D8               	btfsc	status,2,c
  5573  0037F0  EFFC  F01B         	goto	u3451
  5574  0037F4  EFFE  F01B         	goto	u3450
  5575  0037F8                     u3451:
  5576  0037F8  EF01  F01C         	goto	l3425
  5577  0037FC                     u3450:
  5578  0037FC  90D8               	bcf	status,0,c
  5579  0037FE  EF02  F01C         	goto	l434
  5580  003802                     l3425:
  5581  003802  80D8               	bsf	status,0,c
  5582  003804                     l434:
  5583  003804  0012               	return		;funcret
  5584  003806                     __end_of___fleq:
  5585                           	callstack 0
  5586                           
  5587 ;; *************** function ___awmod *****************
  5588 ;; Defined at:
  5589 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  dividend        2    0[COMRAM] int 
  5592 ;;  divisor         2    2[COMRAM] int 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;  sign            1    5[COMRAM] unsigned char 
  5595 ;;  counter         1    4[COMRAM] unsigned char 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  2    0[COMRAM] int 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5605 ;;      Params:         4       0       0       0       0       0       0       0       0
  5606 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5608 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5609 ;;Total ram usage:        6 bytes
  5610 ;; Hardware stack levels used: 1
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_efgtoa
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text20
  5619  0036AC                     __ptext20:
  5620                           	callstack 0
  5621  0036AC                     ___awmod:
  5622                           	callstack 26
  5623  0036AC  0E00               	movlw	0
  5624  0036AE  6E06               	movwf	___awmod@sign^0,c
  5625  0036B0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5626  0036B2  EF5F  F01B         	goto	u3370
  5627  0036B6  EF5D  F01B         	goto	u3371
  5628  0036BA                     u3371:
  5629  0036BA  EF65  F01B         	goto	l3385
  5630  0036BE                     u3370:
  5631  0036BE  6C01               	negf	___awmod@dividend^0,c
  5632  0036C0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5633  0036C2  B0D8               	btfsc	status,0,c
  5634  0036C4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5635  0036C6  0E01               	movlw	1
  5636  0036C8  6E06               	movwf	___awmod@sign^0,c
  5637  0036CA                     l3385:
  5638  0036CA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5639  0036CC  EF6C  F01B         	goto	u3380
  5640  0036D0  EF6A  F01B         	goto	u3381
  5641  0036D4                     u3381:
  5642  0036D4  EF70  F01B         	goto	l3389
  5643  0036D8                     u3380:
  5644  0036D8  6C03               	negf	___awmod@divisor^0,c
  5645  0036DA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5646  0036DC  B0D8               	btfsc	status,0,c
  5647  0036DE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5648  0036E0                     l3389:
  5649  0036E0  5003               	movf	___awmod@divisor^0,w,c
  5650  0036E2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5651  0036E4  B4D8               	btfsc	status,2,c
  5652  0036E6  EF77  F01B         	goto	u3391
  5653  0036EA  EF79  F01B         	goto	u3390
  5654  0036EE                     u3391:
  5655  0036EE  EF9D  F01B         	goto	l3405
  5656  0036F2                     u3390:
  5657  0036F2  0E01               	movlw	1
  5658  0036F4  6E05               	movwf	___awmod@counter^0,c
  5659  0036F6  EF81  F01B         	goto	l3395
  5660  0036FA                     l3393:
  5661  0036FA  90D8               	bcf	status,0,c
  5662  0036FC  3603               	rlcf	___awmod@divisor^0,f,c
  5663  0036FE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5664  003700  2A05               	incf	___awmod@counter^0,f,c
  5665  003702                     l3395:
  5666  003702  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5667  003704  EF86  F01B         	goto	u3401
  5668  003708  EF88  F01B         	goto	u3400
  5669  00370C                     u3401:
  5670  00370C  EF7D  F01B         	goto	l3393
  5671  003710                     u3400:
  5672  003710                     l3397:
  5673  003710  5003               	movf	___awmod@divisor^0,w,c
  5674  003712  5C01               	subwf	___awmod@dividend^0,w,c
  5675  003714  5004               	movf	(___awmod@divisor+1)^0,w,c
  5676  003716  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5677  003718  A0D8               	btfss	status,0,c
  5678  00371A  EF91  F01B         	goto	u3411
  5679  00371E  EF93  F01B         	goto	u3410
  5680  003722                     u3411:
  5681  003722  EF97  F01B         	goto	l3401
  5682  003726                     u3410:
  5683  003726  5003               	movf	___awmod@divisor^0,w,c
  5684  003728  5E01               	subwf	___awmod@dividend^0,f,c
  5685  00372A  5004               	movf	(___awmod@divisor+1)^0,w,c
  5686  00372C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5687  00372E                     l3401:
  5688  00372E  90D8               	bcf	status,0,c
  5689  003730  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5690  003732  3203               	rrcf	___awmod@divisor^0,f,c
  5691  003734  2E05               	decfsz	___awmod@counter^0,f,c
  5692  003736  EF88  F01B         	goto	l3397
  5693  00373A                     l3405:
  5694  00373A  5006               	movf	___awmod@sign^0,w,c
  5695  00373C  B4D8               	btfsc	status,2,c
  5696  00373E  EFA3  F01B         	goto	u3421
  5697  003742  EFA5  F01B         	goto	u3420
  5698  003746                     u3421:
  5699  003746  EFA9  F01B         	goto	l3409
  5700  00374A                     u3420:
  5701  00374A  6C01               	negf	___awmod@dividend^0,c
  5702  00374C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5703  00374E  B0D8               	btfsc	status,0,c
  5704  003750  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5705  003752                     l3409:
  5706  003752  C001  F001         	movff	___awmod@dividend,?___awmod
  5707  003756  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5708  00375A  0012               	return		;funcret
  5709  00375C                     __end_of___awmod:
  5710                           	callstack 0
  5711                           
  5712 ;; *************** function ___awdiv *****************
  5713 ;; Defined at:
  5714 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  dividend        2    0[COMRAM] int 
  5717 ;;  divisor         2    2[COMRAM] int 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  quotient        2    6[COMRAM] int 
  5720 ;;  sign            1    5[COMRAM] unsigned char 
  5721 ;;  counter         1    4[COMRAM] unsigned char 
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  2    0[COMRAM] int 
  5724 ;; Registers used:
  5725 ;;		wreg, status,2, status,0
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5731 ;;      Params:         4       0       0       0       0       0       0       0       0
  5732 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5734 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5735 ;;Total ram usage:        8 bytes
  5736 ;; Hardware stack levels used: 1
  5737 ;; This function calls:
  5738 ;;		Nothing
  5739 ;; This function is called by:
  5740 ;;		_efgtoa
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text21
  5745  003530                     __ptext21:
  5746                           	callstack 0
  5747  003530                     ___awdiv:
  5748                           	callstack 26
  5749  003530  0E00               	movlw	0
  5750  003532  6E06               	movwf	___awdiv@sign^0,c
  5751  003534  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5752  003536  EFA1  F01A         	goto	u3310
  5753  00353A  EF9F  F01A         	goto	u3311
  5754  00353E                     u3311:
  5755  00353E  EFA7  F01A         	goto	l3341
  5756  003542                     u3310:
  5757  003542  6C03               	negf	___awdiv@divisor^0,c
  5758  003544  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5759  003546  B0D8               	btfsc	status,0,c
  5760  003548  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5761  00354A  0E01               	movlw	1
  5762  00354C  6E06               	movwf	___awdiv@sign^0,c
  5763  00354E                     l3341:
  5764  00354E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5765  003550  EFAE  F01A         	goto	u3320
  5766  003554  EFAC  F01A         	goto	u3321
  5767  003558                     u3321:
  5768  003558  EFB4  F01A         	goto	l3347
  5769  00355C                     u3320:
  5770  00355C  6C01               	negf	___awdiv@dividend^0,c
  5771  00355E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5772  003560  B0D8               	btfsc	status,0,c
  5773  003562  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5774  003564  0E01               	movlw	1
  5775  003566  1A06               	xorwf	___awdiv@sign^0,f,c
  5776  003568                     l3347:
  5777  003568  0E00               	movlw	0
  5778  00356A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5779  00356C  0E00               	movlw	0
  5780  00356E  6E07               	movwf	___awdiv@quotient^0,c
  5781  003570  5003               	movf	___awdiv@divisor^0,w,c
  5782  003572  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5783  003574  B4D8               	btfsc	status,2,c
  5784  003576  EFBF  F01A         	goto	u3331
  5785  00357A  EFC1  F01A         	goto	u3330
  5786  00357E                     u3331:
  5787  00357E  EFE9  F01A         	goto	l3369
  5788  003582                     u3330:
  5789  003582  0E01               	movlw	1
  5790  003584  6E05               	movwf	___awdiv@counter^0,c
  5791  003586  EFC9  F01A         	goto	l3355
  5792  00358A                     l3353:
  5793  00358A  90D8               	bcf	status,0,c
  5794  00358C  3603               	rlcf	___awdiv@divisor^0,f,c
  5795  00358E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5796  003590  2A05               	incf	___awdiv@counter^0,f,c
  5797  003592                     l3355:
  5798  003592  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5799  003594  EFCE  F01A         	goto	u3341
  5800  003598  EFD0  F01A         	goto	u3340
  5801  00359C                     u3341:
  5802  00359C  EFC5  F01A         	goto	l3353
  5803  0035A0                     u3340:
  5804  0035A0                     l3357:
  5805  0035A0  90D8               	bcf	status,0,c
  5806  0035A2  3607               	rlcf	___awdiv@quotient^0,f,c
  5807  0035A4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5808  0035A6  5003               	movf	___awdiv@divisor^0,w,c
  5809  0035A8  5C01               	subwf	___awdiv@dividend^0,w,c
  5810  0035AA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5811  0035AC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5812  0035AE  A0D8               	btfss	status,0,c
  5813  0035B0  EFDC  F01A         	goto	u3351
  5814  0035B4  EFDE  F01A         	goto	u3350
  5815  0035B8                     u3351:
  5816  0035B8  EFE3  F01A         	goto	l3365
  5817  0035BC                     u3350:
  5818  0035BC  5003               	movf	___awdiv@divisor^0,w,c
  5819  0035BE  5E01               	subwf	___awdiv@dividend^0,f,c
  5820  0035C0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5821  0035C2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5822  0035C4  8007               	bsf	___awdiv@quotient^0,0,c
  5823  0035C6                     l3365:
  5824  0035C6  90D8               	bcf	status,0,c
  5825  0035C8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5826  0035CA  3203               	rrcf	___awdiv@divisor^0,f,c
  5827  0035CC  2E05               	decfsz	___awdiv@counter^0,f,c
  5828  0035CE  EFD0  F01A         	goto	l3357
  5829  0035D2                     l3369:
  5830  0035D2  5006               	movf	___awdiv@sign^0,w,c
  5831  0035D4  B4D8               	btfsc	status,2,c
  5832  0035D6  EFEF  F01A         	goto	u3361
  5833  0035DA  EFF1  F01A         	goto	u3360
  5834  0035DE                     u3361:
  5835  0035DE  EFF5  F01A         	goto	l3373
  5836  0035E2                     u3360:
  5837  0035E2  6C07               	negf	___awdiv@quotient^0,c
  5838  0035E4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5839  0035E6  B0D8               	btfsc	status,0,c
  5840  0035E8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5841  0035EA                     l3373:
  5842  0035EA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5843  0035EE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5844  0035F2  0012               	return		;funcret
  5845  0035F4                     __end_of___awdiv:
  5846                           	callstack 0
  5847                           
  5848 ;; *************** function _atoi *****************
  5849 ;; Defined at:
  5850 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5853 ;;		 -> STR_1(19), 
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  n               2   15[COMRAM] int 
  5856 ;;  neg             2   13[COMRAM] int 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  2    7[COMRAM] int 
  5859 ;; Registers used:
  5860 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5866 ;;      Params:         2       0       0       0       0       0       0       0       0
  5867 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5868 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5869 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5870 ;;Total ram usage:       10 bytes
  5871 ;; Hardware stack levels used: 1
  5872 ;; Hardware stack levels required when called: 1
  5873 ;; This function calls:
  5874 ;;		___wmul
  5875 ;;		_isdigit
  5876 ;;		_isspace
  5877 ;; This function is called by:
  5878 ;;		_vfpfcnvrt
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text22
  5883  002D84                     __ptext22:
  5884                           	callstack 0
  5885  002D84                     _atoi:
  5886                           	callstack 26
  5887  002D84  0E00               	movlw	0
  5888  002D86  6E11               	movwf	(atoi@n+1)^0,c
  5889  002D88  0E00               	movlw	0
  5890  002D8A  6E10               	movwf	atoi@n^0,c
  5891  002D8C  0E00               	movlw	0
  5892  002D8E  6E0F               	movwf	(atoi@neg+1)^0,c
  5893  002D90  0E00               	movlw	0
  5894  002D92  6E0E               	movwf	atoi@neg^0,c
  5895  002D94  EFCE  F016         	goto	l3917
  5896  002D98                     l3913:
  5897  002D98  4A08               	infsnz	atoi@s^0,f,c
  5898  002D9A  2A09               	incf	(atoi@s+1)^0,f,c
  5899  002D9C                     l3917:
  5900  002D9C  C008  FFF6         	movff	atoi@s,tblptrl
  5901  002DA0  C009  FFF7         	movff	atoi@s+1,tblptrh
  5902  002DA4                     	if	0	;tblptru may be non-zero
  5903  002DA4                     	endif
  5904  002DA4                     	if	0	;tblptru may be non-zero
  5905  002DA4                     	endif
  5906  002DA4  0008               	tblrd		*
  5907  002DA6  50F5               	movf	tablat,w,c
  5908  002DA8  0A20               	xorlw	32
  5909  002DAA  B4D8               	btfsc	status,2,c
  5910  002DAC  EFDA  F016         	goto	u4351
  5911  002DB0  EFDC  F016         	goto	u4350
  5912  002DB4                     u4351:
  5913  002DB4  EFCC  F016         	goto	l3913
  5914  002DB8                     u4350:
  5915  002DB8  0EF7               	movlw	247
  5916  002DBA  6E0A               	movwf	??_atoi^0,c
  5917  002DBC  0EFF               	movlw	255
  5918  002DBE  6E0B               	movwf	(??_atoi+1)^0,c
  5919  002DC0  C008  FFF6         	movff	atoi@s,tblptrl
  5920  002DC4  C009  FFF7         	movff	atoi@s+1,tblptrh
  5921  002DC8                     	if	0	;tblptru may be non-zero
  5922  002DC8                     	endif
  5923  002DC8                     	if	0	;tblptru may be non-zero
  5924  002DC8                     	endif
  5925  002DC8  0008               	tblrd		*
  5926  002DCA  50F5               	movf	tablat,w,c
  5927  002DCC  6E0C               	movwf	(??_atoi+2)^0,c
  5928  002DCE  6A0D               	clrf	(??_atoi+3)^0,c
  5929  002DD0  500A               	movf	??_atoi^0,w,c
  5930  002DD2  260C               	addwf	(??_atoi+2)^0,f,c
  5931  002DD4  500B               	movf	(??_atoi+1)^0,w,c
  5932  002DD6  220D               	addwfc	(??_atoi+3)^0,f,c
  5933  002DD8  500D               	movf	(??_atoi+3)^0,w,c
  5934  002DDA  E109               	bnz	u4360
  5935  002DDC  0E05               	movlw	5
  5936  002DDE  5C0C               	subwf	(??_atoi+2)^0,w,c
  5937  002DE0  A0D8               	btfss	status,0,c
  5938  002DE2  EFF5  F016         	goto	u4361
  5939  002DE6  EFF7  F016         	goto	u4360
  5940  002DEA                     u4361:
  5941  002DEA  EFCC  F016         	goto	l3913
  5942  002DEE                     u4360:
  5943  002DEE  EF01  F017         	goto	l3925
  5944  002DF2                     l3921:
  5945  002DF2  0E00               	movlw	0
  5946  002DF4  6E0F               	movwf	(atoi@neg+1)^0,c
  5947  002DF6  0E01               	movlw	1
  5948  002DF8  6E0E               	movwf	atoi@neg^0,c
  5949  002DFA                     l3923:
  5950  002DFA  4A08               	infsnz	atoi@s^0,f,c
  5951  002DFC  2A09               	incf	(atoi@s+1)^0,f,c
  5952  002DFE  EF36  F017         	goto	l3933
  5953  002E02                     l3925:
  5954  002E02  C008  FFF6         	movff	atoi@s,tblptrl
  5955  002E06  C009  FFF7         	movff	atoi@s+1,tblptrh
  5956  002E0A                     	if	0	;tblptru may be non-zero
  5957  002E0A                     	endif
  5958  002E0A                     	if	0	;tblptru may be non-zero
  5959  002E0A                     	endif
  5960  002E0A  0008               	tblrd		*
  5961  002E0C  50F5               	movf	tablat,w,c
  5962  002E0E  6E0A               	movwf	??_atoi^0,c
  5963  002E10  6A0B               	clrf	(??_atoi+1)^0,c
  5964                           
  5965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5966                           ; Switch size 1, requested type "simple"
  5967                           ; Number of cases is 1, Range of values is 0 to 0
  5968                           ; switch strategies available:
  5969                           ; Name         Instructions Cycles
  5970                           ; simple_byte            4     3 (average)
  5971                           ;	Chosen strategy is simple_byte
  5972  002E12  500B               	movf	(??_atoi+1)^0,w,c
  5973  002E14  0A00               	xorlw	0	; case 0
  5974  002E16  B4D8               	btfsc	status,2,c
  5975  002E18  EF10  F017         	goto	l4447
  5976  002E1C  EF36  F017         	goto	l3933
  5977  002E20                     l4447:
  5978                           
  5979                           ; Switch size 1, requested type "simple"
  5980                           ; Number of cases is 2, Range of values is 43 to 45
  5981                           ; switch strategies available:
  5982                           ; Name         Instructions Cycles
  5983                           ; simple_byte            7     4 (average)
  5984                           ;	Chosen strategy is simple_byte
  5985  002E20  500A               	movf	??_atoi^0,w,c
  5986  002E22  0A2B               	xorlw	43	; case 43
  5987  002E24  B4D8               	btfsc	status,2,c
  5988  002E26  EFFD  F016         	goto	l3923
  5989  002E2A  0A06               	xorlw	6	; case 45
  5990  002E2C  B4D8               	btfsc	status,2,c
  5991  002E2E  EFF9  F016         	goto	l3921
  5992  002E32  EF36  F017         	goto	l3933
  5993  002E36                     l3927:
  5994  002E36  C010  F001         	movff	atoi@n,___wmul@multiplier
  5995  002E3A  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  5996  002E3E  0E00               	movlw	0
  5997  002E40  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5998  002E42  0E0A               	movlw	10
  5999  002E44  6E03               	movwf	___wmul@multiplicand^0,c
  6000  002E46  EC6A  F01E         	call	___wmul	;wreg free
  6001  002E4A  C008  FFF6         	movff	atoi@s,tblptrl
  6002  002E4E  C009  FFF7         	movff	atoi@s+1,tblptrh
  6003  002E52                     	if	0	;tblptru may be non-zero
  6004  002E52                     	endif
  6005  002E52                     	if	0	;tblptru may be non-zero
  6006  002E52                     	endif
  6007  002E52  0008               	tblrd		*
  6008  002E54  50F5               	movf	tablat,w,c
  6009  002E56  5E01               	subwf	?___wmul^0,f,c
  6010  002E58  0E00               	movlw	0
  6011  002E5A  5A02               	subwfb	(?___wmul+1)^0,f,c
  6012  002E5C  0E30               	movlw	48
  6013  002E5E  2401               	addwf	?___wmul^0,w,c
  6014  002E60  6E10               	movwf	atoi@n^0,c
  6015  002E62  0E00               	movlw	0
  6016  002E64  2002               	addwfc	(?___wmul+1)^0,w,c
  6017  002E66  6E11               	movwf	(atoi@n+1)^0,c
  6018  002E68  EFFD  F016         	goto	l3923
  6019  002E6C                     l3933:
  6020  002E6C  0ED0               	movlw	208
  6021  002E6E  6E0A               	movwf	??_atoi^0,c
  6022  002E70  0EFF               	movlw	255
  6023  002E72  6E0B               	movwf	(??_atoi+1)^0,c
  6024  002E74  C008  FFF6         	movff	atoi@s,tblptrl
  6025  002E78  C009  FFF7         	movff	atoi@s+1,tblptrh
  6026  002E7C                     	if	0	;tblptru may be non-zero
  6027  002E7C                     	endif
  6028  002E7C                     	if	0	;tblptru may be non-zero
  6029  002E7C                     	endif
  6030  002E7C  0008               	tblrd		*
  6031  002E7E  50F5               	movf	tablat,w,c
  6032  002E80  6E0C               	movwf	(??_atoi+2)^0,c
  6033  002E82  6A0D               	clrf	(??_atoi+3)^0,c
  6034  002E84  500A               	movf	??_atoi^0,w,c
  6035  002E86  260C               	addwf	(??_atoi+2)^0,f,c
  6036  002E88  500B               	movf	(??_atoi+1)^0,w,c
  6037  002E8A  220D               	addwfc	(??_atoi+3)^0,f,c
  6038  002E8C  500D               	movf	(??_atoi+3)^0,w,c
  6039  002E8E  E109               	bnz	u4370
  6040  002E90  0E0A               	movlw	10
  6041  002E92  5C0C               	subwf	(??_atoi+2)^0,w,c
  6042  002E94  A0D8               	btfss	status,0,c
  6043  002E96  EF4F  F017         	goto	u4371
  6044  002E9A  EF51  F017         	goto	u4370
  6045  002E9E                     u4371:
  6046  002E9E  EF1B  F017         	goto	l3927
  6047  002EA2                     u4370:
  6048  002EA2  500E               	movf	atoi@neg^0,w,c
  6049  002EA4  100F               	iorwf	(atoi@neg+1)^0,w,c
  6050  002EA6  A4D8               	btfss	status,2,c
  6051  002EA8  EF58  F017         	goto	u4381
  6052  002EAC  EF5A  F017         	goto	u4380
  6053  002EB0                     u4381:
  6054  002EB0  EF68  F017         	goto	l1058
  6055  002EB4                     u4380:
  6056  002EB4  C010  F00A         	movff	atoi@n,??_atoi
  6057  002EB8  C011  F00B         	movff	atoi@n+1,??_atoi+1
  6058  002EBC  1E0A               	comf	??_atoi^0,f,c
  6059  002EBE  1E0B               	comf	(??_atoi+1)^0,f,c
  6060  002EC0  4A0A               	infsnz	??_atoi^0,f,c
  6061  002EC2  2A0B               	incf	(??_atoi+1)^0,f,c
  6062  002EC4  C00A  F008         	movff	??_atoi,?_atoi
  6063  002EC8  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6064  002ECC  EF6C  F017         	goto	l1061
  6065  002ED0                     l1058:
  6066  002ED0  C010  F008         	movff	atoi@n,?_atoi
  6067  002ED4  C011  F009         	movff	atoi@n+1,?_atoi+1
  6068  002ED8                     l1061:
  6069  002ED8  0012               	return		;funcret
  6070  002EDA                     __end_of_atoi:
  6071                           	callstack 0
  6072                           
  6073 ;; *************** function _isspace *****************
  6074 ;; Defined at:
  6075 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  c               2    0[COMRAM] int 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  2    0[COMRAM] int 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6089 ;;      Params:         2       0       0       0       0       0       0       0       0
  6090 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6091 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6092 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6093 ;;Total ram usage:        7 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_atoi
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text23
  6103  003A1C                     __ptext23:
  6104                           	callstack 0
  6105  003A1C                     _isspace:
  6106                           	callstack 26
  6107  003A1C  0E01               	movlw	1
  6108  003A1E  6E07               	movwf	_isspace$1255^0,c
  6109  003A20  0E20               	movlw	32
  6110  003A22  1801               	xorwf	isspace@c^0,w,c
  6111  003A24  1002               	iorwf	(isspace@c+1)^0,w,c
  6112  003A26  B4D8               	btfsc	status,2,c
  6113  003A28  EF18  F01D         	goto	u3851
  6114  003A2C  EF1A  F01D         	goto	u3850
  6115  003A30                     u3851:
  6116  003A30  EF33  F01D         	goto	l3601
  6117  003A34                     u3850:
  6118  003A34  0EF7               	movlw	247
  6119  003A36  6E03               	movwf	??_isspace^0,c
  6120  003A38  0EFF               	movlw	255
  6121  003A3A  6E04               	movwf	(??_isspace+1)^0,c
  6122  003A3C  C001  F005         	movff	isspace@c,??_isspace+2
  6123  003A40  C002  F006         	movff	isspace@c+1,??_isspace+3
  6124  003A44  5003               	movf	??_isspace^0,w,c
  6125  003A46  2605               	addwf	(??_isspace+2)^0,f,c
  6126  003A48  5004               	movf	(??_isspace+1)^0,w,c
  6127  003A4A  2206               	addwfc	(??_isspace+3)^0,f,c
  6128  003A4C  5006               	movf	(??_isspace+3)^0,w,c
  6129  003A4E  E109               	bnz	u3860
  6130  003A50  0E05               	movlw	5
  6131  003A52  5C05               	subwf	(??_isspace+2)^0,w,c
  6132  003A54  A0D8               	btfss	status,0,c
  6133  003A56  EF2F  F01D         	goto	u3861
  6134  003A5A  EF31  F01D         	goto	u3860
  6135  003A5E                     u3861:
  6136  003A5E  EF33  F01D         	goto	l3601
  6137  003A62                     u3860:
  6138  003A62  0E00               	movlw	0
  6139  003A64  6E07               	movwf	_isspace$1255^0,c
  6140  003A66                     l3601:
  6141  003A66  C007  F001         	movff	_isspace$1255,?_isspace
  6142  003A6A  6A02               	clrf	(?_isspace+1)^0,c
  6143  003A6C  0012               	return		;funcret
  6144  003A6E                     __end_of_isspace:
  6145                           	callstack 0
  6146                           
  6147 ;; *************** function _isdigit *****************
  6148 ;; Defined at:
  6149 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  c               2    0[COMRAM] int 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  2    0[COMRAM] int 
  6156 ;; Registers used:
  6157 ;;		wreg, status,2, status,0
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6163 ;;      Params:         2       0       0       0       0       0       0       0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6165 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6166 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6167 ;;Total ram usage:        6 bytes
  6168 ;; Hardware stack levels used: 1
  6169 ;; This function calls:
  6170 ;;		Nothing
  6171 ;; This function is called by:
  6172 ;;		_vfpfcnvrt
  6173 ;;		_atoi
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text24
  6178  003C36                     __ptext24:
  6179                           	callstack 0
  6180  003C36                     _isdigit:
  6181                           	callstack 27
  6182  003C36  0ED0               	movlw	208
  6183  003C38  6E03               	movwf	??_isdigit^0,c
  6184  003C3A  0EFF               	movlw	255
  6185  003C3C  6E04               	movwf	(??_isdigit+1)^0,c
  6186  003C3E  C001  F005         	movff	isdigit@c,??_isdigit+2
  6187  003C42  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6188  003C46  5003               	movf	??_isdigit^0,w,c
  6189  003C48  2605               	addwf	(??_isdigit+2)^0,f,c
  6190  003C4A  5004               	movf	(??_isdigit+1)^0,w,c
  6191  003C4C  2206               	addwfc	(??_isdigit+3)^0,f,c
  6192  003C4E  5006               	movf	(??_isdigit+3)^0,w,c
  6193  003C50  E10A               	bnz	u3830
  6194  003C52  0E0A               	movlw	10
  6195  003C54  5C05               	subwf	(??_isdigit+2)^0,w,c
  6196  003C56  A0D8               	btfss	status,0,c
  6197  003C58  EF30  F01E         	goto	u3831
  6198  003C5C  EF33  F01E         	goto	u3830
  6199  003C60                     u3831:
  6200  003C60  0E01               	movlw	1
  6201  003C62  EF34  F01E         	goto	u3840
  6202  003C66                     u3830:
  6203  003C66  0E00               	movlw	0
  6204  003C68                     u3840:
  6205  003C68  6E01               	movwf	?_isdigit^0,c
  6206  003C6A  6A02               	clrf	(?_isdigit+1)^0,c
  6207  003C6C  0012               	return		;funcret
  6208  003C6E                     __end_of_isdigit:
  6209                           	callstack 0
  6210                           
  6211 ;; *************** function ___wmul *****************
  6212 ;; Defined at:
  6213 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  multiplier      2    0[COMRAM] unsigned int 
  6216 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;  product         2    4[COMRAM] unsigned int 
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  2    0[COMRAM] unsigned int 
  6221 ;; Registers used:
  6222 ;;		wreg, status,2, status,0, prodl, prodh
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6228 ;;      Params:         4       0       0       0       0       0       0       0       0
  6229 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6231 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6232 ;;Total ram usage:        6 bytes
  6233 ;; Hardware stack levels used: 1
  6234 ;; This function calls:
  6235 ;;		Nothing
  6236 ;; This function is called by:
  6237 ;;		_atoi
  6238 ;; This function uses a non-reentrant model
  6239 ;;
  6240                           
  6241                           	psect	text25
  6242  003CD4                     __ptext25:
  6243                           	callstack 0
  6244  003CD4                     ___wmul:
  6245                           	callstack 26
  6246  003CD4  5001               	movf	___wmul@multiplier^0,w,c
  6247  003CD6  0203               	mulwf	___wmul@multiplicand^0,c
  6248  003CD8  CFF3 F005          	movff	prodl,___wmul@product
  6249  003CDC  CFF4 F006          	movff	prodh,___wmul@product+1
  6250  003CE0  5001               	movf	___wmul@multiplier^0,w,c
  6251  003CE2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6252  003CE4  50F3               	movf	243,w,c
  6253  003CE6  2606               	addwf	(___wmul@product+1)^0,f,c
  6254  003CE8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6255  003CEA  0203               	mulwf	___wmul@multiplicand^0,c
  6256  003CEC  50F3               	movf	243,w,c
  6257  003CEE  2606               	addwf	(___wmul@product+1)^0,f,c
  6258  003CF0  C005  F001         	movff	___wmul@product,?___wmul
  6259  003CF4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6260  003CF8  0012               	return		;funcret
  6261  003CFA                     __end_of___wmul:
  6262                           	callstack 0
  6263                           
  6264 ;; *************** function _getDistance *****************
  6265 ;; Defined at:
  6266 ;;		line 75 in file "main.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;  count           2    2[COMRAM] unsigned short 
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  2    0[COMRAM] unsigned short 
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6280 ;;      Params:         2       0       0       0       0       0       0       0       0
  6281 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6283 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6284 ;;Total ram usage:        4 bytes
  6285 ;; Hardware stack levels used: 1
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_main
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text26
  6294  003A6E                     __ptext26:
  6295                           	callstack 0
  6296  003A6E                     _getDistance:
  6297                           	callstack 30
  6298  003A6E                     
  6299                           ;main.c: 76:     uint16_t count=0;
  6300  003A6E  0E00               	movlw	0
  6301  003A70  6E04               	movwf	(getDistance@count+1)^0,c
  6302  003A72  0E00               	movlw	0
  6303  003A74  6E03               	movwf	getDistance@count^0,c
  6304  003A76                     
  6305                           ;main.c: 77:     PORTBbits.RB0 = 1;
  6306  003A76  8081               	bsf	129,0,c	;volatile
  6307  003A78                     
  6308                           ;main.c: 78:     _delay((unsigned long)((10)*(20000000UL/4000000.0)));
  6309  003A78  0E10               	movlw	16
  6310  003A7A                     u4837:
  6311  003A7A  2EE8               	decfsz	wreg,f,c
  6312  003A7C  D7FE               	bra	u4837
  6313  003A7E  D000               	nop2	
  6314  003A80                     
  6315                           ;main.c: 79:     PORTBbits.RB0 = 0;
  6316  003A80  9081               	bcf	129,0,c	;volatile
  6317  003A82                     l62:
  6318  003A82  A281               	btfss	129,1,c	;volatile
  6319  003A84  EF46  F01D         	goto	u4761
  6320  003A88  EF48  F01D         	goto	u4760
  6321  003A8C                     u4761:
  6322  003A8C  EF41  F01D         	goto	l62
  6323  003A90                     u4760:
  6324  003A90  EF50  F01D         	goto	l4253
  6325  003A94                     l4249:
  6326                           
  6327                           ;main.c: 83:         count++;
  6328  003A94  4A03               	infsnz	getDistance@count^0,f,c
  6329  003A96  2A04               	incf	(getDistance@count+1)^0,f,c
  6330  003A98                     
  6331                           ;main.c: 84:         _delay((unsigned long)((58)*(20000000UL/4000000.0)));
  6332  003A98  0E60               	movlw	96
  6333  003A9A                     u4847:
  6334  003A9A  2EE8               	decfsz	wreg,f,c
  6335  003A9C  D7FE               	bra	u4847
  6336  003A9E  D000               	nop2	
  6337  003AA0                     l4253:
  6338                           
  6339                           ;main.c: 82:     while(PORTBbits.RB1 == 1){
  6340  003AA0  B281               	btfsc	129,1,c	;volatile
  6341  003AA2  EF55  F01D         	goto	u4771
  6342  003AA6  EF57  F01D         	goto	u4770
  6343  003AAA                     u4771:
  6344  003AAA  EF4A  F01D         	goto	l4249
  6345  003AAE                     u4770:
  6346  003AAE                     
  6347                           ;main.c: 87:     return(count);
  6348  003AAE  C003  F001         	movff	getDistance@count,?_getDistance
  6349  003AB2  C004  F002         	movff	getDistance@count+1,?_getDistance+1
  6350  003AB6  0012               	return		;funcret
  6351  003AB8                     __end_of_getDistance:
  6352                           	callstack 0
  6353                           
  6354 ;; *************** function _UART_Write_Text *****************
  6355 ;; Defined at:
  6356 ;;		line 44 in file "UART_LIB.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  text            2    1[COMRAM] PTR unsigned char 
  6359 ;;		 -> strUART(50), 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;		None
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  1    wreg      void 
  6364 ;; Registers used:
  6365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6371 ;;      Params:         2       0       0       0       0       0       0       0       0
  6372 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6374 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6375 ;;Total ram usage:        2 bytes
  6376 ;; Hardware stack levels used: 1
  6377 ;; Hardware stack levels required when called: 1
  6378 ;; This function calls:
  6379 ;;		_UART_Write_Chr
  6380 ;; This function is called by:
  6381 ;;		_main
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           	psect	text27
  6386  003CA4                     __ptext27:
  6387                           	callstack 0
  6388  003CA4                     _UART_Write_Text:
  6389                           	callstack 29
  6390  003CA4                     
  6391                           ;UART_LIB.c: 45:     while(*text){
  6392  003CA4  EF5D  F01E         	goto	l4273
  6393  003CA8                     l4269:
  6394                           
  6395                           ;UART_LIB.c: 46:         UART_Write_Chr(*text);
  6396  003CA8  C002  FFD9         	movff	UART_Write_Text@text,fsr2l
  6397  003CAC  C003  FFDA         	movff	UART_Write_Text@text+1,fsr2h
  6398  003CB0  50DF               	movf	indf2,w,c
  6399  003CB2  EC7D  F01E         	call	_UART_Write_Chr
  6400  003CB6                     
  6401                           ;UART_LIB.c: 47:         text++;
  6402  003CB6  4A02               	infsnz	UART_Write_Text@text^0,f,c
  6403  003CB8  2A03               	incf	(UART_Write_Text@text+1)^0,f,c
  6404  003CBA                     l4273:
  6405                           
  6406                           ;UART_LIB.c: 45:     while(*text){
  6407  003CBA  C002  FFD9         	movff	UART_Write_Text@text,fsr2l
  6408  003CBE  C003  FFDA         	movff	UART_Write_Text@text+1,fsr2h
  6409  003CC2  50DF               	movf	indf2,w,c
  6410  003CC4  A4D8               	btfss	status,2,c
  6411  003CC6  EF67  F01E         	goto	u4781
  6412  003CCA  EF69  F01E         	goto	u4780
  6413  003CCE                     u4781:
  6414  003CCE  EF54  F01E         	goto	l4269
  6415  003CD2                     u4780:
  6416  003CD2  0012               	return		;funcret
  6417  003CD4                     __end_of_UART_Write_Text:
  6418                           	callstack 0
  6419                           
  6420 ;; *************** function _UART_Write_Chr *****************
  6421 ;; Defined at:
  6422 ;;		line 40 in file "UART_LIB.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  letter          1    wreg     unsigned char 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  letter          1    0[COMRAM] unsigned char 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  1    wreg      void 
  6429 ;; Registers used:
  6430 ;;		wreg
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6436 ;;      Params:         0       0       0       0       0       0       0       0       0
  6437 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6439 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6440 ;;Total ram usage:        1 bytes
  6441 ;; Hardware stack levels used: 1
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		_UART_Write_Text
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text28
  6450  003CFA                     __ptext28:
  6451                           	callstack 0
  6452  003CFA                     _UART_Write_Chr:
  6453                           	callstack 29
  6454                           
  6455                           ;incstack = 0
  6456                           ;UART_Write_Chr@letter stored from wreg
  6457  003CFA  6E01               	movwf	UART_Write_Chr@letter^0,c
  6458  003CFC                     l113:
  6459  003CFC  A2AC               	btfss	172,1,c	;volatile
  6460  003CFE  EF83  F01E         	goto	u4561
  6461  003D02  EF85  F01E         	goto	u4560
  6462  003D06                     u4561:
  6463  003D06  EF7E  F01E         	goto	l113
  6464  003D0A                     u4560:
  6465  003D0A                     
  6466                           ;UART_LIB.c: 42:     TXREG = letter;
  6467  003D0A  C001  FFAD         	movff	UART_Write_Chr@letter,4013	;volatile
  6468  003D0E  0012               	return		;funcret
  6469  003D10                     __end_of_UART_Write_Chr:
  6470                           	callstack 0
  6471                           
  6472 ;; *************** function _UART_Init *****************
  6473 ;; Defined at:
  6474 ;;		line 5 in file "UART_LIB.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;  config          8   13[COMRAM] struct .
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;  spbrg_val       4   25[COMRAM] unsigned long 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      void 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6488 ;;      Params:         8       0       0       0       0       0       0       0       0
  6489 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6490 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6491 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6492 ;;Total ram usage:       16 bytes
  6493 ;; Hardware stack levels used: 1
  6494 ;; Hardware stack levels required when called: 1
  6495 ;; This function calls:
  6496 ;;		___lldiv
  6497 ;; This function is called by:
  6498 ;;		_main
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text29
  6503  0031E2                     __ptext29:
  6504                           	callstack 0
  6505  0031E2                     _UART_Init:
  6506                           	callstack 29
  6507  0031E2                     
  6508                           ;UART_LIB.c: 7:     unsigned long spbrg_val = (20000000UL / (16 * config.baud_rate)) - 1
      +                          ;
  6509  0031E2  0E00               	movlw	0
  6510  0031E4  6E01               	movwf	___lldiv@dividend^0,c
  6511  0031E6  0E2D               	movlw	45
  6512  0031E8  6E02               	movwf	(___lldiv@dividend+1)^0,c
  6513  0031EA  0E31               	movlw	49
  6514  0031EC  6E03               	movwf	(___lldiv@dividend+2)^0,c
  6515  0031EE  0E01               	movlw	1
  6516  0031F0  6E04               	movwf	(___lldiv@dividend+3)^0,c
  6517  0031F2  C00E  F016         	movff	UART_Init@config,??_UART_Init
  6518  0031F6  C00F  F017         	movff	UART_Init@config+1,??_UART_Init+1
  6519  0031FA  C010  F018         	movff	UART_Init@config+2,??_UART_Init+2
  6520  0031FE  C011  F019         	movff	UART_Init@config+3,??_UART_Init+3
  6521  003202  0E04               	movlw	4
  6522  003204                     u4715:
  6523  003204  90D8               	bcf	status,0,c
  6524  003206  3616               	rlcf	??_UART_Init^0,f,c
  6525  003208  3617               	rlcf	(??_UART_Init+1)^0,f,c
  6526  00320A  3618               	rlcf	(??_UART_Init+2)^0,f,c
  6527  00320C  3619               	rlcf	(??_UART_Init+3)^0,f,c
  6528  00320E  2EE8               	decfsz	wreg,f,c
  6529  003210  EF02  F019         	goto	u4715
  6530  003214  C016  F005         	movff	??_UART_Init,___lldiv@divisor
  6531  003218  C017  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
  6532  00321C  C018  F007         	movff	??_UART_Init+2,___lldiv@divisor+2
  6533  003220  C019  F008         	movff	??_UART_Init+3,___lldiv@divisor+3
  6534  003224  EC03  F01C         	call	___lldiv	;wreg free
  6535  003228  0EFF               	movlw	255
  6536  00322A  2401               	addwf	?___lldiv^0,w,c
  6537  00322C  6E1A               	movwf	UART_Init@spbrg_val^0,c
  6538  00322E  0EFF               	movlw	255
  6539  003230  2002               	addwfc	(?___lldiv+1)^0,w,c
  6540  003232  6E1B               	movwf	(UART_Init@spbrg_val+1)^0,c
  6541  003234  0EFF               	movlw	255
  6542  003236  2003               	addwfc	(?___lldiv+2)^0,w,c
  6543  003238  6E1C               	movwf	(UART_Init@spbrg_val+2)^0,c
  6544  00323A  0EFF               	movlw	255
  6545  00323C  2004               	addwfc	(?___lldiv+3)^0,w,c
  6546  00323E  6E1D               	movwf	(UART_Init@spbrg_val+3)^0,c
  6547  003240                     
  6548                           ;UART_LIB.c: 8:     SPBRG = (unsigned char)(spbrg_val);
  6549  003240  C01A  FFAF         	movff	UART_Init@spbrg_val,4015	;volatile
  6550  003244                     
  6551                           ;UART_LIB.c: 11:     TXSTA = 0x24;
  6552  003244  0E24               	movlw	36
  6553  003246  6EAC               	movwf	172,c	;volatile
  6554  003248                     
  6555                           ;UART_LIB.c: 12:     RCSTA = 0x90;
  6556  003248  0E90               	movlw	144
  6557  00324A  6EAB               	movwf	171,c	;volatile
  6558  00324C                     
  6559                           ;UART_LIB.c: 15:     TX9 = config.data_bits == 9 ? 1 : 0;
  6560  00324C  0E09               	movlw	9
  6561  00324E  1812               	xorwf	(UART_Init@config+4)^0,w,c
  6562  003250  B4D8               	btfsc	status,2,c
  6563  003252  EF2D  F019         	goto	u4721
  6564  003256  EF30  F019         	goto	u4720
  6565  00325A                     u4721:
  6566  00325A  8CAC               	bsf	4012,6,c	;volatile
  6567  00325C  EF31  F019         	goto	u4735
  6568  003260                     u4720:
  6569  003260  9CAC               	bcf	4012,6,c	;volatile
  6570  003262                     u4735:
  6571  003262                     
  6572                           ;UART_LIB.c: 16:     RX9 = config.data_bits == 9 ? 1 : 0;
  6573  003262  0E09               	movlw	9
  6574  003264  1812               	xorwf	(UART_Init@config+4)^0,w,c
  6575  003266  B4D8               	btfsc	status,2,c
  6576  003268  EF38  F019         	goto	u4741
  6577  00326C  EF3B  F019         	goto	u4740
  6578  003270                     u4741:
  6579  003270  8CAB               	bsf	4011,6,c	;volatile
  6580  003272  EF3C  F019         	goto	u4755
  6581  003276                     u4740:
  6582  003276  9CAB               	bcf	4011,6,c	;volatile
  6583  003278                     u4755:
  6584  003278                     
  6585                           ;UART_LIB.c: 17:     TXEN = 1;
  6586  003278  8AAC               	bsf	4012,5,c	;volatile
  6587  00327A                     
  6588                           ;UART_LIB.c: 18:     SYNC = 0;
  6589  00327A  98AC               	bcf	4012,4,c	;volatile
  6590  00327C                     
  6591                           ;UART_LIB.c: 19:     SPEN = 1;
  6592  00327C  8EAB               	bsf	4011,7,c	;volatile
  6593                           
  6594                           ;UART_LIB.c: 22:     switch (config.parity) {
  6595  00327E  EF4F  F019         	goto	l4233
  6596  003282                     l106:
  6597                           
  6598                           ;UART_LIB.c: 24:             BRGH = 1;
  6599  003282  84AC               	bsf	4012,2,c	;volatile
  6600                           
  6601                           ;UART_LIB.c: 25:             TX9D = 0;
  6602  003284  90AC               	bcf	4012,0,c	;volatile
  6603  003286                     l4225:
  6604                           
  6605                           ;UART_LIB.c: 26:             RCSTA |= 0x02;
  6606  003286  82AB               	bsf	171,1,c	;volatile
  6607                           
  6608                           ;UART_LIB.c: 27:             break;
  6609  003288  EF64  F019         	goto	l110
  6610  00328C                     l108:
  6611                           
  6612                           ;UART_LIB.c: 29:             BRGH = 1;
  6613  00328C  84AC               	bsf	4012,2,c	;volatile
  6614                           
  6615                           ;UART_LIB.c: 30:             TX9D = 1;
  6616  00328E  80AC               	bsf	4012,0,c	;volatile
  6617  003290  EF43  F019         	goto	l4225
  6618  003294                     l109:
  6619                           
  6620                           ;UART_LIB.c: 34:             BRGH = 1;
  6621  003294  84AC               	bsf	4012,2,c	;volatile
  6622                           
  6623                           ;UART_LIB.c: 35:             TX9D = 0;
  6624  003296  90AC               	bcf	4012,0,c	;volatile
  6625  003298                     
  6626                           ;UART_LIB.c: 36:             RCSTA &= ~0x02;
  6627  003298  92AB               	bcf	171,1,c	;volatile
  6628                           
  6629                           ;UART_LIB.c: 37:             break;
  6630  00329A  EF64  F019         	goto	l110
  6631  00329E                     l4233:
  6632  00329E  5013               	movf	(UART_Init@config+5)^0,w,c
  6633  0032A0  6E16               	movwf	??_UART_Init^0,c
  6634  0032A2  6A17               	clrf	(??_UART_Init+1)^0,c
  6635                           
  6636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6637                           ; Switch size 1, requested type "simple"
  6638                           ; Number of cases is 1, Range of values is 0 to 0
  6639                           ; switch strategies available:
  6640                           ; Name         Instructions Cycles
  6641                           ; simple_byte            4     3 (average)
  6642                           ;	Chosen strategy is simple_byte
  6643  0032A4  5017               	movf	(??_UART_Init+1)^0,w,c
  6644  0032A6  0A00               	xorlw	0	; case 0
  6645  0032A8  B4D8               	btfsc	status,2,c
  6646  0032AA  EF59  F019         	goto	l4449
  6647  0032AE  EF4A  F019         	goto	l109
  6648  0032B2                     l4449:
  6649                           
  6650                           ; Switch size 1, requested type "simple"
  6651                           ; Number of cases is 2, Range of values is 1 to 2
  6652                           ; switch strategies available:
  6653                           ; Name         Instructions Cycles
  6654                           ; simple_byte            7     4 (average)
  6655                           ;	Chosen strategy is simple_byte
  6656  0032B2  5016               	movf	??_UART_Init^0,w,c
  6657  0032B4  0A01               	xorlw	1	; case 1
  6658  0032B6  B4D8               	btfsc	status,2,c
  6659  0032B8  EF41  F019         	goto	l106
  6660  0032BC  0A03               	xorlw	3	; case 2
  6661  0032BE  B4D8               	btfsc	status,2,c
  6662  0032C0  EF46  F019         	goto	l108
  6663  0032C4  EF4A  F019         	goto	l109
  6664  0032C8                     l110:
  6665  0032C8  0012               	return		;funcret
  6666  0032CA                     __end_of_UART_Init:
  6667                           	callstack 0
  6668                           
  6669 ;; *************** function ___lldiv *****************
  6670 ;; Defined at:
  6671 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  dividend        4    0[COMRAM] unsigned long 
  6674 ;;  divisor         4    4[COMRAM] unsigned long 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  quotient        4    8[COMRAM] unsigned long 
  6677 ;;  counter         1   12[COMRAM] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  4    0[COMRAM] unsigned long 
  6680 ;; Registers used:
  6681 ;;		wreg, status,2, status,0
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6687 ;;      Params:         8       0       0       0       0       0       0       0       0
  6688 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6690 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6691 ;;Total ram usage:       13 bytes
  6692 ;; Hardware stack levels used: 1
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_UART_Init
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text30
  6701  003806                     __ptext30:
  6702                           	callstack 0
  6703  003806                     ___lldiv:
  6704                           	callstack 29
  6705  003806  0E00               	movlw	0
  6706  003808  6E09               	movwf	___lldiv@quotient^0,c
  6707  00380A  0E00               	movlw	0
  6708  00380C  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6709  00380E  0E00               	movlw	0
  6710  003810  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6711  003812  0E00               	movlw	0
  6712  003814  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6713  003816  5005               	movf	___lldiv@divisor^0,w,c
  6714  003818  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6715  00381A  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6716  00381C  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6717  00381E  B4D8               	btfsc	status,2,c
  6718  003820  EF14  F01C         	goto	u4571
  6719  003824  EF16  F01C         	goto	u4570
  6720  003828                     u4571:
  6721  003828  EF4C  F01C         	goto	l202
  6722  00382C                     u4570:
  6723  00382C  0E01               	movlw	1
  6724  00382E  6E0D               	movwf	___lldiv@counter^0,c
  6725  003830  EF20  F01C         	goto	l4101
  6726  003834                     l4099:
  6727  003834  90D8               	bcf	status,0,c
  6728  003836  3605               	rlcf	___lldiv@divisor^0,f,c
  6729  003838  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6730  00383A  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6731  00383C  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6732  00383E  2A0D               	incf	___lldiv@counter^0,f,c
  6733  003840                     l4101:
  6734  003840  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6735  003842  EF25  F01C         	goto	u4581
  6736  003846  EF27  F01C         	goto	u4580
  6737  00384A                     u4581:
  6738  00384A  EF1A  F01C         	goto	l4099
  6739  00384E                     u4580:
  6740  00384E                     l4103:
  6741  00384E  90D8               	bcf	status,0,c
  6742  003850  3609               	rlcf	___lldiv@quotient^0,f,c
  6743  003852  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6744  003854  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6745  003856  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6746  003858  5005               	movf	___lldiv@divisor^0,w,c
  6747  00385A  5C01               	subwf	___lldiv@dividend^0,w,c
  6748  00385C  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6749  00385E  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6750  003860  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6751  003862  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6752  003864  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6753  003866  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6754  003868  A0D8               	btfss	status,0,c
  6755  00386A  EF39  F01C         	goto	u4591
  6756  00386E  EF3B  F01C         	goto	u4590
  6757  003872                     u4591:
  6758  003872  EF44  F01C         	goto	l4111
  6759  003876                     u4590:
  6760  003876  5005               	movf	___lldiv@divisor^0,w,c
  6761  003878  5E01               	subwf	___lldiv@dividend^0,f,c
  6762  00387A  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6763  00387C  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6764  00387E  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6765  003880  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6766  003882  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6767  003884  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6768  003886  8009               	bsf	___lldiv@quotient^0,0,c
  6769  003888                     l4111:
  6770  003888  90D8               	bcf	status,0,c
  6771  00388A  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6772  00388C  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6773  00388E  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6774  003890  3205               	rrcf	___lldiv@divisor^0,f,c
  6775  003892  2E0D               	decfsz	___lldiv@counter^0,f,c
  6776  003894  EF27  F01C         	goto	l4103
  6777  003898                     l202:
  6778  003898  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6779  00389C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6780  0038A0  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6781  0038A4  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6782  0038A8  0012               	return		;funcret
  6783  0038AA                     __end_of___lldiv:
  6784                           	callstack 0
  6785                           
  6786 ;; *************** function _PWM1_Start *****************
  6787 ;; Defined at:
  6788 ;;		line 68 in file "PWM_LIB.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;		None
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1    wreg      void 
  6795 ;; Registers used:
  6796 ;;		None
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6802 ;;      Params:         0       0       0       0       0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6805 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6806 ;;Total ram usage:        0 bytes
  6807 ;; Hardware stack levels used: 1
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_main
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text31
  6816  003D1C                     __ptext31:
  6817                           	callstack 0
  6818  003D1C                     _PWM1_Start:
  6819                           	callstack 30
  6820  003D1C                     
  6821                           ;PWM_LIB.c: 69:     T2CONbits.TMR2ON = 1;
  6822  003D1C  84CA               	bsf	202,2,c	;volatile
  6823  003D1E  0012               	return		;funcret
  6824  003D20                     __end_of_PWM1_Start:
  6825                           	callstack 0
  6826                           
  6827 ;; *************** function _PWM1_Set_Duty *****************
  6828 ;; Defined at:
  6829 ;;		line 60 in file "PWM_LIB.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  duty            1    wreg     unsigned char 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;  duty            1    0[BANK0 ] unsigned char 
  6834 ;;  val             4    1[BANK0 ] float 
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  1    wreg      void 
  6837 ;; Registers used:
  6838 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0
  6845 ;;      Locals:         0       5       0       0       0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6847 ;;      Totals:         0       5       0       0       0       0       0       0       0
  6848 ;;Total ram usage:        5 bytes
  6849 ;; Hardware stack levels used: 1
  6850 ;; Hardware stack levels required when called: 1
  6851 ;; This function calls:
  6852 ;;		___fldiv
  6853 ;;		___flmul
  6854 ;;		___fltol
  6855 ;;		___xxtofl
  6856 ;; This function is called by:
  6857 ;;		_main
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text32
  6862  0035F4                     __ptext32:
  6863                           	callstack 0
  6864  0035F4                     _PWM1_Set_Duty:
  6865                           	callstack 29
  6866                           
  6867                           ;incstack = 0
  6868                           ;PWM1_Set_Duty@duty stored from wreg
  6869  0035F4  0100               	movlb	0	; () banked
  6870  0035F6  6F60               	movwf	PWM1_Set_Duty@duty& (0+255),b
  6871  0035F8                     
  6872                           ;PWM_LIB.c: 61:     float val = duty*reg10bits/100.0;
  6873  0035F8  C0DF  F017         	movff	_reg10bits,___flmul@a
  6874  0035FC  C0E0  F018         	movff	_reg10bits+1,___flmul@a+1
  6875  003600  C0E1  F019         	movff	_reg10bits+2,___flmul@a+2
  6876  003604  C0E2  F01A         	movff	_reg10bits+3,___flmul@a+3
  6877  003608  0100               	movlb	0	; () banked
  6878  00360A  5160               	movf	PWM1_Set_Duty@duty& (0+255),w,b
  6879  00360C  6E05               	movwf	___xxtofl@val^0,c
  6880  00360E  6A06               	clrf	(___xxtofl@val+1)^0,c
  6881  003610  6A07               	clrf	(___xxtofl@val+2)^0,c
  6882  003612  6A08               	clrf	(___xxtofl@val+3)^0,c
  6883  003614  0E01               	movlw	1
  6884  003616  ECE8  F015         	call	___xxtofl
  6885  00361A  C005  F013         	movff	?___xxtofl,___flmul@b
  6886  00361E  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  6887  003622  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  6888  003626  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  6889  00362A  ECF3  F00E         	call	___flmul	;wreg free
  6890  00362E  C013  F02C         	movff	?___flmul,___fldiv@b
  6891  003632  C014  F02D         	movff	?___flmul+1,___fldiv@b+1
  6892  003636  C015  F02E         	movff	?___flmul+2,___fldiv@b+2
  6893  00363A  C016  F02F         	movff	?___flmul+3,___fldiv@b+3
  6894  00363E  0E00               	movlw	0
  6895  003640  6E30               	movwf	___fldiv@a^0,c
  6896  003642  0E00               	movlw	0
  6897  003644  6E31               	movwf	(___fldiv@a+1)^0,c
  6898  003646  0EC8               	movlw	200
  6899  003648  6E32               	movwf	(___fldiv@a+2)^0,c
  6900  00364A  0E42               	movlw	66
  6901  00364C  6E33               	movwf	(___fldiv@a+3)^0,c
  6902  00364E  EC08  F011         	call	___fldiv	;wreg free
  6903  003652  C02C  F061         	movff	?___fldiv,PWM1_Set_Duty@val
  6904  003656  C02D  F062         	movff	?___fldiv+1,PWM1_Set_Duty@val+1
  6905  00365A  C02E  F063         	movff	?___fldiv+2,PWM1_Set_Duty@val+2
  6906  00365E  C02F  F064         	movff	?___fldiv+3,PWM1_Set_Duty@val+3
  6907  003662                     
  6908                           ;PWM_LIB.c: 62:     CCPR1L = (int)(val)>>2;
  6909  003662  C061  F055         	movff	PWM1_Set_Duty@val,___fltol@f1
  6910  003666  C062  F056         	movff	PWM1_Set_Duty@val+1,___fltol@f1+1
  6911  00366A  C063  F057         	movff	PWM1_Set_Duty@val+2,___fltol@f1+2
  6912  00366E  C064  F058         	movff	PWM1_Set_Duty@val+3,___fltol@f1+3
  6913  003672  EC6D  F017         	call	___fltol	;wreg free
  6914  003676  3456               	rlcf	(?___fltol+1)^0,w,c
  6915  003678  3256               	rrcf	(?___fltol+1)^0,f,c
  6916  00367A  3255               	rrcf	?___fltol^0,f,c
  6917  00367C  3456               	rlcf	(?___fltol+1)^0,w,c
  6918  00367E  3256               	rrcf	(?___fltol+1)^0,f,c
  6919  003680  3255               	rrcf	?___fltol^0,f,c
  6920  003682  5055               	movf	?___fltol^0,w,c
  6921  003684  6EBE               	movwf	190,c	;volatile
  6922  003686                     
  6923                           ;PWM_LIB.c: 63:     CCP1CONbits.DC1B = (int)(val)& 0x003;
  6924  003686  C061  F055         	movff	PWM1_Set_Duty@val,___fltol@f1
  6925  00368A  C062  F056         	movff	PWM1_Set_Duty@val+1,___fltol@f1+1
  6926  00368E  C063  F057         	movff	PWM1_Set_Duty@val+2,___fltol@f1+2
  6927  003692  C064  F058         	movff	PWM1_Set_Duty@val+3,___fltol@f1+3
  6928  003696  EC6D  F017         	call	___fltol	;wreg free
  6929  00369A  0E03               	movlw	3
  6930  00369C  1655               	andwf	?___fltol^0,f,c
  6931  00369E  3A55               	swapf	?___fltol^0,f,c
  6932  0036A0  50BD               	movf	189,w,c	;volatile
  6933  0036A2  1855               	xorwf	?___fltol^0,w,c
  6934  0036A4  0BCF               	andlw	-49
  6935  0036A6  1855               	xorwf	?___fltol^0,w,c
  6936  0036A8  6EBD               	movwf	189,c	;volatile
  6937  0036AA  0012               	return		;funcret
  6938  0036AC                     __end_of_PWM1_Set_Duty:
  6939                           	callstack 0
  6940                           
  6941 ;; *************** function _PWM1_Init *****************
  6942 ;; Defined at:
  6943 ;;		line 7 in file "PWM_LIB.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  freq            2    0[BANK0 ] unsigned short 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  prees           1    8[BANK0 ] unsigned char 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      void 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6957 ;;      Params:         0       2       0       0       0       0       0       0       0
  6958 ;;      Locals:         0       5       0       0       0       0       0       0       0
  6959 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6960 ;;      Totals:         0       9       0       0       0       0       0       0       0
  6961 ;;Total ram usage:        9 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; Hardware stack levels required when called: 1
  6964 ;; This function calls:
  6965 ;;		___fladd
  6966 ;;		___fldiv
  6967 ;;		___flmul
  6968 ;;		___fltol
  6969 ;;		___xxtofl
  6970 ;; This function is called by:
  6971 ;;		_main
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text33
  6976  0025AA                     __ptext33:
  6977                           	callstack 0
  6978  0025AA                     _PWM1_Init:
  6979                           	callstack 29
  6980  0025AA                     
  6981                           ;PWM_LIB.c: 9:     uint8_t prees;;PWM_LIB.c: 11:     switch(2){
  6982  0025AA  EFE3  F012         	goto	l4179
  6983  0025AE                     l4171:
  6984                           
  6985                           ; BSR set to: 0
  6986  0025AE  0E01               	movlw	1
  6987  0025B0  6F68               	movwf	PWM1_Init@prees& (0+255),b
  6988  0025B2  EFFE  F012         	goto	l149
  6989  0025B6                     l4173:
  6990                           
  6991                           ; BSR set to: 0
  6992  0025B6  0E04               	movlw	4
  6993  0025B8  6F68               	movwf	PWM1_Init@prees& (0+255),b
  6994  0025BA  EFFE  F012         	goto	l149
  6995  0025BE                     l4175:
  6996                           
  6997                           ; BSR set to: 0
  6998  0025BE  0E10               	movlw	16
  6999  0025C0  6F68               	movwf	PWM1_Init@prees& (0+255),b
  7000  0025C2  EFFE  F012         	goto	l149
  7001  0025C6                     l4179:
  7002  0025C6  0E02               	movlw	2
  7003  0025C8  0100               	movlb	0	; () banked
  7004  0025CA  6F62               	movwf	??_PWM1_Init& (0+255),b
  7005  0025CC  0E00               	movlw	0
  7006  0025CE  6F63               	movwf	(??_PWM1_Init+1)& (0+255),b
  7007                           
  7008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7009                           ; Switch size 1, requested type "simple"
  7010                           ; Number of cases is 1, Range of values is 0 to 0
  7011                           ; switch strategies available:
  7012                           ; Name         Instructions Cycles
  7013                           ; simple_byte            4     3 (average)
  7014                           ;	Chosen strategy is simple_byte
  7015  0025D0  5163               	movf	(??_PWM1_Init+1)& (0+255),w,b
  7016  0025D2  0A00               	xorlw	0	; case 0
  7017  0025D4  B4D8               	btfsc	status,2,c
  7018  0025D6  EFEF  F012         	goto	l4451
  7019  0025DA  EFFE  F012         	goto	l149
  7020  0025DE                     l4451:
  7021                           
  7022                           ; BSR set to: 0
  7023                           ; Switch size 1, requested type "simple"
  7024                           ; Number of cases is 3, Range of values is 0 to 2
  7025                           ; switch strategies available:
  7026                           ; Name         Instructions Cycles
  7027                           ; simple_byte           10     6 (average)
  7028                           ;	Chosen strategy is simple_byte
  7029  0025DE  5162               	movf	??_PWM1_Init& (0+255),w,b
  7030  0025E0  0A00               	xorlw	0	; case 0
  7031  0025E2  B4D8               	btfsc	status,2,c
  7032  0025E4  EFD7  F012         	goto	l4171
  7033  0025E8  0A01               	xorlw	1	; case 1
  7034  0025EA  B4D8               	btfsc	status,2,c
  7035  0025EC  EFDB  F012         	goto	l4173
  7036  0025F0  0A03               	xorlw	3	; case 2
  7037  0025F2  B4D8               	btfsc	status,2,c
  7038  0025F4  EFDF  F012         	goto	l4175
  7039  0025F8  EFFE  F012         	goto	l149
  7040  0025FC                     l149:
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;PWM_LIB.c: 18:     TRISCbits.TRISC2 = 0;
  7044  0025FC  9494               	bcf	148,2,c	;volatile
  7045  0025FE                     
  7046                           ; BSR set to: 0
  7047                           ;PWM_LIB.c: 21:     CCP1CONbits.CCP1M = 0b1100;
  7048  0025FE  50BD               	movf	189,w,c	;volatile
  7049  002600  0BF0               	andlw	-16
  7050  002602  090C               	iorlw	12
  7051  002604  6EBD               	movwf	189,c	;volatile
  7052                           
  7053                           ;PWM_LIB.c: 24:     T2CONbits.T2CKPS = 2;
  7054  002606  50CA               	movf	202,w,c	;volatile
  7055  002608  0BFC               	andlw	-4
  7056  00260A  0902               	iorlw	2
  7057  00260C  6ECA               	movwf	202,c	;volatile
  7058  00260E                     
  7059                           ; BSR set to: 0
  7060                           ;PWM_LIB.c: 27:     PR2 = (uint8_t)((20000000UL / (4.0*freq*prees) ) - 1.0);
  7061  00260E  0E00               	movlw	0
  7062  002610  6E17               	movwf	___flmul@a^0,c
  7063  002612  0E00               	movlw	0
  7064  002614  6E18               	movwf	(___flmul@a+1)^0,c
  7065  002616  0E80               	movlw	128
  7066  002618  6E19               	movwf	(___flmul@a+2)^0,c
  7067  00261A  0E40               	movlw	64
  7068  00261C  6E1A               	movwf	(___flmul@a+3)^0,c
  7069  00261E  C060  F005         	movff	PWM1_Init@freq,___xxtofl@val
  7070  002622  C061  F006         	movff	PWM1_Init@freq+1,___xxtofl@val+1
  7071  002626  6A07               	clrf	(___xxtofl@val+2)^0,c
  7072  002628  6A08               	clrf	(___xxtofl@val+3)^0,c
  7073  00262A  0E00               	movlw	0
  7074  00262C  ECE8  F015         	call	___xxtofl
  7075  002630  C005  F013         	movff	?___xxtofl,___flmul@b
  7076  002634  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  7077  002638  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  7078  00263C  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  7079  002640  ECF3  F00E         	call	___flmul	;wreg free
  7080  002644  C013  F064         	movff	?___flmul,_PWM1_Init$1540
  7081  002648  C014  F065         	movff	?___flmul+1,_PWM1_Init$1540+1
  7082  00264C  C015  F066         	movff	?___flmul+2,_PWM1_Init$1540+2
  7083  002650  C016  F067         	movff	?___flmul+3,_PWM1_Init$1540+3
  7084  002654                     
  7085                           ;PWM_LIB.c: 27:     PR2 = (uint8_t)((20000000UL / (4.0*freq*prees) ) - 1.0);
  7086  002654  0E00               	movlw	0
  7087  002656  6E49               	movwf	___fladd@a^0,c
  7088  002658  0E00               	movlw	0
  7089  00265A  6E4A               	movwf	(___fladd@a+1)^0,c
  7090  00265C  0E80               	movlw	128
  7091  00265E  6E4B               	movwf	(___fladd@a+2)^0,c
  7092  002660  0EBF               	movlw	191
  7093  002662  6E4C               	movwf	(___fladd@a+3)^0,c
  7094  002664  0100               	movlb	0	; () banked
  7095  002666  5168               	movf	PWM1_Init@prees& (0+255),w,b
  7096  002668  6E05               	movwf	___xxtofl@val^0,c
  7097  00266A  6A06               	clrf	(___xxtofl@val+1)^0,c
  7098  00266C  6A07               	clrf	(___xxtofl@val+2)^0,c
  7099  00266E  6A08               	clrf	(___xxtofl@val+3)^0,c
  7100  002670  0E01               	movlw	1
  7101  002672  ECE8  F015         	call	___xxtofl
  7102  002676  C005  F017         	movff	?___xxtofl,___flmul@a
  7103  00267A  C006  F018         	movff	?___xxtofl+1,___flmul@a+1
  7104  00267E  C007  F019         	movff	?___xxtofl+2,___flmul@a+2
  7105  002682  C008  F01A         	movff	?___xxtofl+3,___flmul@a+3
  7106  002686  C064  F013         	movff	_PWM1_Init$1540,___flmul@b
  7107  00268A  C065  F014         	movff	_PWM1_Init$1540+1,___flmul@b+1
  7108  00268E  C066  F015         	movff	_PWM1_Init$1540+2,___flmul@b+2
  7109  002692  C067  F016         	movff	_PWM1_Init$1540+3,___flmul@b+3
  7110  002696  ECF3  F00E         	call	___flmul	;wreg free
  7111  00269A  C013  F030         	movff	?___flmul,___fldiv@a
  7112  00269E  C014  F031         	movff	?___flmul+1,___fldiv@a+1
  7113  0026A2  C015  F032         	movff	?___flmul+2,___fldiv@a+2
  7114  0026A6  C016  F033         	movff	?___flmul+3,___fldiv@a+3
  7115  0026AA  0E80               	movlw	128
  7116  0026AC  6E2C               	movwf	___fldiv@b^0,c
  7117  0026AE  0E96               	movlw	150
  7118  0026B0  6E2D               	movwf	(___fldiv@b+1)^0,c
  7119  0026B2  0E98               	movlw	152
  7120  0026B4  6E2E               	movwf	(___fldiv@b+2)^0,c
  7121  0026B6  0E4B               	movlw	75
  7122  0026B8  6E2F               	movwf	(___fldiv@b+3)^0,c
  7123  0026BA  EC08  F011         	call	___fldiv	;wreg free
  7124  0026BE  C02C  F045         	movff	?___fldiv,___fladd@b
  7125  0026C2  C02D  F046         	movff	?___fldiv+1,___fladd@b+1
  7126  0026C6  C02E  F047         	movff	?___fldiv+2,___fladd@b+2
  7127  0026CA  C02F  F048         	movff	?___fldiv+3,___fladd@b+3
  7128  0026CE  EC93  F00C         	call	___fladd	;wreg free
  7129  0026D2  C045  F055         	movff	?___fladd,___fltol@f1
  7130  0026D6  C046  F056         	movff	?___fladd+1,___fltol@f1+1
  7131  0026DA  C047  F057         	movff	?___fladd+2,___fltol@f1+2
  7132  0026DE  C048  F058         	movff	?___fladd+3,___fltol@f1+3
  7133  0026E2  EC6D  F017         	call	___fltol	;wreg free
  7134  0026E6  5055               	movf	?___fltol^0,w,c
  7135  0026E8  6ECB               	movwf	203,c	;volatile
  7136  0026EA                     
  7137                           ;PWM_LIB.c: 29:     reg10bits = (20000000UL/(1.0*freq*prees));
  7138  0026EA  0E00               	movlw	0
  7139  0026EC  6E17               	movwf	___flmul@a^0,c
  7140  0026EE  0E00               	movlw	0
  7141  0026F0  6E18               	movwf	(___flmul@a+1)^0,c
  7142  0026F2  0E80               	movlw	128
  7143  0026F4  6E19               	movwf	(___flmul@a+2)^0,c
  7144  0026F6  0E3F               	movlw	63
  7145  0026F8  6E1A               	movwf	(___flmul@a+3)^0,c
  7146  0026FA  C060  F005         	movff	PWM1_Init@freq,___xxtofl@val
  7147  0026FE  C061  F006         	movff	PWM1_Init@freq+1,___xxtofl@val+1
  7148  002702  6A07               	clrf	(___xxtofl@val+2)^0,c
  7149  002704  6A08               	clrf	(___xxtofl@val+3)^0,c
  7150  002706  0E00               	movlw	0
  7151  002708  ECE8  F015         	call	___xxtofl
  7152  00270C  C005  F013         	movff	?___xxtofl,___flmul@b
  7153  002710  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  7154  002714  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  7155  002718  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  7156  00271C  ECF3  F00E         	call	___flmul	;wreg free
  7157  002720  C013  F064         	movff	?___flmul,_PWM1_Init$1540
  7158  002724  C014  F065         	movff	?___flmul+1,_PWM1_Init$1540+1
  7159  002728  C015  F066         	movff	?___flmul+2,_PWM1_Init$1540+2
  7160  00272C  C016  F067         	movff	?___flmul+3,_PWM1_Init$1540+3
  7161  002730                     
  7162                           ;PWM_LIB.c: 29:     reg10bits = (20000000UL/(1.0*freq*prees));
  7163  002730  0E80               	movlw	128
  7164  002732  6E2C               	movwf	___fldiv@b^0,c
  7165  002734  0E96               	movlw	150
  7166  002736  6E2D               	movwf	(___fldiv@b+1)^0,c
  7167  002738  0E98               	movlw	152
  7168  00273A  6E2E               	movwf	(___fldiv@b+2)^0,c
  7169  00273C  0E4B               	movlw	75
  7170  00273E  6E2F               	movwf	(___fldiv@b+3)^0,c
  7171  002740  0100               	movlb	0	; () banked
  7172  002742  5168               	movf	PWM1_Init@prees& (0+255),w,b
  7173  002744  6E05               	movwf	___xxtofl@val^0,c
  7174  002746  6A06               	clrf	(___xxtofl@val+1)^0,c
  7175  002748  6A07               	clrf	(___xxtofl@val+2)^0,c
  7176  00274A  6A08               	clrf	(___xxtofl@val+3)^0,c
  7177  00274C  0E01               	movlw	1
  7178  00274E  ECE8  F015         	call	___xxtofl
  7179  002752  C005  F017         	movff	?___xxtofl,___flmul@a
  7180  002756  C006  F018         	movff	?___xxtofl+1,___flmul@a+1
  7181  00275A  C007  F019         	movff	?___xxtofl+2,___flmul@a+2
  7182  00275E  C008  F01A         	movff	?___xxtofl+3,___flmul@a+3
  7183  002762  C064  F013         	movff	_PWM1_Init$1540,___flmul@b
  7184  002766  C065  F014         	movff	_PWM1_Init$1540+1,___flmul@b+1
  7185  00276A  C066  F015         	movff	_PWM1_Init$1540+2,___flmul@b+2
  7186  00276E  C067  F016         	movff	_PWM1_Init$1540+3,___flmul@b+3
  7187  002772  ECF3  F00E         	call	___flmul	;wreg free
  7188  002776  C013  F030         	movff	?___flmul,___fldiv@a
  7189  00277A  C014  F031         	movff	?___flmul+1,___fldiv@a+1
  7190  00277E  C015  F032         	movff	?___flmul+2,___fldiv@a+2
  7191  002782  C016  F033         	movff	?___flmul+3,___fldiv@a+3
  7192  002786  EC08  F011         	call	___fldiv	;wreg free
  7193  00278A  C02C  F0DF         	movff	?___fldiv,_reg10bits
  7194  00278E  C02D  F0E0         	movff	?___fldiv+1,_reg10bits+1
  7195  002792  C02E  F0E1         	movff	?___fldiv+2,_reg10bits+2
  7196  002796  C02F  F0E2         	movff	?___fldiv+3,_reg10bits+3
  7197  00279A                     
  7198                           ;PWM_LIB.c: 31:     CCPR1L = (int)(reg10bits)>>2;
  7199  00279A  C0DF  F055         	movff	_reg10bits,___fltol@f1
  7200  00279E  C0E0  F056         	movff	_reg10bits+1,___fltol@f1+1
  7201  0027A2  C0E1  F057         	movff	_reg10bits+2,___fltol@f1+2
  7202  0027A6  C0E2  F058         	movff	_reg10bits+3,___fltol@f1+3
  7203  0027AA  EC6D  F017         	call	___fltol	;wreg free
  7204  0027AE  3456               	rlcf	(?___fltol+1)^0,w,c
  7205  0027B0  3256               	rrcf	(?___fltol+1)^0,f,c
  7206  0027B2  3255               	rrcf	?___fltol^0,f,c
  7207  0027B4  3456               	rlcf	(?___fltol+1)^0,w,c
  7208  0027B6  3256               	rrcf	(?___fltol+1)^0,f,c
  7209  0027B8  3255               	rrcf	?___fltol^0,f,c
  7210  0027BA  5055               	movf	?___fltol^0,w,c
  7211  0027BC  6EBE               	movwf	190,c	;volatile
  7212  0027BE                     
  7213                           ;PWM_LIB.c: 32:     CCP1CONbits.DC1B = (int)(reg10bits)& 0x003;
  7214  0027BE  C0DF  F055         	movff	_reg10bits,___fltol@f1
  7215  0027C2  C0E0  F056         	movff	_reg10bits+1,___fltol@f1+1
  7216  0027C6  C0E1  F057         	movff	_reg10bits+2,___fltol@f1+2
  7217  0027CA  C0E2  F058         	movff	_reg10bits+3,___fltol@f1+3
  7218  0027CE  EC6D  F017         	call	___fltol	;wreg free
  7219  0027D2  0E03               	movlw	3
  7220  0027D4  1655               	andwf	?___fltol^0,f,c
  7221  0027D6  3A55               	swapf	?___fltol^0,f,c
  7222  0027D8  50BD               	movf	189,w,c	;volatile
  7223  0027DA  1855               	xorwf	?___fltol^0,w,c
  7224  0027DC  0BCF               	andlw	-49
  7225  0027DE  1855               	xorwf	?___fltol^0,w,c
  7226  0027E0  6EBD               	movwf	189,c	;volatile
  7227  0027E2  0012               	return		;funcret
  7228  0027E4                     __end_of_PWM1_Init:
  7229                           	callstack 0
  7230                           
  7231 ;; *************** function ___xxtofl *****************
  7232 ;; Defined at:
  7233 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  sign            1    wreg     unsigned char 
  7236 ;;  val             4    4[COMRAM] long 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  sign            1   12[COMRAM] unsigned char 
  7239 ;;  arg             4   14[COMRAM] unsigned long 
  7240 ;;  exp             1   13[COMRAM] unsigned char 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  4    4[COMRAM] unsigned char 
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, status,0
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7250 ;;      Params:         4       0       0       0       0       0       0       0       0
  7251 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7252 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7253 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7254 ;;Total ram usage:       14 bytes
  7255 ;; Hardware stack levels used: 1
  7256 ;; This function calls:
  7257 ;;		Nothing
  7258 ;; This function is called by:
  7259 ;;		_main
  7260 ;;		_PWM1_Init
  7261 ;;		_PWM1_Set_Duty
  7262 ;;		_PWM2_Init
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           	psect	text34
  7267  002BD0                     __ptext34:
  7268                           	callstack 0
  7269  002BD0                     ___xxtofl:
  7270                           	callstack 30
  7271                           
  7272                           ;incstack = 0
  7273                           ;___xxtofl@sign stored from wreg
  7274  002BD0  6E0D               	movwf	___xxtofl@sign^0,c
  7275  002BD2  500D               	movf	___xxtofl@sign^0,w,c
  7276  002BD4  B4D8               	btfsc	status,2,c
  7277  002BD6  EFEF  F015         	goto	u4601
  7278  002BDA  EFF1  F015         	goto	u4600
  7279  002BDE                     u4601:
  7280  002BDE  EF13  F016         	goto	l830
  7281  002BE2                     u4600:
  7282  002BE2  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7283  002BE4  EFF8  F015         	goto	u4610
  7284  002BE8  EFF6  F015         	goto	u4611
  7285  002BEC                     u4611:
  7286  002BEC  EF13  F016         	goto	l830
  7287  002BF0                     u4610:
  7288  002BF0  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7289  002BF4  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7290  002BF8  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7291  002BFC  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7292  002C00  1E09               	comf	??___xxtofl^0,f,c
  7293  002C02  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7294  002C04  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7295  002C06  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7296  002C08  2A09               	incf	??___xxtofl^0,f,c
  7297  002C0A  0E00               	movlw	0
  7298  002C0C  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7299  002C0E  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7300  002C10  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7301  002C12  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7302  002C16  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7303  002C1A  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7304  002C1E  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7305  002C22  EF1B  F016         	goto	l4121
  7306  002C26                     l830:
  7307  002C26  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7308  002C2A  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7309  002C2E  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7310  002C32  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7311  002C36                     l4121:
  7312  002C36  5005               	movf	___xxtofl@val^0,w,c
  7313  002C38  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7314  002C3A  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7315  002C3C  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7316  002C3E  A4D8               	btfss	status,2,c
  7317  002C40  EF24  F016         	goto	u4621
  7318  002C44  EF26  F016         	goto	u4620
  7319  002C48                     u4621:
  7320  002C48  EF30  F016         	goto	l4127
  7321  002C4C                     u4620:
  7322  002C4C  0E00               	movlw	0
  7323  002C4E  6E05               	movwf	?___xxtofl^0,c
  7324  002C50  0E00               	movlw	0
  7325  002C52  6E06               	movwf	(?___xxtofl+1)^0,c
  7326  002C54  0E00               	movlw	0
  7327  002C56  6E07               	movwf	(?___xxtofl+2)^0,c
  7328  002C58  0E00               	movlw	0
  7329  002C5A  6E08               	movwf	(?___xxtofl+3)^0,c
  7330  002C5C  EFC1  F016         	goto	l833
  7331  002C60                     l4127:
  7332  002C60  0E96               	movlw	150
  7333  002C62  6E0E               	movwf	___xxtofl@exp^0,c
  7334  002C64  EF3A  F016         	goto	l4131
  7335  002C68                     l4129:
  7336  002C68  2A0E               	incf	___xxtofl@exp^0,f,c
  7337  002C6A  90D8               	bcf	status,0,c
  7338  002C6C  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7339  002C6E  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7340  002C70  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7341  002C72  320F               	rrcf	___xxtofl@arg^0,f,c
  7342  002C74                     l4131:
  7343  002C74  0E00               	movlw	0
  7344  002C76  140F               	andwf	___xxtofl@arg^0,w,c
  7345  002C78  6E09               	movwf	??___xxtofl^0,c
  7346  002C7A  0E00               	movlw	0
  7347  002C7C  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7348  002C7E  6E0A               	movwf	(??___xxtofl+1)^0,c
  7349  002C80  0E00               	movlw	0
  7350  002C82  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7351  002C84  6E0B               	movwf	(??___xxtofl+2)^0,c
  7352  002C86  0EFE               	movlw	254
  7353  002C88  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7354  002C8A  6E0C               	movwf	(??___xxtofl+3)^0,c
  7355  002C8C  5009               	movf	??___xxtofl^0,w,c
  7356  002C8E  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7357  002C90  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7358  002C92  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7359  002C94  A4D8               	btfss	status,2,c
  7360  002C96  EF4F  F016         	goto	u4631
  7361  002C9A  EF51  F016         	goto	u4630
  7362  002C9E                     u4631:
  7363  002C9E  EF34  F016         	goto	l4129
  7364  002CA2                     u4630:
  7365  002CA2  EF5F  F016         	goto	l837
  7366  002CA6                     l4133:
  7367  002CA6  2A0E               	incf	___xxtofl@exp^0,f,c
  7368  002CA8  0E01               	movlw	1
  7369  002CAA  260F               	addwf	___xxtofl@arg^0,f,c
  7370  002CAC  0E00               	movlw	0
  7371  002CAE  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7372  002CB0  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7373  002CB2  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7374  002CB4  90D8               	bcf	status,0,c
  7375  002CB6  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7376  002CB8  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7377  002CBA  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7378  002CBC  320F               	rrcf	___xxtofl@arg^0,f,c
  7379  002CBE                     l837:
  7380  002CBE  0E00               	movlw	0
  7381  002CC0  140F               	andwf	___xxtofl@arg^0,w,c
  7382  002CC2  6E09               	movwf	??___xxtofl^0,c
  7383  002CC4  0E00               	movlw	0
  7384  002CC6  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7385  002CC8  6E0A               	movwf	(??___xxtofl+1)^0,c
  7386  002CCA  0E00               	movlw	0
  7387  002CCC  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7388  002CCE  6E0B               	movwf	(??___xxtofl+2)^0,c
  7389  002CD0  0EFF               	movlw	255
  7390  002CD2  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7391  002CD4  6E0C               	movwf	(??___xxtofl+3)^0,c
  7392  002CD6  5009               	movf	??___xxtofl^0,w,c
  7393  002CD8  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7394  002CDA  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7395  002CDC  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7396  002CDE  A4D8               	btfss	status,2,c
  7397  002CE0  EF74  F016         	goto	u4641
  7398  002CE4  EF76  F016         	goto	u4640
  7399  002CE8                     u4641:
  7400  002CE8  EF53  F016         	goto	l4133
  7401  002CEC                     u4640:
  7402  002CEC  EF7E  F016         	goto	l4141
  7403  002CF0                     l4139:
  7404  002CF0  060E               	decf	___xxtofl@exp^0,f,c
  7405  002CF2  90D8               	bcf	status,0,c
  7406  002CF4  360F               	rlcf	___xxtofl@arg^0,f,c
  7407  002CF6  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7408  002CF8  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7409  002CFA  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7410  002CFC                     l4141:
  7411  002CFC  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7412  002CFE  EF83  F016         	goto	u4651
  7413  002D02  EF85  F016         	goto	u4650
  7414  002D06                     u4651:
  7415  002D06  EF8D  F016         	goto	l844
  7416  002D0A                     u4650:
  7417  002D0A  0E02               	movlw	2
  7418  002D0C  600E               	cpfslt	___xxtofl@exp^0,c
  7419  002D0E  EF8B  F016         	goto	u4661
  7420  002D12  EF8D  F016         	goto	u4660
  7421  002D16                     u4661:
  7422  002D16  EF78  F016         	goto	l4139
  7423  002D1A                     u4660:
  7424  002D1A                     l844:
  7425  002D1A  B00E               	btfsc	___xxtofl@exp^0,0,c
  7426  002D1C  EF92  F016         	goto	u4671
  7427  002D20  EF94  F016         	goto	u4670
  7428  002D24                     u4671:
  7429  002D24  EF95  F016         	goto	l4147
  7430  002D28                     u4670:
  7431  002D28  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7432  002D2A                     l4147:
  7433  002D2A  90D8               	bcf	status,0,c
  7434  002D2C  320E               	rrcf	___xxtofl@exp^0,f,c
  7435  002D2E  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7436  002D32  6A0A               	clrf	(??___xxtofl+1)^0,c
  7437  002D34  6A0B               	clrf	(??___xxtofl+2)^0,c
  7438  002D36  6A0C               	clrf	(??___xxtofl+3)^0,c
  7439  002D38  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7440  002D3C  6A0B               	clrf	(??___xxtofl+2)^0,c
  7441  002D3E  6A0A               	clrf	(??___xxtofl+1)^0,c
  7442  002D40  6A09               	clrf	??___xxtofl^0,c
  7443  002D42  5009               	movf	??___xxtofl^0,w,c
  7444  002D44  120F               	iorwf	___xxtofl@arg^0,f,c
  7445  002D46  500A               	movf	(??___xxtofl+1)^0,w,c
  7446  002D48  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7447  002D4A  500B               	movf	(??___xxtofl+2)^0,w,c
  7448  002D4C  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7449  002D4E  500C               	movf	(??___xxtofl+3)^0,w,c
  7450  002D50  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7451  002D52  500D               	movf	___xxtofl@sign^0,w,c
  7452  002D54  B4D8               	btfsc	status,2,c
  7453  002D56  EFAF  F016         	goto	u4681
  7454  002D5A  EFB1  F016         	goto	u4680
  7455  002D5E                     u4681:
  7456  002D5E  EFB9  F016         	goto	l4157
  7457  002D62                     u4680:
  7458  002D62  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7459  002D64  EFB8  F016         	goto	u4690
  7460  002D68  EFB6  F016         	goto	u4691
  7461  002D6C                     u4691:
  7462  002D6C  EFB9  F016         	goto	l4157
  7463  002D70                     u4690:
  7464  002D70  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7465  002D72                     l4157:
  7466  002D72  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7467  002D76  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7468  002D7A  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7469  002D7E  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7470  002D82                     l833:
  7471  002D82  0012               	return		;funcret
  7472  002D84                     __end_of___xxtofl:
  7473                           	callstack 0
  7474                           
  7475 ;; *************** function ___fltol *****************
  7476 ;; Defined at:
  7477 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  f1              4   84[COMRAM] unsigned char 
  7480 ;; Auto vars:     Size  Location     Type
  7481 ;;  exp1            1   93[COMRAM] unsigned char 
  7482 ;;  sign1           1   92[COMRAM] unsigned char 
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  4   84[COMRAM] long 
  7485 ;; Registers used:
  7486 ;;		wreg, status,2, status,0
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7492 ;;      Params:         4       0       0       0       0       0       0       0       0
  7493 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7494 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7495 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7496 ;;Total ram usage:       10 bytes
  7497 ;; Hardware stack levels used: 1
  7498 ;; This function calls:
  7499 ;;		Nothing
  7500 ;; This function is called by:
  7501 ;;		_main
  7502 ;;		_PWM1_Init
  7503 ;;		_PWM1_Set_Duty
  7504 ;;		_efgtoa
  7505 ;;		_PWM2_Init
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           	psect	text35
  7510  002EDA                     __ptext35:
  7511                           	callstack 0
  7512  002EDA                     ___fltol:
  7513                           	callstack 26
  7514  002EDA  3457               	rlcf	(___fltol@f1+2)^0,w,c
  7515  002EDC  3458               	rlcf	(___fltol@f1+3)^0,w,c
  7516  002EDE  6E5E               	movwf	___fltol@exp1^0,c
  7517  002EE0  505E               	movf	___fltol@exp1^0,w,c
  7518  002EE2  A4D8               	btfss	status,2,c
  7519  002EE4  EF76  F017         	goto	u3521
  7520  002EE8  EF78  F017         	goto	u3520
  7521  002EEC                     u3521:
  7522  002EEC  EF82  F017         	goto	l3465
  7523  002EF0                     u3520:
  7524  002EF0                     l3461:
  7525  002EF0  0E00               	movlw	0
  7526  002EF2  6E55               	movwf	?___fltol^0,c
  7527  002EF4  0E00               	movlw	0
  7528  002EF6  6E56               	movwf	(?___fltol+1)^0,c
  7529  002EF8  0E00               	movlw	0
  7530  002EFA  6E57               	movwf	(?___fltol+2)^0,c
  7531  002EFC  0E00               	movlw	0
  7532  002EFE  6E58               	movwf	(?___fltol+3)^0,c
  7533  002F00  EFEF  F017         	goto	l472
  7534  002F04                     l3465:
  7535  002F04  C055  F059         	movff	___fltol@f1,??___fltol
  7536  002F08  C056  F05A         	movff	___fltol@f1+1,??___fltol+1
  7537  002F0C  C057  F05B         	movff	___fltol@f1+2,??___fltol+2
  7538  002F10  C058  F05C         	movff	___fltol@f1+3,??___fltol+3
  7539  002F14  0E20               	movlw	32
  7540  002F16  EF92  F017         	goto	u3530
  7541  002F1A                     u3535:
  7542  002F1A  90D8               	bcf	status,0,c
  7543  002F1C  325C               	rrcf	(??___fltol+3)^0,f,c
  7544  002F1E  325B               	rrcf	(??___fltol+2)^0,f,c
  7545  002F20  325A               	rrcf	(??___fltol+1)^0,f,c
  7546  002F22  3259               	rrcf	??___fltol^0,f,c
  7547  002F24                     u3530:
  7548  002F24  2EE8               	decfsz	wreg,f,c
  7549  002F26  EF8D  F017         	goto	u3535
  7550  002F2A  5059               	movf	??___fltol^0,w,c
  7551  002F2C  6E5D               	movwf	___fltol@sign1^0,c
  7552  002F2E  8E57               	bsf	(___fltol@f1+2)^0,7,c
  7553  002F30  0EFF               	movlw	255
  7554  002F32  1655               	andwf	___fltol@f1^0,f,c
  7555  002F34  0EFF               	movlw	255
  7556  002F36  1656               	andwf	(___fltol@f1+1)^0,f,c
  7557  002F38  0EFF               	movlw	255
  7558  002F3A  1657               	andwf	(___fltol@f1+2)^0,f,c
  7559  002F3C  0E00               	movlw	0
  7560  002F3E  1658               	andwf	(___fltol@f1+3)^0,f,c
  7561  002F40  0E96               	movlw	150
  7562  002F42  5E5E               	subwf	___fltol@exp1^0,f,c
  7563  002F44  BE5E               	btfsc	___fltol@exp1^0,7,c
  7564  002F46  EFA9  F017         	goto	u3540
  7565  002F4A  EFA7  F017         	goto	u3541
  7566  002F4E                     u3541:
  7567  002F4E  EFBF  F017         	goto	l3485
  7568  002F52                     u3540:
  7569  002F52  505E               	movf	___fltol@exp1^0,w,c
  7570  002F54  0A80               	xorlw	128
  7571  002F56  0F97               	addlw	151
  7572  002F58  B0D8               	btfsc	status,0,c
  7573  002F5A  EFB1  F017         	goto	u3551
  7574  002F5E  EFB3  F017         	goto	u3550
  7575  002F62                     u3551:
  7576  002F62  EFB5  F017         	goto	l3481
  7577  002F66                     u3550:
  7578  002F66  EF78  F017         	goto	l3461
  7579  002F6A                     l3481:
  7580  002F6A  90D8               	bcf	status,0,c
  7581  002F6C  3258               	rrcf	(___fltol@f1+3)^0,f,c
  7582  002F6E  3257               	rrcf	(___fltol@f1+2)^0,f,c
  7583  002F70  3256               	rrcf	(___fltol@f1+1)^0,f,c
  7584  002F72  3255               	rrcf	___fltol@f1^0,f,c
  7585  002F74  3E5E               	incfsz	___fltol@exp1^0,f,c
  7586  002F76  EFB5  F017         	goto	l3481
  7587  002F7A  EFD7  F017         	goto	l3495
  7588  002F7E                     l3485:
  7589  002F7E  0E1F               	movlw	31
  7590  002F80  645E               	cpfsgt	___fltol@exp1^0,c
  7591  002F82  EFC5  F017         	goto	u3561
  7592  002F86  EFC7  F017         	goto	u3560
  7593  002F8A                     u3561:
  7594  002F8A  EFCF  F017         	goto	l3493
  7595  002F8E                     u3560:
  7596  002F8E  EF78  F017         	goto	l3461
  7597  002F92                     l3491:
  7598  002F92  90D8               	bcf	status,0,c
  7599  002F94  3655               	rlcf	___fltol@f1^0,f,c
  7600  002F96  3656               	rlcf	(___fltol@f1+1)^0,f,c
  7601  002F98  3657               	rlcf	(___fltol@f1+2)^0,f,c
  7602  002F9A  3658               	rlcf	(___fltol@f1+3)^0,f,c
  7603  002F9C  065E               	decf	___fltol@exp1^0,f,c
  7604  002F9E                     l3493:
  7605  002F9E  505E               	movf	___fltol@exp1^0,w,c
  7606  002FA0  A4D8               	btfss	status,2,c
  7607  002FA2  EFD5  F017         	goto	u3571
  7608  002FA6  EFD7  F017         	goto	u3570
  7609  002FAA                     u3571:
  7610  002FAA  EFC9  F017         	goto	l3491
  7611  002FAE                     u3570:
  7612  002FAE                     l3495:
  7613  002FAE  505D               	movf	___fltol@sign1^0,w,c
  7614  002FB0  B4D8               	btfsc	status,2,c
  7615  002FB2  EFDD  F017         	goto	u3581
  7616  002FB6  EFDF  F017         	goto	u3580
  7617  002FBA                     u3581:
  7618  002FBA  EFE7  F017         	goto	l3499
  7619  002FBE                     u3580:
  7620  002FBE  1E58               	comf	(___fltol@f1+3)^0,f,c
  7621  002FC0  1E57               	comf	(___fltol@f1+2)^0,f,c
  7622  002FC2  1E56               	comf	(___fltol@f1+1)^0,f,c
  7623  002FC4  6C55               	negf	___fltol@f1^0,c
  7624  002FC6  0E00               	movlw	0
  7625  002FC8  2256               	addwfc	(___fltol@f1+1)^0,f,c
  7626  002FCA  2257               	addwfc	(___fltol@f1+2)^0,f,c
  7627  002FCC  2258               	addwfc	(___fltol@f1+3)^0,f,c
  7628  002FCE                     l3499:
  7629  002FCE  C055  F055         	movff	___fltol@f1,?___fltol
  7630  002FD2  C056  F056         	movff	___fltol@f1+1,?___fltol+1
  7631  002FD6  C057  F057         	movff	___fltol@f1+2,?___fltol+2
  7632  002FDA  C058  F058         	movff	___fltol@f1+3,?___fltol+3
  7633  002FDE                     l472:
  7634  002FDE  0012               	return		;funcret
  7635  002FE0                     __end_of___fltol:
  7636                           	callstack 0
  7637                           
  7638 ;; *************** function ___flmul *****************
  7639 ;; Defined at:
  7640 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  b               4   18[COMRAM] long 
  7643 ;;  a               4   22[COMRAM] long 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;  prod            4   37[COMRAM] struct .
  7646 ;;  grs             4   31[COMRAM] unsigned long 
  7647 ;;  temp            2   41[COMRAM] struct .
  7648 ;;  bexp            1   36[COMRAM] unsigned char 
  7649 ;;  aexp            1   35[COMRAM] unsigned char 
  7650 ;;  sign            1   30[COMRAM] unsigned char 
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  4   18[COMRAM] unsigned char 
  7653 ;; Registers used:
  7654 ;;		wreg, status,2, status,0, prodl, prodh
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7660 ;;      Params:         8       0       0       0       0       0       0       0       0
  7661 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7662 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7663 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7664 ;;Total ram usage:       25 bytes
  7665 ;; Hardware stack levels used: 1
  7666 ;; This function calls:
  7667 ;;		Nothing
  7668 ;; This function is called by:
  7669 ;;		_main
  7670 ;;		_PWM1_Init
  7671 ;;		_PWM1_Set_Duty
  7672 ;;		_efgtoa
  7673 ;;		_PWM2_Init
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           	psect	text36
  7678  001DE6                     __ptext36:
  7679                           	callstack 0
  7680  001DE6                     ___flmul:
  7681                           	callstack 26
  7682  001DE6  5016               	movf	(___flmul@b+3)^0,w,c
  7683  001DE8  0B80               	andlw	128
  7684  001DEA  6E1F               	movwf	___flmul@sign^0,c
  7685  001DEC  5016               	movf	(___flmul@b+3)^0,w,c
  7686  001DEE  2416               	addwf	(___flmul@b+3)^0,w,c
  7687  001DF0  6E25               	movwf	___flmul@bexp^0,c
  7688  001DF2  AE15               	btfss	(___flmul@b+2)^0,7,c
  7689  001DF4  EFFE  F00E         	goto	u3121
  7690  001DF8  EF00  F00F         	goto	u3120
  7691  001DFC                     u3121:
  7692  001DFC  EF01  F00F         	goto	l3203
  7693  001E00                     u3120:
  7694  001E00  8025               	bsf	___flmul@bexp^0,0,c
  7695  001E02                     l3203:
  7696  001E02  5025               	movf	___flmul@bexp^0,w,c
  7697  001E04  B4D8               	btfsc	status,2,c
  7698  001E06  EF07  F00F         	goto	u3131
  7699  001E0A  EF09  F00F         	goto	u3130
  7700  001E0E                     u3131:
  7701  001E0E  EF1C  F00F         	goto	l3211
  7702  001E12                     u3130:
  7703  001E12  2825               	incf	___flmul@bexp^0,w,c
  7704  001E14  A4D8               	btfss	status,2,c
  7705  001E16  EF0F  F00F         	goto	u3141
  7706  001E1A  EF11  F00F         	goto	u3140
  7707  001E1E                     u3141:
  7708  001E1E  EF19  F00F         	goto	l3209
  7709  001E22                     u3140:
  7710  001E22  0E00               	movlw	0
  7711  001E24  6E13               	movwf	___flmul@b^0,c
  7712  001E26  0E00               	movlw	0
  7713  001E28  6E14               	movwf	(___flmul@b+1)^0,c
  7714  001E2A  0E00               	movlw	0
  7715  001E2C  6E15               	movwf	(___flmul@b+2)^0,c
  7716  001E2E  0E00               	movlw	0
  7717  001E30  6E16               	movwf	(___flmul@b+3)^0,c
  7718  001E32                     l3209:
  7719  001E32  8E15               	bsf	(___flmul@b+2)^0,7,c
  7720  001E34  EF24  F00F         	goto	l3213
  7721  001E38                     l3211:
  7722  001E38  0E00               	movlw	0
  7723  001E3A  6E13               	movwf	___flmul@b^0,c
  7724  001E3C  0E00               	movlw	0
  7725  001E3E  6E14               	movwf	(___flmul@b+1)^0,c
  7726  001E40  0E00               	movlw	0
  7727  001E42  6E15               	movwf	(___flmul@b+2)^0,c
  7728  001E44  0E00               	movlw	0
  7729  001E46  6E16               	movwf	(___flmul@b+3)^0,c
  7730  001E48                     l3213:
  7731  001E48  501A               	movf	(___flmul@a+3)^0,w,c
  7732  001E4A  0B80               	andlw	128
  7733  001E4C  1A1F               	xorwf	___flmul@sign^0,f,c
  7734  001E4E  501A               	movf	(___flmul@a+3)^0,w,c
  7735  001E50  241A               	addwf	(___flmul@a+3)^0,w,c
  7736  001E52  6E24               	movwf	___flmul@aexp^0,c
  7737  001E54  AE19               	btfss	(___flmul@a+2)^0,7,c
  7738  001E56  EF2F  F00F         	goto	u3151
  7739  001E5A  EF31  F00F         	goto	u3150
  7740  001E5E                     u3151:
  7741  001E5E  EF32  F00F         	goto	l3221
  7742  001E62                     u3150:
  7743  001E62  8024               	bsf	___flmul@aexp^0,0,c
  7744  001E64                     l3221:
  7745  001E64  5024               	movf	___flmul@aexp^0,w,c
  7746  001E66  B4D8               	btfsc	status,2,c
  7747  001E68  EF38  F00F         	goto	u3161
  7748  001E6C  EF3A  F00F         	goto	u3160
  7749  001E70                     u3161:
  7750  001E70  EF4D  F00F         	goto	l3229
  7751  001E74                     u3160:
  7752  001E74  2824               	incf	___flmul@aexp^0,w,c
  7753  001E76  A4D8               	btfss	status,2,c
  7754  001E78  EF40  F00F         	goto	u3171
  7755  001E7C  EF42  F00F         	goto	u3170
  7756  001E80                     u3171:
  7757  001E80  EF4A  F00F         	goto	l3227
  7758  001E84                     u3170:
  7759  001E84  0E00               	movlw	0
  7760  001E86  6E17               	movwf	___flmul@a^0,c
  7761  001E88  0E00               	movlw	0
  7762  001E8A  6E18               	movwf	(___flmul@a+1)^0,c
  7763  001E8C  0E00               	movlw	0
  7764  001E8E  6E19               	movwf	(___flmul@a+2)^0,c
  7765  001E90  0E00               	movlw	0
  7766  001E92  6E1A               	movwf	(___flmul@a+3)^0,c
  7767  001E94                     l3227:
  7768  001E94  8E19               	bsf	(___flmul@a+2)^0,7,c
  7769  001E96  EF55  F00F         	goto	l789
  7770  001E9A                     l3229:
  7771  001E9A  0E00               	movlw	0
  7772  001E9C  6E17               	movwf	___flmul@a^0,c
  7773  001E9E  0E00               	movlw	0
  7774  001EA0  6E18               	movwf	(___flmul@a+1)^0,c
  7775  001EA2  0E00               	movlw	0
  7776  001EA4  6E19               	movwf	(___flmul@a+2)^0,c
  7777  001EA6  0E00               	movlw	0
  7778  001EA8  6E1A               	movwf	(___flmul@a+3)^0,c
  7779  001EAA                     l789:
  7780  001EAA  5024               	movf	___flmul@aexp^0,w,c
  7781  001EAC  B4D8               	btfsc	status,2,c
  7782  001EAE  EF5B  F00F         	goto	u3181
  7783  001EB2  EF5D  F00F         	goto	u3180
  7784  001EB6                     u3181:
  7785  001EB6  EF65  F00F         	goto	l3233
  7786  001EBA                     u3180:
  7787  001EBA  5025               	movf	___flmul@bexp^0,w,c
  7788  001EBC  A4D8               	btfss	status,2,c
  7789  001EBE  EF63  F00F         	goto	u3191
  7790  001EC2  EF65  F00F         	goto	u3190
  7791  001EC6                     u3191:
  7792  001EC6  EF6F  F00F         	goto	l3237
  7793  001ECA                     u3190:
  7794  001ECA                     l3233:
  7795  001ECA  0E00               	movlw	0
  7796  001ECC  6E13               	movwf	?___flmul^0,c
  7797  001ECE  0E00               	movlw	0
  7798  001ED0  6E14               	movwf	(?___flmul+1)^0,c
  7799  001ED2  0E00               	movlw	0
  7800  001ED4  6E15               	movwf	(?___flmul+2)^0,c
  7801  001ED6  0E00               	movlw	0
  7802  001ED8  6E16               	movwf	(?___flmul+3)^0,c
  7803  001EDA  EF07  F011         	goto	l793
  7804  001EDE                     l3237:
  7805  001EDE  5019               	movf	(___flmul@a+2)^0,w,c
  7806  001EE0  0213               	mulwf	___flmul@b^0,c
  7807  001EE2  CFF3 F02A          	movff	prodl,___flmul@temp
  7808  001EE6  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7809  001EEA  502A               	movf	___flmul@temp^0,w,c
  7810  001EEC  6E20               	movwf	___flmul@grs^0,c
  7811  001EEE  6A21               	clrf	(___flmul@grs+1)^0,c
  7812  001EF0  6A22               	clrf	(___flmul@grs+2)^0,c
  7813  001EF2  6A23               	clrf	(___flmul@grs+3)^0,c
  7814  001EF4  502B               	movf	(___flmul@temp+1)^0,w,c
  7815  001EF6  6E26               	movwf	___flmul@prod^0,c
  7816  001EF8  6A27               	clrf	(___flmul@prod+1)^0,c
  7817  001EFA  6A28               	clrf	(___flmul@prod+2)^0,c
  7818  001EFC  6A29               	clrf	(___flmul@prod+3)^0,c
  7819  001EFE  5018               	movf	(___flmul@a+1)^0,w,c
  7820  001F00  0214               	mulwf	(___flmul@b+1)^0,c
  7821  001F02  CFF3 F02A          	movff	prodl,___flmul@temp
  7822  001F06  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7823  001F0A  502A               	movf	___flmul@temp^0,w,c
  7824  001F0C  2620               	addwf	___flmul@grs^0,f,c
  7825  001F0E  0E00               	movlw	0
  7826  001F10  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7827  001F12  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7828  001F14  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7829  001F16  502B               	movf	(___flmul@temp+1)^0,w,c
  7830  001F18  2626               	addwf	___flmul@prod^0,f,c
  7831  001F1A  0E00               	movlw	0
  7832  001F1C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7833  001F1E  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7834  001F20  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7835  001F22  5017               	movf	___flmul@a^0,w,c
  7836  001F24  0215               	mulwf	(___flmul@b+2)^0,c
  7837  001F26  CFF3 F02A          	movff	prodl,___flmul@temp
  7838  001F2A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7839  001F2E  502A               	movf	___flmul@temp^0,w,c
  7840  001F30  2620               	addwf	___flmul@grs^0,f,c
  7841  001F32  0E00               	movlw	0
  7842  001F34  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7843  001F36  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7844  001F38  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7845  001F3A  502B               	movf	(___flmul@temp+1)^0,w,c
  7846  001F3C  2626               	addwf	___flmul@prod^0,f,c
  7847  001F3E  0E00               	movlw	0
  7848  001F40  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7849  001F42  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7850  001F44  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7851  001F46  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  7852  001F4A  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  7853  001F4E  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  7854  001F52  6A20               	clrf	___flmul@grs^0,c
  7855  001F54  5017               	movf	___flmul@a^0,w,c
  7856  001F56  0214               	mulwf	(___flmul@b+1)^0,c
  7857  001F58  CFF3 F02A          	movff	prodl,___flmul@temp
  7858  001F5C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7859  001F60  502A               	movf	___flmul@temp^0,w,c
  7860  001F62  2620               	addwf	___flmul@grs^0,f,c
  7861  001F64  502B               	movf	(___flmul@temp+1)^0,w,c
  7862  001F66  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7863  001F68  0E00               	movlw	0
  7864  001F6A  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7865  001F6C  0E00               	movlw	0
  7866  001F6E  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7867  001F70  5018               	movf	(___flmul@a+1)^0,w,c
  7868  001F72  0213               	mulwf	___flmul@b^0,c
  7869  001F74  CFF3 F02A          	movff	prodl,___flmul@temp
  7870  001F78  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7871  001F7C  502A               	movf	___flmul@temp^0,w,c
  7872  001F7E  2620               	addwf	___flmul@grs^0,f,c
  7873  001F80  502B               	movf	(___flmul@temp+1)^0,w,c
  7874  001F82  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7875  001F84  0E00               	movlw	0
  7876  001F86  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7877  001F88  0E00               	movlw	0
  7878  001F8A  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7879  001F8C  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  7880  001F90  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  7881  001F94  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  7882  001F98  6A20               	clrf	___flmul@grs^0,c
  7883  001F9A  5017               	movf	___flmul@a^0,w,c
  7884  001F9C  0213               	mulwf	___flmul@b^0,c
  7885  001F9E  CFF3 F02A          	movff	prodl,___flmul@temp
  7886  001FA2  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7887  001FA6  502A               	movf	___flmul@temp^0,w,c
  7888  001FA8  2620               	addwf	___flmul@grs^0,f,c
  7889  001FAA  502B               	movf	(___flmul@temp+1)^0,w,c
  7890  001FAC  2221               	addwfc	(___flmul@grs+1)^0,f,c
  7891  001FAE  0E00               	movlw	0
  7892  001FB0  2222               	addwfc	(___flmul@grs+2)^0,f,c
  7893  001FB2  0E00               	movlw	0
  7894  001FB4  2223               	addwfc	(___flmul@grs+3)^0,f,c
  7895  001FB6  5019               	movf	(___flmul@a+2)^0,w,c
  7896  001FB8  0214               	mulwf	(___flmul@b+1)^0,c
  7897  001FBA  CFF3 F02A          	movff	prodl,___flmul@temp
  7898  001FBE  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7899  001FC2  502A               	movf	___flmul@temp^0,w,c
  7900  001FC4  2626               	addwf	___flmul@prod^0,f,c
  7901  001FC6  502B               	movf	(___flmul@temp+1)^0,w,c
  7902  001FC8  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7903  001FCA  0E00               	movlw	0
  7904  001FCC  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7905  001FCE  0E00               	movlw	0
  7906  001FD0  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7907  001FD2  5018               	movf	(___flmul@a+1)^0,w,c
  7908  001FD4  0215               	mulwf	(___flmul@b+2)^0,c
  7909  001FD6  CFF3 F02A          	movff	prodl,___flmul@temp
  7910  001FDA  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7911  001FDE  502A               	movf	___flmul@temp^0,w,c
  7912  001FE0  2626               	addwf	___flmul@prod^0,f,c
  7913  001FE2  502B               	movf	(___flmul@temp+1)^0,w,c
  7914  001FE4  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7915  001FE6  0E00               	movlw	0
  7916  001FE8  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7917  001FEA  0E00               	movlw	0
  7918  001FEC  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7919  001FEE  5019               	movf	(___flmul@a+2)^0,w,c
  7920  001FF0  0215               	mulwf	(___flmul@b+2)^0,c
  7921  001FF2  CFF3 F02A          	movff	prodl,___flmul@temp
  7922  001FF6  CFF4 F02B          	movff	prodh,___flmul@temp+1
  7923  001FFA  502A               	movf	___flmul@temp^0,w,c
  7924  001FFC  6E1B               	movwf	??___flmul^0,c
  7925  001FFE  502B               	movf	(___flmul@temp+1)^0,w,c
  7926  002000  6E1C               	movwf	(??___flmul+1)^0,c
  7927  002002  6A1D               	clrf	(??___flmul+2)^0,c
  7928  002004  6A1E               	clrf	(??___flmul+3)^0,c
  7929  002006  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  7930  00200A  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  7931  00200E  C01B  F01C         	movff	??___flmul,??___flmul+1
  7932  002012  6A1B               	clrf	??___flmul^0,c
  7933  002014  501B               	movf	??___flmul^0,w,c
  7934  002016  2626               	addwf	___flmul@prod^0,f,c
  7935  002018  501C               	movf	(??___flmul+1)^0,w,c
  7936  00201A  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7937  00201C  501D               	movf	(??___flmul+2)^0,w,c
  7938  00201E  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7939  002020  501E               	movf	(??___flmul+3)^0,w,c
  7940  002022  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7941  002024  C020  F01B         	movff	___flmul@grs,??___flmul
  7942  002028  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  7943  00202C  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  7944  002030  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  7945  002034  0E19               	movlw	25
  7946  002036  EF22  F010         	goto	u3200
  7947  00203A                     u3205:
  7948  00203A  90D8               	bcf	status,0,c
  7949  00203C  321E               	rrcf	(??___flmul+3)^0,f,c
  7950  00203E  321D               	rrcf	(??___flmul+2)^0,f,c
  7951  002040  321C               	rrcf	(??___flmul+1)^0,f,c
  7952  002042  321B               	rrcf	??___flmul^0,f,c
  7953  002044                     u3200:
  7954  002044  2EE8               	decfsz	wreg,f,c
  7955  002046  EF1D  F010         	goto	u3205
  7956  00204A  501B               	movf	??___flmul^0,w,c
  7957  00204C  2626               	addwf	___flmul@prod^0,f,c
  7958  00204E  501C               	movf	(??___flmul+1)^0,w,c
  7959  002050  2227               	addwfc	(___flmul@prod+1)^0,f,c
  7960  002052  501D               	movf	(??___flmul+2)^0,w,c
  7961  002054  2228               	addwfc	(___flmul@prod+2)^0,f,c
  7962  002056  501E               	movf	(??___flmul+3)^0,w,c
  7963  002058  2229               	addwfc	(___flmul@prod+3)^0,f,c
  7964  00205A  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  7965  00205E  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  7966  002062  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  7967  002066  6A20               	clrf	___flmul@grs^0,c
  7968  002068  5024               	movf	___flmul@aexp^0,w,c
  7969  00206A  C025  F01B         	movff	___flmul@bexp,??___flmul
  7970  00206E  6A1C               	clrf	(??___flmul+1)^0,c
  7971  002070  261B               	addwf	??___flmul^0,f,c
  7972  002072  0E00               	movlw	0
  7973  002074  221C               	addwfc	(??___flmul+1)^0,f,c
  7974  002076  0E82               	movlw	130
  7975  002078  241B               	addwf	??___flmul^0,w,c
  7976  00207A  6E2A               	movwf	___flmul@temp^0,c
  7977  00207C  0EFF               	movlw	255
  7978  00207E  201C               	addwfc	(??___flmul+1)^0,w,c
  7979  002080  6E2B               	movwf	(___flmul@temp+1)^0,c
  7980  002082  EF58  F010         	goto	l3285
  7981  002086                     l3279:
  7982  002086  90D8               	bcf	status,0,c
  7983  002088  3626               	rlcf	___flmul@prod^0,f,c
  7984  00208A  3627               	rlcf	(___flmul@prod+1)^0,f,c
  7985  00208C  3628               	rlcf	(___flmul@prod+2)^0,f,c
  7986  00208E  3629               	rlcf	(___flmul@prod+3)^0,f,c
  7987  002090  AE23               	btfss	(___flmul@grs+3)^0,7,c
  7988  002092  EF4D  F010         	goto	u3211
  7989  002096  EF4F  F010         	goto	u3210
  7990  00209A                     u3211:
  7991  00209A  EF50  F010         	goto	l796
  7992  00209E                     u3210:
  7993  00209E  8026               	bsf	___flmul@prod^0,0,c
  7994  0020A0                     l796:
  7995  0020A0  90D8               	bcf	status,0,c
  7996  0020A2  3620               	rlcf	___flmul@grs^0,f,c
  7997  0020A4  3621               	rlcf	(___flmul@grs+1)^0,f,c
  7998  0020A6  3622               	rlcf	(___flmul@grs+2)^0,f,c
  7999  0020A8  3623               	rlcf	(___flmul@grs+3)^0,f,c
  8000  0020AA  062A               	decf	___flmul@temp^0,f,c
  8001  0020AC  A0D8               	btfss	status,0,c
  8002  0020AE  062B               	decf	(___flmul@temp+1)^0,f,c
  8003  0020B0                     l3285:
  8004  0020B0  AE28               	btfss	(___flmul@prod+2)^0,7,c
  8005  0020B2  EF5D  F010         	goto	u3221
  8006  0020B6  EF5F  F010         	goto	u3220
  8007  0020BA                     u3221:
  8008  0020BA  EF43  F010         	goto	l3279
  8009  0020BE                     u3220:
  8010  0020BE  0E00               	movlw	0
  8011  0020C0  6E24               	movwf	___flmul@aexp^0,c
  8012  0020C2  AE23               	btfss	(___flmul@grs+3)^0,7,c
  8013  0020C4  EF66  F010         	goto	u3231
  8014  0020C8  EF68  F010         	goto	u3230
  8015  0020CC                     u3231:
  8016  0020CC  EF8C  F010         	goto	l798
  8017  0020D0                     u3230:
  8018  0020D0  0EFF               	movlw	255
  8019  0020D2  1420               	andwf	___flmul@grs^0,w,c
  8020  0020D4  6E1B               	movwf	??___flmul^0,c
  8021  0020D6  0EFF               	movlw	255
  8022  0020D8  1421               	andwf	(___flmul@grs+1)^0,w,c
  8023  0020DA  6E1C               	movwf	(??___flmul+1)^0,c
  8024  0020DC  0EFF               	movlw	255
  8025  0020DE  1422               	andwf	(___flmul@grs+2)^0,w,c
  8026  0020E0  6E1D               	movwf	(??___flmul+2)^0,c
  8027  0020E2  0E7F               	movlw	127
  8028  0020E4  1423               	andwf	(___flmul@grs+3)^0,w,c
  8029  0020E6  6E1E               	movwf	(??___flmul+3)^0,c
  8030  0020E8  501B               	movf	??___flmul^0,w,c
  8031  0020EA  101C               	iorwf	(??___flmul+1)^0,w,c
  8032  0020EC  101D               	iorwf	(??___flmul+2)^0,w,c
  8033  0020EE  101E               	iorwf	(??___flmul+3)^0,w,c
  8034  0020F0  B4D8               	btfsc	status,2,c
  8035  0020F2  EF7D  F010         	goto	u3241
  8036  0020F6  EF7F  F010         	goto	u3240
  8037  0020FA                     u3241:
  8038  0020FA  EF83  F010         	goto	l799
  8039  0020FE                     u3240:
  8040  0020FE                     l3293:
  8041  0020FE  0E01               	movlw	1
  8042  002100  6E24               	movwf	___flmul@aexp^0,c
  8043  002102  EF8C  F010         	goto	l798
  8044  002106                     l799:
  8045  002106  A026               	btfss	___flmul@prod^0,0,c
  8046  002108  EF88  F010         	goto	u3251
  8047  00210C  EF8A  F010         	goto	u3250
  8048  002110                     u3251:
  8049  002110  EF8C  F010         	goto	l798
  8050  002114                     u3250:
  8051  002114  EF7F  F010         	goto	l3293
  8052  002118                     l798:
  8053  002118  5024               	movf	___flmul@aexp^0,w,c
  8054  00211A  B4D8               	btfsc	status,2,c
  8055  00211C  EF92  F010         	goto	u3261
  8056  002120  EF94  F010         	goto	u3260
  8057  002124                     u3261:
  8058  002124  EFB8  F010         	goto	l3305
  8059  002128                     u3260:
  8060  002128  0E01               	movlw	1
  8061  00212A  2626               	addwf	___flmul@prod^0,f,c
  8062  00212C  0E00               	movlw	0
  8063  00212E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  8064  002130  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8065  002132  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8066  002134  A029               	btfss	(___flmul@prod+3)^0,0,c
  8067  002136  EF9F  F010         	goto	u3271
  8068  00213A  EFA1  F010         	goto	u3270
  8069  00213E                     u3271:
  8070  00213E  EFB8  F010         	goto	l3305
  8071  002142                     u3270:
  8072  002142  C026  F01B         	movff	___flmul@prod,??___flmul
  8073  002146  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  8074  00214A  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  8075  00214E  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  8076  002152  341E               	rlcf	(??___flmul+3)^0,w,c
  8077  002154  321E               	rrcf	(??___flmul+3)^0,f,c
  8078  002156  321D               	rrcf	(??___flmul+2)^0,f,c
  8079  002158  321C               	rrcf	(??___flmul+1)^0,f,c
  8080  00215A  321B               	rrcf	??___flmul^0,f,c
  8081  00215C  C01B  F026         	movff	??___flmul,___flmul@prod
  8082  002160  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  8083  002164  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  8084  002168  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  8085  00216C  4A2A               	infsnz	___flmul@temp^0,f,c
  8086  00216E  2A2B               	incf	(___flmul@temp+1)^0,f,c
  8087  002170                     l3305:
  8088  002170  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  8089  002172  EFC3  F010         	goto	u3281
  8090  002176  502B               	movf	(___flmul@temp+1)^0,w,c
  8091  002178  E108               	bnz	u3280
  8092  00217A  282A               	incf	___flmul@temp^0,w,c
  8093  00217C  A0D8               	btfss	status,0,c
  8094  00217E  EFC3  F010         	goto	u3281
  8095  002182  EFC5  F010         	goto	u3280
  8096  002186                     u3281:
  8097  002186  EFCF  F010         	goto	l3309
  8098  00218A                     u3280:
  8099  00218A  0E00               	movlw	0
  8100  00218C  6E26               	movwf	___flmul@prod^0,c
  8101  00218E  0E00               	movlw	0
  8102  002190  6E27               	movwf	(___flmul@prod+1)^0,c
  8103  002192  0E80               	movlw	128
  8104  002194  6E28               	movwf	(___flmul@prod+2)^0,c
  8105  002196  0E7F               	movlw	127
  8106  002198  6E29               	movwf	(___flmul@prod+3)^0,c
  8107  00219A  EFFD  F010         	goto	l3321
  8108  00219E                     l3309:
  8109  00219E  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  8110  0021A0  EFDC  F010         	goto	u3290
  8111  0021A4  502B               	movf	(___flmul@temp+1)^0,w,c
  8112  0021A6  E106               	bnz	u3291
  8113  0021A8  042A               	decf	___flmul@temp^0,w,c
  8114  0021AA  B0D8               	btfsc	status,0,c
  8115  0021AC  EFDA  F010         	goto	u3291
  8116  0021B0  EFDC  F010         	goto	u3290
  8117  0021B4                     u3291:
  8118  0021B4  EFE8  F010         	goto	l806
  8119  0021B8                     u3290:
  8120  0021B8  0E00               	movlw	0
  8121  0021BA  6E26               	movwf	___flmul@prod^0,c
  8122  0021BC  0E00               	movlw	0
  8123  0021BE  6E27               	movwf	(___flmul@prod+1)^0,c
  8124  0021C0  0E00               	movlw	0
  8125  0021C2  6E28               	movwf	(___flmul@prod+2)^0,c
  8126  0021C4  0E00               	movlw	0
  8127  0021C6  6E29               	movwf	(___flmul@prod+3)^0,c
  8128  0021C8  0E00               	movlw	0
  8129  0021CA  6E1F               	movwf	___flmul@sign^0,c
  8130  0021CC  EFFD  F010         	goto	l3321
  8131  0021D0                     l806:
  8132  0021D0  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  8133  0021D4  0EFF               	movlw	255
  8134  0021D6  1626               	andwf	___flmul@prod^0,f,c
  8135  0021D8  0EFF               	movlw	255
  8136  0021DA  1627               	andwf	(___flmul@prod+1)^0,f,c
  8137  0021DC  0E7F               	movlw	127
  8138  0021DE  1628               	andwf	(___flmul@prod+2)^0,f,c
  8139  0021E0  0E00               	movlw	0
  8140  0021E2  1629               	andwf	(___flmul@prod+3)^0,f,c
  8141  0021E4  A025               	btfss	___flmul@bexp^0,0,c
  8142  0021E6  EFF7  F010         	goto	u3301
  8143  0021EA  EFF9  F010         	goto	u3300
  8144  0021EE                     u3301:
  8145  0021EE  EFFA  F010         	goto	l3319
  8146  0021F2                     u3300:
  8147  0021F2  8E28               	bsf	(___flmul@prod+2)^0,7,c
  8148  0021F4                     l3319:
  8149  0021F4  90D8               	bcf	status,0,c
  8150  0021F6  3025               	rrcf	___flmul@bexp^0,w,c
  8151  0021F8  6E29               	movwf	(___flmul@prod+3)^0,c
  8152  0021FA                     l3321:
  8153  0021FA  501F               	movf	___flmul@sign^0,w,c
  8154  0021FC  1229               	iorwf	(___flmul@prod+3)^0,f,c
  8155  0021FE  C026  F013         	movff	___flmul@prod,?___flmul
  8156  002202  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  8157  002206  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  8158  00220A  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  8159  00220E                     l793:
  8160  00220E  0012               	return		;funcret
  8161  002210                     __end_of___flmul:
  8162                           	callstack 0
  8163                           
  8164 ;; *************** function ___fldiv *****************
  8165 ;; Defined at:
  8166 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  b               4   43[COMRAM] unsigned char 
  8169 ;;  a               4   47[COMRAM] unsigned char 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;  grs             4   62[COMRAM] unsigned long 
  8172 ;;  rem             4   55[COMRAM] unsigned long 
  8173 ;;  new_exp         2   60[COMRAM] short 
  8174 ;;  aexp            1   67[COMRAM] unsigned char 
  8175 ;;  bexp            1   66[COMRAM] unsigned char 
  8176 ;;  sign            1   59[COMRAM] unsigned char 
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  4   43[COMRAM] unsigned char 
  8179 ;; Registers used:
  8180 ;;		wreg, status,2, status,0
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8186 ;;      Params:         8       0       0       0       0       0       0       0       0
  8187 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8188 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8189 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8190 ;;Total ram usage:       25 bytes
  8191 ;; Hardware stack levels used: 1
  8192 ;; This function calls:
  8193 ;;		Nothing
  8194 ;; This function is called by:
  8195 ;;		_PWM1_Init
  8196 ;;		_PWM1_Set_Duty
  8197 ;;		_efgtoa
  8198 ;;		_PWM2_Init
  8199 ;; This function uses a non-reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text37
  8203  002210                     __ptext37:
  8204                           	callstack 0
  8205  002210                     ___fldiv:
  8206                           	callstack 26
  8207  002210  502F               	movf	(___fldiv@b+3)^0,w,c
  8208  002212  0B80               	andlw	128
  8209  002214  6E3C               	movwf	___fldiv@sign^0,c
  8210  002216  502F               	movf	(___fldiv@b+3)^0,w,c
  8211  002218  242F               	addwf	(___fldiv@b+3)^0,w,c
  8212  00221A  6E43               	movwf	___fldiv@bexp^0,c
  8213  00221C  AE2E               	btfss	(___fldiv@b+2)^0,7,c
  8214  00221E  EF13  F011         	goto	u2891
  8215  002222  EF15  F011         	goto	u2890
  8216  002226                     u2891:
  8217  002226  EF16  F011         	goto	l3065
  8218  00222A                     u2890:
  8219  00222A  8043               	bsf	___fldiv@bexp^0,0,c
  8220  00222C                     l3065:
  8221  00222C  5043               	movf	___fldiv@bexp^0,w,c
  8222  00222E  B4D8               	btfsc	status,2,c
  8223  002230  EF1C  F011         	goto	u2901
  8224  002234  EF1E  F011         	goto	u2900
  8225  002238                     u2901:
  8226  002238  EF33  F011         	goto	l3075
  8227  00223C                     u2900:
  8228  00223C  2843               	incf	___fldiv@bexp^0,w,c
  8229  00223E  A4D8               	btfss	status,2,c
  8230  002240  EF24  F011         	goto	u2911
  8231  002244  EF26  F011         	goto	u2910
  8232  002248                     u2911:
  8233  002248  EF2E  F011         	goto	l3071
  8234  00224C                     u2910:
  8235  00224C  0E00               	movlw	0
  8236  00224E  6E2C               	movwf	___fldiv@b^0,c
  8237  002250  0E00               	movlw	0
  8238  002252  6E2D               	movwf	(___fldiv@b+1)^0,c
  8239  002254  0E00               	movlw	0
  8240  002256  6E2E               	movwf	(___fldiv@b+2)^0,c
  8241  002258  0E00               	movlw	0
  8242  00225A  6E2F               	movwf	(___fldiv@b+3)^0,c
  8243  00225C                     l3071:
  8244  00225C  8E2E               	bsf	(___fldiv@b+2)^0,7,c
  8245  00225E  0E00               	movlw	0
  8246  002260  6E2F               	movwf	(___fldiv@b+3)^0,c
  8247  002262  EF3B  F011         	goto	l3077
  8248  002266                     l3075:
  8249  002266  0E00               	movlw	0
  8250  002268  6E2C               	movwf	___fldiv@b^0,c
  8251  00226A  0E00               	movlw	0
  8252  00226C  6E2D               	movwf	(___fldiv@b+1)^0,c
  8253  00226E  0E00               	movlw	0
  8254  002270  6E2E               	movwf	(___fldiv@b+2)^0,c
  8255  002272  0E00               	movlw	0
  8256  002274  6E2F               	movwf	(___fldiv@b+3)^0,c
  8257  002276                     l3077:
  8258  002276  5033               	movf	(___fldiv@a+3)^0,w,c
  8259  002278  0B80               	andlw	128
  8260  00227A  1A3C               	xorwf	___fldiv@sign^0,f,c
  8261  00227C  5033               	movf	(___fldiv@a+3)^0,w,c
  8262  00227E  2433               	addwf	(___fldiv@a+3)^0,w,c
  8263  002280  6E44               	movwf	___fldiv@aexp^0,c
  8264  002282  AE32               	btfss	(___fldiv@a+2)^0,7,c
  8265  002284  EF46  F011         	goto	u2921
  8266  002288  EF48  F011         	goto	u2920
  8267  00228C                     u2921:
  8268  00228C  EF49  F011         	goto	l3085
  8269  002290                     u2920:
  8270  002290  8044               	bsf	___fldiv@aexp^0,0,c
  8271  002292                     l3085:
  8272  002292  5044               	movf	___fldiv@aexp^0,w,c
  8273  002294  B4D8               	btfsc	status,2,c
  8274  002296  EF4F  F011         	goto	u2931
  8275  00229A  EF51  F011         	goto	u2930
  8276  00229E                     u2931:
  8277  00229E  EF66  F011         	goto	l3095
  8278  0022A2                     u2930:
  8279  0022A2  2844               	incf	___fldiv@aexp^0,w,c
  8280  0022A4  A4D8               	btfss	status,2,c
  8281  0022A6  EF57  F011         	goto	u2941
  8282  0022AA  EF59  F011         	goto	u2940
  8283  0022AE                     u2941:
  8284  0022AE  EF61  F011         	goto	l3091
  8285  0022B2                     u2940:
  8286  0022B2  0E00               	movlw	0
  8287  0022B4  6E30               	movwf	___fldiv@a^0,c
  8288  0022B6  0E00               	movlw	0
  8289  0022B8  6E31               	movwf	(___fldiv@a+1)^0,c
  8290  0022BA  0E00               	movlw	0
  8291  0022BC  6E32               	movwf	(___fldiv@a+2)^0,c
  8292  0022BE  0E00               	movlw	0
  8293  0022C0  6E33               	movwf	(___fldiv@a+3)^0,c
  8294  0022C2                     l3091:
  8295  0022C2  8E32               	bsf	(___fldiv@a+2)^0,7,c
  8296  0022C4  0E00               	movlw	0
  8297  0022C6  6E33               	movwf	(___fldiv@a+3)^0,c
  8298  0022C8  EF6E  F011         	goto	l3097
  8299  0022CC                     l3095:
  8300  0022CC  0E00               	movlw	0
  8301  0022CE  6E30               	movwf	___fldiv@a^0,c
  8302  0022D0  0E00               	movlw	0
  8303  0022D2  6E31               	movwf	(___fldiv@a+1)^0,c
  8304  0022D4  0E00               	movlw	0
  8305  0022D6  6E32               	movwf	(___fldiv@a+2)^0,c
  8306  0022D8  0E00               	movlw	0
  8307  0022DA  6E33               	movwf	(___fldiv@a+3)^0,c
  8308  0022DC                     l3097:
  8309  0022DC  5030               	movf	___fldiv@a^0,w,c
  8310  0022DE  1031               	iorwf	(___fldiv@a+1)^0,w,c
  8311  0022E0  1032               	iorwf	(___fldiv@a+2)^0,w,c
  8312  0022E2  1033               	iorwf	(___fldiv@a+3)^0,w,c
  8313  0022E4  A4D8               	btfss	status,2,c
  8314  0022E6  EF77  F011         	goto	u2951
  8315  0022EA  EF79  F011         	goto	u2950
  8316  0022EE                     u2951:
  8317  0022EE  EF91  F011         	goto	l3109
  8318  0022F2                     u2950:
  8319  0022F2  0E00               	movlw	0
  8320  0022F4  6E2C               	movwf	___fldiv@b^0,c
  8321  0022F6  0E00               	movlw	0
  8322  0022F8  6E2D               	movwf	(___fldiv@b+1)^0,c
  8323  0022FA  0E00               	movlw	0
  8324  0022FC  6E2E               	movwf	(___fldiv@b+2)^0,c
  8325  0022FE  0E00               	movlw	0
  8326  002300  6E2F               	movwf	(___fldiv@b+3)^0,c
  8327  002302  0E80               	movlw	128
  8328  002304  122E               	iorwf	(___fldiv@b+2)^0,f,c
  8329  002306  0E7F               	movlw	127
  8330  002308  122F               	iorwf	(___fldiv@b+3)^0,f,c
  8331  00230A                     l3103:
  8332  00230A  503C               	movf	___fldiv@sign^0,w,c
  8333  00230C  122F               	iorwf	(___fldiv@b+3)^0,f,c
  8334  00230E  C02C  F02C         	movff	___fldiv@b,?___fldiv
  8335  002312  C02D  F02D         	movff	___fldiv@b+1,?___fldiv+1
  8336  002316  C02E  F02E         	movff	___fldiv@b+2,?___fldiv+2
  8337  00231A  C02F  F02F         	movff	___fldiv@b+3,?___fldiv+3
  8338  00231E  EFD4  F012         	goto	l757
  8339  002322                     l3109:
  8340  002322  5043               	movf	___fldiv@bexp^0,w,c
  8341  002324  A4D8               	btfss	status,2,c
  8342  002326  EF97  F011         	goto	u2961
  8343  00232A  EF99  F011         	goto	u2960
  8344  00232E                     u2961:
  8345  00232E  EFA3  F011         	goto	l3117
  8346  002332                     u2960:
  8347  002332  0E00               	movlw	0
  8348  002334  6E2C               	movwf	?___fldiv^0,c
  8349  002336  0E00               	movlw	0
  8350  002338  6E2D               	movwf	(?___fldiv+1)^0,c
  8351  00233A  0E00               	movlw	0
  8352  00233C  6E2E               	movwf	(?___fldiv+2)^0,c
  8353  00233E  0E00               	movlw	0
  8354  002340  6E2F               	movwf	(?___fldiv+3)^0,c
  8355  002342  EFD4  F012         	goto	l757
  8356  002346                     l3117:
  8357  002346  5044               	movf	___fldiv@aexp^0,w,c
  8358  002348  C043  F034         	movff	___fldiv@bexp,??___fldiv
  8359  00234C  6A35               	clrf	(??___fldiv+1)^0,c
  8360  00234E  5E34               	subwf	??___fldiv^0,f,c
  8361  002350  0E00               	movlw	0
  8362  002352  5A35               	subwfb	(??___fldiv+1)^0,f,c
  8363  002354  0E7F               	movlw	127
  8364  002356  2434               	addwf	??___fldiv^0,w,c
  8365  002358  6E3D               	movwf	___fldiv@new_exp^0,c
  8366  00235A  0E00               	movlw	0
  8367  00235C  2035               	addwfc	(??___fldiv+1)^0,w,c
  8368  00235E  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
  8369  002360  C02C  F038         	movff	___fldiv@b,___fldiv@rem
  8370  002364  C02D  F039         	movff	___fldiv@b+1,___fldiv@rem+1
  8371  002368  C02E  F03A         	movff	___fldiv@b+2,___fldiv@rem+2
  8372  00236C  C02F  F03B         	movff	___fldiv@b+3,___fldiv@rem+3
  8373  002370  0E00               	movlw	0
  8374  002372  6E2C               	movwf	___fldiv@b^0,c
  8375  002374  0E00               	movlw	0
  8376  002376  6E2D               	movwf	(___fldiv@b+1)^0,c
  8377  002378  0E00               	movlw	0
  8378  00237A  6E2E               	movwf	(___fldiv@b+2)^0,c
  8379  00237C  0E00               	movlw	0
  8380  00237E  6E2F               	movwf	(___fldiv@b+3)^0,c
  8381  002380  0E00               	movlw	0
  8382  002382  6E3F               	movwf	___fldiv@grs^0,c
  8383  002384  0E00               	movlw	0
  8384  002386  6E40               	movwf	(___fldiv@grs+1)^0,c
  8385  002388  0E00               	movlw	0
  8386  00238A  6E41               	movwf	(___fldiv@grs+2)^0,c
  8387  00238C  0E00               	movlw	0
  8388  00238E  6E42               	movwf	(___fldiv@grs+3)^0,c
  8389  002390  0E00               	movlw	0
  8390  002392  6E44               	movwf	___fldiv@aexp^0,c
  8391  002394  EF04  F012         	goto	l759
  8392  002398                     l3127:
  8393  002398  5044               	movf	___fldiv@aexp^0,w,c
  8394  00239A  B4D8               	btfsc	status,2,c
  8395  00239C  EFD2  F011         	goto	u2971
  8396  0023A0  EFD4  F011         	goto	u2970
  8397  0023A4                     u2971:
  8398  0023A4  EFEB  F011         	goto	l3135
  8399  0023A8                     u2970:
  8400  0023A8  90D8               	bcf	status,0,c
  8401  0023AA  3638               	rlcf	___fldiv@rem^0,f,c
  8402  0023AC  3639               	rlcf	(___fldiv@rem+1)^0,f,c
  8403  0023AE  363A               	rlcf	(___fldiv@rem+2)^0,f,c
  8404  0023B0  363B               	rlcf	(___fldiv@rem+3)^0,f,c
  8405  0023B2  90D8               	bcf	status,0,c
  8406  0023B4  362C               	rlcf	___fldiv@b^0,f,c
  8407  0023B6  362D               	rlcf	(___fldiv@b+1)^0,f,c
  8408  0023B8  362E               	rlcf	(___fldiv@b+2)^0,f,c
  8409  0023BA  362F               	rlcf	(___fldiv@b+3)^0,f,c
  8410  0023BC  AE42               	btfss	(___fldiv@grs+3)^0,7,c
  8411  0023BE  EFE3  F011         	goto	u2981
  8412  0023C2  EFE5  F011         	goto	u2980
  8413  0023C6                     u2981:
  8414  0023C6  EFE6  F011         	goto	l762
  8415  0023CA                     u2980:
  8416  0023CA  802C               	bsf	___fldiv@b^0,0,c
  8417  0023CC                     l762:
  8418  0023CC  90D8               	bcf	status,0,c
  8419  0023CE  363F               	rlcf	___fldiv@grs^0,f,c
  8420  0023D0  3640               	rlcf	(___fldiv@grs+1)^0,f,c
  8421  0023D2  3641               	rlcf	(___fldiv@grs+2)^0,f,c
  8422  0023D4  3642               	rlcf	(___fldiv@grs+3)^0,f,c
  8423  0023D6                     l3135:
  8424  0023D6  5030               	movf	___fldiv@a^0,w,c
  8425  0023D8  5C38               	subwf	___fldiv@rem^0,w,c
  8426  0023DA  5031               	movf	(___fldiv@a+1)^0,w,c
  8427  0023DC  5839               	subwfb	(___fldiv@rem+1)^0,w,c
  8428  0023DE  5032               	movf	(___fldiv@a+2)^0,w,c
  8429  0023E0  583A               	subwfb	(___fldiv@rem+2)^0,w,c
  8430  0023E2  5033               	movf	(___fldiv@a+3)^0,w,c
  8431  0023E4  583B               	subwfb	(___fldiv@rem+3)^0,w,c
  8432  0023E6  A0D8               	btfss	status,0,c
  8433  0023E8  EFF8  F011         	goto	u2991
  8434  0023EC  EFFA  F011         	goto	u2990
  8435  0023F0                     u2991:
  8436  0023F0  EF03  F012         	goto	l3141
  8437  0023F4                     u2990:
  8438  0023F4  8C42               	bsf	(___fldiv@grs+3)^0,6,c
  8439  0023F6  5030               	movf	___fldiv@a^0,w,c
  8440  0023F8  5E38               	subwf	___fldiv@rem^0,f,c
  8441  0023FA  5031               	movf	(___fldiv@a+1)^0,w,c
  8442  0023FC  5A39               	subwfb	(___fldiv@rem+1)^0,f,c
  8443  0023FE  5032               	movf	(___fldiv@a+2)^0,w,c
  8444  002400  5A3A               	subwfb	(___fldiv@rem+2)^0,f,c
  8445  002402  5033               	movf	(___fldiv@a+3)^0,w,c
  8446  002404  5A3B               	subwfb	(___fldiv@rem+3)^0,f,c
  8447  002406                     l3141:
  8448  002406  2A44               	incf	___fldiv@aexp^0,f,c
  8449  002408                     l759:
  8450  002408  0E19               	movlw	25
  8451  00240A  6444               	cpfsgt	___fldiv@aexp^0,c
  8452  00240C  EF0A  F012         	goto	u3001
  8453  002410  EF0C  F012         	goto	u3000
  8454  002414                     u3001:
  8455  002414  EFCC  F011         	goto	l3127
  8456  002418                     u3000:
  8457  002418  5038               	movf	___fldiv@rem^0,w,c
  8458  00241A  1039               	iorwf	(___fldiv@rem+1)^0,w,c
  8459  00241C  103A               	iorwf	(___fldiv@rem+2)^0,w,c
  8460  00241E  103B               	iorwf	(___fldiv@rem+3)^0,w,c
  8461  002420  B4D8               	btfsc	status,2,c
  8462  002422  EF15  F012         	goto	u3011
  8463  002426  EF17  F012         	goto	u3010
  8464  00242A                     u3011:
  8465  00242A  EF2F  F012         	goto	l3153
  8466  00242E                     u3010:
  8467  00242E  803F               	bsf	___fldiv@grs^0,0,c
  8468  002430  EF2F  F012         	goto	l3153
  8469  002434                     l3147:
  8470  002434  90D8               	bcf	status,0,c
  8471  002436  362C               	rlcf	___fldiv@b^0,f,c
  8472  002438  362D               	rlcf	(___fldiv@b+1)^0,f,c
  8473  00243A  362E               	rlcf	(___fldiv@b+2)^0,f,c
  8474  00243C  362F               	rlcf	(___fldiv@b+3)^0,f,c
  8475  00243E  AE42               	btfss	(___fldiv@grs+3)^0,7,c
  8476  002440  EF24  F012         	goto	u3021
  8477  002444  EF26  F012         	goto	u3020
  8478  002448                     u3021:
  8479  002448  EF27  F012         	goto	l768
  8480  00244C                     u3020:
  8481  00244C  802C               	bsf	___fldiv@b^0,0,c
  8482  00244E                     l768:
  8483  00244E  90D8               	bcf	status,0,c
  8484  002450  363F               	rlcf	___fldiv@grs^0,f,c
  8485  002452  3640               	rlcf	(___fldiv@grs+1)^0,f,c
  8486  002454  3641               	rlcf	(___fldiv@grs+2)^0,f,c
  8487  002456  3642               	rlcf	(___fldiv@grs+3)^0,f,c
  8488  002458  063D               	decf	___fldiv@new_exp^0,f,c
  8489  00245A  A0D8               	btfss	status,0,c
  8490  00245C  063E               	decf	(___fldiv@new_exp+1)^0,f,c
  8491  00245E                     l3153:
  8492  00245E  AE2E               	btfss	(___fldiv@b+2)^0,7,c
  8493  002460  EF34  F012         	goto	u3031
  8494  002464  EF36  F012         	goto	u3030
  8495  002468                     u3031:
  8496  002468  EF1A  F012         	goto	l3147
  8497  00246C                     u3030:
  8498  00246C  0E00               	movlw	0
  8499  00246E  6E44               	movwf	___fldiv@aexp^0,c
  8500  002470  AE42               	btfss	(___fldiv@grs+3)^0,7,c
  8501  002472  EF3D  F012         	goto	u3041
  8502  002476  EF3F  F012         	goto	u3040
  8503  00247A                     u3041:
  8504  00247A  EF63  F012         	goto	l770
  8505  00247E                     u3040:
  8506  00247E  0EFF               	movlw	255
  8507  002480  143F               	andwf	___fldiv@grs^0,w,c
  8508  002482  6E34               	movwf	??___fldiv^0,c
  8509  002484  0EFF               	movlw	255
  8510  002486  1440               	andwf	(___fldiv@grs+1)^0,w,c
  8511  002488  6E35               	movwf	(??___fldiv+1)^0,c
  8512  00248A  0EFF               	movlw	255
  8513  00248C  1441               	andwf	(___fldiv@grs+2)^0,w,c
  8514  00248E  6E36               	movwf	(??___fldiv+2)^0,c
  8515  002490  0E7F               	movlw	127
  8516  002492  1442               	andwf	(___fldiv@grs+3)^0,w,c
  8517  002494  6E37               	movwf	(??___fldiv+3)^0,c
  8518  002496  5034               	movf	??___fldiv^0,w,c
  8519  002498  1035               	iorwf	(??___fldiv+1)^0,w,c
  8520  00249A  1036               	iorwf	(??___fldiv+2)^0,w,c
  8521  00249C  1037               	iorwf	(??___fldiv+3)^0,w,c
  8522  00249E  B4D8               	btfsc	status,2,c
  8523  0024A0  EF54  F012         	goto	u3051
  8524  0024A4  EF56  F012         	goto	u3050
  8525  0024A8                     u3051:
  8526  0024A8  EF5A  F012         	goto	l771
  8527  0024AC                     u3050:
  8528  0024AC                     l3161:
  8529  0024AC  0E01               	movlw	1
  8530  0024AE  6E44               	movwf	___fldiv@aexp^0,c
  8531  0024B0  EF63  F012         	goto	l770
  8532  0024B4                     l771:
  8533  0024B4  A02C               	btfss	___fldiv@b^0,0,c
  8534  0024B6  EF5F  F012         	goto	u3061
  8535  0024BA  EF61  F012         	goto	u3060
  8536  0024BE                     u3061:
  8537  0024BE  EF63  F012         	goto	l770
  8538  0024C2                     u3060:
  8539  0024C2  EF56  F012         	goto	l3161
  8540  0024C6                     l770:
  8541  0024C6  5044               	movf	___fldiv@aexp^0,w,c
  8542  0024C8  B4D8               	btfsc	status,2,c
  8543  0024CA  EF69  F012         	goto	u3071
  8544  0024CE  EF6B  F012         	goto	u3070
  8545  0024D2                     u3071:
  8546  0024D2  EF8F  F012         	goto	l3173
  8547  0024D6                     u3070:
  8548  0024D6  0E01               	movlw	1
  8549  0024D8  262C               	addwf	___fldiv@b^0,f,c
  8550  0024DA  0E00               	movlw	0
  8551  0024DC  222D               	addwfc	(___fldiv@b+1)^0,f,c
  8552  0024DE  222E               	addwfc	(___fldiv@b+2)^0,f,c
  8553  0024E0  222F               	addwfc	(___fldiv@b+3)^0,f,c
  8554  0024E2  A02F               	btfss	(___fldiv@b+3)^0,0,c
  8555  0024E4  EF76  F012         	goto	u3081
  8556  0024E8  EF78  F012         	goto	u3080
  8557  0024EC                     u3081:
  8558  0024EC  EF8F  F012         	goto	l3173
  8559  0024F0                     u3080:
  8560  0024F0  C02C  F034         	movff	___fldiv@b,??___fldiv
  8561  0024F4  C02D  F035         	movff	___fldiv@b+1,??___fldiv+1
  8562  0024F8  C02E  F036         	movff	___fldiv@b+2,??___fldiv+2
  8563  0024FC  C02F  F037         	movff	___fldiv@b+3,??___fldiv+3
  8564  002500  3437               	rlcf	(??___fldiv+3)^0,w,c
  8565  002502  3237               	rrcf	(??___fldiv+3)^0,f,c
  8566  002504  3236               	rrcf	(??___fldiv+2)^0,f,c
  8567  002506  3235               	rrcf	(??___fldiv+1)^0,f,c
  8568  002508  3234               	rrcf	??___fldiv^0,f,c
  8569  00250A  C034  F02C         	movff	??___fldiv,___fldiv@b
  8570  00250E  C035  F02D         	movff	??___fldiv+1,___fldiv@b+1
  8571  002512  C036  F02E         	movff	??___fldiv+2,___fldiv@b+2
  8572  002516  C037  F02F         	movff	??___fldiv+3,___fldiv@b+3
  8573  00251A  4A3D               	infsnz	___fldiv@new_exp^0,f,c
  8574  00251C  2A3E               	incf	(___fldiv@new_exp+1)^0,f,c
  8575  00251E                     l3173:
  8576  00251E  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8577  002520  EF9A  F012         	goto	u3091
  8578  002524  503E               	movf	(___fldiv@new_exp+1)^0,w,c
  8579  002526  E108               	bnz	u3090
  8580  002528  283D               	incf	___fldiv@new_exp^0,w,c
  8581  00252A  A0D8               	btfss	status,0,c
  8582  00252C  EF9A  F012         	goto	u3091
  8583  002530  EF9C  F012         	goto	u3090
  8584  002534                     u3091:
  8585  002534  EFA7  F012         	goto	l3177
  8586  002538                     u3090:
  8587  002538  0E00               	movlw	0
  8588  00253A  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
  8589  00253C  683D               	setf	___fldiv@new_exp^0,c
  8590  00253E  0E00               	movlw	0
  8591  002540  6E2C               	movwf	___fldiv@b^0,c
  8592  002542  0E00               	movlw	0
  8593  002544  6E2D               	movwf	(___fldiv@b+1)^0,c
  8594  002546  0E00               	movlw	0
  8595  002548  6E2E               	movwf	(___fldiv@b+2)^0,c
  8596  00254A  0E00               	movlw	0
  8597  00254C  6E2F               	movwf	(___fldiv@b+3)^0,c
  8598  00254E                     l3177:
  8599  00254E  BE3E               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8600  002550  EFB4  F012         	goto	u3100
  8601  002554  503E               	movf	(___fldiv@new_exp+1)^0,w,c
  8602  002556  E106               	bnz	u3101
  8603  002558  043D               	decf	___fldiv@new_exp^0,w,c
  8604  00255A  B0D8               	btfsc	status,0,c
  8605  00255C  EFB2  F012         	goto	u3101
  8606  002560  EFB4  F012         	goto	u3100
  8607  002564                     u3101:
  8608  002564  EFC2  F012         	goto	l3181
  8609  002568                     u3100:
  8610  002568  0E00               	movlw	0
  8611  00256A  6E3E               	movwf	(___fldiv@new_exp+1)^0,c
  8612  00256C  0E00               	movlw	0
  8613  00256E  6E3D               	movwf	___fldiv@new_exp^0,c
  8614  002570  0E00               	movlw	0
  8615  002572  6E2C               	movwf	___fldiv@b^0,c
  8616  002574  0E00               	movlw	0
  8617  002576  6E2D               	movwf	(___fldiv@b+1)^0,c
  8618  002578  0E00               	movlw	0
  8619  00257A  6E2E               	movwf	(___fldiv@b+2)^0,c
  8620  00257C  0E00               	movlw	0
  8621  00257E  6E2F               	movwf	(___fldiv@b+3)^0,c
  8622  002580  0E00               	movlw	0
  8623  002582  6E3C               	movwf	___fldiv@sign^0,c
  8624  002584                     l3181:
  8625  002584  C03D  F043         	movff	___fldiv@new_exp,___fldiv@bexp
  8626  002588  A043               	btfss	___fldiv@bexp^0,0,c
  8627  00258A  EFC9  F012         	goto	u3111
  8628  00258E  EFCB  F012         	goto	u3110
  8629  002592                     u3111:
  8630  002592  EFCE  F012         	goto	l3187
  8631  002596                     u3110:
  8632  002596  8E2E               	bsf	(___fldiv@b+2)^0,7,c
  8633  002598  EFCF  F012         	goto	l3189
  8634  00259C                     l3187:
  8635  00259C  9E2E               	bcf	(___fldiv@b+2)^0,7,c
  8636  00259E                     l3189:
  8637  00259E  90D8               	bcf	status,0,c
  8638  0025A0  3043               	rrcf	___fldiv@bexp^0,w,c
  8639  0025A2  6E2F               	movwf	(___fldiv@b+3)^0,c
  8640  0025A4  EF85  F011         	goto	l3103
  8641  0025A8                     l757:
  8642  0025A8  0012               	return		;funcret
  8643  0025AA                     __end_of___fldiv:
  8644                           	callstack 0
  8645                           
  8646 ;; *************** function ___fladd *****************
  8647 ;; Defined at:
  8648 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;  b               4   68[COMRAM] unsigned char 
  8651 ;;  a               4   72[COMRAM] unsigned char 
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;  grs             1   83[COMRAM] unsigned char 
  8654 ;;  bexp            1   82[COMRAM] unsigned char 
  8655 ;;  aexp            1   81[COMRAM] unsigned char 
  8656 ;;  signs           1   80[COMRAM] unsigned char 
  8657 ;; Return value:  Size  Location     Type
  8658 ;;                  4   68[COMRAM] unsigned char 
  8659 ;; Registers used:
  8660 ;;		wreg, status,2, status,0
  8661 ;; Tracked objects:
  8662 ;;		On entry : 0/0
  8663 ;;		On exit  : 0/0
  8664 ;;		Unchanged: 0/0
  8665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8666 ;;      Params:         8       0       0       0       0       0       0       0       0
  8667 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8668 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8669 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8670 ;;Total ram usage:       16 bytes
  8671 ;; Hardware stack levels used: 1
  8672 ;; This function calls:
  8673 ;;		Nothing
  8674 ;; This function is called by:
  8675 ;;		_main
  8676 ;;		_PWM1_Init
  8677 ;;		___flsub
  8678 ;;		_efgtoa
  8679 ;;		_PWM2_Init
  8680 ;; This function uses a non-reentrant model
  8681 ;;
  8682                           
  8683                           	psect	text38
  8684  001926                     __ptext38:
  8685                           	callstack 0
  8686  001926                     ___fladd:
  8687                           	callstack 25
  8688  001926  5048               	movf	(___fladd@b+3)^0,w,c
  8689  001928  0B80               	andlw	128
  8690  00192A  6E51               	movwf	___fladd@signs^0,c
  8691  00192C  5048               	movf	(___fladd@b+3)^0,w,c
  8692  00192E  2448               	addwf	(___fladd@b+3)^0,w,c
  8693  001930  6E53               	movwf	___fladd@bexp^0,c
  8694  001932  AE47               	btfss	(___fladd@b+2)^0,7,c
  8695  001934  EF9E  F00C         	goto	u2461
  8696  001938  EFA0  F00C         	goto	u2460
  8697  00193C                     u2461:
  8698  00193C  EFA1  F00C         	goto	l2835
  8699  001940                     u2460:
  8700  001940  8053               	bsf	___fladd@bexp^0,0,c
  8701  001942                     l2835:
  8702  001942  5053               	movf	___fladd@bexp^0,w,c
  8703  001944  B4D8               	btfsc	status,2,c
  8704  001946  EFA7  F00C         	goto	u2471
  8705  00194A  EFA9  F00C         	goto	u2470
  8706  00194E                     u2471:
  8707  00194E  EFBE  F00C         	goto	l2845
  8708  001952                     u2470:
  8709  001952  2853               	incf	___fladd@bexp^0,w,c
  8710  001954  A4D8               	btfss	status,2,c
  8711  001956  EFAF  F00C         	goto	u2481
  8712  00195A  EFB1  F00C         	goto	u2480
  8713  00195E                     u2481:
  8714  00195E  EFB9  F00C         	goto	l2841
  8715  001962                     u2480:
  8716  001962  0E00               	movlw	0
  8717  001964  6E45               	movwf	___fladd@b^0,c
  8718  001966  0E00               	movlw	0
  8719  001968  6E46               	movwf	(___fladd@b+1)^0,c
  8720  00196A  0E00               	movlw	0
  8721  00196C  6E47               	movwf	(___fladd@b+2)^0,c
  8722  00196E  0E00               	movlw	0
  8723  001970  6E48               	movwf	(___fladd@b+3)^0,c
  8724  001972                     l2841:
  8725  001972  8E47               	bsf	(___fladd@b+2)^0,7,c
  8726  001974  0E00               	movlw	0
  8727  001976  6E48               	movwf	(___fladd@b+3)^0,c
  8728  001978  EFC6  F00C         	goto	l2847
  8729  00197C                     l2845:
  8730  00197C  0E00               	movlw	0
  8731  00197E  6E45               	movwf	___fladd@b^0,c
  8732  001980  0E00               	movlw	0
  8733  001982  6E46               	movwf	(___fladd@b+1)^0,c
  8734  001984  0E00               	movlw	0
  8735  001986  6E47               	movwf	(___fladd@b+2)^0,c
  8736  001988  0E00               	movlw	0
  8737  00198A  6E48               	movwf	(___fladd@b+3)^0,c
  8738  00198C                     l2847:
  8739  00198C  504C               	movf	(___fladd@a+3)^0,w,c
  8740  00198E  0B80               	andlw	128
  8741  001990  6E52               	movwf	___fladd@aexp^0,c
  8742  001992  5051               	movf	___fladd@signs^0,w,c
  8743  001994  1852               	xorwf	___fladd@aexp^0,w,c
  8744  001996  B4D8               	btfsc	status,2,c
  8745  001998  EFD0  F00C         	goto	u2491
  8746  00199C  EFD2  F00C         	goto	u2490
  8747  0019A0                     u2491:
  8748  0019A0  EFD3  F00C         	goto	l2853
  8749  0019A4                     u2490:
  8750  0019A4  8C51               	bsf	___fladd@signs^0,6,c
  8751  0019A6                     l2853:
  8752  0019A6  504C               	movf	(___fladd@a+3)^0,w,c
  8753  0019A8  244C               	addwf	(___fladd@a+3)^0,w,c
  8754  0019AA  6E52               	movwf	___fladd@aexp^0,c
  8755  0019AC  AE4B               	btfss	(___fladd@a+2)^0,7,c
  8756  0019AE  EFDB  F00C         	goto	u2501
  8757  0019B2  EFDD  F00C         	goto	u2500
  8758  0019B6                     u2501:
  8759  0019B6  EFDE  F00C         	goto	l2859
  8760  0019BA                     u2500:
  8761  0019BA  8052               	bsf	___fladd@aexp^0,0,c
  8762  0019BC                     l2859:
  8763  0019BC  5052               	movf	___fladd@aexp^0,w,c
  8764  0019BE  B4D8               	btfsc	status,2,c
  8765  0019C0  EFE4  F00C         	goto	u2511
  8766  0019C4  EFE6  F00C         	goto	u2510
  8767  0019C8                     u2511:
  8768  0019C8  EFFB  F00C         	goto	l2869
  8769  0019CC                     u2510:
  8770  0019CC  2852               	incf	___fladd@aexp^0,w,c
  8771  0019CE  A4D8               	btfss	status,2,c
  8772  0019D0  EFEC  F00C         	goto	u2521
  8773  0019D4  EFEE  F00C         	goto	u2520
  8774  0019D8                     u2521:
  8775  0019D8  EFF6  F00C         	goto	l2865
  8776  0019DC                     u2520:
  8777  0019DC  0E00               	movlw	0
  8778  0019DE  6E49               	movwf	___fladd@a^0,c
  8779  0019E0  0E00               	movlw	0
  8780  0019E2  6E4A               	movwf	(___fladd@a+1)^0,c
  8781  0019E4  0E00               	movlw	0
  8782  0019E6  6E4B               	movwf	(___fladd@a+2)^0,c
  8783  0019E8  0E00               	movlw	0
  8784  0019EA  6E4C               	movwf	(___fladd@a+3)^0,c
  8785  0019EC                     l2865:
  8786  0019EC  8E4B               	bsf	(___fladd@a+2)^0,7,c
  8787  0019EE  0E00               	movlw	0
  8788  0019F0  6E4C               	movwf	(___fladd@a+3)^0,c
  8789  0019F2  EF03  F00D         	goto	l2871
  8790  0019F6                     l2869:
  8791  0019F6  0E00               	movlw	0
  8792  0019F8  6E49               	movwf	___fladd@a^0,c
  8793  0019FA  0E00               	movlw	0
  8794  0019FC  6E4A               	movwf	(___fladd@a+1)^0,c
  8795  0019FE  0E00               	movlw	0
  8796  001A00  6E4B               	movwf	(___fladd@a+2)^0,c
  8797  001A02  0E00               	movlw	0
  8798  001A04  6E4C               	movwf	(___fladd@a+3)^0,c
  8799  001A06                     l2871:
  8800  001A06  5053               	movf	___fladd@bexp^0,w,c
  8801  001A08  5C52               	subwf	___fladd@aexp^0,w,c
  8802  001A0A  B0D8               	btfsc	status,0,c
  8803  001A0C  EF0A  F00D         	goto	u2531
  8804  001A10  EF0C  F00D         	goto	u2530
  8805  001A14                     u2531:
  8806  001A14  EF33  F00D         	goto	l2907
  8807  001A18                     u2530:
  8808  001A18  AC51               	btfss	___fladd@signs^0,6,c
  8809  001A1A  EF11  F00D         	goto	u2541
  8810  001A1E  EF13  F00D         	goto	u2540
  8811  001A22                     u2541:
  8812  001A22  EF15  F00D         	goto	l2877
  8813  001A26                     u2540:
  8814  001A26  0E80               	movlw	128
  8815  001A28  1A51               	xorwf	___fladd@signs^0,f,c
  8816  001A2A                     l2877:
  8817  001A2A  C053  F054         	movff	___fladd@bexp,___fladd@grs
  8818  001A2E  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  8819  001A32  C054  F052         	movff	___fladd@grs,___fladd@aexp
  8820  001A36  C045  F054         	movff	___fladd@b,___fladd@grs
  8821  001A3A  C049  F045         	movff	___fladd@a,___fladd@b
  8822  001A3E  C054  F049         	movff	___fladd@grs,___fladd@a
  8823  001A42  C046  F054         	movff	___fladd@b+1,___fladd@grs
  8824  001A46  C04A  F046         	movff	___fladd@a+1,___fladd@b+1
  8825  001A4A  C054  F04A         	movff	___fladd@grs,___fladd@a+1
  8826  001A4E  C047  F054         	movff	___fladd@b+2,___fladd@grs
  8827  001A52  C04B  F047         	movff	___fladd@a+2,___fladd@b+2
  8828  001A56  C054  F04B         	movff	___fladd@grs,___fladd@a+2
  8829  001A5A  C048  F054         	movff	___fladd@b+3,___fladd@grs
  8830  001A5E  C04C  F048         	movff	___fladd@a+3,___fladd@b+3
  8831  001A62  C054  F04C         	movff	___fladd@grs,___fladd@a+3
  8832  001A66                     l2907:
  8833  001A66  0E00               	movlw	0
  8834  001A68  6E54               	movwf	___fladd@grs^0,c
  8835  001A6A  5053               	movf	___fladd@bexp^0,w,c
  8836  001A6C  C052  F04D         	movff	___fladd@aexp,??___fladd
  8837  001A70  6A4E               	clrf	(??___fladd+1)^0,c
  8838  001A72  5E4D               	subwf	??___fladd^0,f,c
  8839  001A74  0E00               	movlw	0
  8840  001A76  5A4E               	subwfb	(??___fladd+1)^0,f,c
  8841  001A78  BE4E               	btfsc	(??___fladd+1)^0,7,c
  8842  001A7A  EF48  F00D         	goto	u2551
  8843  001A7E  504E               	movf	(??___fladd+1)^0,w,c
  8844  001A80  E109               	bnz	u2550
  8845  001A82  0E1A               	movlw	26
  8846  001A84  5C4D               	subwf	??___fladd^0,w,c
  8847  001A86  A0D8               	btfss	status,0,c
  8848  001A88  EF48  F00D         	goto	u2551
  8849  001A8C  EF4A  F00D         	goto	u2550
  8850  001A90                     u2551:
  8851  001A90  EF81  F00D         	goto	l704
  8852  001A94                     u2550:
  8853  001A94  5045               	movf	___fladd@b^0,w,c
  8854  001A96  1046               	iorwf	(___fladd@b+1)^0,w,c
  8855  001A98  1047               	iorwf	(___fladd@b+2)^0,w,c
  8856  001A9A  1048               	iorwf	(___fladd@b+3)^0,w,c
  8857  001A9C  A4D8               	btfss	status,2,c
  8858  001A9E  EF53  F00D         	goto	u2561
  8859  001AA2  EF56  F00D         	goto	u2560
  8860  001AA6                     u2561:
  8861  001AA6  0E01               	movlw	1
  8862  001AA8  EF57  F00D         	goto	u2570
  8863  001AAC                     u2560:
  8864  001AAC  0E00               	movlw	0
  8865  001AAE                     u2570:
  8866  001AAE  6E54               	movwf	___fladd@grs^0,c
  8867  001AB0  0E00               	movlw	0
  8868  001AB2  6E45               	movwf	___fladd@b^0,c
  8869  001AB4  0E00               	movlw	0
  8870  001AB6  6E46               	movwf	(___fladd@b+1)^0,c
  8871  001AB8  0E00               	movlw	0
  8872  001ABA  6E47               	movwf	(___fladd@b+2)^0,c
  8873  001ABC  0E00               	movlw	0
  8874  001ABE  6E48               	movwf	(___fladd@b+3)^0,c
  8875  001AC0  C052  F053         	movff	___fladd@aexp,___fladd@bexp
  8876  001AC4  EF8A  F00D         	goto	l703
  8877  001AC8                     l705:
  8878  001AC8  A054               	btfss	___fladd@grs^0,0,c
  8879  001ACA  EF69  F00D         	goto	u2581
  8880  001ACE  EF6B  F00D         	goto	u2580
  8881  001AD2                     u2581:
  8882  001AD2  EF71  F00D         	goto	l2919
  8883  001AD6                     u2580:
  8884  001AD6  90D8               	bcf	status,0,c
  8885  001AD8  3054               	rrcf	___fladd@grs^0,w,c
  8886  001ADA  0901               	iorlw	1
  8887  001ADC  6E54               	movwf	___fladd@grs^0,c
  8888  001ADE  EF73  F00D         	goto	l2921
  8889  001AE2                     l2919:
  8890  001AE2  90D8               	bcf	status,0,c
  8891  001AE4  3254               	rrcf	___fladd@grs^0,f,c
  8892  001AE6                     l2921:
  8893  001AE6  A045               	btfss	___fladd@b^0,0,c
  8894  001AE8  EF78  F00D         	goto	u2591
  8895  001AEC  EF7A  F00D         	goto	u2590
  8896  001AF0                     u2591:
  8897  001AF0  EF7B  F00D         	goto	l2925
  8898  001AF4                     u2590:
  8899  001AF4  8E54               	bsf	___fladd@grs^0,7,c
  8900  001AF6                     l2925:
  8901  001AF6  3448               	rlcf	(___fladd@b+3)^0,w,c
  8902  001AF8  3248               	rrcf	(___fladd@b+3)^0,f,c
  8903  001AFA  3247               	rrcf	(___fladd@b+2)^0,f,c
  8904  001AFC  3246               	rrcf	(___fladd@b+1)^0,f,c
  8905  001AFE  3245               	rrcf	___fladd@b^0,f,c
  8906  001B00  2A53               	incf	___fladd@bexp^0,f,c
  8907  001B02                     l704:
  8908  001B02  5052               	movf	___fladd@aexp^0,w,c
  8909  001B04  5C53               	subwf	___fladd@bexp^0,w,c
  8910  001B06  A0D8               	btfss	status,0,c
  8911  001B08  EF88  F00D         	goto	u2601
  8912  001B0C  EF8A  F00D         	goto	u2600
  8913  001B10                     u2601:
  8914  001B10  EF64  F00D         	goto	l705
  8915  001B14                     u2600:
  8916  001B14                     l703:
  8917  001B14  BC51               	btfsc	___fladd@signs^0,6,c
  8918  001B16  EF8F  F00D         	goto	u2611
  8919  001B1A  EF91  F00D         	goto	u2610
  8920  001B1E                     u2611:
  8921  001B1E  EFD1  F00D         	goto	l2953
  8922  001B22                     u2610:
  8923  001B22  5053               	movf	___fladd@bexp^0,w,c
  8924  001B24  A4D8               	btfss	status,2,c
  8925  001B26  EF97  F00D         	goto	u2621
  8926  001B2A  EF99  F00D         	goto	u2620
  8927  001B2E                     u2621:
  8928  001B2E  EFA3  F00D         	goto	l2935
  8929  001B32                     u2620:
  8930  001B32  0E00               	movlw	0
  8931  001B34  6E45               	movwf	?___fladd^0,c
  8932  001B36  0E00               	movlw	0
  8933  001B38  6E46               	movwf	(?___fladd+1)^0,c
  8934  001B3A  0E00               	movlw	0
  8935  001B3C  6E47               	movwf	(?___fladd+2)^0,c
  8936  001B3E  0E00               	movlw	0
  8937  001B40  6E48               	movwf	(?___fladd+3)^0,c
  8938  001B42  EFF2  F00E         	goto	l712
  8939  001B46                     l2935:
  8940  001B46  5049               	movf	___fladd@a^0,w,c
  8941  001B48  2645               	addwf	___fladd@b^0,f,c
  8942  001B4A  504A               	movf	(___fladd@a+1)^0,w,c
  8943  001B4C  2246               	addwfc	(___fladd@b+1)^0,f,c
  8944  001B4E  504B               	movf	(___fladd@a+2)^0,w,c
  8945  001B50  2247               	addwfc	(___fladd@b+2)^0,f,c
  8946  001B52  504C               	movf	(___fladd@a+3)^0,w,c
  8947  001B54  2248               	addwfc	(___fladd@b+3)^0,f,c
  8948  001B56  A048               	btfss	(___fladd@b+3)^0,0,c
  8949  001B58  EFB0  F00D         	goto	u2631
  8950  001B5C  EFB2  F00D         	goto	u2630
  8951  001B60                     u2631:
  8952  001B60  EF5E  F00E         	goto	l2989
  8953  001B64                     u2630:
  8954  001B64  A054               	btfss	___fladd@grs^0,0,c
  8955  001B66  EFB7  F00D         	goto	u2641
  8956  001B6A  EFB9  F00D         	goto	u2640
  8957  001B6E                     u2641:
  8958  001B6E  EFBF  F00D         	goto	l2943
  8959  001B72                     u2640:
  8960  001B72  90D8               	bcf	status,0,c
  8961  001B74  3054               	rrcf	___fladd@grs^0,w,c
  8962  001B76  0901               	iorlw	1
  8963  001B78  6E54               	movwf	___fladd@grs^0,c
  8964  001B7A  EFC1  F00D         	goto	l2945
  8965  001B7E                     l2943:
  8966  001B7E  90D8               	bcf	status,0,c
  8967  001B80  3254               	rrcf	___fladd@grs^0,f,c
  8968  001B82                     l2945:
  8969  001B82  A045               	btfss	___fladd@b^0,0,c
  8970  001B84  EFC6  F00D         	goto	u2651
  8971  001B88  EFC8  F00D         	goto	u2650
  8972  001B8C                     u2651:
  8973  001B8C  EFC9  F00D         	goto	l2949
  8974  001B90                     u2650:
  8975  001B90  8E54               	bsf	___fladd@grs^0,7,c
  8976  001B92                     l2949:
  8977  001B92  3448               	rlcf	(___fladd@b+3)^0,w,c
  8978  001B94  3248               	rrcf	(___fladd@b+3)^0,f,c
  8979  001B96  3247               	rrcf	(___fladd@b+2)^0,f,c
  8980  001B98  3246               	rrcf	(___fladd@b+1)^0,f,c
  8981  001B9A  3245               	rrcf	___fladd@b^0,f,c
  8982  001B9C  2A53               	incf	___fladd@bexp^0,f,c
  8983  001B9E  EF5E  F00E         	goto	l2989
  8984  001BA2                     l2953:
  8985  001BA2  5049               	movf	___fladd@a^0,w,c
  8986  001BA4  5C45               	subwf	___fladd@b^0,w,c
  8987  001BA6  504A               	movf	(___fladd@a+1)^0,w,c
  8988  001BA8  5846               	subwfb	(___fladd@b+1)^0,w,c
  8989  001BAA  504B               	movf	(___fladd@a+2)^0,w,c
  8990  001BAC  5847               	subwfb	(___fladd@b+2)^0,w,c
  8991  001BAE  5048               	movf	(___fladd@b+3)^0,w,c
  8992  001BB0  0A80               	xorlw	128
  8993  001BB2  6E4D               	movwf	??___fladd^0,c
  8994  001BB4  504C               	movf	(___fladd@a+3)^0,w,c
  8995  001BB6  0A80               	xorlw	128
  8996  001BB8  584D               	subwfb	??___fladd^0,w,c
  8997  001BBA  B0D8               	btfsc	status,0,c
  8998  001BBC  EFE2  F00D         	goto	u2661
  8999  001BC0  EFE4  F00D         	goto	u2660
  9000  001BC4                     u2661:
  9001  001BC4  EF0F  F00E         	goto	l2963
  9002  001BC8                     u2660:
  9003  001BC8  5045               	movf	___fladd@b^0,w,c
  9004  001BCA  5C49               	subwf	___fladd@a^0,w,c
  9005  001BCC  6E4D               	movwf	??___fladd^0,c
  9006  001BCE  5046               	movf	(___fladd@b+1)^0,w,c
  9007  001BD0  584A               	subwfb	(___fladd@a+1)^0,w,c
  9008  001BD2  6E4E               	movwf	(??___fladd+1)^0,c
  9009  001BD4  5047               	movf	(___fladd@b+2)^0,w,c
  9010  001BD6  584B               	subwfb	(___fladd@a+2)^0,w,c
  9011  001BD8  6E4F               	movwf	(??___fladd+2)^0,c
  9012  001BDA  5048               	movf	(___fladd@b+3)^0,w,c
  9013  001BDC  584C               	subwfb	(___fladd@a+3)^0,w,c
  9014  001BDE  6E50               	movwf	(??___fladd+3)^0,c
  9015  001BE0  0EFF               	movlw	255
  9016  001BE2  244D               	addwf	??___fladd^0,w,c
  9017  001BE4  6E45               	movwf	___fladd@b^0,c
  9018  001BE6  0EFF               	movlw	255
  9019  001BE8  204E               	addwfc	(??___fladd+1)^0,w,c
  9020  001BEA  6E46               	movwf	(___fladd@b+1)^0,c
  9021  001BEC  0EFF               	movlw	255
  9022  001BEE  204F               	addwfc	(??___fladd+2)^0,w,c
  9023  001BF0  6E47               	movwf	(___fladd@b+2)^0,c
  9024  001BF2  0EFF               	movlw	255
  9025  001BF4  2050               	addwfc	(??___fladd+3)^0,w,c
  9026  001BF6  6E48               	movwf	(___fladd@b+3)^0,c
  9027  001BF8  0E80               	movlw	128
  9028  001BFA  1A51               	xorwf	___fladd@signs^0,f,c
  9029  001BFC  6C54               	negf	___fladd@grs^0,c
  9030  001BFE  5054               	movf	___fladd@grs^0,w,c
  9031  001C00  A4D8               	btfss	status,2,c
  9032  001C02  EF05  F00E         	goto	u2671
  9033  001C06  EF07  F00E         	goto	u2670
  9034  001C0A                     u2671:
  9035  001C0A  EF17  F00E         	goto	l720
  9036  001C0E                     u2670:
  9037  001C0E  0E01               	movlw	1
  9038  001C10  2645               	addwf	___fladd@b^0,f,c
  9039  001C12  0E00               	movlw	0
  9040  001C14  2246               	addwfc	(___fladd@b+1)^0,f,c
  9041  001C16  2247               	addwfc	(___fladd@b+2)^0,f,c
  9042  001C18  2248               	addwfc	(___fladd@b+3)^0,f,c
  9043  001C1A  EF17  F00E         	goto	l720
  9044  001C1E                     l2963:
  9045  001C1E  5049               	movf	___fladd@a^0,w,c
  9046  001C20  5E45               	subwf	___fladd@b^0,f,c
  9047  001C22  504A               	movf	(___fladd@a+1)^0,w,c
  9048  001C24  5A46               	subwfb	(___fladd@b+1)^0,f,c
  9049  001C26  504B               	movf	(___fladd@a+2)^0,w,c
  9050  001C28  5A47               	subwfb	(___fladd@b+2)^0,f,c
  9051  001C2A  504C               	movf	(___fladd@a+3)^0,w,c
  9052  001C2C  5A48               	subwfb	(___fladd@b+3)^0,f,c
  9053  001C2E                     l720:
  9054  001C2E  5045               	movf	___fladd@b^0,w,c
  9055  001C30  1046               	iorwf	(___fladd@b+1)^0,w,c
  9056  001C32  1047               	iorwf	(___fladd@b+2)^0,w,c
  9057  001C34  1048               	iorwf	(___fladd@b+3)^0,w,c
  9058  001C36  A4D8               	btfss	status,2,c
  9059  001C38  EF20  F00E         	goto	u2681
  9060  001C3C  EF22  F00E         	goto	u2680
  9061  001C40                     u2681:
  9062  001C40  EF57  F00E         	goto	l2987
  9063  001C44                     u2680:
  9064  001C44  5054               	movf	___fladd@grs^0,w,c
  9065  001C46  A4D8               	btfss	status,2,c
  9066  001C48  EF28  F00E         	goto	u2691
  9067  001C4C  EF2A  F00E         	goto	u2690
  9068  001C50                     u2691:
  9069  001C50  EF57  F00E         	goto	l2987
  9070  001C54                     u2690:
  9071  001C54  0E00               	movlw	0
  9072  001C56  6E45               	movwf	?___fladd^0,c
  9073  001C58  0E00               	movlw	0
  9074  001C5A  6E46               	movwf	(?___fladd+1)^0,c
  9075  001C5C  0E00               	movlw	0
  9076  001C5E  6E47               	movwf	(?___fladd+2)^0,c
  9077  001C60  0E00               	movlw	0
  9078  001C62  6E48               	movwf	(?___fladd+3)^0,c
  9079  001C64  EFF2  F00E         	goto	l712
  9080  001C68                     l2971:
  9081  001C68  90D8               	bcf	status,0,c
  9082  001C6A  3645               	rlcf	___fladd@b^0,f,c
  9083  001C6C  3646               	rlcf	(___fladd@b+1)^0,f,c
  9084  001C6E  3647               	rlcf	(___fladd@b+2)^0,f,c
  9085  001C70  3648               	rlcf	(___fladd@b+3)^0,f,c
  9086  001C72  AE54               	btfss	___fladd@grs^0,7,c
  9087  001C74  EF3E  F00E         	goto	u2701
  9088  001C78  EF40  F00E         	goto	u2700
  9089  001C7C                     u2701:
  9090  001C7C  EF41  F00E         	goto	l2977
  9091  001C80                     u2700:
  9092  001C80  8045               	bsf	___fladd@b^0,0,c
  9093  001C82                     l2977:
  9094  001C82  A054               	btfss	___fladd@grs^0,0,c
  9095  001C84  EF46  F00E         	goto	u2711
  9096  001C88  EF48  F00E         	goto	u2710
  9097  001C8C                     u2711:
  9098  001C8C  EF4C  F00E         	goto	l2981
  9099  001C90                     u2710:
  9100  001C90  80D8               	bsf	status,0,c
  9101  001C92  3654               	rlcf	___fladd@grs^0,f,c
  9102  001C94  EF4E  F00E         	goto	l2983
  9103  001C98                     l2981:
  9104  001C98  90D8               	bcf	status,0,c
  9105  001C9A  3654               	rlcf	___fladd@grs^0,f,c
  9106  001C9C                     l2983:
  9107  001C9C  5053               	movf	___fladd@bexp^0,w,c
  9108  001C9E  B4D8               	btfsc	status,2,c
  9109  001CA0  EF54  F00E         	goto	u2721
  9110  001CA4  EF56  F00E         	goto	u2720
  9111  001CA8                     u2721:
  9112  001CA8  EF57  F00E         	goto	l2987
  9113  001CAC                     u2720:
  9114  001CAC  0653               	decf	___fladd@bexp^0,f,c
  9115  001CAE                     l2987:
  9116  001CAE  AE47               	btfss	(___fladd@b+2)^0,7,c
  9117  001CB0  EF5C  F00E         	goto	u2731
  9118  001CB4  EF5E  F00E         	goto	u2730
  9119  001CB8                     u2731:
  9120  001CB8  EF34  F00E         	goto	l2971
  9121  001CBC                     u2730:
  9122  001CBC                     l2989:
  9123  001CBC  0E00               	movlw	0
  9124  001CBE  6E52               	movwf	___fladd@aexp^0,c
  9125  001CC0  AE54               	btfss	___fladd@grs^0,7,c
  9126  001CC2  EF65  F00E         	goto	u2741
  9127  001CC6  EF67  F00E         	goto	u2740
  9128  001CCA                     u2741:
  9129  001CCA  EF7F  F00E         	goto	l729
  9130  001CCE                     u2740:
  9131  001CCE  C054  F04D         	movff	___fladd@grs,??___fladd
  9132  001CD2  0E7F               	movlw	127
  9133  001CD4  164D               	andwf	??___fladd^0,f,c
  9134  001CD6  B4D8               	btfsc	status,2,c
  9135  001CD8  EF70  F00E         	goto	u2751
  9136  001CDC  EF72  F00E         	goto	u2750
  9137  001CE0                     u2751:
  9138  001CE0  EF76  F00E         	goto	l730
  9139  001CE4                     u2750:
  9140  001CE4                     l2995:
  9141  001CE4  0E01               	movlw	1
  9142  001CE6  6E52               	movwf	___fladd@aexp^0,c
  9143  001CE8  EF7F  F00E         	goto	l729
  9144  001CEC                     l730:
  9145  001CEC  A045               	btfss	___fladd@b^0,0,c
  9146  001CEE  EF7B  F00E         	goto	u2761
  9147  001CF2  EF7D  F00E         	goto	u2760
  9148  001CF6                     u2761:
  9149  001CF6  EF7F  F00E         	goto	l729
  9150  001CFA                     u2760:
  9151  001CFA  EF72  F00E         	goto	l2995
  9152  001CFE                     l729:
  9153  001CFE  5052               	movf	___fladd@aexp^0,w,c
  9154  001D00  B4D8               	btfsc	status,2,c
  9155  001D02  EF85  F00E         	goto	u2771
  9156  001D06  EF87  F00E         	goto	u2770
  9157  001D0A                     u2771:
  9158  001D0A  EFB2  F00E         	goto	l3007
  9159  001D0E                     u2770:
  9160  001D0E  0E01               	movlw	1
  9161  001D10  2645               	addwf	___fladd@b^0,f,c
  9162  001D12  0E00               	movlw	0
  9163  001D14  2246               	addwfc	(___fladd@b+1)^0,f,c
  9164  001D16  2247               	addwfc	(___fladd@b+2)^0,f,c
  9165  001D18  2248               	addwfc	(___fladd@b+3)^0,f,c
  9166  001D1A  A048               	btfss	(___fladd@b+3)^0,0,c
  9167  001D1C  EF92  F00E         	goto	u2781
  9168  001D20  EF94  F00E         	goto	u2780
  9169  001D24                     u2781:
  9170  001D24  EFB2  F00E         	goto	l3007
  9171  001D28                     u2780:
  9172  001D28  C045  F04D         	movff	___fladd@b,??___fladd
  9173  001D2C  C046  F04E         	movff	___fladd@b+1,??___fladd+1
  9174  001D30  C047  F04F         	movff	___fladd@b+2,??___fladd+2
  9175  001D34  C048  F050         	movff	___fladd@b+3,??___fladd+3
  9176  001D38  3450               	rlcf	(??___fladd+3)^0,w,c
  9177  001D3A  3250               	rrcf	(??___fladd+3)^0,f,c
  9178  001D3C  324F               	rrcf	(??___fladd+2)^0,f,c
  9179  001D3E  324E               	rrcf	(??___fladd+1)^0,f,c
  9180  001D40  324D               	rrcf	??___fladd^0,f,c
  9181  001D42  C04D  F045         	movff	??___fladd,___fladd@b
  9182  001D46  C04E  F046         	movff	??___fladd+1,___fladd@b+1
  9183  001D4A  C04F  F047         	movff	??___fladd+2,___fladd@b+2
  9184  001D4E  C050  F048         	movff	??___fladd+3,___fladd@b+3
  9185  001D52  2853               	incf	___fladd@bexp^0,w,c
  9186  001D54  B4D8               	btfsc	status,2,c
  9187  001D56  EFAF  F00E         	goto	u2791
  9188  001D5A  EFB1  F00E         	goto	u2790
  9189  001D5E                     u2791:
  9190  001D5E  EFB2  F00E         	goto	l3007
  9191  001D62                     u2790:
  9192  001D62  2A53               	incf	___fladd@bexp^0,f,c
  9193  001D64                     l3007:
  9194  001D64  2853               	incf	___fladd@bexp^0,w,c
  9195  001D66  B4D8               	btfsc	status,2,c
  9196  001D68  EFB8  F00E         	goto	u2801
  9197  001D6C  EFBA  F00E         	goto	u2800
  9198  001D70                     u2801:
  9199  001D70  EFC2  F00E         	goto	l3011
  9200  001D74                     u2800:
  9201  001D74  5053               	movf	___fladd@bexp^0,w,c
  9202  001D76  A4D8               	btfss	status,2,c
  9203  001D78  EFC0  F00E         	goto	u2811
  9204  001D7C  EFC2  F00E         	goto	u2810
  9205  001D80                     u2811:
  9206  001D80  EFD4  F00E         	goto	l3015
  9207  001D84                     u2810:
  9208  001D84                     l3011:
  9209  001D84  0E00               	movlw	0
  9210  001D86  6E45               	movwf	___fladd@b^0,c
  9211  001D88  0E00               	movlw	0
  9212  001D8A  6E46               	movwf	(___fladd@b+1)^0,c
  9213  001D8C  0E00               	movlw	0
  9214  001D8E  6E47               	movwf	(___fladd@b+2)^0,c
  9215  001D90  0E00               	movlw	0
  9216  001D92  6E48               	movwf	(___fladd@b+3)^0,c
  9217  001D94  5053               	movf	___fladd@bexp^0,w,c
  9218  001D96  A4D8               	btfss	status,2,c
  9219  001D98  EFD0  F00E         	goto	u2821
  9220  001D9C  EFD2  F00E         	goto	u2820
  9221  001DA0                     u2821:
  9222  001DA0  EFD4  F00E         	goto	l3015
  9223  001DA4                     u2820:
  9224  001DA4  0E00               	movlw	0
  9225  001DA6  6E51               	movwf	___fladd@signs^0,c
  9226  001DA8                     l3015:
  9227  001DA8  A053               	btfss	___fladd@bexp^0,0,c
  9228  001DAA  EFD9  F00E         	goto	u2831
  9229  001DAE  EFDB  F00E         	goto	u2830
  9230  001DB2                     u2831:
  9231  001DB2  EFDE  F00E         	goto	l3019
  9232  001DB6                     u2830:
  9233  001DB6  8E47               	bsf	(___fladd@b+2)^0,7,c
  9234  001DB8  EFDF  F00E         	goto	l3021
  9235  001DBC                     l3019:
  9236  001DBC  9E47               	bcf	(___fladd@b+2)^0,7,c
  9237  001DBE                     l3021:
  9238  001DBE  90D8               	bcf	status,0,c
  9239  001DC0  3053               	rrcf	___fladd@bexp^0,w,c
  9240  001DC2  6E48               	movwf	(___fladd@b+3)^0,c
  9241  001DC4  AE51               	btfss	___fladd@signs^0,7,c
  9242  001DC6  EFE7  F00E         	goto	u2841
  9243  001DCA  EFE9  F00E         	goto	u2840
  9244  001DCE                     u2841:
  9245  001DCE  EFEA  F00E         	goto	l3027
  9246  001DD2                     u2840:
  9247  001DD2  8E48               	bsf	(___fladd@b+3)^0,7,c
  9248  001DD4                     l3027:
  9249  001DD4  C045  F045         	movff	___fladd@b,?___fladd
  9250  001DD8  C046  F046         	movff	___fladd@b+1,?___fladd+1
  9251  001DDC  C047  F047         	movff	___fladd@b+2,?___fladd+2
  9252  001DE0  C048  F048         	movff	___fladd@b+3,?___fladd+3
  9253  001DE4                     l712:
  9254  001DE4  0012               	return		;funcret
  9255  001DE6                     __end_of___fladd:
  9256                           	callstack 0
  9257                           
  9258 ;; *************** function _Motor_Start *****************
  9259 ;; Defined at:
  9260 ;;		line 90 in file "main.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;		None
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;		None
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  1    wreg      void 
  9267 ;; Registers used:
  9268 ;;		None
  9269 ;; Tracked objects:
  9270 ;;		On entry : 0/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9274 ;;      Params:         0       0       0       0       0       0       0       0       0
  9275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9277 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9278 ;;Total ram usage:        0 bytes
  9279 ;; Hardware stack levels used: 1
  9280 ;; This function calls:
  9281 ;;		Nothing
  9282 ;; This function is called by:
  9283 ;;		_main
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           	psect	text39
  9288  003D10                     __ptext39:
  9289                           	callstack 0
  9290  003D10                     _Motor_Start:
  9291                           	callstack 30
  9292  003D10                     
  9293                           ;main.c: 91:     PORTDbits.RD0 = 1;
  9294  003D10  8083               	bsf	131,0,c	;volatile
  9295                           
  9296                           ;main.c: 92:     PORTDbits.RD1 = 0;
  9297  003D12  9283               	bcf	131,1,c	;volatile
  9298  003D14  0012               	return		;funcret
  9299  003D16                     __end_of_Motor_Start:
  9300                           	callstack 0
  9301                           
  9302                           	psect	rparam
  9303  0000                     
  9304                           	psect	idloc
  9305                           
  9306                           ;Config register IDLOC0 @ 0x200000
  9307                           ;	unspecified, using default values
  9308  200000                     	org	2097152
  9309  200000  FF                 	db	255
  9310                           
  9311                           ;Config register IDLOC1 @ 0x200001
  9312                           ;	unspecified, using default values
  9313  200001                     	org	2097153
  9314  200001  FF                 	db	255
  9315                           
  9316                           ;Config register IDLOC2 @ 0x200002
  9317                           ;	unspecified, using default values
  9318  200002                     	org	2097154
  9319  200002  FF                 	db	255
  9320                           
  9321                           ;Config register IDLOC3 @ 0x200003
  9322                           ;	unspecified, using default values
  9323  200003                     	org	2097155
  9324  200003  FF                 	db	255
  9325                           
  9326                           ;Config register IDLOC4 @ 0x200004
  9327                           ;	unspecified, using default values
  9328  200004                     	org	2097156
  9329  200004  FF                 	db	255
  9330                           
  9331                           ;Config register IDLOC5 @ 0x200005
  9332                           ;	unspecified, using default values
  9333  200005                     	org	2097157
  9334  200005  FF                 	db	255
  9335                           
  9336                           ;Config register IDLOC6 @ 0x200006
  9337                           ;	unspecified, using default values
  9338  200006                     	org	2097158
  9339  200006  FF                 	db	255
  9340                           
  9341                           ;Config register IDLOC7 @ 0x200007
  9342                           ;	unspecified, using default values
  9343  200007                     	org	2097159
  9344  200007  FF                 	db	255
  9345                           
  9346                           	psect	config
  9347                           
  9348                           ;Config register CONFIG1L @ 0x300000
  9349                           ;	PLL Prescaler Selection bits
  9350                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9351                           ;	System Clock Postscaler Selection bits
  9352                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9353                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9354                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9355  300000                     	org	3145728
  9356  300000  00                 	db	0
  9357                           
  9358                           ;Config register CONFIG1H @ 0x300001
  9359                           ;	Oscillator Selection bits
  9360                           ;	FOSC = HS, HS oscillator (HS)
  9361                           ;	Fail-Safe Clock Monitor Enable bit
  9362                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9363                           ;	Internal/External Oscillator Switchover bit
  9364                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9365  300001                     	org	3145729
  9366  300001  0C                 	db	12
  9367                           
  9368                           ;Config register CONFIG2L @ 0x300002
  9369                           ;	Power-up Timer Enable bit
  9370                           ;	PWRT = OFF, PWRT disabled
  9371                           ;	Brown-out Reset Enable bits
  9372                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  9373                           ;	Brown-out Reset Voltage bits
  9374                           ;	BORV = 3, Minimum setting 2.05V
  9375                           ;	USB Voltage Regulator Enable bit
  9376                           ;	VREGEN = OFF, USB voltage regulator disabled
  9377  300002                     	org	3145730
  9378  300002  1F                 	db	31
  9379                           
  9380                           ;Config register CONFIG2H @ 0x300003
  9381                           ;	Watchdog Timer Enable bit
  9382                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9383                           ;	Watchdog Timer Postscale Select bits
  9384                           ;	WDTPS = 32768, 1:32768
  9385  300003                     	org	3145731
  9386  300003  1E                 	db	30
  9387                           
  9388                           ; Padding undefined space
  9389  300004                     	org	3145732
  9390  300004  FF                 	db	255
  9391                           
  9392                           ;Config register CONFIG3H @ 0x300005
  9393                           ;	CCP2 MUX bit
  9394                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9395                           ;	PORTB A/D Enable bit
  9396                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9397                           ;	Low-Power Timer 1 Oscillator Enable bit
  9398                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9399                           ;	MCLR Pin Enable bit
  9400                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9401  300005                     	org	3145733
  9402  300005  81                 	db	129
  9403                           
  9404                           ;Config register CONFIG4L @ 0x300006
  9405                           ;	Stack Full/Underflow Reset Enable bit
  9406                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9407                           ;	Single-Supply ICSP Enable bit
  9408                           ;	LVP = OFF, Single-Supply ICSP disabled
  9409                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9410                           ;	ICPRT = OFF, ICPORT disabled
  9411                           ;	Extended Instruction Set Enable bit
  9412                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9413                           ;	Background Debugger Enable bit
  9414                           ;	DEBUG = 0x1, unprogrammed default
  9415  300006                     	org	3145734
  9416  300006  81                 	db	129
  9417                           
  9418                           ; Padding undefined space
  9419  300007                     	org	3145735
  9420  300007  FF                 	db	255
  9421                           
  9422                           ;Config register CONFIG5L @ 0x300008
  9423                           ;	Code Protection bit
  9424                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9425                           ;	Code Protection bit
  9426                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9427                           ;	Code Protection bit
  9428                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9429                           ;	Code Protection bit
  9430                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9431  300008                     	org	3145736
  9432  300008  0F                 	db	15
  9433                           
  9434                           ;Config register CONFIG5H @ 0x300009
  9435                           ;	Boot Block Code Protection bit
  9436                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9437                           ;	Data EEPROM Code Protection bit
  9438                           ;	CPD = OFF, Data EEPROM is not code-protected
  9439  300009                     	org	3145737
  9440  300009  C0                 	db	192
  9441                           
  9442                           ;Config register CONFIG6L @ 0x30000A
  9443                           ;	Write Protection bit
  9444                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9445                           ;	Write Protection bit
  9446                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9447                           ;	Write Protection bit
  9448                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9449                           ;	Write Protection bit
  9450                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9451  30000A                     	org	3145738
  9452  30000A  0F                 	db	15
  9453                           
  9454                           ;Config register CONFIG6H @ 0x30000B
  9455                           ;	Configuration Register Write Protection bit
  9456                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9457                           ;	Boot Block Write Protection bit
  9458                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9459                           ;	Data EEPROM Write Protection bit
  9460                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9461  30000B                     	org	3145739
  9462  30000B  E0                 	db	224
  9463                           
  9464                           ;Config register CONFIG7L @ 0x30000C
  9465                           ;	Table Read Protection bit
  9466                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9467                           ;	Table Read Protection bit
  9468                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9469                           ;	Table Read Protection bit
  9470                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9471                           ;	Table Read Protection bit
  9472                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9473  30000C                     	org	3145740
  9474  30000C  0F                 	db	15
  9475                           
  9476                           ;Config register CONFIG7H @ 0x30000D
  9477                           ;	Boot Block Table Read Protection bit
  9478                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9479  30000D                     	org	3145741
  9480  30000D  40                 	db	64
  9481                           tosu	equ	0xFFF
  9482                           tosh	equ	0xFFE
  9483                           tosl	equ	0xFFD
  9484                           stkptr	equ	0xFFC
  9485                           pclatu	equ	0xFFB
  9486                           pclath	equ	0xFFA
  9487                           pcl	equ	0xFF9
  9488                           tblptru	equ	0xFF8
  9489                           tblptrh	equ	0xFF7
  9490                           tblptrl	equ	0xFF6
  9491                           tablat	equ	0xFF5
  9492                           prodh	equ	0xFF4
  9493                           prodl	equ	0xFF3
  9494                           indf0	equ	0xFEF
  9495                           postinc0	equ	0xFEE
  9496                           postdec0	equ	0xFED
  9497                           preinc0	equ	0xFEC
  9498                           plusw0	equ	0xFEB
  9499                           fsr0h	equ	0xFEA
  9500                           fsr0l	equ	0xFE9
  9501                           wreg	equ	0xFE8
  9502                           indf1	equ	0xFE7
  9503                           postinc1	equ	0xFE6
  9504                           postdec1	equ	0xFE5
  9505                           preinc1	equ	0xFE4
  9506                           plusw1	equ	0xFE3
  9507                           fsr1h	equ	0xFE2
  9508                           fsr1l	equ	0xFE1
  9509                           bsr	equ	0xFE0
  9510                           indf2	equ	0xFDF
  9511                           postinc2	equ	0xFDE
  9512                           postdec2	equ	0xFDD
  9513                           preinc2	equ	0xFDC
  9514                           plusw2	equ	0xFDB
  9515                           fsr2h	equ	0xFDA
  9516                           fsr2l	equ	0xFD9
  9517                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    0
    Data        67
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    119     160
    BANK1           256      0     142
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1034$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1034$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK1[50]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _atoi->_isspace
    _UART_Write_Text->_UART_Write_Chr
    _UART_Init->___lldiv
    _PWM1_Set_Duty->___fltol
    _PWM1_Init->___fltol
    ___xxtofl->_getDistance
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   67951
                                             94 COMRAM     1     1      0
                                            111 BANK0      8     8      0
                        _Motor_Start
                          _PWM1_Init
                      _PWM1_Set_Duty
                         _PWM1_Start
                          _UART_Init
                    _UART_Write_Text
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                        _getDistance
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   32223
                                             90 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   31866
                                             82 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   31483
                                             62 BANK0     20    14      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   26172
                                              0 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             68 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3497
                                             84 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _getDistance                                          4     2      2      24
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2     143
                                              1 COMRAM     2     0      2
                     _UART_Write_Chr
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Chr                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16     8      8     504
                                             13 COMRAM    16     8      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        5     5      0    9157
                                              0 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            9     7      2   12173
                                              0 BANK0      9     7      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1082
                                              4 COMRAM    14    10      4
                        _getDistance (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1065
                                             84 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4176
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2767
                                             43 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2870
                                             68 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Motor_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Motor_Start
   _PWM1_Init
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             _getDistance (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _PWM1_Set_Duty
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _PWM1_Start
   _UART_Init
     ___lldiv
   _UART_Write_Text
     _UART_Write_Chr
   ___fladd
   ___flge
     ___flmul (ARG)
   ___flmul
   ___flsub
     ___fladd
     ___flmul (ARG)
   ___fltol
   ___xxtofl
   _getDistance
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8E       7       55.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhh         34      0       0      20        0.0%
BITBIGSFRlll        21      0       0      29        0.0%
BITBIGSFRllhh        F      0       0      27        0.0%
BITBIGSFRlhhllh      C      0       0      25        0.0%
BITBIGSFRlhhhll      A      0       0      24        0.0%
BITBIGSFRlhhlll      8      0       0      26        0.0%
BITBIGSFRhl          8      0       0      21        0.0%
BITBIGSFRlhhhh       2      0       0      22        0.0%
BITBIGSFRlhhhlh      1      0       0      23        0.0%
BITBIGSFRllhl        1      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18D      30        0.0%
DATA                 0      0     18D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 26 09:32:45 2023

       PWM1_Set_Duty@val 0061             ___fldiv@aexp 0044             ___fldiv@bexp 0043  
           ___fldiv@sign 003C        PWM1_Set_Duty@duty 0060                       l62 3A82  
                     l71 3D14                       l67 3AAE                       l68 3AB6  
                     _Kd 0158                       _Ki 0154                       _Kp 00FB  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003                      l110 32C8  
                    l113 3CFC                      l202 3898                      l106 3282  
                    l122 3CD2                      l108 328C                      l116 3D0E  
                    l109 3294                      l152 27E2                      l209 38A8  
                    l163 36AA                      l149 25FC                      l406 35F2  
                    l175 3CF8                      l440 309C                      l169 3D1E  
                    l434 3804                      l419 375A                      l445 30E2  
                    l703 1B14                      l720 1C2E                      l712 1DE4  
                    l704 1B02                      l472 2FDE                      l705 1AC8  
                    l449 3C34                      l730 1CEC                      l806 21D0  
                    l830 2C26                      l729 1CFE                      l833 2D82  
                    l745 3B42                      l770 24C6                      l762 23CC  
                    l771 24B4                      l931 0BE0                      l915 1430  
                    l844 2D1A                      l757 25A8                      l837 2CBE  
                    l853 3A1A                      l759 2408                      l768 244E  
                    l793 220E                      l796 20A0                      l789 1EAA  
                    l798 2118                      l894 34B0                      l799 2106  
                    l959 1020                      l897 34F2                      l899 352E  
                    _PR2 000FCB                      _RX9 007D5E                      _TX9 007D66  
                    _pad 346A                      _ref 0150             ___awmod@sign 0006  
                    wreg 000FE8             ___flmul@aexp 0024             ___flmul@bexp 0025  
           ___flmul@sign 001F             ___flmul@temp 002A             ___flmul@prod 0026  
           ___fltol@exp1 005E                     l1000 1524                     l1013 1924  
                   l1024 3964                     l1025 396C                     l1106 3468  
                   l1114 3B86                     l1018 186A                     l1035 31E0  
                   l1123 39C8                     l1061 2ED8                     l1117 3D20  
                   l1133 339E                     l1070 2938                     l1143 3AF4  
                   l3001 1D1A                     l1129 3CA2                     l1058 2ED0  
                   l1146 3AFC                     l3011 1D84                     l3003 1D28  
                   l1067 29F4                     l1091 3BFC                     l3021 1DBE  
                   l3013 1DA4                     l3005 1D62                     l3101 2302  
                   l1077 3C6C                     l1085 3A6C                     l3023 1DC4  
                   l3015 1DA8                     l3007 1D64                     l3111 2332  
                   l3103 230A                     l3031 3B44                     l3025 1DD2  
                   l3017 1DB6                     l3009 1D74                     l3121 2370  
                   l3113 2332                     l3105 230E                     l3201 1E00  
                   l3033 3B50                     l3041 3C7A                     l4001 1532  
                   l3027 1DD4                     l3019 1DBC                     l3131 23BC  
                   l3123 2380                     l3211 1E38                     l3203 1E02  
                   l3035 3B62                     l3043 3C7E                     l4011 1592  
                   l4003 1534                     l3141 2406                     l3133 23CA  
                   l3125 2390                     l3117 2346                     l3109 2322  
                   l3061 221C                     l3301 2142                     l3221 1E64  
                   l3213 1E48                     l3205 1E12                     l4101 3840  
                   l3053 3CD4                     l3037 3B66                     l3045 3C96  
                   l4013 15CC                     l4005 1558                     l4021 163A  
                   l3151 244C                     l3143 2418                     l3135 23D6  
                   l3127 2398                     l3119 2360                     l3071 225C  
                   l3063 222A                     l3311 21B8                     l3303 216C  
                   l3231 1EBA                     l3223 1E74                     l3215 1E4E  
                   l3207 1E22                     l4111 3888                     l4103 384E  
                   l3055 3CF0                     l3039 3C6E                     l4031 16E0  
                   l4023 165C                     l4015 15EC                     l4007 1560  
                   l3161 24AC                     l3145 242E                     l3153 245E  
                   l3137 23F4                     l3129 23A8                     l3081 2282  
                   l3073 225E                     l3065 222C                     l3313 21D4  
                   l3321 21FA                     l3305 2170                     l3241 1EF4  
                   l3233 1ECA                     l3225 1E84                     l3217 1E54  
                   l3209 1E32                     l4121 2C36                     l4201 3662  
                   l4113 3892                     l4105 3858                     l3401 372E  
                   l3049 3BC6                     l4033 16F2                     l4025 166C  
                   l4009 156E                     l3171 251A                     l3155 246C  
                   l3147 2434                     l3139 23F6                     l3091 22C2  
                   l3083 2290                     l3067 223C                     l3075 2266  
                   l3059 2210                     l3323 21FE                     l3315 21E4  
                   l3307 218A                     l3251 1F46                     l3243 1F0A  
                   l3227 1E94                     l3219 1E62                     l4131 2C74  
                   l4123 2C4C                     l4115 2BD2                     l4203 3686  
                   l4107 3876                     l4211 3244                     l3403 3734  
                   l4051 1806                     l4035 1708                     l4043 1772  
                   l4027 169E                     l4019 15FA                     l3181 2584  
                   l3165 24D6                     l3173 251E                     l3157 2470  
                   l3149 243E                     l3093 22C4                     l3085 2292  
                   l3077 2276                     l3069 224C                     l3317 21F2  
                   l3309 219E                     l3261 1F8C                     l3253 1F54  
                   l3245 1F16                     l3237 1EDE                     l3229 1E9A  
                   l4141 2CFC                     l4133 2CA6                     l4117 2BE2  
                   l4205 3D1C                     l4109 3886                     l4221 327A  
                   l4213 3248                     l3341 354E                     l3333 3530  
                   l3405 373A                     l3421 37D8                     l3413 375C  
                   l4061 18A2                     l4053 183A                     l4045 17A0  
                   l4037 1716                     l4029 16AE                     l4301 2A4E  
                   l3183 2588                     l3175 2538                     l3167 24E2  
                   l3159 247E                     l3087 22A2                     l3095 22CC  
                   l3079 227C                     l3319 21F4                     l3271 1FFA  
                   l3263 1FA6                     l3255 1F60                     l3247 1F2E  
                   l3239 1EEA                     l4151 2D52                     l4143 2D0A  
                   l4135 2CA8                     l4127 2C60                     l4119 2BF0  
                   l4223 327C                     l4215 324C                     l4207 31E2  
                   l3351 3582                     l3343 355C                     l3335 3534  
                   l3407 374A                     l3423 37FC                     l3415 378A  
                   l3431 300E                     l3327 3AFE                     l3511 34A8  
                   l3503 346A                     l4071 18E0                     l4063 18B0  
                   l4039 1746                     l4311 2B36                     l4303 2A52  
                   l3185 2596                     l3177 254E                     l3169 24F0  
                   l3097 22DC                     l3089 22B2                     l3281 2090  
                   l3273 2024                     l3265 1FB6                     l3257 1F70  
                   l3249 1F3A                     l4153 2D62                     l4145 2D28  
                   l4137 2CB4                     l4129 2C68                     l4225 3286  
                   l4233 329E                     l4217 3262                     l4209 3240  
                   l4241 3A6E                     l3601 3A66                     l3361 35BC  
                   l3353 358A                     l3345 3564                     l3337 3542  
                   l3409 3752                     l3425 3802                     l3417 379A  
                   l3441 307C                     l3433 301E                     l3329 3B0E  
                   l3521 3516                     l3513 34BC                     l3505 347A  
                   l4065 18C4                     l4049 17C8                     l4161 390C  
                   l4321 2BAC                     l4313 2B4C                     l4305 2A78  
                   l3187 259C                     l3179 2568                     l3099 22F2  
                   l3291 20D0                     l3283 209E                     l3275 205A  
                   l3267 1FD2                     l3259 1F7C                     l4155 2D70  
                   l4147 2D2A                     l4139 2CF0                     l4171 25AE  
                   l4219 3278                     l4091 3D0A                     l4251 3A98  
                   l4243 3A76                     l3371 35E2                     l3363 35C4  
                   l3355 3592                     l3347 3568                     l3339 354A  
                   l3419 37C8                     l3443 308A                     l3435 304C  
                   l3451 3BFE                     l3531 316A                     l3515 34D0  
                   l3507 348E                     l3611 0850                     l4059 187E  
                   l4075 18EE                     l4163 3914                     l4323 2BB8  
                   l4315 2B5C                     l4307 2AAC                     l2901 1A5A  
                   l3189 259E                     l3293 20FE                     l3285 20B0  
                   l3277 2068                     l3269 1FDE                     l3197 1DE6  
                   l3461 2EF0                     l4157 2D72                     l4149 2D2E  
                   l4181 25FE                     l4173 25B6                     l4093 3806  
                   l4229 3298                     l4253 3AA0                     l4245 3A78  
                   l3373 35EA                     l3365 35C6                     l3357 35A0  
                   l3349 3570                     l3381 36BE                     l3445 30DA  
                   l3437 305C                     l3429 2FE0                     l3453 3C14  
                   l3533 3176                     l3525 30E4                     l2821 33CE  
                   l3517 34D4                     l3509 349C                     l3701 0BD4  
                   l3621 08A0                     l3613 0858                     l3605 0828  
                   l4077 1912                     l4069 18D2                     l4165 3922  
                   l4261 39EC                     l4317 2B6C                     l4309 2B04  
                   l4239 3D10                     l2911 1A94                     l2903 1A5E  
                   l2831 1932                     l3287 20BE                     l3279 2086  
                   l3199 1DF2                     l3471 2F40                     l4191 279A  
                   l4183 260E                     l4175 25BE                     l4095 3816  
                   l4271 3CB6                     l4247 3A80                     l3367 35CC  
                   l3359 35A6                     l3391 36F2                     l3383 36C6  
                   l3447 30E0                     l3439 306A                     l3455 3C24  
                   l3543 31D8                     l3527 3104                     l2823 33EC  
                   l2815 33A0                     l3519 3502                     l3551 3AB8  
                   l3711 0C10                     l3703 0BEC                     l3631 08D8  
                   l3623 08AE                     l3615 087C                     l3607 0832  
                   l4167 3948                     l4263 3A08                     l4255 39CA  
                   l4319 2B86                     l2921 1AE6                     l2913 1AB0  
                   l2905 1A62                     l2841 1972                     l2833 1940  
                   l3297 2128                     l3289 20C2                     l3481 2F6A  
                   l3473 2F44                     l3465 2F04                     l4193 27BE  
                   l4185 2654                     l4169 25AA                     l4097 382C  
                   l4089 3CFC                     l4273 3CBA                     l4249 3A94  
                   l3369 35D2                     l3393 36FA                     l3385 36CA  
                   l3377 36AC                     l3529 3142                     l3537 3182  
                   l3561 27E4                     l2825 3422                     l2817 33B2  
                   l3801 10FC                     l3721 0C76                     l3713 0C2C  
                   l3641 0908                     l3633 08DC                     l3625 08C0  
                   l3617 0886                     l3609 0842                     l4257 39DC  
                   l4281 29FE                     l2931 1B32                     l2923 1AF4  
                   l2915 1AC0                     l2907 1A66                     l2851 19A4  
                   l2843 1974                     l2835 1942                     l3299 2134  
                   l3491 2F92                     l3483 2F74                     l3475 2F52  
                   l3467 2F2E                     l3459 2EDA                     l4187 26EA  
                   l4451 25DE                     l4179 25C6                     l4099 3834  
                   l4267 3CA4                     l3395 3702                     l3387 36D8  
                   l3379 36B0                     l3539 3194                     l3563 2804  
                   l2819 33C4                     l3547 396E                     l3555 3AB8  
                   l3811 1130                     l3803 110A                     l3731 0CBE  
                   l3723 0C88                     l3715 0C62                     l3643 0936  
                   l3627 08CC                     l3635 08E2                     l3619 088E  
                   l4259 39E4                     l4291 2A1A                     l4283 2A00  
                   l4275 29F6                     l2941 1B72                     l2925 1AF6  
                   l2917 1AD6                     l2909 1A6A                     l2861 19CC  
                   l2853 19A6                     l2837 1952                     l2845 197C  
                   l2829 1926                     l3493 2F9E                     l3485 2F7E  
                   l3469 2F30                     l4189 2730                     l4269 3CA8  
                   l3397 3710                     l3389 36E0                     l3581 29AC  
                   l3573 28EC                     l3565 285A                     l3549 397E  
                   l3557 3AE6                     l3901 13FA                     l3821 1162  
                   l3813 1140                     l3805 111A                     l3741 0D06  
                   l3733 0CCC                     l3725 0C9A                     l3717 0C6A  
                   l3709 0BFE                     l3661 09F0                     l3645 0952  
                   l3653 099C                     l3629 08D4                     l4445 14E4  
                   l4293 2A2C                     l4285 2A02                     l4277 29FA  
                   ?_pad 0011                     l2951 1B9C                     l2943 1B7E  
                   l2935 1B46                     l2927 1B00                     l2919 1AE2  
                   l2871 1A06                     l2863 19DC                     l2855 19AC  
                   l2847 198C                     l2839 1962                     l3495 2FAE  
                   l4199 35F8                     l4447 2E20                     l3911 2D84  
                   l3399 3726                     l3583 29D4                     l3575 2928  
                   l3567 286E                     l3903 140A                     l3831 120A  
                   l3823 1174                     l3815 1144                     l3807 111E  
                   l3751 0E1A                     l3743 0D16                     l3735 0CE4  
                   l3727 0CA8                     l3719 0C6E                     l3663 0A0C  
                   l3671 0A28                     l3647 096A                     l4295 2A30  
                   l4287 2A10                     l4279 29FC                     l2961 1C0E  
                   l2945 1B82                     l2937 1B56                     l2929 1B22  
                   l2953 1BA2                     l2881 1A32                     l2873 1A18  
                   l2865 19EC                     l2857 19BA                     l2849 1992  
                   l3497 2FBE                     l4449 32B2                     l3593 3A1C  
                   l3921 2DF2                     l3913 2D98                     l3585 29E4  
                   l3569 287C                     l3577 295C                     l3905 1410  
                   l3841 1262                     l3833 1212                     l3825 1178  
                   l3817 114A                     l3809 1124                     l3761 0EBA  
                   l3745 0D2A                     l3753 0E20                     l3737 0CF6  
                   l3729 0CAC                     l3681 0AB2                     l3673 0A42  
                   l3649 0974                     l4297 2A34                     l4289 2A16  
                   l2971 1C68                     l2955 1BC8                     l2963 1C1E  
                   l2947 1B90                     l2939 1B64                     l2891 1A46  
                   l2883 1A36                     l2875 1A26                     l2867 19EE  
                   l2859 19BC                     l3499 2FCE                     l3595 3A20  
                   l3923 2DFA                     l3579 2998                     l3851 12A6  
                   l3843 1270                     l3819 1150                     l3827 117E  
                   l3835 1216                     l3771 0F96                     l3763 0EEC  
                   l3755 0E3E                     l3747 0D8E                     l3739 0CFE  
                   l3691 0B8A                     l3683 0B0C                     l3659 09C2  
                   l4299 2A38                     l2981 1C98                     l2973 1C72  
                   l2965 1C44                     l2957 1BFC                     l2949 1B92  
                   l2893 1A4A                     l2885 1A3A                     l2877 1A2A  
                   l2869 19F6                     l3589 3C36                     l3597 3A34  
                   l3933 2E6C                     l3925 2E02                     l3917 2D9C  
                   l3861 12DC                     l3853 12AE                     l3845 1280  
                   l3837 1234                     l3829 11D6                     l3781 0FF8  
                   l3773 0F9C                     l3765 0EFC                     l3757 0E72  
                   l3749 0DE6                     l3693 0B8E                     l3685 0B40  
                   l3677 0A78                     l2991 1CC0                     l2983 1C9C  
                   l2975 1C80                     l2967 1C54                     l2959 1BFE  
                   l2895 1A4E                     l2887 1A3E                     l2879 1A2E  
                   l3599 3A62                     l3935 2EA2                     l3927 2E36  
                   l3919 2DB8                     l3871 1338                     l3863 12E4  
                   l3855 12BE                     l3847 1284                     l3839 1250  
                   l3791 10B0                     l3783 100C                     l3775 0FD0  
                   l3767 0F0C                     l3759 0EA4                     l3695 0BA0  
                   l3687 0B48                     l3679 0AAC                     l3951 330E  
                   l3943 32CA                     l2993 1CCE                     l2985 1CAC  
                   l2977 1C82                     l2897 1A52                     l2889 1A42  
                   l3937 2EB4                     l3881 1378                     l3873 1340  
                   l3865 12F0                     l3857 12C6                     l3849 1294  
                   l3793 10C2                     l3785 1018                     l3777 0FE4  
                   l3769 0F40                     l3697 0BB2                     l3689 0B7A  
                   l3953 3326                     l3945 32F4                     l2995 1CE4  
                   l2979 1C90                     l2987 1CAE                     l2899 1A56  
                   l3891 13B4                     l3883 138A                     l3867 12F6  
                   l3875 1346                     l3859 12D4                     l3795 10D4  
                   l3787 103C                     l3779 0FE8                     l3699 0BBA  
                   l3955 3342                     l3971 147A                     l3963 1432  
                   l2989 1CBC                     l3885 1396                     l3877 1358  
                   l3869 131C                     l3797 10E2                     l3789 10A0  
                   l3957 3354                     l3949 3300                     l3981 14A0  
                   l3973 1486                     l3965 1456                     l2999 1D0E  
                   l3895 13BA                     l3887 139E                     l3879 1372  
                   l3799 10EA                     l3959 337C                     l3975 1488  
                   l3967 1464                     l3897 13E6                     l3889 13AE  
                   l3993 14B2                     l3985 14A6                     l3977 149A  
                   l3969 1476                     l3899 13F2                     l3997 14BE  
                   l3989 14AC                     l3999 1512                     STR_1 0801  
                   STR_2 0814                     STR_3 081C                     STR_6 0818  
                   STR_7 0820                     _BRGH 007D62                     u3000 2418  
                   u3001 2414                     u3010 242E                     u3011 242A  
                   u3100 2568                     u3020 244C                     u3101 2564  
                   u3021 2448                     u3110 2596                     u3030 246C  
                   u3111 2592                     u3031 2468                     u3040 247E  
                   u3200 2044                     u3120 1E00                     u4000 0BD4  
                   u3041 247A                     u3121 1DFC                     u4001 0BD0  
                   u3050 24AC                     u3210 209E                     u3130 1E12  
                   u4010 0BFA                     u3051 24A8                     u3211 209A  
                   u3131 1E0E                     u4011 0BF6                     u2500 19BA  
                   u3060 24C2                     u3300 21F2                     u3220 20BE  
                   u3140 1E22                     u2420 33B2                     u4100 0CF6  
                   u4020 0C10                     u2501 19B6                     u3061 24BE  
                   u3301 21EE                     u3221 20BA                     u3205 203A  
                   u3141 1E1E                     u2421 33AE                     u4101 0CF2  
                   u4021 0C0C                     u2510 19CC                     u3070 24D6  
                   u3230 20D0                     u3150 1E62                     u3310 3542  
                   u2430 33C4                     u4110 0E3E                     u4030 0C2C  
                   u2511 19C8                     u3071 24D2                     u3231 20CC  
                   u3151 1E5E                     u3311 353E                     u2431 33C0  
                   u4111 0E3A                     u4031 0C28                     u2600 1B14  
                   u2520 19DC                     u3080 24F0                     u3240 20FE  
                   u3160 1E74                     u3320 355C                     u3400 3710  
                   u2440 33EC                     u4200 10D4                     u4120 0EA4  
                   u4040 0C62                     u2601 1B10                     u2521 19D8  
                   u3081 24EC                     u3241 20FA                     u3161 1E70  
                   u3321 3558                     u3401 370C                     u2441 33E8  
                   u4201 10D0                     u4121 0EA0                     u4041 0C5E  
                   u2610 1B22                     u2530 1A18                     u3090 2538  
                   u3250 2114                     u3170 1E84                     u3330 3582  
                   u3410 3726                     u2450 3422                     u4210 10E2  
                   u4130 0EEC                     u4050 0C88                     u2611 1B1E  
                   u2531 1A14                     u3091 2534                     u3251 2110  
                   u3171 1E80                     u3331 357E                     u3411 3722  
                   u2451 341E                     u4211 10DE                     u4131 0EE8  
                   u4051 0C84                     u2700 1C80                     u2620 1B32  
                   u2540 1A26                     u2460 1940                     u3260 2128  
                   u3180 1EBA                     u3340 35A0                     u3420 374A  
                   u3500 30DA                     u4300 12D4                     u4220 10FC  
                   u4140 0EFC                     u4060 0C9A                     u2701 1C7C  
                   u2621 1B2E                     u2541 1A22                     u2461 193C  
                   u3261 2124                     u3181 1EB6                     u3341 359C  
                   u3421 3746                     u3501 30D6                     u4301 12D0  
                   u4221 10F8                     u4141 0EF8                     u4061 0C96  
                   u2710 1C90                     u2630 1B64                     u2550 1A94  
                   u2470 1952                     u3270 2142                     u3190 1ECA  
                   u3350 35BC                     u3430 378A                     u3510 3C14  
                   u4310 1358                     u4230 110A                     u4150 0F96  
                   u4070 0CA8                     u2711 1C8C                     u2631 1B60  
                   u2551 1A90                     u2471 194E                     u3271 213E  
                   u3191 1EC6                     u3351 35B8                     u3431 3786  
                   u3511 3C10                     u4311 1354                     u4231 1106  
                   u4151 0F92                     u4071 0CA4                     u2800 1D74  
                   u2720 1CAC                     u2640 1B72                     u2560 1AAC  
                   u2480 1962                     u3280 218A                     u3520 2EF0  
                   u3360 35E2                     u3440 37C8                     u3600 349C  
                   u4320 1372                     u4240 1162                     u4160 0FE4  
                   u4080 0CBE                     u4400 3326                     u2801 1D70  
                   u2721 1CA8                     u2641 1B6E                     u2561 1AA6  
                   u2481 195E                     u3281 2186                     u3521 2EEC  
                   u3361 35DE                     u3441 37C4                     u3601 3498  
                   u4321 136E                     u4241 115E                     u4161 0FE0  
                   u4081 0CBA                     u4401 3322                     u2810 1D84  
                   u2730 1CBC                     u2650 1B90                     u2570 1AAE  
                   u2490 19A4                     u3290 21B8                     u3530 2F24  
                   u3370 36BE                     u3450 37FC                     u3610 34F2  
                   u4330 138A                     u4250 1234                     u4170 100C  
                   u4090 0CCC                     u4410 3342                     u2811 1D80  
                   u2731 1CB8                     u2651 1B8C                     u2491 19A0  
                   u3291 21B4                     u3371 36BA                     u3451 37F8  
                   u3611 34EE                     u4331 1386                     u4251 1230  
                   u4171 1008                     u4091 0CC8                     u4411 333E  
                   u2820 1DA4                     u2740 1CCE                     u2660 1BC8  
                   u2580 1AD6                     u2900 223C                     u3540 2F52  
                   u3380 36D8                     u3460 300E                     u3620 3502  
                   u3700 39B6                     u4340 13E6                     u4260 1250  
                   u4180 10B0                     u4420 3354                     u4500 166C  
                   u2821 1DA0                     u2741 1CCA                     u2661 1BC4  
                   u2581 1AD2                     u2901 2238                     u3541 2F4E  
                   u3381 36D4                     u3461 300A                     u3621 34FE  
                   u4341 13E2                     u4261 124C                     u4181 10AC  
                   u4421 3350                     u4501 1668                     u2830 1DB6  
                   u2750 1CE4                     u2670 1C0E                     u2590 1AF4  
                   u2910 224C                     u3550 2F66                     u4350 2DB8  
                   u3390 36F2                     u3470 304C                     u3630 3124  
                   u3710 39C8                     u4270 1262                     u4190 10C2  
                   u4430 337C                     u4510 16AE                     u2831 1DB2  
                   u2751 1CE0                     u2671 1C0A                     u2591 1AF0  
                   u2911 2248                     u3551 2F62                     u3535 2F1A  
                   u4351 2DB4                     u3391 36EE                     u3471 3048  
                   u3711 39C4                     u4271 125E                     u4191 10BE  
                   u4431 3378                     u4511 16AA                     u2840 1DD2  
                   u2760 1CFA                     u2680 1C44                     u2920 2290  
                   u3560 2F8E                     u4600 2BE2                     u4360 2DEE  
                   u3480 306A                     u3640 3142                     u3800 297C  
                   u3720 3AE6                     u4280 1270                     u4520 16F2  
                   u4440 1456                     u2841 1DCE                     u2761 1CF6  
                   u2681 1C40                     u2921 228C                     u3561 2F8A  
                   u4601 2BDE                     u4361 2DEA                     u3481 3066  
                   u3641 313E                     u3721 3AE2                     u4281 126C  
                   u4521 16EE                     u4441 1452                     u2770 1D0E  
                   u2690 1C54                     u2930 22A2                     u3570 2FAE  
                   u4610 2BF0                     u4370 2EA2                     u3490 308A  
                   u3650 316A                     u3810 2998                     u3730 282C  
                   u2850 3B86                     u4290 12A6                     u4530 17A0  
                   u4450 1524                     u2771 1D0A                     u2691 1C50  
                   u2931 229E                     u3571 2FAA                     u4611 2BEC  
                   u4371 2E9E                     u3491 3086                     u3651 3166  
                   u3635 311A                     u3811 2994                     u2851 3B82  
                   u3707 39AC                     u4291 12A2                     u4531 179C  
                   u4451 1520                     u2780 1D28                     u2940 22B2  
                   u3580 2FBE                     u4620 2C4C                     u4380 2EB4  
                   u3660 3194                     u3820 29D4                     u3740 285A  
                   u2860 3C96                     u3900 08C0                     u4540 1806  
                   u4460 1532                     u4700 3964                     u2781 1D24  
                   u2941 22AE                     u3581 2FBA                     u4621 2C48  
                   u4381 2EB0                     u3661 3190                     u3821 29D0  
                   u3805 2972                     u3741 2856                     u2861 3C92  
                   u3901 08BC                     u4541 1802                     u4461 152E  
                   u4701 3960                     u2790 1D62                     u2950 22F2  
                   u4630 2CA2                     u3830 3C66                     u3750 287C  
                   u3590 347A                     u2870 3BF6                     u3910 0908  
                   u4390 32F4                     u4550 18A2                     u4470 1558  
                   u2791 1D5E                     u2951 22EE                     u4631 2C9E  
                   u3831 3C60                     u3751 2878                     u3735 2822  
                   u3591 3476                     u2871 3BF0                     u3911 0904  
                   u4391 32F0                     u4551 189E                     u4471 1554  
                   u2960 2332                     u4640 2CEC                     u4720 3260  
                   u4560 3D0A                     u3840 3C68                     u3680 31CE  
                   u2880 3BF8                     u3920 0936                     u4480 1592  
                   u4800 2B36                     u2961 232E                     u4641 2CE8  
                   u4721 325A                     u4561 3D06                     u3681 31C8  
                   u3921 0932                     u4481 158E                     u4801 2B32  
                   u2970 23A8                     u2890 222A                     u4650 2D0A  
                   u4570 382C                     u3850 3A34                     u3690 31D0  
                   u3770 28E8                     u3930 09C2                     u4490 163A  
                   u4810 2B5C                     u2971 23A4                     u2891 2226  
                   u4651 2D06                     u4571 3828                     u4715 3204  
                   u3851 3A30                     u3675 31A6                     u3771 28E4  
                   u3931 09BE                     u4491 1636                     u4811 2B58  
                   u2980 23CA                     u4660 2D1A                     u4580 384E  
                   u4740 3276                     u3860 3A62                     u3780 290C  
                   u3940 09F0                     u2981 23C6                     u4661 2D16  
                   u4581 384A                     u4741 3270                     u3861 3A5E  
                   u3765 2890                     u3941 09EC                     u2990 23F4  
                   u4670 2D28                     u4590 3876                     u3790 2928  
                   u3766 289A                     u3950 0A74                     u3870 0850  
                   u2991 23F0                     u4671 2D24                     u4591 3872  
                   u4735 3262                     u3791 2924                     u3767 28AA  
                   u3951 0A70                     u3871 084C                     u4680 2D62  
                   u4760 3A90                     u3960 0B08                     u3880 08A0  
                   u4681 2D5E                     u4761 3A8C                     u3785 2902  
                   u3961 0B04                     u3881 089C                     u4690 2D70  
                   u4770 3AAE                     u3970 0B7A                     u3890 08AE  
                   u4691 2D6C                     u4755 3278                     u4771 3AAA  
                   u3971 0B76                     u3891 08AA                     u4827 2BBE  
                   u4780 3CD2                     u3980 0BA0                     u4781 3CCE  
                   u4837 3A7A                     u3981 0B9C                     u3990 0BB2  
                   u4847 3A9A                     u3991 0BAE                     u4791 2A42  
                   _SPEN 007D5F                     _TX9D 007D60                     _TXEN 007D65  
                   _SYNC 007D64                     _dbuf 0100                     _atoi 2D84  
                   _main 29F6                     _duty 00FF                     _prec 00F7  
                   _nout 00F3                     pad@i 0018                     pad@p 0015  
                   fsr0h 000FEA                     fsr1h 000FE2                     indf0 000FEF  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   _suma 00E7            ___fpclassifyf 30E4                     prodh 000FF4  
                   prodl 000FF3                     start 0000          ___fldiv@new_exp 003D  
           ___param_bank 000000  __end_of_UART_Write_Text 3CD4                    ??_pad 0017  
          ___fltol@sign1 005D                    ?_atoi 0008          __end_of___fladd 1DE6  
                  ?_main 0001          __end_of___fldiv 25AA          __end_of___awdiv 35F4  
        __end_of___flneg 3C36                    STR_10 0824                    STR_12 0824  
        __end_of___awmod 375C          __end_of___flmul 2210          __end_of___flsub 3B44  
        __end_of___fltol 2FE0          __end_of___lldiv 38AA          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _RCREG 000FAE                    _RCSTA 000FAB  
           vfpfcnvrt@fmt 00A0                    _SPBRG 000FAF                    _TXREG 000FAD  
                  _TXSTA 000FAC              ?_PWM1_Start 0001                    _flags 00F9  
                  _error 00EB                    _fputc 33A0                    _fputs 3B44  
        __end_of_isdigit 3C6E                    atoi@n 0010                    pad@fp 0011  
                  atoi@s 0008                    _width 00F5                    _putch 3D20  
        __end_of_isspace 3A6E          __end_of_isupper 3BFE                    tablat 000FF5  
                  plusw0 000FEB                    plusw2 000FDB                    status 000FD8  
        __end_of_sprintf 3A1C           ?___fpclassifyf 0001          __end_of_tolower 3AFE  
        __end_of_strncmp 33A0          __initialization 38AA             __end_of_atoi 2EDA  
           __end_of_main 2BD0                   ??_atoi 000A                   ??_main 005F  
          __activetblptr 000002                   _ADCON1 000FC1                   ?_fputc 0001  
                 ?_fputs 000A                   _CCPR1L 000FBE                   _CCPR2L 000FBB  
       ___awdiv@dividend 0001                   ?_putch 0001            vfpfcnvrt@done 00A8  
       __end_of___xxtofl 2D84             vfprintf@cfmt 00B8        __end_of_UART_Init 32CA  
                 ___flge 2FE0                   ___fleq 375C        __end_of_PWM1_Init 27E4  
          ??_Motor_Start 0001                ??___fladd 004D                   ___wmul 3CD4  
              ??___fldiv 0034                ??___awdiv 0005                ??___flneg 0005  
              ??___awmod 0005                ??___flmul 001B         ?_UART_Write_Text 0002  
              ??___flsub 005D                ??___fltol 0059                   _actual 00E3  
              ??___lldiv 0009                   _efgtoa 0828                   _floorf 27E4  
                 clear_0 38F0                   clear_1 38FC         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 000001          ___awmod@counter 0005  
                 pad@buf 0013                   _strcpy 396E                   _strlen 3C6E  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
        ___fpclassifyf@u 000B          ___fpclassifyf@x 0001             __mediumconst 0000  
              ??_isspace 0003                   tblptrh 000FF7                ??_isupper 0003  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 396E                ??_sprintf 005F                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 002C               ___flge@ff2 0030  
        ??___fpclassifyf 0005             ___xxtofl@arg 000F             ___xxtofl@exp 000E  
           ___xxtofl@val 0005               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0060  __end_of__initialization 3902               ___flneg@f1 0001  
          ___rparam_used 000001               ___fltol@f1 0055           __pcstackCOMRAM 0001  
  __end_of_PWM1_Set_Duty 36AC             __pidataBANK0 3D16             __pidataBANK1 3B88  
          __end_of_fputc 346A            __end_of_fputs 3B88            __end_of_putch 3D22  
    __end_of_Motor_Start 3D16                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 00D7               __pbssBANK1 0100  
                ?___flge 002C                  ?___fleq 0001                  ?___wmul 0001  
                ?_efgtoa 0060                  ?_floorf 0045                  ?_strcpy 0001  
                ?_strlen 0001                ?___xxtofl 0005             ??_PWM1_Start 0001  
                __Hparam 0000                  __Lparam 0000                  ___fladd 1926  
                ___fldiv 2210              _Motor_Start 3D10                  ___awdiv 3530  
                ___flneg 3BFE                  ___awmod 36AC                  ___flmul 1DE6  
                ___flsub 3AFE                  ___fltol 2EDA                  ___lldiv 3806  
              ?_vfprintf 00B2       __end_of_PWM1_Start 3D20             __psmallconst 0800  
                __pcinit 38AA                  __ramtop 0800                  __ptext0 29F6  
                __ptext1 39CA                  __ptext2 390C                  __ptext3 1432  
                __ptext4 32CA                  __ptext5 0828                  __ptext6 3AB8  
                __ptext7 3BC6                  __ptext8 396E                  __ptext9 346A  
              _T2CONbits 000FCA                  _isdigit 3C36               ??___xxtofl 0009  
       ___awmod@dividend 0001                  _isspace 3A1C           main@uartConfig 00CF  
         _PWM1_Init$1540 0064                  _isupper 3BC6                  efgtoa@c 0066  
                efgtoa@d 007E                  efgtoa@e 0096                  efgtoa@f 0062  
                efgtoa@g 0092                  efgtoa@h 0088                  efgtoa@i 0090  
                efgtoa@l 008C                  efgtoa@m 0078                  efgtoa@n 0098  
                efgtoa@p 0082                  efgtoa@t 0072                  efgtoa@u 009A  
                efgtoa@w 0084                  _strUART 015C                  atoi@neg 000E  
                _sprintf 39CA                  _tolower 3AB8                  _strncmp 32CA  
   end_of_initialization 3902                  floorf@e 0053                  floorf@m 004F  
                floorf@u 0055                  floorf@x 0045           PWM1_Init@prees 0068  
                fputc@fp 0003            __Lmediumconst 0000                  fputs@fp 000C  
        ___lldiv@divisor 0005          ___lldiv@counter 000D        __end_of_vfpfcnvrt 1926  
             efgtoa@mode 0087               efgtoa@sign 0080                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE            ??_getDistance 0003           _UART_Write_Chr 3CFA  
             ??_vfprintf 005F                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001                _UART_Init 31E2  
              _PWM1_Init 25AA                _PORTBbits 000F81                _PORTDbits 000F83  
            ___fladd@grs 0054            ___xxtofl@sign 000D                _TRISBbits 000F93  
              _TRISCbits 000F94                _TRISDbits 000F95              ___fldiv@grs 003F  
            ___fldiv@rem 0038              ___flmul@grs 0020              _CCP1CONbits 000FBD  
            _CCP2CONbits 000FBA                _TXSTAbits 000FAC     UART_Write_Chr@letter 0001  
 __end_of_UART_Write_Chr 3D10           __end_of___flge 30E4           __end_of___fleq 3806  
            vfpfcnvrt@ap 00A2              vfpfcnvrt@ct 00AE              vfpfcnvrt@fp 009E  
         __end_of___wmul 3CFA               ?_UART_Init 000E           __end_of_efgtoa 1432  
             ?_PWM1_Init 0060           __end_of_floorf 29F6               floorf@F526 00D7  
    __end_of_getDistance 3AB8           __end_of_strcpy 39CA           __end_of_strlen 3CA4  
    start_initialization 38AA              __end_of_pad 3530         getDistance@count 0003  
     UART_Init@spbrg_val 001A    __end_of___fpclassifyf 31E2              vfprintf@fmt 00B4  
        ?_UART_Write_Chr 0001                 ??___flge 0034                 ??___fleq 0009  
               ??___wmul 0005                 ??_efgtoa 0067              __pdataBANK0 00FB  
            __pdataBANK1 0150                 ??_floorf 0049                 ??_strcpy 0005  
               ??_strlen 0003                ___fladd@a 0049                ___fladd@b 0045  
              ___fldiv@a 0030                ___fldiv@b 002C                ___flmul@a 0017  
              ___flmul@b 0013                ___flsub@a 0059                ___flsub@b 0055  
          __pcstackBANK0 0060              _efgtoa$1176 006E              _efgtoa$1168 006C  
            _efgtoa$1177 0070             ?_Motor_Start 0001                 ?___fladd 0045  
               ?___fldiv 002C                 ?___awdiv 0001                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 0013                 ?___flsub 0055  
               ?___fltol 0055                 ?___lldiv 0001                _reg10bits 00DF  
            _getDistance 3A6E              ??_UART_Init 0016              ??_PWM1_Init 0062  
              _distancia 00EF          UART_Init@config 000E              __smallconst 0800  
               ?_isdigit 0001                 ?_isspace 0001                 ?_isupper 0001  
               ?_sprintf 00BA                 ?_tolower 0007                 ?_strncmp 0001  
      ??_UART_Write_Text 0004           ___wmul@product 0005            PWM1_Init@freq 0060  
               _PIR1bits 000F9E            _PWM1_Set_Duty 35F4                _vfpfcnvrt 1432  
      ___wmul@multiplier 0001             _isspace$1255 0007               vfpfcnvrt@c 00B1  
             vfpfcnvrt@f 00AA                copy_data0 38BE                copy_data1 38DE  
               __Hrparam 0000               vfprintf@ap 00B6                 __Lrparam 0000  
             vfprintf@fp 00B2           ?_PWM1_Set_Duty 0001               ?_vfpfcnvrt 009E  
     ___fpclassifyf@F465 00DB               sprintf@fmt 00BC                 ___xxtofl 2BD0  
               __ptext10 3C6E                 __ptext11 3B44                 __ptext20 36AC  
               __ptext12 33A0                 __ptext21 3530                 __ptext13 3D20  
               __ptext30 3806                 __ptext22 2D84                 __ptext14 27E4  
               __ptext31 3D1C                 __ptext23 3A1C                 __ptext15 30E4  
               __ptext32 35F4                 __ptext24 3C36                 __ptext16 3AFE  
               __ptext33 25AA                 __ptext25 3CD4                 __ptext17 3BFE  
               __ptext34 2BD0                 __ptext26 3A6E                 __ptext18 2FE0  
               __ptext35 2EDA                 __ptext27 3CA4                 __ptext19 375C  
               __ptext36 1DE6                 __ptext28 3CFA                 __ptext37 2210  
               __ptext29 31E2                 __ptext38 1926                 __ptext39 3D10  
             strcpy@dest 0001      UART_Write_Text@text 0002         ??_UART_Write_Chr 0001  
               efgtoa@fp 0060                 efgtoa@ne 0076                 efgtoa@pp 0074  
               efgtoa@ou 007A                 isa$xinst 000000                 _vfprintf 390C  
               isdigit@c 0001                sprintf@ap 00C2                 isspace@c 0001  
       ___lldiv@dividend 0001                strcpy@src 0003                 isupper@c 0001  
              strncmp@_l 0001                strncmp@_r 0003          ??_PWM1_Set_Duty 005F  
            efgtoa@nmode 0086             ?_getDistance 0001              ??_vfpfcnvrt 00A4  
        _UART_Write_Text 3CA4                 sprintf@f 00C4                 tolower@c 0007  
               sprintf@s 00BA         ___lldiv@quotient 0009                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A               _PWM1_Start 3D1C  
          ___fladd@signs 0051             ___fladd@aexp 0052             ___fladd@bexp 0053  
