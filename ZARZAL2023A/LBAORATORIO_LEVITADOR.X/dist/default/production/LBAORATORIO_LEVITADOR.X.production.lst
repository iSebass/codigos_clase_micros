

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 02 10:46:52 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81  0000                     
    82                           ; Version 2.40
    83                           ; Generated 17/11/2021 GMT
    84                           ; 
    85                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4550 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataBANK1
   119  005AEA                     __pidataBANK1:
   120                           	callstack 0
   121                           
   122                           ;initializer for _ref
   123  005AEA  0000               	dw	0
   124  005AEC  42A0               	dw	17056
   125                           
   126                           ;initializer for _Ki
   127  005AEE  CCCD               	dw	52429
   128  005AF0  3DCC               	dw	15820
   129                           
   130                           ;initializer for _Kd
   131  005AF2  CCCD               	dw	52429
   132  005AF4  3ECC               	dw	16076
   133                           
   134                           ;initializer for _Kp
   135  005AF6  0000               	dw	0
   136  005AF8  3F00               	dw	16128
   137                           
   138                           ;initializer for _duty
   139  005AFA  0046               	dw	70
   140                           
   141                           ;initializer for _bufferRx
   142  005AFC  20                 	db	32
   143  005AFD  00                 	db	0
   144  005AFE  00                 	db	0
   145  005AFF  00                 	db	0
   146  005B00  00                 	db	0
   147  005B01  00                 	db	0
   148  005B02  00                 	db	0
   149  005B03  00                 	db	0
   150  005B04  00                 	db	0
   151  005B05  00                 	db	0
   152  005B06  00                 	db	0
   153  005B07  00                 	db	0
   154  005B08  00                 	db	0
   155  005B09  00                 	db	0
   156  005B0A  00                 	db	0
   157  005B0B  00                 	db	0
   158  005B0C  00                 	db	0
   159  005B0D  00                 	db	0
   160  005B0E  00                 	db	0
   161  005B0F  00                 	db	0
   162  005B10  00                 	db	0
   163  005B11  00                 	db	0
   164  005B12  00                 	db	0
   165  005B13  00                 	db	0
   166  005B14  00                 	db	0
   167  005B15  00                 	db	0
   168  005B16  00                 	db	0
   169  005B17  00                 	db	0
   170  005B18  00                 	db	0
   171  005B19  00                 	db	0
   172  005B1A  00                 	db	0
   173  005B1B  00                 	db	0
   174  005B1C  00                 	db	0
   175  005B1D  00                 	db	0
   176  005B1E  00                 	db	0
   177  005B1F  00                 	db	0
   178  005B20  00                 	db	0
   179  005B21  00                 	db	0
   180  005B22  00                 	db	0
   181  005B23  00                 	db	0
   182  005B24  00                 	db	0
   183  005B25  00                 	db	0
   184  005B26  00                 	db	0
   185  005B27  00                 	db	0
   186  005B28  00                 	db	0
   187  005B29  00                 	db	0
   188  005B2A  00                 	db	0
   189  005B2B  00                 	db	0
   190  005B2C  00                 	db	0
   191  005B2D  00                 	db	0
   192                           
   193                           	psect	idataBANK2
   194  005D0C                     __pidataBANK2:
   195                           	callstack 0
   196                           
   197                           ;initializer for _strUART
   198  005D0C  20                 	db	32
   199  005D0D  00                 	db	0
   200  005D0E  00                 	db	0
   201  005D0F  00                 	db	0
   202  005D10  00                 	db	0
   203  005D11  00                 	db	0
   204  005D12  00                 	db	0
   205  005D13  00                 	db	0
   206  005D14  00                 	db	0
   207  005D15  00                 	db	0
   208  005D16  00                 	db	0
   209  005D17  00                 	db	0
   210  005D18  00                 	db	0
   211  005D19  00                 	db	0
   212  005D1A  00                 	db	0
   213  005D1B  00                 	db	0
   214  005D1C  00                 	db	0
   215  005D1D  00                 	db	0
   216  005D1E  00                 	db	0
   217  005D1F  00                 	db	0
   218  005D20  00                 	db	0
   219  005D21  00                 	db	0
   220  005D22  00                 	db	0
   221  005D23  00                 	db	0
   222  005D24  00                 	db	0
   223  005D25  00                 	db	0
   224  005D26  00                 	db	0
   225  005D27  00                 	db	0
   226  005D28  00                 	db	0
   227  005D29  00                 	db	0
   228  005D2A  00                 	db	0
   229  005D2B  00                 	db	0
   230  005D2C  00                 	db	0
   231  005D2D  00                 	db	0
   232  005D2E  00                 	db	0
   233  005D2F  00                 	db	0
   234  005D30  00                 	db	0
   235  005D31  00                 	db	0
   236  005D32  00                 	db	0
   237  005D33  00                 	db	0
   238  005D34  00                 	db	0
   239  005D35  00                 	db	0
   240  005D36  00                 	db	0
   241  005D37  00                 	db	0
   242  005D38  00                 	db	0
   243  005D39  00                 	db	0
   244  005D3A  00                 	db	0
   245  005D3B  00                 	db	0
   246  005D3C  00                 	db	0
   247  005D3D  00                 	db	0
   248  0000                     _TRISCbits	set	3988
   249  0000                     _RCREG	set	4014
   250  0000                     _TXREG	set	4013
   251  0000                     _TRISDbits	set	3989
   252  0000                     _TXSTAbits	set	4012
   253  0000                     _TX9D	set	32096
   254  0000                     _BRGH	set	32098
   255  0000                     _SPEN	set	32095
   256  0000                     _SYNC	set	32100
   257  0000                     _TXEN	set	32101
   258  0000                     _RX9	set	32094
   259  0000                     _TX9	set	32102
   260  0000                     _PORTBbits	set	3969
   261  0000                     _TRISBbits	set	3987
   262  0000                     _PIR1bits	set	3998
   263  0000                     _RCSTA	set	4011
   264  0000                     _TXSTA	set	4012
   265  0000                     _SPBRG	set	4015
   266  0000                     _ADCON1	set	4033
   267  0000                     _T2CONbits	set	4042
   268  0000                     _INTCONbits	set	4082
   269  0000                     _PIE1bits	set	3997
   270  0000                     _PORTDbits	set	3971
   271  0000                     _CCP2CONbits	set	4026
   272  0000                     _CCPR2L	set	4027
   273  0000                     _CCP1CONbits	set	4029
   274  0000                     _CCPR1L	set	4030
   275  0000                     _PR2	set	4043
   276                           
   277                           	psect	smallconst
   278  000800                     __psmallconst:
   279                           	callstack 0
   280  000800  00                 	db	0
   281  000801                     STR_3:
   282  000801  2A                 	db	42
   283  000802  25                 	db	37
   284  000803  30                 	db	48	;'0'
   285  000804  2E                 	db	46
   286  000805  31                 	db	49	;'1'
   287  000806  66                 	db	102	;'f'
   288  000807  2F                 	db	47
   289  000808  25                 	db	37
   290  000809  30                 	db	48	;'0'
   291  00080A  33                 	db	51	;'3'
   292  00080B  64                 	db	100	;'d'
   293  00080C  2F                 	db	47
   294  00080D  25                 	db	37
   295  00080E  30                 	db	48	;'0'
   296  00080F  2E                 	db	46
   297  000810  32                 	db	50	;'2'
   298  000811  66                 	db	102	;'f'
   299  000812  2F                 	db	47
   300  000813  25                 	db	37
   301  000814  30                 	db	48	;'0'
   302  000815  2E                 	db	46
   303  000816  32                 	db	50	;'2'
   304  000817  66                 	db	102	;'f'
   305  000818  2F                 	db	47
   306  000819  25                 	db	37
   307  00081A  30                 	db	48	;'0'
   308  00081B  2E                 	db	46
   309  00081C  32                 	db	50	;'2'
   310  00081D  66                 	db	102	;'f'
   311  00081E  23                 	db	35
   312  00081F  0D                 	db	13
   313  000820  0A                 	db	10
   314  000821  00                 	db	0
   315  000822                     STR_18:
   316  000822  49                 	db	73	;'I'
   317  000823  4E                 	db	78	;'N'
   318  000824  46                 	db	70	;'F'
   319  000825  49                 	db	73	;'I'
   320  000826  4E                 	db	78	;'N'
   321  000827  49                 	db	73	;'I'
   322  000828  54                 	db	84	;'T'
   323  000829  59                 	db	89	;'Y'
   324  00082A  00                 	db	0
   325  00082B                     STR_17:
   326  00082B  69                 	db	105	;'i'
   327  00082C  6E                 	db	110	;'n'
   328  00082D  66                 	db	102	;'f'
   329  00082E  69                 	db	105	;'i'
   330  00082F  6E                 	db	110	;'n'
   331  000830  69                 	db	105	;'i'
   332  000831  74                 	db	116	;'t'
   333  000832  79                 	db	121	;'y'
   334  000833  00                 	db	0
   335  000834                     STR_4:
   336  000834  49                 	db	73	;'I'
   337  000835  4E                 	db	78	;'N'
   338  000836  46                 	db	70	;'F'
   339  000837  00                 	db	0
   340  000838                     STR_8:
   341  000838  4E                 	db	78	;'N'
   342  000839  41                 	db	65	;'A'
   343  00083A  4E                 	db	78	;'N'
   344  00083B  00                 	db	0
   345  00083C                     STR_5:
   346  00083C  69                 	db	105	;'i'
   347  00083D  6E                 	db	110	;'n'
   348  00083E  66                 	db	102	;'f'
   349  00083F  00                 	db	0
   350  000840                     STR_9:
   351  000840  6E                 	db	110	;'n'
   352  000841  61                 	db	97	;'a'
   353  000842  6E                 	db	110	;'n'
   354  000843  00                 	db	0
   355  000844                     STR_12:
   356  000844  6C                 	db	108	;'l'
   357  000845  66                 	db	102	;'f'
   358  000846  00                 	db	0
   359  000847                     STR_1:
   360  000847  2F                 	db	47
   361  000848  23                 	db	35
   362  000849  00                 	db	0
   363  00084A  00                 	db	0	; dummy byte at the end
   364  0000                     
   365                           ; #config settings
   366                           
   367                           	psect	cinit
   368  005788                     __pcinit:
   369                           	callstack 0
   370  005788                     start_initialization:
   371                           	callstack 0
   372  005788                     __initialization:
   373                           	callstack 0
   374                           
   375                           ; Initialize objects allocated to BANK2 (50 bytes)
   376                           ; load TBLPTR registers with __pidataBANK2
   377  005788  0E0C               	movlw	low __pidataBANK2
   378  00578A  6EF6               	movwf	tblptrl,c
   379  00578C  0E5D               	movlw	high __pidataBANK2
   380  00578E  6EF7               	movwf	tblptrh,c
   381  005790  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   382  005792  6EF8               	movwf	tblptru,c
   383  005794  EE02  F000         	lfsr	0,__pdataBANK2
   384  005798  EE10 F032          	lfsr	1,50
   385  00579C                     copy_data0:
   386  00579C  0009               	tblrd		*+
   387  00579E  CFF5 FFEE          	movff	tablat,postinc0
   388  0057A2  50E5               	movf	postdec1,w,c
   389  0057A4  50E1               	movf	fsr1l,w,c
   390  0057A6  E1FA               	bnz	copy_data0
   391                           
   392                           ; Initialize objects allocated to BANK1 (68 bytes)
   393                           ; load TBLPTR registers with __pidataBANK1
   394  0057A8  0EEA               	movlw	low __pidataBANK1
   395  0057AA  6EF6               	movwf	tblptrl,c
   396  0057AC  0E5A               	movlw	high __pidataBANK1
   397  0057AE  6EF7               	movwf	tblptrh,c
   398  0057B0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   399  0057B2  6EF8               	movwf	tblptru,c
   400  0057B4  EE01  F08E         	lfsr	0,__pdataBANK1
   401  0057B8  EE10 F044          	lfsr	1,68
   402  0057BC                     copy_data1:
   403  0057BC  0009               	tblrd		*+
   404  0057BE  CFF5 FFEE          	movff	tablat,postinc0
   405  0057C2  50E5               	movf	postdec1,w,c
   406  0057C4  50E1               	movf	fsr1l,w,c
   407  0057C6  E1FA               	bnz	copy_data1
   408                           
   409                           ; Clear objects allocated to BANK1 (142 bytes)
   410  0057C8  EE01  F000         	lfsr	0,__pbssBANK1
   411  0057CC  0E8E               	movlw	142
   412  0057CE                     clear_0:
   413  0057CE  6AEE               	clrf	postinc0,c
   414  0057D0  06E8               	decf	wreg,f,c
   415  0057D2  E1FD               	bnz	clear_0
   416                           
   417                           ; Clear objects allocated to BANK0 (2 bytes)
   418  0057D4  0100               	movlb	0
   419  0057D6  6BF8               	clrf	(__pbssBANK0+1)& (0+255),b
   420  0057D8  6BF7               	clrf	__pbssBANK0& (0+255),b
   421                           
   422                           ; Clear objects allocated to COMRAM (3 bytes)
   423  0057DA  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   424  0057DC  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   425  0057DE  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   426  0057E0                     end_of_initialization:
   427                           	callstack 0
   428  0057E0                     __end_of__initialization:
   429                           	callstack 0
   430  0057E0  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   431  0057E2  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   432  0057E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   433  0057E6  6EF8               	movwf	tblptru,c
   434  0057E8  0100               	movlb	0
   435  0057EA  EF33  F018         	goto	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMRAM
   438  00005A                     __pbssCOMRAM:
   439                           	callstack 0
   440  00005A                     _flags:
   441                           	callstack 0
   442  00005A                     	ds	2
   443  00005C                     _letra:
   444                           	callstack 0
   445  00005C                     	ds	1
   446                           
   447                           	psect	bssBANK0
   448  0000F7                     __pbssBANK0:
   449                           	callstack 0
   450  0000F7                     _prec:
   451                           	callstack 0
   452  0000F7                     	ds	2
   453                           
   454                           	psect	bssBANK1
   455  000100                     __pbssBANK1:
   456                           	callstack 0
   457  000100                     _array_constantes:
   458                           	callstack 0
   459  000100                     	ds	16
   460  000110                     floorf@F526:
   461                           	callstack 0
   462  000110                     	ds	4
   463  000114                     ___fpclassifyf@F465:
   464                           	callstack 0
   465  000114                     	ds	4
   466  000118                     _reg10bits:
   467                           	callstack 0
   468  000118                     	ds	4
   469  00011C                     _errorAnte:
   470                           	callstack 0
   471  00011C                     	ds	4
   472  000120                     _actual:
   473                           	callstack 0
   474  000120                     	ds	4
   475  000124                     _suma:
   476                           	callstack 0
   477  000124                     	ds	4
   478  000128                     _error:
   479                           	callstack 0
   480  000128                     	ds	4
   481  00012C                     _distancia:
   482                           	callstack 0
   483  00012C                     	ds	4
   484  000130                     strtok@p:
   485                           	callstack 0
   486  000130                     	ds	2
   487  000132                     _nout:
   488                           	callstack 0
   489  000132                     	ds	2
   490  000134                     _width:
   491                           	callstack 0
   492  000134                     	ds	2
   493  000136                     _indice_array:
   494                           	callstack 0
   495  000136                     	ds	2
   496  000138                     _flag_start_Rx:
   497                           	callstack 0
   498  000138                     	ds	2
   499  00013A                     _flag_Rx_completed:
   500                           	callstack 0
   501  00013A                     	ds	2
   502  00013C                     _indiceRx:
   503                           	callstack 0
   504  00013C                     	ds	2
   505  00013E                     _dbuf:
   506                           	callstack 0
   507  00013E                     	ds	80
   508                           
   509                           	psect	dataBANK1
   510  00018E                     __pdataBANK1:
   511                           	callstack 0
   512  00018E                     _ref:
   513                           	callstack 0
   514  00018E                     	ds	4
   515  000192                     _Ki:
   516                           	callstack 0
   517  000192                     	ds	4
   518  000196                     _Kd:
   519                           	callstack 0
   520  000196                     	ds	4
   521  00019A                     _Kp:
   522                           	callstack 0
   523  00019A                     	ds	4
   524  00019E                     _duty:
   525                           	callstack 0
   526  00019E                     	ds	2
   527  0001A0                     _bufferRx:
   528                           	callstack 0
   529  0001A0                     	ds	50
   530                           
   531                           	psect	dataBANK2
   532  000200                     __pdataBANK2:
   533                           	callstack 0
   534  000200                     _strUART:
   535                           	callstack 0
   536  000200                     	ds	50
   537                           
   538                           	psect	cstackBANK1
   539  0001D2                     __pcstackBANK1:
   540                           	callstack 0
   541  0001D2                     sprintf@ap:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x0
   545  0001D2                     	ds	2
   546  0001D4                     sprintf@f:
   547                           	callstack 0
   548                           
   549                           ; 11 bytes @ 0x2
   550  0001D4                     	ds	11
   551  0001DF                     _main$1875:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0xD
   555  0001DF                     	ds	4
   556  0001E3                     _main$1876:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x11
   560  0001E3                     	ds	4
   561  0001E7                     _main$1877:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x15
   565  0001E7                     	ds	4
   566  0001EB                     main@pch:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x19
   570  0001EB                     	ds	2
   571  0001ED                     main@uartConfig:
   572                           	callstack 0
   573                           
   574                           ; 8 bytes @ 0x1B
   575  0001ED                     	ds	8
   576                           
   577                           	psect	cstackBANK0
   578  000060                     __pcstackBANK0:
   579                           	callstack 0
   580  000060                     ___fldiv@rem:
   581                           	callstack 0
   582                           
   583                           ; 4 bytes @ 0x0
   584  000060                     	ds	4
   585  000064                     ___fldiv@sign:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x4
   589  000064                     	ds	1
   590  000065                     ___fldiv@new_exp:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x5
   594  000065                     	ds	2
   595  000067                     ___fldiv@grs:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x7
   599  000067                     	ds	4
   600  00006B                     ___fldiv@bexp:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0xB
   604  00006B                     	ds	1
   605  00006C                     ___fldiv@aexp:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0xC
   609  00006C                     	ds	1
   610  00006D                     ??_floorf:
   611  00006D                     ??_strtof:
   612  00006D                     ___fltol@sign1:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0xD
   616  00006D                     	ds	1
   617  00006E                     ___fltol@exp1:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0xE
   621  00006E                     	ds	1
   622  00006F                     PWM1_Set_Duty@duty:
   623                           	callstack 0
   624  00006F                     PWM1_Init@freq:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0xF
   628  00006F                     	ds	1
   629  000070                     PWM1_Set_Duty@val:
   630                           	callstack 0
   631                           
   632                           ; 4 bytes @ 0x10
   633  000070                     	ds	1
   634  000071                     ??_PWM1_Init:
   635                           
   636                           ; 1 bytes @ 0x11
   637  000071                     	ds	2
   638  000073                     strtof@digit:
   639                           	callstack 0
   640  000073                     floorf@m:
   641                           	callstack 0
   642  000073                     _PWM1_Init$1878:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x13
   646  000073                     	ds	1
   647  000074                     strtof@flags:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x14
   651  000074                     	ds	1
   652  000075                     strtof@expon:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x15
   656  000075                     	ds	2
   657  000077                     PWM1_Init@prees:
   658                           	callstack 0
   659  000077                     floorf@e:
   660                           	callstack 0
   661  000077                     strtof@eexp:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x17
   665  000077                     	ds	2
   666  000079                     floorf@u:
   667                           	callstack 0
   668  000079                     strtof@_u:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x19
   672  000079                     	ds	4
   673  00007D                     ?_efgtoa:
   674                           	callstack 0
   675  00007D                     strtof@i:
   676                           	callstack 0
   677  00007D                     efgtoa@fp:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x1D
   681  00007D                     	ds	1
   682  00007E                     ?_atof:
   683                           	callstack 0
   684  00007E                     atof@s:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x1E
   688  00007E                     	ds	1
   689  00007F                     efgtoa@f:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x1F
   693  00007F                     	ds	4
   694  000083                     efgtoa@c:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x23
   698  000083                     	ds	1
   699  000084                     ??_efgtoa:
   700                           
   701                           ; 1 bytes @ 0x24
   702  000084                     	ds	5
   703  000089                     _efgtoa$1349:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x29
   707  000089                     	ds	2
   708  00008B                     _efgtoa$1356:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x2B
   712  00008B                     	ds	2
   713  00008D                     _efgtoa$1357:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x2D
   717  00008D                     	ds	2
   718  00008F                     efgtoa@t:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x2F
   722  00008F                     	ds	2
   723  000091                     efgtoa@pp:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x31
   727  000091                     	ds	2
   728  000093                     efgtoa@ne:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x33
   732  000093                     	ds	2
   733  000095                     efgtoa@m:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x35
   737  000095                     	ds	2
   738  000097                     efgtoa@ou:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x37
   742  000097                     	ds	4
   743  00009B                     efgtoa@d:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x3B
   747  00009B                     	ds	2
   748  00009D                     efgtoa@sign:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x3D
   752  00009D                     	ds	2
   753  00009F                     efgtoa@p:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x3F
   757  00009F                     	ds	2
   758  0000A1                     efgtoa@w:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x41
   762  0000A1                     	ds	2
   763  0000A3                     efgtoa@nmode:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x43
   767  0000A3                     	ds	1
   768  0000A4                     efgtoa@mode:
   769                           	callstack 0
   770                           
   771                           ; 1 bytes @ 0x44
   772  0000A4                     	ds	1
   773  0000A5                     efgtoa@h:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x45
   777  0000A5                     	ds	4
   778  0000A9                     efgtoa@l:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x49
   782  0000A9                     	ds	4
   783  0000AD                     efgtoa@i:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x4D
   787  0000AD                     	ds	2
   788  0000AF                     efgtoa@g:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x4F
   792  0000AF                     	ds	4
   793  0000B3                     efgtoa@e:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x53
   797  0000B3                     	ds	2
   798  0000B5                     efgtoa@n:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x55
   802  0000B5                     	ds	2
   803  0000B7                     efgtoa@u:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x57
   807  0000B7                     	ds	4
   808  0000BB                     ?_vfpfcnvrt:
   809                           	callstack 0
   810  0000BB                     vfpfcnvrt@fp:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x5B
   814  0000BB                     	ds	2
   815  0000BD                     vfpfcnvrt@fmt:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x5D
   819  0000BD                     	ds	2
   820  0000BF                     vfpfcnvrt@ap:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x5F
   824  0000BF                     	ds	2
   825  0000C1                     ??_vfpfcnvrt:
   826                           
   827                           ; 1 bytes @ 0x61
   828  0000C1                     	ds	4
   829  0000C5                     vfpfcnvrt@ll:
   830                           	callstack 0
   831                           
   832                           ; 8 bytes @ 0x65
   833  0000C5                     	ds	8
   834  0000CD                     vfpfcnvrt@done:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x6D
   838  0000CD                     	ds	2
   839  0000CF                     vfpfcnvrt@f:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x6F
   843  0000CF                     	ds	4
   844  0000D3                     vfpfcnvrt@ct:
   845                           	callstack 0
   846                           
   847                           ; 3 bytes @ 0x73
   848  0000D3                     	ds	3
   849  0000D6                     vfpfcnvrt@c:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x76
   853  0000D6                     	ds	1
   854  0000D7                     ?_vfprintf:
   855                           	callstack 0
   856  0000D7                     vfprintf@fp:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x77
   860  0000D7                     	ds	2
   861  0000D9                     vfprintf@fmt:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x79
   865  0000D9                     	ds	2
   866  0000DB                     vfprintf@ap:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x7B
   870  0000DB                     	ds	2
   871  0000DD                     vfprintf@cfmt:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x7D
   875  0000DD                     	ds	2
   876  0000DF                     ?_sprintf:
   877                           	callstack 0
   878  0000DF                     sprintf@s:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x7F
   882  0000DF                     	ds	2
   883  0000E1                     sprintf@fmt:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x81
   887  0000E1                     	ds	20
   888  0000F5                     ??_main:
   889                           
   890                           ; 1 bytes @ 0x95
   891  0000F5                     	ds	2
   892                           
   893                           	psect	cstackCOMRAM
   894  000001                     __pcstackCOMRAM:
   895                           	callstack 0
   896  000001                     ??___name:
   897  000001                     
   898                           ; 1 bytes @ 0x0
   899  000001                     	ds	2
   900  000003                     ?_getDistance:
   901                           	callstack 0
   902  000003                     ?_strlen:
   903                           	callstack 0
   904  000003                     ?___fpclassifyf:
   905                           	callstack 0
   906  000003                     ?_isupper:
   907                           	callstack 0
   908  000003                     ?_isdigit:
   909                           	callstack 0
   910  000003                     ?_strncmp:
   911                           	callstack 0
   912  000003                     ?_isspace:
   913                           	callstack 0
   914  000003                     ?_strchr:
   915                           	callstack 0
   916  000003                     ?_islower:
   917                           	callstack 0
   918  000003                     ?___wmul:
   919                           	callstack 0
   920  000003                     ?___awdiv:
   921                           	callstack 0
   922  000003                     ?___awmod:
   923                           	callstack 0
   924  000003                     ?_nanf:
   925                           	callstack 0
   926  000003                     ?___lmul:
   927                           	callstack 0
   928  000003                     ?___lldiv:
   929                           	callstack 0
   930  000003                     ?___flneg:
   931                           	callstack 0
   932  000003                     ?___aodiv:
   933                           	callstack 0
   934  000003                     ?___aomod:
   935                           	callstack 0
   936  000003                     UART_Write_Chr@letter:
   937                           	callstack 0
   938  000003                     ___wmul@multiplier:
   939                           	callstack 0
   940  000003                     ___awdiv@dividend:
   941                           	callstack 0
   942  000003                     ___awmod@dividend:
   943                           	callstack 0
   944  000003                     memset@dest:
   945                           	callstack 0
   946  000003                     isdigit@c:
   947                           	callstack 0
   948  000003                     isspace@c:
   949                           	callstack 0
   950  000003                     isupper@c:
   951                           	callstack 0
   952  000003                     fputc@c:
   953                           	callstack 0
   954  000003                     strcpy@dest:
   955                           	callstack 0
   956  000003                     strlen@s:
   957                           	callstack 0
   958  000003                     strncmp@_l:
   959                           	callstack 0
   960  000003                     nanf@s:
   961                           	callstack 0
   962  000003                     strchr@s:
   963                           	callstack 0
   964  000003                     islower@c:
   965                           	callstack 0
   966  000003                     ___lmul@multiplier:
   967                           	callstack 0
   968  000003                     ___lldiv@dividend:
   969                           	callstack 0
   970  000003                     ___fleq@ff1:
   971                           	callstack 0
   972  000003                     ___flneg@f1:
   973                           	callstack 0
   974  000003                     ___fpclassifyf@x:
   975                           	callstack 0
   976  000003                     ___aodiv@dividend:
   977                           	callstack 0
   978  000003                     ___aomod@dividend:
   979                           	callstack 0
   980                           
   981                           ; 8 bytes @ 0x2
   982  000003                     	ds	1
   983  000004                     UART_Write_Text@text:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x3
   987  000004                     	ds	1
   988  000005                     ??_isupper:
   989  000005                     ??_isdigit:
   990  000005                     ??_isspace:
   991  000005                     ??_islower:
   992  000005                     getDistance@count:
   993                           	callstack 0
   994  000005                     ___wmul@multiplicand:
   995                           	callstack 0
   996  000005                     ___awdiv@divisor:
   997                           	callstack 0
   998  000005                     ___awmod@divisor:
   999                           	callstack 0
  1000  000005                     memset@c:
  1001                           	callstack 0
  1002  000005                     fputc@fp:
  1003                           	callstack 0
  1004  000005                     strcpy@src:
  1005                           	callstack 0
  1006  000005                     strlen@a:
  1007                           	callstack 0
  1008  000005                     strncmp@_r:
  1009                           	callstack 0
  1010  000005                     strchr@c:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x4
  1014  000005                     	ds	1
  1015  000006                     
  1016                           ; 1 bytes @ 0x5
  1017  000006                     	ds	1
  1018  000007                     ??_fputc:
  1019  000007                     ??___fpclassifyf:
  1020  000007                     ??_strcpy:
  1021  000007                     ?_strspn:
  1022                           	callstack 0
  1023  000007                     ?_strcspn:
  1024                           	callstack 0
  1025  000007                     ?___xxtofl:
  1026                           	callstack 0
  1027  000007                     ___awdiv@counter:
  1028                           	callstack 0
  1029  000007                     ___awmod@counter:
  1030                           	callstack 0
  1031  000007                     ___wmul@product:
  1032                           	callstack 0
  1033  000007                     memset@n:
  1034                           	callstack 0
  1035  000007                     strncmp@n:
  1036                           	callstack 0
  1037  000007                     strcspn@s:
  1038                           	callstack 0
  1039  000007                     strspn@s:
  1040                           	callstack 0
  1041  000007                     ___lmul@multiplicand:
  1042                           	callstack 0
  1043  000007                     ___lldiv@divisor:
  1044                           	callstack 0
  1045  000007                     ___fleq@ff2:
  1046                           	callstack 0
  1047  000007                     ___xxtofl@val:
  1048                           	callstack 0
  1049  000007                     nanf@u:
  1050                           	callstack 0
  1051                           
  1052                           ; 4 bytes @ 0x6
  1053  000007                     	ds	1
  1054  000008                     ___awdiv@sign:
  1055                           	callstack 0
  1056  000008                     ___awmod@sign:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x7
  1060  000008                     	ds	1
  1061  000009                     ??_memset:
  1062  000009                     ??_strncmp:
  1063  000009                     ?_tolower:
  1064                           	callstack 0
  1065  000009                     ?_isxdigit:
  1066                           	callstack 0
  1067  000009                     ?_toupper:
  1068                           	callstack 0
  1069  000009                     _isspace$1438:
  1070                           	callstack 0
  1071  000009                     ___awdiv@quotient:
  1072                           	callstack 0
  1073  000009                     strcpy@s:
  1074                           	callstack 0
  1075  000009                     isxdigit@c:
  1076                           	callstack 0
  1077  000009                     strcspn@c:
  1078                           	callstack 0
  1079  000009                     strspn@c:
  1080                           	callstack 0
  1081  000009                     tolower@c:
  1082                           	callstack 0
  1083  000009                     toupper@c:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x8
  1087  000009                     	ds	1
  1088  00000A                     ?_atoi:
  1089                           	callstack 0
  1090  00000A                     atoi@s:
  1091                           	callstack 0
  1092  00000A                     strncmp@l:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x9
  1096  00000A                     	ds	1
  1097  00000B                     ??_tolower:
  1098  00000B                     ??_isxdigit:
  1099  00000B                     ??_toupper:
  1100  00000B                     ??_strspn:
  1101  00000B                     ??_strcspn:
  1102  00000B                     ??___fleq:
  1103  00000B                     ??___xxtofl:
  1104  00000B                     memset@k:
  1105                           	callstack 0
  1106  00000B                     ___fpclassifyf@e:
  1107                           	callstack 0
  1108  00000B                     strcpy@d:
  1109                           	callstack 0
  1110  00000B                     ___lmul@product:
  1111                           	callstack 0
  1112  00000B                     ___lldiv@quotient:
  1113                           	callstack 0
  1114  00000B                     ___aodiv@divisor:
  1115                           	callstack 0
  1116  00000B                     ___aomod@divisor:
  1117                           	callstack 0
  1118                           
  1119                           ; 8 bytes @ 0xA
  1120  00000B                     	ds	1
  1121  00000C                     ??_atoi:
  1122  00000C                     fputs@s:
  1123                           	callstack 0
  1124  00000C                     strncmp@r:
  1125                           	callstack 0
  1126  00000C                     strcspn@i:
  1127                           	callstack 0
  1128  00000C                     strspn@i:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0xB
  1132  00000C                     	ds	1
  1133  00000D                     memset@s:
  1134                           	callstack 0
  1135  00000D                     ___fpclassifyf@u:
  1136                           	callstack 0
  1137                           
  1138                           ; 4 bytes @ 0xC
  1139  00000D                     	ds	1
  1140  00000E                     ?_strtok:
  1141                           	callstack 0
  1142  00000E                     fputs@fp:
  1143                           	callstack 0
  1144  00000E                     strtok@s:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0xD
  1148  00000E                     	ds	1
  1149  00000F                     ___lldiv@counter:
  1150                           	callstack 0
  1151  00000F                     ___xxtofl@sign:
  1152                           	callstack 0
  1153  00000F                     _isxdigit$1571:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0xE
  1157  00000F                     	ds	1
  1158  000010                     ___xxtofl@exp:
  1159                           	callstack 0
  1160  000010                     fputs@c:
  1161                           	callstack 0
  1162  000010                     atoi@neg:
  1163                           	callstack 0
  1164  000010                     strtok@sep:
  1165                           	callstack 0
  1166  000010                     UART_Init@config:
  1167                           	callstack 0
  1168                           
  1169                           ; 8 bytes @ 0xF
  1170  000010                     	ds	1
  1171  000011                     fputs@i:
  1172                           	callstack 0
  1173  000011                     ___xxtofl@arg:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x10
  1177  000011                     	ds	1
  1178  000012                     atoi@n:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x11
  1182  000012                     	ds	1
  1183  000013                     ?_pad:
  1184                           	callstack 0
  1185  000013                     ___aodiv@counter:
  1186                           	callstack 0
  1187  000013                     ___aomod@counter:
  1188                           	callstack 0
  1189  000013                     pad@fp:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x12
  1193  000013                     	ds	1
  1194  000014                     ___aodiv@sign:
  1195                           	callstack 0
  1196  000014                     ___aomod@sign:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x13
  1200  000014                     	ds	1
  1201  000015                     ?_abs:
  1202                           	callstack 0
  1203  000015                     ?___fladd:
  1204                           	callstack 0
  1205  000015                     pad@buf:
  1206                           	callstack 0
  1207  000015                     abs@a:
  1208                           	callstack 0
  1209  000015                     ___fladd@b:
  1210                           	callstack 0
  1211  000015                     ___aodiv@quotient:
  1212                           	callstack 0
  1213                           
  1214                           ; 8 bytes @ 0x14
  1215  000015                     	ds	2
  1216  000017                     ??_abs:
  1217  000017                     pad@p:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x16
  1221  000017                     	ds	1
  1222  000018                     ??_UART_Init:
  1223                           
  1224                           ; 1 bytes @ 0x17
  1225  000018                     	ds	1
  1226  000019                     ??_pad:
  1227  000019                     ___fladd@a:
  1228                           	callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x18
  1231  000019                     	ds	1
  1232  00001A                     pad@i:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x19
  1236  00001A                     	ds	2
  1237  00001C                     pad@w:
  1238                           	callstack 0
  1239  00001C                     UART_Init@spbrg_val:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x1B
  1243  00001C                     	ds	1
  1244  00001D                     ??___fladd:
  1245                           
  1246                           ; 1 bytes @ 0x1C
  1247  00001D                     	ds	1
  1248  00001E                     ?_dtoa:
  1249                           	callstack 0
  1250  00001E                     dtoa@fp:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x1D
  1254  00001E                     	ds	2
  1255  000020                     dtoa@d:
  1256                           	callstack 0
  1257                           
  1258                           ; 8 bytes @ 0x1F
  1259  000020                     	ds	1
  1260  000021                     ___fladd@signs:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x20
  1264  000021                     	ds	1
  1265  000022                     ___fladd@aexp:
  1266                           	callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x21
  1269  000022                     	ds	1
  1270  000023                     ___fladd@bexp:
  1271                           	callstack 0
  1272                           
  1273                           ; 1 bytes @ 0x22
  1274  000023                     	ds	1
  1275  000024                     ___fladd@grs:
  1276                           	callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x23
  1279  000024                     	ds	1
  1280  000025                     ?___flsub:
  1281                           	callstack 0
  1282  000025                     ___flsub@b:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x24
  1286  000025                     	ds	3
  1287  000028                     ??_dtoa:
  1288                           
  1289                           ; 1 bytes @ 0x27
  1290  000028                     	ds	1
  1291  000029                     ___flsub@a:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x28
  1295  000029                     	ds	4
  1296  00002D                     ?___flmul:
  1297                           	callstack 0
  1298  00002D                     ___flmul@b:
  1299                           	callstack 0
  1300                           
  1301                           ; 4 bytes @ 0x2C
  1302  00002D                     	ds	3
  1303  000030                     _dtoa$1325:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x2F
  1307  000030                     	ds	1
  1308  000031                     ___flmul@a:
  1309                           	callstack 0
  1310                           
  1311                           ; 4 bytes @ 0x30
  1312  000031                     	ds	1
  1313  000032                     dtoa@p:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x31
  1317  000032                     	ds	2
  1318  000034                     dtoa@w:
  1319                           	callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x33
  1322  000034                     	ds	1
  1323  000035                     ??___flmul:
  1324                           
  1325                           ; 1 bytes @ 0x34
  1326  000035                     	ds	1
  1327  000036                     dtoa@s:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x35
  1331  000036                     	ds	2
  1332  000038                     dtoa@n:
  1333                           	callstack 0
  1334                           
  1335                           ; 8 bytes @ 0x37
  1336  000038                     	ds	1
  1337  000039                     ___flmul@sign:
  1338                           	callstack 0
  1339                           
  1340                           ; 1 bytes @ 0x38
  1341  000039                     	ds	1
  1342  00003A                     ___flmul@aexp:
  1343                           	callstack 0
  1344                           
  1345                           ; 1 bytes @ 0x39
  1346  00003A                     	ds	1
  1347  00003B                     ___flmul@grs:
  1348                           	callstack 0
  1349                           
  1350                           ; 4 bytes @ 0x3A
  1351  00003B                     	ds	4
  1352  00003F                     ___flmul@bexp:
  1353                           	callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x3E
  1356  00003F                     	ds	1
  1357  000040                     dtoa@i:
  1358                           	callstack 0
  1359  000040                     ___flmul@prod:
  1360                           	callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x3F
  1363  000040                     	ds	4
  1364  000044                     ___flmul@temp:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x43
  1368  000044                     	ds	2
  1369  000046                     ?___fldiv:
  1370                           	callstack 0
  1371  000046                     ___flge@ff1:
  1372                           	callstack 0
  1373  000046                     ___fldiv@b:
  1374                           	callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x45
  1377  000046                     	ds	4
  1378  00004A                     ___flge@ff2:
  1379                           	callstack 0
  1380  00004A                     ___fldiv@a:
  1381                           	callstack 0
  1382                           
  1383                           ; 4 bytes @ 0x49
  1384  00004A                     	ds	4
  1385  00004E                     ??___fldiv:
  1386  00004E                     ??___flge:
  1387                           
  1388                           ; 1 bytes @ 0x4D
  1389  00004E                     	ds	4
  1390  000052                     ?_floorf:
  1391                           	callstack 0
  1392  000052                     ?___fltol:
  1393                           	callstack 0
  1394  000052                     ?_strtof:
  1395                           	callstack 0
  1396  000052                     strtof@s:
  1397                           	callstack 0
  1398  000052                     ___fltol@f1:
  1399                           	callstack 0
  1400  000052                     floorf@x:
  1401                           	callstack 0
  1402                           
  1403                           ; 4 bytes @ 0x51
  1404  000052                     	ds	2
  1405  000054                     strtof@res:
  1406                           	callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x53
  1409  000054                     	ds	2
  1410  000056                     ??___fltol:
  1411                           
  1412                           ; 1 bytes @ 0x55
  1413  000056                     	ds	4
  1414  00005A                     
  1415                           ; 1 bytes @ 0x59
  1416 ;;
  1417 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1418 ;;
  1419 ;; *************** function _main *****************
  1420 ;; Defined at:
  1421 ;;		line 64 in file "main.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  pch             2   25[BANK1 ] PTR unsigned char 
  1426 ;;		 -> NULL(0), bufferRx(50), 
  1427 ;;  uartConfig      8   27[BANK1 ] struct .
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1437 ;;      Params:         0       0       0       0       0       0       0       0       0
  1438 ;;      Locals:         0       0      22       0       0       0       0       0       0
  1439 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1440 ;;      Totals:         0       2      22       0       0       0       0       0       0
  1441 ;;Total ram usage:       24 bytes
  1442 ;; Hardware stack levels required when called: 10
  1443 ;; This function calls:
  1444 ;;		_Motor_Start
  1445 ;;		_PWM1_Init
  1446 ;;		_PWM1_Set_Duty
  1447 ;;		_PWM1_Start
  1448 ;;		_UART_Init
  1449 ;;		_UART_Write_Text
  1450 ;;		___fladd
  1451 ;;		___flge
  1452 ;;		___flmul
  1453 ;;		___flsub
  1454 ;;		___fltol
  1455 ;;		___xxtofl
  1456 ;;		_atof
  1457 ;;		_getDistance
  1458 ;;		_memset
  1459 ;;		_sprintf
  1460 ;;		_strtok
  1461 ;; This function is called by:
  1462 ;;		Startup code after reset
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text0
  1467  003066                     __ptext0:
  1468                           	callstack 0
  1469  003066                     _main:
  1470                           	callstack 21
  1471  003066                     
  1472                           ;main.c: 65:     ADCON1 = 0x0F;
  1473  003066  0E0F               	movlw	15
  1474  003068  6EC1               	movwf	193,c	;volatile
  1475  00306A                     
  1476                           ;main.c: 67:     TRISBbits.TRISB0 = 0;
  1477  00306A  9093               	bcf	147,0,c	;volatile
  1478  00306C                     
  1479                           ;main.c: 68:     TRISBbits.TRISB1 = 1;
  1480  00306C  8293               	bsf	147,1,c	;volatile
  1481  00306E                     
  1482                           ;main.c: 70:     TRISDbits.TRISD0 = 0;
  1483  00306E  9095               	bcf	149,0,c	;volatile
  1484  003070                     
  1485                           ;main.c: 71:     TRISDbits.TRISD1 = 0;
  1486  003070  9295               	bcf	149,1,c	;volatile
  1487  003072                     
  1488                           ;main.c: 73:     INTCONbits.GIE = 1;
  1489  003072  8EF2               	bsf	242,7,c	;volatile
  1490  003074                     
  1491                           ;main.c: 74:     INTCONbits.PEIE = 1;
  1492  003074  8CF2               	bsf	242,6,c	;volatile
  1493  003076                     
  1494                           ;main.c: 75:     PIE1bits.RC1IE = 1;
  1495  003076  8A9D               	bsf	157,5,c	;volatile
  1496  003078                     
  1497                           ;main.c: 77:     PWM1_Init(2000);
  1498  003078  0E07               	movlw	7
  1499  00307A  0100               	movlb	0	; () banked
  1500  00307C  6F70               	movwf	(PWM1_Init@freq+1)& (0+255),b
  1501  00307E  0ED0               	movlw	208
  1502  003080  6F6F               	movwf	PWM1_Init@freq& (0+255),b
  1503  003082  ECA6  F01F         	call	_PWM1_Init	;wreg free
  1504  003086                     
  1505                           ;main.c: 78:     PWM1_Set_Duty( (uint8_t)(duty) );
  1506  003086  0E46               	movlw	70
  1507  003088  EC81  F029         	call	_PWM1_Set_Duty
  1508  00308C                     
  1509                           ;main.c: 79:     PWM1_Start();
  1510  00308C  EC05  F02F         	call	_PWM1_Start	;wreg free
  1511  003090                     
  1512                           ;main.c: 81:     UART_Config uartConfig;;main.c: 83:     uartConfig.baud_rate = 9600;
  1513  003090  0E80               	movlw	128
  1514  003092  0101               	movlb	1	; () banked
  1515  003094  6FED               	movwf	main@uartConfig& (0+255),b
  1516  003096  0E25               	movlw	37
  1517  003098  6FEE               	movwf	(main@uartConfig+1)& (0+255),b
  1518  00309A  0E00               	movlw	0
  1519  00309C  6FEF               	movwf	(main@uartConfig+2)& (0+255),b
  1520  00309E  0E00               	movlw	0
  1521  0030A0  6FF0               	movwf	(main@uartConfig+3)& (0+255),b
  1522  0030A2                     
  1523                           ; BSR set to: 1
  1524                           ;main.c: 84:     uartConfig.data_bits = 8;
  1525  0030A2  0E08               	movlw	8
  1526  0030A4  6FF1               	movwf	(main@uartConfig+4)& (0+255),b
  1527  0030A6                     
  1528                           ; BSR set to: 1
  1529                           ;main.c: 85:     uartConfig.parity = 0;
  1530  0030A6  0E00               	movlw	0
  1531  0030A8  6FF2               	movwf	(main@uartConfig+5)& (0+255),b
  1532  0030AA                     
  1533                           ; BSR set to: 1
  1534                           ;main.c: 86:     uartConfig.stop_bits = 1;
  1535  0030AA  0E01               	movlw	1
  1536  0030AC  6FF3               	movwf	(main@uartConfig+6)& (0+255),b
  1537  0030AE                     
  1538                           ; BSR set to: 1
  1539                           ;main.c: 88:     UART_Init(uartConfig);
  1540  0030AE  EE21  F0ED         	lfsr	2,main@uartConfig
  1541  0030B2  EE00  F010         	lfsr	0,UART_Init@config
  1542  0030B6  0E07               	movlw	7
  1543  0030B8                     u11281:
  1544  0030B8  CFDB FFEB          	movff	plusw2,plusw0
  1545  0030BC  06E8               	decf	wreg,f,c
  1546  0030BE  E2FC               	bc	u11281
  1547  0030C0  EC09  F027         	call	_UART_Init	;wreg free
  1548  0030C4                     
  1549                           ;main.c: 90:     Motor_Start();
  1550  0030C4  EC02  F02F         	call	_Motor_Start	;wreg free
  1551  0030C8                     l8312:
  1552                           
  1553                           ;main.c: 94:         if(flag_Rx_completed== 1){
  1554  0030C8  0101               	movlb	1	; () banked
  1555  0030CA  053A               	decf	_flag_Rx_completed& (0+255),w,b
  1556  0030CC  113B               	iorwf	(_flag_Rx_completed+1)& (0+255),w,b
  1557  0030CE  A4D8               	btfss	status,2,c
  1558  0030D0  EF6C  F018         	goto	u11291
  1559  0030D4  EF6E  F018         	goto	u11290
  1560  0030D8                     u11291:
  1561  0030D8  EFF5  F018         	goto	l8330
  1562  0030DC                     u11290:
  1563  0030DC                     
  1564                           ; BSR set to: 1
  1565                           ;main.c: 96:             char *pch;;main.c: 97:             pch = strtok(bufferRx, "/#")
      +                          ;
  1566  0030DC  0EA0               	movlw	low _bufferRx
  1567  0030DE  6E0E               	movwf	strtok@s^0,c
  1568  0030E0  0E01               	movlw	high _bufferRx
  1569  0030E2  6E0F               	movwf	(strtok@s+1)^0,c
  1570  0030E4  0E47               	movlw	low STR_1
  1571  0030E6  6E10               	movwf	strtok@sep^0,c
  1572  0030E8  0E08               	movlw	high STR_1
  1573  0030EA  6E11               	movwf	(strtok@sep+1)^0,c
  1574  0030EC  EC7D  F027         	call	_strtok	;wreg free
  1575  0030F0  C00E  F1EB         	movff	?_strtok,main@pch
  1576  0030F4  C00F  F1EC         	movff	?_strtok+1,main@pch+1
  1577                           
  1578                           ;main.c: 98:             while(pch != ((void*)0)){
  1579  0030F8  EFB0  F018         	goto	l8322
  1580  0030FC                     l8316:
  1581                           
  1582                           ; BSR set to: 1
  1583                           ;main.c: 99:                 array_constantes[indice_array] = atof(pch);
  1584  0030FC  C1EB  F07E         	movff	main@pch,atof@s
  1585  003100  C1EC  F07F         	movff	main@pch+1,atof@s+1
  1586  003104  ECB7  F02E         	call	_atof	;wreg free
  1587  003108  0E00               	movlw	low _array_constantes
  1588  00310A  0100               	movlb	0	; () banked
  1589  00310C  6FF5               	movwf	??_main& (0+255),b
  1590  00310E  0E01               	movlw	high _array_constantes
  1591  003110  6FF6               	movwf	(??_main+1)& (0+255),b
  1592  003112  90D8               	bcf	status,0,c
  1593  003114  0101               	movlb	1	; () banked
  1594  003116  3536               	rlcf	_indice_array& (0+255),w,b
  1595  003118  6ED9               	movwf	fsr2l,c
  1596  00311A  3537               	rlcf	(_indice_array+1)& (0+255),w,b
  1597  00311C  6EDA               	movwf	fsr2h,c
  1598  00311E  90D8               	bcf	status,0,c
  1599  003120  36D9               	rlcf	fsr2l,f,c
  1600  003122  36DA               	rlcf	fsr2h,f,c
  1601  003124  0100               	movlb	0	; () banked
  1602  003126  51F5               	movf	??_main& (0+255),w,b
  1603  003128  26D9               	addwf	fsr2l,f,c
  1604  00312A  51F6               	movf	(??_main+1)& (0+255),w,b
  1605  00312C  22DA               	addwfc	fsr2h,f,c
  1606  00312E  C07E  FFDE         	movff	?_atof,postinc2
  1607  003132  C07F  FFDE         	movff	?_atof+1,postinc2
  1608  003136  C080  FFDE         	movff	?_atof+2,postinc2
  1609  00313A  C081  FFDE         	movff	?_atof+3,postinc2
  1610  00313E                     
  1611                           ; BSR set to: 0
  1612                           ;main.c: 100:                 pch = strtok(bufferRx, "/#");
  1613  00313E  0EA0               	movlw	low _bufferRx
  1614  003140  6E0E               	movwf	strtok@s^0,c
  1615  003142  0E01               	movlw	high _bufferRx
  1616  003144  6E0F               	movwf	(strtok@s+1)^0,c
  1617  003146  0E47               	movlw	low STR_1
  1618  003148  6E10               	movwf	strtok@sep^0,c
  1619  00314A  0E08               	movlw	high STR_1
  1620  00314C  6E11               	movwf	(strtok@sep+1)^0,c
  1621  00314E  EC7D  F027         	call	_strtok	;wreg free
  1622  003152  C00E  F1EB         	movff	?_strtok,main@pch
  1623  003156  C00F  F1EC         	movff	?_strtok+1,main@pch+1
  1624  00315A                     
  1625                           ;main.c: 101:                 indice_array++;
  1626  00315A  0101               	movlb	1	; () banked
  1627  00315C  4B36               	infsnz	_indice_array& (0+255),f,b
  1628  00315E  2B37               	incf	(_indice_array+1)& (0+255),f,b
  1629  003160                     l8322:
  1630                           
  1631                           ;main.c: 98:             while(pch != ((void*)0)){
  1632  003160  0101               	movlb	1	; () banked
  1633  003162  51EB               	movf	main@pch& (0+255),w,b
  1634  003164  11EC               	iorwf	(main@pch+1)& (0+255),w,b
  1635  003166  A4D8               	btfss	status,2,c
  1636  003168  EFB8  F018         	goto	u11301
  1637  00316C  EFBA  F018         	goto	u11300
  1638  003170                     u11301:
  1639  003170  EF7E  F018         	goto	l8316
  1640  003174                     u11300:
  1641  003174                     
  1642                           ; BSR set to: 1
  1643                           ;main.c: 104:             ref = array_constantes[0];
  1644  003174  C100  F18E         	movff	_array_constantes,_ref
  1645  003178  C101  F18F         	movff	_array_constantes+1,_ref+1
  1646  00317C  C102  F190         	movff	_array_constantes+2,_ref+2
  1647  003180  C103  F191         	movff	_array_constantes+3,_ref+3
  1648                           
  1649                           ;main.c: 105:             Kp = array_constantes[1];
  1650  003184  C104  F19A         	movff	_array_constantes+4,_Kp
  1651  003188  C105  F19B         	movff	_array_constantes+5,_Kp+1
  1652  00318C  C106  F19C         	movff	_array_constantes+6,_Kp+2
  1653  003190  C107  F19D         	movff	_array_constantes+7,_Kp+3
  1654                           
  1655                           ;main.c: 106:             Kd = array_constantes[2];
  1656  003194  C108  F196         	movff	_array_constantes+8,_Kd
  1657  003198  C109  F197         	movff	_array_constantes+9,_Kd+1
  1658  00319C  C10A  F198         	movff	_array_constantes+10,_Kd+2
  1659  0031A0  C10B  F199         	movff	_array_constantes+11,_Kd+3
  1660                           
  1661                           ;main.c: 107:             Ki = array_constantes[3];
  1662  0031A4  C10C  F192         	movff	_array_constantes+12,_Ki
  1663  0031A8  C10D  F193         	movff	_array_constantes+13,_Ki+1
  1664  0031AC  C10E  F194         	movff	_array_constantes+14,_Ki+2
  1665  0031B0  C10F  F195         	movff	_array_constantes+15,_Ki+3
  1666  0031B4                     
  1667                           ; BSR set to: 1
  1668                           ;main.c: 109:             indice_array=0;
  1669  0031B4  0E00               	movlw	0
  1670  0031B6  6F37               	movwf	(_indice_array+1)& (0+255),b
  1671  0031B8  0E00               	movlw	0
  1672  0031BA  6F36               	movwf	_indice_array& (0+255),b
  1673                           
  1674                           ;main.c: 110:             indiceRx = 0;
  1675  0031BC  0E00               	movlw	0
  1676  0031BE  6F3D               	movwf	(_indiceRx+1)& (0+255),b
  1677  0031C0  0E00               	movlw	0
  1678  0031C2  6F3C               	movwf	_indiceRx& (0+255),b
  1679  0031C4                     
  1680                           ; BSR set to: 1
  1681                           ;main.c: 111:             memset(bufferRx,' ',49);
  1682  0031C4  0EA0               	movlw	low _bufferRx
  1683  0031C6  6E03               	movwf	memset@dest^0,c
  1684  0031C8  0E01               	movlw	high _bufferRx
  1685  0031CA  6E04               	movwf	(memset@dest+1)^0,c
  1686  0031CC  0E00               	movlw	0
  1687  0031CE  6E06               	movwf	(memset@c+1)^0,c
  1688  0031D0  0E20               	movlw	32
  1689  0031D2  6E05               	movwf	memset@c^0,c
  1690  0031D4  0E00               	movlw	0
  1691  0031D6  6E08               	movwf	(memset@n+1)^0,c
  1692  0031D8  0E31               	movlw	49
  1693  0031DA  6E07               	movwf	memset@n^0,c
  1694  0031DC  EC6C  F023         	call	_memset	;wreg free
  1695  0031E0                     
  1696                           ;main.c: 112:             flag_Rx_completed=0;
  1697  0031E0  0E00               	movlw	0
  1698  0031E2  0101               	movlb	1	; () banked
  1699  0031E4  6F3B               	movwf	(_flag_Rx_completed+1)& (0+255),b
  1700  0031E6  0E00               	movlw	0
  1701  0031E8  6F3A               	movwf	_flag_Rx_completed& (0+255),b
  1702  0031EA                     l8330:
  1703                           
  1704                           ; BSR set to: 1
  1705                           ;main.c: 116:         actual = 50 - getDistance();
  1706  0031EA  EC0A  F02D         	call	_getDistance	;wreg free
  1707  0031EE  0E32               	movlw	50
  1708  0031F0  0100               	movlb	0	; () banked
  1709  0031F2  6FF5               	movwf	??_main& (0+255),b
  1710  0031F4  0E00               	movlw	0
  1711  0031F6  6FF6               	movwf	(??_main+1)& (0+255),b
  1712  0031F8  5003               	movf	?_getDistance^0,w,c
  1713  0031FA  5FF5               	subwf	??_main& (0+255),f,b
  1714  0031FC  5004               	movf	(?_getDistance+1)^0,w,c
  1715  0031FE  5BF6               	subwfb	(??_main+1)& (0+255),f,b
  1716  003200  C0F5  F007         	movff	??_main,___xxtofl@val
  1717  003204  C0F6  F008         	movff	??_main+1,___xxtofl@val+1
  1718  003208  6A09               	clrf	(___xxtofl@val+2)^0,c
  1719  00320A  6A0A               	clrf	(___xxtofl@val+3)^0,c
  1720  00320C  0E00               	movlw	0
  1721  00320E  ECCE  F021         	call	___xxtofl
  1722  003212  C007  F120         	movff	?___xxtofl,_actual
  1723  003216  C008  F121         	movff	?___xxtofl+1,_actual+1
  1724  00321A  C009  F122         	movff	?___xxtofl+2,_actual+2
  1725  00321E  C00A  F123         	movff	?___xxtofl+3,_actual+3
  1726  003222                     
  1727                           ;main.c: 117:         error = ref - actual;
  1728  003222  C18E  F025         	movff	_ref,___flsub@b
  1729  003226  C18F  F026         	movff	_ref+1,___flsub@b+1
  1730  00322A  C190  F027         	movff	_ref+2,___flsub@b+2
  1731  00322E  C191  F028         	movff	_ref+3,___flsub@b+3
  1732  003232  C120  F029         	movff	_actual,___flsub@a
  1733  003236  C121  F02A         	movff	_actual+1,___flsub@a+1
  1734  00323A  C122  F02B         	movff	_actual+2,___flsub@a+2
  1735  00323E  C123  F02C         	movff	_actual+3,___flsub@a+3
  1736  003242  EC52  F02D         	call	___flsub	;wreg free
  1737  003246  C025  F128         	movff	?___flsub,_error
  1738  00324A  C026  F129         	movff	?___flsub+1,_error+1
  1739  00324E  C027  F12A         	movff	?___flsub+2,_error+2
  1740  003252  C028  F12B         	movff	?___flsub+3,_error+3
  1741  003256                     
  1742                           ;main.c: 118:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1743  003256  C196  F031         	movff	_Kd,___flmul@a
  1744  00325A  C197  F032         	movff	_Kd+1,___flmul@a+1
  1745  00325E  C198  F033         	movff	_Kd+2,___flmul@a+2
  1746  003262  C199  F034         	movff	_Kd+3,___flmul@a+3
  1747  003266  C11C  F029         	movff	_errorAnte,___flsub@a
  1748  00326A  C11D  F02A         	movff	_errorAnte+1,___flsub@a+1
  1749  00326E  C11E  F02B         	movff	_errorAnte+2,___flsub@a+2
  1750  003272  C11F  F02C         	movff	_errorAnte+3,___flsub@a+3
  1751  003276  C128  F025         	movff	_error,___flsub@b
  1752  00327A  C129  F026         	movff	_error+1,___flsub@b+1
  1753  00327E  C12A  F027         	movff	_error+2,___flsub@b+2
  1754  003282  C12B  F028         	movff	_error+3,___flsub@b+3
  1755  003286  EC52  F02D         	call	___flsub	;wreg free
  1756  00328A  C025  F02D         	movff	?___flsub,___flmul@b
  1757  00328E  C026  F02E         	movff	?___flsub+1,___flmul@b+1
  1758  003292  C027  F02F         	movff	?___flsub+2,___flmul@b+2
  1759  003296  C028  F030         	movff	?___flsub+3,___flmul@b+3
  1760  00329A  EC53  F01A         	call	___flmul	;wreg free
  1761  00329E  C02D  F1DF         	movff	?___flmul,_main$1875
  1762  0032A2  C02E  F1E0         	movff	?___flmul+1,_main$1875+1
  1763  0032A6  C02F  F1E1         	movff	?___flmul+2,_main$1875+2
  1764  0032AA  C030  F1E2         	movff	?___flmul+3,_main$1875+3
  1765  0032AE                     
  1766                           ;main.c: 118:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1767  0032AE  C1DF  F019         	movff	_main$1875,___fladd@a
  1768  0032B2  C1E0  F01A         	movff	_main$1875+1,___fladd@a+1
  1769  0032B6  C1E1  F01B         	movff	_main$1875+2,___fladd@a+2
  1770  0032BA  C1E2  F01C         	movff	_main$1875+3,___fladd@a+3
  1771  0032BE  C128  F031         	movff	_error,___flmul@a
  1772  0032C2  C129  F032         	movff	_error+1,___flmul@a+1
  1773  0032C6  C12A  F033         	movff	_error+2,___flmul@a+2
  1774  0032CA  C12B  F034         	movff	_error+3,___flmul@a+3
  1775  0032CE  C19A  F02D         	movff	_Kp,___flmul@b
  1776  0032D2  C19B  F02E         	movff	_Kp+1,___flmul@b+1
  1777  0032D6  C19C  F02F         	movff	_Kp+2,___flmul@b+2
  1778  0032DA  C19D  F030         	movff	_Kp+3,___flmul@b+3
  1779  0032DE  EC53  F01A         	call	___flmul	;wreg free
  1780  0032E2  C02D  F015         	movff	?___flmul,___fladd@b
  1781  0032E6  C02E  F016         	movff	?___flmul+1,___fladd@b+1
  1782  0032EA  C02F  F017         	movff	?___flmul+2,___fladd@b+2
  1783  0032EE  C030  F018         	movff	?___flmul+3,___fladd@b+3
  1784  0032F2  ECD3  F015         	call	___fladd	;wreg free
  1785  0032F6  C015  F1E3         	movff	?___fladd,_main$1876
  1786  0032FA  C016  F1E4         	movff	?___fladd+1,_main$1876+1
  1787  0032FE  C017  F1E5         	movff	?___fladd+2,_main$1876+2
  1788  003302  C018  F1E6         	movff	?___fladd+3,_main$1876+3
  1789  003306                     
  1790                           ;main.c: 118:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1791  003306  C128  F031         	movff	_error,___flmul@a
  1792  00330A  C129  F032         	movff	_error+1,___flmul@a+1
  1793  00330E  C12A  F033         	movff	_error+2,___flmul@a+2
  1794  003312  C12B  F034         	movff	_error+3,___flmul@a+3
  1795  003316  C192  F02D         	movff	_Ki,___flmul@b
  1796  00331A  C193  F02E         	movff	_Ki+1,___flmul@b+1
  1797  00331E  C194  F02F         	movff	_Ki+2,___flmul@b+2
  1798  003322  C195  F030         	movff	_Ki+3,___flmul@b+3
  1799  003326  EC53  F01A         	call	___flmul	;wreg free
  1800  00332A  C02D  F019         	movff	?___flmul,___fladd@a
  1801  00332E  C02E  F01A         	movff	?___flmul+1,___fladd@a+1
  1802  003332  C02F  F01B         	movff	?___flmul+2,___fladd@a+2
  1803  003336  C030  F01C         	movff	?___flmul+3,___fladd@a+3
  1804  00333A  C1E3  F015         	movff	_main$1876,___fladd@b
  1805  00333E  C1E4  F016         	movff	_main$1876+1,___fladd@b+1
  1806  003342  C1E5  F017         	movff	_main$1876+2,___fladd@b+2
  1807  003346  C1E6  F018         	movff	_main$1876+3,___fladd@b+3
  1808  00334A  ECD3  F015         	call	___fladd	;wreg free
  1809  00334E  C015  F1E7         	movff	?___fladd,_main$1877
  1810  003352  C016  F1E8         	movff	?___fladd+1,_main$1877+1
  1811  003356  C017  F1E9         	movff	?___fladd+2,_main$1877+2
  1812  00335A  C018  F1EA         	movff	?___fladd+3,_main$1877+3
  1813  00335E                     
  1814                           ;main.c: 118:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1815  00335E  C124  F015         	movff	_suma,___fladd@b
  1816  003362  C125  F016         	movff	_suma+1,___fladd@b+1
  1817  003366  C126  F017         	movff	_suma+2,___fladd@b+2
  1818  00336A  C127  F018         	movff	_suma+3,___fladd@b+3
  1819  00336E  C1E7  F019         	movff	_main$1877,___fladd@a
  1820  003372  C1E8  F01A         	movff	_main$1877+1,___fladd@a+1
  1821  003376  C1E9  F01B         	movff	_main$1877+2,___fladd@a+2
  1822  00337A  C1EA  F01C         	movff	_main$1877+3,___fladd@a+3
  1823  00337E  ECD3  F015         	call	___fladd	;wreg free
  1824  003382  C015  F124         	movff	?___fladd,_suma
  1825  003386  C016  F125         	movff	?___fladd+1,_suma+1
  1826  00338A  C017  F126         	movff	?___fladd+2,_suma+2
  1827  00338E  C018  F127         	movff	?___fladd+3,_suma+3
  1828  003392                     
  1829                           ;main.c: 119:         if(suma>100){
  1830  003392  0E00               	movlw	0
  1831  003394  6E46               	movwf	___flge@ff1^0,c
  1832  003396  0E00               	movlw	0
  1833  003398  6E47               	movwf	(___flge@ff1+1)^0,c
  1834  00339A  0EC8               	movlw	200
  1835  00339C  6E48               	movwf	(___flge@ff1+2)^0,c
  1836  00339E  0E42               	movlw	66
  1837  0033A0  6E49               	movwf	(___flge@ff1+3)^0,c
  1838  0033A2  C124  F04A         	movff	_suma,___flge@ff2
  1839  0033A6  C125  F04B         	movff	_suma+1,___flge@ff2+1
  1840  0033AA  C126  F04C         	movff	_suma+2,___flge@ff2+2
  1841  0033AE  C127  F04D         	movff	_suma+3,___flge@ff2+3
  1842  0033B2  EC08  F026         	call	___flge	;wreg free
  1843  0033B6  B0D8               	btfsc	status,0,c
  1844  0033B8  EFE0  F019         	goto	u11311
  1845  0033BC  EFE2  F019         	goto	u11310
  1846  0033C0                     u11311:
  1847  0033C0  EFED  F019         	goto	l8346
  1848  0033C4                     u11310:
  1849  0033C4                     
  1850                           ;main.c: 120:             suma=100;
  1851  0033C4  0E00               	movlw	0
  1852  0033C6  0101               	movlb	1	; () banked
  1853  0033C8  6F24               	movwf	_suma& (0+255),b
  1854  0033CA  0E00               	movlw	0
  1855  0033CC  6F25               	movwf	(_suma+1)& (0+255),b
  1856  0033CE  0EC8               	movlw	200
  1857  0033D0  6F26               	movwf	(_suma+2)& (0+255),b
  1858  0033D2  0E42               	movlw	66
  1859  0033D4  6F27               	movwf	(_suma+3)& (0+255),b
  1860                           
  1861                           ;main.c: 121:         }
  1862  0033D6  EFFD  F019         	goto	l8350
  1863  0033DA                     l8346:
  1864  0033DA  0101               	movlb	1	; () banked
  1865  0033DC  BF27               	btfsc	(_suma+3)& (0+255),7,b
  1866  0033DE  EFF5  F019         	goto	u11320
  1867  0033E2  EFF3  F019         	goto	u11321
  1868  0033E6                     u11321:
  1869  0033E6  EFFD  F019         	goto	l8350
  1870  0033EA                     u11320:
  1871  0033EA                     
  1872                           ; BSR set to: 1
  1873                           ;main.c: 123:             suma = 0;
  1874  0033EA  0E00               	movlw	0
  1875  0033EC  6F24               	movwf	_suma& (0+255),b
  1876  0033EE  0E00               	movlw	0
  1877  0033F0  6F25               	movwf	(_suma+1)& (0+255),b
  1878  0033F2  0E00               	movlw	0
  1879  0033F4  6F26               	movwf	(_suma+2)& (0+255),b
  1880  0033F6  0E00               	movlw	0
  1881  0033F8  6F27               	movwf	(_suma+3)& (0+255),b
  1882  0033FA                     l8350:
  1883                           
  1884                           ; BSR set to: 1
  1885                           ;main.c: 125:         PWM1_Set_Duty( (uint8_t) (suma));
  1886  0033FA  C124  F052         	movff	_suma,___fltol@f1
  1887  0033FE  C125  F053         	movff	_suma+1,___fltol@f1+1
  1888  003402  C126  F054         	movff	_suma+2,___fltol@f1+2
  1889  003406  C127  F055         	movff	_suma+3,___fltol@f1+3
  1890  00340A  EC84  F025         	call	___fltol	;wreg free
  1891  00340E  5052               	movf	?___fltol^0,w,c
  1892  003410  EC81  F029         	call	_PWM1_Set_Duty
  1893  003414                     
  1894                           ;main.c: 127:         sprintf(strUART,"*%0.1f/%03d/%0.2f/%0.2f/%0.2f#\r\n",actual,duty,K
      +                          p,Kd,Ki);
  1895  003414  0E00               	movlw	low _strUART
  1896  003416  0100               	movlb	0	; () banked
  1897  003418  6FDF               	movwf	sprintf@s& (0+255),b
  1898  00341A  0E02               	movlw	high _strUART
  1899  00341C  6FE0               	movwf	(sprintf@s+1)& (0+255),b
  1900  00341E  0E01               	movlw	low STR_3
  1901  003420  6FE1               	movwf	sprintf@fmt& (0+255),b
  1902  003422  0E08               	movlw	high STR_3
  1903  003424  6FE2               	movwf	(sprintf@fmt+1)& (0+255),b
  1904  003426  C120  F0E3         	movff	_actual,?_sprintf+4
  1905  00342A  C121  F0E4         	movff	_actual+1,?_sprintf+5
  1906  00342E  C122  F0E5         	movff	_actual+2,?_sprintf+6
  1907  003432  C123  F0E6         	movff	_actual+3,?_sprintf+7
  1908  003436  0E00               	movlw	0
  1909  003438  6FE8               	movwf	(?_sprintf+9)& (0+255),b
  1910  00343A  0E46               	movlw	70
  1911  00343C  6FE7               	movwf	(?_sprintf+8)& (0+255),b
  1912  00343E  C19A  F0E9         	movff	_Kp,?_sprintf+10
  1913  003442  C19B  F0EA         	movff	_Kp+1,?_sprintf+11
  1914  003446  C19C  F0EB         	movff	_Kp+2,?_sprintf+12
  1915  00344A  C19D  F0EC         	movff	_Kp+3,?_sprintf+13
  1916  00344E  C196  F0ED         	movff	_Kd,?_sprintf+14
  1917  003452  C197  F0EE         	movff	_Kd+1,?_sprintf+15
  1918  003456  C198  F0EF         	movff	_Kd+2,?_sprintf+16
  1919  00345A  C199  F0F0         	movff	_Kd+3,?_sprintf+17
  1920  00345E  C192  F0F1         	movff	_Ki,?_sprintf+18
  1921  003462  C193  F0F2         	movff	_Ki+1,?_sprintf+19
  1922  003466  C194  F0F3         	movff	_Ki+2,?_sprintf+20
  1923  00346A  C195  F0F4         	movff	_Ki+3,?_sprintf+21
  1924  00346E  EC8B  F02C         	call	_sprintf	;wreg free
  1925  003472                     
  1926                           ;main.c: 128:         UART_Write_Text(strUART);
  1927  003472  0E00               	movlw	low _strUART
  1928  003474  6E04               	movwf	UART_Write_Text@text^0,c
  1929  003476  0E02               	movlw	high _strUART
  1930  003478  6E05               	movwf	(UART_Write_Text@text+1)^0,c
  1931  00347A  EC9F  F02E         	call	_UART_Write_Text	;wreg free
  1932  00347E                     
  1933                           ;main.c: 129:         _delay((unsigned long)((1)*(20000000UL/4000.0)));
  1934  00347E  0E07               	movlw	7
  1935  003480  0100               	movlb	0	; () banked
  1936  003482  6FF5               	movwf	??_main& (0+255),b
  1937  003484  0E7D               	movlw	125
  1938  003486                     u11337:
  1939  003486  2EE8               	decfsz	wreg,f,c
  1940  003488  D7FE               	bra	u11337
  1941  00348A  2FF5               	decfsz	??_main& (0+255),f,b
  1942  00348C  D7FC               	bra	u11337
  1943  00348E                     
  1944                           ;main.c: 130:         errorAnte = error;
  1945  00348E  C128  F11C         	movff	_error,_errorAnte
  1946  003492  C129  F11D         	movff	_error+1,_errorAnte+1
  1947  003496  C12A  F11E         	movff	_error+2,_errorAnte+2
  1948  00349A  C12B  F11F         	movff	_error+3,_errorAnte+3
  1949  00349E  EF64  F018         	goto	l8312
  1950  0034A2  EF07  F000         	goto	start
  1951  0034A6                     __end_of_main:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _strtok *****************
  1955 ;; Defined at:
  1956 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strtok.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  s               2   13[COMRAM] PTR unsigned char 
  1959 ;;		 -> NULL(0), bufferRx(50), 
  1960 ;;  sep             2   15[COMRAM] PTR const unsigned char 
  1961 ;;		 -> STR_2(3), STR_1(3), 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  2   13[COMRAM] PTR unsigned char 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1973 ;;      Params:         4       0       0       0       0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1976 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1977 ;;Total ram usage:        4 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 4
  1980 ;; This function calls:
  1981 ;;		_strcspn
  1982 ;;		_strspn
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text1
  1989  004EFA                     __ptext1:
  1990                           	callstack 0
  1991  004EFA                     _strtok:
  1992                           	callstack 26
  1993  004EFA  500E               	movf	strtok@s^0,w,c
  1994  004EFC  100F               	iorwf	(strtok@s+1)^0,w,c
  1995  004EFE  A4D8               	btfss	status,2,c
  1996  004F00  EF84  F027         	goto	u7661
  1997  004F04  EF86  F027         	goto	u7660
  1998  004F08                     u7661:
  1999  004F08  EF99  F027         	goto	l6026
  2000  004F0C                     u7660:
  2001  004F0C  C130  F00E         	movff	strtok@p,strtok@s
  2002  004F10  C131  F00F         	movff	strtok@p+1,strtok@s+1
  2003  004F14  500E               	movf	strtok@s^0,w,c
  2004  004F16  100F               	iorwf	(strtok@s+1)^0,w,c
  2005  004F18  A4D8               	btfss	status,2,c
  2006  004F1A  EF91  F027         	goto	u7671
  2007  004F1E  EF93  F027         	goto	u7670
  2008  004F22                     u7671:
  2009  004F22  EF99  F027         	goto	l6026
  2010  004F26                     u7670:
  2011  004F26  0E00               	movlw	0
  2012  004F28  6E0E               	movwf	?_strtok^0,c
  2013  004F2A  0E00               	movlw	0
  2014  004F2C  6E0F               	movwf	(?_strtok+1)^0,c
  2015  004F2E  EFED  F027         	goto	l1439
  2016  004F32                     l6026:
  2017  004F32  C00E  F007         	movff	strtok@s,strspn@s
  2018  004F36  C00F  F008         	movff	strtok@s+1,strspn@s+1
  2019  004F3A  C010  F009         	movff	strtok@sep,strspn@c
  2020  004F3E  C011  F00A         	movff	strtok@sep+1,strspn@c+1
  2021  004F42  ECF7  F02B         	call	_strspn	;wreg free
  2022  004F46  5007               	movf	?_strspn^0,w,c
  2023  004F48  260E               	addwf	strtok@s^0,f,c
  2024  004F4A  5008               	movf	(?_strspn+1)^0,w,c
  2025  004F4C  220F               	addwfc	(strtok@s+1)^0,f,c
  2026  004F4E  C00E  FFD9         	movff	strtok@s,fsr2l
  2027  004F52  C00F  FFDA         	movff	strtok@s+1,fsr2h
  2028  004F56  50DF               	movf	indf2,w,c
  2029  004F58  A4D8               	btfss	status,2,c
  2030  004F5A  EFB1  F027         	goto	u7681
  2031  004F5E  EFB3  F027         	goto	u7680
  2032  004F62                     u7681:
  2033  004F62  EFBE  F027         	goto	l6034
  2034  004F66                     u7680:
  2035  004F66  0E00               	movlw	0
  2036  004F68  0101               	movlb	1	; () banked
  2037  004F6A  6F30               	movwf	strtok@p& (0+255),b
  2038  004F6C  0E00               	movlw	0
  2039  004F6E  6F31               	movwf	(strtok@p+1)& (0+255),b
  2040  004F70  C130  F00E         	movff	strtok@p,?_strtok
  2041  004F74  C131  F00F         	movff	strtok@p+1,?_strtok+1
  2042  004F78  EFED  F027         	goto	l1439
  2043  004F7C                     l6034:
  2044  004F7C  C00E  F007         	movff	strtok@s,strcspn@s
  2045  004F80  C00F  F008         	movff	strtok@s+1,strcspn@s+1
  2046  004F84  C010  F009         	movff	strtok@sep,strcspn@c
  2047  004F88  C011  F00A         	movff	strtok@sep+1,strcspn@c+1
  2048  004F8C  EC2A  F02C         	call	_strcspn	;wreg free
  2049  004F90  5007               	movf	?_strcspn^0,w,c
  2050  004F92  240E               	addwf	strtok@s^0,w,c
  2051  004F94  0101               	movlb	1	; () banked
  2052  004F96  6F30               	movwf	strtok@p& (0+255),b
  2053  004F98  5008               	movf	(?_strcspn+1)^0,w,c
  2054  004F9A  200F               	addwfc	(strtok@s+1)^0,w,c
  2055  004F9C  6F31               	movwf	(strtok@p+1)& (0+255),b
  2056  004F9E                     
  2057                           ; BSR set to: 1
  2058  004F9E  C130  FFD9         	movff	strtok@p,fsr2l
  2059  004FA2  C131  FFDA         	movff	strtok@p+1,fsr2h
  2060  004FA6  50DF               	movf	indf2,w,c
  2061  004FA8  B4D8               	btfsc	status,2,c
  2062  004FAA  EFD9  F027         	goto	u7691
  2063  004FAE  EFDB  F027         	goto	u7690
  2064  004FB2                     u7691:
  2065  004FB2  EFE5  F027         	goto	l6042
  2066  004FB6                     u7690:
  2067  004FB6                     
  2068                           ; BSR set to: 1
  2069  004FB6  C130  FFD9         	movff	strtok@p,fsr2l
  2070  004FBA  C131  FFDA         	movff	strtok@p+1,fsr2h
  2071  004FBE  0E00               	movlw	0
  2072  004FC0  6EDF               	movwf	indf2,c
  2073  004FC2                     
  2074                           ; BSR set to: 1
  2075  004FC2  4B30               	infsnz	strtok@p& (0+255),f,b
  2076  004FC4  2B31               	incf	(strtok@p+1)& (0+255),f,b
  2077  004FC6  EFE9  F027         	goto	l1442
  2078  004FCA                     l6042:
  2079                           
  2080                           ; BSR set to: 1
  2081  004FCA  0E00               	movlw	0
  2082  004FCC  6F30               	movwf	strtok@p& (0+255),b
  2083  004FCE  0E00               	movlw	0
  2084  004FD0  6F31               	movwf	(strtok@p+1)& (0+255),b
  2085  004FD2                     l1442:
  2086                           
  2087                           ; BSR set to: 1
  2088  004FD2  C00E  F00E         	movff	strtok@s,?_strtok
  2089  004FD6  C00F  F00F         	movff	strtok@s+1,?_strtok+1
  2090  004FDA                     l1439:
  2091  004FDA  0012               	return		;funcret
  2092  004FDC                     __end_of_strtok:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _strspn *****************
  2096 ;; Defined at:
  2097 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strspn.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  s               2    6[COMRAM] PTR const unsigned char 
  2100 ;;		 -> NULL(0), bufferRx(50), 
  2101 ;;  c               2    8[COMRAM] PTR const unsigned char 
  2102 ;;		 -> STR_2(3), STR_1(3), 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  i               2   11[COMRAM] unsigned int 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  2    6[COMRAM] unsigned int 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2114 ;;      Params:         4       0       0       0       0       0       0       0       0
  2115 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2116 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2117 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2118 ;;Total ram usage:        7 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 3
  2121 ;; This function calls:
  2122 ;;		_strchr
  2123 ;; This function is called by:
  2124 ;;		_strtok
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text2
  2129  0057EE                     __ptext2:
  2130                           	callstack 0
  2131  0057EE                     _strspn:
  2132                           	callstack 26
  2133  0057EE  0E00               	movlw	0
  2134  0057F0  6E0D               	movwf	(strspn@i+1)^0,c
  2135  0057F2  0E00               	movlw	0
  2136  0057F4  6E0C               	movwf	strspn@i^0,c
  2137  0057F6  EF01  F02C         	goto	l5928
  2138  0057FA                     l5926:
  2139  0057FA  4A07               	infsnz	strspn@s^0,f,c
  2140  0057FC  2A08               	incf	(strspn@s+1)^0,f,c
  2141  0057FE  4A0C               	infsnz	strspn@i^0,f,c
  2142  005800  2A0D               	incf	(strspn@i+1)^0,f,c
  2143  005802                     l5928:
  2144  005802  C007  FFD9         	movff	strspn@s,fsr2l
  2145  005806  C008  FFDA         	movff	strspn@s+1,fsr2h
  2146  00580A  50DF               	movf	indf2,w,c
  2147  00580C  B4D8               	btfsc	status,2,c
  2148  00580E  EF0B  F02C         	goto	u7561
  2149  005812  EF0D  F02C         	goto	u7560
  2150  005816                     u7561:
  2151  005816  EF25  F02C         	goto	l1467
  2152  00581A                     u7560:
  2153  00581A  C009  F003         	movff	strspn@c,strchr@s
  2154  00581E  C00A  F004         	movff	strspn@c+1,strchr@s+1
  2155  005822  C007  FFD9         	movff	strspn@s,fsr2l
  2156  005826  C008  FFDA         	movff	strspn@s+1,fsr2h
  2157  00582A  50DF               	movf	indf2,w,c
  2158  00582C  6E0B               	movwf	??_strspn^0,c
  2159  00582E  500B               	movf	??_strspn^0,w,c
  2160  005830  6E05               	movwf	strchr@c^0,c
  2161  005832  6A06               	clrf	(strchr@c+1)^0,c
  2162  005834  ECB8  F02C         	call	_strchr	;wreg free
  2163  005838  5003               	movf	?_strchr^0,w,c
  2164  00583A  1004               	iorwf	(?_strchr+1)^0,w,c
  2165  00583C  A4D8               	btfss	status,2,c
  2166  00583E  EF23  F02C         	goto	u7571
  2167  005842  EF25  F02C         	goto	u7570
  2168  005846                     u7571:
  2169  005846  EFFD  F02B         	goto	l5926
  2170  00584A                     u7570:
  2171  00584A                     l1467:
  2172  00584A  C00C  F007         	movff	strspn@i,?_strspn
  2173  00584E  C00D  F008         	movff	strspn@i+1,?_strspn+1
  2174  005852  0012               	return		;funcret
  2175  005854                     __end_of_strspn:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _strcspn *****************
  2179 ;; Defined at:
  2180 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcspn.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  s               2    6[COMRAM] PTR const unsigned char 
  2183 ;;		 -> NULL(0), bufferRx(50), 
  2184 ;;  c               2    8[COMRAM] PTR const unsigned char 
  2185 ;;		 -> STR_2(3), STR_1(3), 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  i               2   11[COMRAM] unsigned int 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  2    6[COMRAM] unsigned int 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2197 ;;      Params:         4       0       0       0       0       0       0       0       0
  2198 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2199 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2200 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2201 ;;Total ram usage:        7 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; Hardware stack levels required when called: 3
  2204 ;; This function calls:
  2205 ;;		_strchr
  2206 ;; This function is called by:
  2207 ;;		_strtok
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text3
  2212  005854                     __ptext3:
  2213                           	callstack 0
  2214  005854                     _strcspn:
  2215                           	callstack 26
  2216  005854  0E00               	movlw	0
  2217  005856  6E0D               	movwf	(strcspn@i+1)^0,c
  2218  005858  0E00               	movlw	0
  2219  00585A  6E0C               	movwf	strcspn@i^0,c
  2220  00585C  EF34  F02C         	goto	l5936
  2221  005860                     l5934:
  2222  005860  4A07               	infsnz	strcspn@s^0,f,c
  2223  005862  2A08               	incf	(strcspn@s+1)^0,f,c
  2224  005864  4A0C               	infsnz	strcspn@i^0,f,c
  2225  005866  2A0D               	incf	(strcspn@i+1)^0,f,c
  2226  005868                     l5936:
  2227  005868  C007  FFD9         	movff	strcspn@s,fsr2l
  2228  00586C  C008  FFDA         	movff	strcspn@s+1,fsr2h
  2229  005870  50DF               	movf	indf2,w,c
  2230  005872  B4D8               	btfsc	status,2,c
  2231  005874  EF3E  F02C         	goto	u7581
  2232  005878  EF40  F02C         	goto	u7580
  2233  00587C                     u7581:
  2234  00587C  EF58  F02C         	goto	l1451
  2235  005880                     u7580:
  2236  005880  C009  F003         	movff	strcspn@c,strchr@s
  2237  005884  C00A  F004         	movff	strcspn@c+1,strchr@s+1
  2238  005888  C007  FFD9         	movff	strcspn@s,fsr2l
  2239  00588C  C008  FFDA         	movff	strcspn@s+1,fsr2h
  2240  005890  50DF               	movf	indf2,w,c
  2241  005892  6E0B               	movwf	??_strcspn^0,c
  2242  005894  500B               	movf	??_strcspn^0,w,c
  2243  005896  6E05               	movwf	strchr@c^0,c
  2244  005898  6A06               	clrf	(strchr@c+1)^0,c
  2245  00589A  ECB8  F02C         	call	_strchr	;wreg free
  2246  00589E  5003               	movf	?_strchr^0,w,c
  2247  0058A0  1004               	iorwf	(?_strchr+1)^0,w,c
  2248  0058A2  B4D8               	btfsc	status,2,c
  2249  0058A4  EF56  F02C         	goto	u7591
  2250  0058A8  EF58  F02C         	goto	u7590
  2251  0058AC                     u7591:
  2252  0058AC  EF30  F02C         	goto	l5934
  2253  0058B0                     u7590:
  2254  0058B0                     l1451:
  2255  0058B0  C00C  F007         	movff	strcspn@i,?_strcspn
  2256  0058B4  C00D  F008         	movff	strcspn@i+1,?_strcspn+1
  2257  0058B8  0012               	return		;funcret
  2258  0058BA                     __end_of_strcspn:
  2259                           	callstack 0
  2260                           
  2261 ;; *************** function _strchr *****************
  2262 ;; Defined at:
  2263 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strchr.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  s               2    2[COMRAM] PTR const unsigned char 
  2266 ;;		 -> STR_2(3), STR_1(3), 
  2267 ;;  c               2    4[COMRAM] int 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  2    2[COMRAM] PTR unsigned char 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2279 ;;      Params:         4       0       0       0       0       0       0       0       0
  2280 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2282 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2283 ;;Total ram usage:        4 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 2
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_strcspn
  2290 ;;		_strspn
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text4
  2295  005970                     __ptext4:
  2296                           	callstack 0
  2297  005970                     _strchr:
  2298                           	callstack 26
  2299  005970                     l1455:
  2300  005970  C003  FFF6         	movff	strchr@s,tblptrl
  2301  005974  C004  FFF7         	movff	strchr@s+1,tblptrh
  2302  005978                     	if	0	;tblptru may be non-zero
  2303  005978                     	endif
  2304  005978                     	if	0	;tblptru may be non-zero
  2305  005978                     	endif
  2306  005978  0008               	tblrd		*
  2307  00597A  50F5               	movf	tablat,w,c
  2308  00597C  1805               	xorwf	strchr@c^0,w,c
  2309  00597E  A4D8               	btfss	status,2,c
  2310  005980  EFC4  F02C         	goto	u6591
  2311  005984  EFC6  F02C         	goto	u6590
  2312  005988                     u6591:
  2313  005988  EFCC  F02C         	goto	l5478
  2314  00598C                     u6590:
  2315  00598C  C003  F003         	movff	strchr@s,?_strchr
  2316  005990  C004  F004         	movff	strchr@s+1,?_strchr+1
  2317  005994  EFE0  F02C         	goto	l1457
  2318  005998                     l5478:
  2319  005998  C003  FFF6         	movff	strchr@s,tblptrl
  2320  00599C  C004  FFF7         	movff	strchr@s+1,tblptrh
  2321  0059A0  4A03               	infsnz	strchr@s^0,f,c
  2322  0059A2  2A04               	incf	(strchr@s+1)^0,f,c
  2323  0059A4                     	if	0	;tblptru may be non-zero
  2324  0059A4                     	endif
  2325  0059A4                     	if	0	;tblptru may be non-zero
  2326  0059A4                     	endif
  2327  0059A4  0008               	tblrd		*
  2328  0059A6  50F5               	movf	tablat,w,c
  2329  0059A8  0900               	iorlw	0
  2330  0059AA  A4D8               	btfss	status,2,c
  2331  0059AC  EFDA  F02C         	goto	u6601
  2332  0059B0  EFDC  F02C         	goto	u6600
  2333  0059B4                     u6601:
  2334  0059B4  EFB8  F02C         	goto	l1455
  2335  0059B8                     u6600:
  2336  0059B8  0E00               	movlw	0
  2337  0059BA  6E03               	movwf	?_strchr^0,c
  2338  0059BC  0E00               	movlw	0
  2339  0059BE  6E04               	movwf	(?_strchr+1)^0,c
  2340  0059C0                     l1457:
  2341  0059C0  0012               	return		;funcret
  2342  0059C2                     __end_of_strchr:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _sprintf *****************
  2346 ;; Defined at:
  2347 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  s               2  127[BANK0 ] PTR unsigned char 
  2350 ;;		 -> strUART(50), 
  2351 ;;  fmt             2  129[BANK0 ] PTR const unsigned char 
  2352 ;;		 -> STR_3(33), 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  f              11    2[BANK1 ] struct _IO_FILE
  2355 ;;  ap              2    0[BANK1 ] PTR void [1]
  2356 ;;		 -> ?_sprintf(2), 
  2357 ;;  ret             2    0        int 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  2  127[BANK0 ] int 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2367 ;;      Params:         0      22       0       0       0       0       0       0       0
  2368 ;;      Locals:         0       0      13       0       0       0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2370 ;;      Totals:         0      22      13       0       0       0       0       0       0
  2371 ;;Total ram usage:       35 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 9
  2374 ;; This function calls:
  2375 ;;		_vfprintf
  2376 ;; This function is called by:
  2377 ;;		_main
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text5
  2382  005916                     __ptext5:
  2383                           	callstack 0
  2384  005916                     _sprintf:
  2385                           	callstack 21
  2386  005916  0EE3               	movlw	low (?_sprintf+4)
  2387  005918  0101               	movlb	1	; () banked
  2388  00591A  6FD2               	movwf	sprintf@ap& (0+255),b
  2389  00591C  0E00               	movlw	high (?_sprintf+4)
  2390  00591E  6FD3               	movwf	(sprintf@ap+1)& (0+255),b
  2391  005920  C0DF  F1D4         	movff	sprintf@s,sprintf@f
  2392  005924  C0E0  F1D5         	movff	sprintf@s+1,sprintf@f+1
  2393  005928                     
  2394                           ; BSR set to: 1
  2395  005928  0E00               	movlw	0
  2396  00592A  6FD8               	movwf	(sprintf@f+4)& (0+255),b
  2397  00592C  0E00               	movlw	0
  2398  00592E  6FD7               	movwf	(sprintf@f+3)& (0+255),b
  2399  005930                     
  2400                           ; BSR set to: 1
  2401  005930  0E00               	movlw	0
  2402  005932  6FDE               	movwf	(sprintf@f+10)& (0+255),b
  2403  005934  0E00               	movlw	0
  2404  005936  6FDD               	movwf	(sprintf@f+9)& (0+255),b
  2405  005938                     
  2406                           ; BSR set to: 1
  2407  005938  0ED4               	movlw	low sprintf@f
  2408  00593A  0100               	movlb	0	; () banked
  2409  00593C  6FD7               	movwf	vfprintf@fp& (0+255),b
  2410  00593E  0E01               	movlw	high sprintf@f
  2411  005940  6FD8               	movwf	(vfprintf@fp+1)& (0+255),b
  2412  005942  C0E1  F0D9         	movff	sprintf@fmt,vfprintf@fmt
  2413  005946  C0E2  F0DA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2414  00594A  0ED2               	movlw	low sprintf@ap
  2415  00594C  6FDB               	movwf	vfprintf@ap& (0+255),b
  2416  00594E  0E01               	movlw	high sprintf@ap
  2417  005950  6FDC               	movwf	(vfprintf@ap+1)& (0+255),b
  2418  005952  EC5A  F02B         	call	_vfprintf	;wreg free
  2419  005956  0101               	movlb	1	; () banked
  2420  005958  51D7               	movf	(sprintf@f+3)& (0+255),w,b
  2421  00595A  0100               	movlb	0	; () banked
  2422  00595C  25DF               	addwf	sprintf@s& (0+255),w,b
  2423  00595E  6ED9               	movwf	fsr2l,c
  2424  005960  0101               	movlb	1	; () banked
  2425  005962  51D8               	movf	(sprintf@f+4)& (0+255),w,b
  2426  005964  0100               	movlb	0	; () banked
  2427  005966  21E0               	addwfc	(sprintf@s+1)& (0+255),w,b
  2428  005968  6EDA               	movwf	fsr2h,c
  2429  00596A  0E00               	movlw	0
  2430  00596C  6EDF               	movwf	indf2,c
  2431  00596E                     
  2432                           ; BSR set to: 0
  2433  00596E  0012               	return		;funcret
  2434  005970                     __end_of_sprintf:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _vfprintf *****************
  2438 ;; Defined at:
  2439 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  fp              2  119[BANK0 ] PTR struct _IO_FILE
  2442 ;;		 -> sprintf@f(11), 
  2443 ;;  fmt             2  121[BANK0 ] PTR const unsigned char 
  2444 ;;		 -> STR_3(33), 
  2445 ;;  ap              2  123[BANK0 ] PTR PTR void 
  2446 ;;		 -> sprintf@ap(2), 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  cfmt            2  125[BANK0 ] PTR unsigned char 
  2449 ;;		 -> STR_3(33), 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  2  119[BANK0 ] int 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2459 ;;      Params:         0       6       0       0       0       0       0       0       0
  2460 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2462 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2463 ;;Total ram usage:        8 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; Hardware stack levels required when called: 8
  2466 ;; This function calls:
  2467 ;;		_vfpfcnvrt
  2468 ;; This function is called by:
  2469 ;;		_sprintf
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text6
  2474  0056B4                     __ptext6:
  2475                           	callstack 0
  2476  0056B4                     _vfprintf:
  2477                           	callstack 21
  2478  0056B4                     
  2479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2480  0056B4  C0D9  F0DD         	movff	vfprintf@fmt,vfprintf@cfmt
  2481  0056B8  C0DA  F0DE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2482  0056BC                     
  2483                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2484  0056BC  0E00               	movlw	0
  2485  0056BE  0101               	movlb	1	; () banked
  2486  0056C0  6F33               	movwf	(_nout+1)& (0+255),b
  2487  0056C2  0E00               	movlw	0
  2488  0056C4  6F32               	movwf	_nout& (0+255),b
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2491  0056C6  EF7C  F02B         	goto	l7818
  2492  0056CA                     l7816:
  2493                           
  2494                           ; BSR set to: 1
  2495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2496  0056CA  C0D7  F0BB         	movff	vfprintf@fp,vfpfcnvrt@fp
  2497  0056CE  C0D8  F0BC         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2498  0056D2  0EDD               	movlw	low vfprintf@cfmt
  2499  0056D4  0100               	movlb	0	; () banked
  2500  0056D6  6FBD               	movwf	vfpfcnvrt@fmt& (0+255),b
  2501  0056D8  0E00               	movlw	high vfprintf@cfmt
  2502  0056DA  6FBE               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2503  0056DC  C0DB  F0BF         	movff	vfprintf@ap,vfpfcnvrt@ap
  2504  0056E0  C0DC  F0C0         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2505  0056E4  EC80  F012         	call	_vfpfcnvrt	;wreg free
  2506  0056E8  0100               	movlb	0	; () banked
  2507  0056EA  51BB               	movf	?_vfpfcnvrt& (0+255),w,b
  2508  0056EC  0101               	movlb	1	; () banked
  2509  0056EE  2732               	addwf	_nout& (0+255),f,b
  2510  0056F0  0100               	movlb	0	; () banked
  2511  0056F2  51BC               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2512  0056F4  0101               	movlb	1	; () banked
  2513  0056F6  2333               	addwfc	(_nout+1)& (0+255),f,b
  2514  0056F8                     l7818:
  2515                           
  2516                           ; BSR set to: 1
  2517                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2518  0056F8  C0DD  FFF6         	movff	vfprintf@cfmt,tblptrl
  2519  0056FC  C0DE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2520  005700                     	if	0	;tblptru may be non-zero
  2521  005700                     	endif
  2522  005700                     	if	0	;tblptru may be non-zero
  2523  005700                     	endif
  2524  005700  0008               	tblrd		*
  2525  005702  50F5               	movf	tablat,w,c
  2526  005704  0900               	iorlw	0
  2527  005706  A4D8               	btfss	status,2,c
  2528  005708  EF88  F02B         	goto	u10371
  2529  00570C  EF8A  F02B         	goto	u10370
  2530  005710                     u10371:
  2531  005710  EF65  F02B         	goto	l7816
  2532  005714                     u10370:
  2533  005714                     
  2534                           ; BSR set to: 1
  2535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2536  005714  C132  F0D7         	movff	_nout,?_vfprintf
  2537  005718  C133  F0D8         	movff	_nout+1,?_vfprintf+1
  2538  00571C                     
  2539                           ; BSR set to: 1
  2540  00571C  0012               	return		;funcret
  2541  00571E                     __end_of_vfprintf:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _vfpfcnvrt *****************
  2545 ;; Defined at:
  2546 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  fp              2   91[BANK0 ] PTR struct _IO_FILE
  2549 ;;		 -> sprintf@f(11), 
  2550 ;;  fmt             2   93[BANK0 ] PTR PTR unsigned char 
  2551 ;;		 -> vfprintf@cfmt(2), 
  2552 ;;  ap              2   95[BANK0 ] PTR PTR void 
  2553 ;;		 -> sprintf@ap(2), 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  ll              8  101[BANK0 ] long long 
  2556 ;;  llu             8    0        unsigned long long 
  2557 ;;  f               4  111[BANK0 ] unsigned long long 
  2558 ;;  ct              3  115[BANK0 ] unsigned char [3]
  2559 ;;  vp              3    0        PTR void 
  2560 ;;  cp              3    0        PTR unsigned char 
  2561 ;;  done            2  109[BANK0 ] int 
  2562 ;;  i               2    0        int 
  2563 ;;  c               1  118[BANK0 ] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2   91[BANK0 ] int 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2573 ;;      Params:         0       6       0       0       0       0       0       0       0
  2574 ;;      Locals:         0      18       0       0       0       0       0       0       0
  2575 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2576 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2577 ;;Total ram usage:       28 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 7
  2580 ;; This function calls:
  2581 ;;		_atoi
  2582 ;;		_dtoa
  2583 ;;		_efgtoa
  2584 ;;		_fputc
  2585 ;;		_isdigit
  2586 ;;		_isupper
  2587 ;;		_strncmp
  2588 ;;		_tolower
  2589 ;; This function is called by:
  2590 ;;		_vfprintf
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text7
  2595  002500                     __ptext7:
  2596                           	callstack 0
  2597  002500                     _vfpfcnvrt:
  2598                           	callstack 21
  2599  002500                     
  2600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2601  002500  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2602  002504  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2603  002508  CFDE FFF6          	movff	postinc2,tblptrl
  2604  00250C  CFDD FFF7          	movff	postdec2,tblptrh
  2605  002510                     	if	0	;tblptru may be non-zero
  2606  002510                     	endif
  2607  002510                     	if	0	;tblptru may be non-zero
  2608  002510                     	endif
  2609  002510  0008               	tblrd		*
  2610  002512  50F5               	movf	tablat,w,c
  2611  002514  0A25               	xorlw	37
  2612  002516  A4D8               	btfss	status,2,c
  2613  002518  EF90  F012         	goto	u10181
  2614  00251C  EF92  F012         	goto	u10180
  2615  002520                     u10181:
  2616  002520  EFB7  F015         	goto	l7778
  2617  002524                     u10180:
  2618  002524                     
  2619                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2620  002524  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2621  002528  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2622  00252C  2ADE               	incf	postinc2,f,c
  2623  00252E  0E00               	movlw	0
  2624  002530  22DD               	addwfc	postdec2,f,c
  2625  002532                     
  2626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2627  002532  0E00               	movlw	0
  2628  002534  0101               	movlb	1	; () banked
  2629  002536  6F35               	movwf	(_width+1)& (0+255),b
  2630  002538  0E00               	movlw	0
  2631  00253A  6F34               	movwf	_width& (0+255),b
  2632  00253C  C134  F05A         	movff	_width,_flags
  2633  002540  C135  F05B         	movff	_width+1,_flags+1
  2634  002544                     
  2635                           ; BSR set to: 1
  2636                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2637  002544  0100               	movlb	0	; () banked
  2638  002546  69F7               	setf	_prec& (0+255),b
  2639  002548  69F8               	setf	(_prec+1)& (0+255),b
  2640  00254A                     
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2643  00254A  0E00               	movlw	0
  2644  00254C  6FCE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2645  00254E  0E00               	movlw	0
  2646  002550  6FCD               	movwf	vfpfcnvrt@done& (0+255),b
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2649  002552  EFF1  F012         	goto	l7676
  2650  002556                     l7650:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2654  002556  805A               	bsf	_flags^0,0,c
  2655  002558                     l7652:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2659  002558  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2660  00255C  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2661  002560  2ADE               	incf	postinc2,f,c
  2662  002562  0E00               	movlw	0
  2663  002564  22DD               	addwfc	postdec2,f,c
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2666  002566  EFF1  F012         	goto	l7676
  2667  00256A                     l7654:
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2671  00256A  825A               	bsf	_flags^0,1,c
  2672  00256C  EFAC  F012         	goto	l7652
  2673  002570                     l7658:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2677  002570  845A               	bsf	_flags^0,2,c
  2678  002572  EFAC  F012         	goto	l7652
  2679  002576                     l7662:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2683  002576  865A               	bsf	_flags^0,3,c
  2684  002578  EFAC  F012         	goto	l7652
  2685  00257C                     l7666:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2689  00257C  885A               	bsf	_flags^0,4,c
  2690  00257E  EFAC  F012         	goto	l7652
  2691  002582                     l7670:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2695  002582  0E00               	movlw	0
  2696  002584  6FCE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2697  002586  0E01               	movlw	1
  2698  002588  6FCD               	movwf	vfpfcnvrt@done& (0+255),b
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2701  00258A  EFF1  F012         	goto	l7676
  2702  00258E                     l7674:
  2703                           
  2704                           ; BSR set to: 0
  2705  00258E  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2706  002592  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2707  002596  CFDE FFF6          	movff	postinc2,tblptrl
  2708  00259A  CFDD FFF7          	movff	postdec2,tblptrh
  2709  00259E                     	if	0	;tblptru may be non-zero
  2710  00259E                     	endif
  2711  00259E                     	if	0	;tblptru may be non-zero
  2712  00259E                     	endif
  2713  00259E  0008               	tblrd		*
  2714  0025A0  50F5               	movf	tablat,w,c
  2715  0025A2  6FC1               	movwf	??_vfpfcnvrt& (0+255),b
  2716  0025A4  6BC2               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2717                           
  2718                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2719                           ; Switch size 1, requested type "simple"
  2720                           ; Number of cases is 1, Range of values is 0 to 0
  2721                           ; switch strategies available:
  2722                           ; Name         Instructions Cycles
  2723                           ; simple_byte            4     3 (average)
  2724                           ;	Chosen strategy is simple_byte
  2725  0025A6  51C2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2726  0025A8  0A00               	xorlw	0	; case 0
  2727  0025AA  B4D8               	btfsc	status,2,c
  2728  0025AC  EFDA  F012         	goto	l8490
  2729  0025B0  EFC1  F012         	goto	l7670
  2730  0025B4                     l8490:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ; Switch size 1, requested type "simple"
  2734                           ; Number of cases is 5, Range of values is 32 to 48
  2735                           ; switch strategies available:
  2736                           ; Name         Instructions Cycles
  2737                           ; simple_byte           16     9 (average)
  2738                           ;	Chosen strategy is simple_byte
  2739  0025B4  51C1               	movf	??_vfpfcnvrt& (0+255),w,b
  2740  0025B6  0A20               	xorlw	32	; case 32
  2741  0025B8  B4D8               	btfsc	status,2,c
  2742  0025BA  EFBB  F012         	goto	l7662
  2743  0025BE  0A03               	xorlw	3	; case 35
  2744  0025C0  B4D8               	btfsc	status,2,c
  2745  0025C2  EFBE  F012         	goto	l7666
  2746  0025C6  0A08               	xorlw	8	; case 43
  2747  0025C8  B4D8               	btfsc	status,2,c
  2748  0025CA  EFB8  F012         	goto	l7658
  2749  0025CE  0A06               	xorlw	6	; case 45
  2750  0025D0  B4D8               	btfsc	status,2,c
  2751  0025D2  EFAB  F012         	goto	l7650
  2752  0025D6  0A1D               	xorlw	29	; case 48
  2753  0025D8  B4D8               	btfsc	status,2,c
  2754  0025DA  EFB5  F012         	goto	l7654
  2755  0025DE  EFC1  F012         	goto	l7670
  2756  0025E2                     l7676:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2760  0025E2  51CD               	movf	vfpfcnvrt@done& (0+255),w,b
  2761  0025E4  11CE               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2762  0025E6  B4D8               	btfsc	status,2,c
  2763  0025E8  EFF8  F012         	goto	u10191
  2764  0025EC  EFFA  F012         	goto	u10190
  2765  0025F0                     u10191:
  2766  0025F0  EFC7  F012         	goto	l7674
  2767  0025F4                     u10190:
  2768  0025F4                     
  2769                           ; BSR set to: 0
  2770                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2771  0025F4  A05A               	btfss	_flags^0,0,c
  2772  0025F6  EFFF  F012         	goto	u10201
  2773  0025FA  EF01  F013         	goto	u10200
  2774  0025FE                     u10201:
  2775  0025FE  EF02  F013         	goto	l7680
  2776  002602                     u10200:
  2777  002602                     
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2780  002602  925A               	bcf	_flags^0,1,c
  2781  002604                     l7680:
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2785  002604  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2786  002608  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2787  00260C  CFDE FFF6          	movff	postinc2,tblptrl
  2788  002610  CFDD FFF7          	movff	postdec2,tblptrh
  2789  002614                     	if	0	;tblptru may be non-zero
  2790  002614                     	endif
  2791  002614                     	if	0	;tblptru may be non-zero
  2792  002614                     	endif
  2793  002614  0008               	tblrd		*
  2794  002616  50F5               	movf	tablat,w,c
  2795  002618  0A2A               	xorlw	42
  2796  00261A  A4D8               	btfss	status,2,c
  2797  00261C  EF12  F013         	goto	u10211
  2798  002620  EF14  F013         	goto	u10210
  2799  002624                     u10211:
  2800  002624  EF3E  F013         	goto	l7688
  2801  002628                     u10210:
  2802  002628                     
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2805  002628  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2806  00262C  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2807  002630  2ADE               	incf	postinc2,f,c
  2808  002632  0E00               	movlw	0
  2809  002634  22DD               	addwfc	postdec2,f,c
  2810                           
  2811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2812  002636  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2813  00263A  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2814  00263E  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  2815  002642  0E02               	movlw	2
  2816  002644  26DE               	addwf	postinc2,f,c
  2817  002646  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  2818  00264A  0E00               	movlw	0
  2819  00264C  22DD               	addwfc	postdec2,f,c
  2820  00264E  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2821  002652  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2822  002656  CFDE F134          	movff	postinc2,_width
  2823  00265A  CFDD F135          	movff	postdec2,_width+1
  2824  00265E                     
  2825                           ; BSR set to: 0
  2826                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2827  00265E  0101               	movlb	1	; () banked
  2828  002660  BF35               	btfsc	(_width+1)& (0+255),7,b
  2829  002662  EF37  F013         	goto	u10220
  2830  002666  EF35  F013         	goto	u10221
  2831  00266A                     u10221:
  2832  00266A  EF75  F013         	goto	l7696
  2833  00266E                     u10220:
  2834  00266E                     
  2835                           ; BSR set to: 1
  2836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2837  00266E  805A               	bsf	_flags^0,0,c
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2840  002670  6D34               	negf	_width& (0+255),b
  2841  002672  1F35               	comf	(_width+1)& (0+255),f,b
  2842  002674  B0D8               	btfsc	status,0,c
  2843  002676  2B35               	incf	(_width+1)& (0+255),f,b
  2844  002678  EF75  F013         	goto	l7696
  2845  00267C                     l7688:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2849  00267C  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2850  002680  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2851  002684  CFDE F00A          	movff	postinc2,atoi@s
  2852  002688  CFDD F00B          	movff	postdec2,atoi@s+1
  2853  00268C  ECD9  F024         	call	_atoi	;wreg free
  2854  002690  C00A  F134         	movff	?_atoi,_width
  2855  002694  C00B  F135         	movff	?_atoi+1,_width+1
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2858  002698  EF55  F013         	goto	l7694
  2859  00269C                     l7690:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2863  00269C  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2864  0026A0  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2865  0026A4  2ADE               	incf	postinc2,f,c
  2866  0026A6  0E00               	movlw	0
  2867  0026A8  22DD               	addwfc	postdec2,f,c
  2868  0026AA                     l7694:
  2869  0026AA  0ED0               	movlw	208
  2870  0026AC  0100               	movlb	0	; () banked
  2871  0026AE  6FC1               	movwf	??_vfpfcnvrt& (0+255),b
  2872  0026B0  0EFF               	movlw	255
  2873  0026B2  6FC2               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2874  0026B4  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2875  0026B8  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2876  0026BC  CFDE FFF6          	movff	postinc2,tblptrl
  2877  0026C0  CFDD FFF7          	movff	postdec2,tblptrh
  2878  0026C4                     	if	0	;tblptru may be non-zero
  2879  0026C4                     	endif
  2880  0026C4                     	if	0	;tblptru may be non-zero
  2881  0026C4                     	endif
  2882  0026C4  0008               	tblrd		*
  2883  0026C6  50F5               	movf	tablat,w,c
  2884  0026C8  6FC3               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2885  0026CA  6BC4               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2886  0026CC  51C1               	movf	??_vfpfcnvrt& (0+255),w,b
  2887  0026CE  27C3               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2888  0026D0  51C2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2889  0026D2  23C4               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2890  0026D4  51C4               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2891  0026D6  E109               	bnz	u10230
  2892  0026D8  0E0A               	movlw	10
  2893  0026DA  5DC3               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2894  0026DC  A0D8               	btfss	status,0,c
  2895  0026DE  EF73  F013         	goto	u10231
  2896  0026E2  EF75  F013         	goto	u10230
  2897  0026E6                     u10231:
  2898  0026E6  EF4E  F013         	goto	l7690
  2899  0026EA                     u10230:
  2900  0026EA                     l7696:
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2903  0026EA  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2904  0026EE  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2905  0026F2  CFDE FFF6          	movff	postinc2,tblptrl
  2906  0026F6  CFDD FFF7          	movff	postdec2,tblptrh
  2907  0026FA                     	if	0	;tblptru may be non-zero
  2908  0026FA                     	endif
  2909  0026FA                     	if	0	;tblptru may be non-zero
  2910  0026FA                     	endif
  2911  0026FA  0008               	tblrd		*
  2912  0026FC  50F5               	movf	tablat,w,c
  2913  0026FE  0A2E               	xorlw	46
  2914  002700  A4D8               	btfss	status,2,c
  2915  002702  EF85  F013         	goto	u10241
  2916  002706  EF87  F013         	goto	u10240
  2917  00270A                     u10241:
  2918  00270A  EFF9  F013         	goto	l7714
  2919  00270E                     u10240:
  2920  00270E                     
  2921                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2922  00270E  0E00               	movlw	0
  2923  002710  0100               	movlb	0	; () banked
  2924  002712  6FF8               	movwf	(_prec+1)& (0+255),b
  2925  002714  0E00               	movlw	0
  2926  002716  6FF7               	movwf	_prec& (0+255),b
  2927  002718                     
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2930  002718  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2931  00271C  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2932  002720  2ADE               	incf	postinc2,f,c
  2933  002722  0E00               	movlw	0
  2934  002724  22DD               	addwfc	postdec2,f,c
  2935  002726                     
  2936                           ; BSR set to: 0
  2937                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2938  002726  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2939  00272A  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2940  00272E  CFDE FFF6          	movff	postinc2,tblptrl
  2941  002732  CFDD FFF7          	movff	postdec2,tblptrh
  2942  002736                     	if	0	;tblptru may be non-zero
  2943  002736                     	endif
  2944  002736                     	if	0	;tblptru may be non-zero
  2945  002736                     	endif
  2946  002736  0008               	tblrd		*
  2947  002738  50F5               	movf	tablat,w,c
  2948  00273A  0A2A               	xorlw	42
  2949  00273C  A4D8               	btfss	status,2,c
  2950  00273E  EFA3  F013         	goto	u10251
  2951  002742  EFA5  F013         	goto	u10250
  2952  002746                     u10251:
  2953  002746  EFC2  F013         	goto	l7706
  2954  00274A                     u10250:
  2955  00274A                     
  2956                           ; BSR set to: 0
  2957                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2958  00274A  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2959  00274E  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2960  002752  2ADE               	incf	postinc2,f,c
  2961  002754  0E00               	movlw	0
  2962  002756  22DD               	addwfc	postdec2,f,c
  2963                           
  2964                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2965  002758  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2966  00275C  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2967  002760  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  2968  002764  0E02               	movlw	2
  2969  002766  26DE               	addwf	postinc2,f,c
  2970  002768  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  2971  00276C  0E00               	movlw	0
  2972  00276E  22DD               	addwfc	postdec2,f,c
  2973  002770  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2974  002774  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2975  002778  CFDE F0F7          	movff	postinc2,_prec
  2976  00277C  CFDD F0F8          	movff	postdec2,_prec+1
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2979  002780  EFF9  F013         	goto	l7714
  2980  002784                     l7706:
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2984  002784  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2985  002788  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2986  00278C  CFDE F00A          	movff	postinc2,atoi@s
  2987  002790  CFDD F00B          	movff	postdec2,atoi@s+1
  2988  002794  ECD9  F024         	call	_atoi	;wreg free
  2989  002798  C00A  F0F7         	movff	?_atoi,_prec
  2990  00279C  C00B  F0F8         	movff	?_atoi+1,_prec+1
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2993  0027A0  EFD9  F013         	goto	l7712
  2994  0027A4                     l7708:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2998  0027A4  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2999  0027A8  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3000  0027AC  2ADE               	incf	postinc2,f,c
  3001  0027AE  0E00               	movlw	0
  3002  0027B0  22DD               	addwfc	postdec2,f,c
  3003  0027B2                     l7712:
  3004  0027B2  0ED0               	movlw	208
  3005  0027B4  0100               	movlb	0	; () banked
  3006  0027B6  6FC1               	movwf	??_vfpfcnvrt& (0+255),b
  3007  0027B8  0EFF               	movlw	255
  3008  0027BA  6FC2               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3009  0027BC  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3010  0027C0  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3011  0027C4  CFDE FFF6          	movff	postinc2,tblptrl
  3012  0027C8  CFDD FFF7          	movff	postdec2,tblptrh
  3013  0027CC                     	if	0	;tblptru may be non-zero
  3014  0027CC                     	endif
  3015  0027CC                     	if	0	;tblptru may be non-zero
  3016  0027CC                     	endif
  3017  0027CC  0008               	tblrd		*
  3018  0027CE  50F5               	movf	tablat,w,c
  3019  0027D0  6FC3               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3020  0027D2  6BC4               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3021  0027D4  51C1               	movf	??_vfpfcnvrt& (0+255),w,b
  3022  0027D6  27C3               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3023  0027D8  51C2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3024  0027DA  23C4               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3025  0027DC  51C4               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3026  0027DE  E109               	bnz	u10260
  3027  0027E0  0E0A               	movlw	10
  3028  0027E2  5DC3               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3029  0027E4  A0D8               	btfss	status,0,c
  3030  0027E6  EFF7  F013         	goto	u10261
  3031  0027EA  EFF9  F013         	goto	u10260
  3032  0027EE                     u10261:
  3033  0027EE  EFD2  F013         	goto	l7708
  3034  0027F2                     u10260:
  3035  0027F2                     l7714:
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3038  0027F2  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3039  0027F6  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3040  0027FA  CFDE FFF6          	movff	postinc2,tblptrl
  3041  0027FE  CFDD FFF7          	movff	postdec2,tblptrh
  3042  002802                     	if	0	;tblptru may be non-zero
  3043  002802                     	endif
  3044  002802                     	if	0	;tblptru may be non-zero
  3045  002802                     	endif
  3046  002802  0008               	tblrd		*
  3047  002804  50F5               	movf	tablat,w,c
  3048  002806  6E09               	movwf	tolower@c^0,c
  3049  002808  6A0A               	clrf	(tolower@c+1)^0,c
  3050  00280A  EC2F  F02D         	call	_tolower	;wreg free
  3051  00280E  5009               	movf	?_tolower^0,w,c
  3052  002810  0100               	movlb	0	; () banked
  3053  002812  6FD3               	movwf	vfpfcnvrt@ct& (0+255),b
  3054  002814                     
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3057  002814  51D3               	movf	vfpfcnvrt@ct& (0+255),w,b
  3058  002816  B4D8               	btfsc	status,2,c
  3059  002818  EF10  F014         	goto	u10271
  3060  00281C  EF12  F014         	goto	u10270
  3061  002820                     u10271:
  3062  002820  EF4C  F014         	goto	l7724
  3063  002824                     u10270:
  3064  002824                     
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3067  002824  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3068  002828  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3069  00282C  CFDE F0C1          	movff	postinc2,??_vfpfcnvrt
  3070  002830  CFDD F0C2          	movff	postdec2,??_vfpfcnvrt+1
  3071  002834  0E01               	movlw	1
  3072  002836  27C1               	addwf	??_vfpfcnvrt& (0+255),f,b
  3073  002838  0E00               	movlw	0
  3074  00283A  23C2               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3075  00283C  C0C1  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3076  002840  C0C2  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3077  002844                     	if	0	;tblptru may be non-zero
  3078  002844                     	endif
  3079  002844                     	if	0	;tblptru may be non-zero
  3080  002844                     	endif
  3081  002844  0008               	tblrd		*
  3082  002846  50F5               	movf	tablat,w,c
  3083  002848  6E09               	movwf	tolower@c^0,c
  3084  00284A  6A0A               	clrf	(tolower@c+1)^0,c
  3085  00284C  EC2F  F02D         	call	_tolower	;wreg free
  3086  002850  5009               	movf	?_tolower^0,w,c
  3087  002852  0100               	movlb	0	; () banked
  3088  002854  6FD4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3089  002856                     
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3092  002856  51D4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3093  002858  B4D8               	btfsc	status,2,c
  3094  00285A  EF31  F014         	goto	u10281
  3095  00285E  EF33  F014         	goto	u10280
  3096  002862                     u10281:
  3097  002862  EF4C  F014         	goto	l7724
  3098  002866                     u10280:
  3099  002866                     
  3100                           ; BSR set to: 0
  3101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3102  002866  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3103  00286A  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3104  00286E  CFDE F0C1          	movff	postinc2,??_vfpfcnvrt
  3105  002872  CFDD F0C2          	movff	postdec2,??_vfpfcnvrt+1
  3106  002876  0E02               	movlw	2
  3107  002878  27C1               	addwf	??_vfpfcnvrt& (0+255),f,b
  3108  00287A  0E00               	movlw	0
  3109  00287C  23C2               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3110  00287E  C0C1  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3111  002882  C0C2  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3112  002886                     	if	0	;tblptru may be non-zero
  3113  002886                     	endif
  3114  002886                     	if	0	;tblptru may be non-zero
  3115  002886                     	endif
  3116  002886  0008               	tblrd		*
  3117  002888  50F5               	movf	tablat,w,c
  3118  00288A  6E09               	movwf	tolower@c^0,c
  3119  00288C  6A0A               	clrf	(tolower@c+1)^0,c
  3120  00288E  EC2F  F02D         	call	_tolower	;wreg free
  3121  002892  5009               	movf	?_tolower^0,w,c
  3122  002894  0100               	movlb	0	; () banked
  3123  002896  6FD5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3124  002898                     l7724:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3128  002898  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3129  00289C  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3130  0028A0  CFDE FFF6          	movff	postinc2,tblptrl
  3131  0028A4  CFDD FFF7          	movff	postdec2,tblptrh
  3132  0028A8                     	if	0	;tblptru may be non-zero
  3133  0028A8                     	endif
  3134  0028A8                     	if	0	;tblptru may be non-zero
  3135  0028A8                     	endif
  3136  0028A8  0008               	tblrd		*
  3137  0028AA  50F5               	movf	tablat,w,c
  3138  0028AC  0A64               	xorlw	100
  3139  0028AE  B4D8               	btfsc	status,2,c
  3140  0028B0  EF5C  F014         	goto	u10291
  3141  0028B4  EF5E  F014         	goto	u10290
  3142  0028B8                     u10291:
  3143  0028B8  EF70  F014         	goto	l7728
  3144  0028BC                     u10290:
  3145  0028BC                     
  3146                           ; BSR set to: 0
  3147  0028BC  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3148  0028C0  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3149  0028C4  CFDE FFF6          	movff	postinc2,tblptrl
  3150  0028C8  CFDD FFF7          	movff	postdec2,tblptrh
  3151  0028CC                     	if	0	;tblptru may be non-zero
  3152  0028CC                     	endif
  3153  0028CC                     	if	0	;tblptru may be non-zero
  3154  0028CC                     	endif
  3155  0028CC  0008               	tblrd		*
  3156  0028CE  50F5               	movf	tablat,w,c
  3157  0028D0  0A69               	xorlw	105
  3158  0028D2  A4D8               	btfss	status,2,c
  3159  0028D4  EF6E  F014         	goto	u10301
  3160  0028D8  EF70  F014         	goto	u10300
  3161  0028DC                     u10301:
  3162  0028DC  EFB0  F014         	goto	l7734
  3163  0028E0                     u10300:
  3164  0028E0                     l7728:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3168  0028E0  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3169  0028E4  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3170  0028E8  2ADE               	incf	postinc2,f,c
  3171  0028EA  0E00               	movlw	0
  3172  0028EC  22DD               	addwfc	postdec2,f,c
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3175  0028EE  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3176  0028F2  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3177  0028F6  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  3178  0028FA  0E02               	movlw	2
  3179  0028FC  26DE               	addwf	postinc2,f,c
  3180  0028FE  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  3181  002902  0E00               	movlw	0
  3182  002904  22DD               	addwfc	postdec2,f,c
  3183  002906  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3184  00290A  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3185  00290E  CFDE F0C5          	movff	postinc2,vfpfcnvrt@ll
  3186  002912  CFDD F0C6          	movff	postdec2,vfpfcnvrt@ll+1
  3187  002916  0E00               	movlw	0
  3188  002918  BFC6               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3189  00291A  0EFF               	movlw	-1
  3190  00291C  6FC7               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3191  00291E  6FC8               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3192  002920  6FC9               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3193  002922  6FCA               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3194  002924  6FCB               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3195  002926  6FCC               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3196  002928                     
  3197                           ; BSR set to: 0
  3198                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3199  002928  C0BB  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  3200  00292C  C0BC  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3201  002930  C0C5  F020         	movff	vfpfcnvrt@ll,dtoa@d
  3202  002934  C0C6  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3203  002938  C0C7  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3204  00293C  C0C8  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3205  002940  C0C9  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3206  002944  C0CA  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3207  002948  C0CB  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3208  00294C  C0CC  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3209  002950  EC36  F01E         	call	_dtoa	;wreg free
  3210  002954  C01E  F0BB         	movff	?_dtoa,?_vfpfcnvrt
  3211  002958  C01F  F0BC         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3212  00295C  EFD2  F015         	goto	l1105
  3213  002960                     l7734:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3217  002960  0E66               	movlw	102
  3218  002962  19D3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3219  002964  A4D8               	btfss	status,2,c
  3220  002966  EFB7  F014         	goto	u10311
  3221  00296A  EFB9  F014         	goto	u10310
  3222  00296E                     u10311:
  3223  00296E  EFF9  F014         	goto	l7746
  3224  002972                     u10310:
  3225  002972                     
  3226                           ; BSR set to: 0
  3227                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3228  002972  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3229  002976  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3230  00297A  CFDE FFF6          	movff	postinc2,tblptrl
  3231  00297E  CFDD FFF7          	movff	postdec2,tblptrh
  3232  002982                     	if	0	;tblptru may be non-zero
  3233  002982                     	endif
  3234  002982                     	if	0	;tblptru may be non-zero
  3235  002982                     	endif
  3236  002982  0008               	tblrd		*
  3237  002984  CFF5 F0D6          	movff	tablat,vfpfcnvrt@c
  3238  002988                     
  3239                           ; BSR set to: 0
  3240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3241  002988  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3242  00298C  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3243  002990  2ADE               	incf	postinc2,f,c
  3244  002992  0E00               	movlw	0
  3245  002994  22DD               	addwfc	postdec2,f,c
  3246  002996                     
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3249  002996  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3250  00299A  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3251  00299E  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  3252  0029A2  0E04               	movlw	4
  3253  0029A4  26DE               	addwf	postinc2,f,c
  3254  0029A6  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  3255  0029AA  0E00               	movlw	0
  3256  0029AC  22DD               	addwfc	postdec2,f,c
  3257  0029AE  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3258  0029B2  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3259  0029B6  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f
  3260  0029BA  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+1
  3261  0029BE  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+2
  3262  0029C2  CFDE F0D2          	movff	postinc2,vfpfcnvrt@f+3
  3263  0029C6                     l7742:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3267  0029C6  C0BB  F07D         	movff	vfpfcnvrt@fp,efgtoa@fp
  3268  0029CA  C0BC  F07E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3269  0029CE  C0CF  F07F         	movff	vfpfcnvrt@f,efgtoa@f
  3270  0029D2  C0D0  F080         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3271  0029D6  C0D1  F081         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3272  0029DA  C0D2  F082         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3273  0029DE  C0D6  F083         	movff	vfpfcnvrt@c,efgtoa@c
  3274  0029E2  EC7A  F00C         	call	_efgtoa	;wreg free
  3275  0029E6  C07D  F0BB         	movff	?_efgtoa,?_vfpfcnvrt
  3276  0029EA  C07E  F0BC         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3277  0029EE  EFD2  F015         	goto	l1105
  3278  0029F2                     l7746:
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3282  0029F2  0ED3               	movlw	low vfpfcnvrt@ct
  3283  0029F4  6E03               	movwf	strncmp@_l^0,c
  3284  0029F6  0E00               	movlw	high vfpfcnvrt@ct
  3285  0029F8  6E04               	movwf	(strncmp@_l+1)^0,c
  3286  0029FA  0E44               	movlw	low STR_12
  3287  0029FC  6E05               	movwf	strncmp@_r^0,c
  3288  0029FE  0E08               	movlw	high STR_12
  3289  002A00  6E06               	movwf	(strncmp@_r+1)^0,c
  3290  002A02  0E00               	movlw	0
  3291  002A04  6E08               	movwf	(strncmp@n+1)^0,c
  3292  002A06  0E02               	movlw	2
  3293  002A08  6E07               	movwf	strncmp@n^0,c
  3294  002A0A  ECEE  F027         	call	_strncmp	;wreg free
  3295  002A0E  5003               	movf	?_strncmp^0,w,c
  3296  002A10  1004               	iorwf	(?_strncmp+1)^0,w,c
  3297  002A12  A4D8               	btfss	status,2,c
  3298  002A14  EF0E  F015         	goto	u10321
  3299  002A18  EF10  F015         	goto	u10320
  3300  002A1C                     u10321:
  3301  002A1C  EF7F  F015         	goto	l7762
  3302  002A20                     u10320:
  3303  002A20                     
  3304                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  3305  002A20  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3306  002A24  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3307  002A28  CFDE F0C1          	movff	postinc2,??_vfpfcnvrt
  3308  002A2C  CFDD F0C2          	movff	postdec2,??_vfpfcnvrt+1
  3309  002A30  0E01               	movlw	1
  3310  002A32  0100               	movlb	0	; () banked
  3311  002A34  27C1               	addwf	??_vfpfcnvrt& (0+255),f,b
  3312  002A36  0E00               	movlw	0
  3313  002A38  23C2               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3314  002A3A  C0C1  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3315  002A3E  C0C2  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3316  002A42                     	if	0	;tblptru may be non-zero
  3317  002A42                     	endif
  3318  002A42                     	if	0	;tblptru may be non-zero
  3319  002A42                     	endif
  3320  002A42  0008               	tblrd		*
  3321  002A44  CFF5 F0D6          	movff	tablat,vfpfcnvrt@c
  3322  002A48                     
  3323                           ; BSR set to: 0
  3324  002A48  0EBF               	movlw	191
  3325  002A4A  6FC1               	movwf	??_vfpfcnvrt& (0+255),b
  3326  002A4C  0EFF               	movlw	255
  3327  002A4E  6FC2               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3328  002A50  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3329  002A54  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3330  002A58  CFDE FFF6          	movff	postinc2,tblptrl
  3331  002A5C  CFDD FFF7          	movff	postdec2,tblptrh
  3332  002A60                     	if	0	;tblptru may be non-zero
  3333  002A60                     	endif
  3334  002A60                     	if	0	;tblptru may be non-zero
  3335  002A60                     	endif
  3336  002A60  0008               	tblrd		*
  3337  002A62  50F5               	movf	tablat,w,c
  3338  002A64  6FC3               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3339  002A66  6BC4               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3340  002A68  51C1               	movf	??_vfpfcnvrt& (0+255),w,b
  3341  002A6A  27C3               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3342  002A6C  51C2               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3343  002A6E  23C4               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3344  002A70  51C4               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3345  002A72  E107               	bnz	u10331
  3346  002A74  0E1A               	movlw	26
  3347  002A76  5DC3               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3348  002A78  B0D8               	btfsc	status,0,c
  3349  002A7A  EF41  F015         	goto	u10331
  3350  002A7E  EF43  F015         	goto	u10330
  3351  002A82                     u10331:
  3352  002A82  EF5D  F015         	goto	l7756
  3353  002A86                     u10330:
  3354  002A86                     
  3355                           ; BSR set to: 0
  3356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3357  002A86  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3358  002A8A  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3359  002A8E  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  3360  002A92  0E04               	movlw	4
  3361  002A94  26DE               	addwf	postinc2,f,c
  3362  002A96  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  3363  002A9A  0E00               	movlw	0
  3364  002A9C  22DD               	addwfc	postdec2,f,c
  3365  002A9E  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3366  002AA2  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3367  002AA6  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f
  3368  002AAA  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+1
  3369  002AAE  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+2
  3370  002AB2  CFDE F0D2          	movff	postinc2,vfpfcnvrt@f+3
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3373  002AB6  EF75  F015         	goto	l1111
  3374  002ABA                     l7756:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3378  002ABA  C0BF  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3379  002ABE  C0C0  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3380  002AC2  CFDF F0C1          	movff	indf2,??_vfpfcnvrt
  3381  002AC6  0E04               	movlw	4
  3382  002AC8  26DE               	addwf	postinc2,f,c
  3383  002ACA  CFDF F0C2          	movff	indf2,??_vfpfcnvrt+1
  3384  002ACE  0E00               	movlw	0
  3385  002AD0  22DD               	addwfc	postdec2,f,c
  3386  002AD2  C0C1  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3387  002AD6  C0C2  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3388  002ADA  CFDE F0CF          	movff	postinc2,vfpfcnvrt@f
  3389  002ADE  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f+1
  3390  002AE2  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+2
  3391  002AE6  CFDE F0D2          	movff	postinc2,vfpfcnvrt@f+3
  3392  002AEA                     l1111:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3396  002AEA  0E02               	movlw	2
  3397  002AEC  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3398  002AF0  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3399  002AF4  26DE               	addwf	postinc2,f,c
  3400  002AF6  0E00               	movlw	0
  3401  002AF8  22DD               	addwfc	postdec2,f,c
  3402  002AFA  EFE3  F014         	goto	l7742
  3403  002AFE                     l7762:
  3404                           
  3405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3406  002AFE  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3407  002B02  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3408  002B06  CFDE FFF6          	movff	postinc2,tblptrl
  3409  002B0A  CFDD FFF7          	movff	postdec2,tblptrh
  3410  002B0E                     	if	0	;tblptru may be non-zero
  3411  002B0E                     	endif
  3412  002B0E                     	if	0	;tblptru may be non-zero
  3413  002B0E                     	endif
  3414  002B0E  0008               	tblrd		*
  3415  002B10  50F5               	movf	tablat,w,c
  3416  002B12  0A25               	xorlw	37
  3417  002B14  A4D8               	btfss	status,2,c
  3418  002B16  EF8F  F015         	goto	u10341
  3419  002B1A  EF91  F015         	goto	u10340
  3420  002B1E                     u10341:
  3421  002B1E  EFA9  F015         	goto	l7772
  3422  002B22                     u10340:
  3423  002B22                     
  3424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3425  002B22  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3426  002B26  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3427  002B2A  2ADE               	incf	postinc2,f,c
  3428  002B2C  0E00               	movlw	0
  3429  002B2E  22DD               	addwfc	postdec2,f,c
  3430  002B30                     
  3431                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3432  002B30  0E00               	movlw	0
  3433  002B32  6E04               	movwf	(fputc@c+1)^0,c
  3434  002B34  0E25               	movlw	37
  3435  002B36  6E03               	movwf	fputc@c^0,c
  3436  002B38  C0BB  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3437  002B3C  C0BC  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3438  002B40  EC59  F028         	call	_fputc	;wreg free
  3439  002B44                     l7768:
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3442  002B44  0E00               	movlw	0
  3443  002B46  0100               	movlb	0	; () banked
  3444  002B48  6FBC               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3445  002B4A  0E01               	movlw	1
  3446  002B4C  6FBB               	movwf	?_vfpfcnvrt& (0+255),b
  3447  002B4E  EFD2  F015         	goto	l1105
  3448  002B52                     l7772:
  3449                           
  3450                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3451  002B52  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3452  002B56  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3453  002B5A  2ADE               	incf	postinc2,f,c
  3454  002B5C  0E00               	movlw	0
  3455  002B5E  22DD               	addwfc	postdec2,f,c
  3456  002B60                     
  3457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3458  002B60  0E00               	movlw	0
  3459  002B62  0100               	movlb	0	; () banked
  3460  002B64  6FBC               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3461  002B66  0E00               	movlw	0
  3462  002B68  6FBB               	movwf	?_vfpfcnvrt& (0+255),b
  3463  002B6A  EFD2  F015         	goto	l1105
  3464  002B6E                     l7778:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3467  002B6E  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3468  002B72  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3469  002B76  CFDE FFF6          	movff	postinc2,tblptrl
  3470  002B7A  CFDD FFF7          	movff	postdec2,tblptrh
  3471  002B7E                     	if	0	;tblptru may be non-zero
  3472  002B7E                     	endif
  3473  002B7E                     	if	0	;tblptru may be non-zero
  3474  002B7E                     	endif
  3475  002B7E  0008               	tblrd		*
  3476  002B80  50F5               	movf	tablat,w,c
  3477  002B82  6E03               	movwf	fputc@c^0,c
  3478  002B84  6A04               	clrf	(fputc@c+1)^0,c
  3479  002B86  C0BB  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3480  002B8A  C0BC  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3481  002B8E  EC59  F028         	call	_fputc	;wreg free
  3482  002B92                     
  3483                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3484  002B92  C0BD  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3485  002B96  C0BE  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3486  002B9A  2ADE               	incf	postinc2,f,c
  3487  002B9C  0E00               	movlw	0
  3488  002B9E  22DD               	addwfc	postdec2,f,c
  3489  002BA0  EFA2  F015         	goto	l7768
  3490  002BA4                     l1105:
  3491  002BA4  0012               	return		;funcret
  3492  002BA6                     __end_of_vfpfcnvrt:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _strncmp *****************
  3496 ;; Defined at:
  3497 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  3500 ;;		 -> vfpfcnvrt@ct(3), 
  3501 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  3502 ;;		 -> STR_14(3), 
  3503 ;;  n               2    6[COMRAM] unsigned int 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  r               2   11[COMRAM] PTR const unsigned char 
  3506 ;;		 -> STR_14(3), 
  3507 ;;  l               2    9[COMRAM] PTR const unsigned char 
  3508 ;;		 -> vfpfcnvrt@ct(3), 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  2    2[COMRAM] int 
  3511 ;; Registers used:
  3512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3518 ;;      Params:         6       0       0       0       0       0       0       0       0
  3519 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3520 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3521 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3522 ;;Total ram usage:       11 bytes
  3523 ;; Hardware stack levels used: 1
  3524 ;; Hardware stack levels required when called: 2
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_vfpfcnvrt
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text8
  3533  004FDC                     __ptext8:
  3534                           	callstack 0
  3535  004FDC                     _strncmp:
  3536                           	callstack 25
  3537  004FDC  C003  F00A         	movff	strncmp@_l,strncmp@l
  3538  004FE0  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  3539  004FE4  C005  F00C         	movff	strncmp@_r,strncmp@r
  3540  004FE8  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  3541  004FEC  0607               	decf	strncmp@n^0,f,c
  3542  004FEE  A0D8               	btfss	status,0,c
  3543  004FF0  0608               	decf	(strncmp@n+1)^0,f,c
  3544  004FF2  2807               	incf	strncmp@n^0,w,c
  3545  004FF4  E106               	bnz	u10131
  3546  004FF6  2808               	incf	(strncmp@n+1)^0,w,c
  3547  004FF8  A4D8               	btfss	status,2,c
  3548  004FFA  EF01  F028         	goto	u10131
  3549  004FFE  EF03  F028         	goto	u10130
  3550  005002                     u10131:
  3551  005002  EF10  F028         	goto	l7628
  3552  005006                     u10130:
  3553  005006  0E00               	movlw	0
  3554  005008  6E04               	movwf	(?_strncmp+1)^0,c
  3555  00500A  0E00               	movlw	0
  3556  00500C  6E03               	movwf	?_strncmp^0,c
  3557  00500E  EF58  F028         	goto	l1233
  3558  005012                     l7626:
  3559  005012  4A0A               	infsnz	strncmp@l^0,f,c
  3560  005014  2A0B               	incf	(strncmp@l+1)^0,f,c
  3561  005016  4A0C               	infsnz	strncmp@r^0,f,c
  3562  005018  2A0D               	incf	(strncmp@r+1)^0,f,c
  3563  00501A  0607               	decf	strncmp@n^0,f,c
  3564  00501C  A0D8               	btfss	status,0,c
  3565  00501E  0608               	decf	(strncmp@n+1)^0,f,c
  3566  005020                     l7628:
  3567  005020  C00A  FFD9         	movff	strncmp@l,fsr2l
  3568  005024  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  3569  005028  50DF               	movf	indf2,w,c
  3570  00502A  B4D8               	btfsc	status,2,c
  3571  00502C  EF1A  F028         	goto	u10141
  3572  005030  EF1C  F028         	goto	u10140
  3573  005034                     u10141:
  3574  005034  EF47  F028         	goto	l7636
  3575  005038                     u10140:
  3576  005038  C00C  FFF6         	movff	strncmp@r,tblptrl
  3577  00503C  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  3578  005040                     	if	0	;tblptru may be non-zero
  3579  005040                     	endif
  3580  005040                     	if	0	;tblptru may be non-zero
  3581  005040                     	endif
  3582  005040  0008               	tblrd		*
  3583  005042  50F5               	movf	tablat,w,c
  3584  005044  0900               	iorlw	0
  3585  005046  B4D8               	btfsc	status,2,c
  3586  005048  EF28  F028         	goto	u10151
  3587  00504C  EF2A  F028         	goto	u10150
  3588  005050                     u10151:
  3589  005050  EF47  F028         	goto	l7636
  3590  005054                     u10150:
  3591  005054  5007               	movf	strncmp@n^0,w,c
  3592  005056  1008               	iorwf	(strncmp@n+1)^0,w,c
  3593  005058  B4D8               	btfsc	status,2,c
  3594  00505A  EF31  F028         	goto	u10161
  3595  00505E  EF33  F028         	goto	u10160
  3596  005062                     u10161:
  3597  005062  EF47  F028         	goto	l7636
  3598  005066                     u10160:
  3599  005066  C00A  FFD9         	movff	strncmp@l,fsr2l
  3600  00506A  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  3601  00506E  50DF               	movf	indf2,w,c
  3602  005070  6E09               	movwf	??_strncmp^0,c
  3603  005072  C00C  FFF6         	movff	strncmp@r,tblptrl
  3604  005076  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  3605  00507A                     	if	0	;tblptru may be non-zero
  3606  00507A                     	endif
  3607  00507A                     	if	0	;tblptru may be non-zero
  3608  00507A                     	endif
  3609  00507A  0008               	tblrd		*
  3610  00507C  50F5               	movf	tablat,w,c
  3611  00507E  1809               	xorwf	??_strncmp^0,w,c
  3612  005080  B4D8               	btfsc	status,2,c
  3613  005082  EF45  F028         	goto	u10171
  3614  005086  EF47  F028         	goto	u10170
  3615  00508A                     u10171:
  3616  00508A  EF09  F028         	goto	l7626
  3617  00508E                     u10170:
  3618  00508E                     l7636:
  3619  00508E  C00A  FFD9         	movff	strncmp@l,fsr2l
  3620  005092  C00B  FFDA         	movff	strncmp@l+1,fsr2h
  3621  005096  50DF               	movf	indf2,w,c
  3622  005098  6E09               	movwf	??_strncmp^0,c
  3623  00509A  C00C  FFF6         	movff	strncmp@r,tblptrl
  3624  00509E  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  3625  0050A2                     	if	0	;tblptru may be non-zero
  3626  0050A2                     	endif
  3627  0050A2                     	if	0	;tblptru may be non-zero
  3628  0050A2                     	endif
  3629  0050A2  0008               	tblrd		*
  3630  0050A4  50F5               	movf	tablat,w,c
  3631  0050A6  5C09               	subwf	??_strncmp^0,w,c
  3632  0050A8  6E03               	movwf	?_strncmp^0,c
  3633  0050AA  6A04               	clrf	(?_strncmp+1)^0,c
  3634  0050AC  A0D8               	btfss	status,0,c
  3635  0050AE  0604               	decf	(?_strncmp+1)^0,f,c
  3636  0050B0                     l1233:
  3637  0050B0  0012               	return		;funcret
  3638  0050B2                     __end_of_strncmp:
  3639                           	callstack 0
  3640                           
  3641 ;; *************** function _efgtoa *****************
  3642 ;; Defined at:
  3643 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  3646 ;;		 -> sprintf@f(11), 
  3647 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  3648 ;;  c               1   35[BANK0 ] unsigned char 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  u               4   87[BANK0 ] unsigned char 
  3651 ;;  g               4   79[BANK0 ] unsigned char 
  3652 ;;  l               4   73[BANK0 ] unsigned char 
  3653 ;;  h               4   69[BANK0 ] unsigned char 
  3654 ;;  ou              4   55[BANK0 ] unsigned char 
  3655 ;;  n               2   85[BANK0 ] int 
  3656 ;;  e               2   83[BANK0 ] int 
  3657 ;;  i               2   77[BANK0 ] int 
  3658 ;;  w               2   65[BANK0 ] int 
  3659 ;;  p               2   63[BANK0 ] int 
  3660 ;;  sign            2   61[BANK0 ] int 
  3661 ;;  d               2   59[BANK0 ] int 
  3662 ;;  m               2   53[BANK0 ] int 
  3663 ;;  ne              2   51[BANK0 ] int 
  3664 ;;  pp              2   49[BANK0 ] int 
  3665 ;;  t               2   47[BANK0 ] int 
  3666 ;;  mode            1   68[BANK0 ] unsigned char 
  3667 ;;  nmode           1   67[BANK0 ] unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  2   29[BANK0 ] int 
  3670 ;; Registers used:
  3671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3677 ;;      Params:         0       7       0       0       0       0       0       0       0
  3678 ;;      Locals:         0      50       0       0       0       0       0       0       0
  3679 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3680 ;;      Totals:         0      62       0       0       0       0       0       0       0
  3681 ;;Total ram usage:       62 bytes
  3682 ;; Hardware stack levels used: 1
  3683 ;; Hardware stack levels required when called: 6
  3684 ;; This function calls:
  3685 ;;		___awdiv
  3686 ;;		___awmod
  3687 ;;		___fladd
  3688 ;;		___fldiv
  3689 ;;		___fleq
  3690 ;;		___flge
  3691 ;;		___flmul
  3692 ;;		___flneg
  3693 ;;		___flsub
  3694 ;;		___fltol
  3695 ;;		___fpclassifyf
  3696 ;;		_floorf
  3697 ;;		_isupper
  3698 ;;		_pad
  3699 ;;		_strcpy
  3700 ;;		_tolower
  3701 ;; This function is called by:
  3702 ;;		_vfpfcnvrt
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           	psect	text9
  3707  0018F4                     __ptext9:
  3708                           	callstack 0
  3709  0018F4                     _efgtoa:
  3710                           	callstack 21
  3711  0018F4                     
  3712                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3713  0018F4  0E00               	movlw	0
  3714  0018F6  0100               	movlb	0	; () banked
  3715  0018F8  6F9E               	movwf	(efgtoa@sign+1)& (0+255),b
  3716  0018FA  0E00               	movlw	0
  3717  0018FC  6F9D               	movwf	efgtoa@sign& (0+255),b
  3718  0018FE                     
  3719                           ; BSR set to: 0
  3720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3721  0018FE  C07F  F0AF         	movff	efgtoa@f,efgtoa@g
  3722  001902  C080  F0B0         	movff	efgtoa@f+1,efgtoa@g+1
  3723  001906  C081  F0B1         	movff	efgtoa@f+2,efgtoa@g+2
  3724  00190A  C082  F0B2         	movff	efgtoa@f+3,efgtoa@g+3
  3725  00190E                     
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3728  00190E  BFB2               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3729  001910  EF8E  F00C         	goto	u9610
  3730  001914  EF8C  F00C         	goto	u9611
  3731  001918                     u9611:
  3732  001918  EFA4  F00C         	goto	l7292
  3733  00191C                     u9610:
  3734  00191C                     
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3737  00191C  0E00               	movlw	0
  3738  00191E  6F9E               	movwf	(efgtoa@sign+1)& (0+255),b
  3739  001920  0E01               	movlw	1
  3740  001922  6F9D               	movwf	efgtoa@sign& (0+255),b
  3741  001924                     
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3744  001924  C0AF  F003         	movff	efgtoa@g,___flneg@f1
  3745  001928  C0B0  F004         	movff	efgtoa@g+1,___flneg@f1+1
  3746  00192C  C0B1  F005         	movff	efgtoa@g+2,___flneg@f1+2
  3747  001930  C0B2  F006         	movff	efgtoa@g+3,___flneg@f1+3
  3748  001934  EC4F  F02E         	call	___flneg	;wreg free
  3749  001938  C003  F0AF         	movff	?___flneg,efgtoa@g
  3750  00193C  C004  F0B0         	movff	?___flneg+1,efgtoa@g+1
  3751  001940  C005  F0B1         	movff	?___flneg+2,efgtoa@g+2
  3752  001944  C006  F0B2         	movff	?___flneg+3,efgtoa@g+3
  3753  001948                     l7292:
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3756  001948  0E00               	movlw	0
  3757  00194A  0100               	movlb	0	; () banked
  3758  00194C  6FB6               	movwf	(efgtoa@n+1)& (0+255),b
  3759  00194E  0E00               	movlw	0
  3760  001950  6FB5               	movwf	efgtoa@n& (0+255),b
  3761  001952                     
  3762                           ; BSR set to: 0
  3763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3764  001952  C134  F0A1         	movff	_width,efgtoa@w
  3765  001956  C135  F0A2         	movff	_width+1,efgtoa@w+1
  3766  00195A                     
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3769  00195A  519D               	movf	efgtoa@sign& (0+255),w,b
  3770  00195C  119E               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3771  00195E  A4D8               	btfss	status,2,c
  3772  001960  EFB4  F00C         	goto	u9621
  3773  001964  EFB6  F00C         	goto	u9620
  3774  001968                     u9621:
  3775  001968  EFBD  F00C         	goto	l7300
  3776  00196C                     u9620:
  3777  00196C                     
  3778                           ; BSR set to: 0
  3779  00196C  A45A               	btfss	_flags^0,2,c
  3780  00196E  EFBB  F00C         	goto	u9631
  3781  001972  EFBD  F00C         	goto	u9630
  3782  001976                     u9631:
  3783  001976  EFD7  F00C         	goto	l7312
  3784  00197A                     u9630:
  3785  00197A                     l7300:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3789  00197A  519D               	movf	efgtoa@sign& (0+255),w,b
  3790  00197C  119E               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3791  00197E  A4D8               	btfss	status,2,c
  3792  001980  EFC4  F00C         	goto	u9641
  3793  001984  EFC6  F00C         	goto	u9640
  3794  001988                     u9641:
  3795  001988  EFCC  F00C         	goto	l7304
  3796  00198C                     u9640:
  3797  00198C                     
  3798                           ; BSR set to: 0
  3799  00198C  0E00               	movlw	0
  3800  00198E  6F8A               	movwf	(_efgtoa$1349+1)& (0+255),b
  3801  001990  0E2B               	movlw	43
  3802  001992  6F89               	movwf	_efgtoa$1349& (0+255),b
  3803  001994  EFD0  F00C         	goto	l7306
  3804  001998                     l7304:
  3805                           
  3806                           ; BSR set to: 0
  3807  001998  0E00               	movlw	0
  3808  00199A  6F8A               	movwf	(_efgtoa$1349+1)& (0+255),b
  3809  00199C  0E2D               	movlw	45
  3810  00199E  6F89               	movwf	_efgtoa$1349& (0+255),b
  3811  0019A0                     l7306:
  3812                           
  3813                           ; BSR set to: 0
  3814  0019A0  C089  F13E         	movff	_efgtoa$1349,_dbuf
  3815  0019A4                     
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3818  0019A4  4BB5               	infsnz	efgtoa@n& (0+255),f,b
  3819  0019A6  2BB6               	incf	(efgtoa@n+1)& (0+255),f,b
  3820  0019A8                     
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3823  0019A8  07A1               	decf	efgtoa@w& (0+255),f,b
  3824  0019AA  A0D8               	btfss	status,0,c
  3825  0019AC  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  3826  0019AE                     l7312:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3830  0019AE  C0AF  F003         	movff	efgtoa@g,___fpclassifyf@x
  3831  0019B2  C0B0  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3832  0019B6  C0B1  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3833  0019BA  C0B2  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3834  0019BE  EC8A  F026         	call	___fpclassifyf	;wreg free
  3835  0019C2  0403               	decf	?___fpclassifyf^0,w,c
  3836  0019C4  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  3837  0019C6  A4D8               	btfss	status,2,c
  3838  0019C8  EFE8  F00C         	goto	u9651
  3839  0019CC  EFEA  F00C         	goto	u9650
  3840  0019D0                     u9651:
  3841  0019D0  EF34  F00D         	goto	l7330
  3842  0019D4                     u9650:
  3843  0019D4  0EBF               	movlw	191
  3844  0019D6  0100               	movlb	0	; () banked
  3845  0019D8  6F84               	movwf	??_efgtoa& (0+255),b
  3846  0019DA  0EFF               	movlw	255
  3847  0019DC  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3848  0019DE  5183               	movf	efgtoa@c& (0+255),w,b
  3849  0019E0  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3850  0019E2  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3851  0019E4  5184               	movf	??_efgtoa& (0+255),w,b
  3852  0019E6  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3853  0019E8  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3854  0019EA  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3855  0019EC  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3856  0019EE  E107               	bnz	u9661
  3857  0019F0  0E1A               	movlw	26
  3858  0019F2  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3859  0019F4  B0D8               	btfsc	status,0,c
  3860  0019F6  EFFF  F00C         	goto	u9661
  3861  0019FA  EF01  F00D         	goto	u9660
  3862  0019FE                     u9661:
  3863  0019FE  EF0F  F00D         	goto	l7322
  3864  001A02                     u9660:
  3865  001A02                     
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3868  001A02  0E3E               	movlw	low _dbuf
  3869  001A04  25B5               	addwf	efgtoa@n& (0+255),w,b
  3870  001A06  6E03               	movwf	strcpy@dest^0,c
  3871  001A08  0E01               	movlw	high _dbuf
  3872  001A0A  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3873  001A0C  6E04               	movwf	(strcpy@dest+1)^0,c
  3874  001A0E  0E34               	movlw	low STR_4
  3875  001A10  6E05               	movwf	strcpy@src^0,c
  3876  001A12  0E08               	movlw	high STR_4
  3877  001A14  6E06               	movwf	(strcpy@src+1)^0,c
  3878  001A16  EC5D  F02C         	call	_strcpy	;wreg free
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3881  001A1A  EF1B  F00D         	goto	l7324
  3882  001A1E                     l7322:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3886  001A1E  0E3E               	movlw	low _dbuf
  3887  001A20  25B5               	addwf	efgtoa@n& (0+255),w,b
  3888  001A22  6E03               	movwf	strcpy@dest^0,c
  3889  001A24  0E01               	movlw	high _dbuf
  3890  001A26  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3891  001A28  6E04               	movwf	(strcpy@dest+1)^0,c
  3892  001A2A  0E3C               	movlw	low STR_5
  3893  001A2C  6E05               	movwf	strcpy@src^0,c
  3894  001A2E  0E08               	movlw	high STR_5
  3895  001A30  6E06               	movwf	(strcpy@src+1)^0,c
  3896  001A32  EC5D  F02C         	call	_strcpy	;wreg free
  3897  001A36                     l7324:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3900  001A36  0100               	movlb	0	; () banked
  3901  001A38  0EFD               	movlw	253
  3902  001A3A  27A1               	addwf	efgtoa@w& (0+255),f,b
  3903  001A3C  0EFF               	movlw	255
  3904  001A3E  23A2               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3905  001A40                     l7326:
  3906                           
  3907                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3908  001A40  C07D  F013         	movff	efgtoa@fp,pad@fp
  3909  001A44  C07E  F014         	movff	efgtoa@fp+1,pad@fp+1
  3910  001A48  0E3E               	movlw	low _dbuf
  3911  001A4A  6E15               	movwf	pad@buf^0,c
  3912  001A4C  0E01               	movlw	high _dbuf
  3913  001A4E  6E16               	movwf	(pad@buf+1)^0,c
  3914  001A50  C0A1  F017         	movff	efgtoa@w,pad@p
  3915  001A54  C0A2  F018         	movff	efgtoa@w+1,pad@p+1
  3916  001A58  EC20  F029         	call	_pad	;wreg free
  3917  001A5C  C013  F07D         	movff	?_pad,?_efgtoa
  3918  001A60  C014  F07E         	movff	?_pad+1,?_efgtoa+1
  3919  001A64  EF7F  F012         	goto	l997
  3920  001A68                     l7330:
  3921                           
  3922                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  3923  001A68  C0AF  F003         	movff	efgtoa@g,___fpclassifyf@x
  3924  001A6C  C0B0  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3925  001A70  C0B1  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3926  001A74  C0B2  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3927  001A78  EC8A  F026         	call	___fpclassifyf	;wreg free
  3928  001A7C  5003               	movf	?___fpclassifyf^0,w,c
  3929  001A7E  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  3930  001A80  A4D8               	btfss	status,2,c
  3931  001A82  EF45  F00D         	goto	u9671
  3932  001A86  EF47  F00D         	goto	u9670
  3933  001A8A                     u9671:
  3934  001A8A  EF7A  F00D         	goto	l7348
  3935  001A8E                     u9670:
  3936  001A8E  0EBF               	movlw	191
  3937  001A90  0100               	movlb	0	; () banked
  3938  001A92  6F84               	movwf	??_efgtoa& (0+255),b
  3939  001A94  0EFF               	movlw	255
  3940  001A96  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  3941  001A98  5183               	movf	efgtoa@c& (0+255),w,b
  3942  001A9A  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  3943  001A9C  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  3944  001A9E  5184               	movf	??_efgtoa& (0+255),w,b
  3945  001AA0  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  3946  001AA2  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  3947  001AA4  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3948  001AA6  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  3949  001AA8  E107               	bnz	u9681
  3950  001AAA  0E1A               	movlw	26
  3951  001AAC  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  3952  001AAE  B0D8               	btfsc	status,0,c
  3953  001AB0  EF5C  F00D         	goto	u9681
  3954  001AB4  EF5E  F00D         	goto	u9680
  3955  001AB8                     u9681:
  3956  001AB8  EF6C  F00D         	goto	l7340
  3957  001ABC                     u9680:
  3958  001ABC                     
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3961  001ABC  0E3E               	movlw	low _dbuf
  3962  001ABE  25B5               	addwf	efgtoa@n& (0+255),w,b
  3963  001AC0  6E03               	movwf	strcpy@dest^0,c
  3964  001AC2  0E01               	movlw	high _dbuf
  3965  001AC4  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3966  001AC6  6E04               	movwf	(strcpy@dest+1)^0,c
  3967  001AC8  0E38               	movlw	low STR_8
  3968  001ACA  6E05               	movwf	strcpy@src^0,c
  3969  001ACC  0E08               	movlw	high STR_8
  3970  001ACE  6E06               	movwf	(strcpy@src+1)^0,c
  3971  001AD0  EC5D  F02C         	call	_strcpy	;wreg free
  3972                           
  3973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3974  001AD4  EF1B  F00D         	goto	l7324
  3975  001AD8                     l7340:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3979  001AD8  0E3E               	movlw	low _dbuf
  3980  001ADA  25B5               	addwf	efgtoa@n& (0+255),w,b
  3981  001ADC  6E03               	movwf	strcpy@dest^0,c
  3982  001ADE  0E01               	movlw	high _dbuf
  3983  001AE0  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3984  001AE2  6E04               	movwf	(strcpy@dest+1)^0,c
  3985  001AE4  0E40               	movlw	low STR_9
  3986  001AE6  6E05               	movwf	strcpy@src^0,c
  3987  001AE8  0E08               	movlw	high STR_9
  3988  001AEA  6E06               	movwf	(strcpy@src+1)^0,c
  3989  001AEC  EC5D  F02C         	call	_strcpy	;wreg free
  3990  001AF0  EF1B  F00D         	goto	l7324
  3991  001AF4                     l7348:
  3992                           
  3993                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3994  001AF4  0E00               	movlw	0
  3995  001AF6  0100               	movlb	0	; () banked
  3996  001AF8  6FB7               	movwf	efgtoa@u& (0+255),b
  3997  001AFA  0E00               	movlw	0
  3998  001AFC  6FB8               	movwf	(efgtoa@u+1)& (0+255),b
  3999  001AFE  0E80               	movlw	128
  4000  001B00  6FB9               	movwf	(efgtoa@u+2)& (0+255),b
  4001  001B02  0E3F               	movlw	63
  4002  001B04  6FBA               	movwf	(efgtoa@u+3)& (0+255),b
  4003                           
  4004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4005  001B06  0E00               	movlw	0
  4006  001B08  6FB4               	movwf	(efgtoa@e+1)& (0+255),b
  4007  001B0A  0E00               	movlw	0
  4008  001B0C  6FB3               	movwf	efgtoa@e& (0+255),b
  4009  001B0E                     
  4010                           ; BSR set to: 0
  4011                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4012  001B0E  C0AF  F003         	movff	efgtoa@g,___fleq@ff1
  4013  001B12  C0B0  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  4014  001B16  C0B1  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  4015  001B1A  C0B2  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  4016  001B1E  0E00               	movlw	0
  4017  001B20  6E07               	movwf	___fleq@ff2^0,c
  4018  001B22  0E00               	movlw	0
  4019  001B24  6E08               	movwf	(___fleq@ff2+1)^0,c
  4020  001B26  0E00               	movlw	0
  4021  001B28  6E09               	movwf	(___fleq@ff2+2)^0,c
  4022  001B2A  0E00               	movlw	0
  4023  001B2C  6E0A               	movwf	(___fleq@ff2+3)^0,c
  4024  001B2E  EC35  F02A         	call	___fleq	;wreg free
  4025  001B32  B0D8               	btfsc	status,0,c
  4026  001B34  EF9E  F00D         	goto	u9691
  4027  001B38  EFA0  F00D         	goto	u9690
  4028  001B3C                     u9691:
  4029  001B3C  EF23  F00E         	goto	l7366
  4030  001B40                     u9690:
  4031  001B40  EFBF  F00D         	goto	l7358
  4032  001B44                     l7354:
  4033                           
  4034                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4035  001B44  C0B7  F02D         	movff	efgtoa@u,___flmul@b
  4036  001B48  C0B8  F02E         	movff	efgtoa@u+1,___flmul@b+1
  4037  001B4C  C0B9  F02F         	movff	efgtoa@u+2,___flmul@b+2
  4038  001B50  C0BA  F030         	movff	efgtoa@u+3,___flmul@b+3
  4039  001B54  0E00               	movlw	0
  4040  001B56  6E31               	movwf	___flmul@a^0,c
  4041  001B58  0E00               	movlw	0
  4042  001B5A  6E32               	movwf	(___flmul@a+1)^0,c
  4043  001B5C  0E20               	movlw	32
  4044  001B5E  6E33               	movwf	(___flmul@a+2)^0,c
  4045  001B60  0E41               	movlw	65
  4046  001B62  6E34               	movwf	(___flmul@a+3)^0,c
  4047  001B64  EC53  F01A         	call	___flmul	;wreg free
  4048  001B68  C02D  F0B7         	movff	?___flmul,efgtoa@u
  4049  001B6C  C02E  F0B8         	movff	?___flmul+1,efgtoa@u+1
  4050  001B70  C02F  F0B9         	movff	?___flmul+2,efgtoa@u+2
  4051  001B74  C030  F0BA         	movff	?___flmul+3,efgtoa@u+3
  4052  001B78                     
  4053                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4054  001B78  0100               	movlb	0	; () banked
  4055  001B7A  4BB3               	infsnz	efgtoa@e& (0+255),f,b
  4056  001B7C  2BB4               	incf	(efgtoa@e+1)& (0+255),f,b
  4057  001B7E                     l7358:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4060  001B7E  C0AF  F046         	movff	efgtoa@g,___flge@ff1
  4061  001B82  C0B0  F047         	movff	efgtoa@g+1,___flge@ff1+1
  4062  001B86  C0B1  F048         	movff	efgtoa@g+2,___flge@ff1+2
  4063  001B8A  C0B2  F049         	movff	efgtoa@g+3,___flge@ff1+3
  4064  001B8E  0E00               	movlw	0
  4065  001B90  6E31               	movwf	___flmul@a^0,c
  4066  001B92  0E00               	movlw	0
  4067  001B94  6E32               	movwf	(___flmul@a+1)^0,c
  4068  001B96  0E20               	movlw	32
  4069  001B98  6E33               	movwf	(___flmul@a+2)^0,c
  4070  001B9A  0E41               	movlw	65
  4071  001B9C  6E34               	movwf	(___flmul@a+3)^0,c
  4072  001B9E  C0B7  F02D         	movff	efgtoa@u,___flmul@b
  4073  001BA2  C0B8  F02E         	movff	efgtoa@u+1,___flmul@b+1
  4074  001BA6  C0B9  F02F         	movff	efgtoa@u+2,___flmul@b+2
  4075  001BAA  C0BA  F030         	movff	efgtoa@u+3,___flmul@b+3
  4076  001BAE  EC53  F01A         	call	___flmul	;wreg free
  4077  001BB2  C02D  F04A         	movff	?___flmul,___flge@ff2
  4078  001BB6  C02E  F04B         	movff	?___flmul+1,___flge@ff2+1
  4079  001BBA  C02F  F04C         	movff	?___flmul+2,___flge@ff2+2
  4080  001BBE  C030  F04D         	movff	?___flmul+3,___flge@ff2+3
  4081  001BC2  EC08  F026         	call	___flge	;wreg free
  4082  001BC6  B0D8               	btfsc	status,0,c
  4083  001BC8  EFE8  F00D         	goto	u9701
  4084  001BCC  EFEA  F00D         	goto	u9700
  4085  001BD0                     u9701:
  4086  001BD0  EFA2  F00D         	goto	l7354
  4087  001BD4                     u9700:
  4088  001BD4  EF0A  F00E         	goto	l7364
  4089  001BD8                     l7360:
  4090                           
  4091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4092  001BD8  C0B7  F046         	movff	efgtoa@u,___fldiv@b
  4093  001BDC  C0B8  F047         	movff	efgtoa@u+1,___fldiv@b+1
  4094  001BE0  C0B9  F048         	movff	efgtoa@u+2,___fldiv@b+2
  4095  001BE4  C0BA  F049         	movff	efgtoa@u+3,___fldiv@b+3
  4096  001BE8  0E00               	movlw	0
  4097  001BEA  6E4A               	movwf	___fldiv@a^0,c
  4098  001BEC  0E00               	movlw	0
  4099  001BEE  6E4B               	movwf	(___fldiv@a+1)^0,c
  4100  001BF0  0E20               	movlw	32
  4101  001BF2  6E4C               	movwf	(___fldiv@a+2)^0,c
  4102  001BF4  0E41               	movlw	65
  4103  001BF6  6E4D               	movwf	(___fldiv@a+3)^0,c
  4104  001BF8  EC68  F01C         	call	___fldiv	;wreg free
  4105  001BFC  C046  F0B7         	movff	?___fldiv,efgtoa@u
  4106  001C00  C047  F0B8         	movff	?___fldiv+1,efgtoa@u+1
  4107  001C04  C048  F0B9         	movff	?___fldiv+2,efgtoa@u+2
  4108  001C08  C049  F0BA         	movff	?___fldiv+3,efgtoa@u+3
  4109  001C0C                     
  4110                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4111  001C0C  0100               	movlb	0	; () banked
  4112  001C0E  07B3               	decf	efgtoa@e& (0+255),f,b
  4113  001C10  A0D8               	btfss	status,0,c
  4114  001C12  07B4               	decf	(efgtoa@e+1)& (0+255),f,b
  4115  001C14                     l7364:
  4116                           
  4117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4118  001C14  C0AF  F046         	movff	efgtoa@g,___flge@ff1
  4119  001C18  C0B0  F047         	movff	efgtoa@g+1,___flge@ff1+1
  4120  001C1C  C0B1  F048         	movff	efgtoa@g+2,___flge@ff1+2
  4121  001C20  C0B2  F049         	movff	efgtoa@g+3,___flge@ff1+3
  4122  001C24  C0B7  F04A         	movff	efgtoa@u,___flge@ff2
  4123  001C28  C0B8  F04B         	movff	efgtoa@u+1,___flge@ff2+1
  4124  001C2C  C0B9  F04C         	movff	efgtoa@u+2,___flge@ff2+2
  4125  001C30  C0BA  F04D         	movff	efgtoa@u+3,___flge@ff2+3
  4126  001C34  EC08  F026         	call	___flge	;wreg free
  4127  001C38  A0D8               	btfss	status,0,c
  4128  001C3A  EF21  F00E         	goto	u9711
  4129  001C3E  EF23  F00E         	goto	u9710
  4130  001C42                     u9711:
  4131  001C42  EFEC  F00D         	goto	l7360
  4132  001C46                     u9710:
  4133  001C46                     l7366:
  4134                           
  4135                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4136  001C46  C083  F009         	movff	efgtoa@c,tolower@c
  4137  001C4A  6A0A               	clrf	(tolower@c+1)^0,c
  4138  001C4C  EC2F  F02D         	call	_tolower	;wreg free
  4139  001C50  5009               	movf	?_tolower^0,w,c
  4140  001C52  0100               	movlb	0	; () banked
  4141  001C54  6FA4               	movwf	efgtoa@mode& (0+255),b
  4142  001C56                     
  4143                           ; BSR set to: 0
  4144                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4145  001C56  C0A4  F0A3         	movff	efgtoa@mode,efgtoa@nmode
  4146  001C5A                     
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4149  001C5A  0E67               	movlw	103
  4150  001C5C  19A4               	xorwf	efgtoa@mode& (0+255),w,b
  4151  001C5E  A4D8               	btfss	status,2,c
  4152  001C60  EF34  F00E         	goto	u9721
  4153  001C64  EF36  F00E         	goto	u9720
  4154  001C68                     u9721:
  4155  001C68  EF5C  F00E         	goto	l7380
  4156  001C6C                     u9720:
  4157  001C6C                     
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4160  001C6C  51F7               	movf	_prec& (0+255),w,b
  4161  001C6E  11F8               	iorwf	(_prec+1)& (0+255),w,b
  4162  001C70  A4D8               	btfss	status,2,c
  4163  001C72  EF3D  F00E         	goto	u9731
  4164  001C76  EF3F  F00E         	goto	u9730
  4165  001C7A                     u9731:
  4166  001C7A  EF43  F00E         	goto	l7376
  4167  001C7E                     u9730:
  4168  001C7E                     
  4169                           ; BSR set to: 0
  4170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4171  001C7E  0E00               	movlw	0
  4172  001C80  6FF8               	movwf	(_prec+1)& (0+255),b
  4173  001C82  0E01               	movlw	1
  4174  001C84  6FF7               	movwf	_prec& (0+255),b
  4175  001C86                     l7376:
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4179  001C86  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  4180  001C88  EF50  F00E         	goto	u9740
  4181  001C8C  51F8               	movf	(_prec+1)& (0+255),w,b
  4182  001C8E  E106               	bnz	u9741
  4183  001C90  05F7               	decf	_prec& (0+255),w,b
  4184  001C92  B0D8               	btfsc	status,0,c
  4185  001C94  EF4E  F00E         	goto	u9741
  4186  001C98  EF50  F00E         	goto	u9740
  4187  001C9C                     u9741:
  4188  001C9C  EF56  F00E         	goto	l1013
  4189  001CA0                     u9740:
  4190  001CA0                     l7378:
  4191                           
  4192                           ; BSR set to: 0
  4193  001CA0  0E00               	movlw	0
  4194  001CA2  6FA0               	movwf	(efgtoa@p+1)& (0+255),b
  4195  001CA4  0E06               	movlw	6
  4196  001CA6  6F9F               	movwf	efgtoa@p& (0+255),b
  4197  001CA8  EF65  F00E         	goto	l7386
  4198  001CAC                     l1013:
  4199                           
  4200                           ; BSR set to: 0
  4201  001CAC  C0F7  F09F         	movff	_prec,efgtoa@p
  4202  001CB0  C0F8  F0A0         	movff	_prec+1,efgtoa@p+1
  4203  001CB4  EF65  F00E         	goto	l7386
  4204  001CB8                     l7380:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4208  001CB8  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  4209  001CBA  EF61  F00E         	goto	u9751
  4210  001CBE  EF63  F00E         	goto	u9750
  4211  001CC2                     u9751:
  4212  001CC2  EF50  F00E         	goto	l7378
  4213  001CC6                     u9750:
  4214  001CC6  EF56  F00E         	goto	l1013
  4215  001CCA                     l7386:
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4219  001CCA  0E67               	movlw	103
  4220  001CCC  19A4               	xorwf	efgtoa@mode& (0+255),w,b
  4221  001CCE  A4D8               	btfss	status,2,c
  4222  001CD0  EF6C  F00E         	goto	u9761
  4223  001CD4  EF6E  F00E         	goto	u9760
  4224  001CD8                     u9761:
  4225  001CD8  EF9D  F00E         	goto	l7396
  4226  001CDC                     u9760:
  4227  001CDC                     
  4228                           ; BSR set to: 0
  4229                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4230  001CDC  AFB4               	btfss	(efgtoa@e+1)& (0+255),7,b
  4231  001CDE  EF7C  F00E         	goto	u9770
  4232  001CE2  0EFC               	movlw	252
  4233  001CE4  5DB3               	subwf	efgtoa@e& (0+255),w,b
  4234  001CE6  0EFF               	movlw	255
  4235  001CE8  59B4               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4236  001CEA  A0D8               	btfss	status,0,c
  4237  001CEC  EF7A  F00E         	goto	u9771
  4238  001CF0  EF7C  F00E         	goto	u9770
  4239  001CF4                     u9771:
  4240  001CF4  EF9B  F00E         	goto	l7394
  4241  001CF8                     u9770:
  4242  001CF8                     
  4243                           ; BSR set to: 0
  4244  001CF8  0EFF               	movlw	255
  4245  001CFA  6F84               	movwf	??_efgtoa& (0+255),b
  4246  001CFC  0EFF               	movlw	255
  4247  001CFE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  4248  001D00  C09F  F086         	movff	efgtoa@p,??_efgtoa+2
  4249  001D04  C0A0  F087         	movff	efgtoa@p+1,??_efgtoa+3
  4250  001D08  5184               	movf	??_efgtoa& (0+255),w,b
  4251  001D0A  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  4252  001D0C  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  4253  001D0E  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4254  001D10  51B3               	movf	efgtoa@e& (0+255),w,b
  4255  001D12  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  4256  001D14  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  4257  001D16  0A80               	xorlw	128
  4258  001D18  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  4259  001D1A  51B4               	movf	(efgtoa@e+1)& (0+255),w,b
  4260  001D1C  0A80               	xorlw	128
  4261  001D1E  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4262  001D20  A0D8               	btfss	status,0,c
  4263  001D22  EF95  F00E         	goto	u9781
  4264  001D26  EF97  F00E         	goto	u9780
  4265  001D2A                     u9781:
  4266  001D2A  EF9B  F00E         	goto	l7394
  4267  001D2E                     u9780:
  4268  001D2E                     
  4269                           ; BSR set to: 0
  4270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4271  001D2E  0E66               	movlw	102
  4272  001D30  6FA3               	movwf	efgtoa@nmode& (0+255),b
  4273                           
  4274                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4275  001D32  EF9D  F00E         	goto	l7396
  4276  001D36                     l7394:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4280  001D36  0E65               	movlw	101
  4281  001D38  6FA3               	movwf	efgtoa@nmode& (0+255),b
  4282  001D3A                     l7396:
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4286  001D3A  C09F  F095         	movff	efgtoa@p,efgtoa@m
  4287  001D3E  C0A0  F096         	movff	efgtoa@p+1,efgtoa@m+1
  4288  001D42                     
  4289                           ; BSR set to: 0
  4290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4291  001D42  0E67               	movlw	103
  4292  001D44  19A4               	xorwf	efgtoa@mode& (0+255),w,b
  4293  001D46  A4D8               	btfss	status,2,c
  4294  001D48  EFA8  F00E         	goto	u9791
  4295  001D4C  EFAA  F00E         	goto	u9790
  4296  001D50                     u9791:
  4297  001D50  EFBA  F00E         	goto	l7404
  4298  001D54                     u9790:
  4299  001D54                     
  4300                           ; BSR set to: 0
  4301  001D54  0E66               	movlw	102
  4302  001D56  19A3               	xorwf	efgtoa@nmode& (0+255),w,b
  4303  001D58  A4D8               	btfss	status,2,c
  4304  001D5A  EFB1  F00E         	goto	u9801
  4305  001D5E  EFB3  F00E         	goto	u9800
  4306  001D62                     u9801:
  4307  001D62  EFBC  F00E         	goto	l7406
  4308  001D66                     u9800:
  4309  001D66                     
  4310                           ; BSR set to: 0
  4311  001D66  BFB4               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4312  001D68  EFBA  F00E         	goto	u9810
  4313  001D6C  EFB8  F00E         	goto	u9811
  4314  001D70                     u9811:
  4315  001D70  EFBC  F00E         	goto	l7406
  4316  001D74                     u9810:
  4317  001D74                     l7404:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4321  001D74  4B95               	infsnz	efgtoa@m& (0+255),f,b
  4322  001D76  2B96               	incf	(efgtoa@m+1)& (0+255),f,b
  4323  001D78                     l7406:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4327  001D78  0E66               	movlw	102
  4328  001D7A  19A3               	xorwf	efgtoa@nmode& (0+255),w,b
  4329  001D7C  A4D8               	btfss	status,2,c
  4330  001D7E  EFC3  F00E         	goto	u9821
  4331  001D82  EFC5  F00E         	goto	u9820
  4332  001D86                     u9821:
  4333  001D86  EFE5  F00E         	goto	l7416
  4334  001D8A                     u9820:
  4335  001D8A                     
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4338  001D8A  BFB4               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4339  001D8C  EFCC  F00E         	goto	u9830
  4340  001D90  EFCA  F00E         	goto	u9831
  4341  001D94                     u9831:
  4342  001D94  EFD8  F00E         	goto	l7412
  4343  001D98                     u9830:
  4344  001D98                     
  4345                           ; BSR set to: 0
  4346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4347  001D98  0E00               	movlw	0
  4348  001D9A  6FB7               	movwf	efgtoa@u& (0+255),b
  4349  001D9C  0E00               	movlw	0
  4350  001D9E  6FB8               	movwf	(efgtoa@u+1)& (0+255),b
  4351  001DA0  0E80               	movlw	128
  4352  001DA2  6FB9               	movwf	(efgtoa@u+2)& (0+255),b
  4353  001DA4  0E3F               	movlw	63
  4354  001DA6  6FBA               	movwf	(efgtoa@u+3)& (0+255),b
  4355                           
  4356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4357  001DA8  0E00               	movlw	0
  4358  001DAA  6FB4               	movwf	(efgtoa@e+1)& (0+255),b
  4359  001DAC  0E00               	movlw	0
  4360  001DAE  6FB3               	movwf	efgtoa@e& (0+255),b
  4361  001DB0                     l7412:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4365  001DB0  0E67               	movlw	103
  4366  001DB2  19A4               	xorwf	efgtoa@mode& (0+255),w,b
  4367  001DB4  B4D8               	btfsc	status,2,c
  4368  001DB6  EFDF  F00E         	goto	u9841
  4369  001DBA  EFE1  F00E         	goto	u9840
  4370  001DBE                     u9841:
  4371  001DBE  EFE5  F00E         	goto	l7416
  4372  001DC2                     u9840:
  4373  001DC2                     
  4374                           ; BSR set to: 0
  4375                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4376  001DC2  51B3               	movf	efgtoa@e& (0+255),w,b
  4377  001DC4  2795               	addwf	efgtoa@m& (0+255),f,b
  4378  001DC6  51B4               	movf	(efgtoa@e+1)& (0+255),w,b
  4379  001DC8  2396               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4380  001DCA                     l7416:
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4384  001DCA  0E00               	movlw	0
  4385  001DCC  6FAE               	movwf	(efgtoa@i+1)& (0+255),b
  4386  001DCE  0E00               	movlw	0
  4387  001DD0  6FAD               	movwf	efgtoa@i& (0+255),b
  4388  001DD2                     
  4389                           ; BSR set to: 0
  4390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4391  001DD2  C0AF  F0A5         	movff	efgtoa@g,efgtoa@h
  4392  001DD6  C0B0  F0A6         	movff	efgtoa@g+1,efgtoa@h+1
  4393  001DDA  C0B1  F0A7         	movff	efgtoa@g+2,efgtoa@h+2
  4394  001DDE  C0B2  F0A8         	movff	efgtoa@g+3,efgtoa@h+3
  4395  001DE2                     
  4396                           ; BSR set to: 0
  4397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4398  001DE2  C0B7  F097         	movff	efgtoa@u,efgtoa@ou
  4399  001DE6  C0B8  F098         	movff	efgtoa@u+1,efgtoa@ou+1
  4400  001DEA  C0B9  F099         	movff	efgtoa@u+2,efgtoa@ou+2
  4401  001DEE  C0BA  F09A         	movff	efgtoa@u+3,efgtoa@ou+3
  4402                           
  4403                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4404  001DF2  EF76  F00F         	goto	l7430
  4405  001DF6                     l7422:
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4409  001DF6  C0A5  F046         	movff	efgtoa@h,___fldiv@b
  4410  001DFA  C0A6  F047         	movff	efgtoa@h+1,___fldiv@b+1
  4411  001DFE  C0A7  F048         	movff	efgtoa@h+2,___fldiv@b+2
  4412  001E02  C0A8  F049         	movff	efgtoa@h+3,___fldiv@b+3
  4413  001E06  C0B7  F04A         	movff	efgtoa@u,___fldiv@a
  4414  001E0A  C0B8  F04B         	movff	efgtoa@u+1,___fldiv@a+1
  4415  001E0E  C0B9  F04C         	movff	efgtoa@u+2,___fldiv@a+2
  4416  001E12  C0BA  F04D         	movff	efgtoa@u+3,___fldiv@a+3
  4417  001E16  EC68  F01C         	call	___fldiv	;wreg free
  4418  001E1A  C046  F052         	movff	?___fldiv,floorf@x
  4419  001E1E  C047  F053         	movff	?___fldiv+1,floorf@x+1
  4420  001E22  C048  F054         	movff	?___fldiv+2,floorf@x+2
  4421  001E26  C049  F055         	movff	?___fldiv+3,floorf@x+3
  4422  001E2A  ECC3  F020         	call	_floorf	;wreg free
  4423  001E2E  C052  F0A9         	movff	?_floorf,efgtoa@l
  4424  001E32  C053  F0AA         	movff	?_floorf+1,efgtoa@l+1
  4425  001E36  C054  F0AB         	movff	?_floorf+2,efgtoa@l+2
  4426  001E3A  C055  F0AC         	movff	?_floorf+3,efgtoa@l+3
  4427                           
  4428                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4429  001E3E  C0A9  F052         	movff	efgtoa@l,___fltol@f1
  4430  001E42  C0AA  F053         	movff	efgtoa@l+1,___fltol@f1+1
  4431  001E46  C0AB  F054         	movff	efgtoa@l+2,___fltol@f1+2
  4432  001E4A  C0AC  F055         	movff	efgtoa@l+3,___fltol@f1+3
  4433  001E4E  EC84  F025         	call	___fltol	;wreg free
  4434  001E52  C052  F09B         	movff	?___fltol,efgtoa@d
  4435  001E56  C053  F09C         	movff	?___fltol+1,efgtoa@d+1
  4436  001E5A                     
  4437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4438  001E5A  C0A5  F025         	movff	efgtoa@h,___flsub@b
  4439  001E5E  C0A6  F026         	movff	efgtoa@h+1,___flsub@b+1
  4440  001E62  C0A7  F027         	movff	efgtoa@h+2,___flsub@b+2
  4441  001E66  C0A8  F028         	movff	efgtoa@h+3,___flsub@b+3
  4442  001E6A  C0B7  F031         	movff	efgtoa@u,___flmul@a
  4443  001E6E  C0B8  F032         	movff	efgtoa@u+1,___flmul@a+1
  4444  001E72  C0B9  F033         	movff	efgtoa@u+2,___flmul@a+2
  4445  001E76  C0BA  F034         	movff	efgtoa@u+3,___flmul@a+3
  4446  001E7A  C0A9  F02D         	movff	efgtoa@l,___flmul@b
  4447  001E7E  C0AA  F02E         	movff	efgtoa@l+1,___flmul@b+1
  4448  001E82  C0AB  F02F         	movff	efgtoa@l+2,___flmul@b+2
  4449  001E86  C0AC  F030         	movff	efgtoa@l+3,___flmul@b+3
  4450  001E8A  EC53  F01A         	call	___flmul	;wreg free
  4451  001E8E  C02D  F029         	movff	?___flmul,___flsub@a
  4452  001E92  C02E  F02A         	movff	?___flmul+1,___flsub@a+1
  4453  001E96  C02F  F02B         	movff	?___flmul+2,___flsub@a+2
  4454  001E9A  C030  F02C         	movff	?___flmul+3,___flsub@a+3
  4455  001E9E  EC52  F02D         	call	___flsub	;wreg free
  4456  001EA2  C025  F0A5         	movff	?___flsub,efgtoa@h
  4457  001EA6  C026  F0A6         	movff	?___flsub+1,efgtoa@h+1
  4458  001EAA  C027  F0A7         	movff	?___flsub+2,efgtoa@h+2
  4459  001EAE  C028  F0A8         	movff	?___flsub+3,efgtoa@h+3
  4460  001EB2                     
  4461                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4462  001EB2  C0B7  F046         	movff	efgtoa@u,___fldiv@b
  4463  001EB6  C0B8  F047         	movff	efgtoa@u+1,___fldiv@b+1
  4464  001EBA  C0B9  F048         	movff	efgtoa@u+2,___fldiv@b+2
  4465  001EBE  C0BA  F049         	movff	efgtoa@u+3,___fldiv@b+3
  4466  001EC2  0E00               	movlw	0
  4467  001EC4  6E4A               	movwf	___fldiv@a^0,c
  4468  001EC6  0E00               	movlw	0
  4469  001EC8  6E4B               	movwf	(___fldiv@a+1)^0,c
  4470  001ECA  0E20               	movlw	32
  4471  001ECC  6E4C               	movwf	(___fldiv@a+2)^0,c
  4472  001ECE  0E41               	movlw	65
  4473  001ED0  6E4D               	movwf	(___fldiv@a+3)^0,c
  4474  001ED2  EC68  F01C         	call	___fldiv	;wreg free
  4475  001ED6  C046  F0B7         	movff	?___fldiv,efgtoa@u
  4476  001EDA  C047  F0B8         	movff	?___fldiv+1,efgtoa@u+1
  4477  001EDE  C048  F0B9         	movff	?___fldiv+2,efgtoa@u+2
  4478  001EE2  C049  F0BA         	movff	?___fldiv+3,efgtoa@u+3
  4479  001EE6                     
  4480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4481  001EE6  0100               	movlb	0	; () banked
  4482  001EE8  4BAD               	infsnz	efgtoa@i& (0+255),f,b
  4483  001EEA  2BAE               	incf	(efgtoa@i+1)& (0+255),f,b
  4484  001EEC                     l7430:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4488  001EEC  5195               	movf	efgtoa@m& (0+255),w,b
  4489  001EEE  5DAD               	subwf	efgtoa@i& (0+255),w,b
  4490  001EF0  51AE               	movf	(efgtoa@i+1)& (0+255),w,b
  4491  001EF2  0A80               	xorlw	128
  4492  001EF4  6F84               	movwf	??_efgtoa& (0+255),b
  4493  001EF6  5196               	movf	(efgtoa@m+1)& (0+255),w,b
  4494  001EF8  0A80               	xorlw	128
  4495  001EFA  5984               	subwfb	??_efgtoa& (0+255),w,b
  4496  001EFC  A0D8               	btfss	status,0,c
  4497  001EFE  EF83  F00F         	goto	u9851
  4498  001F02  EF85  F00F         	goto	u9850
  4499  001F06                     u9851:
  4500  001F06  EFFB  F00E         	goto	l7422
  4501  001F0A                     u9850:
  4502  001F0A                     
  4503                           ; BSR set to: 0
  4504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4505  001F0A  C0B7  F02D         	movff	efgtoa@u,___flmul@b
  4506  001F0E  C0B8  F02E         	movff	efgtoa@u+1,___flmul@b+1
  4507  001F12  C0B9  F02F         	movff	efgtoa@u+2,___flmul@b+2
  4508  001F16  C0BA  F030         	movff	efgtoa@u+3,___flmul@b+3
  4509  001F1A  0E00               	movlw	0
  4510  001F1C  6E31               	movwf	___flmul@a^0,c
  4511  001F1E  0E00               	movlw	0
  4512  001F20  6E32               	movwf	(___flmul@a+1)^0,c
  4513  001F22  0EA0               	movlw	160
  4514  001F24  6E33               	movwf	(___flmul@a+2)^0,c
  4515  001F26  0E40               	movlw	64
  4516  001F28  6E34               	movwf	(___flmul@a+3)^0,c
  4517  001F2A  EC53  F01A         	call	___flmul	;wreg free
  4518  001F2E  C02D  F0A9         	movff	?___flmul,efgtoa@l
  4519  001F32  C02E  F0AA         	movff	?___flmul+1,efgtoa@l+1
  4520  001F36  C02F  F0AB         	movff	?___flmul+2,efgtoa@l+2
  4521  001F3A  C030  F0AC         	movff	?___flmul+3,efgtoa@l+3
  4522  001F3E                     
  4523                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4524  001F3E  C0A5  F046         	movff	efgtoa@h,___flge@ff1
  4525  001F42  C0A6  F047         	movff	efgtoa@h+1,___flge@ff1+1
  4526  001F46  C0A7  F048         	movff	efgtoa@h+2,___flge@ff1+2
  4527  001F4A  C0A8  F049         	movff	efgtoa@h+3,___flge@ff1+3
  4528  001F4E  C0A9  F04A         	movff	efgtoa@l,___flge@ff2
  4529  001F52  C0AA  F04B         	movff	efgtoa@l+1,___flge@ff2+1
  4530  001F56  C0AB  F04C         	movff	efgtoa@l+2,___flge@ff2+2
  4531  001F5A  C0AC  F04D         	movff	efgtoa@l+3,___flge@ff2+3
  4532  001F5E  EC08  F026         	call	___flge	;wreg free
  4533  001F62  B0D8               	btfsc	status,0,c
  4534  001F64  EFB6  F00F         	goto	u9861
  4535  001F68  EFB8  F00F         	goto	u9860
  4536  001F6C                     u9861:
  4537  001F6C  EFC3  F00F         	goto	l7438
  4538  001F70                     u9860:
  4539  001F70                     
  4540                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4541  001F70  0E00               	movlw	0
  4542  001F72  0100               	movlb	0	; () banked
  4543  001F74  6FA9               	movwf	efgtoa@l& (0+255),b
  4544  001F76  0E00               	movlw	0
  4545  001F78  6FAA               	movwf	(efgtoa@l+1)& (0+255),b
  4546  001F7A  0E00               	movlw	0
  4547  001F7C  6FAB               	movwf	(efgtoa@l+2)& (0+255),b
  4548  001F7E  0E00               	movlw	0
  4549  001F80  6FAC               	movwf	(efgtoa@l+3)& (0+255),b
  4550                           
  4551                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4552  001F82  EFEC  F00F         	goto	l7444
  4553  001F86                     l7438:
  4554                           
  4555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4556  001F86  C0A5  F003         	movff	efgtoa@h,___fleq@ff1
  4557  001F8A  C0A6  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  4558  001F8E  C0A7  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  4559  001F92  C0A8  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  4560  001F96  C0A9  F007         	movff	efgtoa@l,___fleq@ff2
  4561  001F9A  C0AA  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  4562  001F9E  C0AB  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  4563  001FA2  C0AC  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  4564  001FA6  EC35  F02A         	call	___fleq	;wreg free
  4565  001FAA  A0D8               	btfss	status,0,c
  4566  001FAC  EFDA  F00F         	goto	u9871
  4567  001FB0  EFDC  F00F         	goto	u9870
  4568  001FB4                     u9871:
  4569  001FB4  EFEC  F00F         	goto	l7444
  4570  001FB8                     u9870:
  4571  001FB8  0100               	movlb	0	; () banked
  4572  001FBA  B19B               	btfsc	efgtoa@d& (0+255),0,b
  4573  001FBC  EFE2  F00F         	goto	u9881
  4574  001FC0  EFE4  F00F         	goto	u9880
  4575  001FC4                     u9881:
  4576  001FC4  EFEC  F00F         	goto	l7444
  4577  001FC8                     u9880:
  4578  001FC8                     
  4579                           ; BSR set to: 0
  4580                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4581  001FC8  0E00               	movlw	0
  4582  001FCA  6FA9               	movwf	efgtoa@l& (0+255),b
  4583  001FCC  0E00               	movlw	0
  4584  001FCE  6FAA               	movwf	(efgtoa@l+1)& (0+255),b
  4585  001FD0  0E00               	movlw	0
  4586  001FD2  6FAB               	movwf	(efgtoa@l+2)& (0+255),b
  4587  001FD4  0E00               	movlw	0
  4588  001FD6  6FAC               	movwf	(efgtoa@l+3)& (0+255),b
  4589  001FD8                     l7444:
  4590                           
  4591                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4592  001FD8  C0AF  F015         	movff	efgtoa@g,___fladd@b
  4593  001FDC  C0B0  F016         	movff	efgtoa@g+1,___fladd@b+1
  4594  001FE0  C0B1  F017         	movff	efgtoa@g+2,___fladd@b+2
  4595  001FE4  C0B2  F018         	movff	efgtoa@g+3,___fladd@b+3
  4596  001FE8  C0A9  F019         	movff	efgtoa@l,___fladd@a
  4597  001FEC  C0AA  F01A         	movff	efgtoa@l+1,___fladd@a+1
  4598  001FF0  C0AB  F01B         	movff	efgtoa@l+2,___fladd@a+2
  4599  001FF4  C0AC  F01C         	movff	efgtoa@l+3,___fladd@a+3
  4600  001FF8  ECD3  F015         	call	___fladd	;wreg free
  4601  001FFC  C015  F0A5         	movff	?___fladd,efgtoa@h
  4602  002000  C016  F0A6         	movff	?___fladd+1,efgtoa@h+1
  4603  002004  C017  F0A7         	movff	?___fladd+2,efgtoa@h+2
  4604  002008  C018  F0A8         	movff	?___fladd+3,efgtoa@h+3
  4605  00200C                     
  4606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4607  00200C  C0A5  F046         	movff	efgtoa@h,___flge@ff1
  4608  002010  C0A6  F047         	movff	efgtoa@h+1,___flge@ff1+1
  4609  002014  C0A7  F048         	movff	efgtoa@h+2,___flge@ff1+2
  4610  002018  C0A8  F049         	movff	efgtoa@h+3,___flge@ff1+3
  4611  00201C  0E00               	movlw	0
  4612  00201E  6E31               	movwf	___flmul@a^0,c
  4613  002020  0E00               	movlw	0
  4614  002022  6E32               	movwf	(___flmul@a+1)^0,c
  4615  002024  0E20               	movlw	32
  4616  002026  6E33               	movwf	(___flmul@a+2)^0,c
  4617  002028  0E41               	movlw	65
  4618  00202A  6E34               	movwf	(___flmul@a+3)^0,c
  4619  00202C  C097  F02D         	movff	efgtoa@ou,___flmul@b
  4620  002030  C098  F02E         	movff	efgtoa@ou+1,___flmul@b+1
  4621  002034  C099  F02F         	movff	efgtoa@ou+2,___flmul@b+2
  4622  002038  C09A  F030         	movff	efgtoa@ou+3,___flmul@b+3
  4623  00203C  EC53  F01A         	call	___flmul	;wreg free
  4624  002040  C02D  F04A         	movff	?___flmul,___flge@ff2
  4625  002044  C02E  F04B         	movff	?___flmul+1,___flge@ff2+1
  4626  002048  C02F  F04C         	movff	?___flmul+2,___flge@ff2+2
  4627  00204C  C030  F04D         	movff	?___flmul+3,___flge@ff2+3
  4628  002050  EC08  F026         	call	___flge	;wreg free
  4629  002054  A0D8               	btfss	status,0,c
  4630  002056  EF2F  F010         	goto	u9891
  4631  00205A  EF31  F010         	goto	u9890
  4632  00205E                     u9891:
  4633  00205E  EF5A  F010         	goto	l7456
  4634  002062                     u9890:
  4635  002062                     
  4636                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  4637  002062  0100               	movlb	0	; () banked
  4638  002064  4BB3               	infsnz	efgtoa@e& (0+255),f,b
  4639  002066  2BB4               	incf	(efgtoa@e+1)& (0+255),f,b
  4640  002068                     
  4641                           ; BSR set to: 0
  4642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4643  002068  C097  F02D         	movff	efgtoa@ou,___flmul@b
  4644  00206C  C098  F02E         	movff	efgtoa@ou+1,___flmul@b+1
  4645  002070  C099  F02F         	movff	efgtoa@ou+2,___flmul@b+2
  4646  002074  C09A  F030         	movff	efgtoa@ou+3,___flmul@b+3
  4647  002078  0E00               	movlw	0
  4648  00207A  6E31               	movwf	___flmul@a^0,c
  4649  00207C  0E00               	movlw	0
  4650  00207E  6E32               	movwf	(___flmul@a+1)^0,c
  4651  002080  0E20               	movlw	32
  4652  002082  6E33               	movwf	(___flmul@a+2)^0,c
  4653  002084  0E41               	movlw	65
  4654  002086  6E34               	movwf	(___flmul@a+3)^0,c
  4655  002088  EC53  F01A         	call	___flmul	;wreg free
  4656  00208C  C02D  F097         	movff	?___flmul,efgtoa@ou
  4657  002090  C02E  F098         	movff	?___flmul+1,efgtoa@ou+1
  4658  002094  C02F  F099         	movff	?___flmul+2,efgtoa@ou+2
  4659  002098  C030  F09A         	movff	?___flmul+3,efgtoa@ou+3
  4660  00209C                     
  4661                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4662  00209C  0E66               	movlw	102
  4663  00209E  0100               	movlb	0	; () banked
  4664  0020A0  19A3               	xorwf	efgtoa@nmode& (0+255),w,b
  4665  0020A2  A4D8               	btfss	status,2,c
  4666  0020A4  EF56  F010         	goto	u9901
  4667  0020A8  EF58  F010         	goto	u9900
  4668  0020AC                     u9901:
  4669  0020AC  EF5A  F010         	goto	l7456
  4670  0020B0                     u9900:
  4671  0020B0                     
  4672                           ; BSR set to: 0
  4673                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  4674  0020B0  4B95               	infsnz	efgtoa@m& (0+255),f,b
  4675  0020B2  2B96               	incf	(efgtoa@m+1)& (0+255),f,b
  4676  0020B4                     l7456:
  4677                           
  4678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4679  0020B4  C097  F0B7         	movff	efgtoa@ou,efgtoa@u
  4680  0020B8  C098  F0B8         	movff	efgtoa@ou+1,efgtoa@u+1
  4681  0020BC  C099  F0B9         	movff	efgtoa@ou+2,efgtoa@u+2
  4682  0020C0  C09A  F0BA         	movff	efgtoa@ou+3,efgtoa@u+3
  4683  0020C4                     
  4684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4685  0020C4  0E65               	movlw	101
  4686  0020C6  0100               	movlb	0	; () banked
  4687  0020C8  19A3               	xorwf	efgtoa@nmode& (0+255),w,b
  4688  0020CA  B4D8               	btfsc	status,2,c
  4689  0020CC  EF6A  F010         	goto	u9911
  4690  0020D0  EF6C  F010         	goto	u9910
  4691  0020D4                     u9911:
  4692  0020D4  EF72  F010         	goto	l7462
  4693  0020D8                     u9910:
  4694  0020D8                     
  4695                           ; BSR set to: 0
  4696  0020D8  C0B3  F093         	movff	efgtoa@e,efgtoa@ne
  4697  0020DC  C0B4  F094         	movff	efgtoa@e+1,efgtoa@ne+1
  4698  0020E0  EF76  F010         	goto	l1041
  4699  0020E4                     l7462:
  4700                           
  4701                           ; BSR set to: 0
  4702  0020E4  0E00               	movlw	0
  4703  0020E6  6F94               	movwf	(efgtoa@ne+1)& (0+255),b
  4704  0020E8  0E00               	movlw	0
  4705  0020EA  6F93               	movwf	efgtoa@ne& (0+255),b
  4706  0020EC                     l1041:
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4710  0020EC  0E00               	movlw	0
  4711  0020EE  6F92               	movwf	(efgtoa@pp+1)& (0+255),b
  4712  0020F0  0E00               	movlw	0
  4713  0020F2  6F91               	movwf	efgtoa@pp& (0+255),b
  4714                           
  4715                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4716  0020F4  0E00               	movlw	0
  4717  0020F6  6F90               	movwf	(efgtoa@t+1)& (0+255),b
  4718  0020F8  0E00               	movlw	0
  4719  0020FA  6F8F               	movwf	efgtoa@t& (0+255),b
  4720                           
  4721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4722  0020FC  0E00               	movlw	0
  4723  0020FE  6FAE               	movwf	(efgtoa@i+1)& (0+255),b
  4724  002100  0E00               	movlw	0
  4725  002102  6FAD               	movwf	efgtoa@i& (0+255),b
  4726                           
  4727                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4728  002104  EF72  F011         	goto	l7512
  4729  002108                     l7464:
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4733  002108  C0A5  F046         	movff	efgtoa@h,___fldiv@b
  4734  00210C  C0A6  F047         	movff	efgtoa@h+1,___fldiv@b+1
  4735  002110  C0A7  F048         	movff	efgtoa@h+2,___fldiv@b+2
  4736  002114  C0A8  F049         	movff	efgtoa@h+3,___fldiv@b+3
  4737  002118  C0B7  F04A         	movff	efgtoa@u,___fldiv@a
  4738  00211C  C0B8  F04B         	movff	efgtoa@u+1,___fldiv@a+1
  4739  002120  C0B9  F04C         	movff	efgtoa@u+2,___fldiv@a+2
  4740  002124  C0BA  F04D         	movff	efgtoa@u+3,___fldiv@a+3
  4741  002128  EC68  F01C         	call	___fldiv	;wreg free
  4742  00212C  C046  F052         	movff	?___fldiv,floorf@x
  4743  002130  C047  F053         	movff	?___fldiv+1,floorf@x+1
  4744  002134  C048  F054         	movff	?___fldiv+2,floorf@x+2
  4745  002138  C049  F055         	movff	?___fldiv+3,floorf@x+3
  4746  00213C  ECC3  F020         	call	_floorf	;wreg free
  4747  002140  C052  F0A9         	movff	?_floorf,efgtoa@l
  4748  002144  C053  F0AA         	movff	?_floorf+1,efgtoa@l+1
  4749  002148  C054  F0AB         	movff	?_floorf+2,efgtoa@l+2
  4750  00214C  C055  F0AC         	movff	?_floorf+3,efgtoa@l+3
  4751                           
  4752                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4753  002150  C0A9  F052         	movff	efgtoa@l,___fltol@f1
  4754  002154  C0AA  F053         	movff	efgtoa@l+1,___fltol@f1+1
  4755  002158  C0AB  F054         	movff	efgtoa@l+2,___fltol@f1+2
  4756  00215C  C0AC  F055         	movff	efgtoa@l+3,___fltol@f1+3
  4757  002160  EC84  F025         	call	___fltol	;wreg free
  4758  002164  C052  F09B         	movff	?___fltol,efgtoa@d
  4759  002168  C053  F09C         	movff	?___fltol+1,efgtoa@d+1
  4760  00216C                     
  4761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4762  00216C  B85A               	btfsc	_flags^0,4,c
  4763  00216E  EFBB  F010         	goto	u9921
  4764  002172  EFBD  F010         	goto	u9920
  4765  002176                     u9921:
  4766  002176  EFDB  F010         	goto	l7476
  4767  00217A                     u9920:
  4768  00217A  0100               	movlb	0	; () banked
  4769  00217C  519B               	movf	efgtoa@d& (0+255),w,b
  4770  00217E  119C               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4771  002180  A4D8               	btfss	status,2,c
  4772  002182  EFC5  F010         	goto	u9931
  4773  002186  EFC7  F010         	goto	u9930
  4774  00218A                     u9931:
  4775  00218A  EFDB  F010         	goto	l7476
  4776  00218E                     u9930:
  4777  00218E                     
  4778                           ; BSR set to: 0
  4779  00218E  0E67               	movlw	103
  4780  002190  19A4               	xorwf	efgtoa@mode& (0+255),w,b
  4781  002192  A4D8               	btfss	status,2,c
  4782  002194  EFCE  F010         	goto	u9941
  4783  002198  EFD0  F010         	goto	u9940
  4784  00219C                     u9941:
  4785  00219C  EFDB  F010         	goto	l7476
  4786  0021A0                     u9940:
  4787  0021A0                     
  4788                           ; BSR set to: 0
  4789  0021A0  BF94               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4790  0021A2  EFD7  F010         	goto	u9950
  4791  0021A6  EFD5  F010         	goto	u9951
  4792  0021AA                     u9951:
  4793  0021AA  EFDB  F010         	goto	l7476
  4794  0021AE                     u9950:
  4795  0021AE                     
  4796                           ; BSR set to: 0
  4797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4798  0021AE  4B8F               	infsnz	efgtoa@t& (0+255),f,b
  4799  0021B0  2B90               	incf	(efgtoa@t+1)& (0+255),f,b
  4800                           
  4801                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4802  0021B2  EF26  F011         	goto	l7504
  4803  0021B6                     l7476:
  4804                           
  4805                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4806  0021B6  0100               	movlb	0	; () banked
  4807  0021B8  5191               	movf	efgtoa@pp& (0+255),w,b
  4808  0021BA  1192               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4809  0021BC  A4D8               	btfss	status,2,c
  4810  0021BE  EFE3  F010         	goto	u9961
  4811  0021C2  EFE5  F010         	goto	u9960
  4812  0021C6                     u9961:
  4813  0021C6  EF0F  F011         	goto	l7496
  4814  0021CA                     u9960:
  4815  0021CA                     
  4816                           ; BSR set to: 0
  4817  0021CA  BF94               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4818  0021CC  EFEC  F010         	goto	u9970
  4819  0021D0  EFEA  F010         	goto	u9971
  4820  0021D4                     u9971:
  4821  0021D4  EF0F  F011         	goto	l7496
  4822  0021D8                     u9970:
  4823  0021D8                     
  4824                           ; BSR set to: 0
  4825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4826  0021D8  0E3E               	movlw	low _dbuf
  4827  0021DA  25B5               	addwf	efgtoa@n& (0+255),w,b
  4828  0021DC  6ED9               	movwf	fsr2l,c
  4829  0021DE  0E01               	movlw	high _dbuf
  4830  0021E0  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4831  0021E2  6EDA               	movwf	fsr2h,c
  4832  0021E4  0E2E               	movlw	46
  4833  0021E6  6EDF               	movwf	indf2,c
  4834  0021E8                     
  4835                           ; BSR set to: 0
  4836  0021E8  4BB5               	infsnz	efgtoa@n& (0+255),f,b
  4837  0021EA  2BB6               	incf	(efgtoa@n+1)& (0+255),f,b
  4838  0021EC                     
  4839                           ; BSR set to: 0
  4840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4841  0021EC  07A1               	decf	efgtoa@w& (0+255),f,b
  4842  0021EE  A0D8               	btfss	status,0,c
  4843  0021F0  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  4844  0021F2                     
  4845                           ; BSR set to: 0
  4846                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4847  0021F2  0E00               	movlw	0
  4848  0021F4  6F92               	movwf	(efgtoa@pp+1)& (0+255),b
  4849  0021F6  0E01               	movlw	1
  4850  0021F8  6F91               	movwf	efgtoa@pp& (0+255),b
  4851  0021FA  EF0F  F011         	goto	l7496
  4852  0021FE                     l7488:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4856  0021FE  0E3E               	movlw	low _dbuf
  4857  002200  25B5               	addwf	efgtoa@n& (0+255),w,b
  4858  002202  6ED9               	movwf	fsr2l,c
  4859  002204  0E01               	movlw	high _dbuf
  4860  002206  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4861  002208  6EDA               	movwf	fsr2h,c
  4862  00220A  0E30               	movlw	48
  4863  00220C  6EDF               	movwf	indf2,c
  4864  00220E                     
  4865                           ; BSR set to: 0
  4866  00220E  4BB5               	infsnz	efgtoa@n& (0+255),f,b
  4867  002210  2BB6               	incf	(efgtoa@n+1)& (0+255),f,b
  4868  002212                     
  4869                           ; BSR set to: 0
  4870                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4871  002212  07A1               	decf	efgtoa@w& (0+255),f,b
  4872  002214  A0D8               	btfss	status,0,c
  4873  002216  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  4874  002218                     
  4875                           ; BSR set to: 0
  4876                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4877  002218  078F               	decf	efgtoa@t& (0+255),f,b
  4878  00221A  A0D8               	btfss	status,0,c
  4879  00221C  0790               	decf	(efgtoa@t+1)& (0+255),f,b
  4880  00221E                     l7496:
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4884  00221E  518F               	movf	efgtoa@t& (0+255),w,b
  4885  002220  1190               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4886  002222  A4D8               	btfss	status,2,c
  4887  002224  EF16  F011         	goto	u9981
  4888  002228  EF18  F011         	goto	u9980
  4889  00222C                     u9981:
  4890  00222C  EFFF  F010         	goto	l7488
  4891  002230                     u9980:
  4892  002230                     
  4893                           ; BSR set to: 0
  4894                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4895  002230  0E3E               	movlw	low _dbuf
  4896  002232  25B5               	addwf	efgtoa@n& (0+255),w,b
  4897  002234  6ED9               	movwf	fsr2l,c
  4898  002236  0E01               	movlw	high _dbuf
  4899  002238  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4900  00223A  6EDA               	movwf	fsr2h,c
  4901  00223C  519B               	movf	efgtoa@d& (0+255),w,b
  4902  00223E  0F30               	addlw	48
  4903  002240  6EDF               	movwf	indf2,c
  4904  002242                     
  4905                           ; BSR set to: 0
  4906  002242  4BB5               	infsnz	efgtoa@n& (0+255),f,b
  4907  002244  2BB6               	incf	(efgtoa@n+1)& (0+255),f,b
  4908  002246                     
  4909                           ; BSR set to: 0
  4910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4911  002246  07A1               	decf	efgtoa@w& (0+255),f,b
  4912  002248  A0D8               	btfss	status,0,c
  4913  00224A  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  4914  00224C                     l7504:
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4918  00224C  C0A5  F025         	movff	efgtoa@h,___flsub@b
  4919  002250  C0A6  F026         	movff	efgtoa@h+1,___flsub@b+1
  4920  002254  C0A7  F027         	movff	efgtoa@h+2,___flsub@b+2
  4921  002258  C0A8  F028         	movff	efgtoa@h+3,___flsub@b+3
  4922  00225C  C0B7  F031         	movff	efgtoa@u,___flmul@a
  4923  002260  C0B8  F032         	movff	efgtoa@u+1,___flmul@a+1
  4924  002264  C0B9  F033         	movff	efgtoa@u+2,___flmul@a+2
  4925  002268  C0BA  F034         	movff	efgtoa@u+3,___flmul@a+3
  4926  00226C  C0A9  F02D         	movff	efgtoa@l,___flmul@b
  4927  002270  C0AA  F02E         	movff	efgtoa@l+1,___flmul@b+1
  4928  002274  C0AB  F02F         	movff	efgtoa@l+2,___flmul@b+2
  4929  002278  C0AC  F030         	movff	efgtoa@l+3,___flmul@b+3
  4930  00227C  EC53  F01A         	call	___flmul	;wreg free
  4931  002280  C02D  F029         	movff	?___flmul,___flsub@a
  4932  002284  C02E  F02A         	movff	?___flmul+1,___flsub@a+1
  4933  002288  C02F  F02B         	movff	?___flmul+2,___flsub@a+2
  4934  00228C  C030  F02C         	movff	?___flmul+3,___flsub@a+3
  4935  002290  EC52  F02D         	call	___flsub	;wreg free
  4936  002294  C025  F0A5         	movff	?___flsub,efgtoa@h
  4937  002298  C026  F0A6         	movff	?___flsub+1,efgtoa@h+1
  4938  00229C  C027  F0A7         	movff	?___flsub+2,efgtoa@h+2
  4939  0022A0  C028  F0A8         	movff	?___flsub+3,efgtoa@h+3
  4940  0022A4                     
  4941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4942  0022A4  C0B7  F046         	movff	efgtoa@u,___fldiv@b
  4943  0022A8  C0B8  F047         	movff	efgtoa@u+1,___fldiv@b+1
  4944  0022AC  C0B9  F048         	movff	efgtoa@u+2,___fldiv@b+2
  4945  0022B0  C0BA  F049         	movff	efgtoa@u+3,___fldiv@b+3
  4946  0022B4  0E00               	movlw	0
  4947  0022B6  6E4A               	movwf	___fldiv@a^0,c
  4948  0022B8  0E00               	movlw	0
  4949  0022BA  6E4B               	movwf	(___fldiv@a+1)^0,c
  4950  0022BC  0E20               	movlw	32
  4951  0022BE  6E4C               	movwf	(___fldiv@a+2)^0,c
  4952  0022C0  0E41               	movlw	65
  4953  0022C2  6E4D               	movwf	(___fldiv@a+3)^0,c
  4954  0022C4  EC68  F01C         	call	___fldiv	;wreg free
  4955  0022C8  C046  F0B7         	movff	?___fldiv,efgtoa@u
  4956  0022CC  C047  F0B8         	movff	?___fldiv+1,efgtoa@u+1
  4957  0022D0  C048  F0B9         	movff	?___fldiv+2,efgtoa@u+2
  4958  0022D4  C049  F0BA         	movff	?___fldiv+3,efgtoa@u+3
  4959  0022D8                     
  4960                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4961  0022D8  0100               	movlb	0	; () banked
  4962  0022DA  0793               	decf	efgtoa@ne& (0+255),f,b
  4963  0022DC  A0D8               	btfss	status,0,c
  4964  0022DE  0794               	decf	(efgtoa@ne+1)& (0+255),f,b
  4965  0022E0                     
  4966                           ; BSR set to: 0
  4967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4968  0022E0  4BAD               	infsnz	efgtoa@i& (0+255),f,b
  4969  0022E2  2BAE               	incf	(efgtoa@i+1)& (0+255),f,b
  4970  0022E4                     l7512:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4974  0022E4  5195               	movf	efgtoa@m& (0+255),w,b
  4975  0022E6  5DAD               	subwf	efgtoa@i& (0+255),w,b
  4976  0022E8  51AE               	movf	(efgtoa@i+1)& (0+255),w,b
  4977  0022EA  0A80               	xorlw	128
  4978  0022EC  6F84               	movwf	??_efgtoa& (0+255),b
  4979  0022EE  5196               	movf	(efgtoa@m+1)& (0+255),w,b
  4980  0022F0  0A80               	xorlw	128
  4981  0022F2  5984               	subwfb	??_efgtoa& (0+255),w,b
  4982  0022F4  B0D8               	btfsc	status,0,c
  4983  0022F6  EF7F  F011         	goto	u9991
  4984  0022FA  EF81  F011         	goto	u9990
  4985  0022FE                     u9991:
  4986  0022FE  EF8F  F011         	goto	l7516
  4987  002302                     u9990:
  4988  002302                     
  4989                           ; BSR set to: 0
  4990  002302  BFB6               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4991  002304  EF8D  F011         	goto	u10001
  4992  002308  51B6               	movf	(efgtoa@n+1)& (0+255),w,b
  4993  00230A  E109               	bnz	u10000
  4994  00230C  0E4B               	movlw	75
  4995  00230E  5DB5               	subwf	efgtoa@n& (0+255),w,b
  4996  002310  A0D8               	btfss	status,0,c
  4997  002312  EF8D  F011         	goto	u10001
  4998  002316  EF8F  F011         	goto	u10000
  4999  00231A                     u10001:
  5000  00231A  EF84  F010         	goto	l7464
  5001  00231E                     u10000:
  5002  00231E                     l7516:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5006  00231E  5191               	movf	efgtoa@pp& (0+255),w,b
  5007  002320  1192               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5008  002322  A4D8               	btfss	status,2,c
  5009  002324  EF96  F011         	goto	u10011
  5010  002328  EF98  F011         	goto	u10010
  5011  00232C                     u10011:
  5012  00232C  EFA9  F011         	goto	l7524
  5013  002330                     u10010:
  5014  002330                     
  5015                           ; BSR set to: 0
  5016  002330  A85A               	btfss	_flags^0,4,c
  5017  002332  EF9D  F011         	goto	u10021
  5018  002336  EF9F  F011         	goto	u10020
  5019  00233A                     u10021:
  5020  00233A  EFA9  F011         	goto	l7524
  5021  00233E                     u10020:
  5022  00233E                     
  5023                           ; BSR set to: 0
  5024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5025  00233E  0E3E               	movlw	low _dbuf
  5026  002340  25B5               	addwf	efgtoa@n& (0+255),w,b
  5027  002342  6ED9               	movwf	fsr2l,c
  5028  002344  0E01               	movlw	high _dbuf
  5029  002346  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5030  002348  6EDA               	movwf	fsr2h,c
  5031  00234A  0E2E               	movlw	46
  5032  00234C  6EDF               	movwf	indf2,c
  5033  00234E                     
  5034                           ; BSR set to: 0
  5035  00234E  4BB5               	infsnz	efgtoa@n& (0+255),f,b
  5036  002350  2BB6               	incf	(efgtoa@n+1)& (0+255),f,b
  5037  002352                     l7524:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5041  002352  0E3E               	movlw	low _dbuf
  5042  002354  25B5               	addwf	efgtoa@n& (0+255),w,b
  5043  002356  6ED9               	movwf	fsr2l,c
  5044  002358  0E01               	movlw	high _dbuf
  5045  00235A  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5046  00235C  6EDA               	movwf	fsr2h,c
  5047  00235E  0E00               	movlw	0
  5048  002360  6EDF               	movwf	indf2,c
  5049  002362                     
  5050                           ; BSR set to: 0
  5051                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5052  002362  0E65               	movlw	101
  5053  002364  19A3               	xorwf	efgtoa@nmode& (0+255),w,b
  5054  002366  A4D8               	btfss	status,2,c
  5055  002368  EFB8  F011         	goto	u10031
  5056  00236C  EFBA  F011         	goto	u10030
  5057  002370                     u10031:
  5058  002370  EF20  F00D         	goto	l7326
  5059  002374                     u10030:
  5060  002374                     
  5061                           ; BSR set to: 0
  5062                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5063  002374  0E00               	movlw	0
  5064  002376  6FAE               	movwf	(efgtoa@i+1)& (0+255),b
  5065  002378  0E4F               	movlw	79
  5066  00237A  6FAD               	movwf	efgtoa@i& (0+255),b
  5067  00237C                     
  5068                           ; BSR set to: 0
  5069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5070  00237C  0E3E               	movlw	low _dbuf
  5071  00237E  25AD               	addwf	efgtoa@i& (0+255),w,b
  5072  002380  6ED9               	movwf	fsr2l,c
  5073  002382  0E01               	movlw	high _dbuf
  5074  002384  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5075  002386  6EDA               	movwf	fsr2h,c
  5076  002388  0E00               	movlw	0
  5077  00238A  6EDF               	movwf	indf2,c
  5078  00238C                     
  5079                           ; BSR set to: 0
  5080                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5081  00238C  0E00               	movlw	0
  5082  00238E  6F9E               	movwf	(efgtoa@sign+1)& (0+255),b
  5083  002390  0E00               	movlw	0
  5084  002392  6F9D               	movwf	efgtoa@sign& (0+255),b
  5085  002394                     
  5086                           ; BSR set to: 0
  5087                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5088  002394  BFB4               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5089  002396  EFD1  F011         	goto	u10040
  5090  00239A  EFCF  F011         	goto	u10041
  5091  00239E                     u10041:
  5092  00239E  EFD9  F011         	goto	l7540
  5093  0023A2                     u10040:
  5094  0023A2                     
  5095                           ; BSR set to: 0
  5096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5097  0023A2  0E00               	movlw	0
  5098  0023A4  6F9E               	movwf	(efgtoa@sign+1)& (0+255),b
  5099  0023A6  0E01               	movlw	1
  5100  0023A8  6F9D               	movwf	efgtoa@sign& (0+255),b
  5101  0023AA                     
  5102                           ; BSR set to: 0
  5103                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5104  0023AA  6DB3               	negf	efgtoa@e& (0+255),b
  5105  0023AC  1FB4               	comf	(efgtoa@e+1)& (0+255),f,b
  5106  0023AE  B0D8               	btfsc	status,0,c
  5107  0023B0  2BB4               	incf	(efgtoa@e+1)& (0+255),f,b
  5108  0023B2                     l7540:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5112  0023B2  0E00               	movlw	0
  5113  0023B4  6FA0               	movwf	(efgtoa@p+1)& (0+255),b
  5114  0023B6  0E02               	movlw	2
  5115  0023B8  6F9F               	movwf	efgtoa@p& (0+255),b
  5116                           
  5117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5118  0023BA  EF0A  F012         	goto	l7552
  5119  0023BE                     l7542:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5123  0023BE  07AD               	decf	efgtoa@i& (0+255),f,b
  5124  0023C0  A0D8               	btfss	status,0,c
  5125  0023C2  07AE               	decf	(efgtoa@i+1)& (0+255),f,b
  5126  0023C4                     
  5127                           ; BSR set to: 0
  5128                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5129  0023C4  0E3E               	movlw	low _dbuf
  5130  0023C6  25AD               	addwf	efgtoa@i& (0+255),w,b
  5131  0023C8  6ED9               	movwf	fsr2l,c
  5132  0023CA  0E01               	movlw	high _dbuf
  5133  0023CC  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5134  0023CE  6EDA               	movwf	fsr2h,c
  5135  0023D0  C0B3  F003         	movff	efgtoa@e,___awmod@dividend
  5136  0023D4  C0B4  F004         	movff	efgtoa@e+1,___awmod@dividend+1
  5137  0023D8  0E00               	movlw	0
  5138  0023DA  6E06               	movwf	(___awmod@divisor+1)^0,c
  5139  0023DC  0E0A               	movlw	10
  5140  0023DE  6E05               	movwf	___awmod@divisor^0,c
  5141  0023E0  ECDD  F029         	call	___awmod	;wreg free
  5142  0023E4  5003               	movf	?___awmod^0,w,c
  5143  0023E6  0F30               	addlw	48
  5144  0023E8  6EDF               	movwf	indf2,c
  5145  0023EA                     
  5146                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5147  0023EA  C0B3  F003         	movff	efgtoa@e,___awdiv@dividend
  5148  0023EE  C0B4  F004         	movff	efgtoa@e+1,___awdiv@dividend+1
  5149  0023F2  0E00               	movlw	0
  5150  0023F4  6E06               	movwf	(___awdiv@divisor+1)^0,c
  5151  0023F6  0E0A               	movlw	10
  5152  0023F8  6E05               	movwf	___awdiv@divisor^0,c
  5153  0023FA  ECBE  F028         	call	___awdiv	;wreg free
  5154  0023FE  C003  F0B3         	movff	?___awdiv,efgtoa@e
  5155  002402  C004  F0B4         	movff	?___awdiv+1,efgtoa@e+1
  5156  002406                     
  5157                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5158  002406  0100               	movlb	0	; () banked
  5159  002408  079F               	decf	efgtoa@p& (0+255),f,b
  5160  00240A  A0D8               	btfss	status,0,c
  5161  00240C  07A0               	decf	(efgtoa@p+1)& (0+255),f,b
  5162  00240E                     
  5163                           ; BSR set to: 0
  5164                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5165  00240E  07A1               	decf	efgtoa@w& (0+255),f,b
  5166  002410  A0D8               	btfss	status,0,c
  5167  002412  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  5168  002414                     l7552:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5172  002414  51B3               	movf	efgtoa@e& (0+255),w,b
  5173  002416  11B4               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5174  002418  A4D8               	btfss	status,2,c
  5175  00241A  EF11  F012         	goto	u10051
  5176  00241E  EF13  F012         	goto	u10050
  5177  002422                     u10051:
  5178  002422  EFDF  F011         	goto	l7542
  5179  002426                     u10050:
  5180  002426                     
  5181                           ; BSR set to: 0
  5182  002426  BFA0               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5183  002428  EF20  F012         	goto	u10060
  5184  00242C  51A0               	movf	(efgtoa@p+1)& (0+255),w,b
  5185  00242E  E106               	bnz	u10061
  5186  002430  059F               	decf	efgtoa@p& (0+255),w,b
  5187  002432  B0D8               	btfsc	status,0,c
  5188  002434  EF1E  F012         	goto	u10061
  5189  002438  EF20  F012         	goto	u10060
  5190  00243C                     u10061:
  5191  00243C  EFDF  F011         	goto	l7542
  5192  002440                     u10060:
  5193  002440                     
  5194                           ; BSR set to: 0
  5195                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  5196  002440  07AD               	decf	efgtoa@i& (0+255),f,b
  5197  002442  A0D8               	btfss	status,0,c
  5198  002444  07AE               	decf	(efgtoa@i+1)& (0+255),f,b
  5199  002446                     
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5202  002446  519D               	movf	efgtoa@sign& (0+255),w,b
  5203  002448  119E               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5204  00244A  A4D8               	btfss	status,2,c
  5205  00244C  EF2A  F012         	goto	u10071
  5206  002450  EF2C  F012         	goto	u10070
  5207  002454                     u10071:
  5208  002454  EF32  F012         	goto	l7562
  5209  002458                     u10070:
  5210  002458                     
  5211                           ; BSR set to: 0
  5212  002458  0E00               	movlw	0
  5213  00245A  6F8C               	movwf	(_efgtoa$1356+1)& (0+255),b
  5214  00245C  0E2B               	movlw	43
  5215  00245E  6F8B               	movwf	_efgtoa$1356& (0+255),b
  5216  002460  EF36  F012         	goto	l7564
  5217  002464                     l7562:
  5218                           
  5219                           ; BSR set to: 0
  5220  002464  0E00               	movlw	0
  5221  002466  6F8C               	movwf	(_efgtoa$1356+1)& (0+255),b
  5222  002468  0E2D               	movlw	45
  5223  00246A  6F8B               	movwf	_efgtoa$1356& (0+255),b
  5224  00246C                     l7564:
  5225                           
  5226                           ; BSR set to: 0
  5227  00246C  0E3E               	movlw	low _dbuf
  5228  00246E  25AD               	addwf	efgtoa@i& (0+255),w,b
  5229  002470  6ED9               	movwf	fsr2l,c
  5230  002472  0E01               	movlw	high _dbuf
  5231  002474  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5232  002476  6EDA               	movwf	fsr2h,c
  5233  002478  C08B  FFDF         	movff	_efgtoa$1356,indf2
  5234  00247C                     
  5235                           ; BSR set to: 0
  5236                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  5237  00247C  07A1               	decf	efgtoa@w& (0+255),f,b
  5238  00247E  A0D8               	btfss	status,0,c
  5239  002480  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  5240  002482                     
  5241                           ; BSR set to: 0
  5242                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  5243  002482  07AD               	decf	efgtoa@i& (0+255),f,b
  5244  002484  A0D8               	btfss	status,0,c
  5245  002486  07AE               	decf	(efgtoa@i+1)& (0+255),f,b
  5246  002488                     
  5247                           ; BSR set to: 0
  5248  002488  0EBF               	movlw	191
  5249  00248A  6F84               	movwf	??_efgtoa& (0+255),b
  5250  00248C  0EFF               	movlw	255
  5251  00248E  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  5252  002490  5183               	movf	efgtoa@c& (0+255),w,b
  5253  002492  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  5254  002494  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  5255  002496  5184               	movf	??_efgtoa& (0+255),w,b
  5256  002498  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  5257  00249A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  5258  00249C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5259  00249E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  5260  0024A0  E109               	bnz	u10080
  5261  0024A2  0E1A               	movlw	26
  5262  0024A4  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  5263  0024A6  A0D8               	btfss	status,0,c
  5264  0024A8  EF58  F012         	goto	u10081
  5265  0024AC  EF5A  F012         	goto	u10080
  5266  0024B0                     u10081:
  5267  0024B0  EF60  F012         	goto	l7576
  5268  0024B4                     u10080:
  5269  0024B4                     
  5270                           ; BSR set to: 0
  5271  0024B4  0E00               	movlw	0
  5272  0024B6  6F8E               	movwf	(_efgtoa$1357+1)& (0+255),b
  5273  0024B8  0E65               	movlw	101
  5274  0024BA  6F8D               	movwf	_efgtoa$1357& (0+255),b
  5275  0024BC  EF64  F012         	goto	l7578
  5276  0024C0                     l7576:
  5277                           
  5278                           ; BSR set to: 0
  5279  0024C0  0E00               	movlw	0
  5280  0024C2  6F8E               	movwf	(_efgtoa$1357+1)& (0+255),b
  5281  0024C4  0E45               	movlw	69
  5282  0024C6  6F8D               	movwf	_efgtoa$1357& (0+255),b
  5283  0024C8                     l7578:
  5284                           
  5285                           ; BSR set to: 0
  5286  0024C8  0E3E               	movlw	low _dbuf
  5287  0024CA  25AD               	addwf	efgtoa@i& (0+255),w,b
  5288  0024CC  6ED9               	movwf	fsr2l,c
  5289  0024CE  0E01               	movlw	high _dbuf
  5290  0024D0  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5291  0024D2  6EDA               	movwf	fsr2h,c
  5292  0024D4  C08D  FFDF         	movff	_efgtoa$1357,indf2
  5293  0024D8                     
  5294                           ; BSR set to: 0
  5295                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  5296  0024D8  07A1               	decf	efgtoa@w& (0+255),f,b
  5297  0024DA  A0D8               	btfss	status,0,c
  5298  0024DC  07A2               	decf	(efgtoa@w+1)& (0+255),f,b
  5299  0024DE                     
  5300                           ; BSR set to: 0
  5301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5302  0024DE  0E3E               	movlw	low _dbuf
  5303  0024E0  25B5               	addwf	efgtoa@n& (0+255),w,b
  5304  0024E2  6E03               	movwf	strcpy@dest^0,c
  5305  0024E4  0E01               	movlw	high _dbuf
  5306  0024E6  21B6               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5307  0024E8  6E04               	movwf	(strcpy@dest+1)^0,c
  5308  0024EA  0E3E               	movlw	low _dbuf
  5309  0024EC  25AD               	addwf	efgtoa@i& (0+255),w,b
  5310  0024EE  6E05               	movwf	strcpy@src^0,c
  5311  0024F0  0E01               	movlw	high _dbuf
  5312  0024F2  21AE               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5313  0024F4  6E06               	movwf	(strcpy@src+1)^0,c
  5314  0024F6  EC5D  F02C         	call	_strcpy	;wreg free
  5315  0024FA  EF20  F00D         	goto	l7326
  5316  0024FE                     l997:
  5317  0024FE  0012               	return		;funcret
  5318  002500                     __end_of_efgtoa:
  5319                           	callstack 0
  5320                           
  5321 ;; *************** function _tolower *****************
  5322 ;; Defined at:
  5323 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  c               2    8[COMRAM] int 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  2    8[COMRAM] int 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5337 ;;      Params:         2       0       0       0       0       0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5339 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5340 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5341 ;;Total ram usage:        6 bytes
  5342 ;; Hardware stack levels used: 1
  5343 ;; Hardware stack levels required when called: 3
  5344 ;; This function calls:
  5345 ;;		_isupper
  5346 ;; This function is called by:
  5347 ;;		_efgtoa
  5348 ;;		_vfpfcnvrt
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text10
  5353  005A5E                     __ptext10:
  5354                           	callstack 0
  5355  005A5E                     _tolower:
  5356                           	callstack 24
  5357  005A5E  0EBF               	movlw	191
  5358  005A60  6E0B               	movwf	??_tolower^0,c
  5359  005A62  0EFF               	movlw	255
  5360  005A64  6E0C               	movwf	(??_tolower+1)^0,c
  5361  005A66  C009  F00D         	movff	tolower@c,??_tolower+2
  5362  005A6A  C00A  F00E         	movff	tolower@c+1,??_tolower+3
  5363  005A6E  500B               	movf	??_tolower^0,w,c
  5364  005A70  260D               	addwf	(??_tolower+2)^0,f,c
  5365  005A72  500C               	movf	(??_tolower+1)^0,w,c
  5366  005A74  220E               	addwfc	(??_tolower+3)^0,f,c
  5367  005A76  500E               	movf	(??_tolower+3)^0,w,c
  5368  005A78  E107               	bnz	u9311
  5369  005A7A  0E1A               	movlw	26
  5370  005A7C  5C0D               	subwf	(??_tolower+2)^0,w,c
  5371  005A7E  B0D8               	btfsc	status,0,c
  5372  005A80  EF44  F02D         	goto	u9311
  5373  005A84  EF46  F02D         	goto	u9310
  5374  005A88                     u9311:
  5375  005A88  EF4D  F02D         	goto	l1473
  5376  005A8C                     u9310:
  5377  005A8C  0E20               	movlw	32
  5378  005A8E  1009               	iorwf	tolower@c^0,w,c
  5379  005A90  6E09               	movwf	?_tolower^0,c
  5380  005A92  500A               	movf	(tolower@c+1)^0,w,c
  5381  005A94  6E0A               	movwf	(?_tolower+1)^0,c
  5382  005A96  EF51  F02D         	goto	l1476
  5383  005A9A                     l1473:
  5384  005A9A  C009  F009         	movff	tolower@c,?_tolower
  5385  005A9E  C00A  F00A         	movff	tolower@c+1,?_tolower+1
  5386  005AA2                     l1476:
  5387  005AA2  0012               	return		;funcret
  5388  005AA4                     __end_of_tolower:
  5389                           	callstack 0
  5390                           
  5391 ;; *************** function _isupper *****************
  5392 ;; Defined at:
  5393 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  c               2    2[COMRAM] int 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;		None
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  2    2[COMRAM] int 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5407 ;;      Params:         2       0       0       0       0       0       0       0       0
  5408 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5409 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5410 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5411 ;;Total ram usage:        6 bytes
  5412 ;; Hardware stack levels used: 1
  5413 ;; Hardware stack levels required when called: 2
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_efgtoa
  5418 ;;		_vfpfcnvrt
  5419 ;;		_tolower
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text11
  5424  005BF6                     __ptext11:
  5425                           	callstack 0
  5426  005BF6                     _isupper:
  5427                           	callstack 24
  5428  005BF6  0EBF               	movlw	191
  5429  005BF8  6E05               	movwf	??_isupper^0,c
  5430  005BFA  0EFF               	movlw	255
  5431  005BFC  6E06               	movwf	(??_isupper+1)^0,c
  5432  005BFE  C003  F007         	movff	isupper@c,??_isupper+2
  5433  005C02  C004  F008         	movff	isupper@c+1,??_isupper+3
  5434  005C06  5005               	movf	??_isupper^0,w,c
  5435  005C08  2607               	addwf	(??_isupper+2)^0,f,c
  5436  005C0A  5006               	movf	(??_isupper+1)^0,w,c
  5437  005C0C  2208               	addwfc	(??_isupper+3)^0,f,c
  5438  005C0E  5008               	movf	(??_isupper+3)^0,w,c
  5439  005C10  E10A               	bnz	u8320
  5440  005C12  0E1A               	movlw	26
  5441  005C14  5C07               	subwf	(??_isupper+2)^0,w,c
  5442  005C16  A0D8               	btfss	status,0,c
  5443  005C18  EF10  F02E         	goto	u8321
  5444  005C1C  EF13  F02E         	goto	u8320
  5445  005C20                     u8321:
  5446  005C20  0E01               	movlw	1
  5447  005C22  EF14  F02E         	goto	u8330
  5448  005C26                     u8320:
  5449  005C26  0E00               	movlw	0
  5450  005C28                     u8330:
  5451  005C28  6E03               	movwf	?_isupper^0,c
  5452  005C2A  6A04               	clrf	(?_isupper+1)^0,c
  5453  005C2C  0012               	return		;funcret
  5454  005C2E                     __end_of_isupper:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function _strcpy *****************
  5458 ;; Defined at:
  5459 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  dest            2    2[COMRAM] PTR unsigned char 
  5462 ;;		 -> dbuf(80), 
  5463 ;;  src             2    4[COMRAM] PTR const unsigned char 
  5464 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  5465 ;;		 -> dbuf(80), 
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  d               2   10[COMRAM] PTR unsigned char 
  5468 ;;		 -> dbuf(80), 
  5469 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5470 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  5471 ;;		 -> dbuf(80), 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  2    2[COMRAM] PTR unsigned char 
  5474 ;; Registers used:
  5475 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5481 ;;      Params:         4       0       0       0       0       0       0       0       0
  5482 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5483 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5484 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5485 ;;Total ram usage:       10 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 2
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_efgtoa
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text12
  5496  0058BA                     __ptext12:
  5497                           	callstack 0
  5498  0058BA                     _strcpy:
  5499                           	callstack 24
  5500  0058BA  C005  F009         	movff	strcpy@src,strcpy@s
  5501  0058BE  C006  F00A         	movff	strcpy@src+1,strcpy@s+1
  5502  0058C2  C003  F00B         	movff	strcpy@dest,strcpy@d
  5503  0058C6  C004  F00C         	movff	strcpy@dest+1,strcpy@d+1
  5504  0058CA                     l7164:
  5505  0058CA  5009               	movf	strcpy@s^0,w,c
  5506  0058CC  6E07               	movwf	??_strcpy^0,c
  5507  0058CE  500A               	movf	(strcpy@s+1)^0,w,c
  5508  0058D0  6E08               	movwf	(??_strcpy+1)^0,c
  5509  0058D2  4A09               	infsnz	strcpy@s^0,f,c
  5510  0058D4  2A0A               	incf	(strcpy@s+1)^0,f,c
  5511  0058D6  C007  FFF6         	movff	??_strcpy,tblptrl
  5512  0058DA  C008  FFF7         	movff	??_strcpy+1,tblptrh
  5513  0058DE  6AF8               	clrf	tblptru,c
  5514  0058E0  C00B  FFD9         	movff	strcpy@d,fsr2l
  5515  0058E4  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  5516  0058E8  4A0B               	infsnz	strcpy@d^0,f,c
  5517  0058EA  2A0C               	incf	(strcpy@d+1)^0,f,c
  5518  0058EC  0E07               	movlw	(high __ramtop+-1)
  5519  0058EE  64F7               	cpfsgt	tblptrh,c
  5520  0058F0  D003               	bra	u9297
  5521  0058F2  0008               	tblrd		*
  5522  0058F4  50F5               	movf	tablat,w,c
  5523  0058F6  D005               	bra	u9290
  5524  0058F8                     u9297:
  5525  0058F8  CFF6 FFE9          	movff	tblptrl,fsr0l
  5526  0058FC  CFF7 FFEA          	movff	tblptrh,fsr0h
  5527  005900  50EF               	movf	indf0,w,c
  5528  005902                     u9290:
  5529  005902  6EDF               	movwf	indf2,c
  5530  005904  50DF               	movf	indf2,w,c
  5531  005906  A4D8               	btfss	status,2,c
  5532  005908  EF88  F02C         	goto	u9301
  5533  00590C  EF8A  F02C         	goto	u9300
  5534  005910                     u9301:
  5535  005910  EF65  F02C         	goto	l7164
  5536  005914                     u9300:
  5537  005914  0012               	return		;funcret
  5538  005916                     __end_of_strcpy:
  5539                           	callstack 0
  5540                           
  5541 ;; *************** function _floorf *****************
  5542 ;; Defined at:
  5543 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  x               4   81[COMRAM] float 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  u               4   25[BANK0 ] struct .
  5548 ;;  m               4   19[BANK0 ] unsigned long 
  5549 ;;  e               2   23[BANK0 ] int 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  4   81[COMRAM] float 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2, status,0
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5559 ;;      Params:         4       0       0       0       0       0       0       0       0
  5560 ;;      Locals:         0      10       0       0       0       0       0       0       0
  5561 ;;      Temps:          0       6       0       0       0       0       0       0       0
  5562 ;;      Totals:         4      16       0       0       0       0       0       0       0
  5563 ;;Total ram usage:       20 bytes
  5564 ;; Hardware stack levels used: 1
  5565 ;; Hardware stack levels required when called: 2
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_efgtoa
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text13
  5574  004186                     __ptext13:
  5575                           	callstack 0
  5576  004186                     _floorf:
  5577                           	callstack 24
  5578  004186  C110  F079         	movff	floorf@F526,floorf@u
  5579  00418A  C111  F07A         	movff	floorf@F526+1,floorf@u+1
  5580  00418E  C112  F07B         	movff	floorf@F526+2,floorf@u+2
  5581  004192  C113  F07C         	movff	floorf@F526+3,floorf@u+3
  5582  004196  C052  F079         	movff	floorf@x,floorf@u
  5583  00419A  C053  F07A         	movff	floorf@x+1,floorf@u+1
  5584  00419E  C054  F07B         	movff	floorf@x+2,floorf@u+2
  5585  0041A2  C055  F07C         	movff	floorf@x+3,floorf@u+3
  5586  0041A6  0E81               	movlw	129
  5587  0041A8  0100               	movlb	0	; () banked
  5588  0041AA  6F6D               	movwf	??_floorf& (0+255),b
  5589  0041AC  0EFF               	movlw	255
  5590  0041AE  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5591  0041B0  C079  F06F         	movff	floorf@u,??_floorf+2
  5592  0041B4  C07A  F070         	movff	floorf@u+1,??_floorf+3
  5593  0041B8  C07B  F071         	movff	floorf@u+2,??_floorf+4
  5594  0041BC  C07C  F072         	movff	floorf@u+3,??_floorf+5
  5595  0041C0  0E18               	movlw	24
  5596  0041C2  EFE8  F020         	goto	u9320
  5597  0041C6                     u9325:
  5598  0041C6  90D8               	bcf	status,0,c
  5599  0041C8  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  5600  0041CA  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5601  0041CC  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5602  0041CE  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5603  0041D0                     u9320:
  5604  0041D0  2EE8               	decfsz	wreg,f,c
  5605  0041D2  EFE3  F020         	goto	u9325
  5606  0041D6  516F               	movf	(??_floorf+2)& (0+255),w,b
  5607  0041D8  256D               	addwf	??_floorf& (0+255),w,b
  5608  0041DA  6F77               	movwf	floorf@e& (0+255),b
  5609  0041DC  0E00               	movlw	0
  5610  0041DE  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  5611  0041E0  6F78               	movwf	(floorf@e+1)& (0+255),b
  5612  0041E2  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5613  0041E4  EFFD  F020         	goto	u9331
  5614  0041E8  5178               	movf	(floorf@e+1)& (0+255),w,b
  5615  0041EA  E109               	bnz	u9330
  5616  0041EC  0E17               	movlw	23
  5617  0041EE  5D77               	subwf	floorf@e& (0+255),w,b
  5618  0041F0  A0D8               	btfss	status,0,c
  5619  0041F2  EFFD  F020         	goto	u9331
  5620  0041F6  EFFF  F020         	goto	u9330
  5621  0041FA                     u9331:
  5622  0041FA  EF09  F021         	goto	l7182
  5623  0041FE                     u9330:
  5624  0041FE                     l7180:
  5625                           
  5626                           ; BSR set to: 0
  5627  0041FE  C052  F052         	movff	floorf@x,?_floorf
  5628  004202  C053  F053         	movff	floorf@x+1,?_floorf+1
  5629  004206  C054  F054         	movff	floorf@x+2,?_floorf+2
  5630  00420A  C055  F055         	movff	floorf@x+3,?_floorf+3
  5631  00420E  EFCD  F021         	goto	l1167
  5632  004212                     l7182:
  5633                           
  5634                           ; BSR set to: 0
  5635  004212  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5636  004214  EF0E  F021         	goto	u9341
  5637  004218  EF10  F021         	goto	u9340
  5638  00421C                     u9341:
  5639  00421C  EF81  F021         	goto	l7192
  5640  004220                     u9340:
  5641  004220                     
  5642                           ; BSR set to: 0
  5643  004220  C077  F06D         	movff	floorf@e,??_floorf
  5644  004224  0EFF               	movlw	255
  5645  004226  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5646  004228  0EFF               	movlw	255
  5647  00422A  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5648  00422C  0E7F               	movlw	127
  5649  00422E  6F70               	movwf	(??_floorf+3)& (0+255),b
  5650  004230  0E00               	movlw	0
  5651  004232  6F71               	movwf	(??_floorf+4)& (0+255),b
  5652  004234                     u9355:
  5653  004234  676D               	tstfsz	??_floorf& (0+255),b
  5654  004236  EF1F  F021         	goto	u9356
  5655  00423A  EF27  F021         	goto	u9357
  5656  00423E                     u9356:
  5657  00423E  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  5658  004240  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5659  004242  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5660  004244  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5661  004246  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5662  004248  2F6D               	decfsz	??_floorf& (0+255),f,b
  5663  00424A  EF1A  F021         	goto	u9355
  5664  00424E                     u9357:
  5665  00424E  C06E  F073         	movff	??_floorf+1,floorf@m
  5666  004252  C06F  F074         	movff	??_floorf+2,floorf@m+1
  5667  004256  C070  F075         	movff	??_floorf+3,floorf@m+2
  5668  00425A  C071  F076         	movff	??_floorf+4,floorf@m+3
  5669  00425E  0100               	movlb	0	; () banked
  5670  004260  5173               	movf	floorf@m& (0+255),w,b
  5671  004262  1579               	andwf	floorf@u& (0+255),w,b
  5672  004264  6F6D               	movwf	??_floorf& (0+255),b
  5673  004266  5174               	movf	(floorf@m+1)& (0+255),w,b
  5674  004268  157A               	andwf	(floorf@u+1)& (0+255),w,b
  5675  00426A  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5676  00426C  5175               	movf	(floorf@m+2)& (0+255),w,b
  5677  00426E  157B               	andwf	(floorf@u+2)& (0+255),w,b
  5678  004270  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5679  004272  5176               	movf	(floorf@m+3)& (0+255),w,b
  5680  004274  157C               	andwf	(floorf@u+3)& (0+255),w,b
  5681  004276  6F70               	movwf	(??_floorf+3)& (0+255),b
  5682  004278  516D               	movf	??_floorf& (0+255),w,b
  5683  00427A  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5684  00427C  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5685  00427E  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5686  004280  A4D8               	btfss	status,2,c
  5687  004282  EF45  F021         	goto	u9361
  5688  004286  EF47  F021         	goto	u9360
  5689  00428A                     u9361:
  5690  00428A  EF49  F021         	goto	l7188
  5691  00428E                     u9360:
  5692  00428E  EFFF  F020         	goto	l7180
  5693  004292                     l7188:
  5694                           
  5695                           ; BSR set to: 0
  5696  004292  C079  F06D         	movff	floorf@u,??_floorf
  5697  004296  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5698  00429A  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5699  00429E  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5700  0042A2  0E20               	movlw	32
  5701  0042A4  EF59  F021         	goto	u9370
  5702  0042A8                     u9375:
  5703  0042A8  90D8               	bcf	status,0,c
  5704  0042AA  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5705  0042AC  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5706  0042AE  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5707  0042B0  336D               	rrcf	??_floorf& (0+255),f,b
  5708  0042B2                     u9370:
  5709  0042B2  2EE8               	decfsz	wreg,f,c
  5710  0042B4  EF54  F021         	goto	u9375
  5711  0042B8  516D               	movf	??_floorf& (0+255),w,b
  5712  0042BA  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5713  0042BC  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5714  0042BE  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5715  0042C0  B4D8               	btfsc	status,2,c
  5716  0042C2  EF65  F021         	goto	u9381
  5717  0042C6  EF67  F021         	goto	u9380
  5718  0042CA                     u9381:
  5719  0042CA  EF6F  F021         	goto	l1170
  5720  0042CE                     u9380:
  5721  0042CE                     
  5722                           ; BSR set to: 0
  5723  0042CE  5173               	movf	floorf@m& (0+255),w,b
  5724  0042D0  2779               	addwf	floorf@u& (0+255),f,b
  5725  0042D2  5174               	movf	(floorf@m+1)& (0+255),w,b
  5726  0042D4  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  5727  0042D6  5175               	movf	(floorf@m+2)& (0+255),w,b
  5728  0042D8  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  5729  0042DA  5176               	movf	(floorf@m+3)& (0+255),w,b
  5730  0042DC  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  5731  0042DE                     l1170:
  5732                           
  5733                           ; BSR set to: 0
  5734  0042DE  1D73               	comf	floorf@m& (0+255),w,b
  5735  0042E0  6F6D               	movwf	??_floorf& (0+255),b
  5736  0042E2  1D74               	comf	(floorf@m+1)& (0+255),w,b
  5737  0042E4  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5738  0042E6  1D75               	comf	(floorf@m+2)& (0+255),w,b
  5739  0042E8  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5740  0042EA  1D76               	comf	(floorf@m+3)& (0+255),w,b
  5741  0042EC  6F70               	movwf	(??_floorf+3)& (0+255),b
  5742  0042EE  516D               	movf	??_floorf& (0+255),w,b
  5743  0042F0  1779               	andwf	floorf@u& (0+255),f,b
  5744  0042F2  516E               	movf	(??_floorf+1)& (0+255),w,b
  5745  0042F4  177A               	andwf	(floorf@u+1)& (0+255),f,b
  5746  0042F6  516F               	movf	(??_floorf+2)& (0+255),w,b
  5747  0042F8  177B               	andwf	(floorf@u+2)& (0+255),f,b
  5748  0042FA  5170               	movf	(??_floorf+3)& (0+255),w,b
  5749  0042FC  177C               	andwf	(floorf@u+3)& (0+255),f,b
  5750  0042FE  EFC5  F021         	goto	l7200
  5751  004302                     l7192:
  5752                           
  5753                           ; BSR set to: 0
  5754  004302  C079  F06D         	movff	floorf@u,??_floorf
  5755  004306  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5756  00430A  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5757  00430E  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5758  004312  0E20               	movlw	32
  5759  004314  EF91  F021         	goto	u9390
  5760  004318                     u9395:
  5761  004318  90D8               	bcf	status,0,c
  5762  00431A  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5763  00431C  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5764  00431E  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5765  004320  336D               	rrcf	??_floorf& (0+255),f,b
  5766  004322                     u9390:
  5767  004322  2EE8               	decfsz	wreg,f,c
  5768  004324  EF8C  F021         	goto	u9395
  5769  004328  516D               	movf	??_floorf& (0+255),w,b
  5770  00432A  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5771  00432C  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5772  00432E  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5773  004330  A4D8               	btfss	status,2,c
  5774  004332  EF9D  F021         	goto	u9401
  5775  004336  EF9F  F021         	goto	u9400
  5776  00433A                     u9401:
  5777  00433A  EFA9  F021         	goto	l7196
  5778  00433E                     u9400:
  5779  00433E                     
  5780                           ; BSR set to: 0
  5781  00433E  0E00               	movlw	0
  5782  004340  6F79               	movwf	floorf@u& (0+255),b
  5783  004342  0E00               	movlw	0
  5784  004344  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5785  004346  0E00               	movlw	0
  5786  004348  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5787  00434A  0E00               	movlw	0
  5788  00434C  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5789  00434E  EFC5  F021         	goto	l7200
  5790  004352                     l7196:
  5791                           
  5792                           ; BSR set to: 0
  5793  004352  90D8               	bcf	status,0,c
  5794  004354  3579               	rlcf	floorf@u& (0+255),w,b
  5795  004356  6F6D               	movwf	??_floorf& (0+255),b
  5796  004358  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  5797  00435A  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5798  00435C  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  5799  00435E  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5800  004360  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  5801  004362  6F70               	movwf	(??_floorf+3)& (0+255),b
  5802  004364  516D               	movf	??_floorf& (0+255),w,b
  5803  004366  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5804  004368  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5805  00436A  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5806  00436C  B4D8               	btfsc	status,2,c
  5807  00436E  EFBB  F021         	goto	u9411
  5808  004372  EFBD  F021         	goto	u9410
  5809  004376                     u9411:
  5810  004376  EFC5  F021         	goto	l7200
  5811  00437A                     u9410:
  5812  00437A                     
  5813                           ; BSR set to: 0
  5814  00437A  0E00               	movlw	0
  5815  00437C  6F79               	movwf	floorf@u& (0+255),b
  5816  00437E  0E00               	movlw	0
  5817  004380  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5818  004382  0E80               	movlw	128
  5819  004384  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5820  004386  0EBF               	movlw	191
  5821  004388  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5822  00438A                     l7200:
  5823                           
  5824                           ; BSR set to: 0
  5825  00438A  C079  F052         	movff	floorf@u,?_floorf
  5826  00438E  C07A  F053         	movff	floorf@u+1,?_floorf+1
  5827  004392  C07B  F054         	movff	floorf@u+2,?_floorf+2
  5828  004396  C07C  F055         	movff	floorf@u+3,?_floorf+3
  5829  00439A                     l1167:
  5830                           
  5831                           ; BSR set to: 0
  5832  00439A  0012               	return		;funcret
  5833  00439C                     __end_of_floorf:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function ___fpclassifyf *****************
  5837 ;; Defined at:
  5838 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  x               4    2[COMRAM] float 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  u               4   12[COMRAM] struct .
  5843 ;;  e               2   10[COMRAM] int 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  2    2[COMRAM] int 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5853 ;;      Params:         4       0       0       0       0       0       0       0       0
  5854 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5855 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5856 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5857 ;;Total ram usage:       14 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; Hardware stack levels required when called: 2
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_efgtoa
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text14
  5868  004D14                     __ptext14:
  5869                           	callstack 0
  5870  004D14                     ___fpclassifyf:
  5871                           	callstack 24
  5872  004D14  C114  F00D         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5873  004D18  C115  F00E         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5874  004D1C  C116  F00F         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5875  004D20  C117  F010         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5876  004D24  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
  5877  004D28  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5878  004D2C  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5879  004D30  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5880  004D34  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  5881  004D38  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5882  004D3C  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5883  004D40  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5884  004D44  0E18               	movlw	24
  5885  004D46  EFAA  F026         	goto	u9220
  5886  004D4A                     u9225:
  5887  004D4A  90D8               	bcf	status,0,c
  5888  004D4C  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
  5889  004D4E  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
  5890  004D50  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
  5891  004D52  3207               	rrcf	??___fpclassifyf^0,f,c
  5892  004D54                     u9220:
  5893  004D54  2EE8               	decfsz	wreg,f,c
  5894  004D56  EFA5  F026         	goto	u9225
  5895  004D5A  5007               	movf	??___fpclassifyf^0,w,c
  5896  004D5C  6E0B               	movwf	___fpclassifyf@e^0,c
  5897  004D5E  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
  5898  004D60  500B               	movf	___fpclassifyf@e^0,w,c
  5899  004D62  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5900  004D64  A4D8               	btfss	status,2,c
  5901  004D66  EFB7  F026         	goto	u9231
  5902  004D6A  EFB9  F026         	goto	u9230
  5903  004D6E                     u9231:
  5904  004D6E  EFD9  F026         	goto	l7152
  5905  004D72                     u9230:
  5906  004D72  90D8               	bcf	status,0,c
  5907  004D74  340D               	rlcf	___fpclassifyf@u^0,w,c
  5908  004D76  6E07               	movwf	??___fpclassifyf^0,c
  5909  004D78  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5910  004D7A  6E08               	movwf	(??___fpclassifyf+1)^0,c
  5911  004D7C  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5912  004D7E  6E09               	movwf	(??___fpclassifyf+2)^0,c
  5913  004D80  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5914  004D82  6E0A               	movwf	(??___fpclassifyf+3)^0,c
  5915  004D84  5007               	movf	??___fpclassifyf^0,w,c
  5916  004D86  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  5917  004D88  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  5918  004D8A  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  5919  004D8C  A4D8               	btfss	status,2,c
  5920  004D8E  EFCB  F026         	goto	u9241
  5921  004D92  EFCD  F026         	goto	u9240
  5922  004D96                     u9241:
  5923  004D96  EFD3  F026         	goto	l7148
  5924  004D9A                     u9240:
  5925  004D9A  0E00               	movlw	0
  5926  004D9C  6E04               	movwf	(?___fpclassifyf+1)^0,c
  5927  004D9E  0E02               	movlw	2
  5928  004DA0  6E03               	movwf	?___fpclassifyf^0,c
  5929  004DA2  EF08  F027         	goto	l1128
  5930  004DA6                     l7148:
  5931  004DA6  0E00               	movlw	0
  5932  004DA8  6E04               	movwf	(?___fpclassifyf+1)^0,c
  5933  004DAA  0E03               	movlw	3
  5934  004DAC  6E03               	movwf	?___fpclassifyf^0,c
  5935  004DAE  EF08  F027         	goto	l1128
  5936  004DB2                     l7152:
  5937  004DB2  280B               	incf	___fpclassifyf@e^0,w,c
  5938  004DB4  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5939  004DB6  A4D8               	btfss	status,2,c
  5940  004DB8  EFE0  F026         	goto	u9251
  5941  004DBC  EFE2  F026         	goto	u9250
  5942  004DC0                     u9251:
  5943  004DC0  EF04  F027         	goto	l7158
  5944  004DC4                     u9250:
  5945  004DC4  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  5946  004DC8  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5947  004DCC  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5948  004DD0  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5949  004DD4  0E09               	movlw	9
  5950  004DD6                     u9265:
  5951  004DD6  90D8               	bcf	status,0,c
  5952  004DD8  3607               	rlcf	??___fpclassifyf^0,f,c
  5953  004DDA  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
  5954  004DDC  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
  5955  004DDE  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
  5956  004DE0  2EE8               	decfsz	wreg,f,c
  5957  004DE2  EFEB  F026         	goto	u9265
  5958  004DE6  5007               	movf	??___fpclassifyf^0,w,c
  5959  004DE8  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  5960  004DEA  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  5961  004DEC  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  5962  004DEE  B4D8               	btfsc	status,2,c
  5963  004DF0  EFFC  F026         	goto	u9271
  5964  004DF4  EFFF  F026         	goto	u9270
  5965  004DF8                     u9271:
  5966  004DF8  0E01               	movlw	1
  5967  004DFA  EF00  F027         	goto	u9280
  5968  004DFE                     u9270:
  5969  004DFE  0E00               	movlw	0
  5970  004E00                     u9280:
  5971  004E00  6E03               	movwf	?___fpclassifyf^0,c
  5972  004E02  6A04               	clrf	(?___fpclassifyf+1)^0,c
  5973  004E04  EF08  F027         	goto	l1128
  5974  004E08                     l7158:
  5975  004E08  0E00               	movlw	0
  5976  004E0A  6E04               	movwf	(?___fpclassifyf+1)^0,c
  5977  004E0C  0E04               	movlw	4
  5978  004E0E  6E03               	movwf	?___fpclassifyf^0,c
  5979  004E10                     l1128:
  5980  004E10  0012               	return		;funcret
  5981  004E12                     __end_of___fpclassifyf:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function ___flsub *****************
  5985 ;; Defined at:
  5986 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  b               4   36[COMRAM] int 
  5989 ;;  a               4   40[COMRAM] int 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  4   36[COMRAM] int 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6001 ;;      Params:         8       0       0       0       0       0       0       0       0
  6002 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6004 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6005 ;;Total ram usage:        8 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 3
  6008 ;; This function calls:
  6009 ;;		___fladd
  6010 ;; This function is called by:
  6011 ;;		_main
  6012 ;;		_efgtoa
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text15
  6017  005AA4                     __ptext15:
  6018                           	callstack 0
  6019  005AA4                     ___flsub:
  6020                           	callstack 23
  6021  005AA4  0E00               	movlw	0
  6022  005AA6  1A29               	xorwf	___flsub@a^0,f,c
  6023  005AA8  0E00               	movlw	0
  6024  005AAA  1A2A               	xorwf	(___flsub@a+1)^0,f,c
  6025  005AAC  0E00               	movlw	0
  6026  005AAE  1A2B               	xorwf	(___flsub@a+2)^0,f,c
  6027  005AB0  0E80               	movlw	128
  6028  005AB2  1A2C               	xorwf	(___flsub@a+3)^0,f,c
  6029  005AB4  C025  F015         	movff	___flsub@b,___fladd@b
  6030  005AB8  C026  F016         	movff	___flsub@b+1,___fladd@b+1
  6031  005ABC  C027  F017         	movff	___flsub@b+2,___fladd@b+2
  6032  005AC0  C028  F018         	movff	___flsub@b+3,___fladd@b+3
  6033  005AC4  C029  F019         	movff	___flsub@a,___fladd@a
  6034  005AC8  C02A  F01A         	movff	___flsub@a+1,___fladd@a+1
  6035  005ACC  C02B  F01B         	movff	___flsub@a+2,___fladd@a+2
  6036  005AD0  C02C  F01C         	movff	___flsub@a+3,___fladd@a+3
  6037  005AD4  ECD3  F015         	call	___fladd	;wreg free
  6038  005AD8  C015  F025         	movff	?___fladd,?___flsub
  6039  005ADC  C016  F026         	movff	?___fladd+1,?___flsub+1
  6040  005AE0  C017  F027         	movff	?___fladd+2,?___flsub+2
  6041  005AE4  C018  F028         	movff	?___fladd+3,?___flsub+3
  6042  005AE8  0012               	return		;funcret
  6043  005AEA                     __end_of___flsub:
  6044                           	callstack 0
  6045                           
  6046 ;; *************** function ___awmod *****************
  6047 ;; Defined at:
  6048 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  dividend        2    2[COMRAM] int 
  6051 ;;  divisor         2    4[COMRAM] int 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  sign            1    7[COMRAM] unsigned char 
  6054 ;;  counter         1    6[COMRAM] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  2    2[COMRAM] int 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6064 ;;      Params:         4       0       0       0       0       0       0       0       0
  6065 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6067 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6068 ;;Total ram usage:        6 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 2
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_efgtoa
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078                           	psect	text16
  6079  0053BA                     __ptext16:
  6080                           	callstack 0
  6081  0053BA                     ___awmod:
  6082                           	callstack 24
  6083  0053BA  0E00               	movlw	0
  6084  0053BC  6E08               	movwf	___awmod@sign^0,c
  6085  0053BE  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
  6086  0053C0  EFE6  F029         	goto	u8950
  6087  0053C4  EFE4  F029         	goto	u8951
  6088  0053C8                     u8951:
  6089  0053C8  EFEC  F029         	goto	l6996
  6090  0053CC                     u8950:
  6091  0053CC  6C03               	negf	___awmod@dividend^0,c
  6092  0053CE  1E04               	comf	(___awmod@dividend+1)^0,f,c
  6093  0053D0  B0D8               	btfsc	status,0,c
  6094  0053D2  2A04               	incf	(___awmod@dividend+1)^0,f,c
  6095  0053D4  0E01               	movlw	1
  6096  0053D6  6E08               	movwf	___awmod@sign^0,c
  6097  0053D8                     l6996:
  6098  0053D8  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  6099  0053DA  EFF3  F029         	goto	u8960
  6100  0053DE  EFF1  F029         	goto	u8961
  6101  0053E2                     u8961:
  6102  0053E2  EFF7  F029         	goto	l7000
  6103  0053E6                     u8960:
  6104  0053E6  6C05               	negf	___awmod@divisor^0,c
  6105  0053E8  1E06               	comf	(___awmod@divisor+1)^0,f,c
  6106  0053EA  B0D8               	btfsc	status,0,c
  6107  0053EC  2A06               	incf	(___awmod@divisor+1)^0,f,c
  6108  0053EE                     l7000:
  6109  0053EE  5005               	movf	___awmod@divisor^0,w,c
  6110  0053F0  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  6111  0053F2  B4D8               	btfsc	status,2,c
  6112  0053F4  EFFE  F029         	goto	u8971
  6113  0053F8  EF00  F02A         	goto	u8970
  6114  0053FC                     u8971:
  6115  0053FC  EF24  F02A         	goto	l7016
  6116  005400                     u8970:
  6117  005400  0E01               	movlw	1
  6118  005402  6E07               	movwf	___awmod@counter^0,c
  6119  005404  EF08  F02A         	goto	l7006
  6120  005408                     l7004:
  6121  005408  90D8               	bcf	status,0,c
  6122  00540A  3605               	rlcf	___awmod@divisor^0,f,c
  6123  00540C  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  6124  00540E  2A07               	incf	___awmod@counter^0,f,c
  6125  005410                     l7006:
  6126  005410  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  6127  005412  EF0D  F02A         	goto	u8981
  6128  005416  EF0F  F02A         	goto	u8980
  6129  00541A                     u8981:
  6130  00541A  EF04  F02A         	goto	l7004
  6131  00541E                     u8980:
  6132  00541E                     l7008:
  6133  00541E  5005               	movf	___awmod@divisor^0,w,c
  6134  005420  5C03               	subwf	___awmod@dividend^0,w,c
  6135  005422  5006               	movf	(___awmod@divisor+1)^0,w,c
  6136  005424  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  6137  005426  A0D8               	btfss	status,0,c
  6138  005428  EF18  F02A         	goto	u8991
  6139  00542C  EF1A  F02A         	goto	u8990
  6140  005430                     u8991:
  6141  005430  EF1E  F02A         	goto	l7012
  6142  005434                     u8990:
  6143  005434  5005               	movf	___awmod@divisor^0,w,c
  6144  005436  5E03               	subwf	___awmod@dividend^0,f,c
  6145  005438  5006               	movf	(___awmod@divisor+1)^0,w,c
  6146  00543A  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  6147  00543C                     l7012:
  6148  00543C  90D8               	bcf	status,0,c
  6149  00543E  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  6150  005440  3205               	rrcf	___awmod@divisor^0,f,c
  6151  005442  2E07               	decfsz	___awmod@counter^0,f,c
  6152  005444  EF0F  F02A         	goto	l7008
  6153  005448                     l7016:
  6154  005448  5008               	movf	___awmod@sign^0,w,c
  6155  00544A  B4D8               	btfsc	status,2,c
  6156  00544C  EF2A  F02A         	goto	u9001
  6157  005450  EF2C  F02A         	goto	u9000
  6158  005454                     u9001:
  6159  005454  EF30  F02A         	goto	l7020
  6160  005458                     u9000:
  6161  005458  6C03               	negf	___awmod@dividend^0,c
  6162  00545A  1E04               	comf	(___awmod@dividend+1)^0,f,c
  6163  00545C  B0D8               	btfsc	status,0,c
  6164  00545E  2A04               	incf	(___awmod@dividend+1)^0,f,c
  6165  005460                     l7020:
  6166  005460  C003  F003         	movff	___awmod@dividend,?___awmod
  6167  005464  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  6168  005468  0012               	return		;funcret
  6169  00546A                     __end_of___awmod:
  6170                           	callstack 0
  6171                           
  6172 ;; *************** function ___awdiv *****************
  6173 ;; Defined at:
  6174 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  dividend        2    2[COMRAM] int 
  6177 ;;  divisor         2    4[COMRAM] int 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  quotient        2    8[COMRAM] int 
  6180 ;;  sign            1    7[COMRAM] unsigned char 
  6181 ;;  counter         1    6[COMRAM] unsigned char 
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  2    2[COMRAM] int 
  6184 ;; Registers used:
  6185 ;;		wreg, status,2, status,0
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6191 ;;      Params:         4       0       0       0       0       0       0       0       0
  6192 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6194 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6195 ;;Total ram usage:        8 bytes
  6196 ;; Hardware stack levels used: 1
  6197 ;; Hardware stack levels required when called: 2
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_efgtoa
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text17
  6206  00517C                     __ptext17:
  6207                           	callstack 0
  6208  00517C                     ___awdiv:
  6209                           	callstack 24
  6210  00517C  0E00               	movlw	0
  6211  00517E  6E08               	movwf	___awdiv@sign^0,c
  6212  005180  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  6213  005182  EFC7  F028         	goto	u8890
  6214  005186  EFC5  F028         	goto	u8891
  6215  00518A                     u8891:
  6216  00518A  EFCD  F028         	goto	l6952
  6217  00518E                     u8890:
  6218  00518E  6C05               	negf	___awdiv@divisor^0,c
  6219  005190  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  6220  005192  B0D8               	btfsc	status,0,c
  6221  005194  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  6222  005196  0E01               	movlw	1
  6223  005198  6E08               	movwf	___awdiv@sign^0,c
  6224  00519A                     l6952:
  6225  00519A  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  6226  00519C  EFD4  F028         	goto	u8900
  6227  0051A0  EFD2  F028         	goto	u8901
  6228  0051A4                     u8901:
  6229  0051A4  EFDA  F028         	goto	l6958
  6230  0051A8                     u8900:
  6231  0051A8  6C03               	negf	___awdiv@dividend^0,c
  6232  0051AA  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  6233  0051AC  B0D8               	btfsc	status,0,c
  6234  0051AE  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  6235  0051B0  0E01               	movlw	1
  6236  0051B2  1A08               	xorwf	___awdiv@sign^0,f,c
  6237  0051B4                     l6958:
  6238  0051B4  0E00               	movlw	0
  6239  0051B6  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  6240  0051B8  0E00               	movlw	0
  6241  0051BA  6E09               	movwf	___awdiv@quotient^0,c
  6242  0051BC  5005               	movf	___awdiv@divisor^0,w,c
  6243  0051BE  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  6244  0051C0  B4D8               	btfsc	status,2,c
  6245  0051C2  EFE5  F028         	goto	u8911
  6246  0051C6  EFE7  F028         	goto	u8910
  6247  0051CA                     u8911:
  6248  0051CA  EF0F  F029         	goto	l6980
  6249  0051CE                     u8910:
  6250  0051CE  0E01               	movlw	1
  6251  0051D0  6E07               	movwf	___awdiv@counter^0,c
  6252  0051D2  EFEF  F028         	goto	l6966
  6253  0051D6                     l6964:
  6254  0051D6  90D8               	bcf	status,0,c
  6255  0051D8  3605               	rlcf	___awdiv@divisor^0,f,c
  6256  0051DA  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  6257  0051DC  2A07               	incf	___awdiv@counter^0,f,c
  6258  0051DE                     l6966:
  6259  0051DE  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  6260  0051E0  EFF4  F028         	goto	u8921
  6261  0051E4  EFF6  F028         	goto	u8920
  6262  0051E8                     u8921:
  6263  0051E8  EFEB  F028         	goto	l6964
  6264  0051EC                     u8920:
  6265  0051EC                     l6968:
  6266  0051EC  90D8               	bcf	status,0,c
  6267  0051EE  3609               	rlcf	___awdiv@quotient^0,f,c
  6268  0051F0  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  6269  0051F2  5005               	movf	___awdiv@divisor^0,w,c
  6270  0051F4  5C03               	subwf	___awdiv@dividend^0,w,c
  6271  0051F6  5006               	movf	(___awdiv@divisor+1)^0,w,c
  6272  0051F8  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  6273  0051FA  A0D8               	btfss	status,0,c
  6274  0051FC  EF02  F029         	goto	u8931
  6275  005200  EF04  F029         	goto	u8930
  6276  005204                     u8931:
  6277  005204  EF09  F029         	goto	l6976
  6278  005208                     u8930:
  6279  005208  5005               	movf	___awdiv@divisor^0,w,c
  6280  00520A  5E03               	subwf	___awdiv@dividend^0,f,c
  6281  00520C  5006               	movf	(___awdiv@divisor+1)^0,w,c
  6282  00520E  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  6283  005210  8009               	bsf	___awdiv@quotient^0,0,c
  6284  005212                     l6976:
  6285  005212  90D8               	bcf	status,0,c
  6286  005214  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  6287  005216  3205               	rrcf	___awdiv@divisor^0,f,c
  6288  005218  2E07               	decfsz	___awdiv@counter^0,f,c
  6289  00521A  EFF6  F028         	goto	l6968
  6290  00521E                     l6980:
  6291  00521E  5008               	movf	___awdiv@sign^0,w,c
  6292  005220  B4D8               	btfsc	status,2,c
  6293  005222  EF15  F029         	goto	u8941
  6294  005226  EF17  F029         	goto	u8940
  6295  00522A                     u8941:
  6296  00522A  EF1B  F029         	goto	l6984
  6297  00522E                     u8940:
  6298  00522E  6C09               	negf	___awdiv@quotient^0,c
  6299  005230  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  6300  005232  B0D8               	btfsc	status,0,c
  6301  005234  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  6302  005236                     l6984:
  6303  005236  C009  F003         	movff	___awdiv@quotient,?___awdiv
  6304  00523A  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  6305  00523E  0012               	return		;funcret
  6306  005240                     __end_of___awdiv:
  6307                           	callstack 0
  6308                           
  6309 ;; *************** function _dtoa *****************
  6310 ;; Defined at:
  6311 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6314 ;;		 -> sprintf@f(11), 
  6315 ;;  d               8   31[COMRAM] long long 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  n               8   55[COMRAM] long long 
  6318 ;;  i               2   63[COMRAM] int 
  6319 ;;  s               2   53[COMRAM] int 
  6320 ;;  w               2   51[COMRAM] int 
  6321 ;;  p               2   49[COMRAM] int 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  2   29[COMRAM] int 
  6324 ;; Registers used:
  6325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6331 ;;      Params:        10       0       0       0       0       0       0       0       0
  6332 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6333 ;;      Temps:          8       0       0       0       0       0       0       0       0
  6334 ;;      Totals:        36       0       0       0       0       0       0       0       0
  6335 ;;Total ram usage:       36 bytes
  6336 ;; Hardware stack levels used: 1
  6337 ;; Hardware stack levels required when called: 6
  6338 ;; This function calls:
  6339 ;;		___aodiv
  6340 ;;		___aomod
  6341 ;;		_abs
  6342 ;;		_pad
  6343 ;; This function is called by:
  6344 ;;		_vfpfcnvrt
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text18
  6349  003C6C                     __ptext18:
  6350                           	callstack 0
  6351  003C6C                     _dtoa:
  6352                           	callstack 21
  6353  003C6C                     
  6354                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6355  003C6C  C020  F038         	movff	dtoa@d,dtoa@n
  6356  003C70  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  6357  003C74  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  6358  003C78  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  6359  003C7C  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  6360  003C80  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  6361  003C84  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  6362  003C88  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  6363  003C8C                     
  6364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6365  003C8C  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  6366  003C8E  EF4B  F01E         	goto	u9461
  6367  003C92  EF4E  F01E         	goto	u9460
  6368  003C96                     u9461:
  6369  003C96  0E01               	movlw	1
  6370  003C98  EF4F  F01E         	goto	u9470
  6371  003C9C                     u9460:
  6372  003C9C  0E00               	movlw	0
  6373  003C9E                     u9470:
  6374  003C9E  6E36               	movwf	dtoa@s^0,c
  6375  003CA0  6A37               	clrf	(dtoa@s+1)^0,c
  6376                           
  6377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6378  003CA2  5036               	movf	dtoa@s^0,w,c
  6379  003CA4  1037               	iorwf	(dtoa@s+1)^0,w,c
  6380  003CA6  B4D8               	btfsc	status,2,c
  6381  003CA8  EF58  F01E         	goto	u9481
  6382  003CAC  EF5A  F01E         	goto	u9480
  6383  003CB0                     u9481:
  6384  003CB0  EF6A  F01E         	goto	l7226
  6385  003CB4                     u9480:
  6386  003CB4                     
  6387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6388  003CB4  1E3F               	comf	(dtoa@n+7)^0,f,c
  6389  003CB6  1E3E               	comf	(dtoa@n+6)^0,f,c
  6390  003CB8  1E3D               	comf	(dtoa@n+5)^0,f,c
  6391  003CBA  1E3C               	comf	(dtoa@n+4)^0,f,c
  6392  003CBC  1E3B               	comf	(dtoa@n+3)^0,f,c
  6393  003CBE  1E3A               	comf	(dtoa@n+2)^0,f,c
  6394  003CC0  1E39               	comf	(dtoa@n+1)^0,f,c
  6395  003CC2  6C38               	negf	dtoa@n^0,c
  6396  003CC4  0E00               	movlw	0
  6397  003CC6  2239               	addwfc	(dtoa@n+1)^0,f,c
  6398  003CC8  223A               	addwfc	(dtoa@n+2)^0,f,c
  6399  003CCA  223B               	addwfc	(dtoa@n+3)^0,f,c
  6400  003CCC  223C               	addwfc	(dtoa@n+4)^0,f,c
  6401  003CCE  223D               	addwfc	(dtoa@n+5)^0,f,c
  6402  003CD0  223E               	addwfc	(dtoa@n+6)^0,f,c
  6403  003CD2  223F               	addwfc	(dtoa@n+7)^0,f,c
  6404  003CD4                     l7226:
  6405                           
  6406                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6407  003CD4  0100               	movlb	0	; () banked
  6408  003CD6  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  6409  003CD8  EF70  F01E         	goto	u9491
  6410  003CDC  EF72  F01E         	goto	u9490
  6411  003CE0                     u9491:
  6412  003CE0  EF73  F01E         	goto	l7230
  6413  003CE4                     u9490:
  6414  003CE4                     
  6415                           ; BSR set to: 0
  6416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6417  003CE4  925A               	bcf	_flags^0,1,c
  6418  003CE6                     l7230:
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6422  003CE6  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  6423  003CE8  EF80  F01E         	goto	u9500
  6424  003CEC  51F8               	movf	(_prec+1)& (0+255),w,b
  6425  003CEE  E106               	bnz	u9501
  6426  003CF0  05F7               	decf	_prec& (0+255),w,b
  6427  003CF2  B0D8               	btfsc	status,0,c
  6428  003CF4  EF7E  F01E         	goto	u9501
  6429  003CF8  EF80  F01E         	goto	u9500
  6430  003CFC                     u9501:
  6431  003CFC  EF86  F01E         	goto	l961
  6432  003D00                     u9500:
  6433  003D00                     
  6434                           ; BSR set to: 0
  6435  003D00  0E00               	movlw	0
  6436  003D02  6E33               	movwf	(dtoa@p+1)^0,c
  6437  003D04  0E01               	movlw	1
  6438  003D06  6E32               	movwf	dtoa@p^0,c
  6439  003D08  EF8A  F01E         	goto	l963
  6440  003D0C                     l961:
  6441                           
  6442                           ; BSR set to: 0
  6443  003D0C  C0F7  F032         	movff	_prec,dtoa@p
  6444  003D10  C0F8  F033         	movff	_prec+1,dtoa@p+1
  6445  003D14                     l963:
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6449  003D14  C134  F034         	movff	_width,dtoa@w
  6450  003D18  C135  F035         	movff	_width+1,dtoa@w+1
  6451  003D1C                     
  6452                           ; BSR set to: 0
  6453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6454  003D1C  5036               	movf	dtoa@s^0,w,c
  6455  003D1E  1037               	iorwf	(dtoa@s+1)^0,w,c
  6456  003D20  A4D8               	btfss	status,2,c
  6457  003D22  EF95  F01E         	goto	u9511
  6458  003D26  EF97  F01E         	goto	u9510
  6459  003D2A                     u9511:
  6460  003D2A  EF9E  F01E         	goto	l7238
  6461  003D2E                     u9510:
  6462  003D2E                     
  6463                           ; BSR set to: 0
  6464  003D2E  A45A               	btfss	_flags^0,2,c
  6465  003D30  EF9C  F01E         	goto	u9521
  6466  003D34  EF9E  F01E         	goto	u9520
  6467  003D38                     u9521:
  6468  003D38  EFA1  F01E         	goto	l7240
  6469  003D3C                     u9520:
  6470  003D3C                     l7238:
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  6474  003D3C  0634               	decf	dtoa@w^0,f,c
  6475  003D3E  A0D8               	btfss	status,0,c
  6476  003D40  0635               	decf	(dtoa@w+1)^0,f,c
  6477  003D42                     l7240:
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6481  003D42  0E00               	movlw	0
  6482  003D44  6E41               	movwf	(dtoa@i+1)^0,c
  6483  003D46  0E4F               	movlw	79
  6484  003D48  6E40               	movwf	dtoa@i^0,c
  6485  003D4A                     
  6486                           ; BSR set to: 0
  6487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6488  003D4A  0E00               	movlw	0
  6489  003D4C  0101               	movlb	1	; () banked
  6490  003D4E  6F8D               	movwf	(_dbuf+79)& (0+255),b
  6491                           
  6492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6493  003D50  EF26  F01F         	goto	l7254
  6494  003D54                     l7244:
  6495                           
  6496                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  6497  003D54  0640               	decf	dtoa@i^0,f,c
  6498  003D56  A0D8               	btfss	status,0,c
  6499  003D58  0641               	decf	(dtoa@i+1)^0,f,c
  6500  003D5A                     
  6501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6502  003D5A  0E3E               	movlw	low _dbuf
  6503  003D5C  2440               	addwf	dtoa@i^0,w,c
  6504  003D5E  6ED9               	movwf	fsr2l,c
  6505  003D60  0E01               	movlw	high _dbuf
  6506  003D62  2041               	addwfc	(dtoa@i+1)^0,w,c
  6507  003D64  6EDA               	movwf	fsr2h,c
  6508  003D66  C038  F003         	movff	dtoa@n,___aomod@dividend
  6509  003D6A  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  6510  003D6E  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  6511  003D72  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  6512  003D76  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  6513  003D7A  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  6514  003D7E  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  6515  003D82  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  6516  003D86  0E0A               	movlw	10
  6517  003D88  6E0B               	movwf	___aomod@divisor^0,c
  6518  003D8A  0E00               	movlw	0
  6519  003D8C  6E0C               	movwf	(___aomod@divisor+1)^0,c
  6520  003D8E  0E00               	movlw	0
  6521  003D90  6E0D               	movwf	(___aomod@divisor+2)^0,c
  6522  003D92  0E00               	movlw	0
  6523  003D94  6E0E               	movwf	(___aomod@divisor+3)^0,c
  6524  003D96  0E00               	movlw	0
  6525  003D98  6E0F               	movwf	(___aomod@divisor+4)^0,c
  6526  003D9A  0E00               	movlw	0
  6527  003D9C  6E10               	movwf	(___aomod@divisor+5)^0,c
  6528  003D9E  0E00               	movlw	0
  6529  003DA0  6E11               	movwf	(___aomod@divisor+6)^0,c
  6530  003DA2  0E00               	movlw	0
  6531  003DA4  6E12               	movwf	(___aomod@divisor+7)^0,c
  6532  003DA6  EC27  F024         	call	___aomod	;wreg free
  6533  003DAA  C003  F028         	movff	?___aomod,??_dtoa
  6534  003DAE  C004  F029         	movff	?___aomod+1,??_dtoa+1
  6535  003DB2  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  6536  003DB6  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  6537  003DBA  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  6538  003DBE  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  6539  003DC2  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  6540  003DC6  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  6541  003DCA  C028  F015         	movff	??_dtoa,abs@a
  6542  003DCE  C02A  F016         	movff	??_dtoa+2,abs@a+1
  6543  003DD2  ECDB  F02D         	call	_abs	;wreg free
  6544  003DD6  5015               	movf	?_abs^0,w,c
  6545  003DD8  0F30               	addlw	48
  6546  003DDA  6EDF               	movwf	indf2,c
  6547  003DDC                     
  6548                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  6549  003DDC  0632               	decf	dtoa@p^0,f,c
  6550  003DDE  A0D8               	btfss	status,0,c
  6551  003DE0  0633               	decf	(dtoa@p+1)^0,f,c
  6552  003DE2                     
  6553                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  6554  003DE2  0634               	decf	dtoa@w^0,f,c
  6555  003DE4  A0D8               	btfss	status,0,c
  6556  003DE6  0635               	decf	(dtoa@w+1)^0,f,c
  6557  003DE8                     
  6558                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6559  003DE8  C038  F003         	movff	dtoa@n,___aodiv@dividend
  6560  003DEC  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  6561  003DF0  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  6562  003DF4  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  6563  003DF8  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  6564  003DFC  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  6565  003E00  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  6566  003E04  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  6567  003E08  0E0A               	movlw	10
  6568  003E0A  6E0B               	movwf	___aodiv@divisor^0,c
  6569  003E0C  0E00               	movlw	0
  6570  003E0E  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  6571  003E10  0E00               	movlw	0
  6572  003E12  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  6573  003E14  0E00               	movlw	0
  6574  003E16  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  6575  003E18  0E00               	movlw	0
  6576  003E1A  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  6577  003E1C  0E00               	movlw	0
  6578  003E1E  6E10               	movwf	(___aodiv@divisor+5)^0,c
  6579  003E20  0E00               	movlw	0
  6580  003E22  6E11               	movwf	(___aodiv@divisor+6)^0,c
  6581  003E24  0E00               	movlw	0
  6582  003E26  6E12               	movwf	(___aodiv@divisor+7)^0,c
  6583  003E28  ECA8  F022         	call	___aodiv	;wreg free
  6584  003E2C  C003  F038         	movff	?___aodiv,dtoa@n
  6585  003E30  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  6586  003E34  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  6587  003E38  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  6588  003E3C  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  6589  003E40  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  6590  003E44  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  6591  003E48  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  6592  003E4C                     l7254:
  6593                           
  6594                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6595  003E4C  BE41               	btfsc	(dtoa@i+1)^0,7,c
  6596  003E4E  EF31  F01F         	goto	u9531
  6597  003E52  5041               	movf	(dtoa@i+1)^0,w,c
  6598  003E54  E108               	bnz	u9530
  6599  003E56  0440               	decf	dtoa@i^0,w,c
  6600  003E58  A0D8               	btfss	status,0,c
  6601  003E5A  EF31  F01F         	goto	u9531
  6602  003E5E  EF33  F01F         	goto	u9530
  6603  003E62                     u9531:
  6604  003E62  EF63  F01F         	goto	l7264
  6605  003E66                     u9530:
  6606  003E66  5038               	movf	dtoa@n^0,w,c
  6607  003E68  1039               	iorwf	(dtoa@n+1)^0,w,c
  6608  003E6A  103A               	iorwf	(dtoa@n+2)^0,w,c
  6609  003E6C  103B               	iorwf	(dtoa@n+3)^0,w,c
  6610  003E6E  103C               	iorwf	(dtoa@n+4)^0,w,c
  6611  003E70  103D               	iorwf	(dtoa@n+5)^0,w,c
  6612  003E72  103E               	iorwf	(dtoa@n+6)^0,w,c
  6613  003E74  103F               	iorwf	(dtoa@n+7)^0,w,c
  6614  003E76  A4D8               	btfss	status,2,c
  6615  003E78  EF40  F01F         	goto	u9541
  6616  003E7C  EF42  F01F         	goto	u9540
  6617  003E80                     u9541:
  6618  003E80  EFAA  F01E         	goto	l7244
  6619  003E84                     u9540:
  6620  003E84  BE33               	btfsc	(dtoa@p+1)^0,7,c
  6621  003E86  EF4F  F01F         	goto	u9550
  6622  003E8A  5033               	movf	(dtoa@p+1)^0,w,c
  6623  003E8C  E106               	bnz	u9551
  6624  003E8E  0432               	decf	dtoa@p^0,w,c
  6625  003E90  B0D8               	btfsc	status,0,c
  6626  003E92  EF4D  F01F         	goto	u9551
  6627  003E96  EF4F  F01F         	goto	u9550
  6628  003E9A                     u9551:
  6629  003E9A  EFAA  F01E         	goto	l7244
  6630  003E9E                     u9550:
  6631  003E9E  BE35               	btfsc	(dtoa@w+1)^0,7,c
  6632  003EA0  EF5A  F01F         	goto	u9561
  6633  003EA4  5035               	movf	(dtoa@w+1)^0,w,c
  6634  003EA6  E108               	bnz	u9560
  6635  003EA8  0434               	decf	dtoa@w^0,w,c
  6636  003EAA  A0D8               	btfss	status,0,c
  6637  003EAC  EF5A  F01F         	goto	u9561
  6638  003EB0  EF5C  F01F         	goto	u9560
  6639  003EB4                     u9561:
  6640  003EB4  EF63  F01F         	goto	l7264
  6641  003EB8                     u9560:
  6642  003EB8  B25A               	btfsc	_flags^0,1,c
  6643  003EBA  EF61  F01F         	goto	u9571
  6644  003EBE  EF63  F01F         	goto	u9570
  6645  003EC2                     u9571:
  6646  003EC2  EFAA  F01E         	goto	l7244
  6647  003EC6                     u9570:
  6648  003EC6                     l7264:
  6649                           
  6650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6651  003EC6  5036               	movf	dtoa@s^0,w,c
  6652  003EC8  1037               	iorwf	(dtoa@s+1)^0,w,c
  6653  003ECA  A4D8               	btfss	status,2,c
  6654  003ECC  EF6A  F01F         	goto	u9581
  6655  003ED0  EF6C  F01F         	goto	u9580
  6656  003ED4                     u9581:
  6657  003ED4  EF73  F01F         	goto	l7268
  6658  003ED8                     u9580:
  6659  003ED8  A45A               	btfss	_flags^0,2,c
  6660  003EDA  EF71  F01F         	goto	u9591
  6661  003EDE  EF73  F01F         	goto	u9590
  6662  003EE2                     u9591:
  6663  003EE2  EF91  F01F         	goto	l7278
  6664  003EE6                     u9590:
  6665  003EE6                     l7268:
  6666                           
  6667                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  6668  003EE6  0640               	decf	dtoa@i^0,f,c
  6669  003EE8  A0D8               	btfss	status,0,c
  6670  003EEA  0641               	decf	(dtoa@i+1)^0,f,c
  6671  003EEC                     
  6672                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6673  003EEC  5036               	movf	dtoa@s^0,w,c
  6674  003EEE  1037               	iorwf	(dtoa@s+1)^0,w,c
  6675  003EF0  A4D8               	btfss	status,2,c
  6676  003EF2  EF7D  F01F         	goto	u9601
  6677  003EF6  EF7F  F01F         	goto	u9600
  6678  003EFA                     u9601:
  6679  003EFA  EF85  F01F         	goto	l7274
  6680  003EFE                     u9600:
  6681  003EFE  0E00               	movlw	0
  6682  003F00  6E31               	movwf	(_dtoa$1325+1)^0,c
  6683  003F02  0E2B               	movlw	43
  6684  003F04  6E30               	movwf	_dtoa$1325^0,c
  6685  003F06  EF89  F01F         	goto	l7276
  6686  003F0A                     l7274:
  6687  003F0A  0E00               	movlw	0
  6688  003F0C  6E31               	movwf	(_dtoa$1325+1)^0,c
  6689  003F0E  0E2D               	movlw	45
  6690  003F10  6E30               	movwf	_dtoa$1325^0,c
  6691  003F12                     l7276:
  6692  003F12  0E3E               	movlw	low _dbuf
  6693  003F14  2440               	addwf	dtoa@i^0,w,c
  6694  003F16  6ED9               	movwf	fsr2l,c
  6695  003F18  0E01               	movlw	high _dbuf
  6696  003F1A  2041               	addwfc	(dtoa@i+1)^0,w,c
  6697  003F1C  6EDA               	movwf	fsr2h,c
  6698  003F1E  C030  FFDF         	movff	_dtoa$1325,indf2
  6699  003F22                     l7278:
  6700                           
  6701                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6702  003F22  C01E  F013         	movff	dtoa@fp,pad@fp
  6703  003F26  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  6704  003F2A  0E3E               	movlw	low _dbuf
  6705  003F2C  2440               	addwf	dtoa@i^0,w,c
  6706  003F2E  6E15               	movwf	pad@buf^0,c
  6707  003F30  0E01               	movlw	high _dbuf
  6708  003F32  2041               	addwfc	(dtoa@i+1)^0,w,c
  6709  003F34  6E16               	movwf	(pad@buf+1)^0,c
  6710  003F36  C034  F017         	movff	dtoa@w,pad@p
  6711  003F3A  C035  F018         	movff	dtoa@w+1,pad@p+1
  6712  003F3E  EC20  F029         	call	_pad	;wreg free
  6713  003F42  C013  F01E         	movff	?_pad,?_dtoa
  6714  003F46  C014  F01F         	movff	?_pad+1,?_dtoa+1
  6715  003F4A  0012               	return		;funcret
  6716  003F4C                     __end_of_dtoa:
  6717                           	callstack 0
  6718                           
  6719 ;; *************** function _pad *****************
  6720 ;; Defined at:
  6721 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  6724 ;;		 -> sprintf@f(11), 
  6725 ;;  buf             2   20[COMRAM] PTR unsigned char 
  6726 ;;		 -> dbuf(80), 
  6727 ;;  p               2   22[COMRAM] int 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;  w               2   27[COMRAM] int 
  6730 ;;  i               2   25[COMRAM] int 
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  2   18[COMRAM] int 
  6733 ;; Registers used:
  6734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6740 ;;      Params:         6       0       0       0       0       0       0       0       0
  6741 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6742 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6743 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6744 ;;Total ram usage:       11 bytes
  6745 ;; Hardware stack levels used: 1
  6746 ;; Hardware stack levels required when called: 5
  6747 ;; This function calls:
  6748 ;;		_fputc
  6749 ;;		_fputs
  6750 ;;		_strlen
  6751 ;; This function is called by:
  6752 ;;		_dtoa
  6753 ;;		_efgtoa
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text19
  6758  005240                     __ptext19:
  6759                           	callstack 0
  6760  005240                     _pad:
  6761                           	callstack 21
  6762  005240                     
  6763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6764  005240  A05A               	btfss	_flags^0,0,c
  6765  005242  EF25  F029         	goto	u9171
  6766  005246  EF27  F029         	goto	u9170
  6767  00524A                     u9171:
  6768  00524A  EF31  F029         	goto	l7118
  6769  00524E                     u9170:
  6770  00524E                     
  6771                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6772  00524E  C015  F00C         	movff	pad@buf,fputs@s
  6773  005252  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6774  005256  C013  F00E         	movff	pad@fp,fputs@fp
  6775  00525A  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6776  00525E  EC97  F02D         	call	_fputs	;wreg free
  6777  005262                     l7118:
  6778                           
  6779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6780  005262  BE18               	btfsc	(pad@p+1)^0,7,c
  6781  005264  EF36  F029         	goto	u9181
  6782  005268  EF38  F029         	goto	u9180
  6783  00526C                     u9181:
  6784  00526C  EF3E  F029         	goto	l7122
  6785  005270                     u9180:
  6786  005270  C017  F01C         	movff	pad@p,pad@w
  6787  005274  C018  F01D         	movff	pad@p+1,pad@w+1
  6788  005278  EF42  F029         	goto	l950
  6789  00527C                     l7122:
  6790  00527C  0E00               	movlw	0
  6791  00527E  6E1D               	movwf	(pad@w+1)^0,c
  6792  005280  0E00               	movlw	0
  6793  005282  6E1C               	movwf	pad@w^0,c
  6794  005284                     l950:
  6795                           
  6796                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6797  005284  0E00               	movlw	0
  6798  005286  6E1B               	movwf	(pad@i+1)^0,c
  6799  005288  0E00               	movlw	0
  6800  00528A  6E1A               	movwf	pad@i^0,c
  6801                           
  6802                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6803  00528C  EF54  F029         	goto	l7128
  6804  005290                     l7124:
  6805                           
  6806                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6807  005290  0E00               	movlw	0
  6808  005292  6E04               	movwf	(fputc@c+1)^0,c
  6809  005294  0E20               	movlw	32
  6810  005296  6E03               	movwf	fputc@c^0,c
  6811  005298  C013  F005         	movff	pad@fp,fputc@fp
  6812  00529C  C014  F006         	movff	pad@fp+1,fputc@fp+1
  6813  0052A0  EC59  F028         	call	_fputc	;wreg free
  6814  0052A4                     
  6815                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6816  0052A4  4A1A               	infsnz	pad@i^0,f,c
  6817  0052A6  2A1B               	incf	(pad@i+1)^0,f,c
  6818  0052A8                     l7128:
  6819                           
  6820                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6821  0052A8  501C               	movf	pad@w^0,w,c
  6822  0052AA  5C1A               	subwf	pad@i^0,w,c
  6823  0052AC  501B               	movf	(pad@i+1)^0,w,c
  6824  0052AE  0A80               	xorlw	128
  6825  0052B0  6E19               	movwf	??_pad^0,c
  6826  0052B2  501D               	movf	(pad@w+1)^0,w,c
  6827  0052B4  0A80               	xorlw	128
  6828  0052B6  5819               	subwfb	??_pad^0,w,c
  6829  0052B8  A0D8               	btfss	status,0,c
  6830  0052BA  EF61  F029         	goto	u9191
  6831  0052BE  EF63  F029         	goto	u9190
  6832  0052C2                     u9191:
  6833  0052C2  EF48  F029         	goto	l7124
  6834  0052C6                     u9190:
  6835  0052C6                     
  6836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6837  0052C6  B05A               	btfsc	_flags^0,0,c
  6838  0052C8  EF68  F029         	goto	u9201
  6839  0052CC  EF6A  F029         	goto	u9200
  6840  0052D0                     u9201:
  6841  0052D0  EF74  F029         	goto	l7132
  6842  0052D4                     u9200:
  6843  0052D4                     
  6844                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6845  0052D4  C015  F00C         	movff	pad@buf,fputs@s
  6846  0052D8  C016  F00D         	movff	pad@buf+1,fputs@s+1
  6847  0052DC  C013  F00E         	movff	pad@fp,fputs@fp
  6848  0052E0  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  6849  0052E4  EC97  F02D         	call	_fputs	;wreg free
  6850  0052E8                     l7132:
  6851                           
  6852                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6853  0052E8  C015  F003         	movff	pad@buf,strlen@s
  6854  0052EC  C016  F004         	movff	pad@buf+1,strlen@s+1
  6855  0052F0  EC6B  F02E         	call	_strlen	;wreg free
  6856  0052F4  501C               	movf	pad@w^0,w,c
  6857  0052F6  2403               	addwf	?_strlen^0,w,c
  6858  0052F8  6E13               	movwf	?_pad^0,c
  6859  0052FA  501D               	movf	(pad@w+1)^0,w,c
  6860  0052FC  2004               	addwfc	(?_strlen+1)^0,w,c
  6861  0052FE  6E14               	movwf	(?_pad+1)^0,c
  6862  005300  0012               	return		;funcret
  6863  005302                     __end_of_pad:
  6864                           	callstack 0
  6865                           
  6866 ;; *************** function _strlen *****************
  6867 ;; Defined at:
  6868 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  s               2    2[COMRAM] PTR const unsigned char 
  6871 ;;		 -> dbuf(80), 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  a               2    4[COMRAM] PTR const unsigned char 
  6874 ;;		 -> dbuf(80), 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  2    2[COMRAM] unsigned int 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6884 ;;      Params:         2       0       0       0       0       0       0       0       0
  6885 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6887 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6888 ;;Total ram usage:        4 bytes
  6889 ;; Hardware stack levels used: 1
  6890 ;; Hardware stack levels required when called: 2
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_pad
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text20
  6899  005CD6                     __ptext20:
  6900                           	callstack 0
  6901  005CD6                     _strlen:
  6902                           	callstack 23
  6903  005CD6  C003  F005         	movff	strlen@s,strlen@a
  6904  005CDA  C004  F006         	movff	strlen@s+1,strlen@a+1
  6905  005CDE  EF73  F02E         	goto	l6574
  6906  005CE2                     l6572:
  6907  005CE2  4A03               	infsnz	strlen@s^0,f,c
  6908  005CE4  2A04               	incf	(strlen@s+1)^0,f,c
  6909  005CE6                     l6574:
  6910  005CE6  C003  FFD9         	movff	strlen@s,fsr2l
  6911  005CEA  C004  FFDA         	movff	strlen@s+1,fsr2h
  6912  005CEE  50DF               	movf	indf2,w,c
  6913  005CF0  A4D8               	btfss	status,2,c
  6914  005CF2  EF7D  F02E         	goto	u8311
  6915  005CF6  EF7F  F02E         	goto	u8310
  6916  005CFA                     u8311:
  6917  005CFA  EF71  F02E         	goto	l6572
  6918  005CFE                     u8310:
  6919  005CFE  5005               	movf	strlen@a^0,w,c
  6920  005D00  5C03               	subwf	strlen@s^0,w,c
  6921  005D02  6E03               	movwf	?_strlen^0,c
  6922  005D04  5006               	movf	(strlen@a+1)^0,w,c
  6923  005D06  5804               	subwfb	(strlen@s+1)^0,w,c
  6924  005D08  6E04               	movwf	(?_strlen+1)^0,c
  6925  005D0A  0012               	return		;funcret
  6926  005D0C                     __end_of_strlen:
  6927                           	callstack 0
  6928                           
  6929 ;; *************** function _fputs *****************
  6930 ;; Defined at:
  6931 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6934 ;;		 -> dbuf(80), 
  6935 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6936 ;;		 -> sprintf@f(11), 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  i               2   16[COMRAM] int 
  6939 ;;  c               1   15[COMRAM] unsigned char 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  2   11[COMRAM] int 
  6942 ;; Registers used:
  6943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6949 ;;      Params:         4       0       0       0       0       0       0       0       0
  6950 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6952 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6953 ;;Total ram usage:        7 bytes
  6954 ;; Hardware stack levels used: 1
  6955 ;; Hardware stack levels required when called: 4
  6956 ;; This function calls:
  6957 ;;		_fputc
  6958 ;; This function is called by:
  6959 ;;		_pad
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text21
  6964  005B2E                     __ptext21:
  6965                           	callstack 0
  6966  005B2E                     _fputs:
  6967                           	callstack 21
  6968  005B2E  0E00               	movlw	0
  6969  005B30  6E12               	movwf	(fputs@i+1)^0,c
  6970  005B32  0E00               	movlw	0
  6971  005B34  6E11               	movwf	fputs@i^0,c
  6972  005B36  EFA8  F02D         	goto	l6568
  6973  005B3A                     l6564:
  6974  005B3A  C010  F003         	movff	fputs@c,fputc@c
  6975  005B3E  6A04               	clrf	(fputc@c+1)^0,c
  6976  005B40  C00E  F005         	movff	fputs@fp,fputc@fp
  6977  005B44  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  6978  005B48  EC59  F028         	call	_fputc	;wreg free
  6979  005B4C  4A11               	infsnz	fputs@i^0,f,c
  6980  005B4E  2A12               	incf	(fputs@i+1)^0,f,c
  6981  005B50                     l6568:
  6982  005B50  5011               	movf	fputs@i^0,w,c
  6983  005B52  240C               	addwf	fputs@s^0,w,c
  6984  005B54  6ED9               	movwf	fsr2l,c
  6985  005B56  5012               	movf	(fputs@i+1)^0,w,c
  6986  005B58  200D               	addwfc	(fputs@s+1)^0,w,c
  6987  005B5A  6EDA               	movwf	fsr2h,c
  6988  005B5C  50DF               	movf	indf2,w,c
  6989  005B5E  6E10               	movwf	fputs@c^0,c
  6990  005B60  5010               	movf	fputs@c^0,w,c
  6991  005B62  A4D8               	btfss	status,2,c
  6992  005B64  EFB6  F02D         	goto	u8301
  6993  005B68  EFB8  F02D         	goto	u8300
  6994  005B6C                     u8301:
  6995  005B6C  EF9D  F02D         	goto	l6564
  6996  005B70                     u8300:
  6997  005B70  0012               	return		;funcret
  6998  005B72                     __end_of_fputs:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _fputc *****************
  7002 ;; Defined at:
  7003 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  c               2    2[COMRAM] int 
  7006 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  7007 ;;		 -> sprintf@f(11), 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  2    2[COMRAM] int 
  7012 ;; Registers used:
  7013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7019 ;;      Params:         4       0       0       0       0       0       0       0       0
  7020 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7021 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7022 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7023 ;;Total ram usage:        9 bytes
  7024 ;; Hardware stack levels used: 1
  7025 ;; Hardware stack levels required when called: 3
  7026 ;; This function calls:
  7027 ;;		_putch
  7028 ;; This function is called by:
  7029 ;;		_pad
  7030 ;;		_vfpfcnvrt
  7031 ;;		_fputs
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text22
  7036  0050B2                     __ptext22:
  7037                           	callstack 0
  7038  0050B2                     _fputc:
  7039                           	callstack 24
  7040  0050B2  5005               	movf	fputc@fp^0,w,c
  7041  0050B4  1006               	iorwf	(fputc@fp+1)^0,w,c
  7042  0050B6  B4D8               	btfsc	status,2,c
  7043  0050B8  EF60  F028         	goto	u7871
  7044  0050BC  EF62  F028         	goto	u7870
  7045  0050C0                     u7871:
  7046  0050C0  EF6B  F028         	goto	l6350
  7047  0050C4                     u7870:
  7048  0050C4  5005               	movf	fputc@fp^0,w,c
  7049  0050C6  1006               	iorwf	(fputc@fp+1)^0,w,c
  7050  0050C8  A4D8               	btfss	status,2,c
  7051  0050CA  EF69  F028         	goto	u7881
  7052  0050CE  EF6B  F028         	goto	u7880
  7053  0050D2                     u7881:
  7054  0050D2  EF70  F028         	goto	l6352
  7055  0050D6                     u7880:
  7056  0050D6                     l6350:
  7057  0050D6  5003               	movf	fputc@c^0,w,c
  7058  0050D8  EC07  F02F         	call	_putch
  7059  0050DC  EFBD  F028         	goto	l1206
  7060  0050E0                     l6352:
  7061  0050E0  EE20 F009          	lfsr	2,9
  7062  0050E4  5005               	movf	fputc@fp^0,w,c
  7063  0050E6  26D9               	addwf	fsr2l,f,c
  7064  0050E8  5006               	movf	(fputc@fp+1)^0,w,c
  7065  0050EA  22DA               	addwfc	fsr2h,f,c
  7066  0050EC  50DE               	movf	postinc2,w,c
  7067  0050EE  10DE               	iorwf	postinc2,w,c
  7068  0050F0  B4D8               	btfsc	status,2,c
  7069  0050F2  EF7D  F028         	goto	u7891
  7070  0050F6  EF7F  F028         	goto	u7890
  7071  0050FA                     u7891:
  7072  0050FA  EF9A  F028         	goto	l6356
  7073  0050FE                     u7890:
  7074  0050FE  EE20 F009          	lfsr	2,9
  7075  005102  5005               	movf	fputc@fp^0,w,c
  7076  005104  26D9               	addwf	fsr2l,f,c
  7077  005106  5006               	movf	(fputc@fp+1)^0,w,c
  7078  005108  22DA               	addwfc	fsr2h,f,c
  7079  00510A  EE10 F003          	lfsr	1,3
  7080  00510E  5005               	movf	fputc@fp^0,w,c
  7081  005110  26E1               	addwf	fsr1l,f,c
  7082  005112  5006               	movf	(fputc@fp+1)^0,w,c
  7083  005114  22E2               	addwfc	fsr1h,f,c
  7084  005116  50DE               	movf	postinc2,w,c
  7085  005118  5CE6               	subwf	postinc1,w,c
  7086  00511A  50E6               	movf	postinc1,w,c
  7087  00511C  0A80               	xorlw	128
  7088  00511E  6E0B               	movwf	(??_fputc+4)^0,c
  7089  005120  50DE               	movf	postinc2,w,c
  7090  005122  0A80               	xorlw	128
  7091  005124  580B               	subwfb	(??_fputc+4)^0,w,c
  7092  005126  B0D8               	btfsc	status,0,c
  7093  005128  EF98  F028         	goto	u7901
  7094  00512C  EF9A  F028         	goto	u7900
  7095  005130                     u7901:
  7096  005130  EFBD  F028         	goto	l1206
  7097  005134                     u7900:
  7098  005134                     l6356:
  7099  005134  EE20 F003          	lfsr	2,3
  7100  005138  5005               	movf	fputc@fp^0,w,c
  7101  00513A  26D9               	addwf	fsr2l,f,c
  7102  00513C  5006               	movf	(fputc@fp+1)^0,w,c
  7103  00513E  22DA               	addwfc	fsr2h,f,c
  7104  005140  CFDE F007          	movff	postinc2,??_fputc
  7105  005144  CFDD F008          	movff	postdec2,??_fputc+1
  7106  005148  C005  FFD9         	movff	fputc@fp,fsr2l
  7107  00514C  C006  FFDA         	movff	fputc@fp+1,fsr2h
  7108  005150  CFDE F009          	movff	postinc2,??_fputc+2
  7109  005154  CFDD F00A          	movff	postdec2,??_fputc+3
  7110  005158  5007               	movf	??_fputc^0,w,c
  7111  00515A  2409               	addwf	(??_fputc+2)^0,w,c
  7112  00515C  6ED9               	movwf	fsr2l,c
  7113  00515E  5008               	movf	(??_fputc+1)^0,w,c
  7114  005160  200A               	addwfc	(??_fputc+3)^0,w,c
  7115  005162  6EDA               	movwf	fsr2h,c
  7116  005164  C003  FFDF         	movff	fputc@c,indf2
  7117  005168  EE20 F003          	lfsr	2,3
  7118  00516C  5005               	movf	fputc@fp^0,w,c
  7119  00516E  26D9               	addwf	fsr2l,f,c
  7120  005170  5006               	movf	(fputc@fp+1)^0,w,c
  7121  005172  22DA               	addwfc	fsr2h,f,c
  7122  005174  2ADE               	incf	postinc2,f,c
  7123  005176  0E00               	movlw	0
  7124  005178  22DD               	addwfc	postdec2,f,c
  7125  00517A                     l1206:
  7126  00517A  0012               	return		;funcret
  7127  00517C                     __end_of_fputc:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _putch *****************
  7131 ;; Defined at:
  7132 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  c               1    wreg     unsigned char 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  c               1    0[COMRAM] unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7146 ;;      Params:         0       0       0       0       0       0       0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7149 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7150 ;;Total ram usage:        0 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 2
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		_fputc
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           	psect	text23
  7161  005E0E                     __ptext23:
  7162                           	callstack 0
  7163  005E0E                     _putch:
  7164                           	callstack 24
  7165  005E0E  0012               	return		;funcret
  7166  005E10                     __end_of_putch:
  7167                           	callstack 0
  7168                           
  7169 ;; *************** function _abs *****************
  7170 ;; Defined at:
  7171 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;  a               2   20[COMRAM] int 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  2   20[COMRAM] int 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7185 ;;      Params:         2       0       0       0       0       0       0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7187 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7188 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7189 ;;Total ram usage:        4 bytes
  7190 ;; Hardware stack levels used: 1
  7191 ;; Hardware stack levels required when called: 2
  7192 ;; This function calls:
  7193 ;;		Nothing
  7194 ;; This function is called by:
  7195 ;;		_dtoa
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text24
  7200  005BB6                     __ptext24:
  7201                           	callstack 0
  7202  005BB6                     _abs:
  7203                           	callstack 24
  7204  005BB6  BE16               	btfsc	(abs@a+1)^0,7,c
  7205  005BB8  EFE8  F02D         	goto	u9210
  7206  005BBC  5016               	movf	(abs@a+1)^0,w,c
  7207  005BBE  E106               	bnz	u9211
  7208  005BC0  0415               	decf	abs@a^0,w,c
  7209  005BC2  B0D8               	btfsc	status,0,c
  7210  005BC4  EFE6  F02D         	goto	u9211
  7211  005BC8  EFE8  F02D         	goto	u9210
  7212  005BCC                     u9211:
  7213  005BCC  EFF6  F02D         	goto	l1133
  7214  005BD0                     u9210:
  7215  005BD0  C015  F017         	movff	abs@a,??_abs
  7216  005BD4  C016  F018         	movff	abs@a+1,??_abs+1
  7217  005BD8  1E17               	comf	??_abs^0,f,c
  7218  005BDA  1E18               	comf	(??_abs+1)^0,f,c
  7219  005BDC  4A17               	infsnz	??_abs^0,f,c
  7220  005BDE  2A18               	incf	(??_abs+1)^0,f,c
  7221  005BE0  C017  F015         	movff	??_abs,?_abs
  7222  005BE4  C018  F016         	movff	??_abs+1,?_abs+1
  7223  005BE8  EFFA  F02D         	goto	l1136
  7224  005BEC                     l1133:
  7225  005BEC  C015  F015         	movff	abs@a,?_abs
  7226  005BF0  C016  F016         	movff	abs@a+1,?_abs+1
  7227  005BF4                     l1136:
  7228  005BF4  0012               	return		;funcret
  7229  005BF6                     __end_of_abs:
  7230                           	callstack 0
  7231                           
  7232 ;; *************** function ___aomod *****************
  7233 ;; Defined at:
  7234 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  dividend        8    2[COMRAM] long long 
  7237 ;;  divisor         8   10[COMRAM] long long 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;  sign            1   19[COMRAM] unsigned char 
  7240 ;;  counter         1   18[COMRAM] unsigned char 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  8    2[COMRAM] long long 
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, status,0
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7250 ;;      Params:        16       0       0       0       0       0       0       0       0
  7251 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7253 ;;      Totals:        18       0       0       0       0       0       0       0       0
  7254 ;;Total ram usage:       18 bytes
  7255 ;; Hardware stack levels used: 1
  7256 ;; Hardware stack levels required when called: 2
  7257 ;; This function calls:
  7258 ;;		Nothing
  7259 ;; This function is called by:
  7260 ;;		_dtoa
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text25
  7265  00484E                     __ptext25:
  7266                           	callstack 0
  7267  00484E                     ___aomod:
  7268                           	callstack 24
  7269  00484E  0E00               	movlw	0
  7270  004850  6E14               	movwf	___aomod@sign^0,c
  7271  004852  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  7272  004854  EF30  F024         	goto	u8410
  7273  004858  EF2E  F024         	goto	u8411
  7274  00485C                     u8411:
  7275  00485C  EF42  F024         	goto	l6642
  7276  004860                     u8410:
  7277  004860  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  7278  004862  1E09               	comf	(___aomod@dividend+6)^0,f,c
  7279  004864  1E08               	comf	(___aomod@dividend+5)^0,f,c
  7280  004866  1E07               	comf	(___aomod@dividend+4)^0,f,c
  7281  004868  1E06               	comf	(___aomod@dividend+3)^0,f,c
  7282  00486A  1E05               	comf	(___aomod@dividend+2)^0,f,c
  7283  00486C  1E04               	comf	(___aomod@dividend+1)^0,f,c
  7284  00486E  6C03               	negf	___aomod@dividend^0,c
  7285  004870  0E00               	movlw	0
  7286  004872  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  7287  004874  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  7288  004876  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  7289  004878  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  7290  00487A  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  7291  00487C  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  7292  00487E  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  7293  004880  0E01               	movlw	1
  7294  004882  6E14               	movwf	___aomod@sign^0,c
  7295  004884                     l6642:
  7296  004884  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  7297  004886  EF49  F024         	goto	u8420
  7298  00488A  EF47  F024         	goto	u8421
  7299  00488E                     u8421:
  7300  00488E  EF59  F024         	goto	l6646
  7301  004892                     u8420:
  7302  004892  1E12               	comf	(___aomod@divisor+7)^0,f,c
  7303  004894  1E11               	comf	(___aomod@divisor+6)^0,f,c
  7304  004896  1E10               	comf	(___aomod@divisor+5)^0,f,c
  7305  004898  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  7306  00489A  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  7307  00489C  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  7308  00489E  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  7309  0048A0  6C0B               	negf	___aomod@divisor^0,c
  7310  0048A2  0E00               	movlw	0
  7311  0048A4  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  7312  0048A6  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  7313  0048A8  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  7314  0048AA  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  7315  0048AC  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  7316  0048AE  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  7317  0048B0  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  7318  0048B2                     l6646:
  7319  0048B2  500B               	movf	___aomod@divisor^0,w,c
  7320  0048B4  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  7321  0048B6  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  7322  0048B8  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  7323  0048BA  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  7324  0048BC  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  7325  0048BE  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  7326  0048C0  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  7327  0048C2  B4D8               	btfsc	status,2,c
  7328  0048C4  EF66  F024         	goto	u8431
  7329  0048C8  EF68  F024         	goto	u8430
  7330  0048CC                     u8431:
  7331  0048CC  EFB0  F024         	goto	l6662
  7332  0048D0                     u8430:
  7333  0048D0  0E01               	movlw	1
  7334  0048D2  6E13               	movwf	___aomod@counter^0,c
  7335  0048D4  EF76  F024         	goto	l6652
  7336  0048D8                     l6650:
  7337  0048D8  90D8               	bcf	status,0,c
  7338  0048DA  360B               	rlcf	___aomod@divisor^0,f,c
  7339  0048DC  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  7340  0048DE  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  7341  0048E0  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  7342  0048E2  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  7343  0048E4  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  7344  0048E6  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  7345  0048E8  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  7346  0048EA  2A13               	incf	___aomod@counter^0,f,c
  7347  0048EC                     l6652:
  7348  0048EC  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  7349  0048EE  EF7B  F024         	goto	u8441
  7350  0048F2  EF7D  F024         	goto	u8440
  7351  0048F6                     u8441:
  7352  0048F6  EF6C  F024         	goto	l6650
  7353  0048FA                     u8440:
  7354  0048FA                     l6654:
  7355  0048FA  500B               	movf	___aomod@divisor^0,w,c
  7356  0048FC  5C03               	subwf	___aomod@dividend^0,w,c
  7357  0048FE  500C               	movf	(___aomod@divisor+1)^0,w,c
  7358  004900  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  7359  004902  500D               	movf	(___aomod@divisor+2)^0,w,c
  7360  004904  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  7361  004906  500E               	movf	(___aomod@divisor+3)^0,w,c
  7362  004908  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  7363  00490A  500F               	movf	(___aomod@divisor+4)^0,w,c
  7364  00490C  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  7365  00490E  5010               	movf	(___aomod@divisor+5)^0,w,c
  7366  004910  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  7367  004912  5011               	movf	(___aomod@divisor+6)^0,w,c
  7368  004914  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  7369  004916  5012               	movf	(___aomod@divisor+7)^0,w,c
  7370  004918  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  7371  00491A  A0D8               	btfss	status,0,c
  7372  00491C  EF92  F024         	goto	u8451
  7373  004920  EF94  F024         	goto	u8450
  7374  004924                     u8451:
  7375  004924  EFA4  F024         	goto	l6658
  7376  004928                     u8450:
  7377  004928  500B               	movf	___aomod@divisor^0,w,c
  7378  00492A  5E03               	subwf	___aomod@dividend^0,f,c
  7379  00492C  500C               	movf	(___aomod@divisor+1)^0,w,c
  7380  00492E  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  7381  004930  500D               	movf	(___aomod@divisor+2)^0,w,c
  7382  004932  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  7383  004934  500E               	movf	(___aomod@divisor+3)^0,w,c
  7384  004936  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  7385  004938  500F               	movf	(___aomod@divisor+4)^0,w,c
  7386  00493A  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  7387  00493C  5010               	movf	(___aomod@divisor+5)^0,w,c
  7388  00493E  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  7389  004940  5011               	movf	(___aomod@divisor+6)^0,w,c
  7390  004942  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  7391  004944  5012               	movf	(___aomod@divisor+7)^0,w,c
  7392  004946  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  7393  004948                     l6658:
  7394  004948  90D8               	bcf	status,0,c
  7395  00494A  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  7396  00494C  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  7397  00494E  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  7398  004950  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  7399  004952  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  7400  004954  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  7401  004956  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  7402  004958  320B               	rrcf	___aomod@divisor^0,f,c
  7403  00495A  2E13               	decfsz	___aomod@counter^0,f,c
  7404  00495C  EF7D  F024         	goto	l6654
  7405  004960                     l6662:
  7406  004960  5014               	movf	___aomod@sign^0,w,c
  7407  004962  B4D8               	btfsc	status,2,c
  7408  004964  EFB6  F024         	goto	u8461
  7409  004968  EFB8  F024         	goto	u8460
  7410  00496C                     u8461:
  7411  00496C  EFC8  F024         	goto	l6666
  7412  004970                     u8460:
  7413  004970  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  7414  004972  1E09               	comf	(___aomod@dividend+6)^0,f,c
  7415  004974  1E08               	comf	(___aomod@dividend+5)^0,f,c
  7416  004976  1E07               	comf	(___aomod@dividend+4)^0,f,c
  7417  004978  1E06               	comf	(___aomod@dividend+3)^0,f,c
  7418  00497A  1E05               	comf	(___aomod@dividend+2)^0,f,c
  7419  00497C  1E04               	comf	(___aomod@dividend+1)^0,f,c
  7420  00497E  6C03               	negf	___aomod@dividend^0,c
  7421  004980  0E00               	movlw	0
  7422  004982  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  7423  004984  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  7424  004986  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  7425  004988  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  7426  00498A  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  7427  00498C  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  7428  00498E  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  7429  004990                     l6666:
  7430  004990  C003  F003         	movff	___aomod@dividend,?___aomod
  7431  004994  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  7432  004998  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  7433  00499C  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  7434  0049A0  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  7435  0049A4  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  7436  0049A8  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  7437  0049AC  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  7438  0049B0  0012               	return		;funcret
  7439  0049B2                     __end_of___aomod:
  7440                           	callstack 0
  7441                           
  7442 ;; *************** function ___aodiv *****************
  7443 ;; Defined at:
  7444 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  dividend        8    2[COMRAM] long long 
  7447 ;;  divisor         8   10[COMRAM] long long 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;  quotient        8   20[COMRAM] long long 
  7450 ;;  sign            1   19[COMRAM] unsigned char 
  7451 ;;  counter         1   18[COMRAM] unsigned char 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  8    2[COMRAM] long long 
  7454 ;; Registers used:
  7455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7461 ;;      Params:        16       0       0       0       0       0       0       0       0
  7462 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7464 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7465 ;;Total ram usage:       26 bytes
  7466 ;; Hardware stack levels used: 1
  7467 ;; Hardware stack levels required when called: 2
  7468 ;; This function calls:
  7469 ;;		Nothing
  7470 ;; This function is called by:
  7471 ;;		_dtoa
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           	psect	text26
  7476  004550                     __ptext26:
  7477                           	callstack 0
  7478  004550                     ___aodiv:
  7479                           	callstack 24
  7480  004550  0E00               	movlw	0
  7481  004552  6E14               	movwf	___aodiv@sign^0,c
  7482  004554  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  7483  004556  EFB1  F022         	goto	u8340
  7484  00455A  EFAF  F022         	goto	u8341
  7485  00455E                     u8341:
  7486  00455E  EFC3  F022         	goto	l6598
  7487  004562                     u8340:
  7488  004562  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  7489  004564  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  7490  004566  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  7491  004568  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  7492  00456A  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  7493  00456C  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  7494  00456E  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  7495  004570  6C0B               	negf	___aodiv@divisor^0,c
  7496  004572  0E00               	movlw	0
  7497  004574  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  7498  004576  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  7499  004578  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  7500  00457A  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  7501  00457C  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  7502  00457E  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  7503  004580  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  7504  004582  0E01               	movlw	1
  7505  004584  6E14               	movwf	___aodiv@sign^0,c
  7506  004586                     l6598:
  7507  004586  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  7508  004588  EFCA  F022         	goto	u8350
  7509  00458C  EFC8  F022         	goto	u8351
  7510  004590                     u8351:
  7511  004590  EFDC  F022         	goto	l6604
  7512  004594                     u8350:
  7513  004594  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  7514  004596  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  7515  004598  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  7516  00459A  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  7517  00459C  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  7518  00459E  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  7519  0045A0  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  7520  0045A2  6C03               	negf	___aodiv@dividend^0,c
  7521  0045A4  0E00               	movlw	0
  7522  0045A6  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  7523  0045A8  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  7524  0045AA  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  7525  0045AC  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  7526  0045AE  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  7527  0045B0  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  7528  0045B2  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  7529  0045B4  0E01               	movlw	1
  7530  0045B6  1A14               	xorwf	___aodiv@sign^0,f,c
  7531  0045B8                     l6604:
  7532  0045B8  EE20  F015         	lfsr	2,___aodiv@quotient
  7533  0045BC  0E07               	movlw	7
  7534  0045BE                     u8361:
  7535  0045BE  6ADE               	clrf	postinc2,c
  7536  0045C0  06E8               	decf	wreg,f,c
  7537  0045C2  E2FD               	bc	u8361
  7538  0045C4  500B               	movf	___aodiv@divisor^0,w,c
  7539  0045C6  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  7540  0045C8  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  7541  0045CA  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  7542  0045CC  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  7543  0045CE  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  7544  0045D0  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  7545  0045D2  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  7546  0045D4  B4D8               	btfsc	status,2,c
  7547  0045D6  EFEF  F022         	goto	u8371
  7548  0045DA  EFF1  F022         	goto	u8370
  7549  0045DE                     u8371:
  7550  0045DE  EF43  F023         	goto	l6626
  7551  0045E2                     u8370:
  7552  0045E2  0E01               	movlw	1
  7553  0045E4  6E13               	movwf	___aodiv@counter^0,c
  7554  0045E6  EFFF  F022         	goto	l6612
  7555  0045EA                     l6610:
  7556  0045EA  90D8               	bcf	status,0,c
  7557  0045EC  360B               	rlcf	___aodiv@divisor^0,f,c
  7558  0045EE  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  7559  0045F0  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  7560  0045F2  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  7561  0045F4  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  7562  0045F6  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  7563  0045F8  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  7564  0045FA  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  7565  0045FC  2A13               	incf	___aodiv@counter^0,f,c
  7566  0045FE                     l6612:
  7567  0045FE  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  7568  004600  EF04  F023         	goto	u8381
  7569  004604  EF06  F023         	goto	u8380
  7570  004608                     u8381:
  7571  004608  EFF5  F022         	goto	l6610
  7572  00460C                     u8380:
  7573  00460C                     l6614:
  7574  00460C  90D8               	bcf	status,0,c
  7575  00460E  3615               	rlcf	___aodiv@quotient^0,f,c
  7576  004610  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  7577  004612  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  7578  004614  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  7579  004616  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  7580  004618  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  7581  00461A  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  7582  00461C  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  7583  00461E  500B               	movf	___aodiv@divisor^0,w,c
  7584  004620  5C03               	subwf	___aodiv@dividend^0,w,c
  7585  004622  500C               	movf	(___aodiv@divisor+1)^0,w,c
  7586  004624  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  7587  004626  500D               	movf	(___aodiv@divisor+2)^0,w,c
  7588  004628  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  7589  00462A  500E               	movf	(___aodiv@divisor+3)^0,w,c
  7590  00462C  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  7591  00462E  500F               	movf	(___aodiv@divisor+4)^0,w,c
  7592  004630  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  7593  004632  5010               	movf	(___aodiv@divisor+5)^0,w,c
  7594  004634  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  7595  004636  5011               	movf	(___aodiv@divisor+6)^0,w,c
  7596  004638  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  7597  00463A  5012               	movf	(___aodiv@divisor+7)^0,w,c
  7598  00463C  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  7599  00463E  A0D8               	btfss	status,0,c
  7600  004640  EF24  F023         	goto	u8391
  7601  004644  EF26  F023         	goto	u8390
  7602  004648                     u8391:
  7603  004648  EF37  F023         	goto	l6622
  7604  00464C                     u8390:
  7605  00464C  500B               	movf	___aodiv@divisor^0,w,c
  7606  00464E  5E03               	subwf	___aodiv@dividend^0,f,c
  7607  004650  500C               	movf	(___aodiv@divisor+1)^0,w,c
  7608  004652  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  7609  004654  500D               	movf	(___aodiv@divisor+2)^0,w,c
  7610  004656  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  7611  004658  500E               	movf	(___aodiv@divisor+3)^0,w,c
  7612  00465A  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  7613  00465C  500F               	movf	(___aodiv@divisor+4)^0,w,c
  7614  00465E  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  7615  004660  5010               	movf	(___aodiv@divisor+5)^0,w,c
  7616  004662  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  7617  004664  5011               	movf	(___aodiv@divisor+6)^0,w,c
  7618  004666  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  7619  004668  5012               	movf	(___aodiv@divisor+7)^0,w,c
  7620  00466A  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  7621  00466C  8015               	bsf	___aodiv@quotient^0,0,c
  7622  00466E                     l6622:
  7623  00466E  90D8               	bcf	status,0,c
  7624  004670  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  7625  004672  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  7626  004674  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  7627  004676  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  7628  004678  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  7629  00467A  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  7630  00467C  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  7631  00467E  320B               	rrcf	___aodiv@divisor^0,f,c
  7632  004680  2E13               	decfsz	___aodiv@counter^0,f,c
  7633  004682  EF06  F023         	goto	l6614
  7634  004686                     l6626:
  7635  004686  5014               	movf	___aodiv@sign^0,w,c
  7636  004688  B4D8               	btfsc	status,2,c
  7637  00468A  EF49  F023         	goto	u8401
  7638  00468E  EF4B  F023         	goto	u8400
  7639  004692                     u8401:
  7640  004692  EF5B  F023         	goto	l6630
  7641  004696                     u8400:
  7642  004696  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  7643  004698  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  7644  00469A  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  7645  00469C  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  7646  00469E  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  7647  0046A0  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  7648  0046A2  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  7649  0046A4  6C15               	negf	___aodiv@quotient^0,c
  7650  0046A6  0E00               	movlw	0
  7651  0046A8  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  7652  0046AA  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  7653  0046AC  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  7654  0046AE  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  7655  0046B0  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  7656  0046B2  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  7657  0046B4  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  7658  0046B6                     l6630:
  7659  0046B6  C015  F003         	movff	___aodiv@quotient,?___aodiv
  7660  0046BA  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  7661  0046BE  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  7662  0046C2  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  7663  0046C6  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  7664  0046CA  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  7665  0046CE  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  7666  0046D2  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  7667  0046D6  0012               	return		;funcret
  7668  0046D8                     __end_of___aodiv:
  7669                           	callstack 0
  7670                           
  7671 ;; *************** function _atoi *****************
  7672 ;; Defined at:
  7673 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7676 ;;		 -> STR_3(33), 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;  n               2   17[COMRAM] int 
  7679 ;;  neg             2   15[COMRAM] int 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  2    9[COMRAM] int 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7689 ;;      Params:         2       0       0       0       0       0       0       0       0
  7690 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7691 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7692 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7693 ;;Total ram usage:       10 bytes
  7694 ;; Hardware stack levels used: 1
  7695 ;; Hardware stack levels required when called: 3
  7696 ;; This function calls:
  7697 ;;		___wmul
  7698 ;;		_isdigit
  7699 ;;		_isspace
  7700 ;; This function is called by:
  7701 ;;		_vfpfcnvrt
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           	psect	text27
  7706  0049B2                     __ptext27:
  7707                           	callstack 0
  7708  0049B2                     _atoi:
  7709                           	callstack 24
  7710  0049B2  0E00               	movlw	0
  7711  0049B4  6E13               	movwf	(atoi@n+1)^0,c
  7712  0049B6  0E00               	movlw	0
  7713  0049B8  6E12               	movwf	atoi@n^0,c
  7714  0049BA  0E00               	movlw	0
  7715  0049BC  6E11               	movwf	(atoi@neg+1)^0,c
  7716  0049BE  0E00               	movlw	0
  7717  0049C0  6E10               	movwf	atoi@neg^0,c
  7718  0049C2  EFE5  F024         	goto	l7594
  7719  0049C6                     l7590:
  7720  0049C6  4A0A               	infsnz	atoi@s^0,f,c
  7721  0049C8  2A0B               	incf	(atoi@s+1)^0,f,c
  7722  0049CA                     l7594:
  7723  0049CA  C00A  FFF6         	movff	atoi@s,tblptrl
  7724  0049CE  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7725  0049D2                     	if	0	;tblptru may be non-zero
  7726  0049D2                     	endif
  7727  0049D2                     	if	0	;tblptru may be non-zero
  7728  0049D2                     	endif
  7729  0049D2  0008               	tblrd		*
  7730  0049D4  50F5               	movf	tablat,w,c
  7731  0049D6  0A20               	xorlw	32
  7732  0049D8  B4D8               	btfsc	status,2,c
  7733  0049DA  EFF1  F024         	goto	u10091
  7734  0049DE  EFF3  F024         	goto	u10090
  7735  0049E2                     u10091:
  7736  0049E2  EFE3  F024         	goto	l7590
  7737  0049E6                     u10090:
  7738  0049E6  0EF7               	movlw	247
  7739  0049E8  6E0C               	movwf	??_atoi^0,c
  7740  0049EA  0EFF               	movlw	255
  7741  0049EC  6E0D               	movwf	(??_atoi+1)^0,c
  7742  0049EE  C00A  FFF6         	movff	atoi@s,tblptrl
  7743  0049F2  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7744  0049F6                     	if	0	;tblptru may be non-zero
  7745  0049F6                     	endif
  7746  0049F6                     	if	0	;tblptru may be non-zero
  7747  0049F6                     	endif
  7748  0049F6  0008               	tblrd		*
  7749  0049F8  50F5               	movf	tablat,w,c
  7750  0049FA  6E0E               	movwf	(??_atoi+2)^0,c
  7751  0049FC  6A0F               	clrf	(??_atoi+3)^0,c
  7752  0049FE  500C               	movf	??_atoi^0,w,c
  7753  004A00  260E               	addwf	(??_atoi+2)^0,f,c
  7754  004A02  500D               	movf	(??_atoi+1)^0,w,c
  7755  004A04  220F               	addwfc	(??_atoi+3)^0,f,c
  7756  004A06  500F               	movf	(??_atoi+3)^0,w,c
  7757  004A08  E109               	bnz	u10100
  7758  004A0A  0E05               	movlw	5
  7759  004A0C  5C0E               	subwf	(??_atoi+2)^0,w,c
  7760  004A0E  A0D8               	btfss	status,0,c
  7761  004A10  EF0C  F025         	goto	u10101
  7762  004A14  EF0E  F025         	goto	u10100
  7763  004A18                     u10101:
  7764  004A18  EFE3  F024         	goto	l7590
  7765  004A1C                     u10100:
  7766  004A1C  EF18  F025         	goto	l7602
  7767  004A20                     l7598:
  7768  004A20  0E00               	movlw	0
  7769  004A22  6E11               	movwf	(atoi@neg+1)^0,c
  7770  004A24  0E01               	movlw	1
  7771  004A26  6E10               	movwf	atoi@neg^0,c
  7772  004A28                     l7600:
  7773  004A28  4A0A               	infsnz	atoi@s^0,f,c
  7774  004A2A  2A0B               	incf	(atoi@s+1)^0,f,c
  7775  004A2C  EF4D  F025         	goto	l7610
  7776  004A30                     l7602:
  7777  004A30  C00A  FFF6         	movff	atoi@s,tblptrl
  7778  004A34  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7779  004A38                     	if	0	;tblptru may be non-zero
  7780  004A38                     	endif
  7781  004A38                     	if	0	;tblptru may be non-zero
  7782  004A38                     	endif
  7783  004A38  0008               	tblrd		*
  7784  004A3A  50F5               	movf	tablat,w,c
  7785  004A3C  6E0C               	movwf	??_atoi^0,c
  7786  004A3E  6A0D               	clrf	(??_atoi+1)^0,c
  7787                           
  7788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7789                           ; Switch size 1, requested type "simple"
  7790                           ; Number of cases is 1, Range of values is 0 to 0
  7791                           ; switch strategies available:
  7792                           ; Name         Instructions Cycles
  7793                           ; simple_byte            4     3 (average)
  7794                           ;	Chosen strategy is simple_byte
  7795  004A40  500D               	movf	(??_atoi+1)^0,w,c
  7796  004A42  0A00               	xorlw	0	; case 0
  7797  004A44  B4D8               	btfsc	status,2,c
  7798  004A46  EF27  F025         	goto	l8492
  7799  004A4A  EF4D  F025         	goto	l7610
  7800  004A4E                     l8492:
  7801                           
  7802                           ; Switch size 1, requested type "simple"
  7803                           ; Number of cases is 2, Range of values is 43 to 45
  7804                           ; switch strategies available:
  7805                           ; Name         Instructions Cycles
  7806                           ; simple_byte            7     4 (average)
  7807                           ;	Chosen strategy is simple_byte
  7808  004A4E  500C               	movf	??_atoi^0,w,c
  7809  004A50  0A2B               	xorlw	43	; case 43
  7810  004A52  B4D8               	btfsc	status,2,c
  7811  004A54  EF14  F025         	goto	l7600
  7812  004A58  0A06               	xorlw	6	; case 45
  7813  004A5A  B4D8               	btfsc	status,2,c
  7814  004A5C  EF10  F025         	goto	l7598
  7815  004A60  EF4D  F025         	goto	l7610
  7816  004A64                     l7604:
  7817  004A64  C012  F003         	movff	atoi@n,___wmul@multiplier
  7818  004A68  C013  F004         	movff	atoi@n+1,___wmul@multiplier+1
  7819  004A6C  0E00               	movlw	0
  7820  004A6E  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  7821  004A70  0E0A               	movlw	10
  7822  004A72  6E05               	movwf	___wmul@multiplicand^0,c
  7823  004A74  ECCA  F02E         	call	___wmul	;wreg free
  7824  004A78  C00A  FFF6         	movff	atoi@s,tblptrl
  7825  004A7C  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7826  004A80                     	if	0	;tblptru may be non-zero
  7827  004A80                     	endif
  7828  004A80                     	if	0	;tblptru may be non-zero
  7829  004A80                     	endif
  7830  004A80  0008               	tblrd		*
  7831  004A82  50F5               	movf	tablat,w,c
  7832  004A84  5E03               	subwf	?___wmul^0,f,c
  7833  004A86  0E00               	movlw	0
  7834  004A88  5A04               	subwfb	(?___wmul+1)^0,f,c
  7835  004A8A  0E30               	movlw	48
  7836  004A8C  2403               	addwf	?___wmul^0,w,c
  7837  004A8E  6E12               	movwf	atoi@n^0,c
  7838  004A90  0E00               	movlw	0
  7839  004A92  2004               	addwfc	(?___wmul+1)^0,w,c
  7840  004A94  6E13               	movwf	(atoi@n+1)^0,c
  7841  004A96  EF14  F025         	goto	l7600
  7842  004A9A                     l7610:
  7843  004A9A  0ED0               	movlw	208
  7844  004A9C  6E0C               	movwf	??_atoi^0,c
  7845  004A9E  0EFF               	movlw	255
  7846  004AA0  6E0D               	movwf	(??_atoi+1)^0,c
  7847  004AA2  C00A  FFF6         	movff	atoi@s,tblptrl
  7848  004AA6  C00B  FFF7         	movff	atoi@s+1,tblptrh
  7849  004AAA                     	if	0	;tblptru may be non-zero
  7850  004AAA                     	endif
  7851  004AAA                     	if	0	;tblptru may be non-zero
  7852  004AAA                     	endif
  7853  004AAA  0008               	tblrd		*
  7854  004AAC  50F5               	movf	tablat,w,c
  7855  004AAE  6E0E               	movwf	(??_atoi+2)^0,c
  7856  004AB0  6A0F               	clrf	(??_atoi+3)^0,c
  7857  004AB2  500C               	movf	??_atoi^0,w,c
  7858  004AB4  260E               	addwf	(??_atoi+2)^0,f,c
  7859  004AB6  500D               	movf	(??_atoi+1)^0,w,c
  7860  004AB8  220F               	addwfc	(??_atoi+3)^0,f,c
  7861  004ABA  500F               	movf	(??_atoi+3)^0,w,c
  7862  004ABC  E109               	bnz	u10110
  7863  004ABE  0E0A               	movlw	10
  7864  004AC0  5C0E               	subwf	(??_atoi+2)^0,w,c
  7865  004AC2  A0D8               	btfss	status,0,c
  7866  004AC4  EF66  F025         	goto	u10111
  7867  004AC8  EF68  F025         	goto	u10110
  7868  004ACC                     u10111:
  7869  004ACC  EF32  F025         	goto	l7604
  7870  004AD0                     u10110:
  7871  004AD0  5010               	movf	atoi@neg^0,w,c
  7872  004AD2  1011               	iorwf	(atoi@neg+1)^0,w,c
  7873  004AD4  A4D8               	btfss	status,2,c
  7874  004AD6  EF6F  F025         	goto	u10121
  7875  004ADA  EF71  F025         	goto	u10120
  7876  004ADE                     u10121:
  7877  004ADE  EF7F  F025         	goto	l1158
  7878  004AE2                     u10120:
  7879  004AE2  C012  F00C         	movff	atoi@n,??_atoi
  7880  004AE6  C013  F00D         	movff	atoi@n+1,??_atoi+1
  7881  004AEA  1E0C               	comf	??_atoi^0,f,c
  7882  004AEC  1E0D               	comf	(??_atoi+1)^0,f,c
  7883  004AEE  4A0C               	infsnz	??_atoi^0,f,c
  7884  004AF0  2A0D               	incf	(??_atoi+1)^0,f,c
  7885  004AF2  C00C  F00A         	movff	??_atoi,?_atoi
  7886  004AF6  C00D  F00B         	movff	??_atoi+1,?_atoi+1
  7887  004AFA  EF83  F025         	goto	l1161
  7888  004AFE                     l1158:
  7889  004AFE  C012  F00A         	movff	atoi@n,?_atoi
  7890  004B02  C013  F00B         	movff	atoi@n+1,?_atoi+1
  7891  004B06                     l1161:
  7892  004B06  0012               	return		;funcret
  7893  004B08                     __end_of_atoi:
  7894                           	callstack 0
  7895                           
  7896 ;; *************** function _memset *****************
  7897 ;; Defined at:
  7898 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;  dest            2    2[COMRAM] PTR void 
  7901 ;;		 -> bufferRx(50), 
  7902 ;;  c               2    4[COMRAM] int 
  7903 ;;  n               2    6[COMRAM] unsigned int 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  s               2   12[COMRAM] PTR unsigned char 
  7906 ;;		 -> bufferRx(50), 
  7907 ;;  k               2   10[COMRAM] unsigned int 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  2    2[COMRAM] PTR void 
  7910 ;; Registers used:
  7911 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7917 ;;      Params:         6       0       0       0       0       0       0       0       0
  7918 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7919 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7920 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7921 ;;Total ram usage:       12 bytes
  7922 ;; Hardware stack levels used: 1
  7923 ;; Hardware stack levels required when called: 2
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_main
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text28
  7932  0046D8                     __ptext28:
  7933                           	callstack 0
  7934  0046D8                     _memset:
  7935                           	callstack 28
  7936  0046D8  C003  F00D         	movff	memset@dest,memset@s
  7937  0046DC  C004  F00E         	movff	memset@dest+1,memset@s+1
  7938  0046E0  5007               	movf	memset@n^0,w,c
  7939  0046E2  1008               	iorwf	(memset@n+1)^0,w,c
  7940  0046E4  A4D8               	btfss	status,2,c
  7941  0046E6  EF77  F023         	goto	u7701
  7942  0046EA  EF79  F023         	goto	u7700
  7943  0046EE                     u7701:
  7944  0046EE  EF7B  F023         	goto	l6054
  7945  0046F2                     u7700:
  7946  0046F2  EF26  F024         	goto	l894
  7947  0046F6                     l6054:
  7948  0046F6  C00D  FFD9         	movff	memset@s,fsr2l
  7949  0046FA  C00E  FFDA         	movff	memset@s+1,fsr2h
  7950  0046FE  C005  FFDF         	movff	memset@c,indf2
  7951  004702  5007               	movf	memset@n^0,w,c
  7952  004704  240D               	addwf	memset@s^0,w,c
  7953  004706  6E09               	movwf	??_memset^0,c
  7954  004708  5008               	movf	(memset@n+1)^0,w,c
  7955  00470A  200E               	addwfc	(memset@s+1)^0,w,c
  7956  00470C  6E0A               	movwf	(??_memset+1)^0,c
  7957  00470E  0EFF               	movlw	255
  7958  004710  2409               	addwf	??_memset^0,w,c
  7959  004712  6ED9               	movwf	fsr2l,c
  7960  004714  0EFF               	movlw	255
  7961  004716  200A               	addwfc	(??_memset+1)^0,w,c
  7962  004718  6EDA               	movwf	fsr2h,c
  7963  00471A  C005  FFDF         	movff	memset@c,indf2
  7964  00471E  5008               	movf	(memset@n+1)^0,w,c
  7965  004720  E107               	bnz	u7711
  7966  004722  0E03               	movlw	3
  7967  004724  5C07               	subwf	memset@n^0,w,c
  7968  004726  B0D8               	btfsc	status,0,c
  7969  004728  EF98  F023         	goto	u7711
  7970  00472C  EF9A  F023         	goto	u7710
  7971  004730                     u7711:
  7972  004730  EF9C  F023         	goto	l6060
  7973  004734                     u7710:
  7974  004734  EF26  F024         	goto	l894
  7975  004738                     l6060:
  7976  004738  EE20 F001          	lfsr	2,1
  7977  00473C  500D               	movf	memset@s^0,w,c
  7978  00473E  26D9               	addwf	fsr2l,f,c
  7979  004740  500E               	movf	(memset@s+1)^0,w,c
  7980  004742  22DA               	addwfc	fsr2h,f,c
  7981  004744  C005  FFDF         	movff	memset@c,indf2
  7982  004748  EE20 F002          	lfsr	2,2
  7983  00474C  500D               	movf	memset@s^0,w,c
  7984  00474E  26D9               	addwf	fsr2l,f,c
  7985  004750  500E               	movf	(memset@s+1)^0,w,c
  7986  004752  22DA               	addwfc	fsr2h,f,c
  7987  004754  C005  FFDF         	movff	memset@c,indf2
  7988  004758  5007               	movf	memset@n^0,w,c
  7989  00475A  240D               	addwf	memset@s^0,w,c
  7990  00475C  6E09               	movwf	??_memset^0,c
  7991  00475E  5008               	movf	(memset@n+1)^0,w,c
  7992  004760  200E               	addwfc	(memset@s+1)^0,w,c
  7993  004762  6E0A               	movwf	(??_memset+1)^0,c
  7994  004764  0EFE               	movlw	254
  7995  004766  2409               	addwf	??_memset^0,w,c
  7996  004768  6ED9               	movwf	fsr2l,c
  7997  00476A  0EFF               	movlw	255
  7998  00476C  200A               	addwfc	(??_memset+1)^0,w,c
  7999  00476E  6EDA               	movwf	fsr2h,c
  8000  004770  C005  FFDF         	movff	memset@c,indf2
  8001  004774  5007               	movf	memset@n^0,w,c
  8002  004776  240D               	addwf	memset@s^0,w,c
  8003  004778  6E09               	movwf	??_memset^0,c
  8004  00477A  5008               	movf	(memset@n+1)^0,w,c
  8005  00477C  200E               	addwfc	(memset@s+1)^0,w,c
  8006  00477E  6E0A               	movwf	(??_memset+1)^0,c
  8007  004780  0EFD               	movlw	253
  8008  004782  2409               	addwf	??_memset^0,w,c
  8009  004784  6ED9               	movwf	fsr2l,c
  8010  004786  0EFF               	movlw	255
  8011  004788  200A               	addwfc	(??_memset+1)^0,w,c
  8012  00478A  6EDA               	movwf	fsr2h,c
  8013  00478C  C005  FFDF         	movff	memset@c,indf2
  8014  004790  5008               	movf	(memset@n+1)^0,w,c
  8015  004792  E107               	bnz	u7721
  8016  004794  0E07               	movlw	7
  8017  004796  5C07               	subwf	memset@n^0,w,c
  8018  004798  B0D8               	btfsc	status,0,c
  8019  00479A  EFD1  F023         	goto	u7721
  8020  00479E  EFD3  F023         	goto	u7720
  8021  0047A2                     u7721:
  8022  0047A2  EFD5  F023         	goto	l6066
  8023  0047A6                     u7720:
  8024  0047A6  EF26  F024         	goto	l894
  8025  0047AA                     l6066:
  8026  0047AA  EE20 F003          	lfsr	2,3
  8027  0047AE  500D               	movf	memset@s^0,w,c
  8028  0047B0  26D9               	addwf	fsr2l,f,c
  8029  0047B2  500E               	movf	(memset@s+1)^0,w,c
  8030  0047B4  22DA               	addwfc	fsr2h,f,c
  8031  0047B6  C005  FFDF         	movff	memset@c,indf2
  8032  0047BA  5007               	movf	memset@n^0,w,c
  8033  0047BC  240D               	addwf	memset@s^0,w,c
  8034  0047BE  6E09               	movwf	??_memset^0,c
  8035  0047C0  5008               	movf	(memset@n+1)^0,w,c
  8036  0047C2  200E               	addwfc	(memset@s+1)^0,w,c
  8037  0047C4  6E0A               	movwf	(??_memset+1)^0,c
  8038  0047C6  0EFC               	movlw	252
  8039  0047C8  2409               	addwf	??_memset^0,w,c
  8040  0047CA  6ED9               	movwf	fsr2l,c
  8041  0047CC  0EFF               	movlw	255
  8042  0047CE  200A               	addwfc	(??_memset+1)^0,w,c
  8043  0047D0  6EDA               	movwf	fsr2h,c
  8044  0047D2  C005  FFDF         	movff	memset@c,indf2
  8045  0047D6  5008               	movf	(memset@n+1)^0,w,c
  8046  0047D8  E107               	bnz	u7731
  8047  0047DA  0E09               	movlw	9
  8048  0047DC  5C07               	subwf	memset@n^0,w,c
  8049  0047DE  B0D8               	btfsc	status,0,c
  8050  0047E0  EFF4  F023         	goto	u7731
  8051  0047E4  EFF6  F023         	goto	u7730
  8052  0047E8                     u7731:
  8053  0047E8  EFF8  F023         	goto	l6072
  8054  0047EC                     u7730:
  8055  0047EC  EF26  F024         	goto	l894
  8056  0047F0                     l6072:
  8057  0047F0  C00D  F009         	movff	memset@s,??_memset
  8058  0047F4  C00E  F00A         	movff	memset@s+1,??_memset+1
  8059  0047F8  1E09               	comf	??_memset^0,f,c
  8060  0047FA  1E0A               	comf	(??_memset+1)^0,f,c
  8061  0047FC  4A09               	infsnz	??_memset^0,f,c
  8062  0047FE  2A0A               	incf	(??_memset+1)^0,f,c
  8063  004800  0E03               	movlw	3
  8064  004802  1409               	andwf	??_memset^0,w,c
  8065  004804  6E0B               	movwf	memset@k^0,c
  8066  004806  6A0C               	clrf	(memset@k+1)^0,c
  8067  004808  500B               	movf	memset@k^0,w,c
  8068  00480A  260D               	addwf	memset@s^0,f,c
  8069  00480C  500C               	movf	(memset@k+1)^0,w,c
  8070  00480E  220E               	addwfc	(memset@s+1)^0,f,c
  8071  004810  500B               	movf	memset@k^0,w,c
  8072  004812  5E07               	subwf	memset@n^0,f,c
  8073  004814  500C               	movf	(memset@k+1)^0,w,c
  8074  004816  5A08               	subwfb	(memset@n+1)^0,f,c
  8075  004818  0EFC               	movlw	252
  8076  00481A  1607               	andwf	memset@n^0,f,c
  8077  00481C  0EFF               	movlw	255
  8078  00481E  1608               	andwf	(memset@n+1)^0,f,c
  8079  004820  EF1D  F024         	goto	l6080
  8080  004824                     l6074:
  8081  004824  C00D  FFD9         	movff	memset@s,fsr2l
  8082  004828  C00E  FFDA         	movff	memset@s+1,fsr2h
  8083  00482C  C005  FFDF         	movff	memset@c,indf2
  8084  004830  0607               	decf	memset@n^0,f,c
  8085  004832  A0D8               	btfss	status,0,c
  8086  004834  0608               	decf	(memset@n+1)^0,f,c
  8087  004836  4A0D               	infsnz	memset@s^0,f,c
  8088  004838  2A0E               	incf	(memset@s+1)^0,f,c
  8089  00483A                     l6080:
  8090  00483A  5007               	movf	memset@n^0,w,c
  8091  00483C  1008               	iorwf	(memset@n+1)^0,w,c
  8092  00483E  A4D8               	btfss	status,2,c
  8093  004840  EF24  F024         	goto	u7741
  8094  004844  EF26  F024         	goto	u7740
  8095  004848                     u7741:
  8096  004848  EF12  F024         	goto	l6074
  8097  00484C                     u7740:
  8098  00484C                     l894:
  8099  00484C  0012               	return		;funcret
  8100  00484E                     __end_of_memset:
  8101                           	callstack 0
  8102                           
  8103 ;; *************** function _getDistance *****************
  8104 ;; Defined at:
  8105 ;;		line 134 in file "main.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;		None
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;  count           2    4[COMRAM] unsigned short 
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  2    2[COMRAM] unsigned short 
  8112 ;; Registers used:
  8113 ;;		wreg, status,2, status,0
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8119 ;;      Params:         2       0       0       0       0       0       0       0       0
  8120 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8122 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8123 ;;Total ram usage:        4 bytes
  8124 ;; Hardware stack levels used: 1
  8125 ;; Hardware stack levels required when called: 2
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_main
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text29
  8134  005A14                     __ptext29:
  8135                           	callstack 0
  8136  005A14                     _getDistance:
  8137                           	callstack 28
  8138  005A14                     
  8139                           ;main.c: 135:     uint16_t count=0;
  8140  005A14  0E00               	movlw	0
  8141  005A16  6E06               	movwf	(getDistance@count+1)^0,c
  8142  005A18  0E00               	movlw	0
  8143  005A1A  6E05               	movwf	getDistance@count^0,c
  8144  005A1C                     
  8145                           ;main.c: 136:     PORTBbits.RB0 = 1;
  8146  005A1C  8081               	bsf	129,0,c	;volatile
  8147  005A1E                     
  8148                           ;main.c: 137:     _delay((unsigned long)((10)*(20000000UL/4000000.0)));
  8149  005A1E  0E10               	movlw	16
  8150  005A20                     u11347:
  8151  005A20  2EE8               	decfsz	wreg,f,c
  8152  005A22  D7FE               	bra	u11347
  8153  005A24  D000               	nop2	
  8154  005A26                     
  8155                           ;main.c: 138:     PORTBbits.RB0 = 0;
  8156  005A26  9081               	bcf	129,0,c	;volatile
  8157  005A28                     l106:
  8158  005A28  A281               	btfss	129,1,c	;volatile
  8159  005A2A  EF19  F02D         	goto	u7751
  8160  005A2E  EF1B  F02D         	goto	u7750
  8161  005A32                     u7751:
  8162  005A32  EF14  F02D         	goto	l106
  8163  005A36                     u7750:
  8164  005A36  EF23  F02D         	goto	l6094
  8165  005A3A                     l6090:
  8166                           
  8167                           ;main.c: 142:         count++;
  8168  005A3A  4A05               	infsnz	getDistance@count^0,f,c
  8169  005A3C  2A06               	incf	(getDistance@count+1)^0,f,c
  8170  005A3E                     
  8171                           ;main.c: 143:         _delay((unsigned long)((58)*(20000000UL/4000000.0)));
  8172  005A3E  0E60               	movlw	96
  8173  005A40                     u11357:
  8174  005A40  2EE8               	decfsz	wreg,f,c
  8175  005A42  D7FE               	bra	u11357
  8176  005A44  D000               	nop2	
  8177  005A46                     l6094:
  8178                           
  8179                           ;main.c: 141:     while(PORTBbits.RB1 == 1){
  8180  005A46  B281               	btfsc	129,1,c	;volatile
  8181  005A48  EF28  F02D         	goto	u7761
  8182  005A4C  EF2A  F02D         	goto	u7760
  8183  005A50                     u7761:
  8184  005A50  EF1D  F02D         	goto	l6090
  8185  005A54                     u7760:
  8186  005A54                     
  8187                           ;main.c: 146:     return(count);
  8188  005A54  C005  F003         	movff	getDistance@count,?_getDistance
  8189  005A58  C006  F004         	movff	getDistance@count+1,?_getDistance+1
  8190  005A5C  0012               	return		;funcret
  8191  005A5E                     __end_of_getDistance:
  8192                           	callstack 0
  8193                           
  8194 ;; *************** function _atof *****************
  8195 ;; Defined at:
  8196 ;;		line 423 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strtof.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;  s               2   30[BANK0 ] PTR const unsigned char 
  8199 ;;		 -> NULL(0), bufferRx(50), 
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;		None
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  4   30[BANK0 ] PTR const unsigned char 
  8204 ;; Registers used:
  8205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8211 ;;      Params:         0       4       0       0       0       0       0       0       0
  8212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8214 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8215 ;;Total ram usage:        4 bytes
  8216 ;; Hardware stack levels used: 1
  8217 ;; Hardware stack levels required when called: 5
  8218 ;; This function calls:
  8219 ;;		_strtof
  8220 ;; This function is called by:
  8221 ;;		_main
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text30
  8226  005D6E                     __ptext30:
  8227                           	callstack 0
  8228  005D6E                     _atof:
  8229                           	callstack 25
  8230  005D6E  C07E  F052         	movff	atof@s,strtof@s
  8231  005D72  C07F  F053         	movff	atof@s+1,strtof@s+1
  8232  005D76  0E00               	movlw	0
  8233  005D78  6E54               	movwf	strtof@res^0,c
  8234  005D7A  0E00               	movlw	0
  8235  005D7C  6E55               	movwf	(strtof@res+1)^0,c
  8236  005D7E  EC26  F004         	call	_strtof	;wreg free
  8237  005D82  C052  F07E         	movff	?_strtof,?_atof
  8238  005D86  C053  F07F         	movff	?_strtof+1,?_atof+1
  8239  005D8A  C054  F080         	movff	?_strtof+2,?_atof+2
  8240  005D8E  C055  F081         	movff	?_strtof+3,?_atof+3
  8241  005D92  0012               	return		;funcret
  8242  005D94                     __end_of_atof:
  8243                           	callstack 0
  8244                           
  8245 ;; *************** function _strtof *****************
  8246 ;; Defined at:
  8247 ;;		line 95 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strtof.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  s               2   81[COMRAM] PTR const unsigned char 
  8250 ;;		 -> NULL(0), bufferRx(50), 
  8251 ;;  res             2   83[COMRAM] PTR PTR unsigned char 
  8252 ;;		 -> NULL(0), 
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;  _u              4   25[BANK0 ] struct .
  8255 ;;  eexp            2   23[BANK0 ] int 
  8256 ;;  expon           2   21[BANK0 ] int 
  8257 ;;  i               1   29[BANK0 ] unsigned char 
  8258 ;;  flags           1   20[BANK0 ] unsigned char 
  8259 ;;  digit           1   19[BANK0 ] unsigned char 
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  4   81[COMRAM] float 
  8262 ;; Registers used:
  8263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8269 ;;      Params:         4       0       0       0       0       0       0       0       0
  8270 ;;      Locals:         0      11       0       0       0       0       0       0       0
  8271 ;;      Temps:          0       6       0       0       0       0       0       0       0
  8272 ;;      Totals:         4      17       0       0       0       0       0       0       0
  8273 ;;Total ram usage:       21 bytes
  8274 ;; Hardware stack levels used: 1
  8275 ;; Hardware stack levels required when called: 4
  8276 ;; This function calls:
  8277 ;;		___fldiv
  8278 ;;		___fleq
  8279 ;;		___flge
  8280 ;;		___flmul
  8281 ;;		___flneg
  8282 ;;		___lmul
  8283 ;;		___wmul
  8284 ;;		___xxtofl
  8285 ;;		_isdigit
  8286 ;;		_isspace
  8287 ;;		_isxdigit
  8288 ;;		_nanf
  8289 ;;		_toupper
  8290 ;; This function is called by:
  8291 ;;		_atof
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text31
  8296  00084C                     __ptext31:
  8297                           	callstack 0
  8298  00084C                     _strtof:
  8299                           	callstack 25
  8300  00084C  5054               	movf	strtof@res^0,w,c
  8301  00084E  1055               	iorwf	(strtof@res+1)^0,w,c
  8302  000850  B4D8               	btfsc	status,2,c
  8303  000852  EF2D  F004         	goto	u10381
  8304  000856  EF2F  F004         	goto	u10380
  8305  00085A                     u10381:
  8306  00085A  EF3B  F004         	goto	l7828
  8307  00085E                     u10380:
  8308  00085E  C054  FFD9         	movff	strtof@res,fsr2l
  8309  000862  C055  FFDA         	movff	strtof@res+1,fsr2h
  8310  000866  C052  FFDE         	movff	strtof@s,postinc2
  8311  00086A  C053  FFDD         	movff	strtof@s+1,postdec2
  8312  00086E  EF3B  F004         	goto	l7828
  8313  000872                     l7824:
  8314                           
  8315                           ; BSR set to: 0
  8316  000872  4A52               	infsnz	strtof@s^0,f,c
  8317  000874  2A53               	incf	(strtof@s+1)^0,f,c
  8318  000876                     l7828:
  8319  000876  C052  FFD9         	movff	strtof@s,fsr2l
  8320  00087A  C053  FFDA         	movff	strtof@s+1,fsr2h
  8321  00087E  0E20               	movlw	32
  8322  000880  18DE               	xorwf	postinc2,w,c
  8323  000882  B4D8               	btfsc	status,2,c
  8324  000884  EF46  F004         	goto	u10391
  8325  000888  EF49  F004         	goto	u10390
  8326  00088C                     u10391:
  8327  00088C  0E01               	movlw	1
  8328  00088E  EF4A  F004         	goto	u10400
  8329  000892                     u10390:
  8330  000892  0E00               	movlw	0
  8331  000894                     u10400:
  8332  000894  0100               	movlb	0	; () banked
  8333  000896  6F77               	movwf	strtof@eexp& (0+255),b
  8334  000898  6B78               	clrf	(strtof@eexp+1)& (0+255),b
  8335  00089A  5177               	movf	strtof@eexp& (0+255),w,b
  8336  00089C  1178               	iorwf	(strtof@eexp+1)& (0+255),w,b
  8337  00089E  A4D8               	btfss	status,2,c
  8338  0008A0  EF54  F004         	goto	u10411
  8339  0008A4  EF56  F004         	goto	u10410
  8340  0008A8                     u10411:
  8341  0008A8  EF39  F004         	goto	l7824
  8342  0008AC                     u10410:
  8343  0008AC                     
  8344                           ; BSR set to: 0
  8345  0008AC  0EF7               	movlw	247
  8346  0008AE  6F6D               	movwf	??_strtof& (0+255),b
  8347  0008B0  0EFF               	movlw	255
  8348  0008B2  6F6E               	movwf	(??_strtof+1)& (0+255),b
  8349  0008B4  C052  FFD9         	movff	strtof@s,fsr2l
  8350  0008B8  C053  FFDA         	movff	strtof@s+1,fsr2h
  8351  0008BC  50DF               	movf	indf2,w,c
  8352  0008BE  6F6F               	movwf	(??_strtof+2)& (0+255),b
  8353  0008C0  516F               	movf	(??_strtof+2)& (0+255),w,b
  8354  0008C2  6F77               	movwf	strtof@eexp& (0+255),b
  8355  0008C4  6B78               	clrf	(strtof@eexp+1)& (0+255),b
  8356  0008C6  C077  F070         	movff	strtof@eexp,??_strtof+3
  8357  0008CA  C078  F071         	movff	strtof@eexp+1,??_strtof+4
  8358  0008CE  516D               	movf	??_strtof& (0+255),w,b
  8359  0008D0  2770               	addwf	(??_strtof+3)& (0+255),f,b
  8360  0008D2  516E               	movf	(??_strtof+1)& (0+255),w,b
  8361  0008D4  2371               	addwfc	(??_strtof+4)& (0+255),f,b
  8362  0008D6  5171               	movf	(??_strtof+4)& (0+255),w,b
  8363  0008D8  E109               	bnz	u10420
  8364  0008DA  0E05               	movlw	5
  8365  0008DC  5D70               	subwf	(??_strtof+3)& (0+255),w,b
  8366  0008DE  A0D8               	btfss	status,0,c
  8367  0008E0  EF74  F004         	goto	u10421
  8368  0008E4  EF76  F004         	goto	u10420
  8369  0008E8                     u10421:
  8370  0008E8  EF39  F004         	goto	l7824
  8371  0008EC                     u10420:
  8372  0008EC                     
  8373                           ; BSR set to: 0
  8374  0008EC  0E00               	movlw	0
  8375  0008EE  6F74               	movwf	strtof@flags& (0+255),b
  8376  0008F0                     
  8377                           ; BSR set to: 0
  8378  0008F0  0E2D               	movlw	45
  8379  0008F2  1977               	xorwf	strtof@eexp& (0+255),w,b
  8380  0008F4  1178               	iorwf	(strtof@eexp+1)& (0+255),w,b
  8381  0008F6  A4D8               	btfss	status,2,c
  8382  0008F8  EF80  F004         	goto	u10431
  8383  0008FC  EF82  F004         	goto	u10430
  8384  000900                     u10431:
  8385  000900  EF88  F004         	goto	l7840
  8386  000904                     u10430:
  8387  000904                     
  8388                           ; BSR set to: 0
  8389  000904  0E01               	movlw	1
  8390  000906  6F74               	movwf	strtof@flags& (0+255),b
  8391  000908                     l7838:
  8392                           
  8393                           ; BSR set to: 0
  8394  000908  4A52               	infsnz	strtof@s^0,f,c
  8395  00090A  2A53               	incf	(strtof@s+1)^0,f,c
  8396  00090C  EF94  F004         	goto	l7844
  8397  000910                     l7840:
  8398                           
  8399                           ; BSR set to: 0
  8400  000910  0E2B               	movlw	43
  8401  000912  1977               	xorwf	strtof@eexp& (0+255),w,b
  8402  000914  1178               	iorwf	(strtof@eexp+1)& (0+255),w,b
  8403  000916  A4D8               	btfss	status,2,c
  8404  000918  EF90  F004         	goto	u10441
  8405  00091C  EF92  F004         	goto	u10440
  8406  000920                     u10441:
  8407  000920  EF94  F004         	goto	l7844
  8408  000924                     u10440:
  8409  000924  EF84  F004         	goto	l7838
  8410  000928                     l7844:
  8411                           
  8412                           ; BSR set to: 0
  8413  000928  0E00               	movlw	0
  8414  00092A  6F7D               	movwf	strtof@i& (0+255),b
  8415  00092C  EF99  F004         	goto	l7848
  8416  000930                     l7846:
  8417                           
  8418                           ; BSR set to: 0
  8419  000930  2B7D               	incf	strtof@i& (0+255),f,b
  8420  000932                     l7848:
  8421                           
  8422                           ; BSR set to: 0
  8423  000932  517D               	movf	strtof@i& (0+255),w,b
  8424  000934  2452               	addwf	strtof@s^0,w,c
  8425  000936  6ED9               	movwf	fsr2l,c
  8426  000938  0E00               	movlw	0
  8427  00093A  2053               	addwfc	(strtof@s+1)^0,w,c
  8428  00093C  6EDA               	movwf	fsr2h,c
  8429  00093E  50DF               	movf	indf2,w,c
  8430  000940  B4D8               	btfsc	status,2,c
  8431  000942  EFA5  F004         	goto	u10451
  8432  000946  EFA7  F004         	goto	u10450
  8433  00094A                     u10451:
  8434  00094A  EFD7  F004         	goto	l7854
  8435  00094E                     u10450:
  8436  00094E                     
  8437                           ; BSR set to: 0
  8438  00094E  517D               	movf	strtof@i& (0+255),w,b
  8439  000950  2452               	addwf	strtof@s^0,w,c
  8440  000952  6ED9               	movwf	fsr2l,c
  8441  000954  0E00               	movlw	0
  8442  000956  2053               	addwfc	(strtof@s+1)^0,w,c
  8443  000958  6EDA               	movwf	fsr2h,c
  8444  00095A  50DF               	movf	indf2,w,c
  8445  00095C  6F6D               	movwf	??_strtof& (0+255),b
  8446  00095E  0E2B               	movlw	low STR_17
  8447  000960  257D               	addwf	strtof@i& (0+255),w,b
  8448  000962  6EF6               	movwf	tblptrl,c
  8449  000964  6AF7               	clrf	tblptrh,c
  8450  000966  0E08               	movlw	high STR_17
  8451  000968  22F7               	addwfc	tblptrh,f,c
  8452  00096A                     	if	0	;There are less than 3 active tblptr bytes
  8453  00096A                     	endif
  8454  00096A  0008               	tblrd		*
  8455  00096C  50F5               	movf	tablat,w,c
  8456  00096E  196D               	xorwf	??_strtof& (0+255),w,b
  8457  000970  B4D8               	btfsc	status,2,c
  8458  000972  EFBD  F004         	goto	u10461
  8459  000976  EFBF  F004         	goto	u10460
  8460  00097A                     u10461:
  8461  00097A  EF98  F004         	goto	l7846
  8462  00097E                     u10460:
  8463  00097E                     
  8464                           ; BSR set to: 0
  8465  00097E  517D               	movf	strtof@i& (0+255),w,b
  8466  000980  2452               	addwf	strtof@s^0,w,c
  8467  000982  6ED9               	movwf	fsr2l,c
  8468  000984  0E00               	movlw	0
  8469  000986  2053               	addwfc	(strtof@s+1)^0,w,c
  8470  000988  6EDA               	movwf	fsr2h,c
  8471  00098A  50DF               	movf	indf2,w,c
  8472  00098C  6F6D               	movwf	??_strtof& (0+255),b
  8473  00098E  0E22               	movlw	low STR_18
  8474  000990  257D               	addwf	strtof@i& (0+255),w,b
  8475  000992  6EF6               	movwf	tblptrl,c
  8476  000994  6AF7               	clrf	tblptrh,c
  8477  000996  0E08               	movlw	high STR_18
  8478  000998  22F7               	addwfc	tblptrh,f,c
  8479  00099A                     	if	0	;There are less than 3 active tblptr bytes
  8480  00099A                     	endif
  8481  00099A  0008               	tblrd		*
  8482  00099C  50F5               	movf	tablat,w,c
  8483  00099E  196D               	xorwf	??_strtof& (0+255),w,b
  8484  0009A0  B4D8               	btfsc	status,2,c
  8485  0009A2  EFD5  F004         	goto	u10471
  8486  0009A6  EFD7  F004         	goto	u10470
  8487  0009AA                     u10471:
  8488  0009AA  EF98  F004         	goto	l7846
  8489  0009AE                     u10470:
  8490  0009AE                     l7854:
  8491                           
  8492                           ; BSR set to: 0
  8493  0009AE  0E02               	movlw	2
  8494  0009B0  657D               	cpfsgt	strtof@i& (0+255),b
  8495  0009B2  EFDD  F004         	goto	u10481
  8496  0009B6  EFDF  F004         	goto	u10480
  8497  0009BA                     u10481:
  8498  0009BA  EF0B  F005         	goto	l7866
  8499  0009BE                     u10480:
  8500  0009BE                     
  8501                           ; BSR set to: 0
  8502  0009BE  0E00               	movlw	0
  8503  0009C0  6F79               	movwf	strtof@_u& (0+255),b
  8504  0009C2  0E00               	movlw	0
  8505  0009C4  6F7A               	movwf	(strtof@_u+1)& (0+255),b
  8506  0009C6  0E80               	movlw	128
  8507  0009C8  6F7B               	movwf	(strtof@_u+2)& (0+255),b
  8508  0009CA  0E7F               	movlw	127
  8509  0009CC  6F7C               	movwf	(strtof@_u+3)& (0+255),b
  8510  0009CE                     
  8511                           ; BSR set to: 0
  8512  0009CE  5054               	movf	strtof@res^0,w,c
  8513  0009D0  1055               	iorwf	(strtof@res+1)^0,w,c
  8514  0009D2  B4D8               	btfsc	status,2,c
  8515  0009D4  EFEE  F004         	goto	u10491
  8516  0009D8  EFF0  F004         	goto	u10490
  8517  0009DC                     u10491:
  8518  0009DC  EF57  F00C         	goto	l1269
  8519  0009E0                     u10490:
  8520  0009E0                     
  8521                           ; BSR set to: 0
  8522  0009E0  0E08               	movlw	8
  8523  0009E2  197D               	xorwf	strtof@i& (0+255),w,b
  8524  0009E4  B4D8               	btfsc	status,2,c
  8525  0009E6  EFF7  F004         	goto	u10501
  8526  0009EA  EFF9  F004         	goto	u10500
  8527  0009EE                     u10501:
  8528  0009EE  EFFB  F004         	goto	l7864
  8529  0009F2                     u10500:
  8530  0009F2                     
  8531                           ; BSR set to: 0
  8532  0009F2  0E03               	movlw	3
  8533  0009F4  6F7D               	movwf	strtof@i& (0+255),b
  8534  0009F6                     l7864:
  8535                           
  8536                           ; BSR set to: 0
  8537  0009F6  517D               	movf	strtof@i& (0+255),w,b
  8538  0009F8  2452               	addwf	strtof@s^0,w,c
  8539  0009FA  6F6D               	movwf	??_strtof& (0+255),b
  8540  0009FC  0E00               	movlw	0
  8541  0009FE  2053               	addwfc	(strtof@s+1)^0,w,c
  8542  000A00  6F6E               	movwf	(??_strtof+1)& (0+255),b
  8543  000A02  C054  FFD9         	movff	strtof@res,fsr2l
  8544  000A06  C055  FFDA         	movff	strtof@res+1,fsr2h
  8545  000A0A  C06D  FFDE         	movff	??_strtof,postinc2
  8546  000A0E  C06E  FFDD         	movff	??_strtof+1,postdec2
  8547  000A12  EF57  F00C         	goto	l1269
  8548  000A16                     l7866:
  8549                           
  8550                           ; BSR set to: 0
  8551  000A16  0E00               	movlw	0
  8552  000A18  6F7D               	movwf	strtof@i& (0+255),b
  8553  000A1A  EF10  F005         	goto	l7870
  8554  000A1E                     l7868:
  8555                           
  8556                           ; BSR set to: 0
  8557  000A1E  2B7D               	incf	strtof@i& (0+255),f,b
  8558  000A20                     l7870:
  8559                           
  8560                           ; BSR set to: 0
  8561  000A20  517D               	movf	strtof@i& (0+255),w,b
  8562  000A22  2452               	addwf	strtof@s^0,w,c
  8563  000A24  6ED9               	movwf	fsr2l,c
  8564  000A26  0E00               	movlw	0
  8565  000A28  2053               	addwfc	(strtof@s+1)^0,w,c
  8566  000A2A  6EDA               	movwf	fsr2h,c
  8567  000A2C  50DF               	movf	indf2,w,c
  8568  000A2E  B4D8               	btfsc	status,2,c
  8569  000A30  EF1C  F005         	goto	u10511
  8570  000A34  EF1E  F005         	goto	u10510
  8571  000A38                     u10511:
  8572  000A38  EF4E  F005         	goto	l7876
  8573  000A3C                     u10510:
  8574  000A3C                     
  8575                           ; BSR set to: 0
  8576  000A3C  517D               	movf	strtof@i& (0+255),w,b
  8577  000A3E  2452               	addwf	strtof@s^0,w,c
  8578  000A40  6ED9               	movwf	fsr2l,c
  8579  000A42  0E00               	movlw	0
  8580  000A44  2053               	addwfc	(strtof@s+1)^0,w,c
  8581  000A46  6EDA               	movwf	fsr2h,c
  8582  000A48  50DF               	movf	indf2,w,c
  8583  000A4A  6F6D               	movwf	??_strtof& (0+255),b
  8584  000A4C  0E40               	movlw	low STR_9
  8585  000A4E  257D               	addwf	strtof@i& (0+255),w,b
  8586  000A50  6EF6               	movwf	tblptrl,c
  8587  000A52  6AF7               	clrf	tblptrh,c
  8588  000A54  0E08               	movlw	high STR_9
  8589  000A56  22F7               	addwfc	tblptrh,f,c
  8590  000A58                     	if	0	;There are less than 3 active tblptr bytes
  8591  000A58                     	endif
  8592  000A58  0008               	tblrd		*
  8593  000A5A  50F5               	movf	tablat,w,c
  8594  000A5C  196D               	xorwf	??_strtof& (0+255),w,b
  8595  000A5E  B4D8               	btfsc	status,2,c
  8596  000A60  EF34  F005         	goto	u10521
  8597  000A64  EF36  F005         	goto	u10520
  8598  000A68                     u10521:
  8599  000A68  EF0F  F005         	goto	l7868
  8600  000A6C                     u10520:
  8601  000A6C                     
  8602                           ; BSR set to: 0
  8603  000A6C  517D               	movf	strtof@i& (0+255),w,b
  8604  000A6E  2452               	addwf	strtof@s^0,w,c
  8605  000A70  6ED9               	movwf	fsr2l,c
  8606  000A72  0E00               	movlw	0
  8607  000A74  2053               	addwfc	(strtof@s+1)^0,w,c
  8608  000A76  6EDA               	movwf	fsr2h,c
  8609  000A78  50DF               	movf	indf2,w,c
  8610  000A7A  6F6D               	movwf	??_strtof& (0+255),b
  8611  000A7C  0E38               	movlw	low STR_8
  8612  000A7E  257D               	addwf	strtof@i& (0+255),w,b
  8613  000A80  6EF6               	movwf	tblptrl,c
  8614  000A82  6AF7               	clrf	tblptrh,c
  8615  000A84  0E08               	movlw	high STR_8
  8616  000A86  22F7               	addwfc	tblptrh,f,c
  8617  000A88                     	if	0	;There are less than 3 active tblptr bytes
  8618  000A88                     	endif
  8619  000A88  0008               	tblrd		*
  8620  000A8A  50F5               	movf	tablat,w,c
  8621  000A8C  196D               	xorwf	??_strtof& (0+255),w,b
  8622  000A8E  B4D8               	btfsc	status,2,c
  8623  000A90  EF4C  F005         	goto	u10531
  8624  000A94  EF4E  F005         	goto	u10530
  8625  000A98                     u10531:
  8626  000A98  EF0F  F005         	goto	l7868
  8627  000A9C                     u10530:
  8628  000A9C                     l7876:
  8629                           
  8630                           ; BSR set to: 0
  8631  000A9C  0E03               	movlw	3
  8632  000A9E  197D               	xorwf	strtof@i& (0+255),w,b
  8633  000AA0  A4D8               	btfss	status,2,c
  8634  000AA2  EF55  F005         	goto	u10541
  8635  000AA6  EF57  F005         	goto	u10540
  8636  000AAA                     u10541:
  8637  000AAA  EFC6  F005         	goto	l7900
  8638  000AAE                     u10540:
  8639  000AAE                     
  8640                           ; BSR set to: 0
  8641  000AAE  0E21               	movlw	low (STR_3+32)
  8642  000AB0  6E03               	movwf	nanf@s^0,c
  8643  000AB2  0E08               	movlw	high (STR_3+32)
  8644  000AB4  6E04               	movwf	(nanf@s+1)^0,c
  8645  000AB6  ECDD  F02E         	call	_nanf	;wreg free
  8646  000ABA  C003  F079         	movff	?_nanf,strtof@_u
  8647  000ABE  C004  F07A         	movff	?_nanf+1,strtof@_u+1
  8648  000AC2  C005  F07B         	movff	?_nanf+2,strtof@_u+2
  8649  000AC6  C006  F07C         	movff	?_nanf+3,strtof@_u+3
  8650  000ACA  5054               	movf	strtof@res^0,w,c
  8651  000ACC  1055               	iorwf	(strtof@res+1)^0,w,c
  8652  000ACE  B4D8               	btfsc	status,2,c
  8653  000AD0  EF6C  F005         	goto	u10551
  8654  000AD4  EF6E  F005         	goto	u10550
  8655  000AD8                     u10551:
  8656  000AD8  EF57  F00C         	goto	l1269
  8657  000ADC                     u10550:
  8658  000ADC  0100               	movlb	0	; () banked
  8659  000ADE  517D               	movf	strtof@i& (0+255),w,b
  8660  000AE0  2652               	addwf	strtof@s^0,f,c
  8661  000AE2  0E00               	movlw	0
  8662  000AE4  2253               	addwfc	(strtof@s+1)^0,f,c
  8663  000AE6                     
  8664                           ; BSR set to: 0
  8665  000AE6  C052  FFD9         	movff	strtof@s,fsr2l
  8666  000AEA  C053  FFDA         	movff	strtof@s+1,fsr2h
  8667  000AEE  0E28               	movlw	40
  8668  000AF0  18DE               	xorwf	postinc2,w,c
  8669  000AF2  A4D8               	btfss	status,2,c
  8670  000AF4  EF7E  F005         	goto	u10561
  8671  000AF8  EF80  F005         	goto	u10560
  8672  000AFC                     u10561:
  8673  000AFC  EFBC  F005         	goto	l7898
  8674  000B00                     u10560:
  8675  000B00                     
  8676                           ; BSR set to: 0
  8677  000B00  0E00               	movlw	0
  8678  000B02  6F7D               	movwf	strtof@i& (0+255),b
  8679  000B04  EF85  F005         	goto	l7890
  8680  000B08                     l7888:
  8681                           
  8682                           ; BSR set to: 0
  8683  000B08  2B7D               	incf	strtof@i& (0+255),f,b
  8684  000B0A                     l7890:
  8685                           
  8686                           ; BSR set to: 0
  8687  000B0A  517D               	movf	strtof@i& (0+255),w,b
  8688  000B0C  2452               	addwf	strtof@s^0,w,c
  8689  000B0E  6ED9               	movwf	fsr2l,c
  8690  000B10  0E00               	movlw	0
  8691  000B12  2053               	addwfc	(strtof@s+1)^0,w,c
  8692  000B14  6EDA               	movwf	fsr2h,c
  8693  000B16  50DF               	movf	indf2,w,c
  8694  000B18  B4D8               	btfsc	status,2,c
  8695  000B1A  EF91  F005         	goto	u10571
  8696  000B1E  EF93  F005         	goto	u10570
  8697  000B22                     u10571:
  8698  000B22  EFA2  F005         	goto	l7894
  8699  000B26                     u10570:
  8700  000B26                     
  8701                           ; BSR set to: 0
  8702  000B26  517D               	movf	strtof@i& (0+255),w,b
  8703  000B28  2452               	addwf	strtof@s^0,w,c
  8704  000B2A  6ED9               	movwf	fsr2l,c
  8705  000B2C  0E00               	movlw	0
  8706  000B2E  2053               	addwfc	(strtof@s+1)^0,w,c
  8707  000B30  6EDA               	movwf	fsr2h,c
  8708  000B32  0E29               	movlw	41
  8709  000B34  18DE               	xorwf	postinc2,w,c
  8710  000B36  A4D8               	btfss	status,2,c
  8711  000B38  EFA0  F005         	goto	u10581
  8712  000B3C  EFA2  F005         	goto	u10580
  8713  000B40                     u10581:
  8714  000B40  EF84  F005         	goto	l7888
  8715  000B44                     u10580:
  8716  000B44                     l7894:
  8717                           
  8718                           ; BSR set to: 0
  8719  000B44  517D               	movf	strtof@i& (0+255),w,b
  8720  000B46  2452               	addwf	strtof@s^0,w,c
  8721  000B48  6ED9               	movwf	fsr2l,c
  8722  000B4A  0E00               	movlw	0
  8723  000B4C  2053               	addwfc	(strtof@s+1)^0,w,c
  8724  000B4E  6EDA               	movwf	fsr2h,c
  8725  000B50  0E29               	movlw	41
  8726  000B52  18DE               	xorwf	postinc2,w,c
  8727  000B54  A4D8               	btfss	status,2,c
  8728  000B56  EFAF  F005         	goto	u10591
  8729  000B5A  EFB1  F005         	goto	u10590
  8730  000B5E                     u10591:
  8731  000B5E  EFBC  F005         	goto	l7898
  8732  000B62                     u10590:
  8733  000B62                     
  8734                           ; BSR set to: 0
  8735  000B62  517D               	movf	strtof@i& (0+255),w,b
  8736  000B64  6F6D               	movwf	??_strtof& (0+255),b
  8737  000B66  6B6E               	clrf	(??_strtof+1)& (0+255),b
  8738  000B68  0E01               	movlw	1
  8739  000B6A  276D               	addwf	??_strtof& (0+255),f,b
  8740  000B6C  0E00               	movlw	0
  8741  000B6E  236E               	addwfc	(??_strtof+1)& (0+255),f,b
  8742  000B70  516D               	movf	??_strtof& (0+255),w,b
  8743  000B72  2652               	addwf	strtof@s^0,f,c
  8744  000B74  516E               	movf	(??_strtof+1)& (0+255),w,b
  8745  000B76  2253               	addwfc	(strtof@s+1)^0,f,c
  8746  000B78                     l7898:
  8747                           
  8748                           ; BSR set to: 0
  8749  000B78  C054  FFD9         	movff	strtof@res,fsr2l
  8750  000B7C  C055  FFDA         	movff	strtof@res+1,fsr2h
  8751  000B80  C052  FFDE         	movff	strtof@s,postinc2
  8752  000B84  C053  FFDD         	movff	strtof@s+1,postdec2
  8753  000B88  EF57  F00C         	goto	l1269
  8754  000B8C                     l7900:
  8755                           
  8756                           ; BSR set to: 0
  8757  000B8C  0E00               	movlw	0
  8758  000B8E  6F78               	movwf	(strtof@eexp+1)& (0+255),b
  8759  000B90  0E00               	movlw	0
  8760  000B92  6F77               	movwf	strtof@eexp& (0+255),b
  8761  000B94  0E00               	movlw	0
  8762  000B96  6F79               	movwf	strtof@_u& (0+255),b
  8763  000B98  0E00               	movlw	0
  8764  000B9A  6F7A               	movwf	(strtof@_u+1)& (0+255),b
  8765  000B9C  0E00               	movlw	0
  8766  000B9E  6F7B               	movwf	(strtof@_u+2)& (0+255),b
  8767  000BA0  0E00               	movlw	0
  8768  000BA2  6F7C               	movwf	(strtof@_u+3)& (0+255),b
  8769  000BA4  0E00               	movlw	0
  8770  000BA6  6F76               	movwf	(strtof@expon+1)& (0+255),b
  8771  000BA8  0E00               	movlw	0
  8772  000BAA  6F75               	movwf	strtof@expon& (0+255),b
  8773  000BAC  0E00               	movlw	0
  8774  000BAE  6F7D               	movwf	strtof@i& (0+255),b
  8775  000BB0  EFDB  F005         	goto	l7904
  8776  000BB4                     l7902:
  8777                           
  8778                           ; BSR set to: 0
  8779  000BB4  2B7D               	incf	strtof@i& (0+255),f,b
  8780  000BB6                     l7904:
  8781                           
  8782                           ; BSR set to: 0
  8783  000BB6  517D               	movf	strtof@i& (0+255),w,b
  8784  000BB8  2452               	addwf	strtof@s^0,w,c
  8785  000BBA  6ED9               	movwf	fsr2l,c
  8786  000BBC  0E00               	movlw	0
  8787  000BBE  2053               	addwfc	(strtof@s+1)^0,w,c
  8788  000BC0  6EDA               	movwf	fsr2h,c
  8789  000BC2  0E30               	movlw	48
  8790  000BC4  18DE               	xorwf	postinc2,w,c
  8791  000BC6  B4D8               	btfsc	status,2,c
  8792  000BC8  EFE8  F005         	goto	u10601
  8793  000BCC  EFEA  F005         	goto	u10600
  8794  000BD0                     u10601:
  8795  000BD0  EFDA  F005         	goto	l7902
  8796  000BD4                     u10600:
  8797  000BD4                     
  8798                           ; BSR set to: 0
  8799  000BD4  517D               	movf	strtof@i& (0+255),w,b
  8800  000BD6  B4D8               	btfsc	status,2,c
  8801  000BD8  EFF0  F005         	goto	u10611
  8802  000BDC  EFF2  F005         	goto	u10610
  8803  000BE0                     u10611:
  8804  000BE0  EF68  F009         	goto	l1354
  8805  000BE4                     u10610:
  8806  000BE4                     
  8807                           ; BSR set to: 0
  8808  000BE4  517D               	movf	strtof@i& (0+255),w,b
  8809  000BE6  2452               	addwf	strtof@s^0,w,c
  8810  000BE8  6ED9               	movwf	fsr2l,c
  8811  000BEA  0E00               	movlw	0
  8812  000BEC  2053               	addwfc	(strtof@s+1)^0,w,c
  8813  000BEE  6EDA               	movwf	fsr2h,c
  8814  000BF0  0E78               	movlw	120
  8815  000BF2  18DE               	xorwf	postinc2,w,c
  8816  000BF4  B4D8               	btfsc	status,2,c
  8817  000BF6  EFFF  F005         	goto	u10621
  8818  000BFA  EF01  F006         	goto	u10620
  8819  000BFE                     u10621:
  8820  000BFE  EF10  F006         	goto	l7912
  8821  000C02                     u10620:
  8822  000C02                     
  8823                           ; BSR set to: 0
  8824  000C02  517D               	movf	strtof@i& (0+255),w,b
  8825  000C04  2452               	addwf	strtof@s^0,w,c
  8826  000C06  6ED9               	movwf	fsr2l,c
  8827  000C08  0E00               	movlw	0
  8828  000C0A  2053               	addwfc	(strtof@s+1)^0,w,c
  8829  000C0C  6EDA               	movwf	fsr2h,c
  8830  000C0E  0E58               	movlw	88
  8831  000C10  18DE               	xorwf	postinc2,w,c
  8832  000C12  A4D8               	btfss	status,2,c
  8833  000C14  EF0E  F006         	goto	u10631
  8834  000C18  EF10  F006         	goto	u10630
  8835  000C1C                     u10631:
  8836  000C1C  EF68  F009         	goto	l1354
  8837  000C20                     u10630:
  8838  000C20                     l7912:
  8839                           
  8840                           ; BSR set to: 0
  8841  000C20  517D               	movf	strtof@i& (0+255),w,b
  8842  000C22  6F6D               	movwf	??_strtof& (0+255),b
  8843  000C24  6B6E               	clrf	(??_strtof+1)& (0+255),b
  8844  000C26  0E01               	movlw	1
  8845  000C28  276D               	addwf	??_strtof& (0+255),f,b
  8846  000C2A  0E00               	movlw	0
  8847  000C2C  236E               	addwfc	(??_strtof+1)& (0+255),f,b
  8848  000C2E  516D               	movf	??_strtof& (0+255),w,b
  8849  000C30  2652               	addwf	strtof@s^0,f,c
  8850  000C32  516E               	movf	(??_strtof+1)& (0+255),w,b
  8851  000C34  2253               	addwfc	(strtof@s+1)^0,f,c
  8852  000C36                     
  8853                           ; BSR set to: 0
  8854  000C36  0E00               	movlw	0
  8855  000C38  6F7D               	movwf	strtof@i& (0+255),b
  8856  000C3A  EF20  F006         	goto	l7918
  8857  000C3E                     l7916:
  8858                           
  8859                           ; BSR set to: 0
  8860  000C3E  2B7D               	incf	strtof@i& (0+255),f,b
  8861  000C40                     l7918:
  8862                           
  8863                           ; BSR set to: 0
  8864  000C40  517D               	movf	strtof@i& (0+255),w,b
  8865  000C42  2452               	addwf	strtof@s^0,w,c
  8866  000C44  6ED9               	movwf	fsr2l,c
  8867  000C46  0E00               	movlw	0
  8868  000C48  2053               	addwfc	(strtof@s+1)^0,w,c
  8869  000C4A  6EDA               	movwf	fsr2h,c
  8870  000C4C  0E30               	movlw	48
  8871  000C4E  18DE               	xorwf	postinc2,w,c
  8872  000C50  B4D8               	btfsc	status,2,c
  8873  000C52  EF2D  F006         	goto	u10641
  8874  000C56  EF2F  F006         	goto	u10640
  8875  000C5A                     u10641:
  8876  000C5A  EF1F  F006         	goto	l7916
  8877  000C5E                     u10640:
  8878  000C5E                     
  8879                           ; BSR set to: 0
  8880  000C5E  0E00               	movlw	0
  8881  000C60  6F7D               	movwf	strtof@i& (0+255),b
  8882  000C62                     l7922:
  8883                           
  8884                           ; BSR set to: 0
  8885  000C62  517D               	movf	strtof@i& (0+255),w,b
  8886  000C64  2452               	addwf	strtof@s^0,w,c
  8887  000C66  6ED9               	movwf	fsr2l,c
  8888  000C68  0E00               	movlw	0
  8889  000C6A  2053               	addwfc	(strtof@s+1)^0,w,c
  8890  000C6C  6EDA               	movwf	fsr2h,c
  8891  000C6E  0E70               	movlw	112
  8892  000C70  18DE               	xorwf	postinc2,w,c
  8893  000C72  B4D8               	btfsc	status,2,c
  8894  000C74  EF3E  F006         	goto	u10651
  8895  000C78  EF40  F006         	goto	u10650
  8896  000C7C                     u10651:
  8897  000C7C  EFB7  F007         	goto	l7992
  8898  000C80                     u10650:
  8899  000C80                     
  8900                           ; BSR set to: 0
  8901  000C80  517D               	movf	strtof@i& (0+255),w,b
  8902  000C82  2452               	addwf	strtof@s^0,w,c
  8903  000C84  6ED9               	movwf	fsr2l,c
  8904  000C86  0E00               	movlw	0
  8905  000C88  2053               	addwfc	(strtof@s+1)^0,w,c
  8906  000C8A  6EDA               	movwf	fsr2h,c
  8907  000C8C  0E50               	movlw	80
  8908  000C8E  18DE               	xorwf	postinc2,w,c
  8909  000C90  A4D8               	btfss	status,2,c
  8910  000C92  EF4D  F006         	goto	u10661
  8911  000C96  EF4F  F006         	goto	u10660
  8912  000C9A                     u10661:
  8913  000C9A  EF51  F006         	goto	l7928
  8914  000C9E                     u10660:
  8915  000C9E  EFB7  F007         	goto	l7992
  8916  000CA2                     l7928:
  8917                           
  8918                           ; BSR set to: 0
  8919  000CA2  517D               	movf	strtof@i& (0+255),w,b
  8920  000CA4  2452               	addwf	strtof@s^0,w,c
  8921  000CA6  6ED9               	movwf	fsr2l,c
  8922  000CA8  0E00               	movlw	0
  8923  000CAA  2053               	addwfc	(strtof@s+1)^0,w,c
  8924  000CAC  6EDA               	movwf	fsr2h,c
  8925  000CAE  0E2E               	movlw	46
  8926  000CB0  18DE               	xorwf	postinc2,w,c
  8927  000CB2  A4D8               	btfss	status,2,c
  8928  000CB4  EF5E  F006         	goto	u10671
  8929  000CB8  EF60  F006         	goto	u10670
  8930  000CBC                     u10671:
  8931  000CBC  EF64  F006         	goto	l7934
  8932  000CC0                     u10670:
  8933  000CC0                     
  8934                           ; BSR set to: 0
  8935  000CC0  8974               	bsf	strtof@flags& (0+255),4,b
  8936  000CC2  2B7D               	incf	strtof@i& (0+255),f,b
  8937  000CC4  EFB7  F007         	goto	l7992
  8938  000CC8                     l7934:
  8939                           
  8940                           ; BSR set to: 0
  8941  000CC8  517D               	movf	strtof@i& (0+255),w,b
  8942  000CCA  2452               	addwf	strtof@s^0,w,c
  8943  000CCC  6ED9               	movwf	fsr2l,c
  8944  000CCE  0E00               	movlw	0
  8945  000CD0  2053               	addwfc	(strtof@s+1)^0,w,c
  8946  000CD2  6EDA               	movwf	fsr2h,c
  8947  000CD4  50DF               	movf	indf2,w,c
  8948  000CD6  6F6D               	movwf	??_strtof& (0+255),b
  8949  000CD8  516D               	movf	??_strtof& (0+255),w,b
  8950  000CDA  6E09               	movwf	isxdigit@c^0,c
  8951  000CDC  6A0A               	clrf	(isxdigit@c+1)^0,c
  8952  000CDE  EC22  F02B         	call	_isxdigit	;wreg free
  8953  000CE2  5009               	movf	?_isxdigit^0,w,c
  8954  000CE4  100A               	iorwf	(?_isxdigit+1)^0,w,c
  8955  000CE6  B4D8               	btfsc	status,2,c
  8956  000CE8  EF78  F006         	goto	u10681
  8957  000CEC  EF7A  F006         	goto	u10680
  8958  000CF0                     u10681:
  8959  000CF0  EFEA  F006         	goto	l7954
  8960  000CF4                     u10680:
  8961  000CF4  0E00               	movlw	0
  8962  000CF6  0100               	movlb	0	; () banked
  8963  000CF8  6F73               	movwf	strtof@digit& (0+255),b
  8964  000CFA                     
  8965                           ; BSR set to: 0
  8966  000CFA  0ED0               	movlw	208
  8967  000CFC  6F6D               	movwf	??_strtof& (0+255),b
  8968  000CFE  0EFF               	movlw	255
  8969  000D00  6F6E               	movwf	(??_strtof+1)& (0+255),b
  8970  000D02  517D               	movf	strtof@i& (0+255),w,b
  8971  000D04  2452               	addwf	strtof@s^0,w,c
  8972  000D06  6ED9               	movwf	fsr2l,c
  8973  000D08  0E00               	movlw	0
  8974  000D0A  2053               	addwfc	(strtof@s+1)^0,w,c
  8975  000D0C  6EDA               	movwf	fsr2h,c
  8976  000D0E  50DF               	movf	indf2,w,c
  8977  000D10  6F6F               	movwf	(??_strtof+2)& (0+255),b
  8978  000D12  6B70               	clrf	(??_strtof+3)& (0+255),b
  8979  000D14  516D               	movf	??_strtof& (0+255),w,b
  8980  000D16  276F               	addwf	(??_strtof+2)& (0+255),f,b
  8981  000D18  516E               	movf	(??_strtof+1)& (0+255),w,b
  8982  000D1A  2370               	addwfc	(??_strtof+3)& (0+255),f,b
  8983  000D1C  5170               	movf	(??_strtof+3)& (0+255),w,b
  8984  000D1E  E107               	bnz	u10691
  8985  000D20  0E0A               	movlw	10
  8986  000D22  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
  8987  000D24  B0D8               	btfsc	status,0,c
  8988  000D26  EF97  F006         	goto	u10691
  8989  000D2A  EF99  F006         	goto	u10690
  8990  000D2E                     u10691:
  8991  000D2E  EFA4  F006         	goto	l7944
  8992  000D32                     u10690:
  8993  000D32                     
  8994                           ; BSR set to: 0
  8995  000D32  517D               	movf	strtof@i& (0+255),w,b
  8996  000D34  2452               	addwf	strtof@s^0,w,c
  8997  000D36  6ED9               	movwf	fsr2l,c
  8998  000D38  0E00               	movlw	0
  8999  000D3A  2053               	addwfc	(strtof@s+1)^0,w,c
  9000  000D3C  6EDA               	movwf	fsr2h,c
  9001  000D3E  50DF               	movf	indf2,w,c
  9002  000D40  0FD0               	addlw	208
  9003  000D42  6F73               	movwf	strtof@digit& (0+255),b
  9004  000D44  EFB5  F006         	goto	l7946
  9005  000D48                     l7944:
  9006                           
  9007                           ; BSR set to: 0
  9008  000D48  517D               	movf	strtof@i& (0+255),w,b
  9009  000D4A  2452               	addwf	strtof@s^0,w,c
  9010  000D4C  6ED9               	movwf	fsr2l,c
  9011  000D4E  0E00               	movlw	0
  9012  000D50  2053               	addwfc	(strtof@s+1)^0,w,c
  9013  000D52  6EDA               	movwf	fsr2h,c
  9014  000D54  50DF               	movf	indf2,w,c
  9015  000D56  6F6D               	movwf	??_strtof& (0+255),b
  9016  000D58  516D               	movf	??_strtof& (0+255),w,b
  9017  000D5A  6E09               	movwf	toupper@c^0,c
  9018  000D5C  6A0A               	clrf	(toupper@c+1)^0,c
  9019  000D5E  ECB9  F02D         	call	_toupper	;wreg free
  9020  000D62  5009               	movf	?_toupper^0,w,c
  9021  000D64  0FC9               	addlw	201
  9022  000D66  0100               	movlb	0	; () banked
  9023  000D68  6F73               	movwf	strtof@digit& (0+255),b
  9024  000D6A                     l7946:
  9025                           
  9026                           ; BSR set to: 0
  9027  000D6A  BF78               	btfsc	(strtof@eexp+1)& (0+255),7,b
  9028  000D6C  EFC3  F006         	goto	u10700
  9029  000D70  5178               	movf	(strtof@eexp+1)& (0+255),w,b
  9030  000D72  E107               	bnz	u10701
  9031  000D74  0E08               	movlw	8
  9032  000D76  5D77               	subwf	strtof@eexp& (0+255),w,b
  9033  000D78  B0D8               	btfsc	status,0,c
  9034  000D7A  EFC1  F006         	goto	u10701
  9035  000D7E  EFC3  F006         	goto	u10700
  9036  000D82                     u10701:
  9037  000D82  EFE2  F006         	goto	l7950
  9038  000D86                     u10700:
  9039  000D86                     
  9040                           ; BSR set to: 0
  9041  000D86  5177               	movf	strtof@eexp& (0+255),w,b
  9042  000D88  0807               	sublw	7
  9043  000D8A  6F6D               	movwf	??_strtof& (0+255),b
  9044  000D8C  90D8               	bcf	status,0,c
  9045  000D8E  376D               	rlcf	??_strtof& (0+255),f,b
  9046  000D90  90D8               	bcf	status,0,c
  9047  000D92  376D               	rlcf	??_strtof& (0+255),f,b
  9048  000D94  C073  F06E         	movff	strtof@digit,??_strtof+1
  9049  000D98  6B6F               	clrf	(??_strtof+2)& (0+255),b
  9050  000D9A  6B70               	clrf	(??_strtof+3)& (0+255),b
  9051  000D9C  6B71               	clrf	(??_strtof+4)& (0+255),b
  9052  000D9E  2B6D               	incf	??_strtof& (0+255),f,b
  9053  000DA0  EFD7  F006         	goto	u10710
  9054  000DA4                     u10715:
  9055  000DA4  90D8               	bcf	status,0,c
  9056  000DA6  376E               	rlcf	(??_strtof+1)& (0+255),f,b
  9057  000DA8  376F               	rlcf	(??_strtof+2)& (0+255),f,b
  9058  000DAA  3770               	rlcf	(??_strtof+3)& (0+255),f,b
  9059  000DAC  3771               	rlcf	(??_strtof+4)& (0+255),f,b
  9060  000DAE                     u10710:
  9061  000DAE  2F6D               	decfsz	??_strtof& (0+255),f,b
  9062  000DB0  EFD2  F006         	goto	u10715
  9063  000DB4  516E               	movf	(??_strtof+1)& (0+255),w,b
  9064  000DB6  1379               	iorwf	strtof@_u& (0+255),f,b
  9065  000DB8  516F               	movf	(??_strtof+2)& (0+255),w,b
  9066  000DBA  137A               	iorwf	(strtof@_u+1)& (0+255),f,b
  9067  000DBC  5170               	movf	(??_strtof+3)& (0+255),w,b
  9068  000DBE  137B               	iorwf	(strtof@_u+2)& (0+255),f,b
  9069  000DC0  5171               	movf	(??_strtof+4)& (0+255),w,b
  9070  000DC2  137C               	iorwf	(strtof@_u+3)& (0+255),f,b
  9071  000DC4                     l7950:
  9072                           
  9073                           ; BSR set to: 0
  9074  000DC4  4B77               	infsnz	strtof@eexp& (0+255),f,b
  9075  000DC6  2B78               	incf	(strtof@eexp+1)& (0+255),f,b
  9076  000DC8                     
  9077                           ; BSR set to: 0
  9078  000DC8  0E04               	movlw	4
  9079  000DCA  2775               	addwf	strtof@expon& (0+255),f,b
  9080  000DCC  0E00               	movlw	0
  9081  000DCE  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
  9082  000DD0  EFF4  F006         	goto	l7958
  9083  000DD4                     l7954:
  9084  000DD4  0E00               	movlw	0
  9085  000DD6  6E52               	movwf	?_strtof^0,c
  9086  000DD8  0E00               	movlw	0
  9087  000DDA  6E53               	movwf	(?_strtof+1)^0,c
  9088  000DDC  0E00               	movlw	0
  9089  000DDE  6E54               	movwf	(?_strtof+2)^0,c
  9090  000DE0  0E00               	movlw	0
  9091  000DE2  6E55               	movwf	(?_strtof+3)^0,c
  9092  000DE4  EF79  F00C         	goto	l1313
  9093  000DE8                     l7958:
  9094                           
  9095                           ; BSR set to: 0
  9096  000DE8  2B7D               	incf	strtof@i& (0+255),f,b
  9097  000DEA  EF31  F006         	goto	l7922
  9098  000DEE                     l7960:
  9099                           
  9100                           ; BSR set to: 0
  9101  000DEE  517D               	movf	strtof@i& (0+255),w,b
  9102  000DF0  2452               	addwf	strtof@s^0,w,c
  9103  000DF2  6ED9               	movwf	fsr2l,c
  9104  000DF4  0E00               	movlw	0
  9105  000DF6  2053               	addwfc	(strtof@s+1)^0,w,c
  9106  000DF8  6EDA               	movwf	fsr2h,c
  9107  000DFA  0E70               	movlw	112
  9108  000DFC  18DE               	xorwf	postinc2,w,c
  9109  000DFE  B4D8               	btfsc	status,2,c
  9110  000E00  EF04  F007         	goto	u10721
  9111  000E04  EF06  F007         	goto	u10720
  9112  000E08                     u10721:
  9113  000E08  EFBE  F007         	goto	l7994
  9114  000E0C                     u10720:
  9115  000E0C                     
  9116                           ; BSR set to: 0
  9117  000E0C  517D               	movf	strtof@i& (0+255),w,b
  9118  000E0E  2452               	addwf	strtof@s^0,w,c
  9119  000E10  6ED9               	movwf	fsr2l,c
  9120  000E12  0E00               	movlw	0
  9121  000E14  2053               	addwfc	(strtof@s+1)^0,w,c
  9122  000E16  6EDA               	movwf	fsr2h,c
  9123  000E18  0E50               	movlw	80
  9124  000E1A  18DE               	xorwf	postinc2,w,c
  9125  000E1C  A4D8               	btfss	status,2,c
  9126  000E1E  EF13  F007         	goto	u10731
  9127  000E22  EF15  F007         	goto	u10730
  9128  000E26                     u10731:
  9129  000E26  EF17  F007         	goto	l7966
  9130  000E2A                     u10730:
  9131  000E2A  EFBE  F007         	goto	l7994
  9132  000E2E                     l7966:
  9133                           
  9134                           ; BSR set to: 0
  9135  000E2E  517D               	movf	strtof@i& (0+255),w,b
  9136  000E30  2452               	addwf	strtof@s^0,w,c
  9137  000E32  6ED9               	movwf	fsr2l,c
  9138  000E34  0E00               	movlw	0
  9139  000E36  2053               	addwfc	(strtof@s+1)^0,w,c
  9140  000E38  6EDA               	movwf	fsr2h,c
  9141  000E3A  0E30               	movlw	48
  9142  000E3C  18DE               	xorwf	postinc2,w,c
  9143  000E3E  A4D8               	btfss	status,2,c
  9144  000E40  EF24  F007         	goto	u10741
  9145  000E44  EF26  F007         	goto	u10740
  9146  000E48                     u10741:
  9147  000E48  EF35  F007         	goto	l7972
  9148  000E4C                     u10740:
  9149  000E4C                     
  9150                           ; BSR set to: 0
  9151  000E4C  5177               	movf	strtof@eexp& (0+255),w,b
  9152  000E4E  1178               	iorwf	(strtof@eexp+1)& (0+255),w,b
  9153  000E50  A4D8               	btfss	status,2,c
  9154  000E52  EF2D  F007         	goto	u10751
  9155  000E56  EF2F  F007         	goto	u10750
  9156  000E5A                     u10751:
  9157  000E5A  EF35  F007         	goto	l7972
  9158  000E5E                     u10750:
  9159  000E5E                     
  9160                           ; BSR set to: 0
  9161  000E5E  0EFC               	movlw	252
  9162  000E60  2775               	addwf	strtof@expon& (0+255),f,b
  9163  000E62  0EFF               	movlw	255
  9164  000E64  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
  9165  000E66  EFB5  F007         	goto	l7990
  9166  000E6A                     l7972:
  9167                           
  9168                           ; BSR set to: 0
  9169  000E6A  517D               	movf	strtof@i& (0+255),w,b
  9170  000E6C  2452               	addwf	strtof@s^0,w,c
  9171  000E6E  6ED9               	movwf	fsr2l,c
  9172  000E70  0E00               	movlw	0
  9173  000E72  2053               	addwfc	(strtof@s+1)^0,w,c
  9174  000E74  6EDA               	movwf	fsr2h,c
  9175  000E76  50DF               	movf	indf2,w,c
  9176  000E78  6F6D               	movwf	??_strtof& (0+255),b
  9177  000E7A  516D               	movf	??_strtof& (0+255),w,b
  9178  000E7C  6E09               	movwf	isxdigit@c^0,c
  9179  000E7E  6A0A               	clrf	(isxdigit@c+1)^0,c
  9180  000E80  EC22  F02B         	call	_isxdigit	;wreg free
  9181  000E84  5009               	movf	?_isxdigit^0,w,c
  9182  000E86  100A               	iorwf	(?_isxdigit+1)^0,w,c
  9183  000E88  B4D8               	btfsc	status,2,c
  9184  000E8A  EF49  F007         	goto	u10761
  9185  000E8E  EF4B  F007         	goto	u10760
  9186  000E92                     u10761:
  9187  000E92  EFB5  F007         	goto	l7990
  9188  000E96                     u10760:
  9189  000E96  0E00               	movlw	0
  9190  000E98  0100               	movlb	0	; () banked
  9191  000E9A  6F73               	movwf	strtof@digit& (0+255),b
  9192  000E9C                     
  9193                           ; BSR set to: 0
  9194  000E9C  0ED0               	movlw	208
  9195  000E9E  6F6D               	movwf	??_strtof& (0+255),b
  9196  000EA0  0EFF               	movlw	255
  9197  000EA2  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9198  000EA4  517D               	movf	strtof@i& (0+255),w,b
  9199  000EA6  2452               	addwf	strtof@s^0,w,c
  9200  000EA8  6ED9               	movwf	fsr2l,c
  9201  000EAA  0E00               	movlw	0
  9202  000EAC  2053               	addwfc	(strtof@s+1)^0,w,c
  9203  000EAE  6EDA               	movwf	fsr2h,c
  9204  000EB0  50DF               	movf	indf2,w,c
  9205  000EB2  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9206  000EB4  6B70               	clrf	(??_strtof+3)& (0+255),b
  9207  000EB6  516D               	movf	??_strtof& (0+255),w,b
  9208  000EB8  276F               	addwf	(??_strtof+2)& (0+255),f,b
  9209  000EBA  516E               	movf	(??_strtof+1)& (0+255),w,b
  9210  000EBC  2370               	addwfc	(??_strtof+3)& (0+255),f,b
  9211  000EBE  5170               	movf	(??_strtof+3)& (0+255),w,b
  9212  000EC0  E107               	bnz	u10771
  9213  000EC2  0E0A               	movlw	10
  9214  000EC4  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
  9215  000EC6  B0D8               	btfsc	status,0,c
  9216  000EC8  EF68  F007         	goto	u10771
  9217  000ECC  EF6A  F007         	goto	u10770
  9218  000ED0                     u10771:
  9219  000ED0  EF75  F007         	goto	l7982
  9220  000ED4                     u10770:
  9221  000ED4                     
  9222                           ; BSR set to: 0
  9223  000ED4  517D               	movf	strtof@i& (0+255),w,b
  9224  000ED6  2452               	addwf	strtof@s^0,w,c
  9225  000ED8  6ED9               	movwf	fsr2l,c
  9226  000EDA  0E00               	movlw	0
  9227  000EDC  2053               	addwfc	(strtof@s+1)^0,w,c
  9228  000EDE  6EDA               	movwf	fsr2h,c
  9229  000EE0  50DF               	movf	indf2,w,c
  9230  000EE2  0FD0               	addlw	208
  9231  000EE4  6F73               	movwf	strtof@digit& (0+255),b
  9232  000EE6  EF86  F007         	goto	l7984
  9233  000EEA                     l7982:
  9234                           
  9235                           ; BSR set to: 0
  9236  000EEA  517D               	movf	strtof@i& (0+255),w,b
  9237  000EEC  2452               	addwf	strtof@s^0,w,c
  9238  000EEE  6ED9               	movwf	fsr2l,c
  9239  000EF0  0E00               	movlw	0
  9240  000EF2  2053               	addwfc	(strtof@s+1)^0,w,c
  9241  000EF4  6EDA               	movwf	fsr2h,c
  9242  000EF6  50DF               	movf	indf2,w,c
  9243  000EF8  6F6D               	movwf	??_strtof& (0+255),b
  9244  000EFA  516D               	movf	??_strtof& (0+255),w,b
  9245  000EFC  6E09               	movwf	toupper@c^0,c
  9246  000EFE  6A0A               	clrf	(toupper@c+1)^0,c
  9247  000F00  ECB9  F02D         	call	_toupper	;wreg free
  9248  000F04  5009               	movf	?_toupper^0,w,c
  9249  000F06  0FC9               	addlw	201
  9250  000F08  0100               	movlb	0	; () banked
  9251  000F0A  6F73               	movwf	strtof@digit& (0+255),b
  9252  000F0C                     l7984:
  9253                           
  9254                           ; BSR set to: 0
  9255  000F0C  BF78               	btfsc	(strtof@eexp+1)& (0+255),7,b
  9256  000F0E  EF94  F007         	goto	u10780
  9257  000F12  5178               	movf	(strtof@eexp+1)& (0+255),w,b
  9258  000F14  E107               	bnz	u10781
  9259  000F16  0E08               	movlw	8
  9260  000F18  5D77               	subwf	strtof@eexp& (0+255),w,b
  9261  000F1A  B0D8               	btfsc	status,0,c
  9262  000F1C  EF92  F007         	goto	u10781
  9263  000F20  EF94  F007         	goto	u10780
  9264  000F24                     u10781:
  9265  000F24  EFB3  F007         	goto	l7988
  9266  000F28                     u10780:
  9267  000F28                     
  9268                           ; BSR set to: 0
  9269  000F28  5177               	movf	strtof@eexp& (0+255),w,b
  9270  000F2A  0807               	sublw	7
  9271  000F2C  6F6D               	movwf	??_strtof& (0+255),b
  9272  000F2E  90D8               	bcf	status,0,c
  9273  000F30  376D               	rlcf	??_strtof& (0+255),f,b
  9274  000F32  90D8               	bcf	status,0,c
  9275  000F34  376D               	rlcf	??_strtof& (0+255),f,b
  9276  000F36  C073  F06E         	movff	strtof@digit,??_strtof+1
  9277  000F3A  6B6F               	clrf	(??_strtof+2)& (0+255),b
  9278  000F3C  6B70               	clrf	(??_strtof+3)& (0+255),b
  9279  000F3E  6B71               	clrf	(??_strtof+4)& (0+255),b
  9280  000F40  2B6D               	incf	??_strtof& (0+255),f,b
  9281  000F42  EFA8  F007         	goto	u10790
  9282  000F46                     u10795:
  9283  000F46  90D8               	bcf	status,0,c
  9284  000F48  376E               	rlcf	(??_strtof+1)& (0+255),f,b
  9285  000F4A  376F               	rlcf	(??_strtof+2)& (0+255),f,b
  9286  000F4C  3770               	rlcf	(??_strtof+3)& (0+255),f,b
  9287  000F4E  3771               	rlcf	(??_strtof+4)& (0+255),f,b
  9288  000F50                     u10790:
  9289  000F50  2F6D               	decfsz	??_strtof& (0+255),f,b
  9290  000F52  EFA3  F007         	goto	u10795
  9291  000F56  516E               	movf	(??_strtof+1)& (0+255),w,b
  9292  000F58  1379               	iorwf	strtof@_u& (0+255),f,b
  9293  000F5A  516F               	movf	(??_strtof+2)& (0+255),w,b
  9294  000F5C  137A               	iorwf	(strtof@_u+1)& (0+255),f,b
  9295  000F5E  5170               	movf	(??_strtof+3)& (0+255),w,b
  9296  000F60  137B               	iorwf	(strtof@_u+2)& (0+255),f,b
  9297  000F62  5171               	movf	(??_strtof+4)& (0+255),w,b
  9298  000F64  137C               	iorwf	(strtof@_u+3)& (0+255),f,b
  9299  000F66                     l7988:
  9300                           
  9301                           ; BSR set to: 0
  9302  000F66  4B77               	infsnz	strtof@eexp& (0+255),f,b
  9303  000F68  2B78               	incf	(strtof@eexp+1)& (0+255),f,b
  9304  000F6A                     l7990:
  9305  000F6A  0100               	movlb	0	; () banked
  9306  000F6C  2B7D               	incf	strtof@i& (0+255),f,b
  9307  000F6E                     l7992:
  9308                           
  9309                           ; BSR set to: 0
  9310  000F6E  B974               	btfsc	strtof@flags& (0+255),4,b
  9311  000F70  EFBC  F007         	goto	u10801
  9312  000F74  EFBE  F007         	goto	u10800
  9313  000F78                     u10801:
  9314  000F78  EFF7  F006         	goto	l7960
  9315  000F7C                     u10800:
  9316  000F7C                     l7994:
  9317                           
  9318                           ; BSR set to: 0
  9319  000F7C  517D               	movf	strtof@i& (0+255),w,b
  9320  000F7E  2452               	addwf	strtof@s^0,w,c
  9321  000F80  6ED9               	movwf	fsr2l,c
  9322  000F82  0E00               	movlw	0
  9323  000F84  2053               	addwfc	(strtof@s+1)^0,w,c
  9324  000F86  6EDA               	movwf	fsr2h,c
  9325  000F88  0E70               	movlw	112
  9326  000F8A  18DE               	xorwf	postinc2,w,c
  9327  000F8C  B4D8               	btfsc	status,2,c
  9328  000F8E  EFCB  F007         	goto	u10811
  9329  000F92  EFCD  F007         	goto	u10810
  9330  000F96                     u10811:
  9331  000F96  EFE6  F007         	goto	l8002
  9332  000F9A                     u10810:
  9333  000F9A                     
  9334                           ; BSR set to: 0
  9335  000F9A  517D               	movf	strtof@i& (0+255),w,b
  9336  000F9C  2452               	addwf	strtof@s^0,w,c
  9337  000F9E  6ED9               	movwf	fsr2l,c
  9338  000FA0  0E00               	movlw	0
  9339  000FA2  2053               	addwfc	(strtof@s+1)^0,w,c
  9340  000FA4  6EDA               	movwf	fsr2h,c
  9341  000FA6  0E50               	movlw	80
  9342  000FA8  18DE               	xorwf	postinc2,w,c
  9343  000FAA  B4D8               	btfsc	status,2,c
  9344  000FAC  EFDA  F007         	goto	u10821
  9345  000FB0  EFDC  F007         	goto	u10820
  9346  000FB4                     u10821:
  9347  000FB4  EFE6  F007         	goto	l8002
  9348  000FB8                     u10820:
  9349  000FB8                     
  9350                           ; BSR set to: 0
  9351  000FB8  0E00               	movlw	0
  9352  000FBA  6E52               	movwf	?_strtof^0,c
  9353  000FBC  0E00               	movlw	0
  9354  000FBE  6E53               	movwf	(?_strtof+1)^0,c
  9355  000FC0  0E00               	movlw	0
  9356  000FC2  6E54               	movwf	(?_strtof+2)^0,c
  9357  000FC4  0E00               	movlw	0
  9358  000FC6  6E55               	movwf	(?_strtof+3)^0,c
  9359  000FC8  EF79  F00C         	goto	l1313
  9360  000FCC                     l8002:
  9361                           
  9362                           ; BSR set to: 0
  9363  000FCC  2B7D               	incf	strtof@i& (0+255),f,b
  9364  000FCE                     
  9365                           ; BSR set to: 0
  9366  000FCE  517D               	movf	strtof@i& (0+255),w,b
  9367  000FD0  2452               	addwf	strtof@s^0,w,c
  9368  000FD2  6ED9               	movwf	fsr2l,c
  9369  000FD4  0E00               	movlw	0
  9370  000FD6  2053               	addwfc	(strtof@s+1)^0,w,c
  9371  000FD8  6EDA               	movwf	fsr2h,c
  9372  000FDA  0E2B               	movlw	43
  9373  000FDC  18DE               	xorwf	postinc2,w,c
  9374  000FDE  A4D8               	btfss	status,2,c
  9375  000FE0  EFF4  F007         	goto	u10831
  9376  000FE4  EFF6  F007         	goto	u10830
  9377  000FE8                     u10831:
  9378  000FE8  EFF9  F007         	goto	l8008
  9379  000FEC                     u10830:
  9380  000FEC                     
  9381                           ; BSR set to: 0
  9382  000FEC  2B7D               	incf	strtof@i& (0+255),f,b
  9383  000FEE  EF0A  F008         	goto	l8012
  9384  000FF2                     l8008:
  9385                           
  9386                           ; BSR set to: 0
  9387  000FF2  517D               	movf	strtof@i& (0+255),w,b
  9388  000FF4  2452               	addwf	strtof@s^0,w,c
  9389  000FF6  6ED9               	movwf	fsr2l,c
  9390  000FF8  0E00               	movlw	0
  9391  000FFA  2053               	addwfc	(strtof@s+1)^0,w,c
  9392  000FFC  6EDA               	movwf	fsr2h,c
  9393  000FFE  0E2D               	movlw	45
  9394  001000  18DE               	xorwf	postinc2,w,c
  9395  001002  A4D8               	btfss	status,2,c
  9396  001004  EF06  F008         	goto	u10841
  9397  001008  EF08  F008         	goto	u10840
  9398  00100C                     u10841:
  9399  00100C  EF0A  F008         	goto	l8012
  9400  001010                     u10840:
  9401  001010                     
  9402                           ; BSR set to: 0
  9403  001010  8774               	bsf	strtof@flags& (0+255),3,b
  9404  001012  2B7D               	incf	strtof@i& (0+255),f,b
  9405  001014                     l8012:
  9406                           
  9407                           ; BSR set to: 0
  9408  001014  517D               	movf	strtof@i& (0+255),w,b
  9409  001016  2652               	addwf	strtof@s^0,f,c
  9410  001018  0E00               	movlw	0
  9411  00101A  2253               	addwfc	(strtof@s+1)^0,f,c
  9412  00101C                     
  9413                           ; BSR set to: 0
  9414  00101C  0E00               	movlw	0
  9415  00101E  6F7D               	movwf	strtof@i& (0+255),b
  9416  001020  EF13  F008         	goto	l8018
  9417  001024                     l8016:
  9418                           
  9419                           ; BSR set to: 0
  9420  001024  2B7D               	incf	strtof@i& (0+255),f,b
  9421  001026                     l8018:
  9422                           
  9423                           ; BSR set to: 0
  9424  001026  517D               	movf	strtof@i& (0+255),w,b
  9425  001028  2452               	addwf	strtof@s^0,w,c
  9426  00102A  6ED9               	movwf	fsr2l,c
  9427  00102C  0E00               	movlw	0
  9428  00102E  2053               	addwfc	(strtof@s+1)^0,w,c
  9429  001030  6EDA               	movwf	fsr2h,c
  9430  001032  0E30               	movlw	48
  9431  001034  18DE               	xorwf	postinc2,w,c
  9432  001036  B4D8               	btfsc	status,2,c
  9433  001038  EF20  F008         	goto	u10851
  9434  00103C  EF22  F008         	goto	u10850
  9435  001040                     u10851:
  9436  001040  EF12  F008         	goto	l8016
  9437  001044                     u10850:
  9438  001044                     
  9439                           ; BSR set to: 0
  9440  001044  0E00               	movlw	0
  9441  001046  6F78               	movwf	(strtof@eexp+1)& (0+255),b
  9442  001048  0E00               	movlw	0
  9443  00104A  6F77               	movwf	strtof@eexp& (0+255),b
  9444  00104C  EF55  F008         	goto	l8032
  9445  001050                     l8022:
  9446                           
  9447                           ; BSR set to: 0
  9448  001050  517D               	movf	strtof@i& (0+255),w,b
  9449  001052  B4D8               	btfsc	status,2,c
  9450  001054  EF2E  F008         	goto	u10861
  9451  001058  EF30  F008         	goto	u10860
  9452  00105C                     u10861:
  9453  00105C  EF3E  F008         	goto	l8026
  9454  001060                     u10860:
  9455  001060                     
  9456                           ; BSR set to: 0
  9457  001060  C077  F003         	movff	strtof@eexp,___wmul@multiplier
  9458  001064  C078  F004         	movff	strtof@eexp+1,___wmul@multiplier+1
  9459  001068  0E00               	movlw	0
  9460  00106A  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  9461  00106C  0E0A               	movlw	10
  9462  00106E  6E05               	movwf	___wmul@multiplicand^0,c
  9463  001070  ECCA  F02E         	call	___wmul	;wreg free
  9464  001074  C003  F077         	movff	?___wmul,strtof@eexp
  9465  001078  C004  F078         	movff	?___wmul+1,strtof@eexp+1
  9466  00107C                     l8026:
  9467  00107C  0ED0               	movlw	208
  9468  00107E  0100               	movlb	0	; () banked
  9469  001080  6F6D               	movwf	??_strtof& (0+255),b
  9470  001082  0EFF               	movlw	255
  9471  001084  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9472  001086  517D               	movf	strtof@i& (0+255),w,b
  9473  001088  2452               	addwf	strtof@s^0,w,c
  9474  00108A  6ED9               	movwf	fsr2l,c
  9475  00108C  0E00               	movlw	0
  9476  00108E  2053               	addwfc	(strtof@s+1)^0,w,c
  9477  001090  6EDA               	movwf	fsr2h,c
  9478  001092  50DF               	movf	indf2,w,c
  9479  001094  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9480  001096  6B70               	clrf	(??_strtof+3)& (0+255),b
  9481  001098  516D               	movf	??_strtof& (0+255),w,b
  9482  00109A  276F               	addwf	(??_strtof+2)& (0+255),f,b
  9483  00109C  516E               	movf	(??_strtof+1)& (0+255),w,b
  9484  00109E  2370               	addwfc	(??_strtof+3)& (0+255),f,b
  9485  0010A0  516F               	movf	(??_strtof+2)& (0+255),w,b
  9486  0010A2  2777               	addwf	strtof@eexp& (0+255),f,b
  9487  0010A4  5170               	movf	(??_strtof+3)& (0+255),w,b
  9488  0010A6  2378               	addwfc	(strtof@eexp+1)& (0+255),f,b
  9489  0010A8                     
  9490                           ; BSR set to: 0
  9491  0010A8  2B7D               	incf	strtof@i& (0+255),f,b
  9492  0010AA                     l8032:
  9493                           
  9494                           ; BSR set to: 0
  9495  0010AA  0ED0               	movlw	208
  9496  0010AC  6F6D               	movwf	??_strtof& (0+255),b
  9497  0010AE  0EFF               	movlw	255
  9498  0010B0  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9499  0010B2  517D               	movf	strtof@i& (0+255),w,b
  9500  0010B4  2452               	addwf	strtof@s^0,w,c
  9501  0010B6  6ED9               	movwf	fsr2l,c
  9502  0010B8  0E00               	movlw	0
  9503  0010BA  2053               	addwfc	(strtof@s+1)^0,w,c
  9504  0010BC  6EDA               	movwf	fsr2h,c
  9505  0010BE  50DF               	movf	indf2,w,c
  9506  0010C0  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9507  0010C2  6B70               	clrf	(??_strtof+3)& (0+255),b
  9508  0010C4  516D               	movf	??_strtof& (0+255),w,b
  9509  0010C6  276F               	addwf	(??_strtof+2)& (0+255),f,b
  9510  0010C8  516E               	movf	(??_strtof+1)& (0+255),w,b
  9511  0010CA  2370               	addwfc	(??_strtof+3)& (0+255),f,b
  9512  0010CC  5170               	movf	(??_strtof+3)& (0+255),w,b
  9513  0010CE  E109               	bnz	u10870
  9514  0010D0  0E0A               	movlw	10
  9515  0010D2  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
  9516  0010D4  A0D8               	btfss	status,0,c
  9517  0010D6  EF6F  F008         	goto	u10871
  9518  0010DA  EF71  F008         	goto	u10870
  9519  0010DE                     u10871:
  9520  0010DE  EF28  F008         	goto	l8022
  9521  0010E2                     u10870:
  9522  0010E2                     
  9523                           ; BSR set to: 0
  9524  0010E2  517D               	movf	strtof@i& (0+255),w,b
  9525  0010E4  A4D8               	btfss	status,2,c
  9526  0010E6  EF77  F008         	goto	u10881
  9527  0010EA  EF79  F008         	goto	u10880
  9528  0010EE                     u10881:
  9529  0010EE  EF83  F008         	goto	l1343
  9530  0010F2                     u10880:
  9531  0010F2                     
  9532                           ; BSR set to: 0
  9533  0010F2  0E00               	movlw	0
  9534  0010F4  6E52               	movwf	?_strtof^0,c
  9535  0010F6  0E00               	movlw	0
  9536  0010F8  6E53               	movwf	(?_strtof+1)^0,c
  9537  0010FA  0E00               	movlw	0
  9538  0010FC  6E54               	movwf	(?_strtof+2)^0,c
  9539  0010FE  0E00               	movlw	0
  9540  001100  6E55               	movwf	(?_strtof+3)^0,c
  9541  001102  EF79  F00C         	goto	l1313
  9542  001106                     l1343:
  9543                           
  9544                           ; BSR set to: 0
  9545  001106  A774               	btfss	strtof@flags& (0+255),3,b
  9546  001108  EF88  F008         	goto	u10891
  9547  00110C  EF8A  F008         	goto	u10890
  9548  001110                     u10891:
  9549  001110  EF8E  F008         	goto	l8042
  9550  001114                     u10890:
  9551  001114                     
  9552                           ; BSR set to: 0
  9553  001114  6D77               	negf	strtof@eexp& (0+255),b
  9554  001116  1F78               	comf	(strtof@eexp+1)& (0+255),f,b
  9555  001118  B0D8               	btfsc	status,0,c
  9556  00111A  2B78               	incf	(strtof@eexp+1)& (0+255),f,b
  9557  00111C                     l8042:
  9558                           
  9559                           ; BSR set to: 0
  9560  00111C  5177               	movf	strtof@eexp& (0+255),w,b
  9561  00111E  2775               	addwf	strtof@expon& (0+255),f,b
  9562  001120  5178               	movf	(strtof@eexp+1)& (0+255),w,b
  9563  001122  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
  9564  001124                     
  9565                           ; BSR set to: 0
  9566  001124  5054               	movf	strtof@res^0,w,c
  9567  001126  1055               	iorwf	(strtof@res+1)^0,w,c
  9568  001128  B4D8               	btfsc	status,2,c
  9569  00112A  EF99  F008         	goto	u10901
  9570  00112E  EF9B  F008         	goto	u10900
  9571  001132                     u10901:
  9572  001132  EFA9  F008         	goto	l8048
  9573  001136                     u10900:
  9574  001136                     
  9575                           ; BSR set to: 0
  9576  001136  517D               	movf	strtof@i& (0+255),w,b
  9577  001138  2452               	addwf	strtof@s^0,w,c
  9578  00113A  6F6D               	movwf	??_strtof& (0+255),b
  9579  00113C  0E00               	movlw	0
  9580  00113E  2053               	addwfc	(strtof@s+1)^0,w,c
  9581  001140  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9582  001142  C054  FFD9         	movff	strtof@res,fsr2l
  9583  001146  C055  FFDA         	movff	strtof@res+1,fsr2h
  9584  00114A  C06D  FFDE         	movff	??_strtof,postinc2
  9585  00114E  C06E  FFDD         	movff	??_strtof+1,postdec2
  9586  001152                     l8048:
  9587                           
  9588                           ; BSR set to: 0
  9589  001152  5179               	movf	strtof@_u& (0+255),w,b
  9590  001154  117A               	iorwf	(strtof@_u+1)& (0+255),w,b
  9591  001156  117B               	iorwf	(strtof@_u+2)& (0+255),w,b
  9592  001158  117C               	iorwf	(strtof@_u+3)& (0+255),w,b
  9593  00115A  A4D8               	btfss	status,2,c
  9594  00115C  EFB2  F008         	goto	u10911
  9595  001160  EFB4  F008         	goto	u10910
  9596  001164                     u10911:
  9597  001164  EFBE  F008         	goto	l8054
  9598  001168                     u10910:
  9599  001168                     
  9600                           ; BSR set to: 0
  9601  001168  0E00               	movlw	0
  9602  00116A  6E52               	movwf	?_strtof^0,c
  9603  00116C  0E00               	movlw	0
  9604  00116E  6E53               	movwf	(?_strtof+1)^0,c
  9605  001170  0E00               	movlw	0
  9606  001172  6E54               	movwf	(?_strtof+2)^0,c
  9607  001174  0E00               	movlw	0
  9608  001176  6E55               	movwf	(?_strtof+3)^0,c
  9609  001178  EF79  F00C         	goto	l1313
  9610  00117C                     l8054:
  9611                           
  9612                           ; BSR set to: 0
  9613  00117C  0EFF               	movlw	255
  9614  00117E  1579               	andwf	strtof@_u& (0+255),w,b
  9615  001180  6F6D               	movwf	??_strtof& (0+255),b
  9616  001182  0E00               	movlw	0
  9617  001184  157A               	andwf	(strtof@_u+1)& (0+255),w,b
  9618  001186  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9619  001188  0E00               	movlw	0
  9620  00118A  157B               	andwf	(strtof@_u+2)& (0+255),w,b
  9621  00118C  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9622  00118E  0E00               	movlw	0
  9623  001190  157C               	andwf	(strtof@_u+3)& (0+255),w,b
  9624  001192  6F70               	movwf	(??_strtof+3)& (0+255),b
  9625  001194  5170               	movf	(??_strtof+3)& (0+255),w,b
  9626  001196  116F               	iorwf	(??_strtof+2)& (0+255),w,b
  9627  001198  116E               	iorwf	(??_strtof+1)& (0+255),w,b
  9628  00119A  E109               	bnz	u10920
  9629  00119C  0E81               	movlw	129
  9630  00119E  5D6D               	subwf	??_strtof& (0+255),w,b
  9631  0011A0  A0D8               	btfss	status,0,c
  9632  0011A2  EFD5  F008         	goto	u10921
  9633  0011A6  EFD7  F008         	goto	u10920
  9634  0011AA                     u10921:
  9635  0011AA  EFE9  F008         	goto	l8060
  9636  0011AE                     u10920:
  9637  0011AE                     
  9638                           ; BSR set to: 0
  9639  0011AE  0E00               	movlw	0
  9640  0011B0  2779               	addwf	strtof@_u& (0+255),f,b
  9641  0011B2  0E01               	movlw	1
  9642  0011B4  237A               	addwfc	(strtof@_u+1)& (0+255),f,b
  9643  0011B6  0E00               	movlw	0
  9644  0011B8  237B               	addwfc	(strtof@_u+2)& (0+255),f,b
  9645  0011BA  0E00               	movlw	0
  9646  0011BC  237C               	addwfc	(strtof@_u+3)& (0+255),f,b
  9647  0011BE  EFE9  F008         	goto	l8060
  9648  0011C2                     l8058:
  9649                           
  9650                           ; BSR set to: 0
  9651  0011C2  90D8               	bcf	status,0,c
  9652  0011C4  3779               	rlcf	strtof@_u& (0+255),f,b
  9653  0011C6  377A               	rlcf	(strtof@_u+1)& (0+255),f,b
  9654  0011C8  377B               	rlcf	(strtof@_u+2)& (0+255),f,b
  9655  0011CA  377C               	rlcf	(strtof@_u+3)& (0+255),f,b
  9656  0011CC  0775               	decf	strtof@expon& (0+255),f,b
  9657  0011CE  A0D8               	btfss	status,0,c
  9658  0011D0  0776               	decf	(strtof@expon+1)& (0+255),f,b
  9659  0011D2                     l8060:
  9660                           
  9661                           ; BSR set to: 0
  9662  0011D2  AF7C               	btfss	(strtof@_u+3)& (0+255),7,b
  9663  0011D4  EFEE  F008         	goto	u10931
  9664  0011D8  EFF0  F008         	goto	u10930
  9665  0011DC                     u10931:
  9666  0011DC  EFE1  F008         	goto	l8058
  9667  0011E0                     u10930:
  9668  0011E0                     
  9669                           ; BSR set to: 0
  9670  0011E0  AF76               	btfss	(strtof@expon+1)& (0+255),7,b
  9671  0011E2  EFFC  F008         	goto	u10941
  9672  0011E6  0E83               	movlw	131
  9673  0011E8  5D75               	subwf	strtof@expon& (0+255),w,b
  9674  0011EA  0EFF               	movlw	255
  9675  0011EC  5976               	subwfb	(strtof@expon+1)& (0+255),w,b
  9676  0011EE  B0D8               	btfsc	status,0,c
  9677  0011F0  EFFC  F008         	goto	u10941
  9678  0011F4  EFFE  F008         	goto	u10940
  9679  0011F8                     u10941:
  9680  0011F8  EF0A  F009         	goto	l8066
  9681  0011FC                     u10940:
  9682  0011FC                     
  9683                           ; BSR set to: 0
  9684  0011FC  0EFF               	movlw	255
  9685  0011FE  6F76               	movwf	(strtof@expon+1)& (0+255),b
  9686  001200  0E81               	movlw	129
  9687  001202  6F75               	movwf	strtof@expon& (0+255),b
  9688  001204  0E00               	movlw	0
  9689  001206  6F79               	movwf	strtof@_u& (0+255),b
  9690  001208  0E00               	movlw	0
  9691  00120A  6F7A               	movwf	(strtof@_u+1)& (0+255),b
  9692  00120C  0E00               	movlw	0
  9693  00120E  6F7B               	movwf	(strtof@_u+2)& (0+255),b
  9694  001210  0E00               	movlw	0
  9695  001212  6F7C               	movwf	(strtof@_u+3)& (0+255),b
  9696  001214                     l8066:
  9697                           
  9698                           ; BSR set to: 0
  9699  001214  0E81               	movlw	129
  9700  001216  1975               	xorwf	strtof@expon& (0+255),w,b
  9701  001218  E108               	bnz	u10950
  9702  00121A  2976               	incf	(strtof@expon+1)& (0+255),w,b
  9703  00121C  B4D8               	btfsc	status,2,c
  9704  00121E  EF13  F009         	goto	u10951
  9705  001222  EF15  F009         	goto	u10950
  9706  001226                     u10951:
  9707  001226  EF1D  F009         	goto	l8070
  9708  00122A                     u10950:
  9709  00122A                     
  9710                           ; BSR set to: 0
  9711  00122A  90D8               	bcf	status,0,c
  9712  00122C  3779               	rlcf	strtof@_u& (0+255),f,b
  9713  00122E  377A               	rlcf	(strtof@_u+1)& (0+255),f,b
  9714  001230  377B               	rlcf	(strtof@_u+2)& (0+255),f,b
  9715  001232  377C               	rlcf	(strtof@_u+3)& (0+255),f,b
  9716  001234  0775               	decf	strtof@expon& (0+255),f,b
  9717  001236  A0D8               	btfss	status,0,c
  9718  001238  0776               	decf	(strtof@expon+1)& (0+255),f,b
  9719  00123A                     l8070:
  9720                           
  9721                           ; BSR set to: 0
  9722  00123A  BF76               	btfsc	(strtof@expon+1)& (0+255),7,b
  9723  00123C  EF29  F009         	goto	u10961
  9724  001240  5176               	movf	(strtof@expon+1)& (0+255),w,b
  9725  001242  E109               	bnz	u10960
  9726  001244  0E80               	movlw	128
  9727  001246  5D75               	subwf	strtof@expon& (0+255),w,b
  9728  001248  A0D8               	btfss	status,0,c
  9729  00124A  EF29  F009         	goto	u10961
  9730  00124E  EF2B  F009         	goto	u10960
  9731  001252                     u10961:
  9732  001252  EF37  F009         	goto	l8074
  9733  001256                     u10960:
  9734  001256                     
  9735                           ; BSR set to: 0
  9736  001256  0E00               	movlw	0
  9737  001258  6F79               	movwf	strtof@_u& (0+255),b
  9738  00125A  0E00               	movlw	0
  9739  00125C  6F7A               	movwf	(strtof@_u+1)& (0+255),b
  9740  00125E  0E00               	movlw	0
  9741  001260  6F7B               	movwf	(strtof@_u+2)& (0+255),b
  9742  001262  0E00               	movlw	0
  9743  001264  6F7C               	movwf	(strtof@_u+3)& (0+255),b
  9744  001266  0E00               	movlw	0
  9745  001268  6F76               	movwf	(strtof@expon+1)& (0+255),b
  9746  00126A  0E80               	movlw	128
  9747  00126C  6F75               	movwf	strtof@expon& (0+255),b
  9748  00126E                     l8074:
  9749                           
  9750                           ; BSR set to: 0
  9751  00126E  0E09               	movlw	9
  9752  001270  6F6D               	movwf	??_strtof& (0+255),b
  9753  001272                     u10975:
  9754  001272  90D8               	bcf	status,0,c
  9755  001274  337C               	rrcf	(strtof@_u+3)& (0+255),f,b
  9756  001276  337B               	rrcf	(strtof@_u+2)& (0+255),f,b
  9757  001278  337A               	rrcf	(strtof@_u+1)& (0+255),f,b
  9758  00127A  3379               	rrcf	strtof@_u& (0+255),f,b
  9759  00127C  2F6D               	decfsz	??_strtof& (0+255),f,b
  9760  00127E  EF39  F009         	goto	u10975
  9761  001282                     
  9762                           ; BSR set to: 0
  9763  001282  0EFF               	movlw	255
  9764  001284  1779               	andwf	strtof@_u& (0+255),f,b
  9765  001286  0EFF               	movlw	255
  9766  001288  177A               	andwf	(strtof@_u+1)& (0+255),f,b
  9767  00128A  0E7F               	movlw	127
  9768  00128C  177B               	andwf	(strtof@_u+2)& (0+255),f,b
  9769  00128E  0E00               	movlw	0
  9770  001290  177C               	andwf	(strtof@_u+3)& (0+255),f,b
  9771  001292                     
  9772                           ; BSR set to: 0
  9773  001292  0E7F               	movlw	127
  9774  001294  2575               	addwf	strtof@expon& (0+255),w,b
  9775  001296  6F6D               	movwf	??_strtof& (0+255),b
  9776  001298  0E00               	movlw	0
  9777  00129A  2176               	addwfc	(strtof@expon+1)& (0+255),w,b
  9778  00129C  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9779  00129E  0EFF               	movlw	255
  9780  0012A0  156D               	andwf	??_strtof& (0+255),w,b
  9781  0012A2  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9782  0012A4  6B70               	clrf	(??_strtof+3)& (0+255),b
  9783  0012A6  6B71               	clrf	(??_strtof+4)& (0+255),b
  9784  0012A8  6B72               	clrf	(??_strtof+5)& (0+255),b
  9785  0012AA  0E17               	movlw	23
  9786  0012AC                     u10985:
  9787  0012AC  90D8               	bcf	status,0,c
  9788  0012AE  376F               	rlcf	(??_strtof+2)& (0+255),f,b
  9789  0012B0  3770               	rlcf	(??_strtof+3)& (0+255),f,b
  9790  0012B2  3771               	rlcf	(??_strtof+4)& (0+255),f,b
  9791  0012B4  3772               	rlcf	(??_strtof+5)& (0+255),f,b
  9792  0012B6  2EE8               	decfsz	wreg,f,c
  9793  0012B8  EF56  F009         	goto	u10985
  9794  0012BC  516F               	movf	(??_strtof+2)& (0+255),w,b
  9795  0012BE  1379               	iorwf	strtof@_u& (0+255),f,b
  9796  0012C0  5170               	movf	(??_strtof+3)& (0+255),w,b
  9797  0012C2  137A               	iorwf	(strtof@_u+1)& (0+255),f,b
  9798  0012C4  5171               	movf	(??_strtof+4)& (0+255),w,b
  9799  0012C6  137B               	iorwf	(strtof@_u+2)& (0+255),f,b
  9800  0012C8  5172               	movf	(??_strtof+5)& (0+255),w,b
  9801  0012CA  137C               	iorwf	(strtof@_u+3)& (0+255),f,b
  9802  0012CC  EF57  F00C         	goto	l1269
  9803  0012D0                     l1354:
  9804                           
  9805                           ; BSR set to: 0
  9806  0012D0  B974               	btfsc	strtof@flags& (0+255),4,b
  9807  0012D2  EF6D  F009         	goto	u10991
  9808  0012D6  EF6F  F009         	goto	u10990
  9809  0012DA                     u10991:
  9810  0012DA  EF81  F009         	goto	l8086
  9811  0012DE                     u10990:
  9812  0012DE                     
  9813                           ; BSR set to: 0
  9814  0012DE  C052  FFD9         	movff	strtof@s,fsr2l
  9815  0012E2  C053  FFDA         	movff	strtof@s+1,fsr2h
  9816  0012E6  0E2E               	movlw	46
  9817  0012E8  18DE               	xorwf	postinc2,w,c
  9818  0012EA  A4D8               	btfss	status,2,c
  9819  0012EC  EF7A  F009         	goto	u11001
  9820  0012F0  EF7C  F009         	goto	u11000
  9821  0012F4                     u11001:
  9822  0012F4  EF81  F009         	goto	l8086
  9823  0012F8                     u11000:
  9824  0012F8                     
  9825                           ; BSR set to: 0
  9826  0012F8  8974               	bsf	strtof@flags& (0+255),4,b
  9827  0012FA  4A52               	infsnz	strtof@s^0,f,c
  9828  0012FC  2A53               	incf	(strtof@s+1)^0,f,c
  9829  0012FE  EF68  F009         	goto	l1354
  9830  001302                     l8086:
  9831                           
  9832                           ; BSR set to: 0
  9833  001302  0ED0               	movlw	208
  9834  001304  6F6D               	movwf	??_strtof& (0+255),b
  9835  001306  0EFF               	movlw	255
  9836  001308  6F6E               	movwf	(??_strtof+1)& (0+255),b
  9837  00130A  C052  FFD9         	movff	strtof@s,fsr2l
  9838  00130E  C053  FFDA         	movff	strtof@s+1,fsr2h
  9839  001312  50DF               	movf	indf2,w,c
  9840  001314  6F6F               	movwf	(??_strtof+2)& (0+255),b
  9841  001316  6B70               	clrf	(??_strtof+3)& (0+255),b
  9842  001318  516D               	movf	??_strtof& (0+255),w,b
  9843  00131A  276F               	addwf	(??_strtof+2)& (0+255),f,b
  9844  00131C  516E               	movf	(??_strtof+1)& (0+255),w,b
  9845  00131E  2370               	addwfc	(??_strtof+3)& (0+255),f,b
  9846  001320  5170               	movf	(??_strtof+3)& (0+255),w,b
  9847  001322  E109               	bnz	u11010
  9848  001324  0E0A               	movlw	10
  9849  001326  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
  9850  001328  A0D8               	btfss	status,0,c
  9851  00132A  EF99  F009         	goto	u11011
  9852  00132E  EF9B  F009         	goto	u11010
  9853  001332                     u11011:
  9854  001332  EF9D  F009         	goto	l8090
  9855  001336                     u11010:
  9856  001336  EFEC  F009         	goto	l8104
  9857  00133A                     l8090:
  9858                           
  9859                           ; BSR set to: 0
  9860  00133A  8374               	bsf	strtof@flags& (0+255),1,b
  9861  00133C                     
  9862                           ; BSR set to: 0
  9863  00133C  0E09               	movlw	9
  9864  00133E  1977               	xorwf	strtof@eexp& (0+255),w,b
  9865  001340  1178               	iorwf	(strtof@eexp+1)& (0+255),w,b
  9866  001342  B4D8               	btfsc	status,2,c
  9867  001344  EFA6  F009         	goto	u11021
  9868  001348  EFA8  F009         	goto	u11020
  9869  00134C                     u11021:
  9870  00134C  EFDF  F009         	goto	l1361
  9871  001350                     u11020:
  9872  001350                     
  9873                           ; BSR set to: 0
  9874  001350  A974               	btfss	strtof@flags& (0+255),4,b
  9875  001352  EFAD  F009         	goto	u11031
  9876  001356  EFAF  F009         	goto	u11030
  9877  00135A                     u11031:
  9878  00135A  EFB2  F009         	goto	l1362
  9879  00135E                     u11030:
  9880  00135E                     
  9881                           ; BSR set to: 0
  9882  00135E  0775               	decf	strtof@expon& (0+255),f,b
  9883  001360  A0D8               	btfss	status,0,c
  9884  001362  0776               	decf	(strtof@expon+1)& (0+255),f,b
  9885  001364                     l1362:
  9886                           
  9887                           ; BSR set to: 0
  9888  001364  4B77               	infsnz	strtof@eexp& (0+255),f,b
  9889  001366  2B78               	incf	(strtof@eexp+1)& (0+255),f,b
  9890  001368                     
  9891                           ; BSR set to: 0
  9892  001368  C079  F003         	movff	strtof@_u,___lmul@multiplier
  9893  00136C  C07A  F004         	movff	strtof@_u+1,___lmul@multiplier+1
  9894  001370  C07B  F005         	movff	strtof@_u+2,___lmul@multiplier+2
  9895  001374  C07C  F006         	movff	strtof@_u+3,___lmul@multiplier+3
  9896  001378  0E0A               	movlw	10
  9897  00137A  6E07               	movwf	___lmul@multiplicand^0,c
  9898  00137C  0E00               	movlw	0
  9899  00137E  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  9900  001380  0E00               	movlw	0
  9901  001382  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  9902  001384  0E00               	movlw	0
  9903  001386  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  9904  001388  EC8F  F02B         	call	___lmul	;wreg free
  9905  00138C  C003  F079         	movff	?___lmul,strtof@_u
  9906  001390  C004  F07A         	movff	?___lmul+1,strtof@_u+1
  9907  001394  C005  F07B         	movff	?___lmul+2,strtof@_u+2
  9908  001398  C006  F07C         	movff	?___lmul+3,strtof@_u+3
  9909  00139C  C052  FFD9         	movff	strtof@s,fsr2l
  9910  0013A0  C053  FFDA         	movff	strtof@s+1,fsr2h
  9911  0013A4  50DF               	movf	indf2,w,c
  9912  0013A6  0100               	movlb	0	; () banked
  9913  0013A8  6F6D               	movwf	??_strtof& (0+255),b
  9914  0013AA  0ED0               	movlw	208
  9915  0013AC  276D               	addwf	??_strtof& (0+255),f,b
  9916  0013AE  516D               	movf	??_strtof& (0+255),w,b
  9917  0013B0  2779               	addwf	strtof@_u& (0+255),f,b
  9918  0013B2  0E00               	movlw	0
  9919  0013B4  237A               	addwfc	(strtof@_u+1)& (0+255),f,b
  9920  0013B6  237B               	addwfc	(strtof@_u+2)& (0+255),f,b
  9921  0013B8  237C               	addwfc	(strtof@_u+3)& (0+255),f,b
  9922  0013BA  EFE8  F009         	goto	l1363
  9923  0013BE                     l1361:
  9924                           
  9925                           ; BSR set to: 0
  9926  0013BE  B974               	btfsc	strtof@flags& (0+255),4,b
  9927  0013C0  EFE4  F009         	goto	u11041
  9928  0013C4  EFE6  F009         	goto	u11040
  9929  0013C8                     u11041:
  9930  0013C8  EFE8  F009         	goto	l1363
  9931  0013CC                     u11040:
  9932  0013CC                     
  9933                           ; BSR set to: 0
  9934  0013CC  4B75               	infsnz	strtof@expon& (0+255),f,b
  9935  0013CE  2B76               	incf	(strtof@expon+1)& (0+255),f,b
  9936  0013D0                     l1363:
  9937                           
  9938                           ; BSR set to: 0
  9939  0013D0  4A52               	infsnz	strtof@s^0,f,c
  9940  0013D2  2A53               	incf	(strtof@s+1)^0,f,c
  9941  0013D4  EF68  F009         	goto	l1354
  9942  0013D8                     l8104:
  9943                           
  9944                           ; BSR set to: 0
  9945  0013D8  0E00               	movlw	0
  9946  0013DA  6F78               	movwf	(strtof@eexp+1)& (0+255),b
  9947  0013DC  0E00               	movlw	0
  9948  0013DE  6F77               	movwf	strtof@eexp& (0+255),b
  9949  0013E0                     
  9950                           ; BSR set to: 0
  9951  0013E0  C052  FFD9         	movff	strtof@s,fsr2l
  9952  0013E4  C053  FFDA         	movff	strtof@s+1,fsr2h
  9953  0013E8  0E65               	movlw	101
  9954  0013EA  18DE               	xorwf	postinc2,w,c
  9955  0013EC  B4D8               	btfsc	status,2,c
  9956  0013EE  EFFB  F009         	goto	u11051
  9957  0013F2  EFFD  F009         	goto	u11050
  9958  0013F6                     u11051:
  9959  0013F6  EF0A  F00A         	goto	l8110
  9960  0013FA                     u11050:
  9961  0013FA                     
  9962                           ; BSR set to: 0
  9963  0013FA  C052  FFD9         	movff	strtof@s,fsr2l
  9964  0013FE  C053  FFDA         	movff	strtof@s+1,fsr2h
  9965  001402  0E45               	movlw	69
  9966  001404  18DE               	xorwf	postinc2,w,c
  9967  001406  A4D8               	btfss	status,2,c
  9968  001408  EF08  F00A         	goto	u11061
  9969  00140C  EF0A  F00A         	goto	u11060
  9970  001410                     u11061:
  9971  001410  EFD5  F00A         	goto	l8148
  9972  001414                     u11060:
  9973  001414                     l8110:
  9974                           
  9975                           ; BSR set to: 0
  9976  001414  4A52               	infsnz	strtof@s^0,f,c
  9977  001416  2A53               	incf	(strtof@s+1)^0,f,c
  9978  001418  C052  FFD9         	movff	strtof@s,fsr2l
  9979  00141C  C053  FFDA         	movff	strtof@s+1,fsr2h
  9980  001420  0E2D               	movlw	45
  9981  001422  18DE               	xorwf	postinc2,w,c
  9982  001424  A4D8               	btfss	status,2,c
  9983  001426  EF17  F00A         	goto	u11071
  9984  00142A  EF19  F00A         	goto	u11070
  9985  00142E                     u11071:
  9986  00142E  EF1E  F00A         	goto	l8114
  9987  001432                     u11070:
  9988  001432                     
  9989                           ; BSR set to: 0
  9990  001432  8774               	bsf	strtof@flags& (0+255),3,b
  9991  001434  4A52               	infsnz	strtof@s^0,f,c
  9992  001436  2A53               	incf	(strtof@s+1)^0,f,c
  9993  001438  EF2D  F00A         	goto	l8120
  9994  00143C                     l8114:
  9995                           
  9996                           ; BSR set to: 0
  9997  00143C  C052  FFD9         	movff	strtof@s,fsr2l
  9998  001440  C053  FFDA         	movff	strtof@s+1,fsr2h
  9999  001444  0E2B               	movlw	43
 10000  001446  18DE               	xorwf	postinc2,w,c
 10001  001448  A4D8               	btfss	status,2,c
 10002  00144A  EF29  F00A         	goto	u11081
 10003  00144E  EF2B  F00A         	goto	u11080
 10004  001452                     u11081:
 10005  001452  EF2D  F00A         	goto	l8120
 10006  001456                     u11080:
 10007  001456                     l8116:
 10008  001456  4A52               	infsnz	strtof@s^0,f,c
 10009  001458  2A53               	incf	(strtof@s+1)^0,f,c
 10010  00145A                     l8120:
 10011  00145A  C052  FFD9         	movff	strtof@s,fsr2l
 10012  00145E  C053  FFDA         	movff	strtof@s+1,fsr2h
 10013  001462  0E30               	movlw	48
 10014  001464  18DE               	xorwf	postinc2,w,c
 10015  001466  B4D8               	btfsc	status,2,c
 10016  001468  EF38  F00A         	goto	u11091
 10017  00146C  EF3A  F00A         	goto	u11090
 10018  001470                     u11091:
 10019  001470  EF2B  F00A         	goto	l8116
 10020  001474                     u11090:
 10021  001474  0ED0               	movlw	208
 10022  001476  0100               	movlb	0	; () banked
 10023  001478  6F6D               	movwf	??_strtof& (0+255),b
 10024  00147A  0EFF               	movlw	255
 10025  00147C  6F6E               	movwf	(??_strtof+1)& (0+255),b
 10026  00147E  C052  FFD9         	movff	strtof@s,fsr2l
 10027  001482  C053  FFDA         	movff	strtof@s+1,fsr2h
 10028  001486  50DF               	movf	indf2,w,c
 10029  001488  6F6F               	movwf	(??_strtof+2)& (0+255),b
 10030  00148A  6B70               	clrf	(??_strtof+3)& (0+255),b
 10031  00148C  516D               	movf	??_strtof& (0+255),w,b
 10032  00148E  276F               	addwf	(??_strtof+2)& (0+255),f,b
 10033  001490  516E               	movf	(??_strtof+1)& (0+255),w,b
 10034  001492  2370               	addwfc	(??_strtof+3)& (0+255),f,b
 10035  001494  5170               	movf	(??_strtof+3)& (0+255),w,b
 10036  001496  E107               	bnz	u11101
 10037  001498  0E0A               	movlw	10
 10038  00149A  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
 10039  00149C  B0D8               	btfsc	status,0,c
 10040  00149E  EF53  F00A         	goto	u11101
 10041  0014A2  EF55  F00A         	goto	u11100
 10042  0014A6                     u11101:
 10043  0014A6  EFCA  F00A         	goto	l8144
 10044  0014AA                     u11100:
 10045  0014AA                     
 10046                           ; BSR set to: 0
 10047  0014AA  C052  FFD9         	movff	strtof@s,fsr2l
 10048  0014AE  C053  FFDA         	movff	strtof@s+1,fsr2h
 10049  0014B2  50DF               	movf	indf2,w,c
 10050  0014B4  6F6D               	movwf	??_strtof& (0+255),b
 10051  0014B6  0ED0               	movlw	208
 10052  0014B8  276D               	addwf	??_strtof& (0+255),f,b
 10053  0014BA  516D               	movf	??_strtof& (0+255),w,b
 10054  0014BC  6F77               	movwf	strtof@eexp& (0+255),b
 10055  0014BE  6B78               	clrf	(strtof@eexp+1)& (0+255),b
 10056  0014C0                     
 10057                           ; BSR set to: 0
 10058  0014C0  4A52               	infsnz	strtof@s^0,f,c
 10059  0014C2  2A53               	incf	(strtof@s+1)^0,f,c
 10060  0014C4                     
 10061                           ; BSR set to: 0
 10062  0014C4  0ED0               	movlw	208
 10063  0014C6  6F6D               	movwf	??_strtof& (0+255),b
 10064  0014C8  0EFF               	movlw	255
 10065  0014CA  6F6E               	movwf	(??_strtof+1)& (0+255),b
 10066  0014CC  C052  FFD9         	movff	strtof@s,fsr2l
 10067  0014D0  C053  FFDA         	movff	strtof@s+1,fsr2h
 10068  0014D4  50DF               	movf	indf2,w,c
 10069  0014D6  6F6F               	movwf	(??_strtof+2)& (0+255),b
 10070  0014D8  6B70               	clrf	(??_strtof+3)& (0+255),b
 10071  0014DA  516D               	movf	??_strtof& (0+255),w,b
 10072  0014DC  276F               	addwf	(??_strtof+2)& (0+255),f,b
 10073  0014DE  516E               	movf	(??_strtof+1)& (0+255),w,b
 10074  0014E0  2370               	addwfc	(??_strtof+3)& (0+255),f,b
 10075  0014E2  5170               	movf	(??_strtof+3)& (0+255),w,b
 10076  0014E4  E107               	bnz	u11111
 10077  0014E6  0E0A               	movlw	10
 10078  0014E8  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
 10079  0014EA  B0D8               	btfsc	status,0,c
 10080  0014EC  EF7A  F00A         	goto	u11111
 10081  0014F0  EF7C  F00A         	goto	u11110
 10082  0014F4                     u11111:
 10083  0014F4  EFCA  F00A         	goto	l8144
 10084  0014F8                     u11110:
 10085  0014F8                     
 10086                           ; BSR set to: 0
 10087  0014F8  C052  FFD9         	movff	strtof@s,fsr2l
 10088  0014FC  C053  FFDA         	movff	strtof@s+1,fsr2h
 10089  001500  50DF               	movf	indf2,w,c
 10090  001502  6F6D               	movwf	??_strtof& (0+255),b
 10091  001504  0ED0               	movlw	208
 10092  001506  276D               	addwf	??_strtof& (0+255),f,b
 10093  001508  C077  F003         	movff	strtof@eexp,___wmul@multiplier
 10094  00150C  C078  F004         	movff	strtof@eexp+1,___wmul@multiplier+1
 10095  001510  0E00               	movlw	0
 10096  001512  6E06               	movwf	(___wmul@multiplicand+1)^0,c
 10097  001514  0E0A               	movlw	10
 10098  001516  6E05               	movwf	___wmul@multiplicand^0,c
 10099  001518  ECCA  F02E         	call	___wmul	;wreg free
 10100  00151C  0100               	movlb	0	; () banked
 10101  00151E  516D               	movf	??_strtof& (0+255),w,b
 10102  001520  2403               	addwf	?___wmul^0,w,c
 10103  001522  6F77               	movwf	strtof@eexp& (0+255),b
 10104  001524  0E00               	movlw	0
 10105  001526  2004               	addwfc	(?___wmul+1)^0,w,c
 10106  001528  6F78               	movwf	(strtof@eexp+1)& (0+255),b
 10107  00152A                     
 10108                           ; BSR set to: 0
 10109  00152A  4A52               	infsnz	strtof@s^0,f,c
 10110  00152C  2A53               	incf	(strtof@s+1)^0,f,c
 10111  00152E                     
 10112                           ; BSR set to: 0
 10113  00152E  0ED0               	movlw	208
 10114  001530  6F6D               	movwf	??_strtof& (0+255),b
 10115  001532  0EFF               	movlw	255
 10116  001534  6F6E               	movwf	(??_strtof+1)& (0+255),b
 10117  001536  C052  FFD9         	movff	strtof@s,fsr2l
 10118  00153A  C053  FFDA         	movff	strtof@s+1,fsr2h
 10119  00153E  50DF               	movf	indf2,w,c
 10120  001540  6F6F               	movwf	(??_strtof+2)& (0+255),b
 10121  001542  6B70               	clrf	(??_strtof+3)& (0+255),b
 10122  001544  516D               	movf	??_strtof& (0+255),w,b
 10123  001546  276F               	addwf	(??_strtof+2)& (0+255),f,b
 10124  001548  516E               	movf	(??_strtof+1)& (0+255),w,b
 10125  00154A  2370               	addwfc	(??_strtof+3)& (0+255),f,b
 10126  00154C  5170               	movf	(??_strtof+3)& (0+255),w,b
 10127  00154E  E107               	bnz	u11121
 10128  001550  0E0A               	movlw	10
 10129  001552  5D6F               	subwf	(??_strtof+2)& (0+255),w,b
 10130  001554  B0D8               	btfsc	status,0,c
 10131  001556  EFAF  F00A         	goto	u11121
 10132  00155A  EFB1  F00A         	goto	u11120
 10133  00155E                     u11121:
 10134  00155E  EFCA  F00A         	goto	l8144
 10135  001562                     u11120:
 10136  001562                     
 10137                           ; BSR set to: 0
 10138  001562  C052  FFD9         	movff	strtof@s,fsr2l
 10139  001566  C053  FFDA         	movff	strtof@s+1,fsr2h
 10140  00156A  50DF               	movf	indf2,w,c
 10141  00156C  6F6D               	movwf	??_strtof& (0+255),b
 10142  00156E  0ED0               	movlw	208
 10143  001570  276D               	addwf	??_strtof& (0+255),f,b
 10144  001572  C077  F003         	movff	strtof@eexp,___wmul@multiplier
 10145  001576  C078  F004         	movff	strtof@eexp+1,___wmul@multiplier+1
 10146  00157A  0E00               	movlw	0
 10147  00157C  6E06               	movwf	(___wmul@multiplicand+1)^0,c
 10148  00157E  0E0A               	movlw	10
 10149  001580  6E05               	movwf	___wmul@multiplicand^0,c
 10150  001582  ECCA  F02E         	call	___wmul	;wreg free
 10151  001586  0100               	movlb	0	; () banked
 10152  001588  516D               	movf	??_strtof& (0+255),w,b
 10153  00158A  2403               	addwf	?___wmul^0,w,c
 10154  00158C  6F77               	movwf	strtof@eexp& (0+255),b
 10155  00158E  0E00               	movlw	0
 10156  001590  2004               	addwfc	(?___wmul+1)^0,w,c
 10157  001592  6F78               	movwf	(strtof@eexp+1)& (0+255),b
 10158  001594                     l8144:
 10159                           
 10160                           ; BSR set to: 0
 10161  001594  A774               	btfss	strtof@flags& (0+255),3,b
 10162  001596  EFCF  F00A         	goto	u11131
 10163  00159A  EFD1  F00A         	goto	u11130
 10164  00159E                     u11131:
 10165  00159E  EFD5  F00A         	goto	l8148
 10166  0015A2                     u11130:
 10167  0015A2                     
 10168                           ; BSR set to: 0
 10169  0015A2  6D77               	negf	strtof@eexp& (0+255),b
 10170  0015A4  1F78               	comf	(strtof@eexp+1)& (0+255),f,b
 10171  0015A6  B0D8               	btfsc	status,0,c
 10172  0015A8  2B78               	incf	(strtof@eexp+1)& (0+255),f,b
 10173  0015AA                     l8148:
 10174                           
 10175                           ; BSR set to: 0
 10176  0015AA  5177               	movf	strtof@eexp& (0+255),w,b
 10177  0015AC  2775               	addwf	strtof@expon& (0+255),f,b
 10178  0015AE  5178               	movf	(strtof@eexp+1)& (0+255),w,b
 10179  0015B0  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
 10180  0015B2                     
 10181                           ; BSR set to: 0
 10182  0015B2  5054               	movf	strtof@res^0,w,c
 10183  0015B4  1055               	iorwf	(strtof@res+1)^0,w,c
 10184  0015B6  B4D8               	btfsc	status,2,c
 10185  0015B8  EFE0  F00A         	goto	u11141
 10186  0015BC  EFE2  F00A         	goto	u11140
 10187  0015C0                     u11141:
 10188  0015C0  EFF1  F00A         	goto	l8156
 10189  0015C4                     u11140:
 10190  0015C4                     
 10191                           ; BSR set to: 0
 10192  0015C4  A374               	btfss	strtof@flags& (0+255),1,b
 10193  0015C6  EFE7  F00A         	goto	u11151
 10194  0015CA  EFE9  F00A         	goto	u11150
 10195  0015CE                     u11151:
 10196  0015CE  EFF1  F00A         	goto	l8156
 10197  0015D2                     u11150:
 10198  0015D2                     
 10199                           ; BSR set to: 0
 10200  0015D2  C054  FFD9         	movff	strtof@res,fsr2l
 10201  0015D6  C055  FFDA         	movff	strtof@res+1,fsr2h
 10202  0015DA  C052  FFDE         	movff	strtof@s,postinc2
 10203  0015DE  C053  FFDD         	movff	strtof@s+1,postdec2
 10204  0015E2                     l8156:
 10205                           
 10206                           ; BSR set to: 0
 10207  0015E2  C079  F007         	movff	strtof@_u,___xxtofl@val
 10208  0015E6  C07A  F008         	movff	strtof@_u+1,___xxtofl@val+1
 10209  0015EA  C07B  F009         	movff	strtof@_u+2,___xxtofl@val+2
 10210  0015EE  C07C  F00A         	movff	strtof@_u+3,___xxtofl@val+3
 10211  0015F2  0E00               	movlw	0
 10212  0015F4  ECCE  F021         	call	___xxtofl
 10213  0015F8  C007  F079         	movff	?___xxtofl,strtof@_u
 10214  0015FC  C008  F07A         	movff	?___xxtofl+1,strtof@_u+1
 10215  001600  C009  F07B         	movff	?___xxtofl+2,strtof@_u+2
 10216  001604  C00A  F07C         	movff	?___xxtofl+3,strtof@_u+3
 10217  001608  C079  F003         	movff	strtof@_u,___fleq@ff1
 10218  00160C  C07A  F004         	movff	strtof@_u+1,___fleq@ff1+1
 10219  001610  C07B  F005         	movff	strtof@_u+2,___fleq@ff1+2
 10220  001614  C07C  F006         	movff	strtof@_u+3,___fleq@ff1+3
 10221  001618  0E00               	movlw	0
 10222  00161A  6E07               	movwf	___fleq@ff2^0,c
 10223  00161C  0E00               	movlw	0
 10224  00161E  6E08               	movwf	(___fleq@ff2+1)^0,c
 10225  001620  0E00               	movlw	0
 10226  001622  6E09               	movwf	(___fleq@ff2+2)^0,c
 10227  001624  0E00               	movlw	0
 10228  001626  6E0A               	movwf	(___fleq@ff2+3)^0,c
 10229  001628  EC35  F02A         	call	___fleq	;wreg free
 10230  00162C  A0D8               	btfss	status,0,c
 10231  00162E  EF1B  F00B         	goto	u11161
 10232  001632  EF1D  F00B         	goto	u11160
 10233  001636                     u11161:
 10234  001636  EF27  F00B         	goto	l8164
 10235  00163A                     u11160:
 10236  00163A  0E00               	movlw	0
 10237  00163C  6E52               	movwf	?_strtof^0,c
 10238  00163E  0E00               	movlw	0
 10239  001640  6E53               	movwf	(?_strtof+1)^0,c
 10240  001642  0E00               	movlw	0
 10241  001644  6E54               	movwf	(?_strtof+2)^0,c
 10242  001646  0E00               	movlw	0
 10243  001648  6E55               	movwf	(?_strtof+3)^0,c
 10244  00164A  EF79  F00C         	goto	l1313
 10245  00164E                     l8164:
 10246  00164E  0100               	movlb	0	; () banked
 10247  001650  BF76               	btfsc	(strtof@expon+1)& (0+255),7,b
 10248  001652  EF2F  F00B         	goto	u11170
 10249  001656  EF2D  F00B         	goto	u11171
 10250  00165A                     u11171:
 10251  00165A  EFC0  F00B         	goto	l8192
 10252  00165E                     u11170:
 10253  00165E                     
 10254                           ; BSR set to: 0
 10255  00165E  6D75               	negf	strtof@expon& (0+255),b
 10256  001660  1F76               	comf	(strtof@expon+1)& (0+255),f,b
 10257  001662  B0D8               	btfsc	status,0,c
 10258  001664  2B76               	incf	(strtof@expon+1)& (0+255),f,b
 10259  001666  EF54  F00B         	goto	l8172
 10260  00166A                     l8168:
 10261                           
 10262                           ; BSR set to: 0
 10263  00166A  C079  F046         	movff	strtof@_u,___fldiv@b
 10264  00166E  C07A  F047         	movff	strtof@_u+1,___fldiv@b+1
 10265  001672  C07B  F048         	movff	strtof@_u+2,___fldiv@b+2
 10266  001676  C07C  F049         	movff	strtof@_u+3,___fldiv@b+3
 10267  00167A  0EF9               	movlw	249
 10268  00167C  6E4A               	movwf	___fldiv@a^0,c
 10269  00167E  0E02               	movlw	2
 10270  001680  6E4B               	movwf	(___fldiv@a+1)^0,c
 10271  001682  0E15               	movlw	21
 10272  001684  6E4C               	movwf	(___fldiv@a+2)^0,c
 10273  001686  0E50               	movlw	80
 10274  001688  6E4D               	movwf	(___fldiv@a+3)^0,c
 10275  00168A  EC68  F01C         	call	___fldiv	;wreg free
 10276  00168E  C046  F079         	movff	?___fldiv,strtof@_u
 10277  001692  C047  F07A         	movff	?___fldiv+1,strtof@_u+1
 10278  001696  C048  F07B         	movff	?___fldiv+2,strtof@_u+2
 10279  00169A  C049  F07C         	movff	?___fldiv+3,strtof@_u+3
 10280  00169E  0100               	movlb	0	; () banked
 10281  0016A0  0EF6               	movlw	246
 10282  0016A2  2775               	addwf	strtof@expon& (0+255),f,b
 10283  0016A4  0EFF               	movlw	255
 10284  0016A6  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
 10285  0016A8                     l8172:
 10286                           
 10287                           ; BSR set to: 0
 10288  0016A8  BF76               	btfsc	(strtof@expon+1)& (0+255),7,b
 10289  0016AA  EF62  F00B         	goto	u11180
 10290  0016AE  5176               	movf	(strtof@expon+1)& (0+255),w,b
 10291  0016B0  E107               	bnz	u11181
 10292  0016B2  0E0A               	movlw	10
 10293  0016B4  5D75               	subwf	strtof@expon& (0+255),w,b
 10294  0016B6  B0D8               	btfsc	status,0,c
 10295  0016B8  EF60  F00B         	goto	u11181
 10296  0016BC  EF62  F00B         	goto	u11180
 10297  0016C0                     u11181:
 10298  0016C0  EF35  F00B         	goto	l8168
 10299  0016C4                     u11180:
 10300  0016C4  EF82  F00B         	goto	l8178
 10301  0016C8                     l8174:
 10302                           
 10303                           ; BSR set to: 0
 10304  0016C8  C079  F046         	movff	strtof@_u,___fldiv@b
 10305  0016CC  C07A  F047         	movff	strtof@_u+1,___fldiv@b+1
 10306  0016D0  C07B  F048         	movff	strtof@_u+2,___fldiv@b+2
 10307  0016D4  C07C  F049         	movff	strtof@_u+3,___fldiv@b+3
 10308  0016D8  0E00               	movlw	0
 10309  0016DA  6E4A               	movwf	___fldiv@a^0,c
 10310  0016DC  0E00               	movlw	0
 10311  0016DE  6E4B               	movwf	(___fldiv@a+1)^0,c
 10312  0016E0  0E20               	movlw	32
 10313  0016E2  6E4C               	movwf	(___fldiv@a+2)^0,c
 10314  0016E4  0E41               	movlw	65
 10315  0016E6  6E4D               	movwf	(___fldiv@a+3)^0,c
 10316  0016E8  EC68  F01C         	call	___fldiv	;wreg free
 10317  0016EC  C046  F079         	movff	?___fldiv,strtof@_u
 10318  0016F0  C047  F07A         	movff	?___fldiv+1,strtof@_u+1
 10319  0016F4  C048  F07B         	movff	?___fldiv+2,strtof@_u+2
 10320  0016F8  C049  F07C         	movff	?___fldiv+3,strtof@_u+3
 10321  0016FC  0100               	movlb	0	; () banked
 10322  0016FE  0775               	decf	strtof@expon& (0+255),f,b
 10323  001700  A0D8               	btfss	status,0,c
 10324  001702  0776               	decf	(strtof@expon+1)& (0+255),f,b
 10325  001704                     l8178:
 10326                           
 10327                           ; BSR set to: 0
 10328  001704  5175               	movf	strtof@expon& (0+255),w,b
 10329  001706  1176               	iorwf	(strtof@expon+1)& (0+255),w,b
 10330  001708  A4D8               	btfss	status,2,c
 10331  00170A  EF89  F00B         	goto	u11191
 10332  00170E  EF8B  F00B         	goto	u11190
 10333  001712                     u11191:
 10334  001712  EF64  F00B         	goto	l8174
 10335  001716                     u11190:
 10336  001716                     
 10337                           ; BSR set to: 0
 10338  001716  C079  F046         	movff	strtof@_u,___flge@ff1
 10339  00171A  C07A  F047         	movff	strtof@_u+1,___flge@ff1+1
 10340  00171E  C07B  F048         	movff	strtof@_u+2,___flge@ff1+2
 10341  001722  C07C  F049         	movff	strtof@_u+3,___flge@ff1+3
 10342  001726  0E00               	movlw	0
 10343  001728  6E4A               	movwf	___flge@ff2^0,c
 10344  00172A  0E00               	movlw	0
 10345  00172C  6E4B               	movwf	(___flge@ff2+1)^0,c
 10346  00172E  0E80               	movlw	128
 10347  001730  6E4C               	movwf	(___flge@ff2+2)^0,c
 10348  001732  0E00               	movlw	0
 10349  001734  6E4D               	movwf	(___flge@ff2+3)^0,c
 10350  001736  EC08  F026         	call	___flge	;wreg free
 10351  00173A  B0D8               	btfsc	status,0,c
 10352  00173C  EFA2  F00B         	goto	u11201
 10353  001740  EFA4  F00B         	goto	u11200
 10354  001744                     u11201:
 10355  001744  EF57  F00C         	goto	l1269
 10356  001748                     u11200:
 10357  001748  0100               	movlb	0	; () banked
 10358  00174A  A174               	btfss	strtof@flags& (0+255),0,b
 10359  00174C  EFAA  F00B         	goto	u11211
 10360  001750  EFAC  F00B         	goto	u11210
 10361  001754                     u11211:
 10362  001754  EFB6  F00B         	goto	l8188
 10363  001758                     u11210:
 10364  001758                     
 10365                           ; BSR set to: 0
 10366  001758  0E00               	movlw	0
 10367  00175A  6E52               	movwf	?_strtof^0,c
 10368  00175C  0E00               	movlw	0
 10369  00175E  6E53               	movwf	(?_strtof+1)^0,c
 10370  001760  0E80               	movlw	128
 10371  001762  6E54               	movwf	(?_strtof+2)^0,c
 10372  001764  0E80               	movlw	128
 10373  001766  6E55               	movwf	(?_strtof+3)^0,c
 10374  001768  EF79  F00C         	goto	l1313
 10375  00176C                     l8188:
 10376                           
 10377                           ; BSR set to: 0
 10378  00176C  0E00               	movlw	0
 10379  00176E  6E52               	movwf	?_strtof^0,c
 10380  001770  0E00               	movlw	0
 10381  001772  6E53               	movwf	(?_strtof+1)^0,c
 10382  001774  0E80               	movlw	128
 10383  001776  6E54               	movwf	(?_strtof+2)^0,c
 10384  001778  0E00               	movlw	0
 10385  00177A  6E55               	movwf	(?_strtof+3)^0,c
 10386  00177C  EF79  F00C         	goto	l1313
 10387  001780                     l8192:
 10388                           
 10389                           ; BSR set to: 0
 10390  001780  BF76               	btfsc	(strtof@expon+1)& (0+255),7,b
 10391  001782  EFCB  F00B         	goto	u11221
 10392  001786  5176               	movf	(strtof@expon+1)& (0+255),w,b
 10393  001788  E108               	bnz	u11220
 10394  00178A  0575               	decf	strtof@expon& (0+255),w,b
 10395  00178C  A0D8               	btfss	status,0,c
 10396  00178E  EFCB  F00B         	goto	u11221
 10397  001792  EFCD  F00B         	goto	u11220
 10398  001796                     u11221:
 10399  001796  EF57  F00C         	goto	l1269
 10400  00179A                     u11220:
 10401  00179A  EFEE  F00B         	goto	l8200
 10402  00179E                     l8196:
 10403                           
 10404                           ; BSR set to: 0
 10405  00179E  C079  F02D         	movff	strtof@_u,___flmul@b
 10406  0017A2  C07A  F02E         	movff	strtof@_u+1,___flmul@b+1
 10407  0017A6  C07B  F02F         	movff	strtof@_u+2,___flmul@b+2
 10408  0017AA  C07C  F030         	movff	strtof@_u+3,___flmul@b+3
 10409  0017AE  0EF9               	movlw	249
 10410  0017B0  6E31               	movwf	___flmul@a^0,c
 10411  0017B2  0E02               	movlw	2
 10412  0017B4  6E32               	movwf	(___flmul@a+1)^0,c
 10413  0017B6  0E15               	movlw	21
 10414  0017B8  6E33               	movwf	(___flmul@a+2)^0,c
 10415  0017BA  0E50               	movlw	80
 10416  0017BC  6E34               	movwf	(___flmul@a+3)^0,c
 10417  0017BE  EC53  F01A         	call	___flmul	;wreg free
 10418  0017C2  C02D  F079         	movff	?___flmul,strtof@_u
 10419  0017C6  C02E  F07A         	movff	?___flmul+1,strtof@_u+1
 10420  0017CA  C02F  F07B         	movff	?___flmul+2,strtof@_u+2
 10421  0017CE  C030  F07C         	movff	?___flmul+3,strtof@_u+3
 10422  0017D2  0100               	movlb	0	; () banked
 10423  0017D4  0EF6               	movlw	246
 10424  0017D6  2775               	addwf	strtof@expon& (0+255),f,b
 10425  0017D8  0EFF               	movlw	255
 10426  0017DA  2376               	addwfc	(strtof@expon+1)& (0+255),f,b
 10427  0017DC                     l8200:
 10428                           
 10429                           ; BSR set to: 0
 10430  0017DC  5176               	movf	(strtof@expon+1)& (0+255),w,b
 10431  0017DE  E107               	bnz	u11231
 10432  0017E0  0E0A               	movlw	10
 10433  0017E2  5D75               	subwf	strtof@expon& (0+255),w,b
 10434  0017E4  B0D8               	btfsc	status,0,c
 10435  0017E6  EFF7  F00B         	goto	u11231
 10436  0017EA  EFF9  F00B         	goto	u11230
 10437  0017EE                     u11231:
 10438  0017EE  EFCF  F00B         	goto	l8196
 10439  0017F2                     u11230:
 10440  0017F2  EF19  F00C         	goto	l8206
 10441  0017F6                     l8202:
 10442                           
 10443                           ; BSR set to: 0
 10444  0017F6  C079  F02D         	movff	strtof@_u,___flmul@b
 10445  0017FA  C07A  F02E         	movff	strtof@_u+1,___flmul@b+1
 10446  0017FE  C07B  F02F         	movff	strtof@_u+2,___flmul@b+2
 10447  001802  C07C  F030         	movff	strtof@_u+3,___flmul@b+3
 10448  001806  0E00               	movlw	0
 10449  001808  6E31               	movwf	___flmul@a^0,c
 10450  00180A  0E00               	movlw	0
 10451  00180C  6E32               	movwf	(___flmul@a+1)^0,c
 10452  00180E  0E20               	movlw	32
 10453  001810  6E33               	movwf	(___flmul@a+2)^0,c
 10454  001812  0E41               	movlw	65
 10455  001814  6E34               	movwf	(___flmul@a+3)^0,c
 10456  001816  EC53  F01A         	call	___flmul	;wreg free
 10457  00181A  C02D  F079         	movff	?___flmul,strtof@_u
 10458  00181E  C02E  F07A         	movff	?___flmul+1,strtof@_u+1
 10459  001822  C02F  F07B         	movff	?___flmul+2,strtof@_u+2
 10460  001826  C030  F07C         	movff	?___flmul+3,strtof@_u+3
 10461  00182A  0100               	movlb	0	; () banked
 10462  00182C  0775               	decf	strtof@expon& (0+255),f,b
 10463  00182E  A0D8               	btfss	status,0,c
 10464  001830  0776               	decf	(strtof@expon+1)& (0+255),f,b
 10465  001832                     l8206:
 10466                           
 10467                           ; BSR set to: 0
 10468  001832  5175               	movf	strtof@expon& (0+255),w,b
 10469  001834  1176               	iorwf	(strtof@expon+1)& (0+255),w,b
 10470  001836  A4D8               	btfss	status,2,c
 10471  001838  EF20  F00C         	goto	u11241
 10472  00183C  EF22  F00C         	goto	u11240
 10473  001840                     u11241:
 10474  001840  EFFB  F00B         	goto	l8202
 10475  001844                     u11240:
 10476  001844                     
 10477                           ; BSR set to: 0
 10478  001844  0EFF               	movlw	255
 10479  001846  6E46               	movwf	___flge@ff1^0,c
 10480  001848  0EFF               	movlw	255
 10481  00184A  6E47               	movwf	(___flge@ff1+1)^0,c
 10482  00184C  0E7F               	movlw	127
 10483  00184E  6E48               	movwf	(___flge@ff1+2)^0,c
 10484  001850  0E7F               	movlw	127
 10485  001852  6E49               	movwf	(___flge@ff1+3)^0,c
 10486  001854  C079  F04A         	movff	strtof@_u,___flge@ff2
 10487  001858  C07A  F04B         	movff	strtof@_u+1,___flge@ff2+1
 10488  00185C  C07B  F04C         	movff	strtof@_u+2,___flge@ff2+2
 10489  001860  C07C  F04D         	movff	strtof@_u+3,___flge@ff2+3
 10490  001864  EC08  F026         	call	___flge	;wreg free
 10491  001868  B0D8               	btfsc	status,0,c
 10492  00186A  EF39  F00C         	goto	u11251
 10493  00186E  EF3B  F00C         	goto	u11250
 10494  001872                     u11251:
 10495  001872  EF57  F00C         	goto	l1269
 10496  001876                     u11250:
 10497  001876  0100               	movlb	0	; () banked
 10498  001878  A174               	btfss	strtof@flags& (0+255),0,b
 10499  00187A  EF41  F00C         	goto	u11261
 10500  00187E  EF43  F00C         	goto	u11260
 10501  001882                     u11261:
 10502  001882  EF4D  F00C         	goto	l8216
 10503  001886                     u11260:
 10504  001886                     
 10505                           ; BSR set to: 0
 10506  001886  0E00               	movlw	0
 10507  001888  6E52               	movwf	?_strtof^0,c
 10508  00188A  0E00               	movlw	0
 10509  00188C  6E53               	movwf	(?_strtof+1)^0,c
 10510  00188E  0E80               	movlw	128
 10511  001890  6E54               	movwf	(?_strtof+2)^0,c
 10512  001892  0E80               	movlw	128
 10513  001894  6E55               	movwf	(?_strtof+3)^0,c
 10514  001896  EF79  F00C         	goto	l1313
 10515  00189A                     l8216:
 10516                           
 10517                           ; BSR set to: 0
 10518  00189A  0E00               	movlw	0
 10519  00189C  6E52               	movwf	?_strtof^0,c
 10520  00189E  0E00               	movlw	0
 10521  0018A0  6E53               	movwf	(?_strtof+1)^0,c
 10522  0018A2  0E80               	movlw	128
 10523  0018A4  6E54               	movwf	(?_strtof+2)^0,c
 10524  0018A6  0E00               	movlw	0
 10525  0018A8  6E55               	movwf	(?_strtof+3)^0,c
 10526  0018AA  EF79  F00C         	goto	l1313
 10527  0018AE                     l1269:
 10528  0018AE  0100               	movlb	0	; () banked
 10529  0018B0  A174               	btfss	strtof@flags& (0+255),0,b
 10530  0018B2  EF5D  F00C         	goto	u11271
 10531  0018B6  EF5F  F00C         	goto	u11270
 10532  0018BA                     u11271:
 10533  0018BA  EF71  F00C         	goto	l8222
 10534  0018BE                     u11270:
 10535  0018BE                     
 10536                           ; BSR set to: 0
 10537  0018BE  C079  F003         	movff	strtof@_u,___flneg@f1
 10538  0018C2  C07A  F004         	movff	strtof@_u+1,___flneg@f1+1
 10539  0018C6  C07B  F005         	movff	strtof@_u+2,___flneg@f1+2
 10540  0018CA  C07C  F006         	movff	strtof@_u+3,___flneg@f1+3
 10541  0018CE  EC4F  F02E         	call	___flneg	;wreg free
 10542  0018D2  C003  F079         	movff	?___flneg,strtof@_u
 10543  0018D6  C004  F07A         	movff	?___flneg+1,strtof@_u+1
 10544  0018DA  C005  F07B         	movff	?___flneg+2,strtof@_u+2
 10545  0018DE  C006  F07C         	movff	?___flneg+3,strtof@_u+3
 10546  0018E2                     l8222:
 10547  0018E2  C079  F052         	movff	strtof@_u,?_strtof
 10548  0018E6  C07A  F053         	movff	strtof@_u+1,?_strtof+1
 10549  0018EA  C07B  F054         	movff	strtof@_u+2,?_strtof+2
 10550  0018EE  C07C  F055         	movff	strtof@_u+3,?_strtof+3
 10551  0018F2                     l1313:
 10552  0018F2  0012               	return		;funcret
 10553  0018F4                     __end_of_strtof:
 10554                           	callstack 0
 10555                           
 10556 ;; *************** function _toupper *****************
 10557 ;; Defined at:
 10558 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\toupper.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  c               2    8[COMRAM] int 
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;		None
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  2    8[COMRAM] int 
 10565 ;; Registers used:
 10566 ;;		wreg, status,2, status,0
 10567 ;; Tracked objects:
 10568 ;;		On entry : 0/0
 10569 ;;		On exit  : 0/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10572 ;;      Params:         2       0       0       0       0       0       0       0       0
 10573 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10574 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10575 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10576 ;;Total ram usage:        6 bytes
 10577 ;; Hardware stack levels used: 1
 10578 ;; Hardware stack levels required when called: 3
 10579 ;; This function calls:
 10580 ;;		_islower
 10581 ;; This function is called by:
 10582 ;;		_strtof
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text32
 10587  005B72                     __ptext32:
 10588                           	callstack 0
 10589  005B72                     _toupper:
 10590                           	callstack 25
 10591  005B72  0E9F               	movlw	159
 10592  005B74  6E0B               	movwf	??_toupper^0,c
 10593  005B76  0EFF               	movlw	255
 10594  005B78  6E0C               	movwf	(??_toupper+1)^0,c
 10595  005B7A  C009  F00D         	movff	toupper@c,??_toupper+2
 10596  005B7E  C00A  F00E         	movff	toupper@c+1,??_toupper+3
 10597  005B82  500B               	movf	??_toupper^0,w,c
 10598  005B84  260D               	addwf	(??_toupper+2)^0,f,c
 10599  005B86  500C               	movf	(??_toupper+1)^0,w,c
 10600  005B88  220E               	addwfc	(??_toupper+3)^0,f,c
 10601  005B8A  500E               	movf	(??_toupper+3)^0,w,c
 10602  005B8C  E107               	bnz	u6581
 10603  005B8E  0E1A               	movlw	26
 10604  005B90  5C0D               	subwf	(??_toupper+2)^0,w,c
 10605  005B92  B0D8               	btfsc	status,0,c
 10606  005B94  EFCE  F02D         	goto	u6581
 10607  005B98  EFD0  F02D         	goto	u6580
 10608  005B9C                     u6581:
 10609  005B9C  EFD6  F02D         	goto	l1484
 10610  005BA0                     u6580:
 10611  005BA0  0E5F               	movlw	95
 10612  005BA2  1409               	andwf	toupper@c^0,w,c
 10613  005BA4  6E09               	movwf	?_toupper^0,c
 10614  005BA6  6A0A               	clrf	(?_toupper+1)^0,c
 10615  005BA8  EFDA  F02D         	goto	l1487
 10616  005BAC                     l1484:
 10617  005BAC  C009  F009         	movff	toupper@c,?_toupper
 10618  005BB0  C00A  F00A         	movff	toupper@c+1,?_toupper+1
 10619  005BB4                     l1487:
 10620  005BB4  0012               	return		;funcret
 10621  005BB6                     __end_of_toupper:
 10622                           	callstack 0
 10623                           
 10624 ;; *************** function _islower *****************
 10625 ;; Defined at:
 10626 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\islower.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;  c               2    2[COMRAM] int 
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  2    2[COMRAM] int 
 10633 ;; Registers used:
 10634 ;;		wreg, status,2, status,0
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10640 ;;      Params:         2       0       0       0       0       0       0       0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10642 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10643 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10644 ;;Total ram usage:        6 bytes
 10645 ;; Hardware stack levels used: 1
 10646 ;; Hardware stack levels required when called: 2
 10647 ;; This function calls:
 10648 ;;		Nothing
 10649 ;; This function is called by:
 10650 ;;		_toupper
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           	psect	text33
 10655  005C2E                     __ptext33:
 10656                           	callstack 0
 10657  005C2E                     _islower:
 10658                           	callstack 25
 10659  005C2E  0E9F               	movlw	159
 10660  005C30  6E05               	movwf	??_islower^0,c
 10661  005C32  0EFF               	movlw	255
 10662  005C34  6E06               	movwf	(??_islower+1)^0,c
 10663  005C36  C003  F007         	movff	islower@c,??_islower+2
 10664  005C3A  C004  F008         	movff	islower@c+1,??_islower+3
 10665  005C3E  5005               	movf	??_islower^0,w,c
 10666  005C40  2607               	addwf	(??_islower+2)^0,f,c
 10667  005C42  5006               	movf	(??_islower+1)^0,w,c
 10668  005C44  2208               	addwfc	(??_islower+3)^0,f,c
 10669  005C46  5008               	movf	(??_islower+3)^0,w,c
 10670  005C48  E10A               	bnz	u6250
 10671  005C4A  0E1A               	movlw	26
 10672  005C4C  5C07               	subwf	(??_islower+2)^0,w,c
 10673  005C4E  A0D8               	btfss	status,0,c
 10674  005C50  EF2C  F02E         	goto	u6251
 10675  005C54  EF2F  F02E         	goto	u6250
 10676  005C58                     u6251:
 10677  005C58  0E01               	movlw	1
 10678  005C5A  EF30  F02E         	goto	u6260
 10679  005C5E                     u6250:
 10680  005C5E  0E00               	movlw	0
 10681  005C60                     u6260:
 10682  005C60  6E03               	movwf	?_islower^0,c
 10683  005C62  6A04               	clrf	(?_islower+1)^0,c
 10684  005C64  0012               	return		;funcret
 10685  005C66                     __end_of_islower:
 10686                           	callstack 0
 10687                           
 10688 ;; *************** function _nanf *****************
 10689 ;; Defined at:
 10690 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nanf.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;  s               2    2[COMRAM] PTR const unsigned char 
 10693 ;;		 -> STR_25(1), 
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;  u               4    6[COMRAM] struct .
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  4    2[COMRAM] float 
 10698 ;; Registers used:
 10699 ;;		wreg, status,2
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10705 ;;      Params:         4       0       0       0       0       0       0       0       0
 10706 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10707 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10708 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10709 ;;Total ram usage:        8 bytes
 10710 ;; Hardware stack levels used: 1
 10711 ;; Hardware stack levels required when called: 2
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_strtof
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           	psect	text34
 10720  005DBA                     __ptext34:
 10721                           	callstack 0
 10722  005DBA                     _nanf:
 10723                           	callstack 26
 10724  005DBA  0EFF               	movlw	255
 10725  005DBC  6E07               	movwf	nanf@u^0,c
 10726  005DBE  0EFF               	movlw	255
 10727  005DC0  6E08               	movwf	(nanf@u+1)^0,c
 10728  005DC2  0EFF               	movlw	255
 10729  005DC4  6E09               	movwf	(nanf@u+2)^0,c
 10730  005DC6  0E7F               	movlw	127
 10731  005DC8  6E0A               	movwf	(nanf@u+3)^0,c
 10732  005DCA  C007  F003         	movff	nanf@u,?_nanf
 10733  005DCE  C008  F004         	movff	nanf@u+1,?_nanf+1
 10734  005DD2  C009  F005         	movff	nanf@u+2,?_nanf+2
 10735  005DD6  C00A  F006         	movff	nanf@u+3,?_nanf+3
 10736  005DDA  0012               	return		;funcret
 10737  005DDC                     __end_of_nanf:
 10738                           	callstack 0
 10739                           
 10740 ;; *************** function _isxdigit *****************
 10741 ;; Defined at:
 10742 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isxdigit.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;  c               2    8[COMRAM] int 
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;		None
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  2    8[COMRAM] int 
 10749 ;; Registers used:
 10750 ;;		wreg, status,2, status,0
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10756 ;;      Params:         2       0       0       0       0       0       0       0       0
 10757 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10758 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10759 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10760 ;;Total ram usage:        7 bytes
 10761 ;; Hardware stack levels used: 1
 10762 ;; Hardware stack levels required when called: 3
 10763 ;; This function calls:
 10764 ;;		_isdigit
 10765 ;; This function is called by:
 10766 ;;		_strtof
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           	psect	text35
 10771  005644                     __ptext35:
 10772                           	callstack 0
 10773  005644                     _isxdigit:
 10774                           	callstack 25
 10775  005644  0E01               	movlw	1
 10776  005646  6E0F               	movwf	_isxdigit$1571^0,c
 10777  005648  0ED0               	movlw	208
 10778  00564A  6E0B               	movwf	??_isxdigit^0,c
 10779  00564C  0EFF               	movlw	255
 10780  00564E  6E0C               	movwf	(??_isxdigit+1)^0,c
 10781  005650  C009  F00D         	movff	isxdigit@c,??_isxdigit+2
 10782  005654  C00A  F00E         	movff	isxdigit@c+1,??_isxdigit+3
 10783  005658  500B               	movf	??_isxdigit^0,w,c
 10784  00565A  260D               	addwf	(??_isxdigit+2)^0,f,c
 10785  00565C  500C               	movf	(??_isxdigit+1)^0,w,c
 10786  00565E  220E               	addwfc	(??_isxdigit+3)^0,f,c
 10787  005660  500E               	movf	(??_isxdigit+3)^0,w,c
 10788  005662  E109               	bnz	u10350
 10789  005664  0E0A               	movlw	10
 10790  005666  5C0D               	subwf	(??_isxdigit+2)^0,w,c
 10791  005668  A0D8               	btfss	status,0,c
 10792  00566A  EF39  F02B         	goto	u10351
 10793  00566E  EF3B  F02B         	goto	u10350
 10794  005672                     u10351:
 10795  005672  EF56  F02B         	goto	l7808
 10796  005676                     u10350:
 10797  005676  0E9F               	movlw	159
 10798  005678  6E0B               	movwf	??_isxdigit^0,c
 10799  00567A  0EFF               	movlw	255
 10800  00567C  6E0C               	movwf	(??_isxdigit+1)^0,c
 10801  00567E  0E20               	movlw	32
 10802  005680  1009               	iorwf	isxdigit@c^0,w,c
 10803  005682  6E0D               	movwf	(??_isxdigit+2)^0,c
 10804  005684  0E00               	movlw	0
 10805  005686  100A               	iorwf	(isxdigit@c+1)^0,w,c
 10806  005688  6E0E               	movwf	(??_isxdigit+3)^0,c
 10807  00568A  500B               	movf	??_isxdigit^0,w,c
 10808  00568C  260D               	addwf	(??_isxdigit+2)^0,f,c
 10809  00568E  500C               	movf	(??_isxdigit+1)^0,w,c
 10810  005690  220E               	addwfc	(??_isxdigit+3)^0,f,c
 10811  005692  500E               	movf	(??_isxdigit+3)^0,w,c
 10812  005694  E109               	bnz	u10360
 10813  005696  0E06               	movlw	6
 10814  005698  5C0D               	subwf	(??_isxdigit+2)^0,w,c
 10815  00569A  A0D8               	btfss	status,0,c
 10816  00569C  EF52  F02B         	goto	u10361
 10817  0056A0  EF54  F02B         	goto	u10360
 10818  0056A4                     u10361:
 10819  0056A4  EF56  F02B         	goto	l7808
 10820  0056A8                     u10360:
 10821  0056A8  0E00               	movlw	0
 10822  0056AA  6E0F               	movwf	_isxdigit$1571^0,c
 10823  0056AC                     l7808:
 10824  0056AC  C00F  F009         	movff	_isxdigit$1571,?_isxdigit
 10825  0056B0  6A0A               	clrf	(?_isxdigit+1)^0,c
 10826  0056B2  0012               	return		;funcret
 10827  0056B4                     __end_of_isxdigit:
 10828                           	callstack 0
 10829                           
 10830 ;; *************** function _isdigit *****************
 10831 ;; Defined at:
 10832 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  c               2    2[COMRAM] int 
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;		None
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  2    2[COMRAM] int 
 10839 ;; Registers used:
 10840 ;;		wreg, status,2, status,0
 10841 ;; Tracked objects:
 10842 ;;		On entry : 0/0
 10843 ;;		On exit  : 0/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10846 ;;      Params:         2       0       0       0       0       0       0       0       0
 10847 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10848 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10849 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10850 ;;Total ram usage:        6 bytes
 10851 ;; Hardware stack levels used: 1
 10852 ;; Hardware stack levels required when called: 2
 10853 ;; This function calls:
 10854 ;;		Nothing
 10855 ;; This function is called by:
 10856 ;;		_vfpfcnvrt
 10857 ;;		_atoi
 10858 ;;		_strtof
 10859 ;;		_isxdigit
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           
 10863                           	psect	text36
 10864  005C66                     __ptext36:
 10865                           	callstack 0
 10866  005C66                     _isdigit:
 10867                           	callstack 25
 10868  005C66  0ED0               	movlw	208
 10869  005C68  6E05               	movwf	??_isdigit^0,c
 10870  005C6A  0EFF               	movlw	255
 10871  005C6C  6E06               	movwf	(??_isdigit+1)^0,c
 10872  005C6E  C003  F007         	movff	isdigit@c,??_isdigit+2
 10873  005C72  C004  F008         	movff	isdigit@c+1,??_isdigit+3
 10874  005C76  5005               	movf	??_isdigit^0,w,c
 10875  005C78  2607               	addwf	(??_isdigit+2)^0,f,c
 10876  005C7A  5006               	movf	(??_isdigit+1)^0,w,c
 10877  005C7C  2208               	addwfc	(??_isdigit+3)^0,f,c
 10878  005C7E  5008               	movf	(??_isdigit+3)^0,w,c
 10879  005C80  E10A               	bnz	u9420
 10880  005C82  0E0A               	movlw	10
 10881  005C84  5C07               	subwf	(??_isdigit+2)^0,w,c
 10882  005C86  A0D8               	btfss	status,0,c
 10883  005C88  EF48  F02E         	goto	u9421
 10884  005C8C  EF4B  F02E         	goto	u9420
 10885  005C90                     u9421:
 10886  005C90  0E01               	movlw	1
 10887  005C92  EF4C  F02E         	goto	u9430
 10888  005C96                     u9420:
 10889  005C96  0E00               	movlw	0
 10890  005C98                     u9430:
 10891  005C98  6E03               	movwf	?_isdigit^0,c
 10892  005C9A  6A04               	clrf	(?_isdigit+1)^0,c
 10893  005C9C  0012               	return		;funcret
 10894  005C9E                     __end_of_isdigit:
 10895                           	callstack 0
 10896                           
 10897 ;; *************** function _isspace *****************
 10898 ;; Defined at:
 10899 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;  c               2    2[COMRAM] int 
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;		None
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  2    2[COMRAM] int 
 10906 ;; Registers used:
 10907 ;;		wreg, status,2, status,0
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10913 ;;      Params:         2       0       0       0       0       0       0       0       0
 10914 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10915 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10916 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10917 ;;Total ram usage:        7 bytes
 10918 ;; Hardware stack levels used: 1
 10919 ;; Hardware stack levels required when called: 2
 10920 ;; This function calls:
 10921 ;;		Nothing
 10922 ;; This function is called by:
 10923 ;;		_atoi
 10924 ;;		_strtof
 10925 ;; This function uses a non-reentrant model
 10926 ;;
 10927                           
 10928                           	psect	text37
 10929  0059C2                     __ptext37:
 10930                           	callstack 0
 10931  0059C2                     _isspace:
 10932                           	callstack 24
 10933  0059C2  0E01               	movlw	1
 10934  0059C4  6E09               	movwf	_isspace$1438^0,c
 10935  0059C6  0E20               	movlw	32
 10936  0059C8  1803               	xorwf	isspace@c^0,w,c
 10937  0059CA  1004               	iorwf	(isspace@c+1)^0,w,c
 10938  0059CC  B4D8               	btfsc	status,2,c
 10939  0059CE  EFEB  F02C         	goto	u9441
 10940  0059D2  EFED  F02C         	goto	u9440
 10941  0059D6                     u9441:
 10942  0059D6  EF06  F02D         	goto	l7216
 10943  0059DA                     u9440:
 10944  0059DA  0EF7               	movlw	247
 10945  0059DC  6E05               	movwf	??_isspace^0,c
 10946  0059DE  0EFF               	movlw	255
 10947  0059E0  6E06               	movwf	(??_isspace+1)^0,c
 10948  0059E2  C003  F007         	movff	isspace@c,??_isspace+2
 10949  0059E6  C004  F008         	movff	isspace@c+1,??_isspace+3
 10950  0059EA  5005               	movf	??_isspace^0,w,c
 10951  0059EC  2607               	addwf	(??_isspace+2)^0,f,c
 10952  0059EE  5006               	movf	(??_isspace+1)^0,w,c
 10953  0059F0  2208               	addwfc	(??_isspace+3)^0,f,c
 10954  0059F2  5008               	movf	(??_isspace+3)^0,w,c
 10955  0059F4  E109               	bnz	u9450
 10956  0059F6  0E05               	movlw	5
 10957  0059F8  5C07               	subwf	(??_isspace+2)^0,w,c
 10958  0059FA  A0D8               	btfss	status,0,c
 10959  0059FC  EF02  F02D         	goto	u9451
 10960  005A00  EF04  F02D         	goto	u9450
 10961  005A04                     u9451:
 10962  005A04  EF06  F02D         	goto	l7216
 10963  005A08                     u9450:
 10964  005A08  0E00               	movlw	0
 10965  005A0A  6E09               	movwf	_isspace$1438^0,c
 10966  005A0C                     l7216:
 10967  005A0C  C009  F003         	movff	_isspace$1438,?_isspace
 10968  005A10  6A04               	clrf	(?_isspace+1)^0,c
 10969  005A12  0012               	return		;funcret
 10970  005A14                     __end_of_isspace:
 10971                           	callstack 0
 10972                           
 10973 ;; *************** function ___wmul *****************
 10974 ;; Defined at:
 10975 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  multiplier      2    2[COMRAM] unsigned int 
 10978 ;;  multiplicand    2    4[COMRAM] unsigned int 
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;  product         2    6[COMRAM] unsigned int 
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  2    2[COMRAM] unsigned int 
 10983 ;; Registers used:
 10984 ;;		wreg, status,2, status,0, prodl, prodh
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/0
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10990 ;;      Params:         4       0       0       0       0       0       0       0       0
 10991 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10992 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10993 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10994 ;;Total ram usage:        6 bytes
 10995 ;; Hardware stack levels used: 1
 10996 ;; Hardware stack levels required when called: 2
 10997 ;; This function calls:
 10998 ;;		Nothing
 10999 ;; This function is called by:
 11000 ;;		_atoi
 11001 ;;		_strtof
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           
 11005                           	psect	text38
 11006  005D94                     __ptext38:
 11007                           	callstack 0
 11008  005D94                     ___wmul:
 11009                           	callstack 24
 11010  005D94  5003               	movf	___wmul@multiplier^0,w,c
 11011  005D96  0205               	mulwf	___wmul@multiplicand^0,c
 11012  005D98  CFF3 F007          	movff	prodl,___wmul@product
 11013  005D9C  CFF4 F008          	movff	prodh,___wmul@product+1
 11014  005DA0  5003               	movf	___wmul@multiplier^0,w,c
 11015  005DA2  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 11016  005DA4  50F3               	movf	243,w,c
 11017  005DA6  2608               	addwf	(___wmul@product+1)^0,f,c
 11018  005DA8  5004               	movf	(___wmul@multiplier+1)^0,w,c
 11019  005DAA  0205               	mulwf	___wmul@multiplicand^0,c
 11020  005DAC  50F3               	movf	243,w,c
 11021  005DAE  2608               	addwf	(___wmul@product+1)^0,f,c
 11022  005DB0  C007  F003         	movff	___wmul@product,?___wmul
 11023  005DB4  C008  F004         	movff	___wmul@product+1,?___wmul+1
 11024  005DB8  0012               	return		;funcret
 11025  005DBA                     __end_of___wmul:
 11026                           	callstack 0
 11027                           
 11028 ;; *************** function ___lmul *****************
 11029 ;; Defined at:
 11030 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;  multiplier      4    2[COMRAM] unsigned long 
 11033 ;;  multiplicand    4    6[COMRAM] unsigned long 
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;  product         4   10[COMRAM] unsigned long 
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  4    2[COMRAM] unsigned long 
 11038 ;; Registers used:
 11039 ;;		wreg, status,2, status,0
 11040 ;; Tracked objects:
 11041 ;;		On entry : 0/0
 11042 ;;		On exit  : 0/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11045 ;;      Params:         8       0       0       0       0       0       0       0       0
 11046 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11047 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11048 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11049 ;;Total ram usage:       12 bytes
 11050 ;; Hardware stack levels used: 1
 11051 ;; Hardware stack levels required when called: 2
 11052 ;; This function calls:
 11053 ;;		Nothing
 11054 ;; This function is called by:
 11055 ;;		_strtof
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           	psect	text39
 11060  00571E                     __ptext39:
 11061                           	callstack 0
 11062  00571E                     ___lmul:
 11063                           	callstack 26
 11064  00571E  0E00               	movlw	0
 11065  005720  6E0B               	movwf	___lmul@product^0,c
 11066  005722  0E00               	movlw	0
 11067  005724  6E0C               	movwf	(___lmul@product+1)^0,c
 11068  005726  0E00               	movlw	0
 11069  005728  6E0D               	movwf	(___lmul@product+2)^0,c
 11070  00572A  0E00               	movlw	0
 11071  00572C  6E0E               	movwf	(___lmul@product+3)^0,c
 11072  00572E                     l5230:
 11073  00572E  A003               	btfss	___lmul@multiplier^0,0,c
 11074  005730  EF9C  F02B         	goto	u6271
 11075  005734  EF9E  F02B         	goto	u6270
 11076  005738                     u6271:
 11077  005738  EFA6  F02B         	goto	l5234
 11078  00573C                     u6270:
 11079  00573C  5007               	movf	___lmul@multiplicand^0,w,c
 11080  00573E  260B               	addwf	___lmul@product^0,f,c
 11081  005740  5008               	movf	(___lmul@multiplicand+1)^0,w,c
 11082  005742  220C               	addwfc	(___lmul@product+1)^0,f,c
 11083  005744  5009               	movf	(___lmul@multiplicand+2)^0,w,c
 11084  005746  220D               	addwfc	(___lmul@product+2)^0,f,c
 11085  005748  500A               	movf	(___lmul@multiplicand+3)^0,w,c
 11086  00574A  220E               	addwfc	(___lmul@product+3)^0,f,c
 11087  00574C                     l5234:
 11088  00574C  90D8               	bcf	status,0,c
 11089  00574E  3607               	rlcf	___lmul@multiplicand^0,f,c
 11090  005750  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
 11091  005752  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
 11092  005754  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
 11093  005756  90D8               	bcf	status,0,c
 11094  005758  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
 11095  00575A  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
 11096  00575C  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
 11097  00575E  3203               	rrcf	___lmul@multiplier^0,f,c
 11098  005760  5003               	movf	___lmul@multiplier^0,w,c
 11099  005762  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
 11100  005764  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
 11101  005766  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
 11102  005768  A4D8               	btfss	status,2,c
 11103  00576A  EFB9  F02B         	goto	u6281
 11104  00576E  EFBB  F02B         	goto	u6280
 11105  005772                     u6281:
 11106  005772  EF97  F02B         	goto	l5230
 11107  005776                     u6280:
 11108  005776  C00B  F003         	movff	___lmul@product,?___lmul
 11109  00577A  C00C  F004         	movff	___lmul@product+1,?___lmul+1
 11110  00577E  C00D  F005         	movff	___lmul@product+2,?___lmul+2
 11111  005782  C00E  F006         	movff	___lmul@product+3,?___lmul+3
 11112  005786  0012               	return		;funcret
 11113  005788                     __end_of___lmul:
 11114                           	callstack 0
 11115                           
 11116 ;; *************** function ___flneg *****************
 11117 ;; Defined at:
 11118 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;  f1              4    2[COMRAM] unsigned long 
 11121 ;; Auto vars:     Size  Location     Type
 11122 ;;		None
 11123 ;; Return value:  Size  Location     Type
 11124 ;;                  4    2[COMRAM] unsigned long 
 11125 ;; Registers used:
 11126 ;;		wreg, status,2, status,0
 11127 ;; Tracked objects:
 11128 ;;		On entry : 0/0
 11129 ;;		On exit  : 0/0
 11130 ;;		Unchanged: 0/0
 11131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11132 ;;      Params:         4       0       0       0       0       0       0       0       0
 11133 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11134 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11135 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11136 ;;Total ram usage:        4 bytes
 11137 ;; Hardware stack levels used: 1
 11138 ;; Hardware stack levels required when called: 2
 11139 ;; This function calls:
 11140 ;;		Nothing
 11141 ;; This function is called by:
 11142 ;;		_efgtoa
 11143 ;;		_strtof
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text40
 11148  005C9E                     __ptext40:
 11149                           	callstack 0
 11150  005C9E                     ___flneg:
 11151                           	callstack 24
 11152  005C9E  5003               	movf	___flneg@f1^0,w,c
 11153  005CA0  1004               	iorwf	(___flneg@f1+1)^0,w,c
 11154  005CA2  1005               	iorwf	(___flneg@f1+2)^0,w,c
 11155  005CA4  1006               	iorwf	(___flneg@f1+3)^0,w,c
 11156  005CA6  B4D8               	btfsc	status,2,c
 11157  005CA8  EF58  F02E         	goto	u9091
 11158  005CAC  EF5A  F02E         	goto	u9090
 11159  005CB0                     u9091:
 11160  005CB0  EF62  F02E         	goto	l7066
 11161  005CB4                     u9090:
 11162  005CB4  0E00               	movlw	0
 11163  005CB6  1A03               	xorwf	___flneg@f1^0,f,c
 11164  005CB8  0E00               	movlw	0
 11165  005CBA  1A04               	xorwf	(___flneg@f1+1)^0,f,c
 11166  005CBC  0E00               	movlw	0
 11167  005CBE  1A05               	xorwf	(___flneg@f1+2)^0,f,c
 11168  005CC0  0E80               	movlw	128
 11169  005CC2  1A06               	xorwf	(___flneg@f1+3)^0,f,c
 11170  005CC4                     l7066:
 11171  005CC4  C003  F003         	movff	___flneg@f1,?___flneg
 11172  005CC8  C004  F004         	movff	___flneg@f1+1,?___flneg+1
 11173  005CCC  C005  F005         	movff	___flneg@f1+2,?___flneg+2
 11174  005CD0  C006  F006         	movff	___flneg@f1+3,?___flneg+3
 11175  005CD4  0012               	return		;funcret
 11176  005CD6                     __end_of___flneg:
 11177                           	callstack 0
 11178                           
 11179 ;; *************** function ___flge *****************
 11180 ;; Defined at:
 11181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;  ff1             4   69[COMRAM] unsigned long 
 11184 ;;  ff2             4   73[COMRAM] unsigned long 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;		None
 11187 ;; Return value:  Size  Location     Type
 11188 ;;		None               void
 11189 ;; Registers used:
 11190 ;;		wreg, status,2, status,0
 11191 ;; Tracked objects:
 11192 ;;		On entry : 0/0
 11193 ;;		On exit  : 0/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11196 ;;      Params:         8       0       0       0       0       0       0       0       0
 11197 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11198 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11199 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11200 ;;Total ram usage:       12 bytes
 11201 ;; Hardware stack levels used: 1
 11202 ;; Hardware stack levels required when called: 2
 11203 ;; This function calls:
 11204 ;;		Nothing
 11205 ;; This function is called by:
 11206 ;;		_main
 11207 ;;		_efgtoa
 11208 ;;		_strtof
 11209 ;; This function uses a non-reentrant model
 11210 ;;
 11211                           
 11212                           	psect	text41
 11213  004C10                     __ptext41:
 11214                           	callstack 0
 11215  004C10                     ___flge:
 11216                           	callstack 24
 11217  004C10  0E00               	movlw	0
 11218  004C12  1446               	andwf	___flge@ff1^0,w,c
 11219  004C14  6E4E               	movwf	??___flge^0,c
 11220  004C16  0E00               	movlw	0
 11221  004C18  1447               	andwf	(___flge@ff1+1)^0,w,c
 11222  004C1A  6E4F               	movwf	(??___flge+1)^0,c
 11223  004C1C  0E80               	movlw	128
 11224  004C1E  1448               	andwf	(___flge@ff1+2)^0,w,c
 11225  004C20  6E50               	movwf	(??___flge+2)^0,c
 11226  004C22  0E7F               	movlw	127
 11227  004C24  1449               	andwf	(___flge@ff1+3)^0,w,c
 11228  004C26  6E51               	movwf	(??___flge+3)^0,c
 11229  004C28  504E               	movf	??___flge^0,w,c
 11230  004C2A  104F               	iorwf	(??___flge+1)^0,w,c
 11231  004C2C  1050               	iorwf	(??___flge+2)^0,w,c
 11232  004C2E  1051               	iorwf	(??___flge+3)^0,w,c
 11233  004C30  A4D8               	btfss	status,2,c
 11234  004C32  EF1D  F026         	goto	u9041
 11235  004C36  EF1F  F026         	goto	u9040
 11236  004C3A                     u9041:
 11237  004C3A  EF27  F026         	goto	l7044
 11238  004C3E                     u9040:
 11239  004C3E  0E00               	movlw	0
 11240  004C40  6E46               	movwf	___flge@ff1^0,c
 11241  004C42  0E00               	movlw	0
 11242  004C44  6E47               	movwf	(___flge@ff1+1)^0,c
 11243  004C46  0E00               	movlw	0
 11244  004C48  6E48               	movwf	(___flge@ff1+2)^0,c
 11245  004C4A  0E00               	movlw	0
 11246  004C4C  6E49               	movwf	(___flge@ff1+3)^0,c
 11247  004C4E                     l7044:
 11248  004C4E  0E00               	movlw	0
 11249  004C50  144A               	andwf	___flge@ff2^0,w,c
 11250  004C52  6E4E               	movwf	??___flge^0,c
 11251  004C54  0E00               	movlw	0
 11252  004C56  144B               	andwf	(___flge@ff2+1)^0,w,c
 11253  004C58  6E4F               	movwf	(??___flge+1)^0,c
 11254  004C5A  0E80               	movlw	128
 11255  004C5C  144C               	andwf	(___flge@ff2+2)^0,w,c
 11256  004C5E  6E50               	movwf	(??___flge+2)^0,c
 11257  004C60  0E7F               	movlw	127
 11258  004C62  144D               	andwf	(___flge@ff2+3)^0,w,c
 11259  004C64  6E51               	movwf	(??___flge+3)^0,c
 11260  004C66  504E               	movf	??___flge^0,w,c
 11261  004C68  104F               	iorwf	(??___flge+1)^0,w,c
 11262  004C6A  1050               	iorwf	(??___flge+2)^0,w,c
 11263  004C6C  1051               	iorwf	(??___flge+3)^0,w,c
 11264  004C6E  A4D8               	btfss	status,2,c
 11265  004C70  EF3C  F026         	goto	u9051
 11266  004C74  EF3E  F026         	goto	u9050
 11267  004C78                     u9051:
 11268  004C78  EF46  F026         	goto	l7048
 11269  004C7C                     u9050:
 11270  004C7C  0E00               	movlw	0
 11271  004C7E  6E4A               	movwf	___flge@ff2^0,c
 11272  004C80  0E00               	movlw	0
 11273  004C82  6E4B               	movwf	(___flge@ff2+1)^0,c
 11274  004C84  0E00               	movlw	0
 11275  004C86  6E4C               	movwf	(___flge@ff2+2)^0,c
 11276  004C88  0E00               	movlw	0
 11277  004C8A  6E4D               	movwf	(___flge@ff2+3)^0,c
 11278  004C8C                     l7048:
 11279  004C8C  AE49               	btfss	(___flge@ff1+3)^0,7,c
 11280  004C8E  EF4B  F026         	goto	u9061
 11281  004C92  EF4D  F026         	goto	u9060
 11282  004C96                     u9061:
 11283  004C96  EF56  F026         	goto	l7052
 11284  004C9A                     u9060:
 11285  004C9A  6C46               	negf	___flge@ff1^0,c
 11286  004C9C  1E47               	comf	(___flge@ff1+1)^0,f,c
 11287  004C9E  B0D8               	btfsc	status,0,c
 11288  004CA0  2A47               	incf	(___flge@ff1+1)^0,f,c
 11289  004CA2  1E48               	comf	(___flge@ff1+2)^0,f,c
 11290  004CA4  B0D8               	btfsc	status,0,c
 11291  004CA6  2A48               	incf	(___flge@ff1+2)^0,f,c
 11292  004CA8  0E80               	movlw	128
 11293  004CAA  5649               	subfwb	(___flge@ff1+3)^0,f,c
 11294  004CAC                     l7052:
 11295  004CAC  AE4D               	btfss	(___flge@ff2+3)^0,7,c
 11296  004CAE  EF5B  F026         	goto	u9071
 11297  004CB2  EF5D  F026         	goto	u9070
 11298  004CB6                     u9071:
 11299  004CB6  EF66  F026         	goto	l484
 11300  004CBA                     u9070:
 11301  004CBA  6C4A               	negf	___flge@ff2^0,c
 11302  004CBC  1E4B               	comf	(___flge@ff2+1)^0,f,c
 11303  004CBE  B0D8               	btfsc	status,0,c
 11304  004CC0  2A4B               	incf	(___flge@ff2+1)^0,f,c
 11305  004CC2  1E4C               	comf	(___flge@ff2+2)^0,f,c
 11306  004CC4  B0D8               	btfsc	status,0,c
 11307  004CC6  2A4C               	incf	(___flge@ff2+2)^0,f,c
 11308  004CC8  0E80               	movlw	128
 11309  004CCA  564D               	subfwb	(___flge@ff2+3)^0,f,c
 11310  004CCC                     l484:
 11311  004CCC  0E00               	movlw	0
 11312  004CCE  1A46               	xorwf	___flge@ff1^0,f,c
 11313  004CD0  0E00               	movlw	0
 11314  004CD2  1A47               	xorwf	(___flge@ff1+1)^0,f,c
 11315  004CD4  0E00               	movlw	0
 11316  004CD6  1A48               	xorwf	(___flge@ff1+2)^0,f,c
 11317  004CD8  0E80               	movlw	128
 11318  004CDA  1A49               	xorwf	(___flge@ff1+3)^0,f,c
 11319  004CDC  0E00               	movlw	0
 11320  004CDE  1A4A               	xorwf	___flge@ff2^0,f,c
 11321  004CE0  0E00               	movlw	0
 11322  004CE2  1A4B               	xorwf	(___flge@ff2+1)^0,f,c
 11323  004CE4  0E00               	movlw	0
 11324  004CE6  1A4C               	xorwf	(___flge@ff2+2)^0,f,c
 11325  004CE8  0E80               	movlw	128
 11326  004CEA  1A4D               	xorwf	(___flge@ff2+3)^0,f,c
 11327  004CEC  504A               	movf	___flge@ff2^0,w,c
 11328  004CEE  5C46               	subwf	___flge@ff1^0,w,c
 11329  004CF0  504B               	movf	(___flge@ff2+1)^0,w,c
 11330  004CF2  5847               	subwfb	(___flge@ff1+1)^0,w,c
 11331  004CF4  504C               	movf	(___flge@ff2+2)^0,w,c
 11332  004CF6  5848               	subwfb	(___flge@ff1+2)^0,w,c
 11333  004CF8  504D               	movf	(___flge@ff2+3)^0,w,c
 11334  004CFA  5849               	subwfb	(___flge@ff1+3)^0,w,c
 11335  004CFC  B0D8               	btfsc	status,0,c
 11336  004CFE  EF83  F026         	goto	u9081
 11337  004D02  EF85  F026         	goto	u9080
 11338  004D06                     u9081:
 11339  004D06  EF88  F026         	goto	l7058
 11340  004D0A                     u9080:
 11341  004D0A  90D8               	bcf	status,0,c
 11342  004D0C  EF89  F026         	goto	l489
 11343  004D10                     l7058:
 11344  004D10  80D8               	bsf	status,0,c
 11345  004D12                     l489:
 11346  004D12  0012               	return		;funcret
 11347  004D14                     __end_of___flge:
 11348                           	callstack 0
 11349                           
 11350 ;; *************** function ___fleq *****************
 11351 ;; Defined at:
 11352 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;  ff1             4    2[COMRAM] unsigned long 
 11355 ;;  ff2             4    6[COMRAM] unsigned long 
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;		None
 11358 ;; Return value:  Size  Location     Type
 11359 ;;		None               void
 11360 ;; Registers used:
 11361 ;;		wreg, status,2, status,0
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11367 ;;      Params:         8       0       0       0       0       0       0       0       0
 11368 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11369 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11370 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11371 ;;Total ram usage:       12 bytes
 11372 ;; Hardware stack levels used: 1
 11373 ;; Hardware stack levels required when called: 2
 11374 ;; This function calls:
 11375 ;;		Nothing
 11376 ;; This function is called by:
 11377 ;;		_efgtoa
 11378 ;;		_strtof
 11379 ;; This function uses a non-reentrant model
 11380 ;;
 11381                           
 11382                           	psect	text42
 11383  00546A                     __ptext42:
 11384                           	callstack 0
 11385  00546A                     ___fleq:
 11386                           	callstack 24
 11387  00546A  0E00               	movlw	0
 11388  00546C  1403               	andwf	___fleq@ff1^0,w,c
 11389  00546E  6E0B               	movwf	??___fleq^0,c
 11390  005470  0E00               	movlw	0
 11391  005472  1404               	andwf	(___fleq@ff1+1)^0,w,c
 11392  005474  6E0C               	movwf	(??___fleq+1)^0,c
 11393  005476  0E80               	movlw	128
 11394  005478  1405               	andwf	(___fleq@ff1+2)^0,w,c
 11395  00547A  6E0D               	movwf	(??___fleq+2)^0,c
 11396  00547C  0E7F               	movlw	127
 11397  00547E  1406               	andwf	(___fleq@ff1+3)^0,w,c
 11398  005480  6E0E               	movwf	(??___fleq+3)^0,c
 11399  005482  500B               	movf	??___fleq^0,w,c
 11400  005484  100C               	iorwf	(??___fleq+1)^0,w,c
 11401  005486  100D               	iorwf	(??___fleq+2)^0,w,c
 11402  005488  100E               	iorwf	(??___fleq+3)^0,w,c
 11403  00548A  A4D8               	btfss	status,2,c
 11404  00548C  EF4A  F02A         	goto	u9011
 11405  005490  EF4C  F02A         	goto	u9010
 11406  005494                     u9011:
 11407  005494  EF54  F02A         	goto	l7028
 11408  005498                     u9010:
 11409  005498  0E00               	movlw	0
 11410  00549A  6E03               	movwf	___fleq@ff1^0,c
 11411  00549C  0E00               	movlw	0
 11412  00549E  6E04               	movwf	(___fleq@ff1+1)^0,c
 11413  0054A0  0E00               	movlw	0
 11414  0054A2  6E05               	movwf	(___fleq@ff1+2)^0,c
 11415  0054A4  0E00               	movlw	0
 11416  0054A6  6E06               	movwf	(___fleq@ff1+3)^0,c
 11417  0054A8                     l7028:
 11418  0054A8  0E00               	movlw	0
 11419  0054AA  1407               	andwf	___fleq@ff2^0,w,c
 11420  0054AC  6E0B               	movwf	??___fleq^0,c
 11421  0054AE  0E00               	movlw	0
 11422  0054B0  1408               	andwf	(___fleq@ff2+1)^0,w,c
 11423  0054B2  6E0C               	movwf	(??___fleq+1)^0,c
 11424  0054B4  0E80               	movlw	128
 11425  0054B6  1409               	andwf	(___fleq@ff2+2)^0,w,c
 11426  0054B8  6E0D               	movwf	(??___fleq+2)^0,c
 11427  0054BA  0E7F               	movlw	127
 11428  0054BC  140A               	andwf	(___fleq@ff2+3)^0,w,c
 11429  0054BE  6E0E               	movwf	(??___fleq+3)^0,c
 11430  0054C0  500B               	movf	??___fleq^0,w,c
 11431  0054C2  100C               	iorwf	(??___fleq+1)^0,w,c
 11432  0054C4  100D               	iorwf	(??___fleq+2)^0,w,c
 11433  0054C6  100E               	iorwf	(??___fleq+3)^0,w,c
 11434  0054C8  A4D8               	btfss	status,2,c
 11435  0054CA  EF69  F02A         	goto	u9021
 11436  0054CE  EF6B  F02A         	goto	u9020
 11437  0054D2                     u9021:
 11438  0054D2  EF73  F02A         	goto	l7032
 11439  0054D6                     u9020:
 11440  0054D6  0E00               	movlw	0
 11441  0054D8  6E07               	movwf	___fleq@ff2^0,c
 11442  0054DA  0E00               	movlw	0
 11443  0054DC  6E08               	movwf	(___fleq@ff2+1)^0,c
 11444  0054DE  0E00               	movlw	0
 11445  0054E0  6E09               	movwf	(___fleq@ff2+2)^0,c
 11446  0054E2  0E00               	movlw	0
 11447  0054E4  6E0A               	movwf	(___fleq@ff2+3)^0,c
 11448  0054E6                     l7032:
 11449  0054E6  5007               	movf	___fleq@ff2^0,w,c
 11450  0054E8  1803               	xorwf	___fleq@ff1^0,w,c
 11451  0054EA  E10F               	bnz	u9030
 11452  0054EC  5008               	movf	(___fleq@ff2+1)^0,w,c
 11453  0054EE  1804               	xorwf	(___fleq@ff1+1)^0,w,c
 11454  0054F0  E10C               	bnz	u9030
 11455  0054F2  5009               	movf	(___fleq@ff2+2)^0,w,c
 11456  0054F4  1805               	xorwf	(___fleq@ff1+2)^0,w,c
 11457  0054F6  E109               	bnz	u9030
 11458  0054F8  500A               	movf	(___fleq@ff2+3)^0,w,c
 11459  0054FA  1806               	xorwf	(___fleq@ff1+3)^0,w,c
 11460  0054FC  B4D8               	btfsc	status,2,c
 11461  0054FE  EF83  F02A         	goto	u9031
 11462  005502  EF85  F02A         	goto	u9030
 11463  005506                     u9031:
 11464  005506  EF88  F02A         	goto	l7036
 11465  00550A                     u9030:
 11466  00550A  90D8               	bcf	status,0,c
 11467  00550C  EF89  F02A         	goto	l478
 11468  005510                     l7036:
 11469  005510  80D8               	bsf	status,0,c
 11470  005512                     l478:
 11471  005512  0012               	return		;funcret
 11472  005514                     __end_of___fleq:
 11473                           	callstack 0
 11474                           
 11475 ;; *************** function _UART_Write_Text *****************
 11476 ;; Defined at:
 11477 ;;		line 44 in file "UART_LIB.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;  text            2    3[COMRAM] PTR unsigned char 
 11480 ;;		 -> strUART(50), 
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;		None
 11483 ;; Return value:  Size  Location     Type
 11484 ;;                  1    wreg      void 
 11485 ;; Registers used:
 11486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11487 ;; Tracked objects:
 11488 ;;		On entry : 0/0
 11489 ;;		On exit  : 0/0
 11490 ;;		Unchanged: 0/0
 11491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11492 ;;      Params:         2       0       0       0       0       0       0       0       0
 11493 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11494 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11495 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11496 ;;Total ram usage:        2 bytes
 11497 ;; Hardware stack levels used: 1
 11498 ;; Hardware stack levels required when called: 3
 11499 ;; This function calls:
 11500 ;;		_UART_Write_Chr
 11501 ;; This function is called by:
 11502 ;;		_main
 11503 ;; This function uses a non-reentrant model
 11504 ;;
 11505                           
 11506                           	psect	text43
 11507  005D3E                     __ptext43:
 11508                           	callstack 0
 11509  005D3E                     _UART_Write_Text:
 11510                           	callstack 27
 11511  005D3E                     
 11512                           ;UART_LIB.c: 45:     while(*text){
 11513  005D3E  EFAA  F02E         	goto	l6114
 11514  005D42                     l6110:
 11515                           
 11516                           ;UART_LIB.c: 46:         UART_Write_Chr(*text);
 11517  005D42  C004  FFD9         	movff	UART_Write_Text@text,fsr2l
 11518  005D46  C005  FFDA         	movff	UART_Write_Text@text+1,fsr2h
 11519  005D4A  50DF               	movf	indf2,w,c
 11520  005D4C  ECEE  F02E         	call	_UART_Write_Chr
 11521  005D50                     
 11522                           ;UART_LIB.c: 47:         text++;
 11523  005D50  4A04               	infsnz	UART_Write_Text@text^0,f,c
 11524  005D52  2A05               	incf	(UART_Write_Text@text+1)^0,f,c
 11525  005D54                     l6114:
 11526                           
 11527                           ;UART_LIB.c: 45:     while(*text){
 11528  005D54  C004  FFD9         	movff	UART_Write_Text@text,fsr2l
 11529  005D58  C005  FFDA         	movff	UART_Write_Text@text+1,fsr2h
 11530  005D5C  50DF               	movf	indf2,w,c
 11531  005D5E  A4D8               	btfss	status,2,c
 11532  005D60  EFB4  F02E         	goto	u7771
 11533  005D64  EFB6  F02E         	goto	u7770
 11534  005D68                     u7771:
 11535  005D68  EFA1  F02E         	goto	l6110
 11536  005D6C                     u7770:
 11537  005D6C  0012               	return		;funcret
 11538  005D6E                     __end_of_UART_Write_Text:
 11539                           	callstack 0
 11540                           
 11541 ;; *************** function _UART_Write_Chr *****************
 11542 ;; Defined at:
 11543 ;;		line 40 in file "UART_LIB.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;  letter          1    wreg     unsigned char 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  letter          1    2[COMRAM] unsigned char 
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0
 11558 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11560 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11561 ;;Total ram usage:        1 bytes
 11562 ;; Hardware stack levels used: 1
 11563 ;; Hardware stack levels required when called: 2
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_UART_Write_Text
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           	psect	text44
 11572  005DDC                     __ptext44:
 11573                           	callstack 0
 11574  005DDC                     _UART_Write_Chr:
 11575                           	callstack 27
 11576                           
 11577                           ;incstack = 0
 11578                           ;UART_Write_Chr@letter stored from wreg
 11579  005DDC  6E03               	movwf	UART_Write_Chr@letter^0,c
 11580  005DDE                     l157:
 11581  005DDE  A2AC               	btfss	172,1,c	;volatile
 11582  005DE0  EFF4  F02E         	goto	u6611
 11583  005DE4  EFF6  F02E         	goto	u6610
 11584  005DE8                     u6611:
 11585  005DE8  EFEF  F02E         	goto	l157
 11586  005DEC                     u6610:
 11587  005DEC                     
 11588                           ;UART_LIB.c: 42:     TXREG = letter;
 11589  005DEC  C003  FFAD         	movff	UART_Write_Chr@letter,4013	;volatile
 11590  005DF0  0012               	return		;funcret
 11591  005DF2                     __end_of_UART_Write_Chr:
 11592                           	callstack 0
 11593                           
 11594 ;; *************** function _UART_Init *****************
 11595 ;; Defined at:
 11596 ;;		line 5 in file "UART_LIB.c"
 11597 ;; Parameters:    Size  Location     Type
 11598 ;;  config          8   15[COMRAM] struct .
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;  spbrg_val       4   27[COMRAM] unsigned long 
 11601 ;; Return value:  Size  Location     Type
 11602 ;;                  1    wreg      void 
 11603 ;; Registers used:
 11604 ;;		wreg, status,2, status,0, cstack
 11605 ;; Tracked objects:
 11606 ;;		On entry : 0/0
 11607 ;;		On exit  : 0/0
 11608 ;;		Unchanged: 0/0
 11609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11610 ;;      Params:         8       0       0       0       0       0       0       0       0
 11611 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11612 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11613 ;;      Totals:        16       0       0       0       0       0       0       0       0
 11614 ;;Total ram usage:       16 bytes
 11615 ;; Hardware stack levels used: 1
 11616 ;; Hardware stack levels required when called: 3
 11617 ;; This function calls:
 11618 ;;		___lldiv
 11619 ;; This function is called by:
 11620 ;;		_main
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           	psect	text45
 11625  004E12                     __ptext45:
 11626                           	callstack 0
 11627  004E12                     _UART_Init:
 11628                           	callstack 27
 11629  004E12                     
 11630                           ;UART_LIB.c: 7:     unsigned long spbrg_val = (20000000UL / (16 * config.baud_rate)) - 1
      +                          ;
 11631  004E12  0E00               	movlw	0
 11632  004E14  6E03               	movwf	___lldiv@dividend^0,c
 11633  004E16  0E2D               	movlw	45
 11634  004E18  6E04               	movwf	(___lldiv@dividend+1)^0,c
 11635  004E1A  0E31               	movlw	49
 11636  004E1C  6E05               	movwf	(___lldiv@dividend+2)^0,c
 11637  004E1E  0E01               	movlw	1
 11638  004E20  6E06               	movwf	(___lldiv@dividend+3)^0,c
 11639  004E22  C010  F018         	movff	UART_Init@config,??_UART_Init
 11640  004E26  C011  F019         	movff	UART_Init@config+1,??_UART_Init+1
 11641  004E2A  C012  F01A         	movff	UART_Init@config+2,??_UART_Init+2
 11642  004E2E  C013  F01B         	movff	UART_Init@config+3,??_UART_Init+3
 11643  004E32  0E04               	movlw	4
 11644  004E34                     u7615:
 11645  004E34  90D8               	bcf	status,0,c
 11646  004E36  3618               	rlcf	??_UART_Init^0,f,c
 11647  004E38  3619               	rlcf	(??_UART_Init+1)^0,f,c
 11648  004E3A  361A               	rlcf	(??_UART_Init+2)^0,f,c
 11649  004E3C  361B               	rlcf	(??_UART_Init+3)^0,f,c
 11650  004E3E  2EE8               	decfsz	wreg,f,c
 11651  004E40  EF1A  F027         	goto	u7615
 11652  004E44  C018  F007         	movff	??_UART_Init,___lldiv@divisor
 11653  004E48  C019  F008         	movff	??_UART_Init+1,___lldiv@divisor+1
 11654  004E4C  C01A  F009         	movff	??_UART_Init+2,___lldiv@divisor+2
 11655  004E50  C01B  F00A         	movff	??_UART_Init+3,___lldiv@divisor+3
 11656  004E54  EC8A  F02A         	call	___lldiv	;wreg free
 11657  004E58  0EFF               	movlw	255
 11658  004E5A  2403               	addwf	?___lldiv^0,w,c
 11659  004E5C  6E1C               	movwf	UART_Init@spbrg_val^0,c
 11660  004E5E  0EFF               	movlw	255
 11661  004E60  2004               	addwfc	(?___lldiv+1)^0,w,c
 11662  004E62  6E1D               	movwf	(UART_Init@spbrg_val+1)^0,c
 11663  004E64  0EFF               	movlw	255
 11664  004E66  2005               	addwfc	(?___lldiv+2)^0,w,c
 11665  004E68  6E1E               	movwf	(UART_Init@spbrg_val+2)^0,c
 11666  004E6A  0EFF               	movlw	255
 11667  004E6C  2006               	addwfc	(?___lldiv+3)^0,w,c
 11668  004E6E  6E1F               	movwf	(UART_Init@spbrg_val+3)^0,c
 11669  004E70                     
 11670                           ;UART_LIB.c: 8:     SPBRG = (unsigned char)(spbrg_val);
 11671  004E70  C01C  FFAF         	movff	UART_Init@spbrg_val,4015	;volatile
 11672  004E74                     
 11673                           ;UART_LIB.c: 11:     TXSTA = 0x24;
 11674  004E74  0E24               	movlw	36
 11675  004E76  6EAC               	movwf	172,c	;volatile
 11676  004E78                     
 11677                           ;UART_LIB.c: 12:     RCSTA = 0x90;
 11678  004E78  0E90               	movlw	144
 11679  004E7A  6EAB               	movwf	171,c	;volatile
 11680  004E7C                     
 11681                           ;UART_LIB.c: 15:     TX9 = config.data_bits == 9 ? 1 : 0;
 11682  004E7C  0E09               	movlw	9
 11683  004E7E  1814               	xorwf	(UART_Init@config+4)^0,w,c
 11684  004E80  B4D8               	btfsc	status,2,c
 11685  004E82  EF45  F027         	goto	u7621
 11686  004E86  EF48  F027         	goto	u7620
 11687  004E8A                     u7621:
 11688  004E8A  8CAC               	bsf	4012,6,c	;volatile
 11689  004E8C  EF49  F027         	goto	u7635
 11690  004E90                     u7620:
 11691  004E90  9CAC               	bcf	4012,6,c	;volatile
 11692  004E92                     u7635:
 11693  004E92                     
 11694                           ;UART_LIB.c: 16:     RX9 = config.data_bits == 9 ? 1 : 0;
 11695  004E92  0E09               	movlw	9
 11696  004E94  1814               	xorwf	(UART_Init@config+4)^0,w,c
 11697  004E96  B4D8               	btfsc	status,2,c
 11698  004E98  EF50  F027         	goto	u7641
 11699  004E9C  EF53  F027         	goto	u7640
 11700  004EA0                     u7641:
 11701  004EA0  8CAB               	bsf	4011,6,c	;volatile
 11702  004EA2  EF54  F027         	goto	u7655
 11703  004EA6                     u7640:
 11704  004EA6  9CAB               	bcf	4011,6,c	;volatile
 11705  004EA8                     u7655:
 11706  004EA8                     
 11707                           ;UART_LIB.c: 17:     TXEN = 1;
 11708  004EA8  8AAC               	bsf	4012,5,c	;volatile
 11709  004EAA                     
 11710                           ;UART_LIB.c: 18:     SYNC = 0;
 11711  004EAA  98AC               	bcf	4012,4,c	;volatile
 11712  004EAC                     
 11713                           ;UART_LIB.c: 19:     SPEN = 1;
 11714  004EAC  8EAB               	bsf	4011,7,c	;volatile
 11715                           
 11716                           ;UART_LIB.c: 22:     switch (config.parity) {
 11717  004EAE  EF67  F027         	goto	l6010
 11718  004EB2                     l150:
 11719                           
 11720                           ;UART_LIB.c: 24:             BRGH = 1;
 11721  004EB2  84AC               	bsf	4012,2,c	;volatile
 11722                           
 11723                           ;UART_LIB.c: 25:             TX9D = 0;
 11724  004EB4  90AC               	bcf	4012,0,c	;volatile
 11725  004EB6                     l6002:
 11726                           
 11727                           ;UART_LIB.c: 26:             RCSTA |= 0x02;
 11728  004EB6  82AB               	bsf	171,1,c	;volatile
 11729                           
 11730                           ;UART_LIB.c: 27:             break;
 11731  004EB8  EF7C  F027         	goto	l154
 11732  004EBC                     l152:
 11733                           
 11734                           ;UART_LIB.c: 29:             BRGH = 1;
 11735  004EBC  84AC               	bsf	4012,2,c	;volatile
 11736                           
 11737                           ;UART_LIB.c: 30:             TX9D = 1;
 11738  004EBE  80AC               	bsf	4012,0,c	;volatile
 11739  004EC0  EF5B  F027         	goto	l6002
 11740  004EC4                     l153:
 11741                           
 11742                           ;UART_LIB.c: 34:             BRGH = 1;
 11743  004EC4  84AC               	bsf	4012,2,c	;volatile
 11744                           
 11745                           ;UART_LIB.c: 35:             TX9D = 0;
 11746  004EC6  90AC               	bcf	4012,0,c	;volatile
 11747  004EC8                     
 11748                           ;UART_LIB.c: 36:             RCSTA &= ~0x02;
 11749  004EC8  92AB               	bcf	171,1,c	;volatile
 11750                           
 11751                           ;UART_LIB.c: 37:             break;
 11752  004ECA  EF7C  F027         	goto	l154
 11753  004ECE                     l6010:
 11754  004ECE  5015               	movf	(UART_Init@config+5)^0,w,c
 11755  004ED0  6E18               	movwf	??_UART_Init^0,c
 11756  004ED2  6A19               	clrf	(??_UART_Init+1)^0,c
 11757                           
 11758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11759                           ; Switch size 1, requested type "simple"
 11760                           ; Number of cases is 1, Range of values is 0 to 0
 11761                           ; switch strategies available:
 11762                           ; Name         Instructions Cycles
 11763                           ; simple_byte            4     3 (average)
 11764                           ;	Chosen strategy is simple_byte
 11765  004ED4  5019               	movf	(??_UART_Init+1)^0,w,c
 11766  004ED6  0A00               	xorlw	0	; case 0
 11767  004ED8  B4D8               	btfsc	status,2,c
 11768  004EDA  EF71  F027         	goto	l8494
 11769  004EDE  EF62  F027         	goto	l153
 11770  004EE2                     l8494:
 11771                           
 11772                           ; Switch size 1, requested type "simple"
 11773                           ; Number of cases is 2, Range of values is 1 to 2
 11774                           ; switch strategies available:
 11775                           ; Name         Instructions Cycles
 11776                           ; simple_byte            7     4 (average)
 11777                           ;	Chosen strategy is simple_byte
 11778  004EE2  5018               	movf	??_UART_Init^0,w,c
 11779  004EE4  0A01               	xorlw	1	; case 1
 11780  004EE6  B4D8               	btfsc	status,2,c
 11781  004EE8  EF59  F027         	goto	l150
 11782  004EEC  0A03               	xorlw	3	; case 2
 11783  004EEE  B4D8               	btfsc	status,2,c
 11784  004EF0  EF5E  F027         	goto	l152
 11785  004EF4  EF62  F027         	goto	l153
 11786  004EF8                     l154:
 11787  004EF8  0012               	return		;funcret
 11788  004EFA                     __end_of_UART_Init:
 11789                           	callstack 0
 11790                           
 11791 ;; *************** function ___lldiv *****************
 11792 ;; Defined at:
 11793 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
 11794 ;; Parameters:    Size  Location     Type
 11795 ;;  dividend        4    2[COMRAM] unsigned long 
 11796 ;;  divisor         4    6[COMRAM] unsigned long 
 11797 ;; Auto vars:     Size  Location     Type
 11798 ;;  quotient        4   10[COMRAM] unsigned long 
 11799 ;;  counter         1   14[COMRAM] unsigned char 
 11800 ;; Return value:  Size  Location     Type
 11801 ;;                  4    2[COMRAM] unsigned long 
 11802 ;; Registers used:
 11803 ;;		wreg, status,2, status,0
 11804 ;; Tracked objects:
 11805 ;;		On entry : 0/0
 11806 ;;		On exit  : 0/0
 11807 ;;		Unchanged: 0/0
 11808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11809 ;;      Params:         8       0       0       0       0       0       0       0       0
 11810 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11811 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11812 ;;      Totals:        13       0       0       0       0       0       0       0       0
 11813 ;;Total ram usage:       13 bytes
 11814 ;; Hardware stack levels used: 1
 11815 ;; Hardware stack levels required when called: 2
 11816 ;; This function calls:
 11817 ;;		Nothing
 11818 ;; This function is called by:
 11819 ;;		_UART_Init
 11820 ;; This function uses a non-reentrant model
 11821 ;;
 11822                           
 11823                           	psect	text46
 11824  005514                     __ptext46:
 11825                           	callstack 0
 11826  005514                     ___lldiv:
 11827                           	callstack 27
 11828  005514  0E00               	movlw	0
 11829  005516  6E0B               	movwf	___lldiv@quotient^0,c
 11830  005518  0E00               	movlw	0
 11831  00551A  6E0C               	movwf	(___lldiv@quotient+1)^0,c
 11832  00551C  0E00               	movlw	0
 11833  00551E  6E0D               	movwf	(___lldiv@quotient+2)^0,c
 11834  005520  0E00               	movlw	0
 11835  005522  6E0E               	movwf	(___lldiv@quotient+3)^0,c
 11836  005524  5007               	movf	___lldiv@divisor^0,w,c
 11837  005526  1008               	iorwf	(___lldiv@divisor+1)^0,w,c
 11838  005528  1009               	iorwf	(___lldiv@divisor+2)^0,w,c
 11839  00552A  100A               	iorwf	(___lldiv@divisor+3)^0,w,c
 11840  00552C  B4D8               	btfsc	status,2,c
 11841  00552E  EF9B  F02A         	goto	u6621
 11842  005532  EF9D  F02A         	goto	u6620
 11843  005536                     u6621:
 11844  005536  EFD3  F02A         	goto	l246
 11845  00553A                     u6620:
 11846  00553A  0E01               	movlw	1
 11847  00553C  6E0F               	movwf	___lldiv@counter^0,c
 11848  00553E  EFA7  F02A         	goto	l5496
 11849  005542                     l5494:
 11850  005542  90D8               	bcf	status,0,c
 11851  005544  3607               	rlcf	___lldiv@divisor^0,f,c
 11852  005546  3608               	rlcf	(___lldiv@divisor+1)^0,f,c
 11853  005548  3609               	rlcf	(___lldiv@divisor+2)^0,f,c
 11854  00554A  360A               	rlcf	(___lldiv@divisor+3)^0,f,c
 11855  00554C  2A0F               	incf	___lldiv@counter^0,f,c
 11856  00554E                     l5496:
 11857  00554E  AE0A               	btfss	(___lldiv@divisor+3)^0,7,c
 11858  005550  EFAC  F02A         	goto	u6631
 11859  005554  EFAE  F02A         	goto	u6630
 11860  005558                     u6631:
 11861  005558  EFA1  F02A         	goto	l5494
 11862  00555C                     u6630:
 11863  00555C                     l5498:
 11864  00555C  90D8               	bcf	status,0,c
 11865  00555E  360B               	rlcf	___lldiv@quotient^0,f,c
 11866  005560  360C               	rlcf	(___lldiv@quotient+1)^0,f,c
 11867  005562  360D               	rlcf	(___lldiv@quotient+2)^0,f,c
 11868  005564  360E               	rlcf	(___lldiv@quotient+3)^0,f,c
 11869  005566  5007               	movf	___lldiv@divisor^0,w,c
 11870  005568  5C03               	subwf	___lldiv@dividend^0,w,c
 11871  00556A  5008               	movf	(___lldiv@divisor+1)^0,w,c
 11872  00556C  5804               	subwfb	(___lldiv@dividend+1)^0,w,c
 11873  00556E  5009               	movf	(___lldiv@divisor+2)^0,w,c
 11874  005570  5805               	subwfb	(___lldiv@dividend+2)^0,w,c
 11875  005572  500A               	movf	(___lldiv@divisor+3)^0,w,c
 11876  005574  5806               	subwfb	(___lldiv@dividend+3)^0,w,c
 11877  005576  A0D8               	btfss	status,0,c
 11878  005578  EFC0  F02A         	goto	u6641
 11879  00557C  EFC2  F02A         	goto	u6640
 11880  005580                     u6641:
 11881  005580  EFCB  F02A         	goto	l5506
 11882  005584                     u6640:
 11883  005584  5007               	movf	___lldiv@divisor^0,w,c
 11884  005586  5E03               	subwf	___lldiv@dividend^0,f,c
 11885  005588  5008               	movf	(___lldiv@divisor+1)^0,w,c
 11886  00558A  5A04               	subwfb	(___lldiv@dividend+1)^0,f,c
 11887  00558C  5009               	movf	(___lldiv@divisor+2)^0,w,c
 11888  00558E  5A05               	subwfb	(___lldiv@dividend+2)^0,f,c
 11889  005590  500A               	movf	(___lldiv@divisor+3)^0,w,c
 11890  005592  5A06               	subwfb	(___lldiv@dividend+3)^0,f,c
 11891  005594  800B               	bsf	___lldiv@quotient^0,0,c
 11892  005596                     l5506:
 11893  005596  90D8               	bcf	status,0,c
 11894  005598  320A               	rrcf	(___lldiv@divisor+3)^0,f,c
 11895  00559A  3209               	rrcf	(___lldiv@divisor+2)^0,f,c
 11896  00559C  3208               	rrcf	(___lldiv@divisor+1)^0,f,c
 11897  00559E  3207               	rrcf	___lldiv@divisor^0,f,c
 11898  0055A0  2E0F               	decfsz	___lldiv@counter^0,f,c
 11899  0055A2  EFAE  F02A         	goto	l5498
 11900  0055A6                     l246:
 11901  0055A6  C00B  F003         	movff	___lldiv@quotient,?___lldiv
 11902  0055AA  C00C  F004         	movff	___lldiv@quotient+1,?___lldiv+1
 11903  0055AE  C00D  F005         	movff	___lldiv@quotient+2,?___lldiv+2
 11904  0055B2  C00E  F006         	movff	___lldiv@quotient+3,?___lldiv+3
 11905  0055B6  0012               	return		;funcret
 11906  0055B8                     __end_of___lldiv:
 11907                           	callstack 0
 11908                           
 11909 ;; *************** function _PWM1_Start *****************
 11910 ;; Defined at:
 11911 ;;		line 68 in file "PWM_LIB.c"
 11912 ;; Parameters:    Size  Location     Type
 11913 ;;		None
 11914 ;; Auto vars:     Size  Location     Type
 11915 ;;		None
 11916 ;; Return value:  Size  Location     Type
 11917 ;;                  1    wreg      void 
 11918 ;; Registers used:
 11919 ;;		None
 11920 ;; Tracked objects:
 11921 ;;		On entry : 0/0
 11922 ;;		On exit  : 0/0
 11923 ;;		Unchanged: 0/0
 11924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11925 ;;      Params:         0       0       0       0       0       0       0       0       0
 11926 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11927 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11928 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11929 ;;Total ram usage:        0 bytes
 11930 ;; Hardware stack levels used: 1
 11931 ;; Hardware stack levels required when called: 2
 11932 ;; This function calls:
 11933 ;;		Nothing
 11934 ;; This function is called by:
 11935 ;;		_main
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           	psect	text47
 11940  005E0A                     __ptext47:
 11941                           	callstack 0
 11942  005E0A                     _PWM1_Start:
 11943                           	callstack 28
 11944  005E0A                     
 11945                           ;PWM_LIB.c: 69:     T2CONbits.TMR2ON = 1;
 11946  005E0A  84CA               	bsf	202,2,c	;volatile
 11947  005E0C  0012               	return		;funcret
 11948  005E0E                     __end_of_PWM1_Start:
 11949                           	callstack 0
 11950                           
 11951 ;; *************** function _PWM1_Set_Duty *****************
 11952 ;; Defined at:
 11953 ;;		line 60 in file "PWM_LIB.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;  duty            1    wreg     unsigned char 
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;  duty            1   15[BANK0 ] unsigned char 
 11958 ;;  val             4   16[BANK0 ] float 
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  1    wreg      void 
 11961 ;; Registers used:
 11962 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 0/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11968 ;;      Params:         0       0       0       0       0       0       0       0       0
 11969 ;;      Locals:         0       5       0       0       0       0       0       0       0
 11970 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11971 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11972 ;;Total ram usage:        5 bytes
 11973 ;; Hardware stack levels used: 1
 11974 ;; Hardware stack levels required when called: 3
 11975 ;; This function calls:
 11976 ;;		___fldiv
 11977 ;;		___flmul
 11978 ;;		___fltol
 11979 ;;		___xxtofl
 11980 ;; This function is called by:
 11981 ;;		_main
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           	psect	text48
 11986  005302                     __ptext48:
 11987                           	callstack 0
 11988  005302                     _PWM1_Set_Duty:
 11989                           	callstack 27
 11990                           
 11991                           ;incstack = 0
 11992                           ;PWM1_Set_Duty@duty stored from wreg
 11993  005302  0100               	movlb	0	; () banked
 11994  005304  6F6F               	movwf	PWM1_Set_Duty@duty& (0+255),b
 11995  005306                     
 11996                           ;PWM_LIB.c: 61:     float val = duty*reg10bits/100.0;
 11997  005306  C118  F031         	movff	_reg10bits,___flmul@a
 11998  00530A  C119  F032         	movff	_reg10bits+1,___flmul@a+1
 11999  00530E  C11A  F033         	movff	_reg10bits+2,___flmul@a+2
 12000  005312  C11B  F034         	movff	_reg10bits+3,___flmul@a+3
 12001  005316  0100               	movlb	0	; () banked
 12002  005318  516F               	movf	PWM1_Set_Duty@duty& (0+255),w,b
 12003  00531A  6E07               	movwf	___xxtofl@val^0,c
 12004  00531C  6A08               	clrf	(___xxtofl@val+1)^0,c
 12005  00531E  6A09               	clrf	(___xxtofl@val+2)^0,c
 12006  005320  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12007  005322  0E01               	movlw	1
 12008  005324  ECCE  F021         	call	___xxtofl
 12009  005328  C007  F02D         	movff	?___xxtofl,___flmul@b
 12010  00532C  C008  F02E         	movff	?___xxtofl+1,___flmul@b+1
 12011  005330  C009  F02F         	movff	?___xxtofl+2,___flmul@b+2
 12012  005334  C00A  F030         	movff	?___xxtofl+3,___flmul@b+3
 12013  005338  EC53  F01A         	call	___flmul	;wreg free
 12014  00533C  C02D  F046         	movff	?___flmul,___fldiv@b
 12015  005340  C02E  F047         	movff	?___flmul+1,___fldiv@b+1
 12016  005344  C02F  F048         	movff	?___flmul+2,___fldiv@b+2
 12017  005348  C030  F049         	movff	?___flmul+3,___fldiv@b+3
 12018  00534C  0E00               	movlw	0
 12019  00534E  6E4A               	movwf	___fldiv@a^0,c
 12020  005350  0E00               	movlw	0
 12021  005352  6E4B               	movwf	(___fldiv@a+1)^0,c
 12022  005354  0EC8               	movlw	200
 12023  005356  6E4C               	movwf	(___fldiv@a+2)^0,c
 12024  005358  0E42               	movlw	66
 12025  00535A  6E4D               	movwf	(___fldiv@a+3)^0,c
 12026  00535C  EC68  F01C         	call	___fldiv	;wreg free
 12027  005360  C046  F070         	movff	?___fldiv,PWM1_Set_Duty@val
 12028  005364  C047  F071         	movff	?___fldiv+1,PWM1_Set_Duty@val+1
 12029  005368  C048  F072         	movff	?___fldiv+2,PWM1_Set_Duty@val+2
 12030  00536C  C049  F073         	movff	?___fldiv+3,PWM1_Set_Duty@val+3
 12031  005370                     
 12032                           ;PWM_LIB.c: 62:     CCPR1L = (int)(val)>>2;
 12033  005370  C070  F052         	movff	PWM1_Set_Duty@val,___fltol@f1
 12034  005374  C071  F053         	movff	PWM1_Set_Duty@val+1,___fltol@f1+1
 12035  005378  C072  F054         	movff	PWM1_Set_Duty@val+2,___fltol@f1+2
 12036  00537C  C073  F055         	movff	PWM1_Set_Duty@val+3,___fltol@f1+3
 12037  005380  EC84  F025         	call	___fltol	;wreg free
 12038  005384  3453               	rlcf	(?___fltol+1)^0,w,c
 12039  005386  3253               	rrcf	(?___fltol+1)^0,f,c
 12040  005388  3252               	rrcf	?___fltol^0,f,c
 12041  00538A  3453               	rlcf	(?___fltol+1)^0,w,c
 12042  00538C  3253               	rrcf	(?___fltol+1)^0,f,c
 12043  00538E  3252               	rrcf	?___fltol^0,f,c
 12044  005390  5052               	movf	?___fltol^0,w,c
 12045  005392  6EBE               	movwf	190,c	;volatile
 12046  005394                     
 12047                           ;PWM_LIB.c: 63:     CCP1CONbits.DC1B = (int)(val)& 0x003;
 12048  005394  C070  F052         	movff	PWM1_Set_Duty@val,___fltol@f1
 12049  005398  C071  F053         	movff	PWM1_Set_Duty@val+1,___fltol@f1+1
 12050  00539C  C072  F054         	movff	PWM1_Set_Duty@val+2,___fltol@f1+2
 12051  0053A0  C073  F055         	movff	PWM1_Set_Duty@val+3,___fltol@f1+3
 12052  0053A4  EC84  F025         	call	___fltol	;wreg free
 12053  0053A8  0E03               	movlw	3
 12054  0053AA  1652               	andwf	?___fltol^0,f,c
 12055  0053AC  3A52               	swapf	?___fltol^0,f,c
 12056  0053AE  50BD               	movf	189,w,c	;volatile
 12057  0053B0  1852               	xorwf	?___fltol^0,w,c
 12058  0053B2  0BCF               	andlw	-49
 12059  0053B4  1852               	xorwf	?___fltol^0,w,c
 12060  0053B6  6EBD               	movwf	189,c	;volatile
 12061  0053B8  0012               	return		;funcret
 12062  0053BA                     __end_of_PWM1_Set_Duty:
 12063                           	callstack 0
 12064                           
 12065 ;; *************** function _PWM1_Init *****************
 12066 ;; Defined at:
 12067 ;;		line 7 in file "PWM_LIB.c"
 12068 ;; Parameters:    Size  Location     Type
 12069 ;;  freq            2   15[BANK0 ] unsigned short 
 12070 ;; Auto vars:     Size  Location     Type
 12071 ;;  prees           1   23[BANK0 ] unsigned char 
 12072 ;; Return value:  Size  Location     Type
 12073 ;;                  1    wreg      void 
 12074 ;; Registers used:
 12075 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12076 ;; Tracked objects:
 12077 ;;		On entry : 0/0
 12078 ;;		On exit  : 0/0
 12079 ;;		Unchanged: 0/0
 12080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12081 ;;      Params:         0       2       0       0       0       0       0       0       0
 12082 ;;      Locals:         0       5       0       0       0       0       0       0       0
 12083 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12084 ;;      Totals:         0       9       0       0       0       0       0       0       0
 12085 ;;Total ram usage:        9 bytes
 12086 ;; Hardware stack levels used: 1
 12087 ;; Hardware stack levels required when called: 3
 12088 ;; This function calls:
 12089 ;;		___fladd
 12090 ;;		___fldiv
 12091 ;;		___flmul
 12092 ;;		___fltol
 12093 ;;		___xxtofl
 12094 ;; This function is called by:
 12095 ;;		_main
 12096 ;; This function uses a non-reentrant model
 12097 ;;
 12098                           
 12099                           	psect	text49
 12100  003F4C                     __ptext49:
 12101                           	callstack 0
 12102  003F4C                     _PWM1_Init:
 12103                           	callstack 27
 12104  003F4C                     
 12105                           ;PWM_LIB.c: 9:     uint8_t prees;;PWM_LIB.c: 11:     switch(2){
 12106  003F4C  EFB4  F01F         	goto	l8236
 12107  003F50                     l8228:
 12108                           
 12109                           ; BSR set to: 0
 12110  003F50  0E01               	movlw	1
 12111  003F52  6F77               	movwf	PWM1_Init@prees& (0+255),b
 12112  003F54  EFCF  F01F         	goto	l193
 12113  003F58                     l8230:
 12114                           
 12115                           ; BSR set to: 0
 12116  003F58  0E04               	movlw	4
 12117  003F5A  6F77               	movwf	PWM1_Init@prees& (0+255),b
 12118  003F5C  EFCF  F01F         	goto	l193
 12119  003F60                     l8232:
 12120                           
 12121                           ; BSR set to: 0
 12122  003F60  0E10               	movlw	16
 12123  003F62  6F77               	movwf	PWM1_Init@prees& (0+255),b
 12124  003F64  EFCF  F01F         	goto	l193
 12125  003F68                     l8236:
 12126  003F68  0E02               	movlw	2
 12127  003F6A  0100               	movlb	0	; () banked
 12128  003F6C  6F71               	movwf	??_PWM1_Init& (0+255),b
 12129  003F6E  0E00               	movlw	0
 12130  003F70  6F72               	movwf	(??_PWM1_Init+1)& (0+255),b
 12131                           
 12132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12133                           ; Switch size 1, requested type "simple"
 12134                           ; Number of cases is 1, Range of values is 0 to 0
 12135                           ; switch strategies available:
 12136                           ; Name         Instructions Cycles
 12137                           ; simple_byte            4     3 (average)
 12138                           ;	Chosen strategy is simple_byte
 12139  003F72  5172               	movf	(??_PWM1_Init+1)& (0+255),w,b
 12140  003F74  0A00               	xorlw	0	; case 0
 12141  003F76  B4D8               	btfsc	status,2,c
 12142  003F78  EFC0  F01F         	goto	l8496
 12143  003F7C  EFCF  F01F         	goto	l193
 12144  003F80                     l8496:
 12145                           
 12146                           ; BSR set to: 0
 12147                           ; Switch size 1, requested type "simple"
 12148                           ; Number of cases is 3, Range of values is 0 to 2
 12149                           ; switch strategies available:
 12150                           ; Name         Instructions Cycles
 12151                           ; simple_byte           10     6 (average)
 12152                           ;	Chosen strategy is simple_byte
 12153  003F80  5171               	movf	??_PWM1_Init& (0+255),w,b
 12154  003F82  0A00               	xorlw	0	; case 0
 12155  003F84  B4D8               	btfsc	status,2,c
 12156  003F86  EFA8  F01F         	goto	l8228
 12157  003F8A  0A01               	xorlw	1	; case 1
 12158  003F8C  B4D8               	btfsc	status,2,c
 12159  003F8E  EFAC  F01F         	goto	l8230
 12160  003F92  0A03               	xorlw	3	; case 2
 12161  003F94  B4D8               	btfsc	status,2,c
 12162  003F96  EFB0  F01F         	goto	l8232
 12163  003F9A  EFCF  F01F         	goto	l193
 12164  003F9E                     l193:
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;PWM_LIB.c: 18:     TRISCbits.TRISC2 = 0;
 12168  003F9E  9494               	bcf	148,2,c	;volatile
 12169  003FA0                     
 12170                           ; BSR set to: 0
 12171                           ;PWM_LIB.c: 21:     CCP1CONbits.CCP1M = 0b1100;
 12172  003FA0  50BD               	movf	189,w,c	;volatile
 12173  003FA2  0BF0               	andlw	-16
 12174  003FA4  090C               	iorlw	12
 12175  003FA6  6EBD               	movwf	189,c	;volatile
 12176                           
 12177                           ;PWM_LIB.c: 24:     T2CONbits.T2CKPS = 2;
 12178  003FA8  50CA               	movf	202,w,c	;volatile
 12179  003FAA  0BFC               	andlw	-4
 12180  003FAC  0902               	iorlw	2
 12181  003FAE  6ECA               	movwf	202,c	;volatile
 12182  003FB0                     
 12183                           ; BSR set to: 0
 12184                           ;PWM_LIB.c: 27:     PR2 = (uint8_t)((20000000UL / (4.0*freq*prees) ) - 1.0);
 12185  003FB0  0E00               	movlw	0
 12186  003FB2  6E31               	movwf	___flmul@a^0,c
 12187  003FB4  0E00               	movlw	0
 12188  003FB6  6E32               	movwf	(___flmul@a+1)^0,c
 12189  003FB8  0E80               	movlw	128
 12190  003FBA  6E33               	movwf	(___flmul@a+2)^0,c
 12191  003FBC  0E40               	movlw	64
 12192  003FBE  6E34               	movwf	(___flmul@a+3)^0,c
 12193  003FC0  C06F  F007         	movff	PWM1_Init@freq,___xxtofl@val
 12194  003FC4  C070  F008         	movff	PWM1_Init@freq+1,___xxtofl@val+1
 12195  003FC8  6A09               	clrf	(___xxtofl@val+2)^0,c
 12196  003FCA  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12197  003FCC  0E00               	movlw	0
 12198  003FCE  ECCE  F021         	call	___xxtofl
 12199  003FD2  C007  F02D         	movff	?___xxtofl,___flmul@b
 12200  003FD6  C008  F02E         	movff	?___xxtofl+1,___flmul@b+1
 12201  003FDA  C009  F02F         	movff	?___xxtofl+2,___flmul@b+2
 12202  003FDE  C00A  F030         	movff	?___xxtofl+3,___flmul@b+3
 12203  003FE2  EC53  F01A         	call	___flmul	;wreg free
 12204  003FE6  C02D  F073         	movff	?___flmul,_PWM1_Init$1878
 12205  003FEA  C02E  F074         	movff	?___flmul+1,_PWM1_Init$1878+1
 12206  003FEE  C02F  F075         	movff	?___flmul+2,_PWM1_Init$1878+2
 12207  003FF2  C030  F076         	movff	?___flmul+3,_PWM1_Init$1878+3
 12208  003FF6                     
 12209                           ;PWM_LIB.c: 27:     PR2 = (uint8_t)((20000000UL / (4.0*freq*prees) ) - 1.0);
 12210  003FF6  0E00               	movlw	0
 12211  003FF8  6E19               	movwf	___fladd@a^0,c
 12212  003FFA  0E00               	movlw	0
 12213  003FFC  6E1A               	movwf	(___fladd@a+1)^0,c
 12214  003FFE  0E80               	movlw	128
 12215  004000  6E1B               	movwf	(___fladd@a+2)^0,c
 12216  004002  0EBF               	movlw	191
 12217  004004  6E1C               	movwf	(___fladd@a+3)^0,c
 12218  004006  0100               	movlb	0	; () banked
 12219  004008  5177               	movf	PWM1_Init@prees& (0+255),w,b
 12220  00400A  6E07               	movwf	___xxtofl@val^0,c
 12221  00400C  6A08               	clrf	(___xxtofl@val+1)^0,c
 12222  00400E  6A09               	clrf	(___xxtofl@val+2)^0,c
 12223  004010  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12224  004012  0E01               	movlw	1
 12225  004014  ECCE  F021         	call	___xxtofl
 12226  004018  C007  F031         	movff	?___xxtofl,___flmul@a
 12227  00401C  C008  F032         	movff	?___xxtofl+1,___flmul@a+1
 12228  004020  C009  F033         	movff	?___xxtofl+2,___flmul@a+2
 12229  004024  C00A  F034         	movff	?___xxtofl+3,___flmul@a+3
 12230  004028  C073  F02D         	movff	_PWM1_Init$1878,___flmul@b
 12231  00402C  C074  F02E         	movff	_PWM1_Init$1878+1,___flmul@b+1
 12232  004030  C075  F02F         	movff	_PWM1_Init$1878+2,___flmul@b+2
 12233  004034  C076  F030         	movff	_PWM1_Init$1878+3,___flmul@b+3
 12234  004038  EC53  F01A         	call	___flmul	;wreg free
 12235  00403C  C02D  F04A         	movff	?___flmul,___fldiv@a
 12236  004040  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 12237  004044  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 12238  004048  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 12239  00404C  0E80               	movlw	128
 12240  00404E  6E46               	movwf	___fldiv@b^0,c
 12241  004050  0E96               	movlw	150
 12242  004052  6E47               	movwf	(___fldiv@b+1)^0,c
 12243  004054  0E98               	movlw	152
 12244  004056  6E48               	movwf	(___fldiv@b+2)^0,c
 12245  004058  0E4B               	movlw	75
 12246  00405A  6E49               	movwf	(___fldiv@b+3)^0,c
 12247  00405C  EC68  F01C         	call	___fldiv	;wreg free
 12248  004060  C046  F015         	movff	?___fldiv,___fladd@b
 12249  004064  C047  F016         	movff	?___fldiv+1,___fladd@b+1
 12250  004068  C048  F017         	movff	?___fldiv+2,___fladd@b+2
 12251  00406C  C049  F018         	movff	?___fldiv+3,___fladd@b+3
 12252  004070  ECD3  F015         	call	___fladd	;wreg free
 12253  004074  C015  F052         	movff	?___fladd,___fltol@f1
 12254  004078  C016  F053         	movff	?___fladd+1,___fltol@f1+1
 12255  00407C  C017  F054         	movff	?___fladd+2,___fltol@f1+2
 12256  004080  C018  F055         	movff	?___fladd+3,___fltol@f1+3
 12257  004084  EC84  F025         	call	___fltol	;wreg free
 12258  004088  5052               	movf	?___fltol^0,w,c
 12259  00408A  6ECB               	movwf	203,c	;volatile
 12260  00408C                     
 12261                           ;PWM_LIB.c: 29:     reg10bits = (20000000UL/(1.0*freq*prees));
 12262  00408C  0E00               	movlw	0
 12263  00408E  6E31               	movwf	___flmul@a^0,c
 12264  004090  0E00               	movlw	0
 12265  004092  6E32               	movwf	(___flmul@a+1)^0,c
 12266  004094  0E80               	movlw	128
 12267  004096  6E33               	movwf	(___flmul@a+2)^0,c
 12268  004098  0E3F               	movlw	63
 12269  00409A  6E34               	movwf	(___flmul@a+3)^0,c
 12270  00409C  C06F  F007         	movff	PWM1_Init@freq,___xxtofl@val
 12271  0040A0  C070  F008         	movff	PWM1_Init@freq+1,___xxtofl@val+1
 12272  0040A4  6A09               	clrf	(___xxtofl@val+2)^0,c
 12273  0040A6  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12274  0040A8  0E00               	movlw	0
 12275  0040AA  ECCE  F021         	call	___xxtofl
 12276  0040AE  C007  F02D         	movff	?___xxtofl,___flmul@b
 12277  0040B2  C008  F02E         	movff	?___xxtofl+1,___flmul@b+1
 12278  0040B6  C009  F02F         	movff	?___xxtofl+2,___flmul@b+2
 12279  0040BA  C00A  F030         	movff	?___xxtofl+3,___flmul@b+3
 12280  0040BE  EC53  F01A         	call	___flmul	;wreg free
 12281  0040C2  C02D  F073         	movff	?___flmul,_PWM1_Init$1878
 12282  0040C6  C02E  F074         	movff	?___flmul+1,_PWM1_Init$1878+1
 12283  0040CA  C02F  F075         	movff	?___flmul+2,_PWM1_Init$1878+2
 12284  0040CE  C030  F076         	movff	?___flmul+3,_PWM1_Init$1878+3
 12285  0040D2                     
 12286                           ;PWM_LIB.c: 29:     reg10bits = (20000000UL/(1.0*freq*prees));
 12287  0040D2  0E80               	movlw	128
 12288  0040D4  6E46               	movwf	___fldiv@b^0,c
 12289  0040D6  0E96               	movlw	150
 12290  0040D8  6E47               	movwf	(___fldiv@b+1)^0,c
 12291  0040DA  0E98               	movlw	152
 12292  0040DC  6E48               	movwf	(___fldiv@b+2)^0,c
 12293  0040DE  0E4B               	movlw	75
 12294  0040E0  6E49               	movwf	(___fldiv@b+3)^0,c
 12295  0040E2  0100               	movlb	0	; () banked
 12296  0040E4  5177               	movf	PWM1_Init@prees& (0+255),w,b
 12297  0040E6  6E07               	movwf	___xxtofl@val^0,c
 12298  0040E8  6A08               	clrf	(___xxtofl@val+1)^0,c
 12299  0040EA  6A09               	clrf	(___xxtofl@val+2)^0,c
 12300  0040EC  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12301  0040EE  0E01               	movlw	1
 12302  0040F0  ECCE  F021         	call	___xxtofl
 12303  0040F4  C007  F031         	movff	?___xxtofl,___flmul@a
 12304  0040F8  C008  F032         	movff	?___xxtofl+1,___flmul@a+1
 12305  0040FC  C009  F033         	movff	?___xxtofl+2,___flmul@a+2
 12306  004100  C00A  F034         	movff	?___xxtofl+3,___flmul@a+3
 12307  004104  C073  F02D         	movff	_PWM1_Init$1878,___flmul@b
 12308  004108  C074  F02E         	movff	_PWM1_Init$1878+1,___flmul@b+1
 12309  00410C  C075  F02F         	movff	_PWM1_Init$1878+2,___flmul@b+2
 12310  004110  C076  F030         	movff	_PWM1_Init$1878+3,___flmul@b+3
 12311  004114  EC53  F01A         	call	___flmul	;wreg free
 12312  004118  C02D  F04A         	movff	?___flmul,___fldiv@a
 12313  00411C  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 12314  004120  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 12315  004124  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 12316  004128  EC68  F01C         	call	___fldiv	;wreg free
 12317  00412C  C046  F118         	movff	?___fldiv,_reg10bits
 12318  004130  C047  F119         	movff	?___fldiv+1,_reg10bits+1
 12319  004134  C048  F11A         	movff	?___fldiv+2,_reg10bits+2
 12320  004138  C049  F11B         	movff	?___fldiv+3,_reg10bits+3
 12321  00413C                     
 12322                           ;PWM_LIB.c: 31:     CCPR1L = (int)(reg10bits)>>2;
 12323  00413C  C118  F052         	movff	_reg10bits,___fltol@f1
 12324  004140  C119  F053         	movff	_reg10bits+1,___fltol@f1+1
 12325  004144  C11A  F054         	movff	_reg10bits+2,___fltol@f1+2
 12326  004148  C11B  F055         	movff	_reg10bits+3,___fltol@f1+3
 12327  00414C  EC84  F025         	call	___fltol	;wreg free
 12328  004150  3453               	rlcf	(?___fltol+1)^0,w,c
 12329  004152  3253               	rrcf	(?___fltol+1)^0,f,c
 12330  004154  3252               	rrcf	?___fltol^0,f,c
 12331  004156  3453               	rlcf	(?___fltol+1)^0,w,c
 12332  004158  3253               	rrcf	(?___fltol+1)^0,f,c
 12333  00415A  3252               	rrcf	?___fltol^0,f,c
 12334  00415C  5052               	movf	?___fltol^0,w,c
 12335  00415E  6EBE               	movwf	190,c	;volatile
 12336  004160                     
 12337                           ;PWM_LIB.c: 32:     CCP1CONbits.DC1B = (int)(reg10bits)& 0x003;
 12338  004160  C118  F052         	movff	_reg10bits,___fltol@f1
 12339  004164  C119  F053         	movff	_reg10bits+1,___fltol@f1+1
 12340  004168  C11A  F054         	movff	_reg10bits+2,___fltol@f1+2
 12341  00416C  C11B  F055         	movff	_reg10bits+3,___fltol@f1+3
 12342  004170  EC84  F025         	call	___fltol	;wreg free
 12343  004174  0E03               	movlw	3
 12344  004176  1652               	andwf	?___fltol^0,f,c
 12345  004178  3A52               	swapf	?___fltol^0,f,c
 12346  00417A  50BD               	movf	189,w,c	;volatile
 12347  00417C  1852               	xorwf	?___fltol^0,w,c
 12348  00417E  0BCF               	andlw	-49
 12349  004180  1852               	xorwf	?___fltol^0,w,c
 12350  004182  6EBD               	movwf	189,c	;volatile
 12351  004184  0012               	return		;funcret
 12352  004186                     __end_of_PWM1_Init:
 12353                           	callstack 0
 12354                           
 12355 ;; *************** function ___xxtofl *****************
 12356 ;; Defined at:
 12357 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;  sign            1    wreg     unsigned char 
 12360 ;;  val             4    6[COMRAM] long 
 12361 ;; Auto vars:     Size  Location     Type
 12362 ;;  sign            1   14[COMRAM] unsigned char 
 12363 ;;  arg             4   16[COMRAM] unsigned long 
 12364 ;;  exp             1   15[COMRAM] unsigned char 
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  4    6[COMRAM] unsigned char 
 12367 ;; Registers used:
 12368 ;;		wreg, status,2, status,0
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12374 ;;      Params:         4       0       0       0       0       0       0       0       0
 12375 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12376 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12377 ;;      Totals:        14       0       0       0       0       0       0       0       0
 12378 ;;Total ram usage:       14 bytes
 12379 ;; Hardware stack levels used: 1
 12380 ;; Hardware stack levels required when called: 2
 12381 ;; This function calls:
 12382 ;;		Nothing
 12383 ;; This function is called by:
 12384 ;;		_main
 12385 ;;		_PWM1_Init
 12386 ;;		_PWM1_Set_Duty
 12387 ;;		_strtof
 12388 ;;		_PWM2_Init
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           
 12392                           	psect	text50
 12393  00439C                     __ptext50:
 12394                           	callstack 0
 12395  00439C                     ___xxtofl:
 12396                           	callstack 26
 12397                           
 12398                           ;incstack = 0
 12399                           ;___xxtofl@sign stored from wreg
 12400  00439C  6E0F               	movwf	___xxtofl@sign^0,c
 12401  00439E  500F               	movf	___xxtofl@sign^0,w,c
 12402  0043A0  B4D8               	btfsc	status,2,c
 12403  0043A2  EFD5  F021         	goto	u6291
 12404  0043A6  EFD7  F021         	goto	u6290
 12405  0043AA                     u6291:
 12406  0043AA  EFF9  F021         	goto	l874
 12407  0043AE                     u6290:
 12408  0043AE  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
 12409  0043B0  EFDE  F021         	goto	u6300
 12410  0043B4  EFDC  F021         	goto	u6301
 12411  0043B8                     u6301:
 12412  0043B8  EFF9  F021         	goto	l874
 12413  0043BC                     u6300:
 12414  0043BC  C007  F00B         	movff	___xxtofl@val,??___xxtofl
 12415  0043C0  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
 12416  0043C4  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
 12417  0043C8  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
 12418  0043CC  1E0B               	comf	??___xxtofl^0,f,c
 12419  0043CE  1E0C               	comf	(??___xxtofl+1)^0,f,c
 12420  0043D0  1E0D               	comf	(??___xxtofl+2)^0,f,c
 12421  0043D2  1E0E               	comf	(??___xxtofl+3)^0,f,c
 12422  0043D4  2A0B               	incf	??___xxtofl^0,f,c
 12423  0043D6  0E00               	movlw	0
 12424  0043D8  220C               	addwfc	(??___xxtofl+1)^0,f,c
 12425  0043DA  220D               	addwfc	(??___xxtofl+2)^0,f,c
 12426  0043DC  220E               	addwfc	(??___xxtofl+3)^0,f,c
 12427  0043DE  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
 12428  0043E2  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
 12429  0043E6  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
 12430  0043EA  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
 12431  0043EE  EF01  F022         	goto	l5244
 12432  0043F2                     l874:
 12433  0043F2  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
 12434  0043F6  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12435  0043FA  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12436  0043FE  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12437  004402                     l5244:
 12438  004402  5007               	movf	___xxtofl@val^0,w,c
 12439  004404  1008               	iorwf	(___xxtofl@val+1)^0,w,c
 12440  004406  1009               	iorwf	(___xxtofl@val+2)^0,w,c
 12441  004408  100A               	iorwf	(___xxtofl@val+3)^0,w,c
 12442  00440A  A4D8               	btfss	status,2,c
 12443  00440C  EF0A  F022         	goto	u6311
 12444  004410  EF0C  F022         	goto	u6310
 12445  004414                     u6311:
 12446  004414  EF16  F022         	goto	l5250
 12447  004418                     u6310:
 12448  004418  0E00               	movlw	0
 12449  00441A  6E07               	movwf	?___xxtofl^0,c
 12450  00441C  0E00               	movlw	0
 12451  00441E  6E08               	movwf	(?___xxtofl+1)^0,c
 12452  004420  0E00               	movlw	0
 12453  004422  6E09               	movwf	(?___xxtofl+2)^0,c
 12454  004424  0E00               	movlw	0
 12455  004426  6E0A               	movwf	(?___xxtofl+3)^0,c
 12456  004428  EFA7  F022         	goto	l877
 12457  00442C                     l5250:
 12458  00442C  0E96               	movlw	150
 12459  00442E  6E10               	movwf	___xxtofl@exp^0,c
 12460  004430  EF20  F022         	goto	l5254
 12461  004434                     l5252:
 12462  004434  2A10               	incf	___xxtofl@exp^0,f,c
 12463  004436  90D8               	bcf	status,0,c
 12464  004438  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
 12465  00443A  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
 12466  00443C  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
 12467  00443E  3211               	rrcf	___xxtofl@arg^0,f,c
 12468  004440                     l5254:
 12469  004440  0E00               	movlw	0
 12470  004442  1411               	andwf	___xxtofl@arg^0,w,c
 12471  004444  6E0B               	movwf	??___xxtofl^0,c
 12472  004446  0E00               	movlw	0
 12473  004448  1412               	andwf	(___xxtofl@arg+1)^0,w,c
 12474  00444A  6E0C               	movwf	(??___xxtofl+1)^0,c
 12475  00444C  0E00               	movlw	0
 12476  00444E  1413               	andwf	(___xxtofl@arg+2)^0,w,c
 12477  004450  6E0D               	movwf	(??___xxtofl+2)^0,c
 12478  004452  0EFE               	movlw	254
 12479  004454  1414               	andwf	(___xxtofl@arg+3)^0,w,c
 12480  004456  6E0E               	movwf	(??___xxtofl+3)^0,c
 12481  004458  500B               	movf	??___xxtofl^0,w,c
 12482  00445A  100C               	iorwf	(??___xxtofl+1)^0,w,c
 12483  00445C  100D               	iorwf	(??___xxtofl+2)^0,w,c
 12484  00445E  100E               	iorwf	(??___xxtofl+3)^0,w,c
 12485  004460  A4D8               	btfss	status,2,c
 12486  004462  EF35  F022         	goto	u6321
 12487  004466  EF37  F022         	goto	u6320
 12488  00446A                     u6321:
 12489  00446A  EF1A  F022         	goto	l5252
 12490  00446E                     u6320:
 12491  00446E  EF45  F022         	goto	l881
 12492  004472                     l5256:
 12493  004472  2A10               	incf	___xxtofl@exp^0,f,c
 12494  004474  0E01               	movlw	1
 12495  004476  2611               	addwf	___xxtofl@arg^0,f,c
 12496  004478  0E00               	movlw	0
 12497  00447A  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
 12498  00447C  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
 12499  00447E  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
 12500  004480  90D8               	bcf	status,0,c
 12501  004482  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
 12502  004484  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
 12503  004486  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
 12504  004488  3211               	rrcf	___xxtofl@arg^0,f,c
 12505  00448A                     l881:
 12506  00448A  0E00               	movlw	0
 12507  00448C  1411               	andwf	___xxtofl@arg^0,w,c
 12508  00448E  6E0B               	movwf	??___xxtofl^0,c
 12509  004490  0E00               	movlw	0
 12510  004492  1412               	andwf	(___xxtofl@arg+1)^0,w,c
 12511  004494  6E0C               	movwf	(??___xxtofl+1)^0,c
 12512  004496  0E00               	movlw	0
 12513  004498  1413               	andwf	(___xxtofl@arg+2)^0,w,c
 12514  00449A  6E0D               	movwf	(??___xxtofl+2)^0,c
 12515  00449C  0EFF               	movlw	255
 12516  00449E  1414               	andwf	(___xxtofl@arg+3)^0,w,c
 12517  0044A0  6E0E               	movwf	(??___xxtofl+3)^0,c
 12518  0044A2  500B               	movf	??___xxtofl^0,w,c
 12519  0044A4  100C               	iorwf	(??___xxtofl+1)^0,w,c
 12520  0044A6  100D               	iorwf	(??___xxtofl+2)^0,w,c
 12521  0044A8  100E               	iorwf	(??___xxtofl+3)^0,w,c
 12522  0044AA  A4D8               	btfss	status,2,c
 12523  0044AC  EF5A  F022         	goto	u6331
 12524  0044B0  EF5C  F022         	goto	u6330
 12525  0044B4                     u6331:
 12526  0044B4  EF39  F022         	goto	l5256
 12527  0044B8                     u6330:
 12528  0044B8  EF64  F022         	goto	l5264
 12529  0044BC                     l5262:
 12530  0044BC  0610               	decf	___xxtofl@exp^0,f,c
 12531  0044BE  90D8               	bcf	status,0,c
 12532  0044C0  3611               	rlcf	___xxtofl@arg^0,f,c
 12533  0044C2  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
 12534  0044C4  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
 12535  0044C6  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
 12536  0044C8                     l5264:
 12537  0044C8  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
 12538  0044CA  EF69  F022         	goto	u6341
 12539  0044CE  EF6B  F022         	goto	u6340
 12540  0044D2                     u6341:
 12541  0044D2  EF73  F022         	goto	l888
 12542  0044D6                     u6340:
 12543  0044D6  0E02               	movlw	2
 12544  0044D8  6010               	cpfslt	___xxtofl@exp^0,c
 12545  0044DA  EF71  F022         	goto	u6351
 12546  0044DE  EF73  F022         	goto	u6350
 12547  0044E2                     u6351:
 12548  0044E2  EF5E  F022         	goto	l5262
 12549  0044E6                     u6350:
 12550  0044E6                     l888:
 12551  0044E6  B010               	btfsc	___xxtofl@exp^0,0,c
 12552  0044E8  EF78  F022         	goto	u6361
 12553  0044EC  EF7A  F022         	goto	u6360
 12554  0044F0                     u6361:
 12555  0044F0  EF7B  F022         	goto	l5270
 12556  0044F4                     u6360:
 12557  0044F4  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
 12558  0044F6                     l5270:
 12559  0044F6  90D8               	bcf	status,0,c
 12560  0044F8  3210               	rrcf	___xxtofl@exp^0,f,c
 12561  0044FA  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
 12562  0044FE  6A0C               	clrf	(??___xxtofl+1)^0,c
 12563  004500  6A0D               	clrf	(??___xxtofl+2)^0,c
 12564  004502  6A0E               	clrf	(??___xxtofl+3)^0,c
 12565  004504  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
 12566  004508  6A0D               	clrf	(??___xxtofl+2)^0,c
 12567  00450A  6A0C               	clrf	(??___xxtofl+1)^0,c
 12568  00450C  6A0B               	clrf	??___xxtofl^0,c
 12569  00450E  500B               	movf	??___xxtofl^0,w,c
 12570  004510  1211               	iorwf	___xxtofl@arg^0,f,c
 12571  004512  500C               	movf	(??___xxtofl+1)^0,w,c
 12572  004514  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
 12573  004516  500D               	movf	(??___xxtofl+2)^0,w,c
 12574  004518  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
 12575  00451A  500E               	movf	(??___xxtofl+3)^0,w,c
 12576  00451C  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
 12577  00451E  500F               	movf	___xxtofl@sign^0,w,c
 12578  004520  B4D8               	btfsc	status,2,c
 12579  004522  EF95  F022         	goto	u6371
 12580  004526  EF97  F022         	goto	u6370
 12581  00452A                     u6371:
 12582  00452A  EF9F  F022         	goto	l5280
 12583  00452E                     u6370:
 12584  00452E  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
 12585  004530  EF9E  F022         	goto	u6380
 12586  004534  EF9C  F022         	goto	u6381
 12587  004538                     u6381:
 12588  004538  EF9F  F022         	goto	l5280
 12589  00453C                     u6380:
 12590  00453C  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
 12591  00453E                     l5280:
 12592  00453E  C011  F007         	movff	___xxtofl@arg,?___xxtofl
 12593  004542  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
 12594  004546  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
 12595  00454A  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
 12596  00454E                     l877:
 12597  00454E  0012               	return		;funcret
 12598  004550                     __end_of___xxtofl:
 12599                           	callstack 0
 12600                           
 12601 ;; *************** function ___fltol *****************
 12602 ;; Defined at:
 12603 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
 12604 ;; Parameters:    Size  Location     Type
 12605 ;;  f1              4   81[COMRAM] unsigned char 
 12606 ;; Auto vars:     Size  Location     Type
 12607 ;;  exp1            1   14[BANK0 ] unsigned char 
 12608 ;;  sign1           1   13[BANK0 ] unsigned char 
 12609 ;; Return value:  Size  Location     Type
 12610 ;;                  4   81[COMRAM] long 
 12611 ;; Registers used:
 12612 ;;		wreg, status,2, status,0
 12613 ;; Tracked objects:
 12614 ;;		On entry : 0/0
 12615 ;;		On exit  : 0/0
 12616 ;;		Unchanged: 0/0
 12617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12618 ;;      Params:         4       0       0       0       0       0       0       0       0
 12619 ;;      Locals:         0       2       0       0       0       0       0       0       0
 12620 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12621 ;;      Totals:         8       2       0       0       0       0       0       0       0
 12622 ;;Total ram usage:       10 bytes
 12623 ;; Hardware stack levels used: 1
 12624 ;; Hardware stack levels required when called: 2
 12625 ;; This function calls:
 12626 ;;		Nothing
 12627 ;; This function is called by:
 12628 ;;		_main
 12629 ;;		_PWM1_Init
 12630 ;;		_PWM1_Set_Duty
 12631 ;;		_efgtoa
 12632 ;;		_PWM2_Init
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text51
 12637  004B08                     __ptext51:
 12638                           	callstack 0
 12639  004B08                     ___fltol:
 12640                           	callstack 24
 12641  004B08  3454               	rlcf	(___fltol@f1+2)^0,w,c
 12642  004B0A  3455               	rlcf	(___fltol@f1+3)^0,w,c
 12643  004B0C  0100               	movlb	0	; () banked
 12644  004B0E  6F6E               	movwf	___fltol@exp1& (0+255),b
 12645  004B10  516E               	movf	___fltol@exp1& (0+255),w,b
 12646  004B12  A4D8               	btfss	status,2,c
 12647  004B14  EF8E  F025         	goto	u9101
 12648  004B18  EF90  F025         	goto	u9100
 12649  004B1C                     u9101:
 12650  004B1C  EF9A  F025         	goto	l7076
 12651  004B20                     u9100:
 12652  004B20                     l7072:
 12653                           
 12654                           ; BSR set to: 0
 12655  004B20  0E00               	movlw	0
 12656  004B22  6E52               	movwf	?___fltol^0,c
 12657  004B24  0E00               	movlw	0
 12658  004B26  6E53               	movwf	(?___fltol+1)^0,c
 12659  004B28  0E00               	movlw	0
 12660  004B2A  6E54               	movwf	(?___fltol+2)^0,c
 12661  004B2C  0E00               	movlw	0
 12662  004B2E  6E55               	movwf	(?___fltol+3)^0,c
 12663  004B30  EF07  F026         	goto	l516
 12664  004B34                     l7076:
 12665                           
 12666                           ; BSR set to: 0
 12667  004B34  C052  F056         	movff	___fltol@f1,??___fltol
 12668  004B38  C053  F057         	movff	___fltol@f1+1,??___fltol+1
 12669  004B3C  C054  F058         	movff	___fltol@f1+2,??___fltol+2
 12670  004B40  C055  F059         	movff	___fltol@f1+3,??___fltol+3
 12671  004B44  0E20               	movlw	32
 12672  004B46  EFAA  F025         	goto	u9110
 12673  004B4A                     u9115:
 12674  004B4A  90D8               	bcf	status,0,c
 12675  004B4C  3259               	rrcf	(??___fltol+3)^0,f,c
 12676  004B4E  3258               	rrcf	(??___fltol+2)^0,f,c
 12677  004B50  3257               	rrcf	(??___fltol+1)^0,f,c
 12678  004B52  3256               	rrcf	??___fltol^0,f,c
 12679  004B54                     u9110:
 12680  004B54  2EE8               	decfsz	wreg,f,c
 12681  004B56  EFA5  F025         	goto	u9115
 12682  004B5A  5056               	movf	??___fltol^0,w,c
 12683  004B5C  6F6D               	movwf	___fltol@sign1& (0+255),b
 12684  004B5E                     
 12685                           ; BSR set to: 0
 12686  004B5E  8E54               	bsf	(___fltol@f1+2)^0,7,c
 12687  004B60                     
 12688                           ; BSR set to: 0
 12689  004B60  0EFF               	movlw	255
 12690  004B62  1652               	andwf	___fltol@f1^0,f,c
 12691  004B64  0EFF               	movlw	255
 12692  004B66  1653               	andwf	(___fltol@f1+1)^0,f,c
 12693  004B68  0EFF               	movlw	255
 12694  004B6A  1654               	andwf	(___fltol@f1+2)^0,f,c
 12695  004B6C  0E00               	movlw	0
 12696  004B6E  1655               	andwf	(___fltol@f1+3)^0,f,c
 12697  004B70                     
 12698                           ; BSR set to: 0
 12699  004B70  0E96               	movlw	150
 12700  004B72  5F6E               	subwf	___fltol@exp1& (0+255),f,b
 12701  004B74                     
 12702                           ; BSR set to: 0
 12703  004B74  BF6E               	btfsc	___fltol@exp1& (0+255),7,b
 12704  004B76  EFC1  F025         	goto	u9120
 12705  004B7A  EFBF  F025         	goto	u9121
 12706  004B7E                     u9121:
 12707  004B7E  EFD7  F025         	goto	l7096
 12708  004B82                     u9120:
 12709  004B82                     
 12710                           ; BSR set to: 0
 12711  004B82  516E               	movf	___fltol@exp1& (0+255),w,b
 12712  004B84  0A80               	xorlw	128
 12713  004B86  0F97               	addlw	151
 12714  004B88  B0D8               	btfsc	status,0,c
 12715  004B8A  EFC9  F025         	goto	u9131
 12716  004B8E  EFCB  F025         	goto	u9130
 12717  004B92                     u9131:
 12718  004B92  EFCD  F025         	goto	l7092
 12719  004B96                     u9130:
 12720  004B96  EF90  F025         	goto	l7072
 12721  004B9A                     l7092:
 12722                           
 12723                           ; BSR set to: 0
 12724  004B9A  90D8               	bcf	status,0,c
 12725  004B9C  3255               	rrcf	(___fltol@f1+3)^0,f,c
 12726  004B9E  3254               	rrcf	(___fltol@f1+2)^0,f,c
 12727  004BA0  3253               	rrcf	(___fltol@f1+1)^0,f,c
 12728  004BA2  3252               	rrcf	___fltol@f1^0,f,c
 12729  004BA4                     
 12730                           ; BSR set to: 0
 12731  004BA4  3F6E               	incfsz	___fltol@exp1& (0+255),f,b
 12732  004BA6  EFCD  F025         	goto	l7092
 12733  004BAA  EFEF  F025         	goto	l7106
 12734  004BAE                     l7096:
 12735                           
 12736                           ; BSR set to: 0
 12737  004BAE  0E1F               	movlw	31
 12738  004BB0  656E               	cpfsgt	___fltol@exp1& (0+255),b
 12739  004BB2  EFDD  F025         	goto	u9141
 12740  004BB6  EFDF  F025         	goto	u9140
 12741  004BBA                     u9141:
 12742  004BBA  EFE7  F025         	goto	l7104
 12743  004BBE                     u9140:
 12744  004BBE  EF90  F025         	goto	l7072
 12745  004BC2                     l7102:
 12746                           
 12747                           ; BSR set to: 0
 12748  004BC2  90D8               	bcf	status,0,c
 12749  004BC4  3652               	rlcf	___fltol@f1^0,f,c
 12750  004BC6  3653               	rlcf	(___fltol@f1+1)^0,f,c
 12751  004BC8  3654               	rlcf	(___fltol@f1+2)^0,f,c
 12752  004BCA  3655               	rlcf	(___fltol@f1+3)^0,f,c
 12753  004BCC  076E               	decf	___fltol@exp1& (0+255),f,b
 12754  004BCE                     l7104:
 12755                           
 12756                           ; BSR set to: 0
 12757  004BCE  516E               	movf	___fltol@exp1& (0+255),w,b
 12758  004BD0  A4D8               	btfss	status,2,c
 12759  004BD2  EFED  F025         	goto	u9151
 12760  004BD6  EFEF  F025         	goto	u9150
 12761  004BDA                     u9151:
 12762  004BDA  EFE1  F025         	goto	l7102
 12763  004BDE                     u9150:
 12764  004BDE                     l7106:
 12765                           
 12766                           ; BSR set to: 0
 12767  004BDE  516D               	movf	___fltol@sign1& (0+255),w,b
 12768  004BE0  B4D8               	btfsc	status,2,c
 12769  004BE2  EFF5  F025         	goto	u9161
 12770  004BE6  EFF7  F025         	goto	u9160
 12771  004BEA                     u9161:
 12772  004BEA  EFFF  F025         	goto	l7110
 12773  004BEE                     u9160:
 12774  004BEE                     
 12775                           ; BSR set to: 0
 12776  004BEE  1E55               	comf	(___fltol@f1+3)^0,f,c
 12777  004BF0  1E54               	comf	(___fltol@f1+2)^0,f,c
 12778  004BF2  1E53               	comf	(___fltol@f1+1)^0,f,c
 12779  004BF4  6C52               	negf	___fltol@f1^0,c
 12780  004BF6  0E00               	movlw	0
 12781  004BF8  2253               	addwfc	(___fltol@f1+1)^0,f,c
 12782  004BFA  2254               	addwfc	(___fltol@f1+2)^0,f,c
 12783  004BFC  2255               	addwfc	(___fltol@f1+3)^0,f,c
 12784  004BFE                     l7110:
 12785                           
 12786                           ; BSR set to: 0
 12787  004BFE  C052  F052         	movff	___fltol@f1,?___fltol
 12788  004C02  C053  F053         	movff	___fltol@f1+1,?___fltol+1
 12789  004C06  C054  F054         	movff	___fltol@f1+2,?___fltol+2
 12790  004C0A  C055  F055         	movff	___fltol@f1+3,?___fltol+3
 12791  004C0E                     l516:
 12792                           
 12793                           ; BSR set to: 0
 12794  004C0E  0012               	return		;funcret
 12795  004C10                     __end_of___fltol:
 12796                           	callstack 0
 12797                           
 12798 ;; *************** function ___flmul *****************
 12799 ;; Defined at:
 12800 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;  b               4   44[COMRAM] long 
 12803 ;;  a               4   48[COMRAM] long 
 12804 ;; Auto vars:     Size  Location     Type
 12805 ;;  prod            4   63[COMRAM] struct .
 12806 ;;  grs             4   58[COMRAM] unsigned long 
 12807 ;;  temp            2   67[COMRAM] struct .
 12808 ;;  bexp            1   62[COMRAM] unsigned char 
 12809 ;;  aexp            1   57[COMRAM] unsigned char 
 12810 ;;  sign            1   56[COMRAM] unsigned char 
 12811 ;; Return value:  Size  Location     Type
 12812 ;;                  4   44[COMRAM] unsigned char 
 12813 ;; Registers used:
 12814 ;;		wreg, status,2, status,0, prodl, prodh
 12815 ;; Tracked objects:
 12816 ;;		On entry : 0/0
 12817 ;;		On exit  : 0/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12820 ;;      Params:         8       0       0       0       0       0       0       0       0
 12821 ;;      Locals:        13       0       0       0       0       0       0       0       0
 12822 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12823 ;;      Totals:        25       0       0       0       0       0       0       0       0
 12824 ;;Total ram usage:       25 bytes
 12825 ;; Hardware stack levels used: 1
 12826 ;; Hardware stack levels required when called: 2
 12827 ;; This function calls:
 12828 ;;		Nothing
 12829 ;; This function is called by:
 12830 ;;		_main
 12831 ;;		_PWM1_Init
 12832 ;;		_PWM1_Set_Duty
 12833 ;;		_efgtoa
 12834 ;;		_strtof
 12835 ;;		_PWM2_Init
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           	psect	text52
 12840  0034A6                     __ptext52:
 12841                           	callstack 0
 12842  0034A6                     ___flmul:
 12843                           	callstack 24
 12844  0034A6  5030               	movf	(___flmul@b+3)^0,w,c
 12845  0034A8  0B80               	andlw	128
 12846  0034AA  6E39               	movwf	___flmul@sign^0,c
 12847  0034AC  5030               	movf	(___flmul@b+3)^0,w,c
 12848  0034AE  2430               	addwf	(___flmul@b+3)^0,w,c
 12849  0034B0  6E3F               	movwf	___flmul@bexp^0,c
 12850  0034B2  AE2F               	btfss	(___flmul@b+2)^0,7,c
 12851  0034B4  EF5E  F01A         	goto	u8701
 12852  0034B8  EF60  F01A         	goto	u8700
 12853  0034BC                     u8701:
 12854  0034BC  EF61  F01A         	goto	l6814
 12855  0034C0                     u8700:
 12856  0034C0  803F               	bsf	___flmul@bexp^0,0,c
 12857  0034C2                     l6814:
 12858  0034C2  503F               	movf	___flmul@bexp^0,w,c
 12859  0034C4  B4D8               	btfsc	status,2,c
 12860  0034C6  EF67  F01A         	goto	u8711
 12861  0034CA  EF69  F01A         	goto	u8710
 12862  0034CE                     u8711:
 12863  0034CE  EF7C  F01A         	goto	l6822
 12864  0034D2                     u8710:
 12865  0034D2  283F               	incf	___flmul@bexp^0,w,c
 12866  0034D4  A4D8               	btfss	status,2,c
 12867  0034D6  EF6F  F01A         	goto	u8721
 12868  0034DA  EF71  F01A         	goto	u8720
 12869  0034DE                     u8721:
 12870  0034DE  EF79  F01A         	goto	l6820
 12871  0034E2                     u8720:
 12872  0034E2  0E00               	movlw	0
 12873  0034E4  6E2D               	movwf	___flmul@b^0,c
 12874  0034E6  0E00               	movlw	0
 12875  0034E8  6E2E               	movwf	(___flmul@b+1)^0,c
 12876  0034EA  0E00               	movlw	0
 12877  0034EC  6E2F               	movwf	(___flmul@b+2)^0,c
 12878  0034EE  0E00               	movlw	0
 12879  0034F0  6E30               	movwf	(___flmul@b+3)^0,c
 12880  0034F2                     l6820:
 12881  0034F2  8E2F               	bsf	(___flmul@b+2)^0,7,c
 12882  0034F4  EF84  F01A         	goto	l6824
 12883  0034F8                     l6822:
 12884  0034F8  0E00               	movlw	0
 12885  0034FA  6E2D               	movwf	___flmul@b^0,c
 12886  0034FC  0E00               	movlw	0
 12887  0034FE  6E2E               	movwf	(___flmul@b+1)^0,c
 12888  003500  0E00               	movlw	0
 12889  003502  6E2F               	movwf	(___flmul@b+2)^0,c
 12890  003504  0E00               	movlw	0
 12891  003506  6E30               	movwf	(___flmul@b+3)^0,c
 12892  003508                     l6824:
 12893  003508  5034               	movf	(___flmul@a+3)^0,w,c
 12894  00350A  0B80               	andlw	128
 12895  00350C  1A39               	xorwf	___flmul@sign^0,f,c
 12896  00350E  5034               	movf	(___flmul@a+3)^0,w,c
 12897  003510  2434               	addwf	(___flmul@a+3)^0,w,c
 12898  003512  6E3A               	movwf	___flmul@aexp^0,c
 12899  003514  AE33               	btfss	(___flmul@a+2)^0,7,c
 12900  003516  EF8F  F01A         	goto	u8731
 12901  00351A  EF91  F01A         	goto	u8730
 12902  00351E                     u8731:
 12903  00351E  EF92  F01A         	goto	l6832
 12904  003522                     u8730:
 12905  003522  803A               	bsf	___flmul@aexp^0,0,c
 12906  003524                     l6832:
 12907  003524  503A               	movf	___flmul@aexp^0,w,c
 12908  003526  B4D8               	btfsc	status,2,c
 12909  003528  EF98  F01A         	goto	u8741
 12910  00352C  EF9A  F01A         	goto	u8740
 12911  003530                     u8741:
 12912  003530  EFAD  F01A         	goto	l6840
 12913  003534                     u8740:
 12914  003534  283A               	incf	___flmul@aexp^0,w,c
 12915  003536  A4D8               	btfss	status,2,c
 12916  003538  EFA0  F01A         	goto	u8751
 12917  00353C  EFA2  F01A         	goto	u8750
 12918  003540                     u8751:
 12919  003540  EFAA  F01A         	goto	l6838
 12920  003544                     u8750:
 12921  003544  0E00               	movlw	0
 12922  003546  6E31               	movwf	___flmul@a^0,c
 12923  003548  0E00               	movlw	0
 12924  00354A  6E32               	movwf	(___flmul@a+1)^0,c
 12925  00354C  0E00               	movlw	0
 12926  00354E  6E33               	movwf	(___flmul@a+2)^0,c
 12927  003550  0E00               	movlw	0
 12928  003552  6E34               	movwf	(___flmul@a+3)^0,c
 12929  003554                     l6838:
 12930  003554  8E33               	bsf	(___flmul@a+2)^0,7,c
 12931  003556  EFB5  F01A         	goto	l833
 12932  00355A                     l6840:
 12933  00355A  0E00               	movlw	0
 12934  00355C  6E31               	movwf	___flmul@a^0,c
 12935  00355E  0E00               	movlw	0
 12936  003560  6E32               	movwf	(___flmul@a+1)^0,c
 12937  003562  0E00               	movlw	0
 12938  003564  6E33               	movwf	(___flmul@a+2)^0,c
 12939  003566  0E00               	movlw	0
 12940  003568  6E34               	movwf	(___flmul@a+3)^0,c
 12941  00356A                     l833:
 12942  00356A  503A               	movf	___flmul@aexp^0,w,c
 12943  00356C  B4D8               	btfsc	status,2,c
 12944  00356E  EFBB  F01A         	goto	u8761
 12945  003572  EFBD  F01A         	goto	u8760
 12946  003576                     u8761:
 12947  003576  EFC5  F01A         	goto	l6844
 12948  00357A                     u8760:
 12949  00357A  503F               	movf	___flmul@bexp^0,w,c
 12950  00357C  A4D8               	btfss	status,2,c
 12951  00357E  EFC3  F01A         	goto	u8771
 12952  003582  EFC5  F01A         	goto	u8770
 12953  003586                     u8771:
 12954  003586  EFCF  F01A         	goto	l6848
 12955  00358A                     u8770:
 12956  00358A                     l6844:
 12957  00358A  0E00               	movlw	0
 12958  00358C  6E2D               	movwf	?___flmul^0,c
 12959  00358E  0E00               	movlw	0
 12960  003590  6E2E               	movwf	(?___flmul+1)^0,c
 12961  003592  0E00               	movlw	0
 12962  003594  6E2F               	movwf	(?___flmul+2)^0,c
 12963  003596  0E00               	movlw	0
 12964  003598  6E30               	movwf	(?___flmul+3)^0,c
 12965  00359A  EF67  F01C         	goto	l837
 12966  00359E                     l6848:
 12967  00359E  5033               	movf	(___flmul@a+2)^0,w,c
 12968  0035A0  022D               	mulwf	___flmul@b^0,c
 12969  0035A2  CFF3 F044          	movff	prodl,___flmul@temp
 12970  0035A6  CFF4 F045          	movff	prodh,___flmul@temp+1
 12971  0035AA  5044               	movf	___flmul@temp^0,w,c
 12972  0035AC  6E3B               	movwf	___flmul@grs^0,c
 12973  0035AE  6A3C               	clrf	(___flmul@grs+1)^0,c
 12974  0035B0  6A3D               	clrf	(___flmul@grs+2)^0,c
 12975  0035B2  6A3E               	clrf	(___flmul@grs+3)^0,c
 12976  0035B4  5045               	movf	(___flmul@temp+1)^0,w,c
 12977  0035B6  6E40               	movwf	___flmul@prod^0,c
 12978  0035B8  6A41               	clrf	(___flmul@prod+1)^0,c
 12979  0035BA  6A42               	clrf	(___flmul@prod+2)^0,c
 12980  0035BC  6A43               	clrf	(___flmul@prod+3)^0,c
 12981  0035BE  5032               	movf	(___flmul@a+1)^0,w,c
 12982  0035C0  022E               	mulwf	(___flmul@b+1)^0,c
 12983  0035C2  CFF3 F044          	movff	prodl,___flmul@temp
 12984  0035C6  CFF4 F045          	movff	prodh,___flmul@temp+1
 12985  0035CA  5044               	movf	___flmul@temp^0,w,c
 12986  0035CC  263B               	addwf	___flmul@grs^0,f,c
 12987  0035CE  0E00               	movlw	0
 12988  0035D0  223C               	addwfc	(___flmul@grs+1)^0,f,c
 12989  0035D2  223D               	addwfc	(___flmul@grs+2)^0,f,c
 12990  0035D4  223E               	addwfc	(___flmul@grs+3)^0,f,c
 12991  0035D6  5045               	movf	(___flmul@temp+1)^0,w,c
 12992  0035D8  2640               	addwf	___flmul@prod^0,f,c
 12993  0035DA  0E00               	movlw	0
 12994  0035DC  2241               	addwfc	(___flmul@prod+1)^0,f,c
 12995  0035DE  2242               	addwfc	(___flmul@prod+2)^0,f,c
 12996  0035E0  2243               	addwfc	(___flmul@prod+3)^0,f,c
 12997  0035E2  5031               	movf	___flmul@a^0,w,c
 12998  0035E4  022F               	mulwf	(___flmul@b+2)^0,c
 12999  0035E6  CFF3 F044          	movff	prodl,___flmul@temp
 13000  0035EA  CFF4 F045          	movff	prodh,___flmul@temp+1
 13001  0035EE  5044               	movf	___flmul@temp^0,w,c
 13002  0035F0  263B               	addwf	___flmul@grs^0,f,c
 13003  0035F2  0E00               	movlw	0
 13004  0035F4  223C               	addwfc	(___flmul@grs+1)^0,f,c
 13005  0035F6  223D               	addwfc	(___flmul@grs+2)^0,f,c
 13006  0035F8  223E               	addwfc	(___flmul@grs+3)^0,f,c
 13007  0035FA  5045               	movf	(___flmul@temp+1)^0,w,c
 13008  0035FC  2640               	addwf	___flmul@prod^0,f,c
 13009  0035FE  0E00               	movlw	0
 13010  003600  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13011  003602  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13012  003604  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13013  003606  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 13014  00360A  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 13015  00360E  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 13016  003612  6A3B               	clrf	___flmul@grs^0,c
 13017  003614  5031               	movf	___flmul@a^0,w,c
 13018  003616  022E               	mulwf	(___flmul@b+1)^0,c
 13019  003618  CFF3 F044          	movff	prodl,___flmul@temp
 13020  00361C  CFF4 F045          	movff	prodh,___flmul@temp+1
 13021  003620  5044               	movf	___flmul@temp^0,w,c
 13022  003622  263B               	addwf	___flmul@grs^0,f,c
 13023  003624  5045               	movf	(___flmul@temp+1)^0,w,c
 13024  003626  223C               	addwfc	(___flmul@grs+1)^0,f,c
 13025  003628  0E00               	movlw	0
 13026  00362A  223D               	addwfc	(___flmul@grs+2)^0,f,c
 13027  00362C  0E00               	movlw	0
 13028  00362E  223E               	addwfc	(___flmul@grs+3)^0,f,c
 13029  003630  5032               	movf	(___flmul@a+1)^0,w,c
 13030  003632  022D               	mulwf	___flmul@b^0,c
 13031  003634  CFF3 F044          	movff	prodl,___flmul@temp
 13032  003638  CFF4 F045          	movff	prodh,___flmul@temp+1
 13033  00363C  5044               	movf	___flmul@temp^0,w,c
 13034  00363E  263B               	addwf	___flmul@grs^0,f,c
 13035  003640  5045               	movf	(___flmul@temp+1)^0,w,c
 13036  003642  223C               	addwfc	(___flmul@grs+1)^0,f,c
 13037  003644  0E00               	movlw	0
 13038  003646  223D               	addwfc	(___flmul@grs+2)^0,f,c
 13039  003648  0E00               	movlw	0
 13040  00364A  223E               	addwfc	(___flmul@grs+3)^0,f,c
 13041  00364C  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 13042  003650  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 13043  003654  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 13044  003658  6A3B               	clrf	___flmul@grs^0,c
 13045  00365A  5031               	movf	___flmul@a^0,w,c
 13046  00365C  022D               	mulwf	___flmul@b^0,c
 13047  00365E  CFF3 F044          	movff	prodl,___flmul@temp
 13048  003662  CFF4 F045          	movff	prodh,___flmul@temp+1
 13049  003666  5044               	movf	___flmul@temp^0,w,c
 13050  003668  263B               	addwf	___flmul@grs^0,f,c
 13051  00366A  5045               	movf	(___flmul@temp+1)^0,w,c
 13052  00366C  223C               	addwfc	(___flmul@grs+1)^0,f,c
 13053  00366E  0E00               	movlw	0
 13054  003670  223D               	addwfc	(___flmul@grs+2)^0,f,c
 13055  003672  0E00               	movlw	0
 13056  003674  223E               	addwfc	(___flmul@grs+3)^0,f,c
 13057  003676  5033               	movf	(___flmul@a+2)^0,w,c
 13058  003678  022E               	mulwf	(___flmul@b+1)^0,c
 13059  00367A  CFF3 F044          	movff	prodl,___flmul@temp
 13060  00367E  CFF4 F045          	movff	prodh,___flmul@temp+1
 13061  003682  5044               	movf	___flmul@temp^0,w,c
 13062  003684  2640               	addwf	___flmul@prod^0,f,c
 13063  003686  5045               	movf	(___flmul@temp+1)^0,w,c
 13064  003688  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13065  00368A  0E00               	movlw	0
 13066  00368C  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13067  00368E  0E00               	movlw	0
 13068  003690  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13069  003692  5032               	movf	(___flmul@a+1)^0,w,c
 13070  003694  022F               	mulwf	(___flmul@b+2)^0,c
 13071  003696  CFF3 F044          	movff	prodl,___flmul@temp
 13072  00369A  CFF4 F045          	movff	prodh,___flmul@temp+1
 13073  00369E  5044               	movf	___flmul@temp^0,w,c
 13074  0036A0  2640               	addwf	___flmul@prod^0,f,c
 13075  0036A2  5045               	movf	(___flmul@temp+1)^0,w,c
 13076  0036A4  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13077  0036A6  0E00               	movlw	0
 13078  0036A8  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13079  0036AA  0E00               	movlw	0
 13080  0036AC  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13081  0036AE  5033               	movf	(___flmul@a+2)^0,w,c
 13082  0036B0  022F               	mulwf	(___flmul@b+2)^0,c
 13083  0036B2  CFF3 F044          	movff	prodl,___flmul@temp
 13084  0036B6  CFF4 F045          	movff	prodh,___flmul@temp+1
 13085  0036BA  5044               	movf	___flmul@temp^0,w,c
 13086  0036BC  6E35               	movwf	??___flmul^0,c
 13087  0036BE  5045               	movf	(___flmul@temp+1)^0,w,c
 13088  0036C0  6E36               	movwf	(??___flmul+1)^0,c
 13089  0036C2  6A37               	clrf	(??___flmul+2)^0,c
 13090  0036C4  6A38               	clrf	(??___flmul+3)^0,c
 13091  0036C6  C037  F038         	movff	??___flmul+2,??___flmul+3
 13092  0036CA  C036  F037         	movff	??___flmul+1,??___flmul+2
 13093  0036CE  C035  F036         	movff	??___flmul,??___flmul+1
 13094  0036D2  6A35               	clrf	??___flmul^0,c
 13095  0036D4  5035               	movf	??___flmul^0,w,c
 13096  0036D6  2640               	addwf	___flmul@prod^0,f,c
 13097  0036D8  5036               	movf	(??___flmul+1)^0,w,c
 13098  0036DA  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13099  0036DC  5037               	movf	(??___flmul+2)^0,w,c
 13100  0036DE  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13101  0036E0  5038               	movf	(??___flmul+3)^0,w,c
 13102  0036E2  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13103  0036E4  C03B  F035         	movff	___flmul@grs,??___flmul
 13104  0036E8  C03C  F036         	movff	___flmul@grs+1,??___flmul+1
 13105  0036EC  C03D  F037         	movff	___flmul@grs+2,??___flmul+2
 13106  0036F0  C03E  F038         	movff	___flmul@grs+3,??___flmul+3
 13107  0036F4  0E19               	movlw	25
 13108  0036F6  EF82  F01B         	goto	u8780
 13109  0036FA                     u8785:
 13110  0036FA  90D8               	bcf	status,0,c
 13111  0036FC  3238               	rrcf	(??___flmul+3)^0,f,c
 13112  0036FE  3237               	rrcf	(??___flmul+2)^0,f,c
 13113  003700  3236               	rrcf	(??___flmul+1)^0,f,c
 13114  003702  3235               	rrcf	??___flmul^0,f,c
 13115  003704                     u8780:
 13116  003704  2EE8               	decfsz	wreg,f,c
 13117  003706  EF7D  F01B         	goto	u8785
 13118  00370A  5035               	movf	??___flmul^0,w,c
 13119  00370C  2640               	addwf	___flmul@prod^0,f,c
 13120  00370E  5036               	movf	(??___flmul+1)^0,w,c
 13121  003710  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13122  003712  5037               	movf	(??___flmul+2)^0,w,c
 13123  003714  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13124  003716  5038               	movf	(??___flmul+3)^0,w,c
 13125  003718  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13126  00371A  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 13127  00371E  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 13128  003722  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 13129  003726  6A3B               	clrf	___flmul@grs^0,c
 13130  003728  503A               	movf	___flmul@aexp^0,w,c
 13131  00372A  C03F  F035         	movff	___flmul@bexp,??___flmul
 13132  00372E  6A36               	clrf	(??___flmul+1)^0,c
 13133  003730  2635               	addwf	??___flmul^0,f,c
 13134  003732  0E00               	movlw	0
 13135  003734  2236               	addwfc	(??___flmul+1)^0,f,c
 13136  003736  0E82               	movlw	130
 13137  003738  2435               	addwf	??___flmul^0,w,c
 13138  00373A  6E44               	movwf	___flmul@temp^0,c
 13139  00373C  0EFF               	movlw	255
 13140  00373E  2036               	addwfc	(??___flmul+1)^0,w,c
 13141  003740  6E45               	movwf	(___flmul@temp+1)^0,c
 13142  003742  EFB8  F01B         	goto	l6896
 13143  003746                     l6890:
 13144  003746  90D8               	bcf	status,0,c
 13145  003748  3640               	rlcf	___flmul@prod^0,f,c
 13146  00374A  3641               	rlcf	(___flmul@prod+1)^0,f,c
 13147  00374C  3642               	rlcf	(___flmul@prod+2)^0,f,c
 13148  00374E  3643               	rlcf	(___flmul@prod+3)^0,f,c
 13149  003750  AE3E               	btfss	(___flmul@grs+3)^0,7,c
 13150  003752  EFAD  F01B         	goto	u8791
 13151  003756  EFAF  F01B         	goto	u8790
 13152  00375A                     u8791:
 13153  00375A  EFB0  F01B         	goto	l840
 13154  00375E                     u8790:
 13155  00375E  8040               	bsf	___flmul@prod^0,0,c
 13156  003760                     l840:
 13157  003760  90D8               	bcf	status,0,c
 13158  003762  363B               	rlcf	___flmul@grs^0,f,c
 13159  003764  363C               	rlcf	(___flmul@grs+1)^0,f,c
 13160  003766  363D               	rlcf	(___flmul@grs+2)^0,f,c
 13161  003768  363E               	rlcf	(___flmul@grs+3)^0,f,c
 13162  00376A  0644               	decf	___flmul@temp^0,f,c
 13163  00376C  A0D8               	btfss	status,0,c
 13164  00376E  0645               	decf	(___flmul@temp+1)^0,f,c
 13165  003770                     l6896:
 13166  003770  AE42               	btfss	(___flmul@prod+2)^0,7,c
 13167  003772  EFBD  F01B         	goto	u8801
 13168  003776  EFBF  F01B         	goto	u8800
 13169  00377A                     u8801:
 13170  00377A  EFA3  F01B         	goto	l6890
 13171  00377E                     u8800:
 13172  00377E  0E00               	movlw	0
 13173  003780  6E3A               	movwf	___flmul@aexp^0,c
 13174  003782  AE3E               	btfss	(___flmul@grs+3)^0,7,c
 13175  003784  EFC6  F01B         	goto	u8811
 13176  003788  EFC8  F01B         	goto	u8810
 13177  00378C                     u8811:
 13178  00378C  EFEC  F01B         	goto	l842
 13179  003790                     u8810:
 13180  003790  0EFF               	movlw	255
 13181  003792  143B               	andwf	___flmul@grs^0,w,c
 13182  003794  6E35               	movwf	??___flmul^0,c
 13183  003796  0EFF               	movlw	255
 13184  003798  143C               	andwf	(___flmul@grs+1)^0,w,c
 13185  00379A  6E36               	movwf	(??___flmul+1)^0,c
 13186  00379C  0EFF               	movlw	255
 13187  00379E  143D               	andwf	(___flmul@grs+2)^0,w,c
 13188  0037A0  6E37               	movwf	(??___flmul+2)^0,c
 13189  0037A2  0E7F               	movlw	127
 13190  0037A4  143E               	andwf	(___flmul@grs+3)^0,w,c
 13191  0037A6  6E38               	movwf	(??___flmul+3)^0,c
 13192  0037A8  5035               	movf	??___flmul^0,w,c
 13193  0037AA  1036               	iorwf	(??___flmul+1)^0,w,c
 13194  0037AC  1037               	iorwf	(??___flmul+2)^0,w,c
 13195  0037AE  1038               	iorwf	(??___flmul+3)^0,w,c
 13196  0037B0  B4D8               	btfsc	status,2,c
 13197  0037B2  EFDD  F01B         	goto	u8821
 13198  0037B6  EFDF  F01B         	goto	u8820
 13199  0037BA                     u8821:
 13200  0037BA  EFE3  F01B         	goto	l843
 13201  0037BE                     u8820:
 13202  0037BE                     l6904:
 13203  0037BE  0E01               	movlw	1
 13204  0037C0  6E3A               	movwf	___flmul@aexp^0,c
 13205  0037C2  EFEC  F01B         	goto	l842
 13206  0037C6                     l843:
 13207  0037C6  A040               	btfss	___flmul@prod^0,0,c
 13208  0037C8  EFE8  F01B         	goto	u8831
 13209  0037CC  EFEA  F01B         	goto	u8830
 13210  0037D0                     u8831:
 13211  0037D0  EFEC  F01B         	goto	l842
 13212  0037D4                     u8830:
 13213  0037D4  EFDF  F01B         	goto	l6904
 13214  0037D8                     l842:
 13215  0037D8  503A               	movf	___flmul@aexp^0,w,c
 13216  0037DA  B4D8               	btfsc	status,2,c
 13217  0037DC  EFF2  F01B         	goto	u8841
 13218  0037E0  EFF4  F01B         	goto	u8840
 13219  0037E4                     u8841:
 13220  0037E4  EF18  F01C         	goto	l6916
 13221  0037E8                     u8840:
 13222  0037E8  0E01               	movlw	1
 13223  0037EA  2640               	addwf	___flmul@prod^0,f,c
 13224  0037EC  0E00               	movlw	0
 13225  0037EE  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13226  0037F0  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13227  0037F2  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13228  0037F4  A043               	btfss	(___flmul@prod+3)^0,0,c
 13229  0037F6  EFFF  F01B         	goto	u8851
 13230  0037FA  EF01  F01C         	goto	u8850
 13231  0037FE                     u8851:
 13232  0037FE  EF18  F01C         	goto	l6916
 13233  003802                     u8850:
 13234  003802  C040  F035         	movff	___flmul@prod,??___flmul
 13235  003806  C041  F036         	movff	___flmul@prod+1,??___flmul+1
 13236  00380A  C042  F037         	movff	___flmul@prod+2,??___flmul+2
 13237  00380E  C043  F038         	movff	___flmul@prod+3,??___flmul+3
 13238  003812  3438               	rlcf	(??___flmul+3)^0,w,c
 13239  003814  3238               	rrcf	(??___flmul+3)^0,f,c
 13240  003816  3237               	rrcf	(??___flmul+2)^0,f,c
 13241  003818  3236               	rrcf	(??___flmul+1)^0,f,c
 13242  00381A  3235               	rrcf	??___flmul^0,f,c
 13243  00381C  C035  F040         	movff	??___flmul,___flmul@prod
 13244  003820  C036  F041         	movff	??___flmul+1,___flmul@prod+1
 13245  003824  C037  F042         	movff	??___flmul+2,___flmul@prod+2
 13246  003828  C038  F043         	movff	??___flmul+3,___flmul@prod+3
 13247  00382C  4A44               	infsnz	___flmul@temp^0,f,c
 13248  00382E  2A45               	incf	(___flmul@temp+1)^0,f,c
 13249  003830                     l6916:
 13250  003830  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 13251  003832  EF23  F01C         	goto	u8861
 13252  003836  5045               	movf	(___flmul@temp+1)^0,w,c
 13253  003838  E108               	bnz	u8860
 13254  00383A  2844               	incf	___flmul@temp^0,w,c
 13255  00383C  A0D8               	btfss	status,0,c
 13256  00383E  EF23  F01C         	goto	u8861
 13257  003842  EF25  F01C         	goto	u8860
 13258  003846                     u8861:
 13259  003846  EF2F  F01C         	goto	l6920
 13260  00384A                     u8860:
 13261  00384A  0E00               	movlw	0
 13262  00384C  6E40               	movwf	___flmul@prod^0,c
 13263  00384E  0E00               	movlw	0
 13264  003850  6E41               	movwf	(___flmul@prod+1)^0,c
 13265  003852  0E80               	movlw	128
 13266  003854  6E42               	movwf	(___flmul@prod+2)^0,c
 13267  003856  0E7F               	movlw	127
 13268  003858  6E43               	movwf	(___flmul@prod+3)^0,c
 13269  00385A  EF5D  F01C         	goto	l6932
 13270  00385E                     l6920:
 13271  00385E  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 13272  003860  EF3C  F01C         	goto	u8870
 13273  003864  5045               	movf	(___flmul@temp+1)^0,w,c
 13274  003866  E106               	bnz	u8871
 13275  003868  0444               	decf	___flmul@temp^0,w,c
 13276  00386A  B0D8               	btfsc	status,0,c
 13277  00386C  EF3A  F01C         	goto	u8871
 13278  003870  EF3C  F01C         	goto	u8870
 13279  003874                     u8871:
 13280  003874  EF48  F01C         	goto	l850
 13281  003878                     u8870:
 13282  003878  0E00               	movlw	0
 13283  00387A  6E40               	movwf	___flmul@prod^0,c
 13284  00387C  0E00               	movlw	0
 13285  00387E  6E41               	movwf	(___flmul@prod+1)^0,c
 13286  003880  0E00               	movlw	0
 13287  003882  6E42               	movwf	(___flmul@prod+2)^0,c
 13288  003884  0E00               	movlw	0
 13289  003886  6E43               	movwf	(___flmul@prod+3)^0,c
 13290  003888  0E00               	movlw	0
 13291  00388A  6E39               	movwf	___flmul@sign^0,c
 13292  00388C  EF5D  F01C         	goto	l6932
 13293  003890                     l850:
 13294  003890  C044  F03F         	movff	___flmul@temp,___flmul@bexp
 13295  003894  0EFF               	movlw	255
 13296  003896  1640               	andwf	___flmul@prod^0,f,c
 13297  003898  0EFF               	movlw	255
 13298  00389A  1641               	andwf	(___flmul@prod+1)^0,f,c
 13299  00389C  0E7F               	movlw	127
 13300  00389E  1642               	andwf	(___flmul@prod+2)^0,f,c
 13301  0038A0  0E00               	movlw	0
 13302  0038A2  1643               	andwf	(___flmul@prod+3)^0,f,c
 13303  0038A4  A03F               	btfss	___flmul@bexp^0,0,c
 13304  0038A6  EF57  F01C         	goto	u8881
 13305  0038AA  EF59  F01C         	goto	u8880
 13306  0038AE                     u8881:
 13307  0038AE  EF5A  F01C         	goto	l6930
 13308  0038B2                     u8880:
 13309  0038B2  8E42               	bsf	(___flmul@prod+2)^0,7,c
 13310  0038B4                     l6930:
 13311  0038B4  90D8               	bcf	status,0,c
 13312  0038B6  303F               	rrcf	___flmul@bexp^0,w,c
 13313  0038B8  6E43               	movwf	(___flmul@prod+3)^0,c
 13314  0038BA                     l6932:
 13315  0038BA  5039               	movf	___flmul@sign^0,w,c
 13316  0038BC  1243               	iorwf	(___flmul@prod+3)^0,f,c
 13317  0038BE  C040  F02D         	movff	___flmul@prod,?___flmul
 13318  0038C2  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
 13319  0038C6  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
 13320  0038CA  C043  F030         	movff	___flmul@prod+3,?___flmul+3
 13321  0038CE                     l837:
 13322  0038CE  0012               	return		;funcret
 13323  0038D0                     __end_of___flmul:
 13324                           	callstack 0
 13325                           
 13326 ;; *************** function ___fldiv *****************
 13327 ;; Defined at:
 13328 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
 13329 ;; Parameters:    Size  Location     Type
 13330 ;;  b               4   69[COMRAM] unsigned char 
 13331 ;;  a               4   73[COMRAM] unsigned char 
 13332 ;; Auto vars:     Size  Location     Type
 13333 ;;  grs             4    7[BANK0 ] unsigned long 
 13334 ;;  rem             4    0[BANK0 ] unsigned long 
 13335 ;;  new_exp         2    5[BANK0 ] short 
 13336 ;;  aexp            1   12[BANK0 ] unsigned char 
 13337 ;;  bexp            1   11[BANK0 ] unsigned char 
 13338 ;;  sign            1    4[BANK0 ] unsigned char 
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  4   69[COMRAM] unsigned char 
 13341 ;; Registers used:
 13342 ;;		wreg, status,2, status,0
 13343 ;; Tracked objects:
 13344 ;;		On entry : 0/0
 13345 ;;		On exit  : 0/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13348 ;;      Params:         8       0       0       0       0       0       0       0       0
 13349 ;;      Locals:         0      13       0       0       0       0       0       0       0
 13350 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13351 ;;      Totals:        12      13       0       0       0       0       0       0       0
 13352 ;;Total ram usage:       25 bytes
 13353 ;; Hardware stack levels used: 1
 13354 ;; Hardware stack levels required when called: 2
 13355 ;; This function calls:
 13356 ;;		Nothing
 13357 ;; This function is called by:
 13358 ;;		_PWM1_Init
 13359 ;;		_PWM1_Set_Duty
 13360 ;;		_efgtoa
 13361 ;;		_strtof
 13362 ;;		_PWM2_Init
 13363 ;; This function uses a non-reentrant model
 13364 ;;
 13365                           
 13366                           	psect	text53
 13367  0038D0                     __ptext53:
 13368                           	callstack 0
 13369  0038D0                     ___fldiv:
 13370                           	callstack 24
 13371  0038D0  5049               	movf	(___fldiv@b+3)^0,w,c
 13372  0038D2  0B80               	andlw	128
 13373  0038D4  0100               	movlb	0	; () banked
 13374  0038D6  6F64               	movwf	___fldiv@sign& (0+255),b
 13375  0038D8  5049               	movf	(___fldiv@b+3)^0,w,c
 13376  0038DA  2449               	addwf	(___fldiv@b+3)^0,w,c
 13377  0038DC  6F6B               	movwf	___fldiv@bexp& (0+255),b
 13378  0038DE                     
 13379                           ; BSR set to: 0
 13380  0038DE  AE48               	btfss	(___fldiv@b+2)^0,7,c
 13381  0038E0  EF74  F01C         	goto	u8471
 13382  0038E4  EF76  F01C         	goto	u8470
 13383  0038E8                     u8471:
 13384  0038E8  EF77  F01C         	goto	l6676
 13385  0038EC                     u8470:
 13386  0038EC                     
 13387                           ; BSR set to: 0
 13388  0038EC  816B               	bsf	___fldiv@bexp& (0+255),0,b
 13389  0038EE                     l6676:
 13390                           
 13391                           ; BSR set to: 0
 13392  0038EE  516B               	movf	___fldiv@bexp& (0+255),w,b
 13393  0038F0  B4D8               	btfsc	status,2,c
 13394  0038F2  EF7D  F01C         	goto	u8481
 13395  0038F6  EF7F  F01C         	goto	u8480
 13396  0038FA                     u8481:
 13397  0038FA  EF94  F01C         	goto	l6686
 13398  0038FE                     u8480:
 13399  0038FE                     
 13400                           ; BSR set to: 0
 13401  0038FE  296B               	incf	___fldiv@bexp& (0+255),w,b
 13402  003900  A4D8               	btfss	status,2,c
 13403  003902  EF85  F01C         	goto	u8491
 13404  003906  EF87  F01C         	goto	u8490
 13405  00390A                     u8491:
 13406  00390A  EF8F  F01C         	goto	l6682
 13407  00390E                     u8490:
 13408  00390E                     
 13409                           ; BSR set to: 0
 13410  00390E  0E00               	movlw	0
 13411  003910  6E46               	movwf	___fldiv@b^0,c
 13412  003912  0E00               	movlw	0
 13413  003914  6E47               	movwf	(___fldiv@b+1)^0,c
 13414  003916  0E00               	movlw	0
 13415  003918  6E48               	movwf	(___fldiv@b+2)^0,c
 13416  00391A  0E00               	movlw	0
 13417  00391C  6E49               	movwf	(___fldiv@b+3)^0,c
 13418  00391E                     l6682:
 13419                           
 13420                           ; BSR set to: 0
 13421  00391E  8E48               	bsf	(___fldiv@b+2)^0,7,c
 13422  003920                     
 13423                           ; BSR set to: 0
 13424  003920  0E00               	movlw	0
 13425  003922  6E49               	movwf	(___fldiv@b+3)^0,c
 13426  003924  EF9C  F01C         	goto	l6688
 13427  003928                     l6686:
 13428                           
 13429                           ; BSR set to: 0
 13430  003928  0E00               	movlw	0
 13431  00392A  6E46               	movwf	___fldiv@b^0,c
 13432  00392C  0E00               	movlw	0
 13433  00392E  6E47               	movwf	(___fldiv@b+1)^0,c
 13434  003930  0E00               	movlw	0
 13435  003932  6E48               	movwf	(___fldiv@b+2)^0,c
 13436  003934  0E00               	movlw	0
 13437  003936  6E49               	movwf	(___fldiv@b+3)^0,c
 13438  003938                     l6688:
 13439                           
 13440                           ; BSR set to: 0
 13441  003938  504D               	movf	(___fldiv@a+3)^0,w,c
 13442  00393A  0B80               	andlw	128
 13443  00393C  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 13444  00393E                     
 13445                           ; BSR set to: 0
 13446  00393E  504D               	movf	(___fldiv@a+3)^0,w,c
 13447  003940  244D               	addwf	(___fldiv@a+3)^0,w,c
 13448  003942  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13449  003944                     
 13450                           ; BSR set to: 0
 13451  003944  AE4C               	btfss	(___fldiv@a+2)^0,7,c
 13452  003946  EFA7  F01C         	goto	u8501
 13453  00394A  EFA9  F01C         	goto	u8500
 13454  00394E                     u8501:
 13455  00394E  EFAA  F01C         	goto	l6696
 13456  003952                     u8500:
 13457  003952                     
 13458                           ; BSR set to: 0
 13459  003952  816C               	bsf	___fldiv@aexp& (0+255),0,b
 13460  003954                     l6696:
 13461                           
 13462                           ; BSR set to: 0
 13463  003954  516C               	movf	___fldiv@aexp& (0+255),w,b
 13464  003956  B4D8               	btfsc	status,2,c
 13465  003958  EFB0  F01C         	goto	u8511
 13466  00395C  EFB2  F01C         	goto	u8510
 13467  003960                     u8511:
 13468  003960  EFC7  F01C         	goto	l6706
 13469  003964                     u8510:
 13470  003964                     
 13471                           ; BSR set to: 0
 13472  003964  296C               	incf	___fldiv@aexp& (0+255),w,b
 13473  003966  A4D8               	btfss	status,2,c
 13474  003968  EFB8  F01C         	goto	u8521
 13475  00396C  EFBA  F01C         	goto	u8520
 13476  003970                     u8521:
 13477  003970  EFC2  F01C         	goto	l6702
 13478  003974                     u8520:
 13479  003974                     
 13480                           ; BSR set to: 0
 13481  003974  0E00               	movlw	0
 13482  003976  6E4A               	movwf	___fldiv@a^0,c
 13483  003978  0E00               	movlw	0
 13484  00397A  6E4B               	movwf	(___fldiv@a+1)^0,c
 13485  00397C  0E00               	movlw	0
 13486  00397E  6E4C               	movwf	(___fldiv@a+2)^0,c
 13487  003980  0E00               	movlw	0
 13488  003982  6E4D               	movwf	(___fldiv@a+3)^0,c
 13489  003984                     l6702:
 13490                           
 13491                           ; BSR set to: 0
 13492  003984  8E4C               	bsf	(___fldiv@a+2)^0,7,c
 13493  003986                     
 13494                           ; BSR set to: 0
 13495  003986  0E00               	movlw	0
 13496  003988  6E4D               	movwf	(___fldiv@a+3)^0,c
 13497  00398A  EFCF  F01C         	goto	l6708
 13498  00398E                     l6706:
 13499                           
 13500                           ; BSR set to: 0
 13501  00398E  0E00               	movlw	0
 13502  003990  6E4A               	movwf	___fldiv@a^0,c
 13503  003992  0E00               	movlw	0
 13504  003994  6E4B               	movwf	(___fldiv@a+1)^0,c
 13505  003996  0E00               	movlw	0
 13506  003998  6E4C               	movwf	(___fldiv@a+2)^0,c
 13507  00399A  0E00               	movlw	0
 13508  00399C  6E4D               	movwf	(___fldiv@a+3)^0,c
 13509  00399E                     l6708:
 13510                           
 13511                           ; BSR set to: 0
 13512  00399E  504A               	movf	___fldiv@a^0,w,c
 13513  0039A0  104B               	iorwf	(___fldiv@a+1)^0,w,c
 13514  0039A2  104C               	iorwf	(___fldiv@a+2)^0,w,c
 13515  0039A4  104D               	iorwf	(___fldiv@a+3)^0,w,c
 13516  0039A6  A4D8               	btfss	status,2,c
 13517  0039A8  EFD8  F01C         	goto	u8531
 13518  0039AC  EFDA  F01C         	goto	u8530
 13519  0039B0                     u8531:
 13520  0039B0  EFF2  F01C         	goto	l6720
 13521  0039B4                     u8530:
 13522  0039B4                     
 13523                           ; BSR set to: 0
 13524  0039B4  0E00               	movlw	0
 13525  0039B6  6E46               	movwf	___fldiv@b^0,c
 13526  0039B8  0E00               	movlw	0
 13527  0039BA  6E47               	movwf	(___fldiv@b+1)^0,c
 13528  0039BC  0E00               	movlw	0
 13529  0039BE  6E48               	movwf	(___fldiv@b+2)^0,c
 13530  0039C0  0E00               	movlw	0
 13531  0039C2  6E49               	movwf	(___fldiv@b+3)^0,c
 13532  0039C4                     
 13533                           ; BSR set to: 0
 13534  0039C4  0E80               	movlw	128
 13535  0039C6  1248               	iorwf	(___fldiv@b+2)^0,f,c
 13536  0039C8  0E7F               	movlw	127
 13537  0039CA  1249               	iorwf	(___fldiv@b+3)^0,f,c
 13538  0039CC                     l6714:
 13539                           
 13540                           ; BSR set to: 0
 13541  0039CC  5164               	movf	___fldiv@sign& (0+255),w,b
 13542  0039CE  1249               	iorwf	(___fldiv@b+3)^0,f,c
 13543  0039D0                     
 13544                           ; BSR set to: 0
 13545  0039D0  C046  F046         	movff	___fldiv@b,?___fldiv
 13546  0039D4  C047  F047         	movff	___fldiv@b+1,?___fldiv+1
 13547  0039D8  C048  F048         	movff	___fldiv@b+2,?___fldiv+2
 13548  0039DC  C049  F049         	movff	___fldiv@b+3,?___fldiv+3
 13549  0039E0  EF35  F01E         	goto	l801
 13550  0039E4                     l6720:
 13551                           
 13552                           ; BSR set to: 0
 13553  0039E4  516B               	movf	___fldiv@bexp& (0+255),w,b
 13554  0039E6  A4D8               	btfss	status,2,c
 13555  0039E8  EFF8  F01C         	goto	u8541
 13556  0039EC  EFFA  F01C         	goto	u8540
 13557  0039F0                     u8541:
 13558  0039F0  EF04  F01D         	goto	l6728
 13559  0039F4                     u8540:
 13560  0039F4                     
 13561                           ; BSR set to: 0
 13562  0039F4  0E00               	movlw	0
 13563  0039F6  6E46               	movwf	?___fldiv^0,c
 13564  0039F8  0E00               	movlw	0
 13565  0039FA  6E47               	movwf	(?___fldiv+1)^0,c
 13566  0039FC  0E00               	movlw	0
 13567  0039FE  6E48               	movwf	(?___fldiv+2)^0,c
 13568  003A00  0E00               	movlw	0
 13569  003A02  6E49               	movwf	(?___fldiv+3)^0,c
 13570  003A04  EF35  F01E         	goto	l801
 13571  003A08                     l6728:
 13572                           
 13573                           ; BSR set to: 0
 13574  003A08  516C               	movf	___fldiv@aexp& (0+255),w,b
 13575  003A0A  C06B  F04E         	movff	___fldiv@bexp,??___fldiv
 13576  003A0E  6A4F               	clrf	(??___fldiv+1)^0,c
 13577  003A10  5E4E               	subwf	??___fldiv^0,f,c
 13578  003A12  0E00               	movlw	0
 13579  003A14  5A4F               	subwfb	(??___fldiv+1)^0,f,c
 13580  003A16  0E7F               	movlw	127
 13581  003A18  244E               	addwf	??___fldiv^0,w,c
 13582  003A1A  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13583  003A1C  0E00               	movlw	0
 13584  003A1E  204F               	addwfc	(??___fldiv+1)^0,w,c
 13585  003A20  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13586  003A22                     
 13587                           ; BSR set to: 0
 13588  003A22  C046  F060         	movff	___fldiv@b,___fldiv@rem
 13589  003A26  C047  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 13590  003A2A  C048  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 13591  003A2E  C049  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 13592  003A32                     
 13593                           ; BSR set to: 0
 13594  003A32  0E00               	movlw	0
 13595  003A34  6E46               	movwf	___fldiv@b^0,c
 13596  003A36  0E00               	movlw	0
 13597  003A38  6E47               	movwf	(___fldiv@b+1)^0,c
 13598  003A3A  0E00               	movlw	0
 13599  003A3C  6E48               	movwf	(___fldiv@b+2)^0,c
 13600  003A3E  0E00               	movlw	0
 13601  003A40  6E49               	movwf	(___fldiv@b+3)^0,c
 13602  003A42                     
 13603                           ; BSR set to: 0
 13604  003A42  0E00               	movlw	0
 13605  003A44  6F67               	movwf	___fldiv@grs& (0+255),b
 13606  003A46  0E00               	movlw	0
 13607  003A48  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 13608  003A4A  0E00               	movlw	0
 13609  003A4C  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 13610  003A4E  0E00               	movlw	0
 13611  003A50  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 13612  003A52                     
 13613                           ; BSR set to: 0
 13614  003A52  0E00               	movlw	0
 13615  003A54  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13616  003A56  EF65  F01D         	goto	l803
 13617  003A5A                     l6738:
 13618                           
 13619                           ; BSR set to: 0
 13620  003A5A  516C               	movf	___fldiv@aexp& (0+255),w,b
 13621  003A5C  B4D8               	btfsc	status,2,c
 13622  003A5E  EF33  F01D         	goto	u8551
 13623  003A62  EF35  F01D         	goto	u8550
 13624  003A66                     u8551:
 13625  003A66  EF4C  F01D         	goto	l6746
 13626  003A6A                     u8550:
 13627  003A6A                     
 13628                           ; BSR set to: 0
 13629  003A6A  90D8               	bcf	status,0,c
 13630  003A6C  3760               	rlcf	___fldiv@rem& (0+255),f,b
 13631  003A6E  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13632  003A70  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13633  003A72  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13634  003A74  90D8               	bcf	status,0,c
 13635  003A76  3646               	rlcf	___fldiv@b^0,f,c
 13636  003A78  3647               	rlcf	(___fldiv@b+1)^0,f,c
 13637  003A7A  3648               	rlcf	(___fldiv@b+2)^0,f,c
 13638  003A7C  3649               	rlcf	(___fldiv@b+3)^0,f,c
 13639  003A7E                     
 13640                           ; BSR set to: 0
 13641  003A7E  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13642  003A80  EF44  F01D         	goto	u8561
 13643  003A84  EF46  F01D         	goto	u8560
 13644  003A88                     u8561:
 13645  003A88  EF47  F01D         	goto	l806
 13646  003A8C                     u8560:
 13647  003A8C                     
 13648                           ; BSR set to: 0
 13649  003A8C  8046               	bsf	___fldiv@b^0,0,c
 13650  003A8E                     l806:
 13651                           
 13652                           ; BSR set to: 0
 13653  003A8E  90D8               	bcf	status,0,c
 13654  003A90  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13655  003A92  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13656  003A94  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13657  003A96  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13658  003A98                     l6746:
 13659                           
 13660                           ; BSR set to: 0
 13661  003A98  504A               	movf	___fldiv@a^0,w,c
 13662  003A9A  5D60               	subwf	___fldiv@rem& (0+255),w,b
 13663  003A9C  504B               	movf	(___fldiv@a+1)^0,w,c
 13664  003A9E  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13665  003AA0  504C               	movf	(___fldiv@a+2)^0,w,c
 13666  003AA2  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13667  003AA4  504D               	movf	(___fldiv@a+3)^0,w,c
 13668  003AA6  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13669  003AA8  A0D8               	btfss	status,0,c
 13670  003AAA  EF59  F01D         	goto	u8571
 13671  003AAE  EF5B  F01D         	goto	u8570
 13672  003AB2                     u8571:
 13673  003AB2  EF64  F01D         	goto	l6752
 13674  003AB6                     u8570:
 13675  003AB6                     
 13676                           ; BSR set to: 0
 13677  003AB6  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13678  003AB8                     
 13679                           ; BSR set to: 0
 13680  003AB8  504A               	movf	___fldiv@a^0,w,c
 13681  003ABA  5F60               	subwf	___fldiv@rem& (0+255),f,b
 13682  003ABC  504B               	movf	(___fldiv@a+1)^0,w,c
 13683  003ABE  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13684  003AC0  504C               	movf	(___fldiv@a+2)^0,w,c
 13685  003AC2  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13686  003AC4  504D               	movf	(___fldiv@a+3)^0,w,c
 13687  003AC6  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13688  003AC8                     l6752:
 13689                           
 13690                           ; BSR set to: 0
 13691  003AC8  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 13692  003ACA                     l803:
 13693                           
 13694                           ; BSR set to: 0
 13695  003ACA  0E19               	movlw	25
 13696  003ACC  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 13697  003ACE  EF6B  F01D         	goto	u8581
 13698  003AD2  EF6D  F01D         	goto	u8580
 13699  003AD6                     u8581:
 13700  003AD6  EF2D  F01D         	goto	l6738
 13701  003ADA                     u8580:
 13702  003ADA                     
 13703                           ; BSR set to: 0
 13704  003ADA  5160               	movf	___fldiv@rem& (0+255),w,b
 13705  003ADC  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13706  003ADE  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13707  003AE0  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13708  003AE2  B4D8               	btfsc	status,2,c
 13709  003AE4  EF76  F01D         	goto	u8591
 13710  003AE8  EF78  F01D         	goto	u8590
 13711  003AEC                     u8591:
 13712  003AEC  EF90  F01D         	goto	l6764
 13713  003AF0                     u8590:
 13714  003AF0                     
 13715                           ; BSR set to: 0
 13716  003AF0  8167               	bsf	___fldiv@grs& (0+255),0,b
 13717  003AF2  EF90  F01D         	goto	l6764
 13718  003AF6                     l6758:
 13719                           
 13720                           ; BSR set to: 0
 13721  003AF6  90D8               	bcf	status,0,c
 13722  003AF8  3646               	rlcf	___fldiv@b^0,f,c
 13723  003AFA  3647               	rlcf	(___fldiv@b+1)^0,f,c
 13724  003AFC  3648               	rlcf	(___fldiv@b+2)^0,f,c
 13725  003AFE  3649               	rlcf	(___fldiv@b+3)^0,f,c
 13726  003B00                     
 13727                           ; BSR set to: 0
 13728  003B00  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13729  003B02  EF85  F01D         	goto	u8601
 13730  003B06  EF87  F01D         	goto	u8600
 13731  003B0A                     u8601:
 13732  003B0A  EF88  F01D         	goto	l812
 13733  003B0E                     u8600:
 13734  003B0E                     
 13735                           ; BSR set to: 0
 13736  003B0E  8046               	bsf	___fldiv@b^0,0,c
 13737  003B10                     l812:
 13738                           
 13739                           ; BSR set to: 0
 13740  003B10  90D8               	bcf	status,0,c
 13741  003B12  3767               	rlcf	___fldiv@grs& (0+255),f,b
 13742  003B14  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13743  003B16  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13744  003B18  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13745  003B1A  0765               	decf	___fldiv@new_exp& (0+255),f,b
 13746  003B1C  A0D8               	btfss	status,0,c
 13747  003B1E  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13748  003B20                     l6764:
 13749                           
 13750                           ; BSR set to: 0
 13751  003B20  AE48               	btfss	(___fldiv@b+2)^0,7,c
 13752  003B22  EF95  F01D         	goto	u8611
 13753  003B26  EF97  F01D         	goto	u8610
 13754  003B2A                     u8611:
 13755  003B2A  EF7B  F01D         	goto	l6758
 13756  003B2E                     u8610:
 13757  003B2E                     
 13758                           ; BSR set to: 0
 13759  003B2E  0E00               	movlw	0
 13760  003B30  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13761  003B32                     
 13762                           ; BSR set to: 0
 13763  003B32  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13764  003B34  EF9E  F01D         	goto	u8621
 13765  003B38  EFA0  F01D         	goto	u8620
 13766  003B3C                     u8621:
 13767  003B3C  EFC4  F01D         	goto	l814
 13768  003B40                     u8620:
 13769  003B40                     
 13770                           ; BSR set to: 0
 13771  003B40  0EFF               	movlw	255
 13772  003B42  1567               	andwf	___fldiv@grs& (0+255),w,b
 13773  003B44  6E4E               	movwf	??___fldiv^0,c
 13774  003B46  0EFF               	movlw	255
 13775  003B48  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13776  003B4A  6E4F               	movwf	(??___fldiv+1)^0,c
 13777  003B4C  0EFF               	movlw	255
 13778  003B4E  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13779  003B50  6E50               	movwf	(??___fldiv+2)^0,c
 13780  003B52  0E7F               	movlw	127
 13781  003B54  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13782  003B56  6E51               	movwf	(??___fldiv+3)^0,c
 13783  003B58  504E               	movf	??___fldiv^0,w,c
 13784  003B5A  104F               	iorwf	(??___fldiv+1)^0,w,c
 13785  003B5C  1050               	iorwf	(??___fldiv+2)^0,w,c
 13786  003B5E  1051               	iorwf	(??___fldiv+3)^0,w,c
 13787  003B60  B4D8               	btfsc	status,2,c
 13788  003B62  EFB5  F01D         	goto	u8631
 13789  003B66  EFB7  F01D         	goto	u8630
 13790  003B6A                     u8631:
 13791  003B6A  EFBB  F01D         	goto	l815
 13792  003B6E                     u8630:
 13793  003B6E                     l6772:
 13794                           
 13795                           ; BSR set to: 0
 13796  003B6E  0E01               	movlw	1
 13797  003B70  6F6C               	movwf	___fldiv@aexp& (0+255),b
 13798  003B72  EFC4  F01D         	goto	l814
 13799  003B76                     l815:
 13800                           
 13801                           ; BSR set to: 0
 13802  003B76  A046               	btfss	___fldiv@b^0,0,c
 13803  003B78  EFC0  F01D         	goto	u8641
 13804  003B7C  EFC2  F01D         	goto	u8640
 13805  003B80                     u8641:
 13806  003B80  EFC4  F01D         	goto	l814
 13807  003B84                     u8640:
 13808  003B84  EFB7  F01D         	goto	l6772
 13809  003B88                     l814:
 13810                           
 13811                           ; BSR set to: 0
 13812  003B88  516C               	movf	___fldiv@aexp& (0+255),w,b
 13813  003B8A  B4D8               	btfsc	status,2,c
 13814  003B8C  EFCA  F01D         	goto	u8651
 13815  003B90  EFCC  F01D         	goto	u8650
 13816  003B94                     u8651:
 13817  003B94  EFF0  F01D         	goto	l6784
 13818  003B98                     u8650:
 13819  003B98                     
 13820                           ; BSR set to: 0
 13821  003B98  0E01               	movlw	1
 13822  003B9A  2646               	addwf	___fldiv@b^0,f,c
 13823  003B9C  0E00               	movlw	0
 13824  003B9E  2247               	addwfc	(___fldiv@b+1)^0,f,c
 13825  003BA0  2248               	addwfc	(___fldiv@b+2)^0,f,c
 13826  003BA2  2249               	addwfc	(___fldiv@b+3)^0,f,c
 13827  003BA4                     
 13828                           ; BSR set to: 0
 13829  003BA4  A049               	btfss	(___fldiv@b+3)^0,0,c
 13830  003BA6  EFD7  F01D         	goto	u8661
 13831  003BAA  EFD9  F01D         	goto	u8660
 13832  003BAE                     u8661:
 13833  003BAE  EFF0  F01D         	goto	l6784
 13834  003BB2                     u8660:
 13835  003BB2                     
 13836                           ; BSR set to: 0
 13837  003BB2  C046  F04E         	movff	___fldiv@b,??___fldiv
 13838  003BB6  C047  F04F         	movff	___fldiv@b+1,??___fldiv+1
 13839  003BBA  C048  F050         	movff	___fldiv@b+2,??___fldiv+2
 13840  003BBE  C049  F051         	movff	___fldiv@b+3,??___fldiv+3
 13841  003BC2  3451               	rlcf	(??___fldiv+3)^0,w,c
 13842  003BC4  3251               	rrcf	(??___fldiv+3)^0,f,c
 13843  003BC6  3250               	rrcf	(??___fldiv+2)^0,f,c
 13844  003BC8  324F               	rrcf	(??___fldiv+1)^0,f,c
 13845  003BCA  324E               	rrcf	??___fldiv^0,f,c
 13846  003BCC  C04E  F046         	movff	??___fldiv,___fldiv@b
 13847  003BD0  C04F  F047         	movff	??___fldiv+1,___fldiv@b+1
 13848  003BD4  C050  F048         	movff	??___fldiv+2,___fldiv@b+2
 13849  003BD8  C051  F049         	movff	??___fldiv+3,___fldiv@b+3
 13850  003BDC                     
 13851                           ; BSR set to: 0
 13852  003BDC  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 13853  003BDE  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13854  003BE0                     l6784:
 13855                           
 13856                           ; BSR set to: 0
 13857  003BE0  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13858  003BE2  EFFB  F01D         	goto	u8671
 13859  003BE6  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13860  003BE8  E108               	bnz	u8670
 13861  003BEA  2965               	incf	___fldiv@new_exp& (0+255),w,b
 13862  003BEC  A0D8               	btfss	status,0,c
 13863  003BEE  EFFB  F01D         	goto	u8671
 13864  003BF2  EFFD  F01D         	goto	u8670
 13865  003BF6                     u8671:
 13866  003BF6  EF08  F01E         	goto	l6788
 13867  003BFA                     u8670:
 13868  003BFA                     
 13869                           ; BSR set to: 0
 13870  003BFA  0E00               	movlw	0
 13871  003BFC  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13872  003BFE  6965               	setf	___fldiv@new_exp& (0+255),b
 13873  003C00  0E00               	movlw	0
 13874  003C02  6E46               	movwf	___fldiv@b^0,c
 13875  003C04  0E00               	movlw	0
 13876  003C06  6E47               	movwf	(___fldiv@b+1)^0,c
 13877  003C08  0E00               	movlw	0
 13878  003C0A  6E48               	movwf	(___fldiv@b+2)^0,c
 13879  003C0C  0E00               	movlw	0
 13880  003C0E  6E49               	movwf	(___fldiv@b+3)^0,c
 13881  003C10                     l6788:
 13882                           
 13883                           ; BSR set to: 0
 13884  003C10  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13885  003C12  EF15  F01E         	goto	u8680
 13886  003C16  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13887  003C18  E106               	bnz	u8681
 13888  003C1A  0565               	decf	___fldiv@new_exp& (0+255),w,b
 13889  003C1C  B0D8               	btfsc	status,0,c
 13890  003C1E  EF13  F01E         	goto	u8681
 13891  003C22  EF15  F01E         	goto	u8680
 13892  003C26                     u8681:
 13893  003C26  EF23  F01E         	goto	l6792
 13894  003C2A                     u8680:
 13895  003C2A                     
 13896                           ; BSR set to: 0
 13897  003C2A  0E00               	movlw	0
 13898  003C2C  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13899  003C2E  0E00               	movlw	0
 13900  003C30  6F65               	movwf	___fldiv@new_exp& (0+255),b
 13901  003C32  0E00               	movlw	0
 13902  003C34  6E46               	movwf	___fldiv@b^0,c
 13903  003C36  0E00               	movlw	0
 13904  003C38  6E47               	movwf	(___fldiv@b+1)^0,c
 13905  003C3A  0E00               	movlw	0
 13906  003C3C  6E48               	movwf	(___fldiv@b+2)^0,c
 13907  003C3E  0E00               	movlw	0
 13908  003C40  6E49               	movwf	(___fldiv@b+3)^0,c
 13909  003C42  0E00               	movlw	0
 13910  003C44  6F64               	movwf	___fldiv@sign& (0+255),b
 13911  003C46                     l6792:
 13912                           
 13913                           ; BSR set to: 0
 13914  003C46  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 13915  003C4A                     
 13916                           ; BSR set to: 0
 13917  003C4A  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 13918  003C4C  EF2A  F01E         	goto	u8691
 13919  003C50  EF2C  F01E         	goto	u8690
 13920  003C54                     u8691:
 13921  003C54  EF2F  F01E         	goto	l6798
 13922  003C58                     u8690:
 13923  003C58                     
 13924                           ; BSR set to: 0
 13925  003C58  8E48               	bsf	(___fldiv@b+2)^0,7,c
 13926  003C5A  EF30  F01E         	goto	l6800
 13927  003C5E                     l6798:
 13928                           
 13929                           ; BSR set to: 0
 13930  003C5E  9E48               	bcf	(___fldiv@b+2)^0,7,c
 13931  003C60                     l6800:
 13932                           
 13933                           ; BSR set to: 0
 13934  003C60  90D8               	bcf	status,0,c
 13935  003C62  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 13936  003C64  6E49               	movwf	(___fldiv@b+3)^0,c
 13937  003C66  EFE6  F01C         	goto	l6714
 13938  003C6A                     l801:
 13939                           
 13940                           ; BSR set to: 0
 13941  003C6A  0012               	return		;funcret
 13942  003C6C                     __end_of___fldiv:
 13943                           	callstack 0
 13944                           
 13945 ;; *************** function ___fladd *****************
 13946 ;; Defined at:
 13947 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;  b               4   20[COMRAM] unsigned char 
 13950 ;;  a               4   24[COMRAM] unsigned char 
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;  grs             1   35[COMRAM] unsigned char 
 13953 ;;  bexp            1   34[COMRAM] unsigned char 
 13954 ;;  aexp            1   33[COMRAM] unsigned char 
 13955 ;;  signs           1   32[COMRAM] unsigned char 
 13956 ;; Return value:  Size  Location     Type
 13957 ;;                  4   20[COMRAM] unsigned char 
 13958 ;; Registers used:
 13959 ;;		wreg, status,2, status,0
 13960 ;; Tracked objects:
 13961 ;;		On entry : 0/0
 13962 ;;		On exit  : 0/0
 13963 ;;		Unchanged: 0/0
 13964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13965 ;;      Params:         8       0       0       0       0       0       0       0       0
 13966 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13967 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13968 ;;      Totals:        16       0       0       0       0       0       0       0       0
 13969 ;;Total ram usage:       16 bytes
 13970 ;; Hardware stack levels used: 1
 13971 ;; Hardware stack levels required when called: 2
 13972 ;; This function calls:
 13973 ;;		Nothing
 13974 ;; This function is called by:
 13975 ;;		_main
 13976 ;;		_PWM1_Init
 13977 ;;		___flsub
 13978 ;;		_efgtoa
 13979 ;;		_PWM2_Init
 13980 ;; This function uses a non-reentrant model
 13981 ;;
 13982                           
 13983                           	psect	text54
 13984  002BA6                     __ptext54:
 13985                           	callstack 0
 13986  002BA6                     ___fladd:
 13987                           	callstack 23
 13988  002BA6  5018               	movf	(___fladd@b+3)^0,w,c
 13989  002BA8  0B80               	andlw	128
 13990  002BAA  6E21               	movwf	___fladd@signs^0,c
 13991  002BAC  5018               	movf	(___fladd@b+3)^0,w,c
 13992  002BAE  2418               	addwf	(___fladd@b+3)^0,w,c
 13993  002BB0  6E23               	movwf	___fladd@bexp^0,c
 13994  002BB2  AE17               	btfss	(___fladd@b+2)^0,7,c
 13995  002BB4  EFDE  F015         	goto	u7911
 13996  002BB8  EFE0  F015         	goto	u7910
 13997  002BBC                     u7911:
 13998  002BBC  EFE1  F015         	goto	l6366
 13999  002BC0                     u7910:
 14000  002BC0  8023               	bsf	___fladd@bexp^0,0,c
 14001  002BC2                     l6366:
 14002  002BC2  5023               	movf	___fladd@bexp^0,w,c
 14003  002BC4  B4D8               	btfsc	status,2,c
 14004  002BC6  EFE7  F015         	goto	u7921
 14005  002BCA  EFE9  F015         	goto	u7920
 14006  002BCE                     u7921:
 14007  002BCE  EFFE  F015         	goto	l6376
 14008  002BD2                     u7920:
 14009  002BD2  2823               	incf	___fladd@bexp^0,w,c
 14010  002BD4  A4D8               	btfss	status,2,c
 14011  002BD6  EFEF  F015         	goto	u7931
 14012  002BDA  EFF1  F015         	goto	u7930
 14013  002BDE                     u7931:
 14014  002BDE  EFF9  F015         	goto	l6372
 14015  002BE2                     u7930:
 14016  002BE2  0E00               	movlw	0
 14017  002BE4  6E15               	movwf	___fladd@b^0,c
 14018  002BE6  0E00               	movlw	0
 14019  002BE8  6E16               	movwf	(___fladd@b+1)^0,c
 14020  002BEA  0E00               	movlw	0
 14021  002BEC  6E17               	movwf	(___fladd@b+2)^0,c
 14022  002BEE  0E00               	movlw	0
 14023  002BF0  6E18               	movwf	(___fladd@b+3)^0,c
 14024  002BF2                     l6372:
 14025  002BF2  8E17               	bsf	(___fladd@b+2)^0,7,c
 14026  002BF4  0E00               	movlw	0
 14027  002BF6  6E18               	movwf	(___fladd@b+3)^0,c
 14028  002BF8  EF06  F016         	goto	l6378
 14029  002BFC                     l6376:
 14030  002BFC  0E00               	movlw	0
 14031  002BFE  6E15               	movwf	___fladd@b^0,c
 14032  002C00  0E00               	movlw	0
 14033  002C02  6E16               	movwf	(___fladd@b+1)^0,c
 14034  002C04  0E00               	movlw	0
 14035  002C06  6E17               	movwf	(___fladd@b+2)^0,c
 14036  002C08  0E00               	movlw	0
 14037  002C0A  6E18               	movwf	(___fladd@b+3)^0,c
 14038  002C0C                     l6378:
 14039  002C0C  501C               	movf	(___fladd@a+3)^0,w,c
 14040  002C0E  0B80               	andlw	128
 14041  002C10  6E22               	movwf	___fladd@aexp^0,c
 14042  002C12  5021               	movf	___fladd@signs^0,w,c
 14043  002C14  1822               	xorwf	___fladd@aexp^0,w,c
 14044  002C16  B4D8               	btfsc	status,2,c
 14045  002C18  EF10  F016         	goto	u7941
 14046  002C1C  EF12  F016         	goto	u7940
 14047  002C20                     u7941:
 14048  002C20  EF13  F016         	goto	l6384
 14049  002C24                     u7940:
 14050  002C24  8C21               	bsf	___fladd@signs^0,6,c
 14051  002C26                     l6384:
 14052  002C26  501C               	movf	(___fladd@a+3)^0,w,c
 14053  002C28  241C               	addwf	(___fladd@a+3)^0,w,c
 14054  002C2A  6E22               	movwf	___fladd@aexp^0,c
 14055  002C2C  AE1B               	btfss	(___fladd@a+2)^0,7,c
 14056  002C2E  EF1B  F016         	goto	u7951
 14057  002C32  EF1D  F016         	goto	u7950
 14058  002C36                     u7951:
 14059  002C36  EF1E  F016         	goto	l6390
 14060  002C3A                     u7950:
 14061  002C3A  8022               	bsf	___fladd@aexp^0,0,c
 14062  002C3C                     l6390:
 14063  002C3C  5022               	movf	___fladd@aexp^0,w,c
 14064  002C3E  B4D8               	btfsc	status,2,c
 14065  002C40  EF24  F016         	goto	u7961
 14066  002C44  EF26  F016         	goto	u7960
 14067  002C48                     u7961:
 14068  002C48  EF3B  F016         	goto	l6400
 14069  002C4C                     u7960:
 14070  002C4C  2822               	incf	___fladd@aexp^0,w,c
 14071  002C4E  A4D8               	btfss	status,2,c
 14072  002C50  EF2C  F016         	goto	u7971
 14073  002C54  EF2E  F016         	goto	u7970
 14074  002C58                     u7971:
 14075  002C58  EF36  F016         	goto	l6396
 14076  002C5C                     u7970:
 14077  002C5C  0E00               	movlw	0
 14078  002C5E  6E19               	movwf	___fladd@a^0,c
 14079  002C60  0E00               	movlw	0
 14080  002C62  6E1A               	movwf	(___fladd@a+1)^0,c
 14081  002C64  0E00               	movlw	0
 14082  002C66  6E1B               	movwf	(___fladd@a+2)^0,c
 14083  002C68  0E00               	movlw	0
 14084  002C6A  6E1C               	movwf	(___fladd@a+3)^0,c
 14085  002C6C                     l6396:
 14086  002C6C  8E1B               	bsf	(___fladd@a+2)^0,7,c
 14087  002C6E  0E00               	movlw	0
 14088  002C70  6E1C               	movwf	(___fladd@a+3)^0,c
 14089  002C72  EF43  F016         	goto	l6402
 14090  002C76                     l6400:
 14091  002C76  0E00               	movlw	0
 14092  002C78  6E19               	movwf	___fladd@a^0,c
 14093  002C7A  0E00               	movlw	0
 14094  002C7C  6E1A               	movwf	(___fladd@a+1)^0,c
 14095  002C7E  0E00               	movlw	0
 14096  002C80  6E1B               	movwf	(___fladd@a+2)^0,c
 14097  002C82  0E00               	movlw	0
 14098  002C84  6E1C               	movwf	(___fladd@a+3)^0,c
 14099  002C86                     l6402:
 14100  002C86  5023               	movf	___fladd@bexp^0,w,c
 14101  002C88  5C22               	subwf	___fladd@aexp^0,w,c
 14102  002C8A  B0D8               	btfsc	status,0,c
 14103  002C8C  EF4A  F016         	goto	u7981
 14104  002C90  EF4C  F016         	goto	u7980
 14105  002C94                     u7981:
 14106  002C94  EF73  F016         	goto	l6438
 14107  002C98                     u7980:
 14108  002C98  AC21               	btfss	___fladd@signs^0,6,c
 14109  002C9A  EF51  F016         	goto	u7991
 14110  002C9E  EF53  F016         	goto	u7990
 14111  002CA2                     u7991:
 14112  002CA2  EF55  F016         	goto	l6408
 14113  002CA6                     u7990:
 14114  002CA6  0E80               	movlw	128
 14115  002CA8  1A21               	xorwf	___fladd@signs^0,f,c
 14116  002CAA                     l6408:
 14117  002CAA  C023  F024         	movff	___fladd@bexp,___fladd@grs
 14118  002CAE  C022  F023         	movff	___fladd@aexp,___fladd@bexp
 14119  002CB2  C024  F022         	movff	___fladd@grs,___fladd@aexp
 14120  002CB6  C015  F024         	movff	___fladd@b,___fladd@grs
 14121  002CBA  C019  F015         	movff	___fladd@a,___fladd@b
 14122  002CBE  C024  F019         	movff	___fladd@grs,___fladd@a
 14123  002CC2  C016  F024         	movff	___fladd@b+1,___fladd@grs
 14124  002CC6  C01A  F016         	movff	___fladd@a+1,___fladd@b+1
 14125  002CCA  C024  F01A         	movff	___fladd@grs,___fladd@a+1
 14126  002CCE  C017  F024         	movff	___fladd@b+2,___fladd@grs
 14127  002CD2  C01B  F017         	movff	___fladd@a+2,___fladd@b+2
 14128  002CD6  C024  F01B         	movff	___fladd@grs,___fladd@a+2
 14129  002CDA  C018  F024         	movff	___fladd@b+3,___fladd@grs
 14130  002CDE  C01C  F018         	movff	___fladd@a+3,___fladd@b+3
 14131  002CE2  C024  F01C         	movff	___fladd@grs,___fladd@a+3
 14132  002CE6                     l6438:
 14133  002CE6  0E00               	movlw	0
 14134  002CE8  6E24               	movwf	___fladd@grs^0,c
 14135  002CEA  5023               	movf	___fladd@bexp^0,w,c
 14136  002CEC  C022  F01D         	movff	___fladd@aexp,??___fladd
 14137  002CF0  6A1E               	clrf	(??___fladd+1)^0,c
 14138  002CF2  5E1D               	subwf	??___fladd^0,f,c
 14139  002CF4  0E00               	movlw	0
 14140  002CF6  5A1E               	subwfb	(??___fladd+1)^0,f,c
 14141  002CF8  BE1E               	btfsc	(??___fladd+1)^0,7,c
 14142  002CFA  EF88  F016         	goto	u8001
 14143  002CFE  501E               	movf	(??___fladd+1)^0,w,c
 14144  002D00  E109               	bnz	u8000
 14145  002D02  0E1A               	movlw	26
 14146  002D04  5C1D               	subwf	??___fladd^0,w,c
 14147  002D06  A0D8               	btfss	status,0,c
 14148  002D08  EF88  F016         	goto	u8001
 14149  002D0C  EF8A  F016         	goto	u8000
 14150  002D10                     u8001:
 14151  002D10  EFC1  F016         	goto	l748
 14152  002D14                     u8000:
 14153  002D14  5015               	movf	___fladd@b^0,w,c
 14154  002D16  1016               	iorwf	(___fladd@b+1)^0,w,c
 14155  002D18  1017               	iorwf	(___fladd@b+2)^0,w,c
 14156  002D1A  1018               	iorwf	(___fladd@b+3)^0,w,c
 14157  002D1C  A4D8               	btfss	status,2,c
 14158  002D1E  EF93  F016         	goto	u8011
 14159  002D22  EF96  F016         	goto	u8010
 14160  002D26                     u8011:
 14161  002D26  0E01               	movlw	1
 14162  002D28  EF97  F016         	goto	u8020
 14163  002D2C                     u8010:
 14164  002D2C  0E00               	movlw	0
 14165  002D2E                     u8020:
 14166  002D2E  6E24               	movwf	___fladd@grs^0,c
 14167  002D30  0E00               	movlw	0
 14168  002D32  6E15               	movwf	___fladd@b^0,c
 14169  002D34  0E00               	movlw	0
 14170  002D36  6E16               	movwf	(___fladd@b+1)^0,c
 14171  002D38  0E00               	movlw	0
 14172  002D3A  6E17               	movwf	(___fladd@b+2)^0,c
 14173  002D3C  0E00               	movlw	0
 14174  002D3E  6E18               	movwf	(___fladd@b+3)^0,c
 14175  002D40  C022  F023         	movff	___fladd@aexp,___fladd@bexp
 14176  002D44  EFCA  F016         	goto	l747
 14177  002D48                     l749:
 14178  002D48  A024               	btfss	___fladd@grs^0,0,c
 14179  002D4A  EFA9  F016         	goto	u8031
 14180  002D4E  EFAB  F016         	goto	u8030
 14181  002D52                     u8031:
 14182  002D52  EFB1  F016         	goto	l6450
 14183  002D56                     u8030:
 14184  002D56  90D8               	bcf	status,0,c
 14185  002D58  3024               	rrcf	___fladd@grs^0,w,c
 14186  002D5A  0901               	iorlw	1
 14187  002D5C  6E24               	movwf	___fladd@grs^0,c
 14188  002D5E  EFB3  F016         	goto	l6452
 14189  002D62                     l6450:
 14190  002D62  90D8               	bcf	status,0,c
 14191  002D64  3224               	rrcf	___fladd@grs^0,f,c
 14192  002D66                     l6452:
 14193  002D66  A015               	btfss	___fladd@b^0,0,c
 14194  002D68  EFB8  F016         	goto	u8041
 14195  002D6C  EFBA  F016         	goto	u8040
 14196  002D70                     u8041:
 14197  002D70  EFBB  F016         	goto	l6456
 14198  002D74                     u8040:
 14199  002D74  8E24               	bsf	___fladd@grs^0,7,c
 14200  002D76                     l6456:
 14201  002D76  3418               	rlcf	(___fladd@b+3)^0,w,c
 14202  002D78  3218               	rrcf	(___fladd@b+3)^0,f,c
 14203  002D7A  3217               	rrcf	(___fladd@b+2)^0,f,c
 14204  002D7C  3216               	rrcf	(___fladd@b+1)^0,f,c
 14205  002D7E  3215               	rrcf	___fladd@b^0,f,c
 14206  002D80  2A23               	incf	___fladd@bexp^0,f,c
 14207  002D82                     l748:
 14208  002D82  5022               	movf	___fladd@aexp^0,w,c
 14209  002D84  5C23               	subwf	___fladd@bexp^0,w,c
 14210  002D86  A0D8               	btfss	status,0,c
 14211  002D88  EFC8  F016         	goto	u8051
 14212  002D8C  EFCA  F016         	goto	u8050
 14213  002D90                     u8051:
 14214  002D90  EFA4  F016         	goto	l749
 14215  002D94                     u8050:
 14216  002D94                     l747:
 14217  002D94  BC21               	btfsc	___fladd@signs^0,6,c
 14218  002D96  EFCF  F016         	goto	u8061
 14219  002D9A  EFD1  F016         	goto	u8060
 14220  002D9E                     u8061:
 14221  002D9E  EF11  F017         	goto	l6484
 14222  002DA2                     u8060:
 14223  002DA2  5023               	movf	___fladd@bexp^0,w,c
 14224  002DA4  A4D8               	btfss	status,2,c
 14225  002DA6  EFD7  F016         	goto	u8071
 14226  002DAA  EFD9  F016         	goto	u8070
 14227  002DAE                     u8071:
 14228  002DAE  EFE3  F016         	goto	l6466
 14229  002DB2                     u8070:
 14230  002DB2  0E00               	movlw	0
 14231  002DB4  6E15               	movwf	?___fladd^0,c
 14232  002DB6  0E00               	movlw	0
 14233  002DB8  6E16               	movwf	(?___fladd+1)^0,c
 14234  002DBA  0E00               	movlw	0
 14235  002DBC  6E17               	movwf	(?___fladd+2)^0,c
 14236  002DBE  0E00               	movlw	0
 14237  002DC0  6E18               	movwf	(?___fladd+3)^0,c
 14238  002DC2  EF32  F018         	goto	l756
 14239  002DC6                     l6466:
 14240  002DC6  5019               	movf	___fladd@a^0,w,c
 14241  002DC8  2615               	addwf	___fladd@b^0,f,c
 14242  002DCA  501A               	movf	(___fladd@a+1)^0,w,c
 14243  002DCC  2216               	addwfc	(___fladd@b+1)^0,f,c
 14244  002DCE  501B               	movf	(___fladd@a+2)^0,w,c
 14245  002DD0  2217               	addwfc	(___fladd@b+2)^0,f,c
 14246  002DD2  501C               	movf	(___fladd@a+3)^0,w,c
 14247  002DD4  2218               	addwfc	(___fladd@b+3)^0,f,c
 14248  002DD6  A018               	btfss	(___fladd@b+3)^0,0,c
 14249  002DD8  EFF0  F016         	goto	u8081
 14250  002DDC  EFF2  F016         	goto	u8080
 14251  002DE0                     u8081:
 14252  002DE0  EF9E  F017         	goto	l6520
 14253  002DE4                     u8080:
 14254  002DE4  A024               	btfss	___fladd@grs^0,0,c
 14255  002DE6  EFF7  F016         	goto	u8091
 14256  002DEA  EFF9  F016         	goto	u8090
 14257  002DEE                     u8091:
 14258  002DEE  EFFF  F016         	goto	l6474
 14259  002DF2                     u8090:
 14260  002DF2  90D8               	bcf	status,0,c
 14261  002DF4  3024               	rrcf	___fladd@grs^0,w,c
 14262  002DF6  0901               	iorlw	1
 14263  002DF8  6E24               	movwf	___fladd@grs^0,c
 14264  002DFA  EF01  F017         	goto	l6476
 14265  002DFE                     l6474:
 14266  002DFE  90D8               	bcf	status,0,c
 14267  002E00  3224               	rrcf	___fladd@grs^0,f,c
 14268  002E02                     l6476:
 14269  002E02  A015               	btfss	___fladd@b^0,0,c
 14270  002E04  EF06  F017         	goto	u8101
 14271  002E08  EF08  F017         	goto	u8100
 14272  002E0C                     u8101:
 14273  002E0C  EF09  F017         	goto	l6480
 14274  002E10                     u8100:
 14275  002E10  8E24               	bsf	___fladd@grs^0,7,c
 14276  002E12                     l6480:
 14277  002E12  3418               	rlcf	(___fladd@b+3)^0,w,c
 14278  002E14  3218               	rrcf	(___fladd@b+3)^0,f,c
 14279  002E16  3217               	rrcf	(___fladd@b+2)^0,f,c
 14280  002E18  3216               	rrcf	(___fladd@b+1)^0,f,c
 14281  002E1A  3215               	rrcf	___fladd@b^0,f,c
 14282  002E1C  2A23               	incf	___fladd@bexp^0,f,c
 14283  002E1E  EF9E  F017         	goto	l6520
 14284  002E22                     l6484:
 14285  002E22  5019               	movf	___fladd@a^0,w,c
 14286  002E24  5C15               	subwf	___fladd@b^0,w,c
 14287  002E26  501A               	movf	(___fladd@a+1)^0,w,c
 14288  002E28  5816               	subwfb	(___fladd@b+1)^0,w,c
 14289  002E2A  501B               	movf	(___fladd@a+2)^0,w,c
 14290  002E2C  5817               	subwfb	(___fladd@b+2)^0,w,c
 14291  002E2E  5018               	movf	(___fladd@b+3)^0,w,c
 14292  002E30  0A80               	xorlw	128
 14293  002E32  6E1D               	movwf	??___fladd^0,c
 14294  002E34  501C               	movf	(___fladd@a+3)^0,w,c
 14295  002E36  0A80               	xorlw	128
 14296  002E38  581D               	subwfb	??___fladd^0,w,c
 14297  002E3A  B0D8               	btfsc	status,0,c
 14298  002E3C  EF22  F017         	goto	u8111
 14299  002E40  EF24  F017         	goto	u8110
 14300  002E44                     u8111:
 14301  002E44  EF4F  F017         	goto	l6494
 14302  002E48                     u8110:
 14303  002E48  5015               	movf	___fladd@b^0,w,c
 14304  002E4A  5C19               	subwf	___fladd@a^0,w,c
 14305  002E4C  6E1D               	movwf	??___fladd^0,c
 14306  002E4E  5016               	movf	(___fladd@b+1)^0,w,c
 14307  002E50  581A               	subwfb	(___fladd@a+1)^0,w,c
 14308  002E52  6E1E               	movwf	(??___fladd+1)^0,c
 14309  002E54  5017               	movf	(___fladd@b+2)^0,w,c
 14310  002E56  581B               	subwfb	(___fladd@a+2)^0,w,c
 14311  002E58  6E1F               	movwf	(??___fladd+2)^0,c
 14312  002E5A  5018               	movf	(___fladd@b+3)^0,w,c
 14313  002E5C  581C               	subwfb	(___fladd@a+3)^0,w,c
 14314  002E5E  6E20               	movwf	(??___fladd+3)^0,c
 14315  002E60  0EFF               	movlw	255
 14316  002E62  241D               	addwf	??___fladd^0,w,c
 14317  002E64  6E15               	movwf	___fladd@b^0,c
 14318  002E66  0EFF               	movlw	255
 14319  002E68  201E               	addwfc	(??___fladd+1)^0,w,c
 14320  002E6A  6E16               	movwf	(___fladd@b+1)^0,c
 14321  002E6C  0EFF               	movlw	255
 14322  002E6E  201F               	addwfc	(??___fladd+2)^0,w,c
 14323  002E70  6E17               	movwf	(___fladd@b+2)^0,c
 14324  002E72  0EFF               	movlw	255
 14325  002E74  2020               	addwfc	(??___fladd+3)^0,w,c
 14326  002E76  6E18               	movwf	(___fladd@b+3)^0,c
 14327  002E78  0E80               	movlw	128
 14328  002E7A  1A21               	xorwf	___fladd@signs^0,f,c
 14329  002E7C  6C24               	negf	___fladd@grs^0,c
 14330  002E7E  5024               	movf	___fladd@grs^0,w,c
 14331  002E80  A4D8               	btfss	status,2,c
 14332  002E82  EF45  F017         	goto	u8121
 14333  002E86  EF47  F017         	goto	u8120
 14334  002E8A                     u8121:
 14335  002E8A  EF57  F017         	goto	l764
 14336  002E8E                     u8120:
 14337  002E8E  0E01               	movlw	1
 14338  002E90  2615               	addwf	___fladd@b^0,f,c
 14339  002E92  0E00               	movlw	0
 14340  002E94  2216               	addwfc	(___fladd@b+1)^0,f,c
 14341  002E96  2217               	addwfc	(___fladd@b+2)^0,f,c
 14342  002E98  2218               	addwfc	(___fladd@b+3)^0,f,c
 14343  002E9A  EF57  F017         	goto	l764
 14344  002E9E                     l6494:
 14345  002E9E  5019               	movf	___fladd@a^0,w,c
 14346  002EA0  5E15               	subwf	___fladd@b^0,f,c
 14347  002EA2  501A               	movf	(___fladd@a+1)^0,w,c
 14348  002EA4  5A16               	subwfb	(___fladd@b+1)^0,f,c
 14349  002EA6  501B               	movf	(___fladd@a+2)^0,w,c
 14350  002EA8  5A17               	subwfb	(___fladd@b+2)^0,f,c
 14351  002EAA  501C               	movf	(___fladd@a+3)^0,w,c
 14352  002EAC  5A18               	subwfb	(___fladd@b+3)^0,f,c
 14353  002EAE                     l764:
 14354  002EAE  5015               	movf	___fladd@b^0,w,c
 14355  002EB0  1016               	iorwf	(___fladd@b+1)^0,w,c
 14356  002EB2  1017               	iorwf	(___fladd@b+2)^0,w,c
 14357  002EB4  1018               	iorwf	(___fladd@b+3)^0,w,c
 14358  002EB6  A4D8               	btfss	status,2,c
 14359  002EB8  EF60  F017         	goto	u8131
 14360  002EBC  EF62  F017         	goto	u8130
 14361  002EC0                     u8131:
 14362  002EC0  EF97  F017         	goto	l6518
 14363  002EC4                     u8130:
 14364  002EC4  5024               	movf	___fladd@grs^0,w,c
 14365  002EC6  A4D8               	btfss	status,2,c
 14366  002EC8  EF68  F017         	goto	u8141
 14367  002ECC  EF6A  F017         	goto	u8140
 14368  002ED0                     u8141:
 14369  002ED0  EF97  F017         	goto	l6518
 14370  002ED4                     u8140:
 14371  002ED4  0E00               	movlw	0
 14372  002ED6  6E15               	movwf	?___fladd^0,c
 14373  002ED8  0E00               	movlw	0
 14374  002EDA  6E16               	movwf	(?___fladd+1)^0,c
 14375  002EDC  0E00               	movlw	0
 14376  002EDE  6E17               	movwf	(?___fladd+2)^0,c
 14377  002EE0  0E00               	movlw	0
 14378  002EE2  6E18               	movwf	(?___fladd+3)^0,c
 14379  002EE4  EF32  F018         	goto	l756
 14380  002EE8                     l6502:
 14381  002EE8  90D8               	bcf	status,0,c
 14382  002EEA  3615               	rlcf	___fladd@b^0,f,c
 14383  002EEC  3616               	rlcf	(___fladd@b+1)^0,f,c
 14384  002EEE  3617               	rlcf	(___fladd@b+2)^0,f,c
 14385  002EF0  3618               	rlcf	(___fladd@b+3)^0,f,c
 14386  002EF2  AE24               	btfss	___fladd@grs^0,7,c
 14387  002EF4  EF7E  F017         	goto	u8151
 14388  002EF8  EF80  F017         	goto	u8150
 14389  002EFC                     u8151:
 14390  002EFC  EF81  F017         	goto	l6508
 14391  002F00                     u8150:
 14392  002F00  8015               	bsf	___fladd@b^0,0,c
 14393  002F02                     l6508:
 14394  002F02  A024               	btfss	___fladd@grs^0,0,c
 14395  002F04  EF86  F017         	goto	u8161
 14396  002F08  EF88  F017         	goto	u8160
 14397  002F0C                     u8161:
 14398  002F0C  EF8C  F017         	goto	l6512
 14399  002F10                     u8160:
 14400  002F10  80D8               	bsf	status,0,c
 14401  002F12  3624               	rlcf	___fladd@grs^0,f,c
 14402  002F14  EF8E  F017         	goto	l6514
 14403  002F18                     l6512:
 14404  002F18  90D8               	bcf	status,0,c
 14405  002F1A  3624               	rlcf	___fladd@grs^0,f,c
 14406  002F1C                     l6514:
 14407  002F1C  5023               	movf	___fladd@bexp^0,w,c
 14408  002F1E  B4D8               	btfsc	status,2,c
 14409  002F20  EF94  F017         	goto	u8171
 14410  002F24  EF96  F017         	goto	u8170
 14411  002F28                     u8171:
 14412  002F28  EF97  F017         	goto	l6518
 14413  002F2C                     u8170:
 14414  002F2C  0623               	decf	___fladd@bexp^0,f,c
 14415  002F2E                     l6518:
 14416  002F2E  AE17               	btfss	(___fladd@b+2)^0,7,c
 14417  002F30  EF9C  F017         	goto	u8181
 14418  002F34  EF9E  F017         	goto	u8180
 14419  002F38                     u8181:
 14420  002F38  EF74  F017         	goto	l6502
 14421  002F3C                     u8180:
 14422  002F3C                     l6520:
 14423  002F3C  0E00               	movlw	0
 14424  002F3E  6E22               	movwf	___fladd@aexp^0,c
 14425  002F40  AE24               	btfss	___fladd@grs^0,7,c
 14426  002F42  EFA5  F017         	goto	u8191
 14427  002F46  EFA7  F017         	goto	u8190
 14428  002F4A                     u8191:
 14429  002F4A  EFBF  F017         	goto	l773
 14430  002F4E                     u8190:
 14431  002F4E  C024  F01D         	movff	___fladd@grs,??___fladd
 14432  002F52  0E7F               	movlw	127
 14433  002F54  161D               	andwf	??___fladd^0,f,c
 14434  002F56  B4D8               	btfsc	status,2,c
 14435  002F58  EFB0  F017         	goto	u8201
 14436  002F5C  EFB2  F017         	goto	u8200
 14437  002F60                     u8201:
 14438  002F60  EFB6  F017         	goto	l774
 14439  002F64                     u8200:
 14440  002F64                     l6526:
 14441  002F64  0E01               	movlw	1
 14442  002F66  6E22               	movwf	___fladd@aexp^0,c
 14443  002F68  EFBF  F017         	goto	l773
 14444  002F6C                     l774:
 14445  002F6C  A015               	btfss	___fladd@b^0,0,c
 14446  002F6E  EFBB  F017         	goto	u8211
 14447  002F72  EFBD  F017         	goto	u8210
 14448  002F76                     u8211:
 14449  002F76  EFBF  F017         	goto	l773
 14450  002F7A                     u8210:
 14451  002F7A  EFB2  F017         	goto	l6526
 14452  002F7E                     l773:
 14453  002F7E  5022               	movf	___fladd@aexp^0,w,c
 14454  002F80  B4D8               	btfsc	status,2,c
 14455  002F82  EFC5  F017         	goto	u8221
 14456  002F86  EFC7  F017         	goto	u8220
 14457  002F8A                     u8221:
 14458  002F8A  EFF2  F017         	goto	l6538
 14459  002F8E                     u8220:
 14460  002F8E  0E01               	movlw	1
 14461  002F90  2615               	addwf	___fladd@b^0,f,c
 14462  002F92  0E00               	movlw	0
 14463  002F94  2216               	addwfc	(___fladd@b+1)^0,f,c
 14464  002F96  2217               	addwfc	(___fladd@b+2)^0,f,c
 14465  002F98  2218               	addwfc	(___fladd@b+3)^0,f,c
 14466  002F9A  A018               	btfss	(___fladd@b+3)^0,0,c
 14467  002F9C  EFD2  F017         	goto	u8231
 14468  002FA0  EFD4  F017         	goto	u8230
 14469  002FA4                     u8231:
 14470  002FA4  EFF2  F017         	goto	l6538
 14471  002FA8                     u8230:
 14472  002FA8  C015  F01D         	movff	___fladd@b,??___fladd
 14473  002FAC  C016  F01E         	movff	___fladd@b+1,??___fladd+1
 14474  002FB0  C017  F01F         	movff	___fladd@b+2,??___fladd+2
 14475  002FB4  C018  F020         	movff	___fladd@b+3,??___fladd+3
 14476  002FB8  3420               	rlcf	(??___fladd+3)^0,w,c
 14477  002FBA  3220               	rrcf	(??___fladd+3)^0,f,c
 14478  002FBC  321F               	rrcf	(??___fladd+2)^0,f,c
 14479  002FBE  321E               	rrcf	(??___fladd+1)^0,f,c
 14480  002FC0  321D               	rrcf	??___fladd^0,f,c
 14481  002FC2  C01D  F015         	movff	??___fladd,___fladd@b
 14482  002FC6  C01E  F016         	movff	??___fladd+1,___fladd@b+1
 14483  002FCA  C01F  F017         	movff	??___fladd+2,___fladd@b+2
 14484  002FCE  C020  F018         	movff	??___fladd+3,___fladd@b+3
 14485  002FD2  2823               	incf	___fladd@bexp^0,w,c
 14486  002FD4  B4D8               	btfsc	status,2,c
 14487  002FD6  EFEF  F017         	goto	u8241
 14488  002FDA  EFF1  F017         	goto	u8240
 14489  002FDE                     u8241:
 14490  002FDE  EFF2  F017         	goto	l6538
 14491  002FE2                     u8240:
 14492  002FE2  2A23               	incf	___fladd@bexp^0,f,c
 14493  002FE4                     l6538:
 14494  002FE4  2823               	incf	___fladd@bexp^0,w,c
 14495  002FE6  B4D8               	btfsc	status,2,c
 14496  002FE8  EFF8  F017         	goto	u8251
 14497  002FEC  EFFA  F017         	goto	u8250
 14498  002FF0                     u8251:
 14499  002FF0  EF02  F018         	goto	l6542
 14500  002FF4                     u8250:
 14501  002FF4  5023               	movf	___fladd@bexp^0,w,c
 14502  002FF6  A4D8               	btfss	status,2,c
 14503  002FF8  EF00  F018         	goto	u8261
 14504  002FFC  EF02  F018         	goto	u8260
 14505  003000                     u8261:
 14506  003000  EF14  F018         	goto	l6546
 14507  003004                     u8260:
 14508  003004                     l6542:
 14509  003004  0E00               	movlw	0
 14510  003006  6E15               	movwf	___fladd@b^0,c
 14511  003008  0E00               	movlw	0
 14512  00300A  6E16               	movwf	(___fladd@b+1)^0,c
 14513  00300C  0E00               	movlw	0
 14514  00300E  6E17               	movwf	(___fladd@b+2)^0,c
 14515  003010  0E00               	movlw	0
 14516  003012  6E18               	movwf	(___fladd@b+3)^0,c
 14517  003014  5023               	movf	___fladd@bexp^0,w,c
 14518  003016  A4D8               	btfss	status,2,c
 14519  003018  EF10  F018         	goto	u8271
 14520  00301C  EF12  F018         	goto	u8270
 14521  003020                     u8271:
 14522  003020  EF14  F018         	goto	l6546
 14523  003024                     u8270:
 14524  003024  0E00               	movlw	0
 14525  003026  6E21               	movwf	___fladd@signs^0,c
 14526  003028                     l6546:
 14527  003028  A023               	btfss	___fladd@bexp^0,0,c
 14528  00302A  EF19  F018         	goto	u8281
 14529  00302E  EF1B  F018         	goto	u8280
 14530  003032                     u8281:
 14531  003032  EF1E  F018         	goto	l6550
 14532  003036                     u8280:
 14533  003036  8E17               	bsf	(___fladd@b+2)^0,7,c
 14534  003038  EF1F  F018         	goto	l6552
 14535  00303C                     l6550:
 14536  00303C  9E17               	bcf	(___fladd@b+2)^0,7,c
 14537  00303E                     l6552:
 14538  00303E  90D8               	bcf	status,0,c
 14539  003040  3023               	rrcf	___fladd@bexp^0,w,c
 14540  003042  6E18               	movwf	(___fladd@b+3)^0,c
 14541  003044  AE21               	btfss	___fladd@signs^0,7,c
 14542  003046  EF27  F018         	goto	u8291
 14543  00304A  EF29  F018         	goto	u8290
 14544  00304E                     u8291:
 14545  00304E  EF2A  F018         	goto	l6558
 14546  003052                     u8290:
 14547  003052  8E18               	bsf	(___fladd@b+3)^0,7,c
 14548  003054                     l6558:
 14549  003054  C015  F015         	movff	___fladd@b,?___fladd
 14550  003058  C016  F016         	movff	___fladd@b+1,?___fladd+1
 14551  00305C  C017  F017         	movff	___fladd@b+2,?___fladd+2
 14552  003060  C018  F018         	movff	___fladd@b+3,?___fladd+3
 14553  003064                     l756:
 14554  003064  0012               	return		;funcret
 14555  003066                     __end_of___fladd:
 14556                           	callstack 0
 14557                           
 14558 ;; *************** function _Motor_Start *****************
 14559 ;; Defined at:
 14560 ;;		line 149 in file "main.c"
 14561 ;; Parameters:    Size  Location     Type
 14562 ;;		None
 14563 ;; Auto vars:     Size  Location     Type
 14564 ;;		None
 14565 ;; Return value:  Size  Location     Type
 14566 ;;                  1    wreg      void 
 14567 ;; Registers used:
 14568 ;;		None
 14569 ;; Tracked objects:
 14570 ;;		On entry : 0/0
 14571 ;;		On exit  : 0/0
 14572 ;;		Unchanged: 0/0
 14573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14574 ;;      Params:         0       0       0       0       0       0       0       0       0
 14575 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14576 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14577 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14578 ;;Total ram usage:        0 bytes
 14579 ;; Hardware stack levels used: 1
 14580 ;; Hardware stack levels required when called: 2
 14581 ;; This function calls:
 14582 ;;		Nothing
 14583 ;; This function is called by:
 14584 ;;		_main
 14585 ;; This function uses a non-reentrant model
 14586 ;;
 14587                           
 14588                           	psect	text55
 14589  005E04                     __ptext55:
 14590                           	callstack 0
 14591  005E04                     _Motor_Start:
 14592                           	callstack 28
 14593  005E04                     
 14594                           ;main.c: 150:     PORTDbits.RD0 = 1;
 14595  005E04  8083               	bsf	131,0,c	;volatile
 14596                           
 14597                           ;main.c: 151:     PORTDbits.RD1 = 0;
 14598  005E06  9283               	bcf	131,1,c	;volatile
 14599  005E08  0012               	return		;funcret
 14600  005E0A                     __end_of_Motor_Start:
 14601                           	callstack 0
 14602                           
 14603 ;; *************** function ___name *****************
 14604 ;; Defined at:
 14605 ;;		line 39 in file "main.c"
 14606 ;; Parameters:    Size  Location     Type
 14607 ;;		None
 14608 ;; Auto vars:     Size  Location     Type
 14609 ;;		None
 14610 ;; Return value:  Size  Location     Type
 14611 ;;                  1    wreg      void 
 14612 ;; Registers used:
 14613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14614 ;; Tracked objects:
 14615 ;;		On entry : 0/0
 14616 ;;		On exit  : 0/0
 14617 ;;		Unchanged: 0/0
 14618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14619 ;;      Params:         0       0       0       0       0       0       0       0       0
 14620 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14621 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14622 ;;      Totals:         2       0       0       0       0       0       0       0       0
 14623 ;;Total ram usage:        2 bytes
 14624 ;; Hardware stack levels used: 1
 14625 ;; Hardware stack levels required when called: 1
 14626 ;; This function calls:
 14627 ;;		_UART_Read
 14628 ;; This function is called by:
 14629 ;;		Interrupt level 2
 14630 ;; This function uses a non-reentrant model
 14631 ;;
 14632                           
 14633                           	psect	intcode
 14634  000008                     __pintcode:
 14635                           	callstack 0
 14636  000008                     ___name:
 14637                           	callstack 21
 14638                           
 14639                           ;incstack = 0
 14640  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14641  00000A  EDDC  F02A         	call	int_func,f	;refresh shadow registers
 14642                           
 14643                           	psect	intcode_body
 14644  0055B8                     __pintcode_body:
 14645                           	callstack 21
 14646  0055B8                     int_func:
 14647                           	callstack 21
 14648  0055B8  0006               	pop		; remove dummy address from shadow register refresh
 14649  0055BA  CFD9 F001          	movff	fsr2l,??___name
 14650  0055BE  CFDA F002          	movff	fsr2h,??___name+1
 14651  0055C2                     
 14652                           ;main.c: 41:     if( PIR1bits.RC1IF == 1 ){
 14653  0055C2  AA9E               	btfss	158,5,c	;volatile
 14654  0055C4  EFE6  F02A         	goto	i2u778_41
 14655  0055C8  EFE8  F02A         	goto	i2u778_40
 14656  0055CC                     i2u778_41:
 14657  0055CC  EF1C  F02B         	goto	i2l84
 14658  0055D0                     i2u778_40:
 14659  0055D0                     
 14660                           ;main.c: 43:         letra = UART_Read();
 14661  0055D0  ECF9  F02E         	call	_UART_Read	;wreg free
 14662  0055D4  6E5C               	movwf	_letra^0,c
 14663  0055D6                     
 14664                           ;main.c: 44:         if(letra == '*'){
 14665  0055D6  0E2A               	movlw	42
 14666  0055D8  185C               	xorwf	_letra^0,w,c
 14667  0055DA  A4D8               	btfss	status,2,c
 14668  0055DC  EFF2  F02A         	goto	i2u779_41
 14669  0055E0  EFF4  F02A         	goto	i2u779_40
 14670  0055E4                     i2u779_41:
 14671  0055E4  EFFB  F02A         	goto	i2l6124
 14672  0055E8                     i2u779_40:
 14673  0055E8                     
 14674                           ;main.c: 45:             flag_start_Rx = 1;
 14675  0055E8  0E00               	movlw	0
 14676  0055EA  0101               	movlb	1	; () banked
 14677  0055EC  6F39               	movwf	(_flag_start_Rx+1)& (0+255),b
 14678  0055EE  0E01               	movlw	1
 14679  0055F0  6F38               	movwf	_flag_start_Rx& (0+255),b
 14680                           
 14681                           ;main.c: 46:         }
 14682  0055F2  EF1C  F02B         	goto	i2l84
 14683  0055F6                     i2l6124:
 14684  0055F6  0101               	movlb	1	; () banked
 14685  0055F8  0538               	decf	_flag_start_Rx& (0+255),w,b
 14686  0055FA  1139               	iorwf	(_flag_start_Rx+1)& (0+255),w,b
 14687  0055FC  A4D8               	btfss	status,2,c
 14688  0055FE  EF03  F02B         	goto	i2u780_41
 14689  005602  EF05  F02B         	goto	i2u780_40
 14690  005606                     i2u780_41:
 14691  005606  EF1C  F02B         	goto	i2l84
 14692  00560A                     i2u780_40:
 14693  00560A                     
 14694                           ; BSR set to: 1
 14695                           ;main.c: 49:             if(letra == '#'){
 14696  00560A  0E23               	movlw	35
 14697  00560C  185C               	xorwf	_letra^0,w,c
 14698  00560E  A4D8               	btfss	status,2,c
 14699  005610  EF0C  F02B         	goto	i2u781_41
 14700  005614  EF0E  F02B         	goto	i2u781_40
 14701  005618                     i2u781_41:
 14702  005618  EF12  F02B         	goto	i2l6130
 14703  00561C                     i2u781_40:
 14704  00561C                     
 14705                           ; BSR set to: 1
 14706                           ;main.c: 50:                 flag_Rx_completed = 1;
 14707  00561C  0E00               	movlw	0
 14708  00561E  6F3B               	movwf	(_flag_Rx_completed+1)& (0+255),b
 14709  005620  0E01               	movlw	1
 14710  005622  6F3A               	movwf	_flag_Rx_completed& (0+255),b
 14711  005624                     i2l6130:
 14712                           
 14713                           ; BSR set to: 1
 14714                           ;main.c: 53:             bufferRx[indiceRx] = letra;
 14715  005624  0EA0               	movlw	low _bufferRx
 14716  005626  253C               	addwf	_indiceRx& (0+255),w,b
 14717  005628  6ED9               	movwf	fsr2l,c
 14718  00562A  0E01               	movlw	high _bufferRx
 14719  00562C  213D               	addwfc	(_indiceRx+1)& (0+255),w,b
 14720  00562E  6EDA               	movwf	fsr2h,c
 14721  005630  C05C  FFDF         	movff	_letra,indf2
 14722  005634                     
 14723                           ; BSR set to: 1
 14724                           ;main.c: 54:             indiceRx++;
 14725  005634  4B3C               	infsnz	_indiceRx& (0+255),f,b
 14726  005636  2B3D               	incf	(_indiceRx+1)& (0+255),f,b
 14727  005638                     i2l84:
 14728  005638  C002  FFDA         	movff	??___name+1,fsr2h
 14729  00563C  C001  FFD9         	movff	??___name,fsr2l
 14730  005640  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14731  005642  0011               	retfie		f
 14732  005644                     __end_of___name:
 14733                           	callstack 0
 14734                           
 14735 ;; *************** function _UART_Read *****************
 14736 ;; Defined at:
 14737 ;;		line 50 in file "UART_LIB.c"
 14738 ;; Parameters:    Size  Location     Type
 14739 ;;		None
 14740 ;; Auto vars:     Size  Location     Type
 14741 ;;		None
 14742 ;; Return value:  Size  Location     Type
 14743 ;;                  1    wreg      unsigned char 
 14744 ;; Registers used:
 14745 ;;		wreg, status,2
 14746 ;; Tracked objects:
 14747 ;;		On entry : 0/0
 14748 ;;		On exit  : 0/0
 14749 ;;		Unchanged: 0/0
 14750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14751 ;;      Params:         0       0       0       0       0       0       0       0       0
 14752 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14753 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14754 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14755 ;;Total ram usage:        0 bytes
 14756 ;; Hardware stack levels used: 1
 14757 ;; This function calls:
 14758 ;;		Nothing
 14759 ;; This function is called by:
 14760 ;;		___name
 14761 ;; This function uses a non-reentrant model
 14762 ;;
 14763                           
 14764                           	psect	text57
 14765  005DF2                     __ptext57:
 14766                           	callstack 0
 14767  005DF2                     _UART_Read:
 14768                           	callstack 21
 14769  005DF2                     i2l169:
 14770  005DF2  AA9E               	btfss	158,5,c	;volatile
 14771  005DF4  EFFE  F02E         	goto	i2u760_41
 14772  005DF8  EF00  F02F         	goto	i2u760_40
 14773  005DFC                     i2u760_41:
 14774  005DFC  EFF9  F02E         	goto	i2l169
 14775  005E00                     i2u760_40:
 14776  005E00                     
 14777                           ;UART_LIB.c: 52:     return RCREG;
 14778  005E00  50AE               	movf	174,w,c	;volatile
 14779  005E02  0012               	return		;funcret
 14780  005E04                     __end_of_UART_Read:
 14781                           	callstack 0
 14782                           
 14783                           	psect	rparam
 14784  0000                     
 14785                           	psect	temp
 14786  00005D                     btemp:
 14787                           	callstack 0
 14788  00005D                     	ds	1
 14789  0000                     int$flags	set	btemp
 14790  0000                     wtemp8	set	btemp+1
 14791  0000                     ttemp5	set	btemp+1
 14792  0000                     ttemp6	set	btemp+4
 14793  0000                     ttemp7	set	btemp+8
 14794                           
 14795                           	psect	idloc
 14796                           
 14797                           ;Config register IDLOC0 @ 0x200000
 14798                           ;	unspecified, using default values
 14799  200000                     	org	2097152
 14800  200000  FF                 	db	255
 14801                           
 14802                           ;Config register IDLOC1 @ 0x200001
 14803                           ;	unspecified, using default values
 14804  200001                     	org	2097153
 14805  200001  FF                 	db	255
 14806                           
 14807                           ;Config register IDLOC2 @ 0x200002
 14808                           ;	unspecified, using default values
 14809  200002                     	org	2097154
 14810  200002  FF                 	db	255
 14811                           
 14812                           ;Config register IDLOC3 @ 0x200003
 14813                           ;	unspecified, using default values
 14814  200003                     	org	2097155
 14815  200003  FF                 	db	255
 14816                           
 14817                           ;Config register IDLOC4 @ 0x200004
 14818                           ;	unspecified, using default values
 14819  200004                     	org	2097156
 14820  200004  FF                 	db	255
 14821                           
 14822                           ;Config register IDLOC5 @ 0x200005
 14823                           ;	unspecified, using default values
 14824  200005                     	org	2097157
 14825  200005  FF                 	db	255
 14826                           
 14827                           ;Config register IDLOC6 @ 0x200006
 14828                           ;	unspecified, using default values
 14829  200006                     	org	2097158
 14830  200006  FF                 	db	255
 14831                           
 14832                           ;Config register IDLOC7 @ 0x200007
 14833                           ;	unspecified, using default values
 14834  200007                     	org	2097159
 14835  200007  FF                 	db	255
 14836                           
 14837                           	psect	config
 14838                           
 14839                           ;Config register CONFIG1L @ 0x300000
 14840                           ;	PLL Prescaler Selection bits
 14841                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 14842                           ;	System Clock Postscaler Selection bits
 14843                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 14844                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 14845                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 14846  300000                     	org	3145728
 14847  300000  00                 	db	0
 14848                           
 14849                           ;Config register CONFIG1H @ 0x300001
 14850                           ;	Oscillator Selection bits
 14851                           ;	FOSC = HS, HS oscillator (HS)
 14852                           ;	Fail-Safe Clock Monitor Enable bit
 14853                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14854                           ;	Internal/External Oscillator Switchover bit
 14855                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14856  300001                     	org	3145729
 14857  300001  0C                 	db	12
 14858                           
 14859                           ;Config register CONFIG2L @ 0x300002
 14860                           ;	Power-up Timer Enable bit
 14861                           ;	PWRT = OFF, PWRT disabled
 14862                           ;	Brown-out Reset Enable bits
 14863                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 14864                           ;	Brown-out Reset Voltage bits
 14865                           ;	BORV = 3, Minimum setting 2.05V
 14866                           ;	USB Voltage Regulator Enable bit
 14867                           ;	VREGEN = OFF, USB voltage regulator disabled
 14868  300002                     	org	3145730
 14869  300002  1F                 	db	31
 14870                           
 14871                           ;Config register CONFIG2H @ 0x300003
 14872                           ;	Watchdog Timer Enable bit
 14873                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 14874                           ;	Watchdog Timer Postscale Select bits
 14875                           ;	WDTPS = 32768, 1:32768
 14876  300003                     	org	3145731
 14877  300003  1E                 	db	30
 14878                           
 14879                           ; Padding undefined space
 14880  300004                     	org	3145732
 14881  300004  FF                 	db	255
 14882                           
 14883                           ;Config register CONFIG3H @ 0x300005
 14884                           ;	CCP2 MUX bit
 14885                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 14886                           ;	PORTB A/D Enable bit
 14887                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 14888                           ;	Low-Power Timer 1 Oscillator Enable bit
 14889                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 14890                           ;	MCLR Pin Enable bit
 14891                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 14892  300005                     	org	3145733
 14893  300005  81                 	db	129
 14894                           
 14895                           ;Config register CONFIG4L @ 0x300006
 14896                           ;	Stack Full/Underflow Reset Enable bit
 14897                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14898                           ;	Single-Supply ICSP Enable bit
 14899                           ;	LVP = OFF, Single-Supply ICSP disabled
 14900                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 14901                           ;	ICPRT = OFF, ICPORT disabled
 14902                           ;	Extended Instruction Set Enable bit
 14903                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14904                           ;	Background Debugger Enable bit
 14905                           ;	DEBUG = 0x1, unprogrammed default
 14906  300006                     	org	3145734
 14907  300006  81                 	db	129
 14908                           
 14909                           ; Padding undefined space
 14910  300007                     	org	3145735
 14911  300007  FF                 	db	255
 14912                           
 14913                           ;Config register CONFIG5L @ 0x300008
 14914                           ;	Code Protection bit
 14915                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 14916                           ;	Code Protection bit
 14917                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 14918                           ;	Code Protection bit
 14919                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 14920                           ;	Code Protection bit
 14921                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 14922  300008                     	org	3145736
 14923  300008  0F                 	db	15
 14924                           
 14925                           ;Config register CONFIG5H @ 0x300009
 14926                           ;	Boot Block Code Protection bit
 14927                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 14928                           ;	Data EEPROM Code Protection bit
 14929                           ;	CPD = OFF, Data EEPROM is not code-protected
 14930  300009                     	org	3145737
 14931  300009  C0                 	db	192
 14932                           
 14933                           ;Config register CONFIG6L @ 0x30000A
 14934                           ;	Write Protection bit
 14935                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 14936                           ;	Write Protection bit
 14937                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 14938                           ;	Write Protection bit
 14939                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 14940                           ;	Write Protection bit
 14941                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 14942  30000A                     	org	3145738
 14943  30000A  0F                 	db	15
 14944                           
 14945                           ;Config register CONFIG6H @ 0x30000B
 14946                           ;	Configuration Register Write Protection bit
 14947                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 14948                           ;	Boot Block Write Protection bit
 14949                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 14950                           ;	Data EEPROM Write Protection bit
 14951                           ;	WRTD = OFF, Data EEPROM is not write-protected
 14952  30000B                     	org	3145739
 14953  30000B  E0                 	db	224
 14954                           
 14955                           ;Config register CONFIG7L @ 0x30000C
 14956                           ;	Table Read Protection bit
 14957                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 14958                           ;	Table Read Protection bit
 14959                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 14960                           ;	Table Read Protection bit
 14961                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 14962                           ;	Table Read Protection bit
 14963                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 14964  30000C                     	org	3145740
 14965  30000C  0F                 	db	15
 14966                           
 14967                           ;Config register CONFIG7H @ 0x30000D
 14968                           ;	Boot Block Table Read Protection bit
 14969                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 14970  30000D                     	org	3145741
 14971  30000D  40                 	db	64
 14972                           tosu	equ	0xFFF
 14973                           tosh	equ	0xFFE
 14974                           tosl	equ	0xFFD
 14975                           stkptr	equ	0xFFC
 14976                           pclatu	equ	0xFFB
 14977                           pclath	equ	0xFFA
 14978                           pcl	equ	0xFF9
 14979                           tblptru	equ	0xFF8
 14980                           tblptrh	equ	0xFF7
 14981                           tblptrl	equ	0xFF6
 14982                           tablat	equ	0xFF5
 14983                           prodh	equ	0xFF4
 14984                           prodl	equ	0xFF3
 14985                           indf0	equ	0xFEF
 14986                           postinc0	equ	0xFEE
 14987                           postdec0	equ	0xFED
 14988                           preinc0	equ	0xFEC
 14989                           plusw0	equ	0xFEB
 14990                           fsr0h	equ	0xFEA
 14991                           fsr0l	equ	0xFE9
 14992                           wreg	equ	0xFE8
 14993                           indf1	equ	0xFE7
 14994                           postinc1	equ	0xFE6
 14995                           postdec1	equ	0xFE5
 14996                           preinc1	equ	0xFE4
 14997                           plusw1	equ	0xFE3
 14998                           fsr1h	equ	0xFE2
 14999                           fsr1l	equ	0xFE1
 15000                           bsr	equ	0xFE0
 15001                           indf2	equ	0xFDF
 15002                           postinc2	equ	0xFDE
 15003                           postdec2	equ	0xFDD
 15004                           preinc2	equ	0xFDC
 15005                           plusw2	equ	0xFDB
 15006                           fsr2h	equ	0xFDA
 15007                           fsr2l	equ	0xFD9
 15008                           status	equ	0xFD8

Data Sizes:
    Strings     73
    Constant    0
    Data        118
    BSS         147
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      92
    BANK0           160    151     153
    BANK1           256     35     245
    BANK2           256      0      50
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_25(CODE[1]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 3
		 -> NULL(NULL[0]), STR_2(CODE[3]), STR_1(CODE[3]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    atof@s	PTR const unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    strtof@s	PTR const unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    strtof@res	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_3(CODE[33]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_3(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_3(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_3(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK2[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1200$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1200$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 50
		 -> bufferRx(BANK1[50]), 

    memset@s	PTR unsigned char  size(2) Largest target is 50
		 -> bufferRx(BANK1[50]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK2[50]), 

    sp__memset	PTR void  size(2) Largest target is 50
		 -> bufferRx(BANK1[50]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 

    main@pch	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), bufferRx(BANK1[50]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _efgtoa->___fltol
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _atof->_strtof
    _strtof->___fldiv
    _strtof->___flge
    _toupper->_islower
    _isxdigit->_isdigit
    ___flge->___flmul
    _UART_Write_Text->_UART_Write_Chr
    _UART_Init->___lldiv
    _PWM1_Set_Duty->___fltol
    _PWM1_Init->___fltol
    ___xxtofl->_getDistance
    ___fltol->___fldiv
    ___flmul->___flsub
    ___fldiv->___flmul
    ___fladd->___xxtofl

Critical Paths under ___name in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _atof->_strtof
    _strtof->___fldiv
    _PWM1_Set_Duty->___fltol
    _PWM1_Init->___fltol
    ___fltol->___fldiv

Critical Paths under ___name in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under ___name in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under ___name in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under ___name in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under ___name in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under ___name in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under ___name in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under ___name in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0  133102
                                            149 BANK0      2     2      0
                                             13 BANK1     22    22      0
                        _Motor_Start
                          _PWM1_Init
                      _PWM1_Set_Duty
                         _PWM1_Start
                          _UART_Init
                    _UART_Write_Text
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _atof
                        _getDistance
                             _memset
                            _sprintf
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               4     0      4    1752
                                             13 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     3      4     635
                                              6 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     3      4     635
                                              6 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               4     0      4     392
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             37    15     22   54483
                                            127 BANK0     22     0     22
                                              0 BANK1     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   53967
                                            119 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   53371
                                             91 BANK0     28    22      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   37222
                                             29 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1105
                                              8 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             81 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5267
                                             36 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6493
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4227
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    3034
                                              9 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (1) _memset                                              12     6      6     947
                                              2 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _getDistance                                          4     2      2      24
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _atof                                                 4     0      4   25310
                                             30 BANK0      4     0      4
                             _strtof
 ---------------------------------------------------------------------------------
 (2) _strtof                                              21    17      4   25189
                                             81 COMRAM     4     0      4
                                             13 BANK0     17    17      0
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                             ___wmul
                           ___xxtofl
                            _isdigit
                            _isspace
                           _isxdigit
                               _nanf
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              6     4      2     464
                                              8 COMRAM     6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (4) _islower                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 8     4      4      99
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _isxdigit                                             8     6      2    1477
                                              8 COMRAM     7     5      2
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2    1091
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     349
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1052
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     245
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1526
                                             69 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     950
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2     143
                                              3 COMRAM     2     0      2
                     _UART_Write_Chr
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Chr                                       1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16     8      8     504
                                             15 COMRAM    16     8      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        5     5      0   12677
                                             15 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            9     7      2   17214
                                             15 BANK0      9     7      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1158
                                              6 COMRAM    14    10      4
                        _getDistance (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1327
                                             81 COMRAM     8     4      4
                                             13 BANK0      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    6113
                                             44 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3983
                                             69 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4342
                                             20 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Motor_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) ___name                                               2     2      0       0
                                              0 COMRAM     2     2      0
                          _UART_Read
 ---------------------------------------------------------------------------------
 (10) _UART_Read                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Motor_Start
   _PWM1_Init
     ___fladd
       ___xxtofl (ARG)
         _getDistance (ARG)
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _PWM1_Set_Duty
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _PWM1_Start
   _UART_Init
     ___lldiv
   _UART_Write_Text
     _UART_Write_Chr
   ___fladd
   ___flge
     ___flmul (ARG)
   ___flmul
   ___flsub
   ___fltol
   ___xxtofl
   _atof
     _strtof
       ___fldiv
       ___fleq
       ___flge
       ___flmul
       ___flneg
       ___lmul
       ___wmul
       ___xxtofl
       _isdigit
       _isspace
       _isxdigit
         _isdigit
       _nanf
       _toupper
         _islower
   _getDistance
   _memset
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 ___name (ROOT)
   _UART_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      32       9       19.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      F5       7       95.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     97      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5C       1       97.9%
BITBIGSFRhhlh       26      0       0      21        0.0%
BITBIGSFRlll        21      0       0      30        0.0%
BITBIGSFRllhh        F      0       0      28        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhlll        C      0       0      26        0.0%
BITBIGSFRhlhll       A      0       0      25        0.0%
BITBIGSFRhhll        8      0       0      22        0.0%
BITBIGSFRlhh         7      0       0      27        0.0%
BITBIGSFRhlhh        2      0       0      23        0.0%
BITBIGSFRhlhlh       1      0       0      24        0.0%
BITBIGSFRllhl        1      0       0      29        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21C      31        0.0%
DATA                 0      0     21C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 02 10:46:52 2023

       PWM1_Set_Duty@val 0070             ___fldiv@aexp 006C             ___fldiv@bexp 006B  
           ___fldiv@sign 0064        PWM1_Set_Duty@duty 006F                       l97 3174  
                     _Kd 0196                       _Ki 0192                       _Kp 019A  
           ___awdiv@sign 0008      ___wmul@multiplicand 0005                      l111 5A54  
                    l112 5A5C                      l106 5A28                      l115 5E08  
                    l213 5E0C                      l150 4EB2                      l230 5776  
                    l207 53B8                      l231 5786                      l152 4EBC  
                    l160 5DF0                      l153 4EC4                      l154 4EF8  
                    l219 5DB8                      l253 55B6                      l157 5DDE  
                    l333 46D6                      l246 55A6                      l166 5D6C  
                    l193 3F9E                      l346 49B0                      l450 523E  
                    l516 4C0E                      l196 4184                      l463 5468  
                    l801 3C6A                      l803 3ACA                      l812 3B10  
                    l484 4CCC                      l493 5CD4                      l814 3B88  
                    l806 3A8E                      l478 5512                      l815 3B76  
                    l840 3760                      l833 356A                      l489 4D12  
                    l850 3890                      l842 37D8                      l747 2D94  
                    l843 37C6                      l907 596E                      l764 2EAE  
                    l756 3064                      l748 2D82                      l773 2F7E  
                    l749 2D48                      l837 38CE                      l774 2F6C  
                    l950 5284                      l881 448A                      l953 52C6  
                    l961 3D0C                      l874 43F2                      l955 5300  
                    l963 3D14                      l877 454E                      l981 3F4A  
                    l789 5AE8                      l894 484C                      l888 44E6  
                    l997 24FE                      _PR2 000FCB                      _RX9 007D5E  
                    _TX9 007D66                      _abs 5BB6                      _pad 5240  
                    _ref 018E             ___awmod@sign 0008                      wreg 000FE8  
           ___flmul@aexp 003A             ___flmul@bexp 003F             ___flmul@sign 0039  
           ___flmul@temp 0044             ___flmul@prod 0040             ___fltol@exp1 006E  
                   l1013 1CAC                     l1111 2AEA                     l1041 20EC  
                   l1105 2BA4                     ?_abs 0015                     l1133 5BEC  
                   l1117 5714                     l1206 517A                     l1214 5B70  
                   l1118 571C                     l1223 5914                     l1136 5BF4  
                   l1128 4E10                     l1313 18F2                     l1161 4B06  
                   l1217 5E0E                     l1233 50B0                     l1170 42DE  
                   l1082 25F4                     l1229 5D0A                     l1158 4AFE  
                   l1423 56B2                     l1343 1106                     l1167 439A  
                   l1191 5C2C                     l1408 5D92                     l1185 5A12  
                   l1177 5C9C                     l1361 13BE                     l1362 1364  
                   l1354 12D0                     l1442 4FD2                     l1363 13D0  
                   l1451 58B0                     l1452 58B8                     l1429 5DDA  
                   l1269 18AE                     l1455 5970                     l1439 4FDA  
                   l1473 5A9A                     l1457 59C0                     l1467 584A  
                   l1484 5BAC                     l1476 5AA2                     l1468 5852  
                   l1493 5C64                     l1487 5BB4                     l6000 4EAC  
                   l6002 4EB6                     l6010 4ECE                     l6020 4F0C  
                   l6006 4EC8                     l6110 5D42                     l5230 572E  
                   l6030 4F66                     l6022 4F26                     l6016 5E04  
                   l5240 43AE                     l6112 5D50                     l5232 573C  
                   l5224 5C2E                     l7000 53EE                     l6040 4FC2  
                   l5250 442C                     l5242 43BC                     l6114 5D54  
                   l5234 574C                     l6050 46D8                     l7010 5434  
                   l7002 5400                     l6042 4FCA                     l6034 4F7C  
                   l6026 4F32                     l6018 4EFA                     l5260 4480  
                   l5252 4434                     l5244 4402                     l5500 5566  
                   l6108 5D3E                     l5236 5756                     l5228 571E  
                   l6060 4738                     l7020 5460                     l7012 543C  
                   l7004 5408                     l6036 4F9E                     l6028 4F4E  
                   l7110 4BFE                     l7102 4BC2                     l5270 44F6  
                   l5262 44BC                     l5254 4440                     l5246 4418  
                   l5238 439E                     l5502 5584                     l7030 54D6  
                   l6062 4790                     l6054 46F6                     l7014 5442  
                   l7006 5410                     l6038 4FB6                     ?_pad 0013  
                   l6400 2C76                     l7104 4BCE                     l5280 453E  
                   l5272 44FA                     l5264 44C8                     l5256 4472  
                   l5504 5594                     l7032 54E6                     l7024 546A  
                   l7040 4C10                     l5440 5DCA                     l6080 483A  
                   l6072 47F0                     l6056 4702                     l7120 5270  
                   l7008 541E                     l7016 5448                     l7200 438A  
                   l6410 2CAE                     l6402 2C86                     l7106 4BDE  
                   l5274 451E                     l5266 44D6                     l5258 4474  
                   l5506 5596                     l7034 550A                     l7026 5498  
                   l7050 4C9A                     l7042 4C3E                     l7210 59C6  
                   l8010 1010                     l8002 0FCC                     l6090 5A3A  
                   l6082 5A14                     l6074 4824                     l6066 47AA  
                   l7130 52D4                     l7122 527C                     l7114 5240  
                   l7018 5458                     l6420 2CC2                     l6412 2CB2  
                   l6404 2C98                     l7108 4BEE                     l5276 452E  
                   l5268 44F4                     l5508 55A0                     l7036 5510  
                   l7028 54A8                     l7052 4CAC                     l7044 4C4E  
                   l7212 59DA                     l7204 5C66                     l8100 139C  
                   l8020 1044                     l8012 1014                     l8004 0FCE  
                   l6092 5A3E                     l6084 5A1C                     l6076 4830  
                   l6068 47D6                     l7132 52E8                     l7124 5290  
                   l7116 524E                     l7220 3C6C                     l7140 4D14  
                   l7300 197A                     l6510 2F10                     l6502 2EE8  
                   l6430 2CD6                     l6422 2CC6                     l6414 2CB6  
                   l6406 2CA6                     l7070 4B08                     l5278 453C  
                   l7054 4CBA                     l7046 4C7C                     l7062 5C9E  
                   l7214 5A08                     l5438 5DBA                     l5462 5B72  
                   l8110 1414                     l8102 13CC                     l8022 1050  
                   l8014 101C                     l8006 0FEC                     l6094 5A46  
                   l6086 5A1E                     l6078 4836                     l6350 50D6  
                   l7126 52A4                     l7118 5262                     l7230 3CE6  
                   l7222 3C8C                     l7142 4D34                     l7310 19A8  
                   l7302 198C                     l6512 2F18                     l6504 2EF2  
                   l6520 2F3C                     l6440 2CEA                     l6432 2CDA  
                   l6424 2CCA                     l6416 2CBA                     l6408 2CAA  
                   l6360 2BA6                     l7080 4B60                     l7072 4B20  
                   l7056 4D0A                     l7048 4C8C                     l7064 5CB4  
                   l7216 5A0C                     l7208 59C2                     l8200 17DC  
                   l8120 145A                     l8112 1432                     l8104 13D8  
                   l8040 1114                     l8024 1060                     l8032 10AA  
                   l8016 1024                     l8008 0FF2                     l6088 5A26  
                   l6600 4594                     l7136 5BB6                     l6352 50E0  
                   l7128 52A8                     l7240 3D42                     l7232 3D00  
                   l7224 3CB4                     l7144 4D72                     l7152 4DB2  
                   l7400 1D54                     l7320 1A02                     l7304 1998  
                   l7312 19AE                     l5480 59B8                     l5472 5970  
                   l6530 2F8E                     l6522 2F40                     l6514 2F1C  
                   l6506 2F00                     l6450 2D62                     l6442 2D14  
                   l6434 2CDE                     l6426 2CCE                     l6418 2CBE  
                   l6370 2BE2                     l6362 2BB2                     l7082 4B70  
                   l5490 5524                     l7058 4D10                     l7066 5CC4  
                   l5466 5B72                     l8210 1876                     l8202 17F6  
                   l8114 143C                     l8106 13E0                     l8050 1168  
                   l8042 111C                     l8034 10E2                     l8026 107C  
                   l8018 1026                     l6610 45EA                     l6602 45B4  
                   l7138 5BD0                     l6354 50FE                     l6346 50B2  
                   l7250 3DE2                     l7242 3D4A                     l7234 3D1C  
                   l7226 3CD4                     l7154 4DC4                     l7146 4D9A  
                   l7162 58BA                     l7170 5A5E                     l7410 1D98  
                   l7402 1D66                     l7322 1A1E                     l7330 1A68  
                   l7306 19A0                     l5474 598C                     l6540 2FF4  
                   l6532 2F9A                     l6524 2F4E                     l6516 2F2C  
                   l6508 2F02                     l6460 2DA2                     l6452 2D66  
                   l6444 2D30                     l6436 2CE2                     l6428 2CD2  
                   l6380 2C12                     l6372 2BF2                     l6364 2BC0  
                   l6700 3974                     l7092 4B9A                     l7084 4B74  
                   l7076 4B34                     l5492 553A                     l5484 5DDE  
                   l5468 5BA0                     l8220 18BE                     l8212 1886  
                   l8204 182A                     l8140 152E                     l8132 14C4  
                   l8124 1474                     l8116 1456                     l8108 13FA  
                   l8060 11D2                     l8044 1124                     l8036 10F2  
                   l8028 10A8                     l6620 466C                     l6612 45FE  
                   l6604 45B8                     l6356 5134                     l6348 50C4  
                   l7260 3E9E                     l7252 3DE8                     l7244 3D54  
                   l7236 3D2E                     l7228 3CE4                     l7148 4DA6  
                   l7180 41FE                     l7164 58CA                     l7172 5A8C  
                   l7500 2242                     l7420 1DE2                     l7412 1DB0  
                   l7404 1D74                     l7340 1AD8                     l7324 1A36  
                   l7308 19A4                     l8300 3090                     l6550 303C  
                   l6542 3004                     l6534 2FA8                     l6526 2F64  
                   l6518 2F2E                     l6470 2DE4                     l6462 2DB2  
                   l6454 2D74                     l6446 2D40                     l6438 2CE6  
                   l6390 2C3C                     l6382 2C24                     l6374 2BF4  
                   l6366 2BC2                     l6710 39B4                     l6702 3984  
                   l7094 4BA4                     l7086 4B82                     l7078 4B5E  
                   l8230 3F58                     l5494 5542                     l5486 5DEC  
                   l8222 18E2                     l8206 1832                     l8150 15B2  
                   l8142 1562                     l8134 14F8                     l8126 14AA  
                   l8070 123A                     l8062 11E0                     l8054 117C  
                   l8046 1136                     l6630 46B6                     l6622 466E  
                   l6614 460C                     l6606 45C4                     l7270 3EEC  
                   l7262 3EB8                     l7246 3D5A                     l7254 3E4C  
                   l7238 3D3C                     l7158 4E08                     l7190 42CE  
                   l7182 4212                     l7166 5A5E                     l7510 22E0  
                   l7502 2246                     l7422 1DF6                     l7430 1EEC  
                   l7414 1DC2                     l7406 1D78                     l7350 1B0E  
                   l7326 1A40                     l7318 19D4                     l5478 5998  
                   l8310 30C4                     l8302 30A2                     l6552 303E  
                   l6544 3024                     l6536 2FE2                     l6480 2E12  
                   l6472 2DF2                     l6456 2D76                     l6448 2D56  
                   l6392 2C4C                     l6384 2C26                     l6368 2BD2  
                   l6376 2BFC                     l6800 3C60                     l6712 39C4  
                   l6720 39E4                     l6704 3986                     l7096 4BAE  
                   l8240 3FB0                     l8232 3F60                     l5496 554E  
                   l5488 5514                     l8216 189A                     l8208 1844  
                   l8160 163A                     l8152 15C4                     l8136 152A  
                   l8128 14C0                     l8144 1594                     l8080 12DE  
                   l8072 1256                     l8064 11FC                     l8056 11AE  
                   l8048 1152                     l7600 4A28                     l6624 4680  
                   l6616 461E                     l6608 45E2                     l6640 4880  
                   l7272 3EFE                     l7256 3E66                     l7264 3EC6  
                   l7248 3DDC                     l7184 4220                     l7192 4302  
                   l7176 4186                     l7520 233E                     l7504 224C  
                   l7512 22E4                     l7440 1FB8                     l7432 1F0A  
                   l7424 1E5A                     l7408 1D8A                     l7416 1DCA  
                   l7360 1BD8                     l7336 1A8E                     l8320 315A  
                   l8312 30C8                     l8304 30A6                     l6554 3044  
                   l6546 3028                     l6538 2FE4                     l6490 2E7E  
                   l6482 2E1C                     l6474 2DFE                     l6466 2DC6  
                   l6458 2D80                     l6394 2C5C                     l6386 2C2C  
                   l6378 2C0C                     l6730 3A22                     l6722 39F4  
                   l6714 39CC                     l6706 398E                     l6810 34B2  
                   l8250 4160                     l8242 3FF6                     l8226 3F4C  
                   l5498 555C                     l8170 169E                     l8154 15D2  
                   l8146 15A2                     l8090 133A                     l8082 12F8  
                   l8074 126E                     l8066 1214                     l8058 11C2  
                   l7610 4A9A                     l7602 4A30                     l6618 464C  
                   l6626 4686                     l6650 48D8                     l6642 4884  
                   l6634 484E                     l6562 5B2E                     l6570 5CD6  
                   l7274 3F0A                     l7266 3ED8                     l7258 3E84  
                   l7194 433E                     l7178 41A6                     l7530 237C  
                   l7522 234E                     l7514 2302                     l7506 22A4  
                   l7450 2068                     l7442 1FC8                     l7434 1F3E  
                   l7426 1EB2                     l7418 1DD2                     l7370 1C5A  
                   l7362 1C0C                     l7354 1B44                     l7338 1ABC  
                   l7290 1924                     l7282 18F4                     l5930 581A  
                   l8322 3160                     l8314 30DC                     l8330 31EA  
                   l8306 30AA                     l6556 3052                     l6548 3036  
                   l6492 2E8E                     l6476 2E02                     l6468 2DD6  
                   l6484 2E22                     l6396 2C6C                     l6388 2C3A  
                   l6740 3A6A                     l6732 3A32                     l6724 39F4  
                   l6716 39D0                     l6708 399E                     l6900 3782  
                   l6820 34F2                     l6812 34C0                     l8244 408C  
                   l8228 3F50                     l8236 3F68                     l8260 5394  
                   l8180 1716                     l8172 16A8                     l8164 164E  
                   l8156 15E2                     l8148 15AA                     l8092 133C  
                   l8076 1282                     l8068 122A                     l7612 4AD0  
                   l7604 4A64                     l6628 4696                     l6660 495A  
                   l6652 48EC                     l6644 4892                     l6636 4852  
                   l6564 5B3A                     l6572 5CE2                     l7276 3F12  
                   l7268 3EE6                     l7196 4352                     l7188 4292  
                   l6580 5BF6                     l7540 23B2                     l7532 238C  
                   l7524 2352                     l7516 231E                     l7508 22D8  
                   l7460 20D8                     l7452 209C                     l7444 1FD8  
                   l7436 1F70                     l7428 1EE6                     l7372 1C6C  
                   l7380 1CB8                     l7364 1C14                     l7356 1B78  
                   l7348 1AF4                     l7292 1948                     l7284 18FE  
                   l7620 4FDC                     l7700 2718                     l5932 5854  
                   l5924 57EE                     l8340 335E                     l8332 3222  
                   l8324 31B4                     l8316 30FC                     l8308 30AE  
                   l6558 3054                     l6486 2E48                     l6494 2E9E  
                   l6478 2E10                     l6398 2C6E                     l6750 3AB8  
                   l6742 3A7E                     l6734 3A42                     l6670 38D0  
                   l6910 37F4                     l6902 3790                     l6830 3522  
                   l6822 34F8                     l6814 34C2                     l8246 40D2  
                   l8238 3FA0                     l8182 1748                     l8174 16C8  
                   l8166 165E                     l8158 1608                     l8094 1350  
                   l8086 1302                     l8078 1292                     l8262 5D6E  
                   l7614 4AE2                     l6590 4550                     l6654 48FA  
                   l6662 4960                     l6646 48B2                     l6638 4860  
                   l6566 5B4C                     l6574 5CE6                     l7278 3F22  
                   l7198 437A                     l7550 240E                     l7542 23BE  
                   l7534 2394                     l7526 2362                     l7518 2330  
                   l7470 218E                     l7462 20E4                     l7454 20B0  
                   l7446 200C                     l7438 1F86                     l7390 1CF8  
                   l7374 1C7E                     l7358 1B7E                     l7366 1C46  
                   l7294 1952                     l7286 190E                     l7630 5038  
                   l7622 5006                     l7702 2726                     l8270 5930  
                   l5934 5860                     l5926 57FA                     l8350 33FA  
                   l8342 3392                     l8334 3256                     l8326 31C4  
                   l8318 313E                     l6496 2EC4                     l6488 2E7C  
                   l6760 3B00                     l6752 3AC8                     l6744 3A8C  
                   l6736 3A52                     l6728 3A08                     l6680 390E  
                   l6672 38DE                     l6920 385E                     l6912 3802  
                   l6904 37BE                     l6840 355A                     l6832 3524  
                   l6824 3508                     l6816 34D2                     l6808 34A6  
                   l8248 413C                     l8256 5306                     l6584 5D94  
                   l7800 5644                     l8184 1758                     l8176 16FC  
                   l8168 166A                     l8192 1780                     l8096 135E  
                   l6592 4554                     l6664 4970                     l6656 4928  
                   l6648 48D0                     l6568 5B50                     l6576 5CFE  
                   l7560 2458                     l7544 23C4                     l7552 2414  
                   l7536 23A2                     l7528 2374                     l7480 21D8  
                   l7472 21A0                     l7464 2108                     l7448 2062  
                   l7456 20B4                     l7392 1D2E                     l7376 1C86  
                   l7368 1C56                     l7296 195A                     l7288 191C  
                   l7632 5054                     l7720 2856                     l7712 27B2  
                   l7704 274A                     l7640 2500                     l8272 5938  
                   l5936 5868                     l5928 5802                     l8352 3414  
                   l8344 33C4                     l8336 32AE                     l8328 31E0  
                   l8280 306A                     l6498 2ED4                     l6770 3B40  
                   l6762 3B0E                     l6754 3ADA                     l6746 3A98  
                   l6738 3A5A                     l6690 393E                     l6682 391E  
                   l6674 38EC                     l6930 38B4                     l6922 3878  
                   l6914 382C                     l6850 35AA                     l6842 357A  
                   l6834 3534                     l6826 350E                     l6818 34E2  
                   l8258 5370                     l6586 5DB0                     l7802 5648  
                   l8178 1704                     l8098 1368                     l6594 4562  
                   l6666 4990                     l6658 4948                     l7562 2464  
                   l7554 2426                     l7546 23EA                     l7538 23AA  
                   l7490 220E                     l7482 21E8                     l7474 21AE  
                   l7466 216C                     l7458 20C4                     l7394 1D36  
                   l7386 1CCA                     l7378 1CA0                     l7298 196C  
                   l7634 5066                     l7626 5012                     l7730 2928  
                   l7722 2866                     l7706 2784                     l7714 27F2  
                   l7650 2556                     l7642 2524                     l8274 5956  
                   l8266 5916                     l5938 5880                     l8354 3472  
                   l8346 33DA                     l8338 3306                     l8290 3074  
                   l8282 306C                     l6780 3BB2                     l6772 3B6E  
                   l6756 3AF0                     l6764 3B20                     l6748 3AB6  
                   l6692 3944                     l6684 3920                     l6676 38EE  
                   l6924 3894                     l6932 38BA                     l6908 37E8  
                   l6916 3830                     l6860 35FA                     l6852 35B4  
                   l6844 358A                     l6836 3544                     l6828 3514  
                   l7804 5676                     l8196 179E                     l8188 176C  
                   l7900 0B8C                     l7820 084C                     l6596 4582  
                   l6940 5AB4                     l7580 24D8                     l7572 2488  
                   l7564 246C                     l7556 2440                     l7548 2406  
                   l7492 2212                     l7484 21EC                     l7468 217A  
                   l7476 21B6                     l7388 1CDC                     l7396 1D3A  
                   l7636 508E                     l7628 5020                     l7740 2996  
                   l7724 2898                     l7716 2814                     l7708 27A4  
                   l7652 2558                     l7644 2532                     l7812 56B4  
                   l8268 5928                     l8356 347E                     l8348 33EA  
                   l8292 3076                     l8284 306E                     l6790 3C2A  
                   l6782 3BDC                     l6766 3B2E                     l6758 3AF6  
                   l6694 3952                     l6678 38FE                     l6686 3928  
                   l6934 38BE                     l6926 38A4                     l6918 384A  
                   l6870 363C                     l6862 3606                     l6854 35CA  
                   l6838 3554                     l5982 5E0A                     l5990 4E78  
                   l7806 56A8                     l8198 17D2                     l7910 0C02  
                   l7902 0BB4                     l7830 08AC                     l7822 085E  
                   l7590 49C6                     l6598 4586                     l6950 5196  
                   l7582 24DE                     l7574 24B4                     l7566 247C  
                   l7558 2446                     l7494 2218                     l7486 21F2  
                   l7478 21CA                     l7398 1D42                     l7742 29C6  
                   l7734 2960                     l7726 28BC                     l7718 2824  
                   l7670 2582                     l7662 2576                     l7654 256A  
                   l7646 2544                     l7814 56BC                     l8358 348E  
                   l8294 3078                     l8286 3070                     l8278 3066  
                   l6792 3C46                     l6776 3B98                     l6784 3BE0  
                   l6768 3B32                     l6696 3954                     l6688 3938  
                   l6928 38B2                     l6880 369E                     l6872 364C  
                   l6864 3614                     l6856 35D6                     l6848 359E  
                   l5992 4E7C                     l5984 4E12                     l7808 56AC  
                   l7920 0C5E                     l7912 0C20                     l7904 0BB6  
                   l7840 0910                     l7832 08EC                     l7824 0872  
                   l6960 51BC                     l6952 519A                     l6944 517C  
                   l7576 24C0                     l7568 2482                     l7488 21FE  
                   l7496 221E                     l7752 2A48                     l7736 2972  
                   l7728 28E0                     l7680 2604                     l7648 254A  
                   l7816 56CA                     l8296 3086                     l8288 3072  
                   l6794 3C4A                     l6786 3BFA                     l6778 3BA4  
                   l6698 3964                     l6890 3746                     l6882 36BA  
                   l6874 3666                     l6866 3620                     l6858 35EE  
                   l5994 4E92                     l5986 4E70                     l7930 0CC0  
                   l7922 0C62                     l7914 0C36                     l7906 0BD4  
                   l7850 094E                     l7834 08F0                     l7594 49CA  
                   l6970 51F2                     l6962 51CE                     l6954 51A8  
                   l6946 5180                     l6938 5AA4                     l7578 24C8  
                   l7498 2230                     l7754 2A86                     l7762 2AFE  
                   l7738 2988                     l7746 29F2                     l7690 269C  
                   l7682 2628                     l8490 25B4                     l7674 258E  
                   l7666 257C                     l7658 2570                     l7818 56F8  
                   l8298 308C                     l6796 3C58                     l6788 3C10  
                   l6892 3750                     l6884 36E4                     l6876 3676  
                   l6868 3630                     l5996 4EA8                     l5988 4E74  
                   l7940 0CFA                     l7924 0C80                     l7916 0C3E  
                   l7908 0BE4                     l7860 09E0                     l7852 097E  
                   l7844 0928                     l7836 0904                     l7828 0876  
                   l8492 4A4E                     l7596 49E6                     l7588 49B2  
                   l6972 5208                     l6964 51D6                     l6980 521E  
                   l6956 51B0                     l6948 518E                     l7780 2B92  
                   l7764 2B22                     l7772 2B52                     l7756 2ABA  
                   l7748 2A20                     l7684 265E                     l7676 25E2  
                   l6798 3C5E                     l6894 375E                     l6886 371A  
                   l6878 3692                     l8494 4EE2                     l5998 4EAA  
                   l7950 0DC4                     l7942 0D32                     l7934 0CC8  
                   l7918 0C40                     l7870 0A20                     l7862 09F2  
                   l7854 09AE                     l7846 0930                     l7838 0908  
                   l7598 4A20                     l6982 522E                     l6974 5210  
                   l6966 51DE                     l6958 51B4                     l6990 53BE  
                   l7774 2B60                     l7766 2B30                     l7694 26AA  
                   l7686 266E                     l7678 2602                     l6896 3770  
                   l6888 3728                     l8496 3F80                     l7960 0DEE  
                   l7952 0DC8                     l7944 0D48                     l7936 0CF4  
                   l7928 0CA2                     l7880 0ACA                     l7872 0A3C  
                   l7864 09F6                     l7856 09BE                     l7848 0932  
                   l6984 5236                     l6976 5212                     l6968 51EC  
                   l6992 53CC                     l7768 2B44                     l7696 26EA  
                   l7688 267C                     l6898 377E                     l7794 5644  
                   l7970 0E5E                     l7962 0E0C                     l7946 0D6A  
                   l7954 0DD4                     l7890 0B0A                     l7882 0ADC  
                   l7874 0A6C                     l7858 09CE                     l7866 0A16  
                   l6978 5218                     l6994 53D4                     l7698 270E  
                   l7778 2B6E                     l7980 0ED4                     l7972 0E6A  
                   l7948 0D86                     l7892 0B26                     l7884 0AE6  
                   l7876 0A9C                     l7868 0A1E                     l6996 53D8  
                   l6988 53BA                     l7982 0EEA                     l7974 0E96  
                   l7990 0F6A                     l7966 0E2E                     l7958 0DE8  
                   l7894 0B44                     l7886 0B00                     l7878 0AAE  
                   l6998 53E6                     l7984 0F0C                     l7968 0E4C  
                   l7992 0F6E                     l7896 0B62                     l7888 0B08  
                   l7986 0F28                     l7978 0E9C                     l7994 0F7C  
                   l7898 0B78                     l7996 0F9A                     l7988 0F66  
                   l7998 0FB8                     STR_1 0847                     STR_2 0847  
                   STR_3 0801                     STR_4 0834                     STR_5 083C  
                   STR_8 0838                     STR_9 0840                     _BRGH 007D62  
                   u6300 43BC                     u6301 43B8                     u6310 4418  
                   u6311 4414                     u8000 2D14                     u6320 446E  
                   u8001 2D10                     u6321 446A                     u8010 2D2C  
                   u6330 44B8                     u6250 5C5E                     u8011 2D26  
                   u6331 44B4                     u6251 5C58                     u8100 2E10  
                   u8020 2D2E                     u6340 44D6                     u6260 5C60  
                   u8101 2E0C                     u6341 44D2                     u8110 2E48  
                   u8030 2D56                     u6350 44E6                     u6270 573C  
                   u8111 2E44                     u8031 2D52                     u6351 44E2  
                   u6271 5738                     u8200 2F64                     u8120 2E8E  
                   u8040 2D74                     u6360 44F4                     u6280 5776  
                   u9000 5458                     u6600 59B8                     u8201 2F60  
                   u8121 2E8A                     u8041 2D70                     u6361 44F0  
                   u6281 5772                     u9001 5454                     u6601 59B4  
                   u8210 2F7A                     u8130 2EC4                     u8050 2D94  
                   u6370 452E                     u6290 43AE                     u6610 5DEC  
                   u9010 5498                     u8211 2F76                     u8131 2EC0  
                   u8051 2D90                     u6371 452A                     u6291 43AA  
                   u6611 5DE8                     u9011 5494                     u8220 2F8E  
                   u8140 2ED4                     u8060 2DA2                     u9100 4B20  
                   u6380 453C                     u6620 553A                     u9020 54D6  
                   u8300 5B70                     u8221 2F8A                     u8141 2ED0  
                   u8061 2D9E                     u9101 4B1C                     u6381 4538  
                   u6621 5536                     u9021 54D2                     u8301 5B6C  
                   u8230 2FA8                     u8150 2F00                     u8070 2DB2  
                   u9110 4B54                     u6630 555C                     u9030 550A  
                   u8310 5CFE                     u8231 2FA4                     u8151 2EFC  
                   u8071 2DAE                     u6631 5558                     u9031 5506  
                   u8311 5CFA                     u8240 2FE2                     u8160 2F10  
                   u8080 2DE4                     u9120 4B82                     u6640 5584  
                   u9040 4C3E                     u8400 4696                     u9200 52D4  
                   u8320 5C26                     u8241 2FDE                     u8161 2F0C  
                   u8081 2DE0                     u9121 4B7E                     u6641 5580  
                   u9041 4C3A                     u8401 4692                     u9201 52D0  
                   u8321 5C20                     u8250 2FF4                     u8170 2F2C  
                   u8090 2DF2                     u9130 4B96                     u9050 4C7C  
                   u8410 4860                     u9210 5BD0                     u8330 5C28  
                   u8251 2FF0                     u8171 2F28                     u8091 2DEE  
                   u9131 4B92                     u9115 4B4A                     u9051 4C78  
                   u8411 485C                     u9211 5BCC                     i2l84 5638  
                   u8260 3004                     u8180 2F3C                     u8500 3952  
                   u9140 4BBE                     u7620 4E90                     u9060 4C9A  
                   u6580 5BA0                     u7700 46F2                     u8340 4562  
                   u8420 4892                     u9220 4D54                     u9300 5914  
                   u8261 3000                     u8181 2F38                     u8501 394E  
                   u9141 4BBA                     u7621 4E8A                     u9061 4C96  
                   u6581 5B9C                     u7701 46EE                     u8341 455E  
                   u8421 488E                     u9301 5910                     u8270 3024  
                   u8190 2F4E                     u8510 3964                     u9150 4BDE  
                   u9070 4CBA                     u7710 4734                     u8350 4594  
                   u8430 48D0                     u9230 4D72                     u9310 5A8C  
                   u6590 598C                     u8271 3020                     u8191 2F4A  
                   u8511 3960                     u9151 4BDA                     u7615 4E34  
                   u9071 4CB6                     u7711 4730                     u8351 4590  
                   u8431 48CC                     u9231 4D6E                     u9311 5A88  
                   u6591 5988                     u8280 3036                     u8600 3B0E  
                   u8520 3974                     u9160 4BEE                     u7640 4EA6  
                   u9080 4D0A                     u7720 47A6                     u8440 48FA  
                   u9240 4D9A                     u9400 433E                     u9320 41D0  
                   u7560 581A                     u8281 3032                     u8601 3B0A  
                   u8521 3970                     u9161 4BEA                     u7641 4EA0  
                   u9081 4D06                     u7721 47A2                     u8361 45BE  
                   u8441 48F6                     u9241 4D96                     u9225 4D4A  
                   u9401 433A                     u7561 5816                     u8290 3052  
                   u8610 3B2E                     u8530 39B4                     u9090 5CB4  
                   u7730 47EC                     u8370 45E2                     u8450 4928  
                   u9170 524E                     u9250 4DC4                     u9410 437A  
                   u9330 41FE                     u7570 584A                     u8291 304E  
                   u8611 3B2A                     u8531 39B0                     u7635 4E92  
                   u9091 5CB0                     u7731 47E8                     u8371 45DE  
                   u8451 4924                     u9171 524A                     u9251 4DC0  
                   u9411 4376                     u9331 41FA                     u7571 5846  
                   u8620 3B40                     u8540 39F4                     u8700 34C0  
                   u9420 5C96                     u7740 484C                     u8380 460C  
                   u8460 4970                     u7900 5134                     u9180 5270  
                   u9500 3D00                     u9340 4220                     u7580 5880  
                   u7660 4F0C                     u8621 3B3C                     u8541 39F0  
                   u8701 34BC                     u9421 5C90                     u7741 4848  
                   u8381 4608                     u8461 496C                     u7901 5130  
                   u9181 526C                     u9501 3CFC                     u9341 421C  
                   u9325 41C6                     u7581 587C                     u7661 4F08  
                   u7910 2BC0                     u8630 3B6E                     u8550 3A6A  
                   u8470 38EC                     u8710 34D2                     u9430 5C98  
                   u7750 5A36                     u8390 464C                     u9190 52C6  
                   u9510 3D2E                     u9270 4DFE                     u7590 58B0  
                   u7670 4F26                     u7911 2BBC                     u8631 3B6A  
                   u8551 3A66                     u8471 38E8                     u8711 34CE  
                   u7655 4EA8                     u7751 5A32                     u8391 4648  
                   u9191 52C2                     u9511 3D2A                     u9271 4DF8  
                   u7591 58AC                     u7671 4F22                     u7920 2BD2  
                   u8640 3B84                     u8560 3A8C                     u8480 38FE  
                   u8800 377E                     u8720 34E2                     u9440 59DA  
                   u7760 5A54                     u9600 3EFE                     u9520 3D3C  
                   u9280 4E00                     u9360 428E                     u7680 4F66  
                   u7921 2BCE                     u8641 3B80                     u8561 3A88  
                   u8481 38FA                     u8801 377A                     u8721 34DE  
                   u9441 59D6                     u7761 5A50                     u9601 3EFA  
                   u9521 3D38                     u9265 4DD6                     u9361 428A  
                   u7681 4F62                     u7930 2BE2                     u8650 3B98  
                   u8570 3AB6                     u8490 390E                     u8810 3790  
                   u8730 3522                     u7770 5D6C                     u9450 5A08  
                   u9530 3E66                     u9370 42B2                     u9290 5902  
                   u9610 191C                     u7690 4FB6                     u7931 2BDE  
                   u8651 3B94                     u8571 3AB2                     u8491 390A  
                   u8811 378C                     u8731 351E                     u7771 5D68  
                   u9451 5A04                     u9531 3E62                     u9355 4234  
                   u9611 1918                     u7691 4FB2                     u7940 2C24  
                   u8660 3BB2                     u8580 3ADA                     u8820 37BE  
                   u8740 3534                     u9540 3E84                     u9460 3C9C  
                   u8900 51A8                     u9380 42CE                     u9356 423E  
                   u9700 1BD4                     u9620 196C                     u7941 2C20  
                   u8661 3BAE                     u8581 3AD6                     u8821 37BA  
                   u8741 3530                     u9541 3E80                     u9461 3C96  
                   u8901 51A4                     u9381 42CA                     u9357 424E  
                   u9701 1BD0                     u9621 1968                     u7950 2C3A  
                   u8670 3BFA                     u8590 3AF0                     u8830 37D4  
                   u8750 3544                     u7870 50C4                     u9550 3E9E  
                   u9470 3C9E                     u8910 51CE                     u9390 4322  
                   u9710 1C46                     u9630 197A                     u7951 2C36  
                   u8671 3BF6                     u8591 3AEC                     u8831 37D0  
                   u8751 3540                     u7871 50C0                     u9551 3E9A  
                   u8911 51CA                     u9375 42A8                     u9711 1C42  
                   u9631 1976                     u7960 2C4C                     u8680 3C2A  
                   u8840 37E8                     u8760 357A                     u7880 50D6  
                   u9560 3EB8                     u9480 3CB4                     u8920 51EC  
                   u9800 1D66                     u9720 1C6C                     u9640 198C  
                   u7961 2C48                     u8681 3C26                     u8841 37E4  
                   u8761 3576                     u7881 50D2                     u9561 3EB4  
                   u9481 3CB0                     u8921 51E8                     u9297 58F8  
                   u9801 1D62                     u9721 1C68                     u9641 1988  
                   u7970 2C5C                     u8690 3C58                     u8850 3802  
                   u8770 358A                     u7890 50FE                     u9570 3EC6  
                   u9490 3CE4                     u8930 5208                     u9810 1D74  
                   u9730 1C7E                     u9650 19D4                     u7971 2C58  
                   u8691 3C54                     u8851 37FE                     u8771 3586  
                   u7891 50FA                     u9571 3EC2                     u9491 3CE0  
                   u8931 5204                     u9395 4318                     u9811 1D70  
                   u9731 1C7A                     u9651 19D0                     u7980 2C98  
                   u8860 384A                     u8780 3704                     u9580 3ED8  
                   u8940 522E                     u9900 20B0                     u9820 1D8A  
                   u9740 1CA0                     u9660 1A02                     u7981 2C94  
                   u8861 3846                     u9581 3ED4                     u8941 522A  
                   u9901 20AC                     u9821 1D86                     u9741 1C9C  
                   u9661 19FE                     u7990 2CA6                     u8870 3878  
                   u8790 375E                     u9590 3EE6                     u8950 53CC  
                   u9910 20D8                     u9830 1D98                     u9750 1CC6  
                   u9670 1A8E                     u7991 2CA2                     u8871 3874  
                   u8791 375A                     u9591 3EE2                     u8951 53C8  
                   u9911 20D4                     u9831 1D94                     u9751 1CC2  
                   u9671 1A8A                     u8880 38B2                     u8960 53E6  
                   u9920 217A                     u9840 1DC2                     u9760 1CDC  
                   u9680 1ABC                     u8881 38AE                     u8785 36FA  
                   u8961 53E2                     u9921 2176                     u9841 1DBE  
                   u9761 1CD8                     u9681 1AB8                     u8890 518E  
                   u8970 5400                     u9930 218E                     u9850 1F0A  
                   u9770 1CF8                     u9690 1B40                     u8891 518A  
                   u8971 53FC                     u9931 218A                     u9851 1F06  
                   u9771 1CF4                     u9691 1B3C                     u8980 541E  
                   u9940 21A0                     u9860 1F70                     u9780 1D2E  
                   u8981 541A                     u9941 219C                     u9861 1F6C  
                   u9781 1D2A                     u8990 5434                     u9950 21AE  
                   u9870 1FB8                     u9790 1D54                     u8991 5430  
                   u9951 21AA                     u9871 1FB4                     u9791 1D50  
                   u9960 21CA                     u9880 1FC8                     u9961 21C6  
                   u9881 1FC4                     u9970 21D8                     u9890 2062  
                   u9971 21D4                     u9891 205E                     u9980 2230  
                   u9981 222C                     u9990 2302                     u9991 22FE  
                   _SPEN 007D5F                     _TX9D 007D60                     _TXEN 007D65  
                   _SYNC 007D64                     abs@a 0015                     _dbuf 013E  
                   _atof 5D6E                     _atoi 49B2                     _main 3066  
                   _dtoa 3C6C                     _nanf 5DBA                     _duty 019E  
                   _prec 00F7                     _nout 0132                     pad@i 001A  
                   pad@p 0017                     fsr0h 000FEA                     fsr1h 000FE2  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001C  
                   fsr2l 000FD9                     _suma 0124                     btemp 005D  
          ___fpclassifyf 4D14                     prodh 000FF4                     prodl 000FF3  
                   start 000E          ___fldiv@new_exp 0065             ___param_bank 000000  
__end_of_UART_Write_Text 5D6E                    ??_abs 0017                    ??_pad 0019  
          ___fltol@sign1 006D          __end_of___aodiv 46D8                    ?_atof 007E  
                  ?_atoi 000A          __end_of___fladd 3066                    ?_main 0001  
                  ?_dtoa 001E                    ?_nanf 0003          __end_of___aomod 49B2  
        __end_of___fldiv 3C6C          __end_of___awdiv 5240          __end_of___flneg 5CD6  
                  STR_12 0844                    STR_14 0844                    STR_22 0840  
                  STR_23 0838                    STR_25 0821                    STR_17 082B  
                  STR_18 0822          __end_of___awmod 546A          __end_of___flmul 38D0  
        __end_of___flsub 5AEA          __end_of___fltol 4C10                    u10000 231E  
                  u10001 231A                    u10010 2330          __end_of___lldiv 55B8  
                  u10011 232C                    u10100 4A1C                    u10020 233E  
                  u10101 4A18                    u10021 233A                    u10110 4AD0  
                  u10030 2374                    u10111 4ACC                    u10031 2370  
                  u11000 12F8                    u10120 4AE2                    u10040 23A2  
                  u10200 2602                    u11001 12F4                    u10121 4ADE  
                  u10041 239E                    u10201 25FE                    u11010 1336  
                  u10050 2426                    u10130 5006                    u10210 2628  
                  u11011 1332                    u10051 2422                    u10131 5002  
                  u10211 2624                    u11100 14AA                    u11020 1350  
                  u10060 2440                    u10140 5038                    u10300 28E0  
                  u10220 266E                    u11101 14A6                    u11021 134C  
                  u10061 243C                    u10141 5034                    u10301 28DC  
                  u10221 266A                    u11110 14F8                    u11030 135E  
                  u10070 2458                    u10150 5054                    u10310 2972  
                  u10230 26EA                    u11111 14F4                    u11031 135A  
                  u10071 2454                    u10151 5050                    u10311 296E  
                  u10231 26E6                    u11200 1748                    u11120 1562  
                  u11040 13CC                    u10400 0894                    u10080 24B4  
                  u10160 5066                    u10320 2A20                    u10240 270E  
                  u11201 1744                    u11121 155E                    u11041 13C8  
                  u10081 24B0                    u10161 5062                    u10321 2A1C  
                  u10241 270A                    u11210 1758                    u11130 15A2  
                  u11050 13FA                    u10410 08AC                    u10090 49E6  
                  u10170 508E                    u10330 2A86                    u10250 274A  
                  u11211 1754                    u11131 159E                    u11051 13F6  
                  u10411 08A8                    u10091 49E2                    u10171 508A  
                  u10331 2A82                    u10251 2746                    u11220 179A  
                  u11140 15C4                    u11060 1414                    u10500 09F2  
                  u10420 08EC                    u10340 2B22                    u10260 27F2  
                  u10180 2524                    u11300 3174                    u11221 1796  
                  u11141 15C0                    u11061 1410                    u10501 09EE  
                  u10421 08E8                    u10341 2B1E                    u10261 27EE  
                  u10181 2520                    u11301 3170                    u10350 5676  
                  u11230 17F2                    u11150 15D2                    u11070 1432  
                  u10510 0A3C                    u10430 0904                    u10270 2824  
                  u10190 25F4                    u11310 33C4                    u10351 5672  
                  u11231 17EE                    u11151 15CE                    u11071 142E  
                  u10511 0A38                    u10431 0900                    u10271 2820  
                  u10191 25F0                    u11311 33C0                    u10360 56A8  
                  u11240 1844                    u11160 163A                    u11080 1456  
                  u10600 0BD4                    u10520 0A6C                    u10440 0924  
                  u10280 2866                    u11320 33EA                    u10361 56A4  
                  u11241 1840                    u11161 1636                    u11081 1452  
                  u10601 0BD0                    u10521 0A68                    u10441 0920  
                  u10281 2862                    u11321 33E6                    u11250 1876  
                  u11170 165E                    u11090 1474                    u10610 0BE4  
                  u10530 0A9C                    u10450 094E                    u10290 28BC  
                  u10370 5714                    u11251 1872                    u11171 165A  
                  u11091 1470                    u10611 0BE0                    u10531 0A98  
                  u10451 094A                    u10291 28B8                    u10371 5710  
                  u11260 1886                    u11180 16C4                    u10700 0D86  
                  u10620 0C02                    u10540 0AAE                    u10460 097E  
                  u10380 085E          ___awdiv@divisor 0005                    u11261 1882  
                  u11181 16C0                    u10701 0D82                    u10621 0BFE  
                  u10541 0AAA                    u10461 097A                    u10381 085A  
                  u11270 18BE                    u11190 1716                    u10710 0DAE  
                  u10630 0C20                    u10550 0ADC                    u10470 09AE  
                  u10390 0892                    u11271 18BA                    u11191 1712  
                  u10631 0C1C                    u10551 0AD8                    u10471 09AA  
                  u10391 088C                    u10800 0F7C                    u10720 0E0C  
                  u10640 0C5E                    u10560 0B00                    u10480 09BE  
                  u10801 0F78                    u10721 0E08                    u10641 0C5A  
                  u10561 0AFC                    u10481 09BA                    u11337 3486  
                  u11281 30B8                    u10810 0F9A                    u10730 0E2A  
                  u10650 0C80                    u10570 0B26                    u10490 09E0  
                  u11290 30DC                    u10811 0F96                    u10731 0E26  
                  u10715 0DA4                    u10651 0C7C                    u10571 0B22  
                  u10491 09DC                    u11347 5A20                    u11291 30D8  
                  u10900 1136                    u10820 0FB8                    u10740 0E4C  
                  u10660 0C9E                    u10580 0B44                    u10901 1132  
                  u10821 0FB4                    u10741 0E48                    u10661 0C9A  
                  u10581 0B40                    u11357 5A40                    u10910 1168  
                  u10830 0FEC                    u10750 0E5E                    u10670 0CC0  
                  u10590 0B62                    u10911 1164                    u10831 0FE8  
                  u10751 0E5A                    u10671 0CBC                    u10591 0B5E  
                  u10920 11AE                    u10840 1010                    u10760 0E96  
                  u10680 0CF4                    u10921 11AA                    u10841 100C  
                  u10761 0E92                    u10681 0CF0                    u10930 11E0  
                  u10850 1044                    u10770 0ED4                    u10690 0D32  
                  u10931 11DC                    u10851 1040                    u10771 0ED0  
                  u10691 0D2E                    u10940 11FC                    u10860 1060  
                  u10780 0F28                    u10941 11F8                    u10861 105C  
                  u10781 0F24                    u10950 122A                    u10870 10E2  
                  u10790 0F50                    u10951 1226                    u10871 10DE  
                  u10960 1256                    u10880 10F2                    u10961 1252  
                  u10881 10EE                    u10890 1114                    u10891 1110  
                  u10795 0F46                    u10990 12DE                    u10991 12DA  
                  u10975 1272                    u10985 12AC                    i2l172 5E02  
                  i2l169 5DF2          ___awdiv@counter 0007                    _RCREG 000FAE  
                  _RCSTA 000FAB             vfpfcnvrt@fmt 00BD                    _SPBRG 000FAF  
                  _TXREG 000FAD                    _TXSTA 000FAC      ___lmul@multiplicand 0007  
            ?_PWM1_Start 0001                    _flags 005A                    _error 0128  
                  _letra 005C                    _fputc 50B2                    _fputs 5B2E  
        __end_of_isdigit 5C9E                    atof@s 007E                    atoi@n 0012  
                  pad@fp 0013                    atoi@s 000A                    _width 0134  
                  _putch 5E0E                    dtoa@d 0020                    dtoa@i 0040  
                  dtoa@n 0038                    dtoa@p 0032                    dtoa@s 0036  
                  dtoa@w 0034                    nanf@s 0003                    nanf@u 0007  
        __end_of_islower 5C66          __end_of_isspace 5A14          __end_of_isupper 5C2E  
                  tablat 000FF5                    plusw0 000FEB                    plusw2 000FDB  
                  ttemp5 005E                    ttemp6 0061                    ttemp7 0065  
                  status 000FD8                    wtemp8 005E          __end_of_sprintf 5970  
         ?___fpclassifyf 0003          __end_of_tolower 5AA4          __end_of_strcspn 58BA  
        __end_of_strncmp 50B2          __end_of_toupper 5BB6          __initialization 5788  
           __end_of_atof 5D94             __end_of_atoi 4B08             __end_of_main 34A6  
           __end_of_dtoa 3F4C             __end_of_nanf 5DDC                   ??_atof 0056  
                 ??_atoi 000C                   ??_main 00F5                   ??_dtoa 0028  
                 ??_nanf 0007            __activetblptr 000002                   _ADCON1 000FC1  
                 ?_fputc 0003                   ?_fputs 000C                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB         ___awdiv@dividend 0003                   ?_putch 0001  
                 i2l6120 55D6                   i2l6130 5624                   i2l6122 55E8  
                 i2l6132 5634                   i2l6124 55F6                   i2l6116 55C2  
                 i2l6126 560A                   i2l6118 55D0                   i2l6128 561C  
                 i2l5940 5DF2                   i2l5942 5E00            vfpfcnvrt@done 00CD  
       __end_of___xxtofl 4550             vfprintf@cfmt 00DD        __end_of_UART_Init 4EFA  
      __end_of_UART_Read 5E04                   ___flge 4C10                   ___fleq 546A  
      __end_of_PWM1_Init 4186                   ___name 0008            ??_Motor_Start 0003  
                 ___lmul 571E                ??___aodiv 0013                ??___fladd 001D  
              ??___aomod 0013                   ___wmul 5D94                ??___fldiv 004E  
              ??___awdiv 0007                ??___flneg 0007                ??___awmod 0007  
              ??___flmul 0035         ?_UART_Write_Text 0004                ??___flsub 002D  
              ??___fltol 0056                   _actual 0120                ??___lldiv 000B  
                 _efgtoa 18F4                   _floorf 4186                   _memset 46D8  
                 clear_0 57CE         ___awdiv@quotient 0009          ___awmod@divisor 0005  
                 isa$std 000001          ___awmod@counter 0007                   pad@buf 0015  
                 dtoa@fp 001E                   _strchr 5970                   _strcpy 58BA  
                 _strlen 5CD6                   _strtof 084C                   _strtok 4EFA  
                 _strspn 57EE         __end_of_isxdigit 56B4                   fputc@c 0003  
                 fputs@c 0010                   fputs@i 0011                   fputs@s 000C  
              ??_isdigit 0005          ___fpclassifyf@e 000B          ___fpclassifyf@u 000D  
        ___fpclassifyf@x 0003                ??_islower 0005             __mediumconst 0000  
              ??_isspace 0005                   tblptrh 000FF7                ??_isupper 0005  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 571E                ??_sprintf 005A                ??_tolower 000B  
              ??_strcspn 000B                ??_strncmp 0009                ??_toupper 000B  
             ___flge@ff1 0046               ___flge@ff2 004A          ??___fpclassifyf 0007  
           ___xxtofl@arg 0011             ___xxtofl@exp 0010             ___xxtofl@val 0007  
             ___fleq@ff1 0003               ___fleq@ff2 0007               __accesstop 0060  
__end_of__initialization 57E0               ___flneg@f1 0003            ___rparam_used 000001  
             ___fltol@f1 0052           __pcstackCOMRAM 0001    __end_of_PWM1_Set_Duty 53BA  
           __pidataBANK1 5AEA             __pidataBANK2 5D0C            __end_of_fputc 517C  
          __end_of_fputs 5B72            __end_of_putch 5E10      __end_of_Motor_Start 5E0A  
                ??_fputc 0007                  ??_fputs 0010                  ??_putch 0003  
             __pbssBANK0 00F7               __pbssBANK1 0100                  ?___flge 0046  
                ?___fleq 0003                  ?___name 0001                  ?___lmul 0003  
                ?___wmul 0003                  ?_efgtoa 007D                  ?_floorf 0052  
                ?_memset 0003           ___lmul@product 000B                  ?_strchr 0003  
                ?_strcpy 0003                  ?_strlen 0003                  ?_strtof 0052  
                ?_strtok 000E                  ?_strspn 0007                ?___xxtofl 0007  
           ??_PWM1_Start 0003                  __Hparam 0000                ?_isxdigit 0009  
                __Lparam 0000                  ___aodiv 4550                  ___fladd 2BA6  
                ___aomod 484E                  ___fldiv 38D0              _Motor_Start 5E04  
                ___awdiv 517C                  ___flneg 5C9E                  ___awmod 53BA  
                ___flmul 34A6                  ___flsub 5AA4                  ___fltol 4B08  
                ___lldiv 5514                ?_vfprintf 00D7       __end_of_PWM1_Start 5E0E  
           __psmallconst 0800                  __pcinit 5788                  __ramtop 0800  
                __ptext0 3066                  __ptext1 4EFA                  __ptext2 57EE  
                __ptext3 5854                  __ptext4 5970                  __ptext5 5916  
                __ptext6 56B4                  __ptext7 2500                  __ptext8 4FDC  
                __ptext9 18F4                _T2CONbits 000FCA                  _isdigit 5C66  
             ??___xxtofl 000B         ___awmod@dividend 0003                  _islower 5C2E  
                _isspace 59C2           main@uartConfig 01ED           _PWM1_Init$1878 0073  
                _isupper 5BF6                  efgtoa@c 0083                  efgtoa@d 009B  
                efgtoa@e 00B3                  efgtoa@f 007F                  efgtoa@g 00AF  
                efgtoa@h 00A5                  efgtoa@i 00AD                  efgtoa@l 00A9  
                efgtoa@m 0095                  efgtoa@n 00B5                  efgtoa@p 009F  
                efgtoa@t 008F                  efgtoa@u 00B7                  efgtoa@w 00A1  
                _strUART 0200                  atoi@neg 0010                  main@pch 01EB  
                _sprintf 5916                  _tolower 5A5E                  _strcspn 5854  
                _strncmp 4FDC           __pintcode_body 55B8                  _toupper 5B72  
   end_of_initialization 57E0                  floorf@e 0077                  floorf@m 0073  
                floorf@u 0079                  floorf@x 0052           PWM1_Init@prees 0077  
                fputc@fp 0005                  memset@c 0005                  memset@k 000B  
                memset@n 0007                  memset@s 000D            __Lmediumconst 0000  
                int_func 55B8                  fputs@fp 000E          ___lldiv@divisor 0007  
             ??_isxdigit 000B          ___lldiv@counter 000F        __end_of_vfpfcnvrt 2BA6  
             efgtoa@mode 00A4               efgtoa@sign 009D                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE            ??_getDistance 0005           _UART_Write_Chr 5DDC  
             ??_vfprintf 005A                  strchr@c 0005                  strchr@s 0003  
                strcpy@d 000B                  strlen@a 0005                  strcpy@s 0009  
                strlen@s 0003                _UART_Init 4E12                _UART_Read 5DF2  
              _PWM1_Init 3F4C                  strtof@i 007D                  strtof@s 0052  
                strspn@c 0009                  strspn@i 000C                  strtok@p 0130  
                strtok@s 000E                  strspn@s 0007                _PORTBbits 000F81  
              _PORTDbits 000F83              ___fladd@grs 0024            ___xxtofl@sign 000F  
              _TRISBbits 000F93                _TRISCbits 000F94                _TRISDbits 000F95  
            ___fldiv@grs 0067              ___fldiv@rem 0060              ___flmul@grs 003B  
            _CCP1CONbits 000FBD              _CCP2CONbits 000FBA                _TXSTAbits 000FAC  
   UART_Write_Chr@letter 0003   __end_of_UART_Write_Chr 5DF2           __end_of___flge 4D14  
         __end_of___fleq 5514           __end_of___name 5644           __end_of___lmul 5788  
            vfpfcnvrt@ap 00BF              vfpfcnvrt@ct 00D3              vfpfcnvrt@fp 00BB  
            vfpfcnvrt@ll 00C5           __end_of___wmul 5DBA               ?_UART_Init 0010  
             ?_UART_Read 0001           __end_of_efgtoa 2500               ?_PWM1_Init 006F  
         __end_of_floorf 439C               floorf@F526 0110           __end_of_memset 484E  
         __end_of_strchr 59C2      __end_of_getDistance 5A5E           __end_of_strcpy 5916  
         __end_of_strlen 5D0C             _indice_array 0136           __end_of_strtof 18F4  
         __end_of_strtok 4FDC           __end_of_strspn 5854      start_initialization 5788  
            __end_of_abs 5BF6              __end_of_pad 5302         getDistance@count 0005  
     UART_Init@spbrg_val 001C    __end_of___fpclassifyf 4E12              vfprintf@fmt 00D9  
        ?_UART_Write_Chr 0001                 ??___flge 004E                 ??___fleq 000B  
               ??___name 0001            _isxdigit$1571 000F                 ??___lmul 000B  
               ??___wmul 0007                 ??_efgtoa 0084              __pdataBANK1 018E  
            __pdataBANK2 0200                 ??_floorf 006D                 ??_memset 0009  
             memset@dest 0003                 ??_strchr 0007                 ??_strcpy 0007  
               ??_strlen 0005                 ??_strtof 006D                 ??_strtok 0012  
               ??_strspn 000B                ___fladd@a 0019                ___fladd@b 0015  
              ___fldiv@a 004A                ___fldiv@b 0046                ___flmul@a 0031  
              ___flmul@b 002D              __pbssCOMRAM 005A                ___flsub@a 0029  
              ___flsub@b 0025            __pcstackBANK0 0060            __pcstackBANK1 01D2  
       ___aodiv@dividend 0003              _efgtoa$1356 008B              _efgtoa$1357 008D  
            _efgtoa$1349 0089                _main$1875 01DF                _main$1876 01E3  
              _main$1877 01E7                _dtoa$1325 0030                __pintcode 0008  
               ?___aodiv 0003             ?_Motor_Start 0001                 ?___fladd 0015  
               ?___aomod 0003                 ?___fldiv 0046                 ?___awdiv 0003  
       ___aodiv@quotient 0015                 ?___flneg 0003                 ?___awmod 0003  
               ?___flmul 002D                 ?___flsub 0025                 ?___fltol 0052  
               ?___lldiv 0003                _reg10bits 0118              _getDistance 5A14  
            ??_UART_Init 0018              ??_UART_Read 0001              ??_PWM1_Init 0071  
              _distancia 012C          UART_Init@config 0010              __smallconst 0800  
               ?_isdigit 0003                 ?_islower 0003                 ?_isspace 0003  
               ?_isupper 0003                _errorAnte 011C                 ?_sprintf 00DF  
               ?_tolower 0009                 ?_strcspn 0007                 ?_strncmp 0003  
               ?_toupper 0009        ??_UART_Write_Text 0006           ___wmul@product 0007  
          PWM1_Init@freq 006F                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               i2u760_40 5E00                 i2u760_41 5DFC                 i2u780_40 560A  
               i2u780_41 5606                 i2u781_40 561C                 i2u781_41 5618  
               i2u778_40 55D0                 i2u778_41 55CC                 i2u779_40 55E8  
               i2u779_41 55E4            _PWM1_Set_Duty 5302              strtof@digit 0073  
            strtof@flags 0074              strtof@expon 0075                _vfpfcnvrt 2500  
      ___wmul@multiplier 0003             _isspace$1438 0009               vfpfcnvrt@c 00D6  
             vfpfcnvrt@f 00CF        ___lmul@multiplier 0003                copy_data0 579C  
              copy_data1 57BC                 __Hrparam 0000               vfprintf@ap 00DB  
               __Lrparam 0000               vfprintf@fp 00D7           ?_PWM1_Set_Duty 0001  
             ?_vfpfcnvrt 00BB          ___aodiv@divisor 000B            _flag_start_Rx 0138  
        ___aodiv@counter 0013       ___fpclassifyf@F465 0114               sprintf@fmt 00E1  
       _array_constantes 0100                 ___xxtofl 439C                 __ptext10 5A5E  
               __ptext11 5BF6                 __ptext20 5CD6                 __ptext12 58BA  
               __ptext21 5B2E                 __ptext13 4186                 __ptext30 5D6E  
               __ptext22 50B2                 __ptext14 4D14                 __ptext31 084C  
               __ptext23 5E0E                 __ptext15 5AA4                 __ptext40 5C9E  
               __ptext32 5B72                 __ptext24 5BB6                 __ptext16 53BA  
               __ptext41 4C10                 __ptext33 5C2E                 __ptext25 484E  
               __ptext17 517C                 __ptext50 439C                 __ptext42 546A  
               __ptext34 5DBA                 __ptext26 4550                 __ptext18 3C6C  
               __ptext51 4B08                 __ptext43 5D3E                 __ptext35 5644  
               __ptext27 49B2                 __ptext19 5240                 __ptext52 34A6  
               __ptext44 5DDC                 __ptext36 5C66                 __ptext28 46D8  
               __ptext53 38D0                 __ptext45 4E12                 __ptext37 59C2  
               __ptext29 5A14                 __ptext54 2BA6                 __ptext46 5514  
               __ptext38 5D94                 __ptext55 5E04                 __ptext47 5E0A  
               __ptext39 571E                 __ptext48 5302                 __ptext57 5DF2  
               __ptext49 3F4C                 _bufferRx 01A0                isxdigit@c 0009  
             strcpy@dest 0003                 _indiceRx 013C      UART_Write_Text@text 0004  
       ??_UART_Write_Chr 0003                 _isxdigit 5644                 efgtoa@fp 007D  
               efgtoa@ne 0093                 efgtoa@pp 0091                 efgtoa@ou 0097  
               isa$xinst 000000               strtof@eexp 0077                 int$flags 005D  
               _vfprintf 56B4         ___aomod@dividend 0003               _INTCONbits 000FF2  
               isdigit@c 0003                 intlevel2 0000                sprintf@ap 01D2  
               islower@c 0003                 isspace@c 0003         ___lldiv@dividend 0003  
              strcpy@src 0005                 isupper@c 0003                strncmp@_l 0003  
              strncmp@_r 0005          ??_PWM1_Set_Duty 005A                strtof@res 0054  
            efgtoa@nmode 00A3                strtok@sep 0010             ?_getDistance 0003  
        ___aomod@divisor 000B              ??_vfpfcnvrt 00C1          ___aomod@counter 0013  
        _UART_Write_Text 5D3E                 sprintf@f 01D4                 tolower@c 0009  
               sprintf@s 00DF         ___lldiv@quotient 000B                 strcspn@c 0009  
               strcspn@i 000C                 strcspn@s 0007                 strncmp@l 000A  
               strncmp@n 0007                 strncmp@r 000C                 toupper@c 0009  
               strtof@_u 0079               _PWM1_Start 5E0A            ___fladd@signs 0021  
           ___aodiv@sign 0014             ___fladd@aexp 0022             ___fladd@bexp 0023  
      _flag_Rx_completed 013A             ___aomod@sign 0014  
