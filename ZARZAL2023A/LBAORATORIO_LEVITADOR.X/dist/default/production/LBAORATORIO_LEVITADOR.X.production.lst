

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 26 11:59:38 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.40
    61                           ; Generated 17/11/2021 GMT
    62                           ; 
    63                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  003E34                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _duty
   101  003E34  46                 	db	70
   102                           
   103                           	psect	idataBANK1
   104  003C9C                     __pidataBANK1:
   105                           	callstack 0
   106                           
   107                           ;initializer for _ref
   108  003C9C  0000               	dw	0
   109  003C9E  42A0               	dw	17056
   110                           
   111                           ;initializer for _Ki
   112  003CA0  CCCD               	dw	52429
   113  003CA2  3DCC               	dw	15820
   114                           
   115                           ;initializer for _Kd
   116  003CA4  CCCD               	dw	52429
   117  003CA6  3ECC               	dw	16076
   118                           
   119                           ;initializer for _Kp
   120  003CA8  0000               	dw	0
   121  003CAA  3F00               	dw	16128
   122                           
   123                           ;initializer for _strUART
   124  003CAC  20                 	db	32
   125  003CAD  00                 	db	0
   126  003CAE  00                 	db	0
   127  003CAF  00                 	db	0
   128  003CB0  00                 	db	0
   129  003CB1  00                 	db	0
   130  003CB2  00                 	db	0
   131  003CB3  00                 	db	0
   132  003CB4  00                 	db	0
   133  003CB5  00                 	db	0
   134  003CB6  00                 	db	0
   135  003CB7  00                 	db	0
   136  003CB8  00                 	db	0
   137  003CB9  00                 	db	0
   138  003CBA  00                 	db	0
   139  003CBB  00                 	db	0
   140  003CBC  00                 	db	0
   141  003CBD  00                 	db	0
   142  003CBE  00                 	db	0
   143  003CBF  00                 	db	0
   144  003CC0  00                 	db	0
   145  003CC1  00                 	db	0
   146  003CC2  00                 	db	0
   147  003CC3  00                 	db	0
   148  003CC4  00                 	db	0
   149  003CC5  00                 	db	0
   150  003CC6  00                 	db	0
   151  003CC7  00                 	db	0
   152  003CC8  00                 	db	0
   153  003CC9  00                 	db	0
   154  003CCA  00                 	db	0
   155  003CCB  00                 	db	0
   156  003CCC  00                 	db	0
   157  003CCD  00                 	db	0
   158  003CCE  00                 	db	0
   159  003CCF  00                 	db	0
   160  003CD0  00                 	db	0
   161  003CD1  00                 	db	0
   162  003CD2  00                 	db	0
   163  003CD3  00                 	db	0
   164  003CD4  00                 	db	0
   165  003CD5  00                 	db	0
   166  003CD6  00                 	db	0
   167  003CD7  00                 	db	0
   168  003CD8  00                 	db	0
   169  003CD9  00                 	db	0
   170  003CDA  00                 	db	0
   171  003CDB  00                 	db	0
   172  003CDC  00                 	db	0
   173  003CDD  00                 	db	0
   174  0000                     _TRISCbits	set	3988
   175  0000                     _RCREG	set	4014
   176  0000                     _TXREG	set	4013
   177  0000                     _TRISDbits	set	3989
   178  0000                     _TXSTAbits	set	4012
   179  0000                     _TX9D	set	32096
   180  0000                     _BRGH	set	32098
   181  0000                     _SPEN	set	32095
   182  0000                     _SYNC	set	32100
   183  0000                     _TXEN	set	32101
   184  0000                     _RX9	set	32094
   185  0000                     _TX9	set	32102
   186  0000                     _PORTBbits	set	3969
   187  0000                     _TRISBbits	set	3987
   188  0000                     _ADCON1	set	4033
   189  0000                     _T2CONbits	set	4042
   190  0000                     _PIR1bits	set	3998
   191  0000                     _RCSTA	set	4011
   192  0000                     _TXSTA	set	4012
   193  0000                     _SPBRG	set	4015
   194  0000                     _PORTDbits	set	3971
   195  0000                     _CCP2CONbits	set	4026
   196  0000                     _CCPR2L	set	4027
   197  0000                     _CCP1CONbits	set	4029
   198  0000                     _CCPR1L	set	4030
   199  0000                     _PR2	set	4043
   200                           
   201                           	psect	smallconst
   202  000800                     __psmallconst:
   203                           	callstack 0
   204  000800  00                 	db	0
   205  000801                     STR_1:
   206  000801  64                 	db	100	;'d'
   207  000802  69                 	db	105	;'i'
   208  000803  73                 	db	115	;'s'
   209  000804  74                 	db	116	;'t'
   210  000805  61                 	db	97	;'a'
   211  000806  6E                 	db	110	;'n'
   212  000807  63                 	db	99	;'c'
   213  000808  69                 	db	105	;'i'
   214  000809  61                 	db	97	;'a'
   215  00080A  3A                 	db	58	;':'
   216  00080B  20                 	db	32
   217  00080C  25                 	db	37
   218  00080D  30                 	db	48	;'0'
   219  00080E  2E                 	db	46
   220  00080F  31                 	db	49	;'1'
   221  000810  66                 	db	102	;'f'
   222  000811  0D                 	db	13
   223  000812  0A                 	db	10
   224  000813  00                 	db	0
   225  000814                     STR_2:
   226  000814  49                 	db	73	;'I'
   227  000815  4E                 	db	78	;'N'
   228  000816  46                 	db	70	;'F'
   229  000817  00                 	db	0
   230  000818                     STR_6:
   231  000818  4E                 	db	78	;'N'
   232  000819  41                 	db	65	;'A'
   233  00081A  4E                 	db	78	;'N'
   234  00081B  00                 	db	0
   235  00081C                     STR_3:
   236  00081C  69                 	db	105	;'i'
   237  00081D  6E                 	db	110	;'n'
   238  00081E  66                 	db	102	;'f'
   239  00081F  00                 	db	0
   240  000820                     STR_7:
   241  000820  6E                 	db	110	;'n'
   242  000821  61                 	db	97	;'a'
   243  000822  6E                 	db	110	;'n'
   244  000823  00                 	db	0
   245  000824                     STR_10:
   246  000824  6C                 	db	108	;'l'
   247  000825  66                 	db	102	;'f'
   248  000826  00                 	db	0
   249  000827  00                 	db	0	; dummy byte at the end
   250  0000                     
   251                           ; #config settings
   252                           
   253                           	psect	cinit
   254  003A88                     __pcinit:
   255                           	callstack 0
   256  003A88                     start_initialization:
   257                           	callstack 0
   258  003A88                     __initialization:
   259                           	callstack 0
   260                           
   261                           ; Initialize objects allocated to BANK1 (66 bytes)
   262                           ; load TBLPTR registers with __pidataBANK1
   263  003A88  0E9C               	movlw	low __pidataBANK1
   264  003A8A  6EF6               	movwf	tblptrl,c
   265  003A8C  0E3C               	movlw	high __pidataBANK1
   266  003A8E  6EF7               	movwf	tblptrh,c
   267  003A90  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   268  003A92  6EF8               	movwf	tblptru,c
   269  003A94  EE01  F072         	lfsr	0,__pdataBANK1
   270  003A98  EE10 F042          	lfsr	1,66
   271  003A9C                     copy_data0:
   272  003A9C  0009               	tblrd		*+
   273  003A9E  CFF5 FFEE          	movff	tablat,postinc0
   274  003AA2  50E5               	movf	postdec1,w,c
   275  003AA4  50E1               	movf	fsr1l,w,c
   276  003AA6  E1FA               	bnz	copy_data0
   277                           
   278                           ; Initialize objects allocated to BANK0 (1 bytes)
   279                           ; load TBLPTR registers with __pidataBANK0
   280  003AA8  0E34               	movlw	low __pidataBANK0
   281  003AAA  6EF6               	movwf	tblptrl,c
   282  003AAC  0E3E               	movlw	high __pidataBANK0
   283  003AAE  6EF7               	movwf	tblptrh,c
   284  003AB0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   285  003AB2  6EF8               	movwf	tblptru,c
   286  003AB4  0009               	tblrd		*+	;fetch initializer
   287  003AB6  CFF5 F0FF          	movff	tablat,__pdataBANK0
   288                           
   289                           ; Clear objects allocated to BANK1 (114 bytes)
   290  003ABA  EE01  F000         	lfsr	0,__pbssBANK1
   291  003ABE  0E72               	movlw	114
   292  003AC0                     clear_0:
   293  003AC0  6AEE               	clrf	postinc0,c
   294  003AC2  06E8               	decf	wreg,f,c
   295  003AC4  E1FD               	bnz	clear_0
   296                           
   297                           ; Clear objects allocated to BANK0 (6 bytes)
   298  003AC6  0100               	movlb	0
   299  003AC8  6BFE               	clrf	(__pbssBANK0+5)& (0+255),b
   300  003ACA  6BFD               	clrf	(__pbssBANK0+4)& (0+255),b
   301  003ACC  6BFC               	clrf	(__pbssBANK0+3)& (0+255),b
   302  003ACE  6BFB               	clrf	(__pbssBANK0+2)& (0+255),b
   303  003AD0  6BFA               	clrf	(__pbssBANK0+1)& (0+255),b
   304  003AD2  6BF9               	clrf	__pbssBANK0& (0+255),b
   305  003AD4                     end_of_initialization:
   306                           	callstack 0
   307  003AD4                     __end_of__initialization:
   308                           	callstack 0
   309  003AD4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   310  003AD6  6EF8               	movwf	tblptru,c
   311  003AD8  0100               	movlb	0
   312  003ADA  EFD5  F012         	goto	_main	;jump to C main() function
   313                           
   314                           	psect	bssBANK0
   315  0000F9                     __pbssBANK0:
   316                           	callstack 0
   317  0000F9                     _width:
   318                           	callstack 0
   319  0000F9                     	ds	2
   320  0000FB                     _prec:
   321                           	callstack 0
   322  0000FB                     	ds	2
   323  0000FD                     _flags:
   324                           	callstack 0
   325  0000FD                     	ds	2
   326                           
   327                           	psect	dataBANK0
   328  0000FF                     __pdataBANK0:
   329                           	callstack 0
   330  0000FF                     _duty:
   331                           	callstack 0
   332  0000FF                     	ds	1
   333                           
   334                           	psect	bssBANK1
   335  000100                     __pbssBANK1:
   336                           	callstack 0
   337  000100                     floorf@F526:
   338                           	callstack 0
   339  000100                     	ds	4
   340  000104                     ___fpclassifyf@F465:
   341                           	callstack 0
   342  000104                     	ds	4
   343  000108                     _reg10bits:
   344                           	callstack 0
   345  000108                     	ds	4
   346  00010C                     _errorAnte:
   347                           	callstack 0
   348  00010C                     	ds	4
   349  000110                     _actual:
   350                           	callstack 0
   351  000110                     	ds	4
   352  000114                     _suma:
   353                           	callstack 0
   354  000114                     	ds	4
   355  000118                     _error:
   356                           	callstack 0
   357  000118                     	ds	4
   358  00011C                     _distancia:
   359                           	callstack 0
   360  00011C                     	ds	4
   361  000120                     _nout:
   362                           	callstack 0
   363  000120                     	ds	2
   364  000122                     _dbuf:
   365                           	callstack 0
   366  000122                     	ds	80
   367                           
   368                           	psect	dataBANK1
   369  000172                     __pdataBANK1:
   370                           	callstack 0
   371  000172                     _ref:
   372                           	callstack 0
   373  000172                     	ds	4
   374  000176                     _Ki:
   375                           	callstack 0
   376  000176                     	ds	4
   377  00017A                     _Kd:
   378                           	callstack 0
   379  00017A                     	ds	4
   380  00017E                     _Kp:
   381                           	callstack 0
   382  00017E                     	ds	4
   383  000182                     _strUART:
   384                           	callstack 0
   385  000182                     	ds	50
   386                           
   387                           	psect	cstackBANK0
   388  000060                     __pcstackBANK0:
   389                           	callstack 0
   390  000060                     ?_floorf:
   391                           	callstack 0
   392  000060                     ?___fltol:
   393                           	callstack 0
   394  000060                     ___fltol@f1:
   395                           	callstack 0
   396  000060                     floorf@x:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x0
   400  000060                     	ds	4
   401  000064                     ??_floorf:
   402  000064                     ??___fltol:
   403                           
   404                           ; 1 bytes @ 0x4
   405  000064                     	ds	4
   406  000068                     PWM1_Set_Duty@duty:
   407                           	callstack 0
   408  000068                     PWM1_Init@freq:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x8
   412  000068                     	ds	1
   413  000069                     PWM1_Set_Duty@val:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x9
   417  000069                     	ds	1
   418  00006A                     ??_PWM1_Init:
   419  00006A                     floorf@m:
   420                           	callstack 0
   421                           
   422                           ; 4 bytes @ 0xA
   423  00006A                     	ds	2
   424  00006C                     _PWM1_Init$1544:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0xC
   428  00006C                     	ds	2
   429  00006E                     floorf@e:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0xE
   433  00006E                     	ds	2
   434  000070                     PWM1_Init@prees:
   435                           	callstack 0
   436  000070                     floorf@u:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x10
   440  000070                     	ds	4
   441  000074                     ?_efgtoa:
   442                           	callstack 0
   443  000074                     efgtoa@fp:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x14
   447  000074                     	ds	2
   448  000076                     efgtoa@f:
   449                           	callstack 0
   450                           
   451                           ; 4 bytes @ 0x16
   452  000076                     	ds	4
   453  00007A                     efgtoa@c:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x1A
   457  00007A                     	ds	1
   458  00007B                     ??_efgtoa:
   459                           
   460                           ; 1 bytes @ 0x1B
   461  00007B                     	ds	5
   462  000080                     _efgtoa$1169:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x20
   466  000080                     	ds	2
   467  000082                     _efgtoa$1177:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x22
   471  000082                     	ds	2
   472  000084                     _efgtoa$1178:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x24
   476  000084                     	ds	2
   477  000086                     efgtoa@t:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x26
   481  000086                     	ds	2
   482  000088                     efgtoa@pp:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x28
   486  000088                     	ds	2
   487  00008A                     efgtoa@ne:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x2A
   491  00008A                     	ds	2
   492  00008C                     efgtoa@m:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x2C
   496  00008C                     	ds	2
   497  00008E                     efgtoa@ou:
   498                           	callstack 0
   499                           
   500                           ; 4 bytes @ 0x2E
   501  00008E                     	ds	4
   502  000092                     efgtoa@d:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x32
   506  000092                     	ds	2
   507  000094                     efgtoa@sign:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x34
   511  000094                     	ds	2
   512  000096                     efgtoa@p:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x36
   516  000096                     	ds	2
   517  000098                     efgtoa@w:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x38
   521  000098                     	ds	2
   522  00009A                     efgtoa@nmode:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x3A
   526  00009A                     	ds	1
   527  00009B                     efgtoa@mode:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x3B
   531  00009B                     	ds	1
   532  00009C                     efgtoa@h:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x3C
   536  00009C                     	ds	4
   537  0000A0                     efgtoa@l:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x40
   541  0000A0                     	ds	4
   542  0000A4                     efgtoa@i:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x44
   546  0000A4                     	ds	2
   547  0000A6                     efgtoa@g:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x46
   551  0000A6                     	ds	4
   552  0000AA                     efgtoa@e:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x4A
   556  0000AA                     	ds	2
   557  0000AC                     efgtoa@n:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x4C
   561  0000AC                     	ds	2
   562  0000AE                     efgtoa@u:
   563                           	callstack 0
   564                           
   565                           ; 4 bytes @ 0x4E
   566  0000AE                     	ds	4
   567  0000B2                     ?_vfpfcnvrt:
   568                           	callstack 0
   569  0000B2                     vfpfcnvrt@fp:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x52
   573  0000B2                     	ds	2
   574  0000B4                     vfpfcnvrt@fmt:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x54
   578  0000B4                     	ds	2
   579  0000B6                     vfpfcnvrt@ap:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x56
   583  0000B6                     	ds	2
   584  0000B8                     ??_vfpfcnvrt:
   585                           
   586                           ; 1 bytes @ 0x58
   587  0000B8                     	ds	4
   588  0000BC                     vfpfcnvrt@done:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x5C
   592  0000BC                     	ds	2
   593  0000BE                     vfpfcnvrt@f:
   594                           	callstack 0
   595                           
   596                           ; 4 bytes @ 0x5E
   597  0000BE                     	ds	4
   598  0000C2                     vfpfcnvrt@ct:
   599                           	callstack 0
   600                           
   601                           ; 3 bytes @ 0x62
   602  0000C2                     	ds	3
   603  0000C5                     vfpfcnvrt@c:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x65
   607  0000C5                     	ds	1
   608  0000C6                     ?_vfprintf:
   609                           	callstack 0
   610  0000C6                     vfprintf@fp:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x66
   614  0000C6                     	ds	2
   615  0000C8                     vfprintf@fmt:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x68
   619  0000C8                     	ds	2
   620  0000CA                     vfprintf@ap:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x6A
   624  0000CA                     	ds	2
   625  0000CC                     vfprintf@cfmt:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x6C
   629  0000CC                     	ds	2
   630  0000CE                     ?_sprintf:
   631                           	callstack 0
   632  0000CE                     sprintf@s:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x6E
   636  0000CE                     	ds	2
   637  0000D0                     sprintf@fmt:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x70
   641  0000D0                     	ds	6
   642  0000D6                     sprintf@ap:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x76
   646  0000D6                     	ds	2
   647  0000D8                     sprintf@f:
   648                           	callstack 0
   649                           
   650                           ; 11 bytes @ 0x78
   651  0000D8                     	ds	11
   652  0000E3                     ??_main:
   653                           
   654                           ; 1 bytes @ 0x83
   655  0000E3                     	ds	2
   656  0000E5                     _main$1541:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x85
   660  0000E5                     	ds	4
   661  0000E9                     _main$1542:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x89
   665  0000E9                     	ds	4
   666  0000ED                     _main$1543:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x8D
   670  0000ED                     	ds	4
   671  0000F1                     main@uartConfig:
   672                           	callstack 0
   673                           
   674                           ; 8 bytes @ 0x91
   675  0000F1                     	ds	8
   676                           
   677                           	psect	cstackCOMRAM
   678  000001                     __pcstackCOMRAM:
   679                           	callstack 0
   680  000001                     ?_getDistance:
   681                           	callstack 0
   682  000001                     ?_strlen:
   683                           	callstack 0
   684  000001                     ?___fpclassifyf:
   685                           	callstack 0
   686  000001                     ?_isupper:
   687                           	callstack 0
   688  000001                     ?_isdigit:
   689                           	callstack 0
   690  000001                     ?_strncmp:
   691                           	callstack 0
   692  000001                     ?_isspace:
   693                           	callstack 0
   694  000001                     ?___wmul:
   695                           	callstack 0
   696  000001                     ?___awdiv:
   697                           	callstack 0
   698  000001                     ?___awmod:
   699                           	callstack 0
   700  000001                     ?___lldiv:
   701                           	callstack 0
   702  000001                     ?___flneg:
   703                           	callstack 0
   704  000001                     UART_Write_Chr@letter:
   705                           	callstack 0
   706  000001                     ___wmul@multiplier:
   707                           	callstack 0
   708  000001                     ___awdiv@dividend:
   709                           	callstack 0
   710  000001                     ___awmod@dividend:
   711                           	callstack 0
   712  000001                     isdigit@c:
   713                           	callstack 0
   714  000001                     isspace@c:
   715                           	callstack 0
   716  000001                     isupper@c:
   717                           	callstack 0
   718  000001                     fputc@c:
   719                           	callstack 0
   720  000001                     strcpy@dest:
   721                           	callstack 0
   722  000001                     strlen@s:
   723                           	callstack 0
   724  000001                     strncmp@_l:
   725                           	callstack 0
   726  000001                     ___lldiv@dividend:
   727                           	callstack 0
   728  000001                     ___fleq@ff1:
   729                           	callstack 0
   730  000001                     ___flneg@f1:
   731                           	callstack 0
   732  000001                     ___fpclassifyf@x:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x0
   736  000001                     	ds	1
   737  000002                     UART_Write_Text@text:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x1
   741  000002                     	ds	1
   742  000003                     ??_isupper:
   743  000003                     ??_isdigit:
   744  000003                     ??_isspace:
   745  000003                     getDistance@count:
   746                           	callstack 0
   747  000003                     ___wmul@multiplicand:
   748                           	callstack 0
   749  000003                     ___awdiv@divisor:
   750                           	callstack 0
   751  000003                     ___awmod@divisor:
   752                           	callstack 0
   753  000003                     fputc@fp:
   754                           	callstack 0
   755  000003                     strcpy@src:
   756                           	callstack 0
   757  000003                     strlen@a:
   758                           	callstack 0
   759  000003                     strncmp@_r:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x2
   763  000003                     	ds	1
   764  000004                     
   765                           ; 1 bytes @ 0x3
   766  000004                     	ds	1
   767  000005                     ??_fputc:
   768  000005                     ??___fpclassifyf:
   769  000005                     ??_strcpy:
   770  000005                     ?___xxtofl:
   771                           	callstack 0
   772  000005                     ___awdiv@counter:
   773                           	callstack 0
   774  000005                     ___awmod@counter:
   775                           	callstack 0
   776  000005                     ___wmul@product:
   777                           	callstack 0
   778  000005                     strncmp@n:
   779                           	callstack 0
   780  000005                     ___lldiv@divisor:
   781                           	callstack 0
   782  000005                     ___fleq@ff2:
   783                           	callstack 0
   784  000005                     ___xxtofl@val:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x4
   788  000005                     	ds	1
   789  000006                     ___awdiv@sign:
   790                           	callstack 0
   791  000006                     ___awmod@sign:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x5
   795  000006                     	ds	1
   796  000007                     ??_strncmp:
   797  000007                     ?_tolower:
   798                           	callstack 0
   799  000007                     _isspace$1256:
   800                           	callstack 0
   801  000007                     ___awdiv@quotient:
   802                           	callstack 0
   803  000007                     strcpy@s:
   804                           	callstack 0
   805  000007                     tolower@c:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x6
   809  000007                     	ds	1
   810  000008                     ?_atoi:
   811                           	callstack 0
   812  000008                     atoi@s:
   813                           	callstack 0
   814  000008                     strncmp@l:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x7
   818  000008                     	ds	1
   819  000009                     ??_tolower:
   820  000009                     ??___fleq:
   821  000009                     ??___xxtofl:
   822  000009                     ___fpclassifyf@e:
   823                           	callstack 0
   824  000009                     strcpy@d:
   825                           	callstack 0
   826  000009                     ___lldiv@quotient:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x8
   830  000009                     	ds	1
   831  00000A                     ??_atoi:
   832  00000A                     fputs@s:
   833                           	callstack 0
   834  00000A                     strncmp@r:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x9
   838  00000A                     	ds	1
   839  00000B                     ___fpclassifyf@u:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0xA
   843  00000B                     	ds	1
   844  00000C                     fputs@fp:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0xB
   848  00000C                     	ds	1
   849  00000D                     ___lldiv@counter:
   850                           	callstack 0
   851  00000D                     ___xxtofl@sign:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0xC
   855  00000D                     	ds	1
   856  00000E                     ___xxtofl@exp:
   857                           	callstack 0
   858  00000E                     fputs@c:
   859                           	callstack 0
   860  00000E                     atoi@neg:
   861                           	callstack 0
   862  00000E                     UART_Init@config:
   863                           	callstack 0
   864                           
   865                           ; 8 bytes @ 0xD
   866  00000E                     	ds	1
   867  00000F                     fputs@i:
   868                           	callstack 0
   869  00000F                     ___xxtofl@arg:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0xE
   873  00000F                     	ds	1
   874  000010                     atoi@n:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0xF
   878  000010                     	ds	1
   879  000011                     ?_pad:
   880                           	callstack 0
   881  000011                     pad@fp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x10
   885  000011                     	ds	2
   886  000013                     ?___fladd:
   887                           	callstack 0
   888  000013                     pad@buf:
   889                           	callstack 0
   890  000013                     ___fladd@b:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x12
   894  000013                     	ds	2
   895  000015                     pad@p:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x14
   899  000015                     	ds	1
   900  000016                     ??_UART_Init:
   901                           
   902                           ; 1 bytes @ 0x15
   903  000016                     	ds	1
   904  000017                     ??_pad:
   905  000017                     ___fladd@a:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x16
   909  000017                     	ds	1
   910  000018                     pad@i:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x17
   914  000018                     	ds	2
   915  00001A                     pad@w:
   916                           	callstack 0
   917  00001A                     UART_Init@spbrg_val:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0x19
   921  00001A                     	ds	1
   922  00001B                     ??___fladd:
   923                           
   924                           ; 1 bytes @ 0x1A
   925  00001B                     	ds	4
   926  00001F                     ___fladd@signs:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x1E
   930  00001F                     	ds	1
   931  000020                     ___fladd@aexp:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x1F
   935  000020                     	ds	1
   936  000021                     ___fladd@bexp:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x20
   940  000021                     	ds	1
   941  000022                     ___fladd@grs:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x21
   945  000022                     	ds	1
   946  000023                     ?___flsub:
   947                           	callstack 0
   948  000023                     ___flsub@b:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x22
   952  000023                     	ds	4
   953  000027                     ___flsub@a:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x26
   957  000027                     	ds	4
   958  00002B                     ?___flmul:
   959                           	callstack 0
   960  00002B                     ___flmul@b:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x2A
   964  00002B                     	ds	4
   965  00002F                     ___flmul@a:
   966                           	callstack 0
   967                           
   968                           ; 4 bytes @ 0x2E
   969  00002F                     	ds	4
   970  000033                     ??___flmul:
   971                           
   972                           ; 1 bytes @ 0x32
   973  000033                     	ds	4
   974  000037                     ___flmul@sign:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x36
   978  000037                     	ds	1
   979  000038                     ___flmul@grs:
   980                           	callstack 0
   981                           
   982                           ; 4 bytes @ 0x37
   983  000038                     	ds	4
   984  00003C                     ___flmul@aexp:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x3B
   988  00003C                     	ds	1
   989  00003D                     ___flmul@bexp:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x3C
   993  00003D                     	ds	1
   994  00003E                     ___flmul@prod:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0x3D
   998  00003E                     	ds	4
   999  000042                     ___flmul@temp:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x41
  1003  000042                     	ds	2
  1004  000044                     ?___fldiv:
  1005                           	callstack 0
  1006  000044                     ___flge@ff1:
  1007                           	callstack 0
  1008  000044                     ___fldiv@b:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x43
  1012  000044                     	ds	4
  1013  000048                     ___flge@ff2:
  1014                           	callstack 0
  1015  000048                     ___fldiv@a:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x47
  1019  000048                     	ds	4
  1020  00004C                     ??___fldiv:
  1021  00004C                     ??___flge:
  1022                           
  1023                           ; 1 bytes @ 0x4B
  1024  00004C                     	ds	4
  1025  000050                     ___fldiv@rem:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x4F
  1029  000050                     	ds	4
  1030  000054                     ___fldiv@sign:
  1031                           	callstack 0
  1032                           
  1033                           ; 1 bytes @ 0x53
  1034  000054                     	ds	1
  1035  000055                     ___fldiv@new_exp:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x54
  1039  000055                     	ds	2
  1040  000057                     ___fldiv@grs:
  1041                           	callstack 0
  1042                           
  1043                           ; 4 bytes @ 0x56
  1044  000057                     	ds	4
  1045  00005B                     ___fldiv@bexp:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x5A
  1049  00005B                     	ds	1
  1050  00005C                     ___fldiv@aexp:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x5B
  1054  00005C                     	ds	1
  1055  00005D                     ___fltol@sign1:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x5C
  1059  00005D                     	ds	1
  1060  00005E                     ___fltol@exp1:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x5D
  1064  00005E                     	ds	1
  1065  00005F                     
  1066                           ; 1 bytes @ 0x5E
  1067 ;;
  1068 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1069 ;;
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 33 in file "main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  uartConfig      8  145[BANK0 ] struct .
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1086 ;;      Params:         0       0       0       0       0       0       0       0       0
  1087 ;;      Locals:         0      20       0       0       0       0       0       0       0
  1088 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1089 ;;      Totals:         0      22       0       0       0       0       0       0       0
  1090 ;;Total ram usage:       22 bytes
  1091 ;; Hardware stack levels required when called: 8
  1092 ;; This function calls:
  1093 ;;		_Motor_Start
  1094 ;;		_PWM1_Init
  1095 ;;		_PWM1_Set_Duty
  1096 ;;		_PWM1_Start
  1097 ;;		_UART_Init
  1098 ;;		_UART_Write_Text
  1099 ;;		___fladd
  1100 ;;		___flge
  1101 ;;		___flmul
  1102 ;;		___flsub
  1103 ;;		___fltol
  1104 ;;		___xxtofl
  1105 ;;		_getDistance
  1106 ;;		_sprintf
  1107 ;; This function is called by:
  1108 ;;		Startup code after reset
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text0
  1113  0025AA                     __ptext0:
  1114                           	callstack 0
  1115  0025AA                     _main:
  1116                           	callstack 23
  1117  0025AA                     
  1118                           ;main.c: 34:     ADCON1 = 0x0F;
  1119  0025AA  0E0F               	movlw	15
  1120  0025AC  6EC1               	movwf	193,c	;volatile
  1121  0025AE                     
  1122                           ;main.c: 36:     TRISBbits.TRISB0 = 0;
  1123  0025AE  9093               	bcf	147,0,c	;volatile
  1124  0025B0                     
  1125                           ;main.c: 37:     TRISBbits.TRISB1 = 1;
  1126  0025B0  8293               	bsf	147,1,c	;volatile
  1127  0025B2                     
  1128                           ;main.c: 39:     TRISDbits.TRISD0 = 0;
  1129  0025B2  9095               	bcf	149,0,c	;volatile
  1130  0025B4                     
  1131                           ;main.c: 40:     TRISDbits.TRISD1 = 0;
  1132  0025B4  9295               	bcf	149,1,c	;volatile
  1133  0025B6                     
  1134                           ;main.c: 42:     PWM1_Init(2000);
  1135  0025B6  0E07               	movlw	7
  1136  0025B8  0100               	movlb	0	; () banked
  1137  0025BA  6F69               	movwf	(PWM1_Init@freq+1)& (0+255),b
  1138  0025BC  0ED0               	movlw	208
  1139  0025BE  6F68               	movwf	PWM1_Init@freq& (0+255),b
  1140  0025C0  EC46  F014         	call	_PWM1_Init	;wreg free
  1141  0025C4                     
  1142                           ;main.c: 43:     PWM1_Set_Duty(duty);
  1143  0025C4  0E46               	movlw	70
  1144  0025C6  EC84  F01B         	call	_PWM1_Set_Duty
  1145  0025CA                     
  1146                           ;main.c: 44:     PWM1_Start();
  1147  0025CA  EC17  F01F         	call	_PWM1_Start	;wreg free
  1148  0025CE                     
  1149                           ;main.c: 46:     UART_Config uartConfig;;main.c: 48:     uartConfig.baud_rate = 9600;
  1150  0025CE  0E80               	movlw	128
  1151  0025D0  0100               	movlb	0	; () banked
  1152  0025D2  6FF1               	movwf	main@uartConfig& (0+255),b
  1153  0025D4  0E25               	movlw	37
  1154  0025D6  6FF2               	movwf	(main@uartConfig+1)& (0+255),b
  1155  0025D8  0E00               	movlw	0
  1156  0025DA  6FF3               	movwf	(main@uartConfig+2)& (0+255),b
  1157  0025DC  0E00               	movlw	0
  1158  0025DE  6FF4               	movwf	(main@uartConfig+3)& (0+255),b
  1159  0025E0                     
  1160                           ; BSR set to: 0
  1161                           ;main.c: 49:     uartConfig.data_bits = 8;
  1162  0025E0  0E08               	movlw	8
  1163  0025E2  6FF5               	movwf	(main@uartConfig+4)& (0+255),b
  1164  0025E4                     
  1165                           ; BSR set to: 0
  1166                           ;main.c: 50:     uartConfig.parity = 0;
  1167  0025E4  0E00               	movlw	0
  1168  0025E6  6FF6               	movwf	(main@uartConfig+5)& (0+255),b
  1169  0025E8                     
  1170                           ; BSR set to: 0
  1171                           ;main.c: 51:     uartConfig.stop_bits = 1;
  1172  0025E8  0E01               	movlw	1
  1173  0025EA  6FF7               	movwf	(main@uartConfig+6)& (0+255),b
  1174  0025EC                     
  1175                           ; BSR set to: 0
  1176                           ;main.c: 53:     UART_Init(uartConfig);
  1177  0025EC  EE20  F0F1         	lfsr	2,main@uartConfig
  1178  0025F0  EE00  F00E         	lfsr	0,UART_Init@config
  1179  0025F4  0E07               	movlw	7
  1180  0025F6                     u4791:
  1181  0025F6  CFDB FFEB          	movff	plusw2,plusw0
  1182  0025FA  06E8               	decf	wreg,f,c
  1183  0025FC  E2FC               	bc	u4791
  1184  0025FE  EC7B  F019         	call	_UART_Init	;wreg free
  1185  002602                     
  1186                           ;main.c: 55:     Motor_Start();
  1187  002602  EC14  F01F         	call	_Motor_Start	;wreg free
  1188  002606                     l4313:
  1189                           
  1190                           ;main.c: 58:         actual = 50 - getDistance();
  1191  002606  ECC1  F01D         	call	_getDistance	;wreg free
  1192  00260A  0E32               	movlw	50
  1193  00260C  0100               	movlb	0	; () banked
  1194  00260E  6FE3               	movwf	??_main& (0+255),b
  1195  002610  0E00               	movlw	0
  1196  002612  6FE4               	movwf	(??_main+1)& (0+255),b
  1197  002614  5001               	movf	?_getDistance^0,w,c
  1198  002616  5FE3               	subwf	??_main& (0+255),f,b
  1199  002618  5002               	movf	(?_getDistance+1)^0,w,c
  1200  00261A  5BE4               	subwfb	(??_main+1)& (0+255),f,b
  1201  00261C  C0E3  F005         	movff	??_main,___xxtofl@val
  1202  002620  C0E4  F006         	movff	??_main+1,___xxtofl@val+1
  1203  002624  6A07               	clrf	(___xxtofl@val+2)^0,c
  1204  002626  6A08               	clrf	(___xxtofl@val+3)^0,c
  1205  002628  0E00               	movlw	0
  1206  00262A  EC71  F016         	call	___xxtofl
  1207  00262E  C005  F110         	movff	?___xxtofl,_actual
  1208  002632  C006  F111         	movff	?___xxtofl+1,_actual+1
  1209  002636  C007  F112         	movff	?___xxtofl+2,_actual+2
  1210  00263A  C008  F113         	movff	?___xxtofl+3,_actual+3
  1211  00263E                     
  1212                           ;main.c: 59:         error = ref - actual;
  1213  00263E  0E00               	movlw	0
  1214  002640  6E23               	movwf	___flsub@b^0,c
  1215  002642  0E00               	movlw	0
  1216  002644  6E24               	movwf	(___flsub@b+1)^0,c
  1217  002646  0EA0               	movlw	160
  1218  002648  6E25               	movwf	(___flsub@b+2)^0,c
  1219  00264A  0E42               	movlw	66
  1220  00264C  6E26               	movwf	(___flsub@b+3)^0,c
  1221  00264E  C110  F027         	movff	_actual,___flsub@a
  1222  002652  C111  F028         	movff	_actual+1,___flsub@a+1
  1223  002656  C112  F029         	movff	_actual+2,___flsub@a+2
  1224  00265A  C113  F02A         	movff	_actual+3,___flsub@a+3
  1225  00265E  EC09  F01E         	call	___flsub	;wreg free
  1226  002662  C023  F118         	movff	?___flsub,_error
  1227  002666  C024  F119         	movff	?___flsub+1,_error+1
  1228  00266A  C025  F11A         	movff	?___flsub+2,_error+2
  1229  00266E  C026  F11B         	movff	?___flsub+3,_error+3
  1230  002672                     
  1231                           ;main.c: 60:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1232  002672  0ECD               	movlw	205
  1233  002674  6E2F               	movwf	___flmul@a^0,c
  1234  002676  0ECC               	movlw	204
  1235  002678  6E30               	movwf	(___flmul@a+1)^0,c
  1236  00267A  0ECC               	movlw	204
  1237  00267C  6E31               	movwf	(___flmul@a+2)^0,c
  1238  00267E  0E3E               	movlw	62
  1239  002680  6E32               	movwf	(___flmul@a+3)^0,c
  1240  002682  C10C  F027         	movff	_errorAnte,___flsub@a
  1241  002686  C10D  F028         	movff	_errorAnte+1,___flsub@a+1
  1242  00268A  C10E  F029         	movff	_errorAnte+2,___flsub@a+2
  1243  00268E  C10F  F02A         	movff	_errorAnte+3,___flsub@a+3
  1244  002692  C118  F023         	movff	_error,___flsub@b
  1245  002696  C119  F024         	movff	_error+1,___flsub@b+1
  1246  00269A  C11A  F025         	movff	_error+2,___flsub@b+2
  1247  00269E  C11B  F026         	movff	_error+3,___flsub@b+3
  1248  0026A2  EC09  F01E         	call	___flsub	;wreg free
  1249  0026A6  C023  F02B         	movff	?___flsub,___flmul@b
  1250  0026AA  C024  F02C         	movff	?___flsub+1,___flmul@b+1
  1251  0026AE  C025  F02D         	movff	?___flsub+2,___flmul@b+2
  1252  0026B2  C026  F02E         	movff	?___flsub+3,___flmul@b+3
  1253  0026B6  ECF3  F00E         	call	___flmul	;wreg free
  1254  0026BA  C02B  F0E5         	movff	?___flmul,_main$1541
  1255  0026BE  C02C  F0E6         	movff	?___flmul+1,_main$1541+1
  1256  0026C2  C02D  F0E7         	movff	?___flmul+2,_main$1541+2
  1257  0026C6  C02E  F0E8         	movff	?___flmul+3,_main$1541+3
  1258  0026CA                     
  1259                           ;main.c: 60:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1260  0026CA  C0E5  F017         	movff	_main$1541,___fladd@a
  1261  0026CE  C0E6  F018         	movff	_main$1541+1,___fladd@a+1
  1262  0026D2  C0E7  F019         	movff	_main$1541+2,___fladd@a+2
  1263  0026D6  C0E8  F01A         	movff	_main$1541+3,___fladd@a+3
  1264  0026DA  0E00               	movlw	0
  1265  0026DC  6E2F               	movwf	___flmul@a^0,c
  1266  0026DE  0E00               	movlw	0
  1267  0026E0  6E30               	movwf	(___flmul@a+1)^0,c
  1268  0026E2  0E00               	movlw	0
  1269  0026E4  6E31               	movwf	(___flmul@a+2)^0,c
  1270  0026E6  0E3F               	movlw	63
  1271  0026E8  6E32               	movwf	(___flmul@a+3)^0,c
  1272  0026EA  C118  F02B         	movff	_error,___flmul@b
  1273  0026EE  C119  F02C         	movff	_error+1,___flmul@b+1
  1274  0026F2  C11A  F02D         	movff	_error+2,___flmul@b+2
  1275  0026F6  C11B  F02E         	movff	_error+3,___flmul@b+3
  1276  0026FA  ECF3  F00E         	call	___flmul	;wreg free
  1277  0026FE  C02B  F013         	movff	?___flmul,___fladd@b
  1278  002702  C02C  F014         	movff	?___flmul+1,___fladd@b+1
  1279  002706  C02D  F015         	movff	?___flmul+2,___fladd@b+2
  1280  00270A  C02E  F016         	movff	?___flmul+3,___fladd@b+3
  1281  00270E  EC93  F00C         	call	___fladd	;wreg free
  1282  002712  C013  F0E9         	movff	?___fladd,_main$1542
  1283  002716  C014  F0EA         	movff	?___fladd+1,_main$1542+1
  1284  00271A  C015  F0EB         	movff	?___fladd+2,_main$1542+2
  1285  00271E  C016  F0EC         	movff	?___fladd+3,_main$1542+3
  1286  002722                     
  1287                           ;main.c: 60:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1288  002722  0ECD               	movlw	205
  1289  002724  6E2F               	movwf	___flmul@a^0,c
  1290  002726  0ECC               	movlw	204
  1291  002728  6E30               	movwf	(___flmul@a+1)^0,c
  1292  00272A  0ECC               	movlw	204
  1293  00272C  6E31               	movwf	(___flmul@a+2)^0,c
  1294  00272E  0E3D               	movlw	61
  1295  002730  6E32               	movwf	(___flmul@a+3)^0,c
  1296  002732  C118  F02B         	movff	_error,___flmul@b
  1297  002736  C119  F02C         	movff	_error+1,___flmul@b+1
  1298  00273A  C11A  F02D         	movff	_error+2,___flmul@b+2
  1299  00273E  C11B  F02E         	movff	_error+3,___flmul@b+3
  1300  002742  ECF3  F00E         	call	___flmul	;wreg free
  1301  002746  C02B  F017         	movff	?___flmul,___fladd@a
  1302  00274A  C02C  F018         	movff	?___flmul+1,___fladd@a+1
  1303  00274E  C02D  F019         	movff	?___flmul+2,___fladd@a+2
  1304  002752  C02E  F01A         	movff	?___flmul+3,___fladd@a+3
  1305  002756  C0E9  F013         	movff	_main$1542,___fladd@b
  1306  00275A  C0EA  F014         	movff	_main$1542+1,___fladd@b+1
  1307  00275E  C0EB  F015         	movff	_main$1542+2,___fladd@b+2
  1308  002762  C0EC  F016         	movff	_main$1542+3,___fladd@b+3
  1309  002766  EC93  F00C         	call	___fladd	;wreg free
  1310  00276A  C013  F0ED         	movff	?___fladd,_main$1543
  1311  00276E  C014  F0EE         	movff	?___fladd+1,_main$1543+1
  1312  002772  C015  F0EF         	movff	?___fladd+2,_main$1543+2
  1313  002776  C016  F0F0         	movff	?___fladd+3,_main$1543+3
  1314  00277A                     
  1315                           ;main.c: 60:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1316  00277A  C114  F013         	movff	_suma,___fladd@b
  1317  00277E  C115  F014         	movff	_suma+1,___fladd@b+1
  1318  002782  C116  F015         	movff	_suma+2,___fladd@b+2
  1319  002786  C117  F016         	movff	_suma+3,___fladd@b+3
  1320  00278A  C0ED  F017         	movff	_main$1543,___fladd@a
  1321  00278E  C0EE  F018         	movff	_main$1543+1,___fladd@a+1
  1322  002792  C0EF  F019         	movff	_main$1543+2,___fladd@a+2
  1323  002796  C0F0  F01A         	movff	_main$1543+3,___fladd@a+3
  1324  00279A  EC93  F00C         	call	___fladd	;wreg free
  1325  00279E  C013  F114         	movff	?___fladd,_suma
  1326  0027A2  C014  F115         	movff	?___fladd+1,_suma+1
  1327  0027A6  C015  F116         	movff	?___fladd+2,_suma+2
  1328  0027AA  C016  F117         	movff	?___fladd+3,_suma+3
  1329  0027AE                     
  1330                           ;main.c: 61:         if(suma>100){
  1331  0027AE  0E00               	movlw	0
  1332  0027B0  6E44               	movwf	___flge@ff1^0,c
  1333  0027B2  0E00               	movlw	0
  1334  0027B4  6E45               	movwf	(___flge@ff1+1)^0,c
  1335  0027B6  0EC8               	movlw	200
  1336  0027B8  6E46               	movwf	(___flge@ff1+2)^0,c
  1337  0027BA  0E42               	movlw	66
  1338  0027BC  6E47               	movwf	(___flge@ff1+3)^0,c
  1339  0027BE  C114  F048         	movff	_suma,___flge@ff2
  1340  0027C2  C115  F049         	movff	_suma+1,___flge@ff2+1
  1341  0027C6  C116  F04A         	movff	_suma+2,___flge@ff2+2
  1342  0027CA  C117  F04B         	movff	_suma+3,___flge@ff2+3
  1343  0027CE  EC7A  F018         	call	___flge	;wreg free
  1344  0027D2  B0D8               	btfsc	status,0,c
  1345  0027D4  EFEE  F013         	goto	u4801
  1346  0027D8  EFF0  F013         	goto	u4800
  1347  0027DC                     u4801:
  1348  0027DC  EFFB  F013         	goto	l4329
  1349  0027E0                     u4800:
  1350  0027E0                     
  1351                           ;main.c: 62:             suma=100;
  1352  0027E0  0E00               	movlw	0
  1353  0027E2  0101               	movlb	1	; () banked
  1354  0027E4  6F14               	movwf	_suma& (0+255),b
  1355  0027E6  0E00               	movlw	0
  1356  0027E8  6F15               	movwf	(_suma+1)& (0+255),b
  1357  0027EA  0EC8               	movlw	200
  1358  0027EC  6F16               	movwf	(_suma+2)& (0+255),b
  1359  0027EE  0E42               	movlw	66
  1360  0027F0  6F17               	movwf	(_suma+3)& (0+255),b
  1361                           
  1362                           ;main.c: 63:         }
  1363  0027F2  EF0B  F014         	goto	l4333
  1364  0027F6                     l4329:
  1365  0027F6  0101               	movlb	1	; () banked
  1366  0027F8  BF17               	btfsc	(_suma+3)& (0+255),7,b
  1367  0027FA  EF03  F014         	goto	u4810
  1368  0027FE  EF01  F014         	goto	u4811
  1369  002802                     u4811:
  1370  002802  EF0B  F014         	goto	l4333
  1371  002806                     u4810:
  1372  002806                     
  1373                           ; BSR set to: 1
  1374                           ;main.c: 65:             suma = 0;
  1375  002806  0E00               	movlw	0
  1376  002808  6F14               	movwf	_suma& (0+255),b
  1377  00280A  0E00               	movlw	0
  1378  00280C  6F15               	movwf	(_suma+1)& (0+255),b
  1379  00280E  0E00               	movlw	0
  1380  002810  6F16               	movwf	(_suma+2)& (0+255),b
  1381  002812  0E00               	movlw	0
  1382  002814  6F17               	movwf	(_suma+3)& (0+255),b
  1383  002816                     l4333:
  1384                           
  1385                           ; BSR set to: 1
  1386                           ;main.c: 67:         PWM1_Set_Duty(suma);
  1387  002816  C114  F060         	movff	_suma,___fltol@f1
  1388  00281A  C115  F061         	movff	_suma+1,___fltol@f1+1
  1389  00281E  C116  F062         	movff	_suma+2,___fltol@f1+2
  1390  002822  C117  F063         	movff	_suma+3,___fltol@f1+3
  1391  002826  ECF6  F017         	call	___fltol	;wreg free
  1392  00282A  0100               	movlb	0	; () banked
  1393  00282C  5160               	movf	?___fltol& (0+255),w,b
  1394  00282E  EC84  F01B         	call	_PWM1_Set_Duty
  1395  002832                     
  1396                           ;main.c: 69:         sprintf(strUART,"distancia: %0.1f\r\n", actual);
  1397  002832  0E82               	movlw	low _strUART
  1398  002834  0100               	movlb	0	; () banked
  1399  002836  6FCE               	movwf	sprintf@s& (0+255),b
  1400  002838  0E01               	movlw	high _strUART
  1401  00283A  6FCF               	movwf	(sprintf@s+1)& (0+255),b
  1402  00283C  0E01               	movlw	low STR_1
  1403  00283E  6FD0               	movwf	sprintf@fmt& (0+255),b
  1404  002840  0E08               	movlw	high STR_1
  1405  002842  6FD1               	movwf	(sprintf@fmt+1)& (0+255),b
  1406  002844  C110  F0D2         	movff	_actual,?_sprintf+4
  1407  002848  C111  F0D3         	movff	_actual+1,?_sprintf+5
  1408  00284C  C112  F0D4         	movff	_actual+2,?_sprintf+6
  1409  002850  C113  F0D5         	movff	_actual+3,?_sprintf+7
  1410  002854  EC6F  F01D         	call	_sprintf	;wreg free
  1411  002858                     
  1412                           ;main.c: 70:         UART_Write_Text(strUART);
  1413  002858  0E82               	movlw	low _strUART
  1414  00285A  6E02               	movwf	UART_Write_Text@text^0,c
  1415  00285C  0E01               	movlw	high _strUART
  1416  00285E  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  1417  002860  ECDE  F01E         	call	_UART_Write_Text	;wreg free
  1418  002864                     
  1419                           ;main.c: 71:         _delay((unsigned long)((1)*(20000000UL/4000.0)));
  1420  002864  0E07               	movlw	7
  1421  002866  0100               	movlb	0	; () banked
  1422  002868  6FE3               	movwf	??_main& (0+255),b
  1423  00286A  0E7D               	movlw	125
  1424  00286C                     u4827:
  1425  00286C  2EE8               	decfsz	wreg,f,c
  1426  00286E  D7FE               	bra	u4827
  1427  002870  2FE3               	decfsz	??_main& (0+255),f,b
  1428  002872  D7FC               	bra	u4827
  1429  002874                     
  1430                           ;main.c: 72:         errorAnte = error;
  1431  002874  C118  F10C         	movff	_error,_errorAnte
  1432  002878  C119  F10D         	movff	_error+1,_errorAnte+1
  1433  00287C  C11A  F10E         	movff	_error+2,_errorAnte+2
  1434  002880  C11B  F10F         	movff	_error+3,_errorAnte+3
  1435  002884  EF03  F013         	goto	l4313
  1436  002888  EF00  F000         	goto	start
  1437  00288C                     __end_of_main:
  1438                           	callstack 0
  1439                           
  1440 ;; *************** function _sprintf *****************
  1441 ;; Defined at:
  1442 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  s               2  110[BANK0 ] PTR unsigned char 
  1445 ;;		 -> strUART(50), 
  1446 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  1447 ;;		 -> STR_1(19), 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  f              11  120[BANK0 ] struct _IO_FILE
  1450 ;;  ap              2  118[BANK0 ] PTR void [1]
  1451 ;;		 -> ?_sprintf(2), 
  1452 ;;  ret             2    0        int 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  2  110[BANK0 ] int 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1462 ;;      Params:         0       8       0       0       0       0       0       0       0
  1463 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1465 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1466 ;;Total ram usage:       21 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 7
  1469 ;; This function calls:
  1470 ;;		_vfprintf
  1471 ;; This function is called by:
  1472 ;;		_main
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text1
  1477  003ADE                     __ptext1:
  1478                           	callstack 0
  1479  003ADE                     _sprintf:
  1480                           	callstack 23
  1481  003ADE  0ED2               	movlw	low (?_sprintf+4)
  1482  003AE0  0100               	movlb	0	; () banked
  1483  003AE2  6FD6               	movwf	sprintf@ap& (0+255),b
  1484  003AE4  0E00               	movlw	high (?_sprintf+4)
  1485  003AE6  6FD7               	movwf	(sprintf@ap+1)& (0+255),b
  1486  003AE8  C0CE  F0D8         	movff	sprintf@s,sprintf@f
  1487  003AEC  C0CF  F0D9         	movff	sprintf@s+1,sprintf@f+1
  1488  003AF0                     
  1489                           ; BSR set to: 0
  1490  003AF0  0E00               	movlw	0
  1491  003AF2  6FDC               	movwf	(sprintf@f+4)& (0+255),b
  1492  003AF4  0E00               	movlw	0
  1493  003AF6  6FDB               	movwf	(sprintf@f+3)& (0+255),b
  1494  003AF8                     
  1495                           ; BSR set to: 0
  1496  003AF8  0E00               	movlw	0
  1497  003AFA  6FE2               	movwf	(sprintf@f+10)& (0+255),b
  1498  003AFC  0E00               	movlw	0
  1499  003AFE  6FE1               	movwf	(sprintf@f+9)& (0+255),b
  1500  003B00                     
  1501                           ; BSR set to: 0
  1502  003B00  0ED8               	movlw	low sprintf@f
  1503  003B02  6FC6               	movwf	vfprintf@fp& (0+255),b
  1504  003B04  0E00               	movlw	high sprintf@f
  1505  003B06  6FC7               	movwf	(vfprintf@fp+1)& (0+255),b
  1506  003B08  C0D0  F0C8         	movff	sprintf@fmt,vfprintf@fmt
  1507  003B0C  C0D1  F0C9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1508  003B10  0ED6               	movlw	low sprintf@ap
  1509  003B12  6FCA               	movwf	vfprintf@ap& (0+255),b
  1510  003B14  0E00               	movlw	high sprintf@ap
  1511  003B16  6FCB               	movwf	(vfprintf@ap+1)& (0+255),b
  1512  003B18  ECE1  F01C         	call	_vfprintf	;wreg free
  1513  003B1C  0100               	movlb	0	; () banked
  1514  003B1E  51DB               	movf	(sprintf@f+3)& (0+255),w,b
  1515  003B20  25CE               	addwf	sprintf@s& (0+255),w,b
  1516  003B22  6ED9               	movwf	fsr2l,c
  1517  003B24  51DC               	movf	(sprintf@f+4)& (0+255),w,b
  1518  003B26  21CF               	addwfc	(sprintf@s+1)& (0+255),w,b
  1519  003B28  6EDA               	movwf	fsr2h,c
  1520  003B2A  0E00               	movlw	0
  1521  003B2C  6EDF               	movwf	indf2,c
  1522  003B2E                     
  1523                           ; BSR set to: 0
  1524  003B2E  0012               	return		;funcret
  1525  003B30                     __end_of_sprintf:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _vfprintf *****************
  1529 ;; Defined at:
  1530 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  fp              2  102[BANK0 ] PTR struct _IO_FILE
  1533 ;;		 -> sprintf@f(11), 
  1534 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  1535 ;;		 -> STR_1(19), 
  1536 ;;  ap              2  106[BANK0 ] PTR PTR void 
  1537 ;;		 -> sprintf@ap(2), 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  cfmt            2  108[BANK0 ] PTR unsigned char 
  1540 ;;		 -> STR_1(19), 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  2  102[BANK0 ] int 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1550 ;;      Params:         0       6       0       0       0       0       0       0       0
  1551 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1553 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1554 ;;Total ram usage:        8 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 6
  1557 ;; This function calls:
  1558 ;;		_vfpfcnvrt
  1559 ;; This function is called by:
  1560 ;;		_sprintf
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text2
  1565  0039C2                     __ptext2:
  1566                           	callstack 0
  1567  0039C2                     _vfprintf:
  1568                           	callstack 23
  1569  0039C2                     
  1570                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1571  0039C2  C0C8  F0CC         	movff	vfprintf@fmt,vfprintf@cfmt
  1572  0039C6  C0C9  F0CD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1573  0039CA                     
  1574                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1575  0039CA  0E00               	movlw	0
  1576  0039CC  0101               	movlb	1	; () banked
  1577  0039CE  6F21               	movwf	(_nout+1)& (0+255),b
  1578  0039D0  0E00               	movlw	0
  1579  0039D2  6F20               	movwf	_nout& (0+255),b
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1582  0039D4  EF03  F01D         	goto	l4177
  1583  0039D8                     l4175:
  1584                           
  1585                           ; BSR set to: 1
  1586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1587  0039D8  C0C6  F0B2         	movff	vfprintf@fp,vfpfcnvrt@fp
  1588  0039DC  C0C7  F0B3         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1589  0039E0  0ECC               	movlw	low vfprintf@cfmt
  1590  0039E2  0100               	movlb	0	; () banked
  1591  0039E4  6FB4               	movwf	vfpfcnvrt@fmt& (0+255),b
  1592  0039E6  0E00               	movlw	high vfprintf@cfmt
  1593  0039E8  6FB5               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1594  0039EA  C0CA  F0B6         	movff	vfprintf@ap,vfpfcnvrt@ap
  1595  0039EE  C0CB  F0B7         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1596  0039F2  EC19  F00A         	call	_vfpfcnvrt	;wreg free
  1597  0039F6  0100               	movlb	0	; () banked
  1598  0039F8  51B2               	movf	?_vfpfcnvrt& (0+255),w,b
  1599  0039FA  0101               	movlb	1	; () banked
  1600  0039FC  2720               	addwf	_nout& (0+255),f,b
  1601  0039FE  0100               	movlb	0	; () banked
  1602  003A00  51B3               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1603  003A02  0101               	movlb	1	; () banked
  1604  003A04  2321               	addwfc	(_nout+1)& (0+255),f,b
  1605  003A06                     l4177:
  1606                           
  1607                           ; BSR set to: 1
  1608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1609  003A06  C0CC  FFF6         	movff	vfprintf@cfmt,tblptrl
  1610  003A0A  C0CD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1611  003A0E                     	if	0	;tblptru may be non-zero
  1612  003A0E                     	endif
  1613  003A0E                     	if	0	;tblptru may be non-zero
  1614  003A0E                     	endif
  1615  003A0E  0008               	tblrd		*
  1616  003A10  50F5               	movf	tablat,w,c
  1617  003A12  0900               	iorlw	0
  1618  003A14  A4D8               	btfss	status,2,c
  1619  003A16  EF0F  F01D         	goto	u4701
  1620  003A1A  EF11  F01D         	goto	u4700
  1621  003A1E                     u4701:
  1622  003A1E  EFEC  F01C         	goto	l4175
  1623  003A22                     u4700:
  1624  003A22                     
  1625                           ; BSR set to: 1
  1626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1627  003A22  C120  F0C6         	movff	_nout,?_vfprintf
  1628  003A26  C121  F0C7         	movff	_nout+1,?_vfprintf+1
  1629  003A2A                     
  1630                           ; BSR set to: 1
  1631  003A2A  0012               	return		;funcret
  1632  003A2C                     __end_of_vfprintf:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function _vfpfcnvrt *****************
  1636 ;; Defined at:
  1637 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  fp              2   82[BANK0 ] PTR struct _IO_FILE
  1640 ;;		 -> sprintf@f(11), 
  1641 ;;  fmt             2   84[BANK0 ] PTR PTR unsigned char 
  1642 ;;		 -> vfprintf@cfmt(2), 
  1643 ;;  ap              2   86[BANK0 ] PTR PTR void 
  1644 ;;		 -> sprintf@ap(2), 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  llu             8    0        unsigned long long 
  1647 ;;  ll              8    0        long long 
  1648 ;;  f               4   94[BANK0 ] long long 
  1649 ;;  ct              3   98[BANK0 ] unsigned char [3]
  1650 ;;  vp              3    0        PTR void 
  1651 ;;  cp              3    0        PTR unsigned char 
  1652 ;;  done            2   92[BANK0 ] int 
  1653 ;;  i               2    0        int 
  1654 ;;  c               1  101[BANK0 ] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  2   82[BANK0 ] int 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1664 ;;      Params:         0       6       0       0       0       0       0       0       0
  1665 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1666 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1667 ;;      Totals:         0      20       0       0       0       0       0       0       0
  1668 ;;Total ram usage:       20 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 5
  1671 ;; This function calls:
  1672 ;;		_atoi
  1673 ;;		_efgtoa
  1674 ;;		_fputc
  1675 ;;		_isdigit
  1676 ;;		_isupper
  1677 ;;		_strncmp
  1678 ;;		_tolower
  1679 ;; This function is called by:
  1680 ;;		_vfprintf
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text3
  1685  001432                     __ptext3:
  1686                           	callstack 0
  1687  001432                     _vfpfcnvrt:
  1688                           	callstack 23
  1689  001432                     
  1690                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1691  001432  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1692  001436  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1693  00143A  CFDE FFF6          	movff	postinc2,tblptrl
  1694  00143E  CFDD FFF7          	movff	postdec2,tblptrh
  1695  001442                     	if	0	;tblptru may be non-zero
  1696  001442                     	endif
  1697  001442                     	if	0	;tblptru may be non-zero
  1698  001442                     	endif
  1699  001442  0008               	tblrd		*
  1700  001444  50F5               	movf	tablat,w,c
  1701  001446  0A25               	xorlw	37
  1702  001448  A4D8               	btfss	status,2,c
  1703  00144A  EF29  F00A         	goto	u4441
  1704  00144E  EF2B  F00A         	goto	u4440
  1705  001452                     u4441:
  1706  001452  EF77  F00C         	goto	l4085
  1707  001456                     u4440:
  1708  001456                     
  1709                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1710  001456  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1711  00145A  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1712  00145E  2ADE               	incf	postinc2,f,c
  1713  001460  0E00               	movlw	0
  1714  001462  22DD               	addwfc	postdec2,f,c
  1715  001464                     
  1716                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1717  001464  0E00               	movlw	0
  1718  001466  0100               	movlb	0	; () banked
  1719  001468  6FFA               	movwf	(_width+1)& (0+255),b
  1720  00146A  0E00               	movlw	0
  1721  00146C  6FF9               	movwf	_width& (0+255),b
  1722  00146E  C0F9  F0FD         	movff	_width,_flags
  1723  001472  C0FA  F0FE         	movff	_width+1,_flags+1
  1724  001476                     
  1725                           ; BSR set to: 0
  1726                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1727  001476  69FB               	setf	_prec& (0+255),b
  1728  001478  69FC               	setf	(_prec+1)& (0+255),b
  1729  00147A                     
  1730                           ; BSR set to: 0
  1731                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1732  00147A  0E00               	movlw	0
  1733  00147C  6FBD               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1734  00147E  0E00               	movlw	0
  1735  001480  6FBC               	movwf	vfpfcnvrt@done& (0+255),b
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1738  001482  EF89  F00A         	goto	l4009
  1739  001486                     l3983:
  1740                           
  1741                           ; BSR set to: 0
  1742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1743  001486  81FD               	bsf	_flags& (0+255),0,b
  1744  001488                     l3985:
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1748  001488  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1749  00148C  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1750  001490  2ADE               	incf	postinc2,f,c
  1751  001492  0E00               	movlw	0
  1752  001494  22DD               	addwfc	postdec2,f,c
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1755  001496  EF89  F00A         	goto	l4009
  1756  00149A                     l3987:
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1760  00149A  83FD               	bsf	_flags& (0+255),1,b
  1761  00149C  EF44  F00A         	goto	l3985
  1762  0014A0                     l3991:
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1766  0014A0  85FD               	bsf	_flags& (0+255),2,b
  1767  0014A2  EF44  F00A         	goto	l3985
  1768  0014A6                     l3995:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1772  0014A6  87FD               	bsf	_flags& (0+255),3,b
  1773  0014A8  EF44  F00A         	goto	l3985
  1774  0014AC                     l3999:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1778  0014AC  89FD               	bsf	_flags& (0+255),4,b
  1779  0014AE  EF44  F00A         	goto	l3985
  1780  0014B2                     l4003:
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1784  0014B2  0E00               	movlw	0
  1785  0014B4  6FBD               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1786  0014B6  0E01               	movlw	1
  1787  0014B8  6FBC               	movwf	vfpfcnvrt@done& (0+255),b
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1790  0014BA  EF89  F00A         	goto	l4009
  1791  0014BE                     l4007:
  1792                           
  1793                           ; BSR set to: 0
  1794  0014BE  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1795  0014C2  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1796  0014C6  CFDE FFF6          	movff	postinc2,tblptrl
  1797  0014CA  CFDD FFF7          	movff	postdec2,tblptrh
  1798  0014CE                     	if	0	;tblptru may be non-zero
  1799  0014CE                     	endif
  1800  0014CE                     	if	0	;tblptru may be non-zero
  1801  0014CE                     	endif
  1802  0014CE  0008               	tblrd		*
  1803  0014D0  50F5               	movf	tablat,w,c
  1804  0014D2  6FB8               	movwf	??_vfpfcnvrt& (0+255),b
  1805  0014D4  6BB9               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1806                           
  1807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1808                           ; Switch size 1, requested type "simple"
  1809                           ; Number of cases is 1, Range of values is 0 to 0
  1810                           ; switch strategies available:
  1811                           ; Name         Instructions Cycles
  1812                           ; simple_byte            4     3 (average)
  1813                           ;	Chosen strategy is simple_byte
  1814  0014D6  51B9               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1815  0014D8  0A00               	xorlw	0	; case 0
  1816  0014DA  B4D8               	btfsc	status,2,c
  1817  0014DC  EF72  F00A         	goto	l4463
  1818  0014E0  EF59  F00A         	goto	l4003
  1819  0014E4                     l4463:
  1820                           
  1821                           ; BSR set to: 0
  1822                           ; Switch size 1, requested type "simple"
  1823                           ; Number of cases is 5, Range of values is 32 to 48
  1824                           ; switch strategies available:
  1825                           ; Name         Instructions Cycles
  1826                           ; simple_byte           16     9 (average)
  1827                           ;	Chosen strategy is simple_byte
  1828  0014E4  51B8               	movf	??_vfpfcnvrt& (0+255),w,b
  1829  0014E6  0A20               	xorlw	32	; case 32
  1830  0014E8  B4D8               	btfsc	status,2,c
  1831  0014EA  EF53  F00A         	goto	l3995
  1832  0014EE  0A03               	xorlw	3	; case 35
  1833  0014F0  B4D8               	btfsc	status,2,c
  1834  0014F2  EF56  F00A         	goto	l3999
  1835  0014F6  0A08               	xorlw	8	; case 43
  1836  0014F8  B4D8               	btfsc	status,2,c
  1837  0014FA  EF50  F00A         	goto	l3991
  1838  0014FE  0A06               	xorlw	6	; case 45
  1839  001500  B4D8               	btfsc	status,2,c
  1840  001502  EF43  F00A         	goto	l3983
  1841  001506  0A1D               	xorlw	29	; case 48
  1842  001508  B4D8               	btfsc	status,2,c
  1843  00150A  EF4D  F00A         	goto	l3987
  1844  00150E  EF59  F00A         	goto	l4003
  1845  001512                     l4009:
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1849  001512  51BC               	movf	vfpfcnvrt@done& (0+255),w,b
  1850  001514  11BD               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1851  001516  B4D8               	btfsc	status,2,c
  1852  001518  EF90  F00A         	goto	u4451
  1853  00151C  EF92  F00A         	goto	u4450
  1854  001520                     u4451:
  1855  001520  EF5F  F00A         	goto	l4007
  1856  001524                     u4450:
  1857  001524                     
  1858                           ; BSR set to: 0
  1859                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1860  001524  A1FD               	btfss	_flags& (0+255),0,b
  1861  001526  EF97  F00A         	goto	u4461
  1862  00152A  EF99  F00A         	goto	u4460
  1863  00152E                     u4461:
  1864  00152E  EF9A  F00A         	goto	l4013
  1865  001532                     u4460:
  1866  001532                     
  1867                           ; BSR set to: 0
  1868                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1869  001532  93FD               	bcf	_flags& (0+255),1,b
  1870  001534                     l4013:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1874  001534  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1875  001538  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1876  00153C  CFDE FFF6          	movff	postinc2,tblptrl
  1877  001540  CFDD FFF7          	movff	postdec2,tblptrh
  1878  001544                     	if	0	;tblptru may be non-zero
  1879  001544                     	endif
  1880  001544                     	if	0	;tblptru may be non-zero
  1881  001544                     	endif
  1882  001544  0008               	tblrd		*
  1883  001546  50F5               	movf	tablat,w,c
  1884  001548  0A2E               	xorlw	46
  1885  00154A  A4D8               	btfss	status,2,c
  1886  00154C  EFAA  F00A         	goto	u4471
  1887  001550  EFAC  F00A         	goto	u4470
  1888  001554                     u4471:
  1889  001554  EF1D  F00B         	goto	l4031
  1890  001558                     u4470:
  1891  001558                     
  1892                           ; BSR set to: 0
  1893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1894  001558  0E00               	movlw	0
  1895  00155A  6FFC               	movwf	(_prec+1)& (0+255),b
  1896  00155C  0E00               	movlw	0
  1897  00155E  6FFB               	movwf	_prec& (0+255),b
  1898  001560                     
  1899                           ; BSR set to: 0
  1900                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1901  001560  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1902  001564  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1903  001568  2ADE               	incf	postinc2,f,c
  1904  00156A  0E00               	movlw	0
  1905  00156C  22DD               	addwfc	postdec2,f,c
  1906  00156E                     
  1907                           ; BSR set to: 0
  1908                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1909  00156E  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1910  001572  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1911  001576  CFDE FFF6          	movff	postinc2,tblptrl
  1912  00157A  CFDD FFF7          	movff	postdec2,tblptrh
  1913  00157E                     	if	0	;tblptru may be non-zero
  1914  00157E                     	endif
  1915  00157E                     	if	0	;tblptru may be non-zero
  1916  00157E                     	endif
  1917  00157E  0008               	tblrd		*
  1918  001580  50F5               	movf	tablat,w,c
  1919  001582  0A2A               	xorlw	42
  1920  001584  A4D8               	btfss	status,2,c
  1921  001586  EFC7  F00A         	goto	u4481
  1922  00158A  EFC9  F00A         	goto	u4480
  1923  00158E                     u4481:
  1924  00158E  EFE6  F00A         	goto	l4023
  1925  001592                     u4480:
  1926  001592                     
  1927                           ; BSR set to: 0
  1928                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1929  001592  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1930  001596  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1931  00159A  2ADE               	incf	postinc2,f,c
  1932  00159C  0E00               	movlw	0
  1933  00159E  22DD               	addwfc	postdec2,f,c
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1936  0015A0  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1937  0015A4  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1938  0015A8  CFDF F0B8          	movff	indf2,??_vfpfcnvrt
  1939  0015AC  0E02               	movlw	2
  1940  0015AE  26DE               	addwf	postinc2,f,c
  1941  0015B0  CFDF F0B9          	movff	indf2,??_vfpfcnvrt+1
  1942  0015B4  0E00               	movlw	0
  1943  0015B6  22DD               	addwfc	postdec2,f,c
  1944  0015B8  C0B8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1945  0015BC  C0B9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1946  0015C0  CFDE F0FB          	movff	postinc2,_prec
  1947  0015C4  CFDD F0FC          	movff	postdec2,_prec+1
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1950  0015C8  EF1D  F00B         	goto	l4031
  1951  0015CC                     l4023:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1955  0015CC  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1956  0015D0  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1957  0015D4  CFDE F008          	movff	postinc2,atoi@s
  1958  0015D8  CFDD F009          	movff	postdec2,atoi@s+1
  1959  0015DC  EC4B  F017         	call	_atoi	;wreg free
  1960  0015E0  C008  F0FB         	movff	?_atoi,_prec
  1961  0015E4  C009  F0FC         	movff	?_atoi+1,_prec+1
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1964  0015E8  EFFD  F00A         	goto	l4029
  1965  0015EC                     l4025:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1969  0015EC  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1970  0015F0  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1971  0015F4  2ADE               	incf	postinc2,f,c
  1972  0015F6  0E00               	movlw	0
  1973  0015F8  22DD               	addwfc	postdec2,f,c
  1974  0015FA                     l4029:
  1975  0015FA  0ED0               	movlw	208
  1976  0015FC  0100               	movlb	0	; () banked
  1977  0015FE  6FB8               	movwf	??_vfpfcnvrt& (0+255),b
  1978  001600  0EFF               	movlw	255
  1979  001602  6FB9               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1980  001604  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1981  001608  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1982  00160C  CFDE FFF6          	movff	postinc2,tblptrl
  1983  001610  CFDD FFF7          	movff	postdec2,tblptrh
  1984  001614                     	if	0	;tblptru may be non-zero
  1985  001614                     	endif
  1986  001614                     	if	0	;tblptru may be non-zero
  1987  001614                     	endif
  1988  001614  0008               	tblrd		*
  1989  001616  50F5               	movf	tablat,w,c
  1990  001618  6FBA               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1991  00161A  6BBB               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1992  00161C  51B8               	movf	??_vfpfcnvrt& (0+255),w,b
  1993  00161E  27BA               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1994  001620  51B9               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1995  001622  23BB               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1996  001624  51BB               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1997  001626  E109               	bnz	u4490
  1998  001628  0E0A               	movlw	10
  1999  00162A  5DBA               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2000  00162C  A0D8               	btfss	status,0,c
  2001  00162E  EF1B  F00B         	goto	u4491
  2002  001632  EF1D  F00B         	goto	u4490
  2003  001636                     u4491:
  2004  001636  EFF6  F00A         	goto	l4025
  2005  00163A                     u4490:
  2006  00163A                     l4031:
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2010  00163A  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2011  00163E  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2012  001642  CFDE FFF6          	movff	postinc2,tblptrl
  2013  001646  CFDD FFF7          	movff	postdec2,tblptrh
  2014  00164A                     	if	0	;tblptru may be non-zero
  2015  00164A                     	endif
  2016  00164A                     	if	0	;tblptru may be non-zero
  2017  00164A                     	endif
  2018  00164A  0008               	tblrd		*
  2019  00164C  50F5               	movf	tablat,w,c
  2020  00164E  6E07               	movwf	tolower@c^0,c
  2021  001650  6A08               	clrf	(tolower@c+1)^0,c
  2022  001652  ECE6  F01D         	call	_tolower	;wreg free
  2023  001656  5007               	movf	?_tolower^0,w,c
  2024  001658  0100               	movlb	0	; () banked
  2025  00165A  6FC2               	movwf	vfpfcnvrt@ct& (0+255),b
  2026  00165C                     
  2027                           ; BSR set to: 0
  2028                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2029  00165C  51C2               	movf	vfpfcnvrt@ct& (0+255),w,b
  2030  00165E  B4D8               	btfsc	status,2,c
  2031  001660  EF34  F00B         	goto	u4501
  2032  001664  EF36  F00B         	goto	u4500
  2033  001668                     u4501:
  2034  001668  EF70  F00B         	goto	l4041
  2035  00166C                     u4500:
  2036  00166C                     
  2037                           ; BSR set to: 0
  2038                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2039  00166C  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2040  001670  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2041  001674  CFDE F0B8          	movff	postinc2,??_vfpfcnvrt
  2042  001678  CFDD F0B9          	movff	postdec2,??_vfpfcnvrt+1
  2043  00167C  0E01               	movlw	1
  2044  00167E  27B8               	addwf	??_vfpfcnvrt& (0+255),f,b
  2045  001680  0E00               	movlw	0
  2046  001682  23B9               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2047  001684  C0B8  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2048  001688  C0B9  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2049  00168C                     	if	0	;tblptru may be non-zero
  2050  00168C                     	endif
  2051  00168C                     	if	0	;tblptru may be non-zero
  2052  00168C                     	endif
  2053  00168C  0008               	tblrd		*
  2054  00168E  50F5               	movf	tablat,w,c
  2055  001690  6E07               	movwf	tolower@c^0,c
  2056  001692  6A08               	clrf	(tolower@c+1)^0,c
  2057  001694  ECE6  F01D         	call	_tolower	;wreg free
  2058  001698  5007               	movf	?_tolower^0,w,c
  2059  00169A  0100               	movlb	0	; () banked
  2060  00169C  6FC3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2061  00169E                     
  2062                           ; BSR set to: 0
  2063                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2064  00169E  51C3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2065  0016A0  B4D8               	btfsc	status,2,c
  2066  0016A2  EF55  F00B         	goto	u4511
  2067  0016A6  EF57  F00B         	goto	u4510
  2068  0016AA                     u4511:
  2069  0016AA  EF70  F00B         	goto	l4041
  2070  0016AE                     u4510:
  2071  0016AE                     
  2072                           ; BSR set to: 0
  2073                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2074  0016AE  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2075  0016B2  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2076  0016B6  CFDE F0B8          	movff	postinc2,??_vfpfcnvrt
  2077  0016BA  CFDD F0B9          	movff	postdec2,??_vfpfcnvrt+1
  2078  0016BE  0E02               	movlw	2
  2079  0016C0  27B8               	addwf	??_vfpfcnvrt& (0+255),f,b
  2080  0016C2  0E00               	movlw	0
  2081  0016C4  23B9               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2082  0016C6  C0B8  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2083  0016CA  C0B9  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2084  0016CE                     	if	0	;tblptru may be non-zero
  2085  0016CE                     	endif
  2086  0016CE                     	if	0	;tblptru may be non-zero
  2087  0016CE                     	endif
  2088  0016CE  0008               	tblrd		*
  2089  0016D0  50F5               	movf	tablat,w,c
  2090  0016D2  6E07               	movwf	tolower@c^0,c
  2091  0016D4  6A08               	clrf	(tolower@c+1)^0,c
  2092  0016D6  ECE6  F01D         	call	_tolower	;wreg free
  2093  0016DA  5007               	movf	?_tolower^0,w,c
  2094  0016DC  0100               	movlb	0	; () banked
  2095  0016DE  6FC4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2096  0016E0                     l4041:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2100  0016E0  0E66               	movlw	102
  2101  0016E2  19C2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2102  0016E4  A4D8               	btfss	status,2,c
  2103  0016E6  EF77  F00B         	goto	u4521
  2104  0016EA  EF79  F00B         	goto	u4520
  2105  0016EE                     u4521:
  2106  0016EE  EFB9  F00B         	goto	l4053
  2107  0016F2                     u4520:
  2108  0016F2                     
  2109                           ; BSR set to: 0
  2110                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2111  0016F2  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2112  0016F6  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2113  0016FA  CFDE FFF6          	movff	postinc2,tblptrl
  2114  0016FE  CFDD FFF7          	movff	postdec2,tblptrh
  2115  001702                     	if	0	;tblptru may be non-zero
  2116  001702                     	endif
  2117  001702                     	if	0	;tblptru may be non-zero
  2118  001702                     	endif
  2119  001702  0008               	tblrd		*
  2120  001704  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  2121  001708                     
  2122                           ; BSR set to: 0
  2123                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2124  001708  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2125  00170C  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2126  001710  2ADE               	incf	postinc2,f,c
  2127  001712  0E00               	movlw	0
  2128  001714  22DD               	addwfc	postdec2,f,c
  2129  001716                     
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2132  001716  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2133  00171A  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2134  00171E  CFDF F0B8          	movff	indf2,??_vfpfcnvrt
  2135  001722  0E04               	movlw	4
  2136  001724  26DE               	addwf	postinc2,f,c
  2137  001726  CFDF F0B9          	movff	indf2,??_vfpfcnvrt+1
  2138  00172A  0E00               	movlw	0
  2139  00172C  22DD               	addwfc	postdec2,f,c
  2140  00172E  C0B8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2141  001732  C0B9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2142  001736  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  2143  00173A  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  2144  00173E  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  2145  001742  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  2146  001746                     l4049:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2150  001746  C0B2  F074         	movff	vfpfcnvrt@fp,efgtoa@fp
  2151  00174A  C0B3  F075         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2152  00174E  C0BE  F076         	movff	vfpfcnvrt@f,efgtoa@f
  2153  001752  C0BF  F077         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2154  001756  C0C0  F078         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2155  00175A  C0C1  F079         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2156  00175E  C0C5  F07A         	movff	vfpfcnvrt@c,efgtoa@c
  2157  001762  EC14  F004         	call	_efgtoa	;wreg free
  2158  001766  C074  F0B2         	movff	?_efgtoa,?_vfpfcnvrt
  2159  00176A  C075  F0B3         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2160  00176E  EF92  F00C         	goto	l1015
  2161  001772                     l4053:
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2165  001772  0EC2               	movlw	low vfpfcnvrt@ct
  2166  001774  6E01               	movwf	strncmp@_l^0,c
  2167  001776  0E00               	movlw	high vfpfcnvrt@ct
  2168  001778  6E02               	movwf	(strncmp@_l+1)^0,c
  2169  00177A  0E24               	movlw	low STR_10
  2170  00177C  6E03               	movwf	strncmp@_r^0,c
  2171  00177E  0E08               	movlw	high STR_10
  2172  001780  6E04               	movwf	(strncmp@_r+1)^0,c
  2173  001782  0E00               	movlw	0
  2174  001784  6E06               	movwf	(strncmp@n+1)^0,c
  2175  001786  0E02               	movlw	2
  2176  001788  6E05               	movwf	strncmp@n^0,c
  2177  00178A  ECEF  F019         	call	_strncmp	;wreg free
  2178  00178E  5001               	movf	?_strncmp^0,w,c
  2179  001790  1002               	iorwf	(?_strncmp+1)^0,w,c
  2180  001792  A4D8               	btfss	status,2,c
  2181  001794  EFCE  F00B         	goto	u4531
  2182  001798  EFD0  F00B         	goto	u4530
  2183  00179C                     u4531:
  2184  00179C  EF3F  F00C         	goto	l4069
  2185  0017A0                     u4530:
  2186  0017A0                     
  2187                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2188  0017A0  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2189  0017A4  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2190  0017A8  CFDE F0B8          	movff	postinc2,??_vfpfcnvrt
  2191  0017AC  CFDD F0B9          	movff	postdec2,??_vfpfcnvrt+1
  2192  0017B0  0E01               	movlw	1
  2193  0017B2  0100               	movlb	0	; () banked
  2194  0017B4  27B8               	addwf	??_vfpfcnvrt& (0+255),f,b
  2195  0017B6  0E00               	movlw	0
  2196  0017B8  23B9               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2197  0017BA  C0B8  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2198  0017BE  C0B9  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2199  0017C2                     	if	0	;tblptru may be non-zero
  2200  0017C2                     	endif
  2201  0017C2                     	if	0	;tblptru may be non-zero
  2202  0017C2                     	endif
  2203  0017C2  0008               	tblrd		*
  2204  0017C4  CFF5 F0C5          	movff	tablat,vfpfcnvrt@c
  2205  0017C8                     
  2206                           ; BSR set to: 0
  2207  0017C8  0EBF               	movlw	191
  2208  0017CA  6FB8               	movwf	??_vfpfcnvrt& (0+255),b
  2209  0017CC  0EFF               	movlw	255
  2210  0017CE  6FB9               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2211  0017D0  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2212  0017D4  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2213  0017D8  CFDE FFF6          	movff	postinc2,tblptrl
  2214  0017DC  CFDD FFF7          	movff	postdec2,tblptrh
  2215  0017E0                     	if	0	;tblptru may be non-zero
  2216  0017E0                     	endif
  2217  0017E0                     	if	0	;tblptru may be non-zero
  2218  0017E0                     	endif
  2219  0017E0  0008               	tblrd		*
  2220  0017E2  50F5               	movf	tablat,w,c
  2221  0017E4  6FBA               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2222  0017E6  6BBB               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2223  0017E8  51B8               	movf	??_vfpfcnvrt& (0+255),w,b
  2224  0017EA  27BA               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2225  0017EC  51B9               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2226  0017EE  23BB               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2227  0017F0  51BB               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2228  0017F2  E107               	bnz	u4541
  2229  0017F4  0E1A               	movlw	26
  2230  0017F6  5DBA               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2231  0017F8  B0D8               	btfsc	status,0,c
  2232  0017FA  EF01  F00C         	goto	u4541
  2233  0017FE  EF03  F00C         	goto	u4540
  2234  001802                     u4541:
  2235  001802  EF1D  F00C         	goto	l4063
  2236  001806                     u4540:
  2237  001806                     
  2238                           ; BSR set to: 0
  2239                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2240  001806  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2241  00180A  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2242  00180E  CFDF F0B8          	movff	indf2,??_vfpfcnvrt
  2243  001812  0E04               	movlw	4
  2244  001814  26DE               	addwf	postinc2,f,c
  2245  001816  CFDF F0B9          	movff	indf2,??_vfpfcnvrt+1
  2246  00181A  0E00               	movlw	0
  2247  00181C  22DD               	addwfc	postdec2,f,c
  2248  00181E  C0B8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2249  001822  C0B9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2250  001826  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  2251  00182A  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  2252  00182E  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  2253  001832  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2256  001836  EF35  F00C         	goto	l1020
  2257  00183A                     l4063:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2261  00183A  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2262  00183E  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2263  001842  CFDF F0B8          	movff	indf2,??_vfpfcnvrt
  2264  001846  0E04               	movlw	4
  2265  001848  26DE               	addwf	postinc2,f,c
  2266  00184A  CFDF F0B9          	movff	indf2,??_vfpfcnvrt+1
  2267  00184E  0E00               	movlw	0
  2268  001850  22DD               	addwfc	postdec2,f,c
  2269  001852  C0B8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2270  001856  C0B9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2271  00185A  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f
  2272  00185E  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+1
  2273  001862  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+2
  2274  001866  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+3
  2275  00186A                     l1020:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2279  00186A  0E02               	movlw	2
  2280  00186C  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281  001870  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282  001874  26DE               	addwf	postinc2,f,c
  2283  001876  0E00               	movlw	0
  2284  001878  22DD               	addwfc	postdec2,f,c
  2285  00187A  EFA3  F00B         	goto	l4049
  2286  00187E                     l4069:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2289  00187E  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2290  001882  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2291  001886  CFDE FFF6          	movff	postinc2,tblptrl
  2292  00188A  CFDD FFF7          	movff	postdec2,tblptrh
  2293  00188E                     	if	0	;tblptru may be non-zero
  2294  00188E                     	endif
  2295  00188E                     	if	0	;tblptru may be non-zero
  2296  00188E                     	endif
  2297  00188E  0008               	tblrd		*
  2298  001890  50F5               	movf	tablat,w,c
  2299  001892  0A25               	xorlw	37
  2300  001894  A4D8               	btfss	status,2,c
  2301  001896  EF4F  F00C         	goto	u4551
  2302  00189A  EF51  F00C         	goto	u4550
  2303  00189E                     u4551:
  2304  00189E  EF69  F00C         	goto	l4079
  2305  0018A2                     u4550:
  2306  0018A2                     
  2307                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2308  0018A2  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2309  0018A6  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2310  0018AA  2ADE               	incf	postinc2,f,c
  2311  0018AC  0E00               	movlw	0
  2312  0018AE  22DD               	addwfc	postdec2,f,c
  2313  0018B0                     
  2314                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2315  0018B0  0E00               	movlw	0
  2316  0018B2  6E02               	movwf	(fputc@c+1)^0,c
  2317  0018B4  0E25               	movlw	37
  2318  0018B6  6E01               	movwf	fputc@c^0,c
  2319  0018B8  C0B2  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2320  0018BC  C0B3  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2321  0018C0  EC5A  F01A         	call	_fputc	;wreg free
  2322  0018C4                     l4075:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2325  0018C4  0E00               	movlw	0
  2326  0018C6  0100               	movlb	0	; () banked
  2327  0018C8  6FB3               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2328  0018CA  0E01               	movlw	1
  2329  0018CC  6FB2               	movwf	?_vfpfcnvrt& (0+255),b
  2330  0018CE  EF92  F00C         	goto	l1015
  2331  0018D2                     l4079:
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2334  0018D2  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2335  0018D6  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2336  0018DA  2ADE               	incf	postinc2,f,c
  2337  0018DC  0E00               	movlw	0
  2338  0018DE  22DD               	addwfc	postdec2,f,c
  2339  0018E0                     
  2340                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2341  0018E0  0E00               	movlw	0
  2342  0018E2  0100               	movlb	0	; () banked
  2343  0018E4  6FB3               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2344  0018E6  0E00               	movlw	0
  2345  0018E8  6FB2               	movwf	?_vfpfcnvrt& (0+255),b
  2346  0018EA  EF92  F00C         	goto	l1015
  2347  0018EE                     l4085:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2350  0018EE  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2351  0018F2  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2352  0018F6  CFDE FFF6          	movff	postinc2,tblptrl
  2353  0018FA  CFDD FFF7          	movff	postdec2,tblptrh
  2354  0018FE                     	if	0	;tblptru may be non-zero
  2355  0018FE                     	endif
  2356  0018FE                     	if	0	;tblptru may be non-zero
  2357  0018FE                     	endif
  2358  0018FE  0008               	tblrd		*
  2359  001900  50F5               	movf	tablat,w,c
  2360  001902  6E01               	movwf	fputc@c^0,c
  2361  001904  6A02               	clrf	(fputc@c+1)^0,c
  2362  001906  C0B2  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2363  00190A  C0B3  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2364  00190E  EC5A  F01A         	call	_fputc	;wreg free
  2365  001912                     
  2366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2367  001912  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2368  001916  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2369  00191A  2ADE               	incf	postinc2,f,c
  2370  00191C  0E00               	movlw	0
  2371  00191E  22DD               	addwfc	postdec2,f,c
  2372  001920  EF62  F00C         	goto	l4075
  2373  001924                     l1015:
  2374  001924  0012               	return		;funcret
  2375  001926                     __end_of_vfpfcnvrt:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function _strncmp *****************
  2379 ;; Defined at:
  2380 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2383 ;;		 -> vfpfcnvrt@ct(3), 
  2384 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2385 ;;		 -> STR_12(3), 
  2386 ;;  n               2    4[COMRAM] unsigned int 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2389 ;;		 -> STR_12(3), 
  2390 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2391 ;;		 -> vfpfcnvrt@ct(3), 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  2    0[COMRAM] int 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2401 ;;      Params:         6       0       0       0       0       0       0       0       0
  2402 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2403 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2404 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2405 ;;Total ram usage:       11 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_vfpfcnvrt
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text4
  2415  0033DE                     __ptext4:
  2416                           	callstack 0
  2417  0033DE                     _strncmp:
  2418                           	callstack 27
  2419  0033DE  C001  F008         	movff	strncmp@_l,strncmp@l
  2420  0033E2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2421  0033E6  C003  F00A         	movff	strncmp@_r,strncmp@r
  2422  0033EA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2423  0033EE  0605               	decf	strncmp@n^0,f,c
  2424  0033F0  A0D8               	btfss	status,0,c
  2425  0033F2  0606               	decf	(strncmp@n+1)^0,f,c
  2426  0033F4  2805               	incf	strncmp@n^0,w,c
  2427  0033F6  E106               	bnz	u4391
  2428  0033F8  2806               	incf	(strncmp@n+1)^0,w,c
  2429  0033FA  A4D8               	btfss	status,2,c
  2430  0033FC  EF02  F01A         	goto	u4391
  2431  003400  EF04  F01A         	goto	u4390
  2432  003404                     u4391:
  2433  003404  EF11  F01A         	goto	l3961
  2434  003408                     u4390:
  2435  003408  0E00               	movlw	0
  2436  00340A  6E02               	movwf	(?_strncmp+1)^0,c
  2437  00340C  0E00               	movlw	0
  2438  00340E  6E01               	movwf	?_strncmp^0,c
  2439  003410  EF59  F01A         	goto	l1135
  2440  003414                     l3959:
  2441  003414  4A08               	infsnz	strncmp@l^0,f,c
  2442  003416  2A09               	incf	(strncmp@l+1)^0,f,c
  2443  003418  4A0A               	infsnz	strncmp@r^0,f,c
  2444  00341A  2A0B               	incf	(strncmp@r+1)^0,f,c
  2445  00341C  0605               	decf	strncmp@n^0,f,c
  2446  00341E  A0D8               	btfss	status,0,c
  2447  003420  0606               	decf	(strncmp@n+1)^0,f,c
  2448  003422                     l3961:
  2449  003422  C008  FFD9         	movff	strncmp@l,fsr2l
  2450  003426  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2451  00342A  50DF               	movf	indf2,w,c
  2452  00342C  B4D8               	btfsc	status,2,c
  2453  00342E  EF1B  F01A         	goto	u4401
  2454  003432  EF1D  F01A         	goto	u4400
  2455  003436                     u4401:
  2456  003436  EF48  F01A         	goto	l3969
  2457  00343A                     u4400:
  2458  00343A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2459  00343E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2460  003442                     	if	0	;tblptru may be non-zero
  2461  003442                     	endif
  2462  003442                     	if	0	;tblptru may be non-zero
  2463  003442                     	endif
  2464  003442  0008               	tblrd		*
  2465  003444  50F5               	movf	tablat,w,c
  2466  003446  0900               	iorlw	0
  2467  003448  B4D8               	btfsc	status,2,c
  2468  00344A  EF29  F01A         	goto	u4411
  2469  00344E  EF2B  F01A         	goto	u4410
  2470  003452                     u4411:
  2471  003452  EF48  F01A         	goto	l3969
  2472  003456                     u4410:
  2473  003456  5005               	movf	strncmp@n^0,w,c
  2474  003458  1006               	iorwf	(strncmp@n+1)^0,w,c
  2475  00345A  B4D8               	btfsc	status,2,c
  2476  00345C  EF32  F01A         	goto	u4421
  2477  003460  EF34  F01A         	goto	u4420
  2478  003464                     u4421:
  2479  003464  EF48  F01A         	goto	l3969
  2480  003468                     u4420:
  2481  003468  C008  FFD9         	movff	strncmp@l,fsr2l
  2482  00346C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2483  003470  50DF               	movf	indf2,w,c
  2484  003472  6E07               	movwf	??_strncmp^0,c
  2485  003474  C00A  FFF6         	movff	strncmp@r,tblptrl
  2486  003478  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2487  00347C                     	if	0	;tblptru may be non-zero
  2488  00347C                     	endif
  2489  00347C                     	if	0	;tblptru may be non-zero
  2490  00347C                     	endif
  2491  00347C  0008               	tblrd		*
  2492  00347E  50F5               	movf	tablat,w,c
  2493  003480  1807               	xorwf	??_strncmp^0,w,c
  2494  003482  B4D8               	btfsc	status,2,c
  2495  003484  EF46  F01A         	goto	u4431
  2496  003488  EF48  F01A         	goto	u4430
  2497  00348C                     u4431:
  2498  00348C  EF0A  F01A         	goto	l3959
  2499  003490                     u4430:
  2500  003490                     l3969:
  2501  003490  C008  FFD9         	movff	strncmp@l,fsr2l
  2502  003494  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2503  003498  50DF               	movf	indf2,w,c
  2504  00349A  6E07               	movwf	??_strncmp^0,c
  2505  00349C  C00A  FFF6         	movff	strncmp@r,tblptrl
  2506  0034A0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2507  0034A4                     	if	0	;tblptru may be non-zero
  2508  0034A4                     	endif
  2509  0034A4                     	if	0	;tblptru may be non-zero
  2510  0034A4                     	endif
  2511  0034A4  0008               	tblrd		*
  2512  0034A6  50F5               	movf	tablat,w,c
  2513  0034A8  5C07               	subwf	??_strncmp^0,w,c
  2514  0034AA  6E01               	movwf	?_strncmp^0,c
  2515  0034AC  6A02               	clrf	(?_strncmp+1)^0,c
  2516  0034AE  A0D8               	btfss	status,0,c
  2517  0034B0  0602               	decf	(?_strncmp+1)^0,f,c
  2518  0034B2                     l1135:
  2519  0034B2  0012               	return		;funcret
  2520  0034B4                     __end_of_strncmp:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function _efgtoa *****************
  2524 ;; Defined at:
  2525 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  2528 ;;		 -> sprintf@f(11), 
  2529 ;;  f               4   22[BANK0 ] PTR struct _IO_FILE
  2530 ;;  c               1   26[BANK0 ] unsigned char 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  u               4   78[BANK0 ] unsigned char 
  2533 ;;  g               4   70[BANK0 ] unsigned char 
  2534 ;;  l               4   64[BANK0 ] unsigned char 
  2535 ;;  h               4   60[BANK0 ] unsigned char 
  2536 ;;  ou              4   46[BANK0 ] unsigned char 
  2537 ;;  n               2   76[BANK0 ] int 
  2538 ;;  e               2   74[BANK0 ] int 
  2539 ;;  i               2   68[BANK0 ] int 
  2540 ;;  w               2   56[BANK0 ] int 
  2541 ;;  p               2   54[BANK0 ] int 
  2542 ;;  sign            2   52[BANK0 ] int 
  2543 ;;  d               2   50[BANK0 ] int 
  2544 ;;  m               2   44[BANK0 ] int 
  2545 ;;  ne              2   42[BANK0 ] int 
  2546 ;;  pp              2   40[BANK0 ] int 
  2547 ;;  t               2   38[BANK0 ] int 
  2548 ;;  mode            1   59[BANK0 ] unsigned char 
  2549 ;;  nmode           1   58[BANK0 ] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  2   20[BANK0 ] int 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2559 ;;      Params:         0       7       0       0       0       0       0       0       0
  2560 ;;      Locals:         0      50       0       0       0       0       0       0       0
  2561 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2562 ;;      Totals:         0      62       0       0       0       0       0       0       0
  2563 ;;Total ram usage:       62 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 4
  2566 ;; This function calls:
  2567 ;;		___awdiv
  2568 ;;		___awmod
  2569 ;;		___fladd
  2570 ;;		___fldiv
  2571 ;;		___fleq
  2572 ;;		___flge
  2573 ;;		___flmul
  2574 ;;		___flneg
  2575 ;;		___flsub
  2576 ;;		___fltol
  2577 ;;		___fpclassifyf
  2578 ;;		_floorf
  2579 ;;		_isupper
  2580 ;;		_pad
  2581 ;;		_strcpy
  2582 ;;		_tolower
  2583 ;; This function is called by:
  2584 ;;		_vfpfcnvrt
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text5
  2589  000828                     __ptext5:
  2590                           	callstack 0
  2591  000828                     _efgtoa:
  2592                           	callstack 23
  2593  000828                     
  2594                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2595  000828  0E00               	movlw	0
  2596  00082A  0100               	movlb	0	; () banked
  2597  00082C  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  2598  00082E  0E00               	movlw	0
  2599  000830  6F94               	movwf	efgtoa@sign& (0+255),b
  2600  000832                     
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2603  000832  C076  F0A6         	movff	efgtoa@f,efgtoa@g
  2604  000836  C077  F0A7         	movff	efgtoa@f+1,efgtoa@g+1
  2605  00083A  C078  F0A8         	movff	efgtoa@f+2,efgtoa@g+2
  2606  00083E  C079  F0A9         	movff	efgtoa@f+3,efgtoa@g+3
  2607  000842                     
  2608                           ; BSR set to: 0
  2609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2610  000842  BFA9               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2611  000844  EF28  F004         	goto	u3870
  2612  000848  EF26  F004         	goto	u3871
  2613  00084C                     u3871:
  2614  00084C  EF3E  F004         	goto	l3625
  2615  000850                     u3870:
  2616  000850                     
  2617                           ; BSR set to: 0
  2618                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2619  000850  0E00               	movlw	0
  2620  000852  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  2621  000854  0E01               	movlw	1
  2622  000856  6F94               	movwf	efgtoa@sign& (0+255),b
  2623  000858                     
  2624                           ; BSR set to: 0
  2625                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2626  000858  C0A6  F001         	movff	efgtoa@g,___flneg@f1
  2627  00085C  C0A7  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2628  000860  C0A8  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2629  000864  C0A9  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2630  000868  EC8B  F01E         	call	___flneg	;wreg free
  2631  00086C  C001  F0A6         	movff	?___flneg,efgtoa@g
  2632  000870  C002  F0A7         	movff	?___flneg+1,efgtoa@g+1
  2633  000874  C003  F0A8         	movff	?___flneg+2,efgtoa@g+2
  2634  000878  C004  F0A9         	movff	?___flneg+3,efgtoa@g+3
  2635  00087C                     l3625:
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2638  00087C  0E00               	movlw	0
  2639  00087E  0100               	movlb	0	; () banked
  2640  000880  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  2641  000882  0E00               	movlw	0
  2642  000884  6FAC               	movwf	efgtoa@n& (0+255),b
  2643  000886                     
  2644                           ; BSR set to: 0
  2645                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2646  000886  C0F9  F098         	movff	_width,efgtoa@w
  2647  00088A  C0FA  F099         	movff	_width+1,efgtoa@w+1
  2648  00088E                     
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2651  00088E  5194               	movf	efgtoa@sign& (0+255),w,b
  2652  000890  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2653  000892  A4D8               	btfss	status,2,c
  2654  000894  EF4E  F004         	goto	u3881
  2655  000898  EF50  F004         	goto	u3880
  2656  00089C                     u3881:
  2657  00089C  EF57  F004         	goto	l3633
  2658  0008A0                     u3880:
  2659  0008A0                     
  2660                           ; BSR set to: 0
  2661  0008A0  A5FD               	btfss	_flags& (0+255),2,b
  2662  0008A2  EF55  F004         	goto	u3891
  2663  0008A6  EF57  F004         	goto	u3890
  2664  0008AA                     u3891:
  2665  0008AA  EF71  F004         	goto	l3645
  2666  0008AE                     u3890:
  2667  0008AE                     l3633:
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2671  0008AE  5194               	movf	efgtoa@sign& (0+255),w,b
  2672  0008B0  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2673  0008B2  A4D8               	btfss	status,2,c
  2674  0008B4  EF5E  F004         	goto	u3901
  2675  0008B8  EF60  F004         	goto	u3900
  2676  0008BC                     u3901:
  2677  0008BC  EF66  F004         	goto	l3637
  2678  0008C0                     u3900:
  2679  0008C0                     
  2680                           ; BSR set to: 0
  2681  0008C0  0E00               	movlw	0
  2682  0008C2  6F81               	movwf	(_efgtoa$1169+1)& (0+255),b
  2683  0008C4  0E2B               	movlw	43
  2684  0008C6  6F80               	movwf	_efgtoa$1169& (0+255),b
  2685  0008C8  EF6A  F004         	goto	l3639
  2686  0008CC                     l3637:
  2687                           
  2688                           ; BSR set to: 0
  2689  0008CC  0E00               	movlw	0
  2690  0008CE  6F81               	movwf	(_efgtoa$1169+1)& (0+255),b
  2691  0008D0  0E2D               	movlw	45
  2692  0008D2  6F80               	movwf	_efgtoa$1169& (0+255),b
  2693  0008D4                     l3639:
  2694                           
  2695                           ; BSR set to: 0
  2696  0008D4  C080  F122         	movff	_efgtoa$1169,_dbuf
  2697  0008D8                     
  2698                           ; BSR set to: 0
  2699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2700  0008D8  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  2701  0008DA  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  2702  0008DC                     
  2703                           ; BSR set to: 0
  2704                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2705  0008DC  0798               	decf	efgtoa@w& (0+255),f,b
  2706  0008DE  A0D8               	btfss	status,0,c
  2707  0008E0  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  2708  0008E2                     l3645:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2712  0008E2  C0A6  F001         	movff	efgtoa@g,___fpclassifyf@x
  2713  0008E6  C0A7  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2714  0008EA  C0A8  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2715  0008EE  C0A9  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2716  0008F2  ECFC  F018         	call	___fpclassifyf	;wreg free
  2717  0008F6  0401               	decf	?___fpclassifyf^0,w,c
  2718  0008F8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2719  0008FA  A4D8               	btfss	status,2,c
  2720  0008FC  EF82  F004         	goto	u3911
  2721  000900  EF84  F004         	goto	u3910
  2722  000904                     u3911:
  2723  000904  EFCE  F004         	goto	l3663
  2724  000908                     u3910:
  2725  000908  0EBF               	movlw	191
  2726  00090A  0100               	movlb	0	; () banked
  2727  00090C  6F7B               	movwf	??_efgtoa& (0+255),b
  2728  00090E  0EFF               	movlw	255
  2729  000910  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  2730  000912  517A               	movf	efgtoa@c& (0+255),w,b
  2731  000914  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  2732  000916  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  2733  000918  517B               	movf	??_efgtoa& (0+255),w,b
  2734  00091A  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  2735  00091C  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  2736  00091E  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2737  000920  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  2738  000922  E107               	bnz	u3921
  2739  000924  0E1A               	movlw	26
  2740  000926  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  2741  000928  B0D8               	btfsc	status,0,c
  2742  00092A  EF99  F004         	goto	u3921
  2743  00092E  EF9B  F004         	goto	u3920
  2744  000932                     u3921:
  2745  000932  EFA9  F004         	goto	l3655
  2746  000936                     u3920:
  2747  000936                     
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2750  000936  0E22               	movlw	low _dbuf
  2751  000938  25AC               	addwf	efgtoa@n& (0+255),w,b
  2752  00093A  6E01               	movwf	strcpy@dest^0,c
  2753  00093C  0E01               	movlw	high _dbuf
  2754  00093E  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2755  000940  6E02               	movwf	(strcpy@dest+1)^0,c
  2756  000942  0E14               	movlw	low STR_2
  2757  000944  6E03               	movwf	strcpy@src^0,c
  2758  000946  0E08               	movlw	high STR_2
  2759  000948  6E04               	movwf	(strcpy@src+1)^0,c
  2760  00094A  EC16  F01D         	call	_strcpy	;wreg free
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2763  00094E  EFB5  F004         	goto	l3657
  2764  000952                     l3655:
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2768  000952  0E22               	movlw	low _dbuf
  2769  000954  25AC               	addwf	efgtoa@n& (0+255),w,b
  2770  000956  6E01               	movwf	strcpy@dest^0,c
  2771  000958  0E01               	movlw	high _dbuf
  2772  00095A  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2773  00095C  6E02               	movwf	(strcpy@dest+1)^0,c
  2774  00095E  0E1C               	movlw	low STR_3
  2775  000960  6E03               	movwf	strcpy@src^0,c
  2776  000962  0E08               	movlw	high STR_3
  2777  000964  6E04               	movwf	(strcpy@src+1)^0,c
  2778  000966  EC16  F01D         	call	_strcpy	;wreg free
  2779  00096A                     l3657:
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2782  00096A  0100               	movlb	0	; () banked
  2783  00096C  0EFD               	movlw	253
  2784  00096E  2798               	addwf	efgtoa@w& (0+255),f,b
  2785  000970  0EFF               	movlw	255
  2786  000972  2399               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2787  000974                     l3659:
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2790  000974  C074  F011         	movff	efgtoa@fp,pad@fp
  2791  000978  C075  F012         	movff	efgtoa@fp+1,pad@fp+1
  2792  00097C  0E22               	movlw	low _dbuf
  2793  00097E  6E13               	movwf	pad@buf^0,c
  2794  000980  0E01               	movlw	high _dbuf
  2795  000982  6E14               	movwf	(pad@buf+1)^0,c
  2796  000984  C098  F015         	movff	efgtoa@w,pad@p
  2797  000988  C099  F016         	movff	efgtoa@w+1,pad@p+1
  2798  00098C  ECBF  F01A         	call	_pad	;wreg free
  2799  000990  C011  F074         	movff	?_pad,?_efgtoa
  2800  000994  C012  F075         	movff	?_pad+1,?_efgtoa+1
  2801  000998  EF18  F00A         	goto	l917
  2802  00099C                     l3663:
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2805  00099C  C0A6  F001         	movff	efgtoa@g,___fpclassifyf@x
  2806  0009A0  C0A7  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2807  0009A4  C0A8  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2808  0009A8  C0A9  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2809  0009AC  ECFC  F018         	call	___fpclassifyf	;wreg free
  2810  0009B0  5001               	movf	?___fpclassifyf^0,w,c
  2811  0009B2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2812  0009B4  A4D8               	btfss	status,2,c
  2813  0009B6  EFDF  F004         	goto	u3931
  2814  0009BA  EFE1  F004         	goto	u3930
  2815  0009BE                     u3931:
  2816  0009BE  EF14  F005         	goto	l3681
  2817  0009C2                     u3930:
  2818  0009C2  0EBF               	movlw	191
  2819  0009C4  0100               	movlb	0	; () banked
  2820  0009C6  6F7B               	movwf	??_efgtoa& (0+255),b
  2821  0009C8  0EFF               	movlw	255
  2822  0009CA  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  2823  0009CC  517A               	movf	efgtoa@c& (0+255),w,b
  2824  0009CE  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  2825  0009D0  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  2826  0009D2  517B               	movf	??_efgtoa& (0+255),w,b
  2827  0009D4  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  2828  0009D6  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  2829  0009D8  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2830  0009DA  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  2831  0009DC  E107               	bnz	u3941
  2832  0009DE  0E1A               	movlw	26
  2833  0009E0  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  2834  0009E2  B0D8               	btfsc	status,0,c
  2835  0009E4  EFF6  F004         	goto	u3941
  2836  0009E8  EFF8  F004         	goto	u3940
  2837  0009EC                     u3941:
  2838  0009EC  EF06  F005         	goto	l3673
  2839  0009F0                     u3940:
  2840  0009F0                     
  2841                           ; BSR set to: 0
  2842                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2843  0009F0  0E22               	movlw	low _dbuf
  2844  0009F2  25AC               	addwf	efgtoa@n& (0+255),w,b
  2845  0009F4  6E01               	movwf	strcpy@dest^0,c
  2846  0009F6  0E01               	movlw	high _dbuf
  2847  0009F8  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2848  0009FA  6E02               	movwf	(strcpy@dest+1)^0,c
  2849  0009FC  0E18               	movlw	low STR_6
  2850  0009FE  6E03               	movwf	strcpy@src^0,c
  2851  000A00  0E08               	movlw	high STR_6
  2852  000A02  6E04               	movwf	(strcpy@src+1)^0,c
  2853  000A04  EC16  F01D         	call	_strcpy	;wreg free
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2856  000A08  EFB5  F004         	goto	l3657
  2857  000A0C                     l3673:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2861  000A0C  0E22               	movlw	low _dbuf
  2862  000A0E  25AC               	addwf	efgtoa@n& (0+255),w,b
  2863  000A10  6E01               	movwf	strcpy@dest^0,c
  2864  000A12  0E01               	movlw	high _dbuf
  2865  000A14  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2866  000A16  6E02               	movwf	(strcpy@dest+1)^0,c
  2867  000A18  0E20               	movlw	low STR_7
  2868  000A1A  6E03               	movwf	strcpy@src^0,c
  2869  000A1C  0E08               	movlw	high STR_7
  2870  000A1E  6E04               	movwf	(strcpy@src+1)^0,c
  2871  000A20  EC16  F01D         	call	_strcpy	;wreg free
  2872  000A24  EFB5  F004         	goto	l3657
  2873  000A28                     l3681:
  2874                           
  2875                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2876  000A28  0E00               	movlw	0
  2877  000A2A  0100               	movlb	0	; () banked
  2878  000A2C  6FAE               	movwf	efgtoa@u& (0+255),b
  2879  000A2E  0E00               	movlw	0
  2880  000A30  6FAF               	movwf	(efgtoa@u+1)& (0+255),b
  2881  000A32  0E80               	movlw	128
  2882  000A34  6FB0               	movwf	(efgtoa@u+2)& (0+255),b
  2883  000A36  0E3F               	movlw	63
  2884  000A38  6FB1               	movwf	(efgtoa@u+3)& (0+255),b
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2887  000A3A  0E00               	movlw	0
  2888  000A3C  6FAB               	movwf	(efgtoa@e+1)& (0+255),b
  2889  000A3E  0E00               	movlw	0
  2890  000A40  6FAA               	movwf	efgtoa@e& (0+255),b
  2891  000A42                     
  2892                           ; BSR set to: 0
  2893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2894  000A42  C0A6  F001         	movff	efgtoa@g,___fleq@ff1
  2895  000A46  C0A7  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2896  000A4A  C0A8  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2897  000A4E  C0A9  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2898  000A52  0E00               	movlw	0
  2899  000A54  6E05               	movwf	___fleq@ff2^0,c
  2900  000A56  0E00               	movlw	0
  2901  000A58  6E06               	movwf	(___fleq@ff2+1)^0,c
  2902  000A5A  0E00               	movlw	0
  2903  000A5C  6E07               	movwf	(___fleq@ff2+2)^0,c
  2904  000A5E  0E00               	movlw	0
  2905  000A60  6E08               	movwf	(___fleq@ff2+3)^0,c
  2906  000A62  EC3A  F01C         	call	___fleq	;wreg free
  2907  000A66  B0D8               	btfsc	status,0,c
  2908  000A68  EF38  F005         	goto	u3951
  2909  000A6C  EF3A  F005         	goto	u3950
  2910  000A70                     u3951:
  2911  000A70  EFBD  F005         	goto	l3699
  2912  000A74                     u3950:
  2913  000A74  EF59  F005         	goto	l3691
  2914  000A78                     l3687:
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2917  000A78  C0AE  F02B         	movff	efgtoa@u,___flmul@b
  2918  000A7C  C0AF  F02C         	movff	efgtoa@u+1,___flmul@b+1
  2919  000A80  C0B0  F02D         	movff	efgtoa@u+2,___flmul@b+2
  2920  000A84  C0B1  F02E         	movff	efgtoa@u+3,___flmul@b+3
  2921  000A88  0E00               	movlw	0
  2922  000A8A  6E2F               	movwf	___flmul@a^0,c
  2923  000A8C  0E00               	movlw	0
  2924  000A8E  6E30               	movwf	(___flmul@a+1)^0,c
  2925  000A90  0E20               	movlw	32
  2926  000A92  6E31               	movwf	(___flmul@a+2)^0,c
  2927  000A94  0E41               	movlw	65
  2928  000A96  6E32               	movwf	(___flmul@a+3)^0,c
  2929  000A98  ECF3  F00E         	call	___flmul	;wreg free
  2930  000A9C  C02B  F0AE         	movff	?___flmul,efgtoa@u
  2931  000AA0  C02C  F0AF         	movff	?___flmul+1,efgtoa@u+1
  2932  000AA4  C02D  F0B0         	movff	?___flmul+2,efgtoa@u+2
  2933  000AA8  C02E  F0B1         	movff	?___flmul+3,efgtoa@u+3
  2934  000AAC                     
  2935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2936  000AAC  0100               	movlb	0	; () banked
  2937  000AAE  4BAA               	infsnz	efgtoa@e& (0+255),f,b
  2938  000AB0  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  2939  000AB2                     l3691:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2942  000AB2  C0A6  F044         	movff	efgtoa@g,___flge@ff1
  2943  000AB6  C0A7  F045         	movff	efgtoa@g+1,___flge@ff1+1
  2944  000ABA  C0A8  F046         	movff	efgtoa@g+2,___flge@ff1+2
  2945  000ABE  C0A9  F047         	movff	efgtoa@g+3,___flge@ff1+3
  2946  000AC2  0E00               	movlw	0
  2947  000AC4  6E2F               	movwf	___flmul@a^0,c
  2948  000AC6  0E00               	movlw	0
  2949  000AC8  6E30               	movwf	(___flmul@a+1)^0,c
  2950  000ACA  0E20               	movlw	32
  2951  000ACC  6E31               	movwf	(___flmul@a+2)^0,c
  2952  000ACE  0E41               	movlw	65
  2953  000AD0  6E32               	movwf	(___flmul@a+3)^0,c
  2954  000AD2  C0AE  F02B         	movff	efgtoa@u,___flmul@b
  2955  000AD6  C0AF  F02C         	movff	efgtoa@u+1,___flmul@b+1
  2956  000ADA  C0B0  F02D         	movff	efgtoa@u+2,___flmul@b+2
  2957  000ADE  C0B1  F02E         	movff	efgtoa@u+3,___flmul@b+3
  2958  000AE2  ECF3  F00E         	call	___flmul	;wreg free
  2959  000AE6  C02B  F048         	movff	?___flmul,___flge@ff2
  2960  000AEA  C02C  F049         	movff	?___flmul+1,___flge@ff2+1
  2961  000AEE  C02D  F04A         	movff	?___flmul+2,___flge@ff2+2
  2962  000AF2  C02E  F04B         	movff	?___flmul+3,___flge@ff2+3
  2963  000AF6  EC7A  F018         	call	___flge	;wreg free
  2964  000AFA  B0D8               	btfsc	status,0,c
  2965  000AFC  EF82  F005         	goto	u3961
  2966  000B00  EF84  F005         	goto	u3960
  2967  000B04                     u3961:
  2968  000B04  EF3C  F005         	goto	l3687
  2969  000B08                     u3960:
  2970  000B08  EFA4  F005         	goto	l3697
  2971  000B0C                     l3693:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2974  000B0C  C0AE  F044         	movff	efgtoa@u,___fldiv@b
  2975  000B10  C0AF  F045         	movff	efgtoa@u+1,___fldiv@b+1
  2976  000B14  C0B0  F046         	movff	efgtoa@u+2,___fldiv@b+2
  2977  000B18  C0B1  F047         	movff	efgtoa@u+3,___fldiv@b+3
  2978  000B1C  0E00               	movlw	0
  2979  000B1E  6E48               	movwf	___fldiv@a^0,c
  2980  000B20  0E00               	movlw	0
  2981  000B22  6E49               	movwf	(___fldiv@a+1)^0,c
  2982  000B24  0E20               	movlw	32
  2983  000B26  6E4A               	movwf	(___fldiv@a+2)^0,c
  2984  000B28  0E41               	movlw	65
  2985  000B2A  6E4B               	movwf	(___fldiv@a+3)^0,c
  2986  000B2C  EC08  F011         	call	___fldiv	;wreg free
  2987  000B30  C044  F0AE         	movff	?___fldiv,efgtoa@u
  2988  000B34  C045  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  2989  000B38  C046  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  2990  000B3C  C047  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  2991  000B40                     
  2992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2993  000B40  0100               	movlb	0	; () banked
  2994  000B42  07AA               	decf	efgtoa@e& (0+255),f,b
  2995  000B44  A0D8               	btfss	status,0,c
  2996  000B46  07AB               	decf	(efgtoa@e+1)& (0+255),f,b
  2997  000B48                     l3697:
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3000  000B48  C0A6  F044         	movff	efgtoa@g,___flge@ff1
  3001  000B4C  C0A7  F045         	movff	efgtoa@g+1,___flge@ff1+1
  3002  000B50  C0A8  F046         	movff	efgtoa@g+2,___flge@ff1+2
  3003  000B54  C0A9  F047         	movff	efgtoa@g+3,___flge@ff1+3
  3004  000B58  C0AE  F048         	movff	efgtoa@u,___flge@ff2
  3005  000B5C  C0AF  F049         	movff	efgtoa@u+1,___flge@ff2+1
  3006  000B60  C0B0  F04A         	movff	efgtoa@u+2,___flge@ff2+2
  3007  000B64  C0B1  F04B         	movff	efgtoa@u+3,___flge@ff2+3
  3008  000B68  EC7A  F018         	call	___flge	;wreg free
  3009  000B6C  A0D8               	btfss	status,0,c
  3010  000B6E  EFBB  F005         	goto	u3971
  3011  000B72  EFBD  F005         	goto	u3970
  3012  000B76                     u3971:
  3013  000B76  EF86  F005         	goto	l3693
  3014  000B7A                     u3970:
  3015  000B7A                     l3699:
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3018  000B7A  C07A  F007         	movff	efgtoa@c,tolower@c
  3019  000B7E  6A08               	clrf	(tolower@c+1)^0,c
  3020  000B80  ECE6  F01D         	call	_tolower	;wreg free
  3021  000B84  5007               	movf	?_tolower^0,w,c
  3022  000B86  0100               	movlb	0	; () banked
  3023  000B88  6F9B               	movwf	efgtoa@mode& (0+255),b
  3024  000B8A                     
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3027  000B8A  C09B  F09A         	movff	efgtoa@mode,efgtoa@nmode
  3028  000B8E                     
  3029                           ; BSR set to: 0
  3030                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3031  000B8E  0E67               	movlw	103
  3032  000B90  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3033  000B92  A4D8               	btfss	status,2,c
  3034  000B94  EFCE  F005         	goto	u3981
  3035  000B98  EFD0  F005         	goto	u3980
  3036  000B9C                     u3981:
  3037  000B9C  EFF6  F005         	goto	l3713
  3038  000BA0                     u3980:
  3039  000BA0                     
  3040                           ; BSR set to: 0
  3041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3042  000BA0  51FB               	movf	_prec& (0+255),w,b
  3043  000BA2  11FC               	iorwf	(_prec+1)& (0+255),w,b
  3044  000BA4  A4D8               	btfss	status,2,c
  3045  000BA6  EFD7  F005         	goto	u3991
  3046  000BAA  EFD9  F005         	goto	u3990
  3047  000BAE                     u3991:
  3048  000BAE  EFDD  F005         	goto	l3709
  3049  000BB2                     u3990:
  3050  000BB2                     
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3053  000BB2  0E00               	movlw	0
  3054  000BB4  6FFC               	movwf	(_prec+1)& (0+255),b
  3055  000BB6  0E01               	movlw	1
  3056  000BB8  6FFB               	movwf	_prec& (0+255),b
  3057  000BBA                     l3709:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3061  000BBA  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  3062  000BBC  EFEA  F005         	goto	u4000
  3063  000BC0  51FC               	movf	(_prec+1)& (0+255),w,b
  3064  000BC2  E106               	bnz	u4001
  3065  000BC4  05FB               	decf	_prec& (0+255),w,b
  3066  000BC6  B0D8               	btfsc	status,0,c
  3067  000BC8  EFE8  F005         	goto	u4001
  3068  000BCC  EFEA  F005         	goto	u4000
  3069  000BD0                     u4001:
  3070  000BD0  EFF0  F005         	goto	l933
  3071  000BD4                     u4000:
  3072  000BD4                     l3711:
  3073                           
  3074                           ; BSR set to: 0
  3075  000BD4  0E00               	movlw	0
  3076  000BD6  6F97               	movwf	(efgtoa@p+1)& (0+255),b
  3077  000BD8  0E06               	movlw	6
  3078  000BDA  6F96               	movwf	efgtoa@p& (0+255),b
  3079  000BDC  EFFF  F005         	goto	l3719
  3080  000BE0                     l933:
  3081                           
  3082                           ; BSR set to: 0
  3083  000BE0  C0FB  F096         	movff	_prec,efgtoa@p
  3084  000BE4  C0FC  F097         	movff	_prec+1,efgtoa@p+1
  3085  000BE8  EFFF  F005         	goto	l3719
  3086  000BEC                     l3713:
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3090  000BEC  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  3091  000BEE  EFFB  F005         	goto	u4011
  3092  000BF2  EFFD  F005         	goto	u4010
  3093  000BF6                     u4011:
  3094  000BF6  EFEA  F005         	goto	l3711
  3095  000BFA                     u4010:
  3096  000BFA  EFF0  F005         	goto	l933
  3097  000BFE                     l3719:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3101  000BFE  0E67               	movlw	103
  3102  000C00  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3103  000C02  A4D8               	btfss	status,2,c
  3104  000C04  EF06  F006         	goto	u4021
  3105  000C08  EF08  F006         	goto	u4020
  3106  000C0C                     u4021:
  3107  000C0C  EF37  F006         	goto	l3729
  3108  000C10                     u4020:
  3109  000C10                     
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3112  000C10  AFAB               	btfss	(efgtoa@e+1)& (0+255),7,b
  3113  000C12  EF16  F006         	goto	u4030
  3114  000C16  0EFC               	movlw	252
  3115  000C18  5DAA               	subwf	efgtoa@e& (0+255),w,b
  3116  000C1A  0EFF               	movlw	255
  3117  000C1C  59AB               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3118  000C1E  A0D8               	btfss	status,0,c
  3119  000C20  EF14  F006         	goto	u4031
  3120  000C24  EF16  F006         	goto	u4030
  3121  000C28                     u4031:
  3122  000C28  EF35  F006         	goto	l3727
  3123  000C2C                     u4030:
  3124  000C2C                     
  3125                           ; BSR set to: 0
  3126  000C2C  0EFF               	movlw	255
  3127  000C2E  6F7B               	movwf	??_efgtoa& (0+255),b
  3128  000C30  0EFF               	movlw	255
  3129  000C32  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  3130  000C34  C096  F07D         	movff	efgtoa@p,??_efgtoa+2
  3131  000C38  C097  F07E         	movff	efgtoa@p+1,??_efgtoa+3
  3132  000C3C  517B               	movf	??_efgtoa& (0+255),w,b
  3133  000C3E  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  3134  000C40  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  3135  000C42  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3136  000C44  51AA               	movf	efgtoa@e& (0+255),w,b
  3137  000C46  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  3138  000C48  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  3139  000C4A  0A80               	xorlw	128
  3140  000C4C  6F7F               	movwf	(??_efgtoa+4)& (0+255),b
  3141  000C4E  51AB               	movf	(efgtoa@e+1)& (0+255),w,b
  3142  000C50  0A80               	xorlw	128
  3143  000C52  597F               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3144  000C54  A0D8               	btfss	status,0,c
  3145  000C56  EF2F  F006         	goto	u4041
  3146  000C5A  EF31  F006         	goto	u4040
  3147  000C5E                     u4041:
  3148  000C5E  EF35  F006         	goto	l3727
  3149  000C62                     u4040:
  3150  000C62                     
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3153  000C62  0E66               	movlw	102
  3154  000C64  6F9A               	movwf	efgtoa@nmode& (0+255),b
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3157  000C66  EF37  F006         	goto	l3729
  3158  000C6A                     l3727:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3162  000C6A  0E65               	movlw	101
  3163  000C6C  6F9A               	movwf	efgtoa@nmode& (0+255),b
  3164  000C6E                     l3729:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3168  000C6E  C096  F08C         	movff	efgtoa@p,efgtoa@m
  3169  000C72  C097  F08D         	movff	efgtoa@p+1,efgtoa@m+1
  3170  000C76                     
  3171                           ; BSR set to: 0
  3172                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3173  000C76  0E67               	movlw	103
  3174  000C78  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3175  000C7A  A4D8               	btfss	status,2,c
  3176  000C7C  EF42  F006         	goto	u4051
  3177  000C80  EF44  F006         	goto	u4050
  3178  000C84                     u4051:
  3179  000C84  EF54  F006         	goto	l3737
  3180  000C88                     u4050:
  3181  000C88                     
  3182                           ; BSR set to: 0
  3183  000C88  0E66               	movlw	102
  3184  000C8A  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3185  000C8C  A4D8               	btfss	status,2,c
  3186  000C8E  EF4B  F006         	goto	u4061
  3187  000C92  EF4D  F006         	goto	u4060
  3188  000C96                     u4061:
  3189  000C96  EF56  F006         	goto	l3739
  3190  000C9A                     u4060:
  3191  000C9A                     
  3192                           ; BSR set to: 0
  3193  000C9A  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3194  000C9C  EF54  F006         	goto	u4070
  3195  000CA0  EF52  F006         	goto	u4071
  3196  000CA4                     u4071:
  3197  000CA4  EF56  F006         	goto	l3739
  3198  000CA8                     u4070:
  3199  000CA8                     l3737:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3203  000CA8  4B8C               	infsnz	efgtoa@m& (0+255),f,b
  3204  000CAA  2B8D               	incf	(efgtoa@m+1)& (0+255),f,b
  3205  000CAC                     l3739:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3209  000CAC  0E66               	movlw	102
  3210  000CAE  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3211  000CB0  A4D8               	btfss	status,2,c
  3212  000CB2  EF5D  F006         	goto	u4081
  3213  000CB6  EF5F  F006         	goto	u4080
  3214  000CBA                     u4081:
  3215  000CBA  EF7F  F006         	goto	l3749
  3216  000CBE                     u4080:
  3217  000CBE                     
  3218                           ; BSR set to: 0
  3219                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3220  000CBE  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3221  000CC0  EF66  F006         	goto	u4090
  3222  000CC4  EF64  F006         	goto	u4091
  3223  000CC8                     u4091:
  3224  000CC8  EF72  F006         	goto	l3745
  3225  000CCC                     u4090:
  3226  000CCC                     
  3227                           ; BSR set to: 0
  3228                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3229  000CCC  0E00               	movlw	0
  3230  000CCE  6FAE               	movwf	efgtoa@u& (0+255),b
  3231  000CD0  0E00               	movlw	0
  3232  000CD2  6FAF               	movwf	(efgtoa@u+1)& (0+255),b
  3233  000CD4  0E80               	movlw	128
  3234  000CD6  6FB0               	movwf	(efgtoa@u+2)& (0+255),b
  3235  000CD8  0E3F               	movlw	63
  3236  000CDA  6FB1               	movwf	(efgtoa@u+3)& (0+255),b
  3237                           
  3238                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3239  000CDC  0E00               	movlw	0
  3240  000CDE  6FAB               	movwf	(efgtoa@e+1)& (0+255),b
  3241  000CE0  0E00               	movlw	0
  3242  000CE2  6FAA               	movwf	efgtoa@e& (0+255),b
  3243  000CE4                     l3745:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3247  000CE4  0E67               	movlw	103
  3248  000CE6  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3249  000CE8  B4D8               	btfsc	status,2,c
  3250  000CEA  EF79  F006         	goto	u4101
  3251  000CEE  EF7B  F006         	goto	u4100
  3252  000CF2                     u4101:
  3253  000CF2  EF7F  F006         	goto	l3749
  3254  000CF6                     u4100:
  3255  000CF6                     
  3256                           ; BSR set to: 0
  3257                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3258  000CF6  51AA               	movf	efgtoa@e& (0+255),w,b
  3259  000CF8  278C               	addwf	efgtoa@m& (0+255),f,b
  3260  000CFA  51AB               	movf	(efgtoa@e+1)& (0+255),w,b
  3261  000CFC  238D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3262  000CFE                     l3749:
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3266  000CFE  0E00               	movlw	0
  3267  000D00  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  3268  000D02  0E00               	movlw	0
  3269  000D04  6FA4               	movwf	efgtoa@i& (0+255),b
  3270  000D06                     
  3271                           ; BSR set to: 0
  3272                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3273  000D06  C0A6  F09C         	movff	efgtoa@g,efgtoa@h
  3274  000D0A  C0A7  F09D         	movff	efgtoa@g+1,efgtoa@h+1
  3275  000D0E  C0A8  F09E         	movff	efgtoa@g+2,efgtoa@h+2
  3276  000D12  C0A9  F09F         	movff	efgtoa@g+3,efgtoa@h+3
  3277  000D16                     
  3278                           ; BSR set to: 0
  3279                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3280  000D16  C0AE  F08E         	movff	efgtoa@u,efgtoa@ou
  3281  000D1A  C0AF  F08F         	movff	efgtoa@u+1,efgtoa@ou+1
  3282  000D1E  C0B0  F090         	movff	efgtoa@u+2,efgtoa@ou+2
  3283  000D22  C0B1  F091         	movff	efgtoa@u+3,efgtoa@ou+3
  3284                           
  3285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3286  000D26  EF10  F007         	goto	l3763
  3287  000D2A                     l3755:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3291  000D2A  C09C  F044         	movff	efgtoa@h,___fldiv@b
  3292  000D2E  C09D  F045         	movff	efgtoa@h+1,___fldiv@b+1
  3293  000D32  C09E  F046         	movff	efgtoa@h+2,___fldiv@b+2
  3294  000D36  C09F  F047         	movff	efgtoa@h+3,___fldiv@b+3
  3295  000D3A  C0AE  F048         	movff	efgtoa@u,___fldiv@a
  3296  000D3E  C0AF  F049         	movff	efgtoa@u+1,___fldiv@a+1
  3297  000D42  C0B0  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  3298  000D46  C0B1  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  3299  000D4A  EC08  F011         	call	___fldiv	;wreg free
  3300  000D4E  C044  F060         	movff	?___fldiv,floorf@x
  3301  000D52  C045  F061         	movff	?___fldiv+1,floorf@x+1
  3302  000D56  C046  F062         	movff	?___fldiv+2,floorf@x+2
  3303  000D5A  C047  F063         	movff	?___fldiv+3,floorf@x+3
  3304  000D5E  EC66  F015         	call	_floorf	;wreg free
  3305  000D62  C060  F0A0         	movff	?_floorf,efgtoa@l
  3306  000D66  C061  F0A1         	movff	?_floorf+1,efgtoa@l+1
  3307  000D6A  C062  F0A2         	movff	?_floorf+2,efgtoa@l+2
  3308  000D6E  C063  F0A3         	movff	?_floorf+3,efgtoa@l+3
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3311  000D72  C0A0  F060         	movff	efgtoa@l,___fltol@f1
  3312  000D76  C0A1  F061         	movff	efgtoa@l+1,___fltol@f1+1
  3313  000D7A  C0A2  F062         	movff	efgtoa@l+2,___fltol@f1+2
  3314  000D7E  C0A3  F063         	movff	efgtoa@l+3,___fltol@f1+3
  3315  000D82  ECF6  F017         	call	___fltol	;wreg free
  3316  000D86  C060  F092         	movff	?___fltol,efgtoa@d
  3317  000D8A  C061  F093         	movff	?___fltol+1,efgtoa@d+1
  3318  000D8E                     
  3319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3320  000D8E  C09C  F023         	movff	efgtoa@h,___flsub@b
  3321  000D92  C09D  F024         	movff	efgtoa@h+1,___flsub@b+1
  3322  000D96  C09E  F025         	movff	efgtoa@h+2,___flsub@b+2
  3323  000D9A  C09F  F026         	movff	efgtoa@h+3,___flsub@b+3
  3324  000D9E  C0AE  F02F         	movff	efgtoa@u,___flmul@a
  3325  000DA2  C0AF  F030         	movff	efgtoa@u+1,___flmul@a+1
  3326  000DA6  C0B0  F031         	movff	efgtoa@u+2,___flmul@a+2
  3327  000DAA  C0B1  F032         	movff	efgtoa@u+3,___flmul@a+3
  3328  000DAE  C0A0  F02B         	movff	efgtoa@l,___flmul@b
  3329  000DB2  C0A1  F02C         	movff	efgtoa@l+1,___flmul@b+1
  3330  000DB6  C0A2  F02D         	movff	efgtoa@l+2,___flmul@b+2
  3331  000DBA  C0A3  F02E         	movff	efgtoa@l+3,___flmul@b+3
  3332  000DBE  ECF3  F00E         	call	___flmul	;wreg free
  3333  000DC2  C02B  F027         	movff	?___flmul,___flsub@a
  3334  000DC6  C02C  F028         	movff	?___flmul+1,___flsub@a+1
  3335  000DCA  C02D  F029         	movff	?___flmul+2,___flsub@a+2
  3336  000DCE  C02E  F02A         	movff	?___flmul+3,___flsub@a+3
  3337  000DD2  EC09  F01E         	call	___flsub	;wreg free
  3338  000DD6  C023  F09C         	movff	?___flsub,efgtoa@h
  3339  000DDA  C024  F09D         	movff	?___flsub+1,efgtoa@h+1
  3340  000DDE  C025  F09E         	movff	?___flsub+2,efgtoa@h+2
  3341  000DE2  C026  F09F         	movff	?___flsub+3,efgtoa@h+3
  3342  000DE6                     
  3343                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3344  000DE6  C0AE  F044         	movff	efgtoa@u,___fldiv@b
  3345  000DEA  C0AF  F045         	movff	efgtoa@u+1,___fldiv@b+1
  3346  000DEE  C0B0  F046         	movff	efgtoa@u+2,___fldiv@b+2
  3347  000DF2  C0B1  F047         	movff	efgtoa@u+3,___fldiv@b+3
  3348  000DF6  0E00               	movlw	0
  3349  000DF8  6E48               	movwf	___fldiv@a^0,c
  3350  000DFA  0E00               	movlw	0
  3351  000DFC  6E49               	movwf	(___fldiv@a+1)^0,c
  3352  000DFE  0E20               	movlw	32
  3353  000E00  6E4A               	movwf	(___fldiv@a+2)^0,c
  3354  000E02  0E41               	movlw	65
  3355  000E04  6E4B               	movwf	(___fldiv@a+3)^0,c
  3356  000E06  EC08  F011         	call	___fldiv	;wreg free
  3357  000E0A  C044  F0AE         	movff	?___fldiv,efgtoa@u
  3358  000E0E  C045  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  3359  000E12  C046  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  3360  000E16  C047  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  3361  000E1A                     
  3362                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3363  000E1A  0100               	movlb	0	; () banked
  3364  000E1C  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  3365  000E1E  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  3366  000E20                     l3763:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3370  000E20  518C               	movf	efgtoa@m& (0+255),w,b
  3371  000E22  5DA4               	subwf	efgtoa@i& (0+255),w,b
  3372  000E24  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  3373  000E26  0A80               	xorlw	128
  3374  000E28  6F7B               	movwf	??_efgtoa& (0+255),b
  3375  000E2A  518D               	movf	(efgtoa@m+1)& (0+255),w,b
  3376  000E2C  0A80               	xorlw	128
  3377  000E2E  597B               	subwfb	??_efgtoa& (0+255),w,b
  3378  000E30  A0D8               	btfss	status,0,c
  3379  000E32  EF1D  F007         	goto	u4111
  3380  000E36  EF1F  F007         	goto	u4110
  3381  000E3A                     u4111:
  3382  000E3A  EF95  F006         	goto	l3755
  3383  000E3E                     u4110:
  3384  000E3E                     
  3385                           ; BSR set to: 0
  3386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3387  000E3E  C0AE  F02B         	movff	efgtoa@u,___flmul@b
  3388  000E42  C0AF  F02C         	movff	efgtoa@u+1,___flmul@b+1
  3389  000E46  C0B0  F02D         	movff	efgtoa@u+2,___flmul@b+2
  3390  000E4A  C0B1  F02E         	movff	efgtoa@u+3,___flmul@b+3
  3391  000E4E  0E00               	movlw	0
  3392  000E50  6E2F               	movwf	___flmul@a^0,c
  3393  000E52  0E00               	movlw	0
  3394  000E54  6E30               	movwf	(___flmul@a+1)^0,c
  3395  000E56  0EA0               	movlw	160
  3396  000E58  6E31               	movwf	(___flmul@a+2)^0,c
  3397  000E5A  0E40               	movlw	64
  3398  000E5C  6E32               	movwf	(___flmul@a+3)^0,c
  3399  000E5E  ECF3  F00E         	call	___flmul	;wreg free
  3400  000E62  C02B  F0A0         	movff	?___flmul,efgtoa@l
  3401  000E66  C02C  F0A1         	movff	?___flmul+1,efgtoa@l+1
  3402  000E6A  C02D  F0A2         	movff	?___flmul+2,efgtoa@l+2
  3403  000E6E  C02E  F0A3         	movff	?___flmul+3,efgtoa@l+3
  3404  000E72                     
  3405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3406  000E72  C09C  F044         	movff	efgtoa@h,___flge@ff1
  3407  000E76  C09D  F045         	movff	efgtoa@h+1,___flge@ff1+1
  3408  000E7A  C09E  F046         	movff	efgtoa@h+2,___flge@ff1+2
  3409  000E7E  C09F  F047         	movff	efgtoa@h+3,___flge@ff1+3
  3410  000E82  C0A0  F048         	movff	efgtoa@l,___flge@ff2
  3411  000E86  C0A1  F049         	movff	efgtoa@l+1,___flge@ff2+1
  3412  000E8A  C0A2  F04A         	movff	efgtoa@l+2,___flge@ff2+2
  3413  000E8E  C0A3  F04B         	movff	efgtoa@l+3,___flge@ff2+3
  3414  000E92  EC7A  F018         	call	___flge	;wreg free
  3415  000E96  B0D8               	btfsc	status,0,c
  3416  000E98  EF50  F007         	goto	u4121
  3417  000E9C  EF52  F007         	goto	u4120
  3418  000EA0                     u4121:
  3419  000EA0  EF5D  F007         	goto	l3771
  3420  000EA4                     u4120:
  3421  000EA4                     
  3422                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3423  000EA4  0E00               	movlw	0
  3424  000EA6  0100               	movlb	0	; () banked
  3425  000EA8  6FA0               	movwf	efgtoa@l& (0+255),b
  3426  000EAA  0E00               	movlw	0
  3427  000EAC  6FA1               	movwf	(efgtoa@l+1)& (0+255),b
  3428  000EAE  0E00               	movlw	0
  3429  000EB0  6FA2               	movwf	(efgtoa@l+2)& (0+255),b
  3430  000EB2  0E00               	movlw	0
  3431  000EB4  6FA3               	movwf	(efgtoa@l+3)& (0+255),b
  3432                           
  3433                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  3434  000EB6  EF86  F007         	goto	l3777
  3435  000EBA                     l3771:
  3436                           
  3437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3438  000EBA  C09C  F001         	movff	efgtoa@h,___fleq@ff1
  3439  000EBE  C09D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3440  000EC2  C09E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3441  000EC6  C09F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3442  000ECA  C0A0  F005         	movff	efgtoa@l,___fleq@ff2
  3443  000ECE  C0A1  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3444  000ED2  C0A2  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3445  000ED6  C0A3  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3446  000EDA  EC3A  F01C         	call	___fleq	;wreg free
  3447  000EDE  A0D8               	btfss	status,0,c
  3448  000EE0  EF74  F007         	goto	u4131
  3449  000EE4  EF76  F007         	goto	u4130
  3450  000EE8                     u4131:
  3451  000EE8  EF86  F007         	goto	l3777
  3452  000EEC                     u4130:
  3453  000EEC  0100               	movlb	0	; () banked
  3454  000EEE  B192               	btfsc	efgtoa@d& (0+255),0,b
  3455  000EF0  EF7C  F007         	goto	u4141
  3456  000EF4  EF7E  F007         	goto	u4140
  3457  000EF8                     u4141:
  3458  000EF8  EF86  F007         	goto	l3777
  3459  000EFC                     u4140:
  3460  000EFC                     
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3463  000EFC  0E00               	movlw	0
  3464  000EFE  6FA0               	movwf	efgtoa@l& (0+255),b
  3465  000F00  0E00               	movlw	0
  3466  000F02  6FA1               	movwf	(efgtoa@l+1)& (0+255),b
  3467  000F04  0E00               	movlw	0
  3468  000F06  6FA2               	movwf	(efgtoa@l+2)& (0+255),b
  3469  000F08  0E00               	movlw	0
  3470  000F0A  6FA3               	movwf	(efgtoa@l+3)& (0+255),b
  3471  000F0C                     l3777:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3474  000F0C  C0A6  F013         	movff	efgtoa@g,___fladd@b
  3475  000F10  C0A7  F014         	movff	efgtoa@g+1,___fladd@b+1
  3476  000F14  C0A8  F015         	movff	efgtoa@g+2,___fladd@b+2
  3477  000F18  C0A9  F016         	movff	efgtoa@g+3,___fladd@b+3
  3478  000F1C  C0A0  F017         	movff	efgtoa@l,___fladd@a
  3479  000F20  C0A1  F018         	movff	efgtoa@l+1,___fladd@a+1
  3480  000F24  C0A2  F019         	movff	efgtoa@l+2,___fladd@a+2
  3481  000F28  C0A3  F01A         	movff	efgtoa@l+3,___fladd@a+3
  3482  000F2C  EC93  F00C         	call	___fladd	;wreg free
  3483  000F30  C013  F09C         	movff	?___fladd,efgtoa@h
  3484  000F34  C014  F09D         	movff	?___fladd+1,efgtoa@h+1
  3485  000F38  C015  F09E         	movff	?___fladd+2,efgtoa@h+2
  3486  000F3C  C016  F09F         	movff	?___fladd+3,efgtoa@h+3
  3487  000F40                     
  3488                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3489  000F40  C09C  F044         	movff	efgtoa@h,___flge@ff1
  3490  000F44  C09D  F045         	movff	efgtoa@h+1,___flge@ff1+1
  3491  000F48  C09E  F046         	movff	efgtoa@h+2,___flge@ff1+2
  3492  000F4C  C09F  F047         	movff	efgtoa@h+3,___flge@ff1+3
  3493  000F50  0E00               	movlw	0
  3494  000F52  6E2F               	movwf	___flmul@a^0,c
  3495  000F54  0E00               	movlw	0
  3496  000F56  6E30               	movwf	(___flmul@a+1)^0,c
  3497  000F58  0E20               	movlw	32
  3498  000F5A  6E31               	movwf	(___flmul@a+2)^0,c
  3499  000F5C  0E41               	movlw	65
  3500  000F5E  6E32               	movwf	(___flmul@a+3)^0,c
  3501  000F60  C08E  F02B         	movff	efgtoa@ou,___flmul@b
  3502  000F64  C08F  F02C         	movff	efgtoa@ou+1,___flmul@b+1
  3503  000F68  C090  F02D         	movff	efgtoa@ou+2,___flmul@b+2
  3504  000F6C  C091  F02E         	movff	efgtoa@ou+3,___flmul@b+3
  3505  000F70  ECF3  F00E         	call	___flmul	;wreg free
  3506  000F74  C02B  F048         	movff	?___flmul,___flge@ff2
  3507  000F78  C02C  F049         	movff	?___flmul+1,___flge@ff2+1
  3508  000F7C  C02D  F04A         	movff	?___flmul+2,___flge@ff2+2
  3509  000F80  C02E  F04B         	movff	?___flmul+3,___flge@ff2+3
  3510  000F84  EC7A  F018         	call	___flge	;wreg free
  3511  000F88  A0D8               	btfss	status,0,c
  3512  000F8A  EFC9  F007         	goto	u4151
  3513  000F8E  EFCB  F007         	goto	u4150
  3514  000F92                     u4151:
  3515  000F92  EFF4  F007         	goto	l3789
  3516  000F96                     u4150:
  3517  000F96                     
  3518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3519  000F96  0100               	movlb	0	; () banked
  3520  000F98  4BAA               	infsnz	efgtoa@e& (0+255),f,b
  3521  000F9A  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  3522  000F9C                     
  3523                           ; BSR set to: 0
  3524                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3525  000F9C  C08E  F02B         	movff	efgtoa@ou,___flmul@b
  3526  000FA0  C08F  F02C         	movff	efgtoa@ou+1,___flmul@b+1
  3527  000FA4  C090  F02D         	movff	efgtoa@ou+2,___flmul@b+2
  3528  000FA8  C091  F02E         	movff	efgtoa@ou+3,___flmul@b+3
  3529  000FAC  0E00               	movlw	0
  3530  000FAE  6E2F               	movwf	___flmul@a^0,c
  3531  000FB0  0E00               	movlw	0
  3532  000FB2  6E30               	movwf	(___flmul@a+1)^0,c
  3533  000FB4  0E20               	movlw	32
  3534  000FB6  6E31               	movwf	(___flmul@a+2)^0,c
  3535  000FB8  0E41               	movlw	65
  3536  000FBA  6E32               	movwf	(___flmul@a+3)^0,c
  3537  000FBC  ECF3  F00E         	call	___flmul	;wreg free
  3538  000FC0  C02B  F08E         	movff	?___flmul,efgtoa@ou
  3539  000FC4  C02C  F08F         	movff	?___flmul+1,efgtoa@ou+1
  3540  000FC8  C02D  F090         	movff	?___flmul+2,efgtoa@ou+2
  3541  000FCC  C02E  F091         	movff	?___flmul+3,efgtoa@ou+3
  3542  000FD0                     
  3543                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3544  000FD0  0E66               	movlw	102
  3545  000FD2  0100               	movlb	0	; () banked
  3546  000FD4  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3547  000FD6  A4D8               	btfss	status,2,c
  3548  000FD8  EFF0  F007         	goto	u4161
  3549  000FDC  EFF2  F007         	goto	u4160
  3550  000FE0                     u4161:
  3551  000FE0  EFF4  F007         	goto	l3789
  3552  000FE4                     u4160:
  3553  000FE4                     
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3556  000FE4  4B8C               	infsnz	efgtoa@m& (0+255),f,b
  3557  000FE6  2B8D               	incf	(efgtoa@m+1)& (0+255),f,b
  3558  000FE8                     l3789:
  3559                           
  3560                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3561  000FE8  C08E  F0AE         	movff	efgtoa@ou,efgtoa@u
  3562  000FEC  C08F  F0AF         	movff	efgtoa@ou+1,efgtoa@u+1
  3563  000FF0  C090  F0B0         	movff	efgtoa@ou+2,efgtoa@u+2
  3564  000FF4  C091  F0B1         	movff	efgtoa@ou+3,efgtoa@u+3
  3565  000FF8                     
  3566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3567  000FF8  0E65               	movlw	101
  3568  000FFA  0100               	movlb	0	; () banked
  3569  000FFC  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3570  000FFE  B4D8               	btfsc	status,2,c
  3571  001000  EF04  F008         	goto	u4171
  3572  001004  EF06  F008         	goto	u4170
  3573  001008                     u4171:
  3574  001008  EF0C  F008         	goto	l3795
  3575  00100C                     u4170:
  3576  00100C                     
  3577                           ; BSR set to: 0
  3578  00100C  C0AA  F08A         	movff	efgtoa@e,efgtoa@ne
  3579  001010  C0AB  F08B         	movff	efgtoa@e+1,efgtoa@ne+1
  3580  001014  EF10  F008         	goto	l961
  3581  001018                     l3795:
  3582                           
  3583                           ; BSR set to: 0
  3584  001018  0E00               	movlw	0
  3585  00101A  6F8B               	movwf	(efgtoa@ne+1)& (0+255),b
  3586  00101C  0E00               	movlw	0
  3587  00101E  6F8A               	movwf	efgtoa@ne& (0+255),b
  3588  001020                     l961:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3592  001020  0E00               	movlw	0
  3593  001022  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  3594  001024  0E00               	movlw	0
  3595  001026  6F88               	movwf	efgtoa@pp& (0+255),b
  3596                           
  3597                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3598  001028  0E00               	movlw	0
  3599  00102A  6F87               	movwf	(efgtoa@t+1)& (0+255),b
  3600  00102C  0E00               	movlw	0
  3601  00102E  6F86               	movwf	efgtoa@t& (0+255),b
  3602                           
  3603                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3604  001030  0E00               	movlw	0
  3605  001032  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  3606  001034  0E00               	movlw	0
  3607  001036  6FA4               	movwf	efgtoa@i& (0+255),b
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3610  001038  EF0B  F009         	goto	l3845
  3611  00103C                     l3797:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3615  00103C  C09C  F044         	movff	efgtoa@h,___fldiv@b
  3616  001040  C09D  F045         	movff	efgtoa@h+1,___fldiv@b+1
  3617  001044  C09E  F046         	movff	efgtoa@h+2,___fldiv@b+2
  3618  001048  C09F  F047         	movff	efgtoa@h+3,___fldiv@b+3
  3619  00104C  C0AE  F048         	movff	efgtoa@u,___fldiv@a
  3620  001050  C0AF  F049         	movff	efgtoa@u+1,___fldiv@a+1
  3621  001054  C0B0  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  3622  001058  C0B1  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  3623  00105C  EC08  F011         	call	___fldiv	;wreg free
  3624  001060  C044  F060         	movff	?___fldiv,floorf@x
  3625  001064  C045  F061         	movff	?___fldiv+1,floorf@x+1
  3626  001068  C046  F062         	movff	?___fldiv+2,floorf@x+2
  3627  00106C  C047  F063         	movff	?___fldiv+3,floorf@x+3
  3628  001070  EC66  F015         	call	_floorf	;wreg free
  3629  001074  C060  F0A0         	movff	?_floorf,efgtoa@l
  3630  001078  C061  F0A1         	movff	?_floorf+1,efgtoa@l+1
  3631  00107C  C062  F0A2         	movff	?_floorf+2,efgtoa@l+2
  3632  001080  C063  F0A3         	movff	?_floorf+3,efgtoa@l+3
  3633                           
  3634                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3635  001084  C0A0  F060         	movff	efgtoa@l,___fltol@f1
  3636  001088  C0A1  F061         	movff	efgtoa@l+1,___fltol@f1+1
  3637  00108C  C0A2  F062         	movff	efgtoa@l+2,___fltol@f1+2
  3638  001090  C0A3  F063         	movff	efgtoa@l+3,___fltol@f1+3
  3639  001094  ECF6  F017         	call	___fltol	;wreg free
  3640  001098  C060  F092         	movff	?___fltol,efgtoa@d
  3641  00109C  C061  F093         	movff	?___fltol+1,efgtoa@d+1
  3642  0010A0                     
  3643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3644  0010A0  0100               	movlb	0	; () banked
  3645  0010A2  B9FD               	btfsc	_flags& (0+255),4,b
  3646  0010A4  EF56  F008         	goto	u4181
  3647  0010A8  EF58  F008         	goto	u4180
  3648  0010AC                     u4181:
  3649  0010AC  EF75  F008         	goto	l3809
  3650  0010B0                     u4180:
  3651  0010B0                     
  3652                           ; BSR set to: 0
  3653  0010B0  5192               	movf	efgtoa@d& (0+255),w,b
  3654  0010B2  1193               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3655  0010B4  A4D8               	btfss	status,2,c
  3656  0010B6  EF5F  F008         	goto	u4191
  3657  0010BA  EF61  F008         	goto	u4190
  3658  0010BE                     u4191:
  3659  0010BE  EF75  F008         	goto	l3809
  3660  0010C2                     u4190:
  3661  0010C2                     
  3662                           ; BSR set to: 0
  3663  0010C2  0E67               	movlw	103
  3664  0010C4  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3665  0010C6  A4D8               	btfss	status,2,c
  3666  0010C8  EF68  F008         	goto	u4201
  3667  0010CC  EF6A  F008         	goto	u4200
  3668  0010D0                     u4201:
  3669  0010D0  EF75  F008         	goto	l3809
  3670  0010D4                     u4200:
  3671  0010D4                     
  3672                           ; BSR set to: 0
  3673  0010D4  BF8B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3674  0010D6  EF71  F008         	goto	u4210
  3675  0010DA  EF6F  F008         	goto	u4211
  3676  0010DE                     u4211:
  3677  0010DE  EF75  F008         	goto	l3809
  3678  0010E2                     u4210:
  3679  0010E2                     
  3680                           ; BSR set to: 0
  3681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3682  0010E2  4B86               	infsnz	efgtoa@t& (0+255),f,b
  3683  0010E4  2B87               	incf	(efgtoa@t+1)& (0+255),f,b
  3684                           
  3685                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3686  0010E6  EFBF  F008         	goto	l3837
  3687  0010EA                     l3809:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3691  0010EA  5188               	movf	efgtoa@pp& (0+255),w,b
  3692  0010EC  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3693  0010EE  A4D8               	btfss	status,2,c
  3694  0010F0  EF7C  F008         	goto	u4221
  3695  0010F4  EF7E  F008         	goto	u4220
  3696  0010F8                     u4221:
  3697  0010F8  EFA8  F008         	goto	l3829
  3698  0010FC                     u4220:
  3699  0010FC                     
  3700                           ; BSR set to: 0
  3701  0010FC  BF8B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3702  0010FE  EF85  F008         	goto	u4230
  3703  001102  EF83  F008         	goto	u4231
  3704  001106                     u4231:
  3705  001106  EFA8  F008         	goto	l3829
  3706  00110A                     u4230:
  3707  00110A                     
  3708                           ; BSR set to: 0
  3709                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3710  00110A  0E22               	movlw	low _dbuf
  3711  00110C  25AC               	addwf	efgtoa@n& (0+255),w,b
  3712  00110E  6ED9               	movwf	fsr2l,c
  3713  001110  0E01               	movlw	high _dbuf
  3714  001112  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3715  001114  6EDA               	movwf	fsr2h,c
  3716  001116  0E2E               	movlw	46
  3717  001118  6EDF               	movwf	indf2,c
  3718  00111A                     
  3719                           ; BSR set to: 0
  3720  00111A  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  3721  00111C  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  3722  00111E                     
  3723                           ; BSR set to: 0
  3724                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3725  00111E  0798               	decf	efgtoa@w& (0+255),f,b
  3726  001120  A0D8               	btfss	status,0,c
  3727  001122  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  3728  001124                     
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3731  001124  0E00               	movlw	0
  3732  001126  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  3733  001128  0E01               	movlw	1
  3734  00112A  6F88               	movwf	efgtoa@pp& (0+255),b
  3735  00112C  EFA8  F008         	goto	l3829
  3736  001130                     l3821:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3740  001130  0E22               	movlw	low _dbuf
  3741  001132  25AC               	addwf	efgtoa@n& (0+255),w,b
  3742  001134  6ED9               	movwf	fsr2l,c
  3743  001136  0E01               	movlw	high _dbuf
  3744  001138  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3745  00113A  6EDA               	movwf	fsr2h,c
  3746  00113C  0E30               	movlw	48
  3747  00113E  6EDF               	movwf	indf2,c
  3748  001140                     
  3749                           ; BSR set to: 0
  3750  001140  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  3751  001142  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  3752  001144                     
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3755  001144  0798               	decf	efgtoa@w& (0+255),f,b
  3756  001146  A0D8               	btfss	status,0,c
  3757  001148  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  3758  00114A                     
  3759                           ; BSR set to: 0
  3760                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3761  00114A  0786               	decf	efgtoa@t& (0+255),f,b
  3762  00114C  A0D8               	btfss	status,0,c
  3763  00114E  0787               	decf	(efgtoa@t+1)& (0+255),f,b
  3764  001150                     l3829:
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3768  001150  5186               	movf	efgtoa@t& (0+255),w,b
  3769  001152  1187               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3770  001154  A4D8               	btfss	status,2,c
  3771  001156  EFAF  F008         	goto	u4241
  3772  00115A  EFB1  F008         	goto	u4240
  3773  00115E                     u4241:
  3774  00115E  EF98  F008         	goto	l3821
  3775  001162                     u4240:
  3776  001162                     
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3779  001162  0E22               	movlw	low _dbuf
  3780  001164  25AC               	addwf	efgtoa@n& (0+255),w,b
  3781  001166  6ED9               	movwf	fsr2l,c
  3782  001168  0E01               	movlw	high _dbuf
  3783  00116A  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3784  00116C  6EDA               	movwf	fsr2h,c
  3785  00116E  5192               	movf	efgtoa@d& (0+255),w,b
  3786  001170  0F30               	addlw	48
  3787  001172  6EDF               	movwf	indf2,c
  3788  001174                     
  3789                           ; BSR set to: 0
  3790  001174  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  3791  001176  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  3792  001178                     
  3793                           ; BSR set to: 0
  3794                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3795  001178  0798               	decf	efgtoa@w& (0+255),f,b
  3796  00117A  A0D8               	btfss	status,0,c
  3797  00117C  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  3798  00117E                     l3837:
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3802  00117E  C09C  F023         	movff	efgtoa@h,___flsub@b
  3803  001182  C09D  F024         	movff	efgtoa@h+1,___flsub@b+1
  3804  001186  C09E  F025         	movff	efgtoa@h+2,___flsub@b+2
  3805  00118A  C09F  F026         	movff	efgtoa@h+3,___flsub@b+3
  3806  00118E  C0AE  F02F         	movff	efgtoa@u,___flmul@a
  3807  001192  C0AF  F030         	movff	efgtoa@u+1,___flmul@a+1
  3808  001196  C0B0  F031         	movff	efgtoa@u+2,___flmul@a+2
  3809  00119A  C0B1  F032         	movff	efgtoa@u+3,___flmul@a+3
  3810  00119E  C0A0  F02B         	movff	efgtoa@l,___flmul@b
  3811  0011A2  C0A1  F02C         	movff	efgtoa@l+1,___flmul@b+1
  3812  0011A6  C0A2  F02D         	movff	efgtoa@l+2,___flmul@b+2
  3813  0011AA  C0A3  F02E         	movff	efgtoa@l+3,___flmul@b+3
  3814  0011AE  ECF3  F00E         	call	___flmul	;wreg free
  3815  0011B2  C02B  F027         	movff	?___flmul,___flsub@a
  3816  0011B6  C02C  F028         	movff	?___flmul+1,___flsub@a+1
  3817  0011BA  C02D  F029         	movff	?___flmul+2,___flsub@a+2
  3818  0011BE  C02E  F02A         	movff	?___flmul+3,___flsub@a+3
  3819  0011C2  EC09  F01E         	call	___flsub	;wreg free
  3820  0011C6  C023  F09C         	movff	?___flsub,efgtoa@h
  3821  0011CA  C024  F09D         	movff	?___flsub+1,efgtoa@h+1
  3822  0011CE  C025  F09E         	movff	?___flsub+2,efgtoa@h+2
  3823  0011D2  C026  F09F         	movff	?___flsub+3,efgtoa@h+3
  3824  0011D6                     
  3825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3826  0011D6  C0AE  F044         	movff	efgtoa@u,___fldiv@b
  3827  0011DA  C0AF  F045         	movff	efgtoa@u+1,___fldiv@b+1
  3828  0011DE  C0B0  F046         	movff	efgtoa@u+2,___fldiv@b+2
  3829  0011E2  C0B1  F047         	movff	efgtoa@u+3,___fldiv@b+3
  3830  0011E6  0E00               	movlw	0
  3831  0011E8  6E48               	movwf	___fldiv@a^0,c
  3832  0011EA  0E00               	movlw	0
  3833  0011EC  6E49               	movwf	(___fldiv@a+1)^0,c
  3834  0011EE  0E20               	movlw	32
  3835  0011F0  6E4A               	movwf	(___fldiv@a+2)^0,c
  3836  0011F2  0E41               	movlw	65
  3837  0011F4  6E4B               	movwf	(___fldiv@a+3)^0,c
  3838  0011F6  EC08  F011         	call	___fldiv	;wreg free
  3839  0011FA  C044  F0AE         	movff	?___fldiv,efgtoa@u
  3840  0011FE  C045  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  3841  001202  C046  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  3842  001206  C047  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  3843  00120A                     
  3844                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3845  00120A  0100               	movlb	0	; () banked
  3846  00120C  078A               	decf	efgtoa@ne& (0+255),f,b
  3847  00120E  A0D8               	btfss	status,0,c
  3848  001210  078B               	decf	(efgtoa@ne+1)& (0+255),f,b
  3849  001212                     
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3852  001212  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  3853  001214  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  3854  001216                     l3845:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3858  001216  518C               	movf	efgtoa@m& (0+255),w,b
  3859  001218  5DA4               	subwf	efgtoa@i& (0+255),w,b
  3860  00121A  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  3861  00121C  0A80               	xorlw	128
  3862  00121E  6F7B               	movwf	??_efgtoa& (0+255),b
  3863  001220  518D               	movf	(efgtoa@m+1)& (0+255),w,b
  3864  001222  0A80               	xorlw	128
  3865  001224  597B               	subwfb	??_efgtoa& (0+255),w,b
  3866  001226  B0D8               	btfsc	status,0,c
  3867  001228  EF18  F009         	goto	u4251
  3868  00122C  EF1A  F009         	goto	u4250
  3869  001230                     u4251:
  3870  001230  EF28  F009         	goto	l3849
  3871  001234                     u4250:
  3872  001234                     
  3873                           ; BSR set to: 0
  3874  001234  BFAD               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3875  001236  EF26  F009         	goto	u4261
  3876  00123A  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  3877  00123C  E109               	bnz	u4260
  3878  00123E  0E4B               	movlw	75
  3879  001240  5DAC               	subwf	efgtoa@n& (0+255),w,b
  3880  001242  A0D8               	btfss	status,0,c
  3881  001244  EF26  F009         	goto	u4261
  3882  001248  EF28  F009         	goto	u4260
  3883  00124C                     u4261:
  3884  00124C  EF1E  F008         	goto	l3797
  3885  001250                     u4260:
  3886  001250                     l3849:
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3890  001250  5188               	movf	efgtoa@pp& (0+255),w,b
  3891  001252  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3892  001254  A4D8               	btfss	status,2,c
  3893  001256  EF2F  F009         	goto	u4271
  3894  00125A  EF31  F009         	goto	u4270
  3895  00125E                     u4271:
  3896  00125E  EF42  F009         	goto	l3857
  3897  001262                     u4270:
  3898  001262                     
  3899                           ; BSR set to: 0
  3900  001262  A9FD               	btfss	_flags& (0+255),4,b
  3901  001264  EF36  F009         	goto	u4281
  3902  001268  EF38  F009         	goto	u4280
  3903  00126C                     u4281:
  3904  00126C  EF42  F009         	goto	l3857
  3905  001270                     u4280:
  3906  001270                     
  3907                           ; BSR set to: 0
  3908                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3909  001270  0E22               	movlw	low _dbuf
  3910  001272  25AC               	addwf	efgtoa@n& (0+255),w,b
  3911  001274  6ED9               	movwf	fsr2l,c
  3912  001276  0E01               	movlw	high _dbuf
  3913  001278  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3914  00127A  6EDA               	movwf	fsr2h,c
  3915  00127C  0E2E               	movlw	46
  3916  00127E  6EDF               	movwf	indf2,c
  3917  001280                     
  3918                           ; BSR set to: 0
  3919  001280  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  3920  001282  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  3921  001284                     l3857:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3925  001284  0E22               	movlw	low _dbuf
  3926  001286  25AC               	addwf	efgtoa@n& (0+255),w,b
  3927  001288  6ED9               	movwf	fsr2l,c
  3928  00128A  0E01               	movlw	high _dbuf
  3929  00128C  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3930  00128E  6EDA               	movwf	fsr2h,c
  3931  001290  0E00               	movlw	0
  3932  001292  6EDF               	movwf	indf2,c
  3933  001294                     
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3936  001294  0E65               	movlw	101
  3937  001296  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3938  001298  A4D8               	btfss	status,2,c
  3939  00129A  EF51  F009         	goto	u4291
  3940  00129E  EF53  F009         	goto	u4290
  3941  0012A2                     u4291:
  3942  0012A2  EFBA  F004         	goto	l3659
  3943  0012A6                     u4290:
  3944  0012A6                     
  3945                           ; BSR set to: 0
  3946                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3947  0012A6  0E00               	movlw	0
  3948  0012A8  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  3949  0012AA  0E4F               	movlw	79
  3950  0012AC  6FA4               	movwf	efgtoa@i& (0+255),b
  3951  0012AE                     
  3952                           ; BSR set to: 0
  3953                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3954  0012AE  0E22               	movlw	low _dbuf
  3955  0012B0  25A4               	addwf	efgtoa@i& (0+255),w,b
  3956  0012B2  6ED9               	movwf	fsr2l,c
  3957  0012B4  0E01               	movlw	high _dbuf
  3958  0012B6  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3959  0012B8  6EDA               	movwf	fsr2h,c
  3960  0012BA  0E00               	movlw	0
  3961  0012BC  6EDF               	movwf	indf2,c
  3962  0012BE                     
  3963                           ; BSR set to: 0
  3964                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3965  0012BE  0E00               	movlw	0
  3966  0012C0  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  3967  0012C2  0E00               	movlw	0
  3968  0012C4  6F94               	movwf	efgtoa@sign& (0+255),b
  3969  0012C6                     
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3972  0012C6  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3973  0012C8  EF6A  F009         	goto	u4300
  3974  0012CC  EF68  F009         	goto	u4301
  3975  0012D0                     u4301:
  3976  0012D0  EF72  F009         	goto	l3873
  3977  0012D4                     u4300:
  3978  0012D4                     
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3981  0012D4  0E00               	movlw	0
  3982  0012D6  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  3983  0012D8  0E01               	movlw	1
  3984  0012DA  6F94               	movwf	efgtoa@sign& (0+255),b
  3985  0012DC                     
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3988  0012DC  6DAA               	negf	efgtoa@e& (0+255),b
  3989  0012DE  1FAB               	comf	(efgtoa@e+1)& (0+255),f,b
  3990  0012E0  B0D8               	btfsc	status,0,c
  3991  0012E2  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  3992  0012E4                     l3873:
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3996  0012E4  0E00               	movlw	0
  3997  0012E6  6F97               	movwf	(efgtoa@p+1)& (0+255),b
  3998  0012E8  0E02               	movlw	2
  3999  0012EA  6F96               	movwf	efgtoa@p& (0+255),b
  4000                           
  4001                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4002  0012EC  EFA3  F009         	goto	l3885
  4003  0012F0                     l3875:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4007  0012F0  07A4               	decf	efgtoa@i& (0+255),f,b
  4008  0012F2  A0D8               	btfss	status,0,c
  4009  0012F4  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  4010  0012F6                     
  4011                           ; BSR set to: 0
  4012                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4013  0012F6  0E22               	movlw	low _dbuf
  4014  0012F8  25A4               	addwf	efgtoa@i& (0+255),w,b
  4015  0012FA  6ED9               	movwf	fsr2l,c
  4016  0012FC  0E01               	movlw	high _dbuf
  4017  0012FE  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4018  001300  6EDA               	movwf	fsr2h,c
  4019  001302  C0AA  F001         	movff	efgtoa@e,___awmod@dividend
  4020  001306  C0AB  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4021  00130A  0E00               	movlw	0
  4022  00130C  6E04               	movwf	(___awmod@divisor+1)^0,c
  4023  00130E  0E0A               	movlw	10
  4024  001310  6E03               	movwf	___awmod@divisor^0,c
  4025  001312  ECE2  F01B         	call	___awmod	;wreg free
  4026  001316  5001               	movf	?___awmod^0,w,c
  4027  001318  0F30               	addlw	48
  4028  00131A  6EDF               	movwf	indf2,c
  4029  00131C                     
  4030                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4031  00131C  C0AA  F001         	movff	efgtoa@e,___awdiv@dividend
  4032  001320  C0AB  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4033  001324  0E00               	movlw	0
  4034  001326  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4035  001328  0E0A               	movlw	10
  4036  00132A  6E03               	movwf	___awdiv@divisor^0,c
  4037  00132C  EC22  F01B         	call	___awdiv	;wreg free
  4038  001330  C001  F0AA         	movff	?___awdiv,efgtoa@e
  4039  001334  C002  F0AB         	movff	?___awdiv+1,efgtoa@e+1
  4040  001338                     
  4041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4042  001338  0100               	movlb	0	; () banked
  4043  00133A  0796               	decf	efgtoa@p& (0+255),f,b
  4044  00133C  A0D8               	btfss	status,0,c
  4045  00133E  0797               	decf	(efgtoa@p+1)& (0+255),f,b
  4046  001340                     
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4049  001340  0798               	decf	efgtoa@w& (0+255),f,b
  4050  001342  A0D8               	btfss	status,0,c
  4051  001344  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4052  001346                     l3885:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4056  001346  51AA               	movf	efgtoa@e& (0+255),w,b
  4057  001348  11AB               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4058  00134A  A4D8               	btfss	status,2,c
  4059  00134C  EFAA  F009         	goto	u4311
  4060  001350  EFAC  F009         	goto	u4310
  4061  001354                     u4311:
  4062  001354  EF78  F009         	goto	l3875
  4063  001358                     u4310:
  4064  001358                     
  4065                           ; BSR set to: 0
  4066  001358  BF97               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4067  00135A  EFB9  F009         	goto	u4320
  4068  00135E  5197               	movf	(efgtoa@p+1)& (0+255),w,b
  4069  001360  E106               	bnz	u4321
  4070  001362  0596               	decf	efgtoa@p& (0+255),w,b
  4071  001364  B0D8               	btfsc	status,0,c
  4072  001366  EFB7  F009         	goto	u4321
  4073  00136A  EFB9  F009         	goto	u4320
  4074  00136E                     u4321:
  4075  00136E  EF78  F009         	goto	l3875
  4076  001372                     u4320:
  4077  001372                     
  4078                           ; BSR set to: 0
  4079                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  4080  001372  07A4               	decf	efgtoa@i& (0+255),f,b
  4081  001374  A0D8               	btfss	status,0,c
  4082  001376  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  4083  001378                     
  4084                           ; BSR set to: 0
  4085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4086  001378  5194               	movf	efgtoa@sign& (0+255),w,b
  4087  00137A  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4088  00137C  A4D8               	btfss	status,2,c
  4089  00137E  EFC3  F009         	goto	u4331
  4090  001382  EFC5  F009         	goto	u4330
  4091  001386                     u4331:
  4092  001386  EFCB  F009         	goto	l3895
  4093  00138A                     u4330:
  4094  00138A                     
  4095                           ; BSR set to: 0
  4096  00138A  0E00               	movlw	0
  4097  00138C  6F83               	movwf	(_efgtoa$1177+1)& (0+255),b
  4098  00138E  0E2B               	movlw	43
  4099  001390  6F82               	movwf	_efgtoa$1177& (0+255),b
  4100  001392  EFCF  F009         	goto	l3897
  4101  001396                     l3895:
  4102                           
  4103                           ; BSR set to: 0
  4104  001396  0E00               	movlw	0
  4105  001398  6F83               	movwf	(_efgtoa$1177+1)& (0+255),b
  4106  00139A  0E2D               	movlw	45
  4107  00139C  6F82               	movwf	_efgtoa$1177& (0+255),b
  4108  00139E                     l3897:
  4109                           
  4110                           ; BSR set to: 0
  4111  00139E  0E22               	movlw	low _dbuf
  4112  0013A0  25A4               	addwf	efgtoa@i& (0+255),w,b
  4113  0013A2  6ED9               	movwf	fsr2l,c
  4114  0013A4  0E01               	movlw	high _dbuf
  4115  0013A6  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4116  0013A8  6EDA               	movwf	fsr2h,c
  4117  0013AA  C082  FFDF         	movff	_efgtoa$1177,indf2
  4118  0013AE                     
  4119                           ; BSR set to: 0
  4120                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4121  0013AE  0798               	decf	efgtoa@w& (0+255),f,b
  4122  0013B0  A0D8               	btfss	status,0,c
  4123  0013B2  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4124  0013B4                     
  4125                           ; BSR set to: 0
  4126                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4127  0013B4  07A4               	decf	efgtoa@i& (0+255),f,b
  4128  0013B6  A0D8               	btfss	status,0,c
  4129  0013B8  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  4130  0013BA                     
  4131                           ; BSR set to: 0
  4132  0013BA  0EBF               	movlw	191
  4133  0013BC  6F7B               	movwf	??_efgtoa& (0+255),b
  4134  0013BE  0EFF               	movlw	255
  4135  0013C0  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  4136  0013C2  517A               	movf	efgtoa@c& (0+255),w,b
  4137  0013C4  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  4138  0013C6  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  4139  0013C8  517B               	movf	??_efgtoa& (0+255),w,b
  4140  0013CA  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  4141  0013CC  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  4142  0013CE  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4143  0013D0  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  4144  0013D2  E109               	bnz	u4340
  4145  0013D4  0E1A               	movlw	26
  4146  0013D6  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  4147  0013D8  A0D8               	btfss	status,0,c
  4148  0013DA  EFF1  F009         	goto	u4341
  4149  0013DE  EFF3  F009         	goto	u4340
  4150  0013E2                     u4341:
  4151  0013E2  EFF9  F009         	goto	l3909
  4152  0013E6                     u4340:
  4153  0013E6                     
  4154                           ; BSR set to: 0
  4155  0013E6  0E00               	movlw	0
  4156  0013E8  6F85               	movwf	(_efgtoa$1178+1)& (0+255),b
  4157  0013EA  0E65               	movlw	101
  4158  0013EC  6F84               	movwf	_efgtoa$1178& (0+255),b
  4159  0013EE  EFFD  F009         	goto	l3911
  4160  0013F2                     l3909:
  4161                           
  4162                           ; BSR set to: 0
  4163  0013F2  0E00               	movlw	0
  4164  0013F4  6F85               	movwf	(_efgtoa$1178+1)& (0+255),b
  4165  0013F6  0E45               	movlw	69
  4166  0013F8  6F84               	movwf	_efgtoa$1178& (0+255),b
  4167  0013FA                     l3911:
  4168                           
  4169                           ; BSR set to: 0
  4170  0013FA  0E22               	movlw	low _dbuf
  4171  0013FC  25A4               	addwf	efgtoa@i& (0+255),w,b
  4172  0013FE  6ED9               	movwf	fsr2l,c
  4173  001400  0E01               	movlw	high _dbuf
  4174  001402  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4175  001404  6EDA               	movwf	fsr2h,c
  4176  001406  C084  FFDF         	movff	_efgtoa$1178,indf2
  4177  00140A                     
  4178                           ; BSR set to: 0
  4179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4180  00140A  0798               	decf	efgtoa@w& (0+255),f,b
  4181  00140C  A0D8               	btfss	status,0,c
  4182  00140E  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4183  001410                     
  4184                           ; BSR set to: 0
  4185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4186  001410  0E22               	movlw	low _dbuf
  4187  001412  25AC               	addwf	efgtoa@n& (0+255),w,b
  4188  001414  6E01               	movwf	strcpy@dest^0,c
  4189  001416  0E01               	movlw	high _dbuf
  4190  001418  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4191  00141A  6E02               	movwf	(strcpy@dest+1)^0,c
  4192  00141C  0E22               	movlw	low _dbuf
  4193  00141E  25A4               	addwf	efgtoa@i& (0+255),w,b
  4194  001420  6E03               	movwf	strcpy@src^0,c
  4195  001422  0E01               	movlw	high _dbuf
  4196  001424  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4197  001426  6E04               	movwf	(strcpy@src+1)^0,c
  4198  001428  EC16  F01D         	call	_strcpy	;wreg free
  4199  00142C  EFBA  F004         	goto	l3659
  4200  001430                     l917:
  4201  001430  0012               	return		;funcret
  4202  001432                     __end_of_efgtoa:
  4203                           	callstack 0
  4204                           
  4205 ;; *************** function _tolower *****************
  4206 ;; Defined at:
  4207 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  c               2    6[COMRAM] int 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  2    6[COMRAM] int 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4221 ;;      Params:         2       0       0       0       0       0       0       0       0
  4222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4223 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4224 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4225 ;;Total ram usage:        6 bytes
  4226 ;; Hardware stack levels used: 1
  4227 ;; Hardware stack levels required when called: 1
  4228 ;; This function calls:
  4229 ;;		_isupper
  4230 ;; This function is called by:
  4231 ;;		_efgtoa
  4232 ;;		_vfpfcnvrt
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text6
  4237  003BCC                     __ptext6:
  4238                           	callstack 0
  4239  003BCC                     _tolower:
  4240                           	callstack 26
  4241  003BCC  0EBF               	movlw	191
  4242  003BCE  6E09               	movwf	??_tolower^0,c
  4243  003BD0  0EFF               	movlw	255
  4244  003BD2  6E0A               	movwf	(??_tolower+1)^0,c
  4245  003BD4  C007  F00B         	movff	tolower@c,??_tolower+2
  4246  003BD8  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4247  003BDC  5009               	movf	??_tolower^0,w,c
  4248  003BDE  260B               	addwf	(??_tolower+2)^0,f,c
  4249  003BE0  500A               	movf	(??_tolower+1)^0,w,c
  4250  003BE2  220C               	addwfc	(??_tolower+3)^0,f,c
  4251  003BE4  500C               	movf	(??_tolower+3)^0,w,c
  4252  003BE6  E107               	bnz	u3721
  4253  003BE8  0E1A               	movlw	26
  4254  003BEA  5C0B               	subwf	(??_tolower+2)^0,w,c
  4255  003BEC  B0D8               	btfsc	status,0,c
  4256  003BEE  EFFB  F01D         	goto	u3721
  4257  003BF2  EFFD  F01D         	goto	u3720
  4258  003BF6                     u3721:
  4259  003BF6  EF04  F01E         	goto	l1145
  4260  003BFA                     u3720:
  4261  003BFA  0E20               	movlw	32
  4262  003BFC  1007               	iorwf	tolower@c^0,w,c
  4263  003BFE  6E07               	movwf	?_tolower^0,c
  4264  003C00  5008               	movf	(tolower@c+1)^0,w,c
  4265  003C02  6E08               	movwf	(?_tolower+1)^0,c
  4266  003C04  EF08  F01E         	goto	l1148
  4267  003C08                     l1145:
  4268  003C08  C007  F007         	movff	tolower@c,?_tolower
  4269  003C0C  C008  F008         	movff	tolower@c+1,?_tolower+1
  4270  003C10                     l1148:
  4271  003C10  0012               	return		;funcret
  4272  003C12                     __end_of_tolower:
  4273                           	callstack 0
  4274                           
  4275 ;; *************** function _isupper *****************
  4276 ;; Defined at:
  4277 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  c               2    0[COMRAM] int 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  2    0[COMRAM] int 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4291 ;;      Params:         2       0       0       0       0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4293 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4294 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4295 ;;Total ram usage:        6 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_efgtoa
  4301 ;;		_vfpfcnvrt
  4302 ;;		_tolower
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text7
  4307  003CDE                     __ptext7:
  4308                           	callstack 0
  4309  003CDE                     _isupper:
  4310                           	callstack 26
  4311  003CDE  0EBF               	movlw	191
  4312  003CE0  6E03               	movwf	??_isupper^0,c
  4313  003CE2  0EFF               	movlw	255
  4314  003CE4  6E04               	movwf	(??_isupper+1)^0,c
  4315  003CE6  C001  F005         	movff	isupper@c,??_isupper+2
  4316  003CEA  C002  F006         	movff	isupper@c+1,??_isupper+3
  4317  003CEE  5003               	movf	??_isupper^0,w,c
  4318  003CF0  2605               	addwf	(??_isupper+2)^0,f,c
  4319  003CF2  5004               	movf	(??_isupper+1)^0,w,c
  4320  003CF4  2206               	addwfc	(??_isupper+3)^0,f,c
  4321  003CF6  5006               	movf	(??_isupper+3)^0,w,c
  4322  003CF8  E10A               	bnz	u2870
  4323  003CFA  0E1A               	movlw	26
  4324  003CFC  5C05               	subwf	(??_isupper+2)^0,w,c
  4325  003CFE  A0D8               	btfss	status,0,c
  4326  003D00  EF84  F01E         	goto	u2871
  4327  003D04  EF87  F01E         	goto	u2870
  4328  003D08                     u2871:
  4329  003D08  0E01               	movlw	1
  4330  003D0A  EF88  F01E         	goto	u2880
  4331  003D0E                     u2870:
  4332  003D0E  0E00               	movlw	0
  4333  003D10                     u2880:
  4334  003D10  6E01               	movwf	?_isupper^0,c
  4335  003D12  6A02               	clrf	(?_isupper+1)^0,c
  4336  003D14  0012               	return		;funcret
  4337  003D16                     __end_of_isupper:
  4338                           	callstack 0
  4339                           
  4340 ;; *************** function _strcpy *****************
  4341 ;; Defined at:
  4342 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4345 ;;		 -> dbuf(80), 
  4346 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4347 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4348 ;;		 -> dbuf(80), 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  d               2    8[COMRAM] PTR unsigned char 
  4351 ;;		 -> dbuf(80), 
  4352 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4353 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4354 ;;		 -> dbuf(80), 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  2    0[COMRAM] PTR unsigned char 
  4357 ;; Registers used:
  4358 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4364 ;;      Params:         4       0       0       0       0       0       0       0       0
  4365 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4366 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4367 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4368 ;;Total ram usage:       10 bytes
  4369 ;; Hardware stack levels used: 1
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_efgtoa
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text8
  4378  003A2C                     __ptext8:
  4379                           	callstack 0
  4380  003A2C                     _strcpy:
  4381                           	callstack 26
  4382  003A2C  C003  F007         	movff	strcpy@src,strcpy@s
  4383  003A30  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4384  003A34  C001  F009         	movff	strcpy@dest,strcpy@d
  4385  003A38  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4386  003A3C                     l3559:
  4387  003A3C  5007               	movf	strcpy@s^0,w,c
  4388  003A3E  6E05               	movwf	??_strcpy^0,c
  4389  003A40  5008               	movf	(strcpy@s+1)^0,w,c
  4390  003A42  6E06               	movwf	(??_strcpy+1)^0,c
  4391  003A44  4A07               	infsnz	strcpy@s^0,f,c
  4392  003A46  2A08               	incf	(strcpy@s+1)^0,f,c
  4393  003A48  C005  FFF6         	movff	??_strcpy,tblptrl
  4394  003A4C  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4395  003A50  6AF8               	clrf	tblptru,c
  4396  003A52  C009  FFD9         	movff	strcpy@d,fsr2l
  4397  003A56  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4398  003A5A  4A09               	infsnz	strcpy@d^0,f,c
  4399  003A5C  2A0A               	incf	(strcpy@d+1)^0,f,c
  4400  003A5E  0E07               	movlw	(high __ramtop+-1)
  4401  003A60  64F7               	cpfsgt	tblptrh,c
  4402  003A62  D003               	bra	u3707
  4403  003A64  0008               	tblrd		*
  4404  003A66  50F5               	movf	tablat,w,c
  4405  003A68  D005               	bra	u3700
  4406  003A6A                     u3707:
  4407  003A6A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4408  003A6E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4409  003A72  50EF               	movf	indf0,w,c
  4410  003A74                     u3700:
  4411  003A74  6EDF               	movwf	indf2,c
  4412  003A76  50DF               	movf	indf2,w,c
  4413  003A78  A4D8               	btfss	status,2,c
  4414  003A7A  EF41  F01D         	goto	u3711
  4415  003A7E  EF43  F01D         	goto	u3710
  4416  003A82                     u3711:
  4417  003A82  EF1E  F01D         	goto	l3559
  4418  003A86                     u3710:
  4419  003A86  0012               	return		;funcret
  4420  003A88                     __end_of_strcpy:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _pad *****************
  4424 ;; Defined at:
  4425 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4428 ;;		 -> sprintf@f(11), 
  4429 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4430 ;;		 -> dbuf(80), 
  4431 ;;  p               2   20[COMRAM] int 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  w               2   25[COMRAM] int 
  4434 ;;  i               2   23[COMRAM] int 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  2   16[COMRAM] int 
  4437 ;; Registers used:
  4438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4444 ;;      Params:         6       0       0       0       0       0       0       0       0
  4445 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4446 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4447 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4448 ;;Total ram usage:       11 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 3
  4451 ;; This function calls:
  4452 ;;		_fputc
  4453 ;;		_fputs
  4454 ;;		_strlen
  4455 ;; This function is called by:
  4456 ;;		_efgtoa
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text9
  4461  00357E                     __ptext9:
  4462                           	callstack 0
  4463  00357E                     _pad:
  4464                           	callstack 23
  4465  00357E                     
  4466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4467  00357E  0100               	movlb	0	; () banked
  4468  003580  A1FD               	btfss	_flags& (0+255),0,b
  4469  003582  EFC5  F01A         	goto	u3591
  4470  003586  EFC7  F01A         	goto	u3590
  4471  00358A                     u3591:
  4472  00358A  EFD1  F01A         	goto	l3517
  4473  00358E                     u3590:
  4474  00358E                     
  4475                           ; BSR set to: 0
  4476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4477  00358E  C013  F00A         	movff	pad@buf,fputs@s
  4478  003592  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4479  003596  C011  F00C         	movff	pad@fp,fputs@fp
  4480  00359A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4481  00359E  EC2C  F01E         	call	_fputs	;wreg free
  4482  0035A2                     l3517:
  4483                           
  4484                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4485  0035A2  BE16               	btfsc	(pad@p+1)^0,7,c
  4486  0035A4  EFD6  F01A         	goto	u3601
  4487  0035A8  EFD8  F01A         	goto	u3600
  4488  0035AC                     u3601:
  4489  0035AC  EFDE  F01A         	goto	l3521
  4490  0035B0                     u3600:
  4491  0035B0  C015  F01A         	movff	pad@p,pad@w
  4492  0035B4  C016  F01B         	movff	pad@p+1,pad@w+1
  4493  0035B8  EFE2  F01A         	goto	l896
  4494  0035BC                     l3521:
  4495  0035BC  0E00               	movlw	0
  4496  0035BE  6E1B               	movwf	(pad@w+1)^0,c
  4497  0035C0  0E00               	movlw	0
  4498  0035C2  6E1A               	movwf	pad@w^0,c
  4499  0035C4                     l896:
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4502  0035C4  0E00               	movlw	0
  4503  0035C6  6E19               	movwf	(pad@i+1)^0,c
  4504  0035C8  0E00               	movlw	0
  4505  0035CA  6E18               	movwf	pad@i^0,c
  4506                           
  4507                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4508  0035CC  EFF4  F01A         	goto	l3527
  4509  0035D0                     l3523:
  4510                           
  4511                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4512  0035D0  0E00               	movlw	0
  4513  0035D2  6E02               	movwf	(fputc@c+1)^0,c
  4514  0035D4  0E20               	movlw	32
  4515  0035D6  6E01               	movwf	fputc@c^0,c
  4516  0035D8  C011  F003         	movff	pad@fp,fputc@fp
  4517  0035DC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4518  0035E0  EC5A  F01A         	call	_fputc	;wreg free
  4519  0035E4                     
  4520                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4521  0035E4  4A18               	infsnz	pad@i^0,f,c
  4522  0035E6  2A19               	incf	(pad@i+1)^0,f,c
  4523  0035E8                     l3527:
  4524                           
  4525                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4526  0035E8  501A               	movf	pad@w^0,w,c
  4527  0035EA  5C18               	subwf	pad@i^0,w,c
  4528  0035EC  5019               	movf	(pad@i+1)^0,w,c
  4529  0035EE  0A80               	xorlw	128
  4530  0035F0  6E17               	movwf	??_pad^0,c
  4531  0035F2  501B               	movf	(pad@w+1)^0,w,c
  4532  0035F4  0A80               	xorlw	128
  4533  0035F6  5817               	subwfb	??_pad^0,w,c
  4534  0035F8  A0D8               	btfss	status,0,c
  4535  0035FA  EF01  F01B         	goto	u3611
  4536  0035FE  EF03  F01B         	goto	u3610
  4537  003602                     u3611:
  4538  003602  EFE8  F01A         	goto	l3523
  4539  003606                     u3610:
  4540  003606                     
  4541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4542  003606  0100               	movlb	0	; () banked
  4543  003608  B1FD               	btfsc	_flags& (0+255),0,b
  4544  00360A  EF09  F01B         	goto	u3621
  4545  00360E  EF0B  F01B         	goto	u3620
  4546  003612                     u3621:
  4547  003612  EF15  F01B         	goto	l3531
  4548  003616                     u3620:
  4549  003616                     
  4550                           ; BSR set to: 0
  4551                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4552  003616  C013  F00A         	movff	pad@buf,fputs@s
  4553  00361A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4554  00361E  C011  F00C         	movff	pad@fp,fputs@fp
  4555  003622  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4556  003626  EC2C  F01E         	call	_fputs	;wreg free
  4557  00362A                     l3531:
  4558                           
  4559                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4560  00362A  C013  F001         	movff	pad@buf,strlen@s
  4561  00362E  C014  F002         	movff	pad@buf+1,strlen@s+1
  4562  003632  ECC3  F01E         	call	_strlen	;wreg free
  4563  003636  501A               	movf	pad@w^0,w,c
  4564  003638  2401               	addwf	?_strlen^0,w,c
  4565  00363A  6E11               	movwf	?_pad^0,c
  4566  00363C  501B               	movf	(pad@w+1)^0,w,c
  4567  00363E  2002               	addwfc	(?_strlen+1)^0,w,c
  4568  003640  6E12               	movwf	(?_pad+1)^0,c
  4569  003642  0012               	return		;funcret
  4570  003644                     __end_of_pad:
  4571                           	callstack 0
  4572                           
  4573 ;; *************** function _strlen *****************
  4574 ;; Defined at:
  4575 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4578 ;;		 -> dbuf(80), 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4581 ;;		 -> dbuf(80), 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  2    0[COMRAM] unsigned int 
  4584 ;; Registers used:
  4585 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4591 ;;      Params:         2       0       0       0       0       0       0       0       0
  4592 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4593 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4594 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4595 ;;Total ram usage:        4 bytes
  4596 ;; Hardware stack levels used: 1
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_pad
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text10
  4605  003D86                     __ptext10:
  4606                           	callstack 0
  4607  003D86                     _strlen:
  4608                           	callstack 25
  4609  003D86  C001  F003         	movff	strlen@s,strlen@a
  4610  003D8A  C002  F004         	movff	strlen@s+1,strlen@a+1
  4611  003D8E  EFCB  F01E         	goto	l3053
  4612  003D92                     l3051:
  4613  003D92  4A01               	infsnz	strlen@s^0,f,c
  4614  003D94  2A02               	incf	(strlen@s+1)^0,f,c
  4615  003D96                     l3053:
  4616  003D96  C001  FFD9         	movff	strlen@s,fsr2l
  4617  003D9A  C002  FFDA         	movff	strlen@s+1,fsr2h
  4618  003D9E  50DF               	movf	indf2,w,c
  4619  003DA0  A4D8               	btfss	status,2,c
  4620  003DA2  EFD5  F01E         	goto	u2861
  4621  003DA6  EFD7  F01E         	goto	u2860
  4622  003DAA                     u2861:
  4623  003DAA  EFC9  F01E         	goto	l3051
  4624  003DAE                     u2860:
  4625  003DAE  5003               	movf	strlen@a^0,w,c
  4626  003DB0  5C01               	subwf	strlen@s^0,w,c
  4627  003DB2  6E01               	movwf	?_strlen^0,c
  4628  003DB4  5004               	movf	(strlen@a+1)^0,w,c
  4629  003DB6  5802               	subwfb	(strlen@s+1)^0,w,c
  4630  003DB8  6E02               	movwf	(?_strlen+1)^0,c
  4631  003DBA  0012               	return		;funcret
  4632  003DBC                     __end_of_strlen:
  4633                           	callstack 0
  4634                           
  4635 ;; *************** function _fputs *****************
  4636 ;; Defined at:
  4637 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4640 ;;		 -> dbuf(80), 
  4641 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4642 ;;		 -> sprintf@f(11), 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  i               2   14[COMRAM] int 
  4645 ;;  c               1   13[COMRAM] unsigned char 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  2    9[COMRAM] int 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4655 ;;      Params:         4       0       0       0       0       0       0       0       0
  4656 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4658 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4659 ;;Total ram usage:        7 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 2
  4662 ;; This function calls:
  4663 ;;		_fputc
  4664 ;; This function is called by:
  4665 ;;		_pad
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text11
  4670  003C58                     __ptext11:
  4671                           	callstack 0
  4672  003C58                     _fputs:
  4673                           	callstack 23
  4674  003C58  0E00               	movlw	0
  4675  003C5A  6E10               	movwf	(fputs@i+1)^0,c
  4676  003C5C  0E00               	movlw	0
  4677  003C5E  6E0F               	movwf	fputs@i^0,c
  4678  003C60  EF3D  F01E         	goto	l3047
  4679  003C64                     l3043:
  4680  003C64  C00E  F001         	movff	fputs@c,fputc@c
  4681  003C68  6A02               	clrf	(fputc@c+1)^0,c
  4682  003C6A  C00C  F003         	movff	fputs@fp,fputc@fp
  4683  003C6E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4684  003C72  EC5A  F01A         	call	_fputc	;wreg free
  4685  003C76  4A0F               	infsnz	fputs@i^0,f,c
  4686  003C78  2A10               	incf	(fputs@i+1)^0,f,c
  4687  003C7A                     l3047:
  4688  003C7A  500F               	movf	fputs@i^0,w,c
  4689  003C7C  240A               	addwf	fputs@s^0,w,c
  4690  003C7E  6ED9               	movwf	fsr2l,c
  4691  003C80  5010               	movf	(fputs@i+1)^0,w,c
  4692  003C82  200B               	addwfc	(fputs@s+1)^0,w,c
  4693  003C84  6EDA               	movwf	fsr2h,c
  4694  003C86  50DF               	movf	indf2,w,c
  4695  003C88  6E0E               	movwf	fputs@c^0,c
  4696  003C8A  500E               	movf	fputs@c^0,w,c
  4697  003C8C  A4D8               	btfss	status,2,c
  4698  003C8E  EF4B  F01E         	goto	u2851
  4699  003C92  EF4D  F01E         	goto	u2850
  4700  003C96                     u2851:
  4701  003C96  EF32  F01E         	goto	l3043
  4702  003C9A                     u2850:
  4703  003C9A  0012               	return		;funcret
  4704  003C9C                     __end_of_fputs:
  4705                           	callstack 0
  4706                           
  4707 ;; *************** function _fputc *****************
  4708 ;; Defined at:
  4709 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  c               2    0[COMRAM] int 
  4712 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4713 ;;		 -> sprintf@f(11), 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  2    0[COMRAM] int 
  4718 ;; Registers used:
  4719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4725 ;;      Params:         4       0       0       0       0       0       0       0       0
  4726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4727 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4728 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4729 ;;Total ram usage:        9 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; Hardware stack levels required when called: 1
  4732 ;; This function calls:
  4733 ;;		_putch
  4734 ;; This function is called by:
  4735 ;;		_pad
  4736 ;;		_vfpfcnvrt
  4737 ;;		_fputs
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text12
  4742  0034B4                     __ptext12:
  4743                           	callstack 0
  4744  0034B4                     _fputc:
  4745                           	callstack 26
  4746  0034B4  5003               	movf	fputc@fp^0,w,c
  4747  0034B6  1004               	iorwf	(fputc@fp+1)^0,w,c
  4748  0034B8  B4D8               	btfsc	status,2,c
  4749  0034BA  EF61  F01A         	goto	u2421
  4750  0034BE  EF63  F01A         	goto	u2420
  4751  0034C2                     u2421:
  4752  0034C2  EF6C  F01A         	goto	l2829
  4753  0034C6                     u2420:
  4754  0034C6  5003               	movf	fputc@fp^0,w,c
  4755  0034C8  1004               	iorwf	(fputc@fp+1)^0,w,c
  4756  0034CA  A4D8               	btfss	status,2,c
  4757  0034CC  EF6A  F01A         	goto	u2431
  4758  0034D0  EF6C  F01A         	goto	u2430
  4759  0034D4                     u2431:
  4760  0034D4  EF71  F01A         	goto	l2831
  4761  0034D8                     u2430:
  4762  0034D8                     l2829:
  4763  0034D8  5001               	movf	fputc@c^0,w,c
  4764  0034DA  EC19  F01F         	call	_putch
  4765  0034DE  EFBE  F01A         	goto	l1108
  4766  0034E2                     l2831:
  4767  0034E2  EE20 F009          	lfsr	2,9
  4768  0034E6  5003               	movf	fputc@fp^0,w,c
  4769  0034E8  26D9               	addwf	fsr2l,f,c
  4770  0034EA  5004               	movf	(fputc@fp+1)^0,w,c
  4771  0034EC  22DA               	addwfc	fsr2h,f,c
  4772  0034EE  50DE               	movf	postinc2,w,c
  4773  0034F0  10DE               	iorwf	postinc2,w,c
  4774  0034F2  B4D8               	btfsc	status,2,c
  4775  0034F4  EF7E  F01A         	goto	u2441
  4776  0034F8  EF80  F01A         	goto	u2440
  4777  0034FC                     u2441:
  4778  0034FC  EF9B  F01A         	goto	l2835
  4779  003500                     u2440:
  4780  003500  EE20 F009          	lfsr	2,9
  4781  003504  5003               	movf	fputc@fp^0,w,c
  4782  003506  26D9               	addwf	fsr2l,f,c
  4783  003508  5004               	movf	(fputc@fp+1)^0,w,c
  4784  00350A  22DA               	addwfc	fsr2h,f,c
  4785  00350C  EE10 F003          	lfsr	1,3
  4786  003510  5003               	movf	fputc@fp^0,w,c
  4787  003512  26E1               	addwf	fsr1l,f,c
  4788  003514  5004               	movf	(fputc@fp+1)^0,w,c
  4789  003516  22E2               	addwfc	fsr1h,f,c
  4790  003518  50DE               	movf	postinc2,w,c
  4791  00351A  5CE6               	subwf	postinc1,w,c
  4792  00351C  50E6               	movf	postinc1,w,c
  4793  00351E  0A80               	xorlw	128
  4794  003520  6E09               	movwf	(??_fputc+4)^0,c
  4795  003522  50DE               	movf	postinc2,w,c
  4796  003524  0A80               	xorlw	128
  4797  003526  5809               	subwfb	(??_fputc+4)^0,w,c
  4798  003528  B0D8               	btfsc	status,0,c
  4799  00352A  EF99  F01A         	goto	u2451
  4800  00352E  EF9B  F01A         	goto	u2450
  4801  003532                     u2451:
  4802  003532  EFBE  F01A         	goto	l1108
  4803  003536                     u2450:
  4804  003536                     l2835:
  4805  003536  EE20 F003          	lfsr	2,3
  4806  00353A  5003               	movf	fputc@fp^0,w,c
  4807  00353C  26D9               	addwf	fsr2l,f,c
  4808  00353E  5004               	movf	(fputc@fp+1)^0,w,c
  4809  003540  22DA               	addwfc	fsr2h,f,c
  4810  003542  CFDE F005          	movff	postinc2,??_fputc
  4811  003546  CFDD F006          	movff	postdec2,??_fputc+1
  4812  00354A  C003  FFD9         	movff	fputc@fp,fsr2l
  4813  00354E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4814  003552  CFDE F007          	movff	postinc2,??_fputc+2
  4815  003556  CFDD F008          	movff	postdec2,??_fputc+3
  4816  00355A  5005               	movf	??_fputc^0,w,c
  4817  00355C  2407               	addwf	(??_fputc+2)^0,w,c
  4818  00355E  6ED9               	movwf	fsr2l,c
  4819  003560  5006               	movf	(??_fputc+1)^0,w,c
  4820  003562  2008               	addwfc	(??_fputc+3)^0,w,c
  4821  003564  6EDA               	movwf	fsr2h,c
  4822  003566  C001  FFDF         	movff	fputc@c,indf2
  4823  00356A  EE20 F003          	lfsr	2,3
  4824  00356E  5003               	movf	fputc@fp^0,w,c
  4825  003570  26D9               	addwf	fsr2l,f,c
  4826  003572  5004               	movf	(fputc@fp+1)^0,w,c
  4827  003574  22DA               	addwfc	fsr2h,f,c
  4828  003576  2ADE               	incf	postinc2,f,c
  4829  003578  0E00               	movlw	0
  4830  00357A  22DD               	addwfc	postdec2,f,c
  4831  00357C                     l1108:
  4832  00357C  0012               	return		;funcret
  4833  00357E                     __end_of_fputc:
  4834                           	callstack 0
  4835                           
  4836 ;; *************** function _putch *****************
  4837 ;; Defined at:
  4838 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  c               1    wreg     unsigned char 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  c               1    0[COMRAM] unsigned char 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4852 ;;      Params:         0       0       0       0       0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4855 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4856 ;;Total ram usage:        0 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_fputc
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text13
  4866  003E32                     __ptext13:
  4867                           	callstack 0
  4868  003E32                     _putch:
  4869                           	callstack 26
  4870  003E32  0012               	return		;funcret
  4871  003E34                     __end_of_putch:
  4872                           	callstack 0
  4873                           
  4874 ;; *************** function _floorf *****************
  4875 ;; Defined at:
  4876 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  x               4    0[BANK0 ] float 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  u               4   16[BANK0 ] struct .
  4881 ;;  m               4   10[BANK0 ] unsigned long 
  4882 ;;  e               2   14[BANK0 ] int 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  4    0[BANK0 ] float 
  4885 ;; Registers used:
  4886 ;;		wreg, status,2, status,0
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4892 ;;      Params:         0       4       0       0       0       0       0       0       0
  4893 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4894 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4895 ;;      Totals:         0      20       0       0       0       0       0       0       0
  4896 ;;Total ram usage:       20 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_efgtoa
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text14
  4906  002ACC                     __ptext14:
  4907                           	callstack 0
  4908  002ACC                     _floorf:
  4909                           	callstack 26
  4910  002ACC  C100  F070         	movff	floorf@F526,floorf@u
  4911  002AD0  C101  F071         	movff	floorf@F526+1,floorf@u+1
  4912  002AD4  C102  F072         	movff	floorf@F526+2,floorf@u+2
  4913  002AD8  C103  F073         	movff	floorf@F526+3,floorf@u+3
  4914  002ADC  C060  F070         	movff	floorf@x,floorf@u
  4915  002AE0  C061  F071         	movff	floorf@x+1,floorf@u+1
  4916  002AE4  C062  F072         	movff	floorf@x+2,floorf@u+2
  4917  002AE8  C063  F073         	movff	floorf@x+3,floorf@u+3
  4918  002AEC  0E81               	movlw	129
  4919  002AEE  0100               	movlb	0	; () banked
  4920  002AF0  6F64               	movwf	??_floorf& (0+255),b
  4921  002AF2  0EFF               	movlw	255
  4922  002AF4  6F65               	movwf	(??_floorf+1)& (0+255),b
  4923  002AF6  C070  F066         	movff	floorf@u,??_floorf+2
  4924  002AFA  C071  F067         	movff	floorf@u+1,??_floorf+3
  4925  002AFE  C072  F068         	movff	floorf@u+2,??_floorf+4
  4926  002B02  C073  F069         	movff	floorf@u+3,??_floorf+5
  4927  002B06  0E18               	movlw	24
  4928  002B08  EF8B  F015         	goto	u3730
  4929  002B0C                     u3735:
  4930  002B0C  90D8               	bcf	status,0,c
  4931  002B0E  3369               	rrcf	(??_floorf+5)& (0+255),f,b
  4932  002B10  3368               	rrcf	(??_floorf+4)& (0+255),f,b
  4933  002B12  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  4934  002B14  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  4935  002B16                     u3730:
  4936  002B16  2EE8               	decfsz	wreg,f,c
  4937  002B18  EF86  F015         	goto	u3735
  4938  002B1C  5166               	movf	(??_floorf+2)& (0+255),w,b
  4939  002B1E  2564               	addwf	??_floorf& (0+255),w,b
  4940  002B20  6F6E               	movwf	floorf@e& (0+255),b
  4941  002B22  0E00               	movlw	0
  4942  002B24  2165               	addwfc	(??_floorf+1)& (0+255),w,b
  4943  002B26  6F6F               	movwf	(floorf@e+1)& (0+255),b
  4944  002B28  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
  4945  002B2A  EFA0  F015         	goto	u3741
  4946  002B2E  516F               	movf	(floorf@e+1)& (0+255),w,b
  4947  002B30  E109               	bnz	u3740
  4948  002B32  0E17               	movlw	23
  4949  002B34  5D6E               	subwf	floorf@e& (0+255),w,b
  4950  002B36  A0D8               	btfss	status,0,c
  4951  002B38  EFA0  F015         	goto	u3741
  4952  002B3C  EFA2  F015         	goto	u3740
  4953  002B40                     u3741:
  4954  002B40  EFAC  F015         	goto	l3577
  4955  002B44                     u3740:
  4956  002B44                     l3575:
  4957                           
  4958                           ; BSR set to: 0
  4959  002B44  C060  F060         	movff	floorf@x,?_floorf
  4960  002B48  C061  F061         	movff	floorf@x+1,?_floorf+1
  4961  002B4C  C062  F062         	movff	floorf@x+2,?_floorf+2
  4962  002B50  C063  F063         	movff	floorf@x+3,?_floorf+3
  4963  002B54  EF70  F016         	goto	l1069
  4964  002B58                     l3577:
  4965                           
  4966                           ; BSR set to: 0
  4967  002B58  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
  4968  002B5A  EFB1  F015         	goto	u3751
  4969  002B5E  EFB3  F015         	goto	u3750
  4970  002B62                     u3751:
  4971  002B62  EF24  F016         	goto	l3587
  4972  002B66                     u3750:
  4973  002B66                     
  4974                           ; BSR set to: 0
  4975  002B66  C06E  F064         	movff	floorf@e,??_floorf
  4976  002B6A  0EFF               	movlw	255
  4977  002B6C  6F65               	movwf	(??_floorf+1)& (0+255),b
  4978  002B6E  0EFF               	movlw	255
  4979  002B70  6F66               	movwf	(??_floorf+2)& (0+255),b
  4980  002B72  0E7F               	movlw	127
  4981  002B74  6F67               	movwf	(??_floorf+3)& (0+255),b
  4982  002B76  0E00               	movlw	0
  4983  002B78  6F68               	movwf	(??_floorf+4)& (0+255),b
  4984  002B7A                     u3765:
  4985  002B7A  6764               	tstfsz	??_floorf& (0+255),b
  4986  002B7C  EFC2  F015         	goto	u3766
  4987  002B80  EFCA  F015         	goto	u3767
  4988  002B84                     u3766:
  4989  002B84  3568               	rlcf	(??_floorf+4)& (0+255),w,b
  4990  002B86  3368               	rrcf	(??_floorf+4)& (0+255),f,b
  4991  002B88  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  4992  002B8A  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  4993  002B8C  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  4994  002B8E  2F64               	decfsz	??_floorf& (0+255),f,b
  4995  002B90  EFBD  F015         	goto	u3765
  4996  002B94                     u3767:
  4997  002B94  C065  F06A         	movff	??_floorf+1,floorf@m
  4998  002B98  C066  F06B         	movff	??_floorf+2,floorf@m+1
  4999  002B9C  C067  F06C         	movff	??_floorf+3,floorf@m+2
  5000  002BA0  C068  F06D         	movff	??_floorf+4,floorf@m+3
  5001  002BA4  0100               	movlb	0	; () banked
  5002  002BA6  516A               	movf	floorf@m& (0+255),w,b
  5003  002BA8  1570               	andwf	floorf@u& (0+255),w,b
  5004  002BAA  6F64               	movwf	??_floorf& (0+255),b
  5005  002BAC  516B               	movf	(floorf@m+1)& (0+255),w,b
  5006  002BAE  1571               	andwf	(floorf@u+1)& (0+255),w,b
  5007  002BB0  6F65               	movwf	(??_floorf+1)& (0+255),b
  5008  002BB2  516C               	movf	(floorf@m+2)& (0+255),w,b
  5009  002BB4  1572               	andwf	(floorf@u+2)& (0+255),w,b
  5010  002BB6  6F66               	movwf	(??_floorf+2)& (0+255),b
  5011  002BB8  516D               	movf	(floorf@m+3)& (0+255),w,b
  5012  002BBA  1573               	andwf	(floorf@u+3)& (0+255),w,b
  5013  002BBC  6F67               	movwf	(??_floorf+3)& (0+255),b
  5014  002BBE  5164               	movf	??_floorf& (0+255),w,b
  5015  002BC0  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  5016  002BC2  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  5017  002BC4  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  5018  002BC6  A4D8               	btfss	status,2,c
  5019  002BC8  EFE8  F015         	goto	u3771
  5020  002BCC  EFEA  F015         	goto	u3770
  5021  002BD0                     u3771:
  5022  002BD0  EFEC  F015         	goto	l3583
  5023  002BD4                     u3770:
  5024  002BD4  EFA2  F015         	goto	l3575
  5025  002BD8                     l3583:
  5026                           
  5027                           ; BSR set to: 0
  5028  002BD8  C070  F064         	movff	floorf@u,??_floorf
  5029  002BDC  C071  F065         	movff	floorf@u+1,??_floorf+1
  5030  002BE0  C072  F066         	movff	floorf@u+2,??_floorf+2
  5031  002BE4  C073  F067         	movff	floorf@u+3,??_floorf+3
  5032  002BE8  0E20               	movlw	32
  5033  002BEA  EFFC  F015         	goto	u3780
  5034  002BEE                     u3785:
  5035  002BEE  90D8               	bcf	status,0,c
  5036  002BF0  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  5037  002BF2  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  5038  002BF4  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  5039  002BF6  3364               	rrcf	??_floorf& (0+255),f,b
  5040  002BF8                     u3780:
  5041  002BF8  2EE8               	decfsz	wreg,f,c
  5042  002BFA  EFF7  F015         	goto	u3785
  5043  002BFE  5164               	movf	??_floorf& (0+255),w,b
  5044  002C00  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  5045  002C02  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  5046  002C04  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  5047  002C06  B4D8               	btfsc	status,2,c
  5048  002C08  EF08  F016         	goto	u3791
  5049  002C0C  EF0A  F016         	goto	u3790
  5050  002C10                     u3791:
  5051  002C10  EF12  F016         	goto	l1072
  5052  002C14                     u3790:
  5053  002C14                     
  5054                           ; BSR set to: 0
  5055  002C14  516A               	movf	floorf@m& (0+255),w,b
  5056  002C16  2770               	addwf	floorf@u& (0+255),f,b
  5057  002C18  516B               	movf	(floorf@m+1)& (0+255),w,b
  5058  002C1A  2371               	addwfc	(floorf@u+1)& (0+255),f,b
  5059  002C1C  516C               	movf	(floorf@m+2)& (0+255),w,b
  5060  002C1E  2372               	addwfc	(floorf@u+2)& (0+255),f,b
  5061  002C20  516D               	movf	(floorf@m+3)& (0+255),w,b
  5062  002C22  2373               	addwfc	(floorf@u+3)& (0+255),f,b
  5063  002C24                     l1072:
  5064                           
  5065                           ; BSR set to: 0
  5066  002C24  1D6A               	comf	floorf@m& (0+255),w,b
  5067  002C26  6F64               	movwf	??_floorf& (0+255),b
  5068  002C28  1D6B               	comf	(floorf@m+1)& (0+255),w,b
  5069  002C2A  6F65               	movwf	(??_floorf+1)& (0+255),b
  5070  002C2C  1D6C               	comf	(floorf@m+2)& (0+255),w,b
  5071  002C2E  6F66               	movwf	(??_floorf+2)& (0+255),b
  5072  002C30  1D6D               	comf	(floorf@m+3)& (0+255),w,b
  5073  002C32  6F67               	movwf	(??_floorf+3)& (0+255),b
  5074  002C34  5164               	movf	??_floorf& (0+255),w,b
  5075  002C36  1770               	andwf	floorf@u& (0+255),f,b
  5076  002C38  5165               	movf	(??_floorf+1)& (0+255),w,b
  5077  002C3A  1771               	andwf	(floorf@u+1)& (0+255),f,b
  5078  002C3C  5166               	movf	(??_floorf+2)& (0+255),w,b
  5079  002C3E  1772               	andwf	(floorf@u+2)& (0+255),f,b
  5080  002C40  5167               	movf	(??_floorf+3)& (0+255),w,b
  5081  002C42  1773               	andwf	(floorf@u+3)& (0+255),f,b
  5082  002C44  EF68  F016         	goto	l3595
  5083  002C48                     l3587:
  5084                           
  5085                           ; BSR set to: 0
  5086  002C48  C070  F064         	movff	floorf@u,??_floorf
  5087  002C4C  C071  F065         	movff	floorf@u+1,??_floorf+1
  5088  002C50  C072  F066         	movff	floorf@u+2,??_floorf+2
  5089  002C54  C073  F067         	movff	floorf@u+3,??_floorf+3
  5090  002C58  0E20               	movlw	32
  5091  002C5A  EF34  F016         	goto	u3800
  5092  002C5E                     u3805:
  5093  002C5E  90D8               	bcf	status,0,c
  5094  002C60  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  5095  002C62  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  5096  002C64  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  5097  002C66  3364               	rrcf	??_floorf& (0+255),f,b
  5098  002C68                     u3800:
  5099  002C68  2EE8               	decfsz	wreg,f,c
  5100  002C6A  EF2F  F016         	goto	u3805
  5101  002C6E  5164               	movf	??_floorf& (0+255),w,b
  5102  002C70  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  5103  002C72  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  5104  002C74  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  5105  002C76  A4D8               	btfss	status,2,c
  5106  002C78  EF40  F016         	goto	u3811
  5107  002C7C  EF42  F016         	goto	u3810
  5108  002C80                     u3811:
  5109  002C80  EF4C  F016         	goto	l3591
  5110  002C84                     u3810:
  5111  002C84                     
  5112                           ; BSR set to: 0
  5113  002C84  0E00               	movlw	0
  5114  002C86  6F70               	movwf	floorf@u& (0+255),b
  5115  002C88  0E00               	movlw	0
  5116  002C8A  6F71               	movwf	(floorf@u+1)& (0+255),b
  5117  002C8C  0E00               	movlw	0
  5118  002C8E  6F72               	movwf	(floorf@u+2)& (0+255),b
  5119  002C90  0E00               	movlw	0
  5120  002C92  6F73               	movwf	(floorf@u+3)& (0+255),b
  5121  002C94  EF68  F016         	goto	l3595
  5122  002C98                     l3591:
  5123                           
  5124                           ; BSR set to: 0
  5125  002C98  90D8               	bcf	status,0,c
  5126  002C9A  3570               	rlcf	floorf@u& (0+255),w,b
  5127  002C9C  6F64               	movwf	??_floorf& (0+255),b
  5128  002C9E  3571               	rlcf	(floorf@u+1)& (0+255),w,b
  5129  002CA0  6F65               	movwf	(??_floorf+1)& (0+255),b
  5130  002CA2  3572               	rlcf	(floorf@u+2)& (0+255),w,b
  5131  002CA4  6F66               	movwf	(??_floorf+2)& (0+255),b
  5132  002CA6  3573               	rlcf	(floorf@u+3)& (0+255),w,b
  5133  002CA8  6F67               	movwf	(??_floorf+3)& (0+255),b
  5134  002CAA  5164               	movf	??_floorf& (0+255),w,b
  5135  002CAC  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  5136  002CAE  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  5137  002CB0  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  5138  002CB2  B4D8               	btfsc	status,2,c
  5139  002CB4  EF5E  F016         	goto	u3821
  5140  002CB8  EF60  F016         	goto	u3820
  5141  002CBC                     u3821:
  5142  002CBC  EF68  F016         	goto	l3595
  5143  002CC0                     u3820:
  5144  002CC0                     
  5145                           ; BSR set to: 0
  5146  002CC0  0E00               	movlw	0
  5147  002CC2  6F70               	movwf	floorf@u& (0+255),b
  5148  002CC4  0E00               	movlw	0
  5149  002CC6  6F71               	movwf	(floorf@u+1)& (0+255),b
  5150  002CC8  0E80               	movlw	128
  5151  002CCA  6F72               	movwf	(floorf@u+2)& (0+255),b
  5152  002CCC  0EBF               	movlw	191
  5153  002CCE  6F73               	movwf	(floorf@u+3)& (0+255),b
  5154  002CD0                     l3595:
  5155                           
  5156                           ; BSR set to: 0
  5157  002CD0  C070  F060         	movff	floorf@u,?_floorf
  5158  002CD4  C071  F061         	movff	floorf@u+1,?_floorf+1
  5159  002CD8  C072  F062         	movff	floorf@u+2,?_floorf+2
  5160  002CDC  C073  F063         	movff	floorf@u+3,?_floorf+3
  5161  002CE0                     l1069:
  5162                           
  5163                           ; BSR set to: 0
  5164  002CE0  0012               	return		;funcret
  5165  002CE2                     __end_of_floorf:
  5166                           	callstack 0
  5167                           
  5168 ;; *************** function ___fpclassifyf *****************
  5169 ;; Defined at:
  5170 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  x               4    0[COMRAM] float 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;  u               4   10[COMRAM] struct .
  5175 ;;  e               2    8[COMRAM] int 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  2    0[COMRAM] int 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5185 ;;      Params:         4       0       0       0       0       0       0       0       0
  5186 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5187 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5188 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5189 ;;Total ram usage:       14 bytes
  5190 ;; Hardware stack levels used: 1
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_efgtoa
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text15
  5199  0031F8                     __ptext15:
  5200                           	callstack 0
  5201  0031F8                     ___fpclassifyf:
  5202                           	callstack 26
  5203  0031F8  C104  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5204  0031FC  C105  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5205  003200  C106  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5206  003204  C107  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5207  003208  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5208  00320C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5209  003210  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5210  003214  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5211  003218  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5212  00321C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5213  003220  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5214  003224  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5215  003228  0E18               	movlw	24
  5216  00322A  EF1C  F019         	goto	u3630
  5217  00322E                     u3635:
  5218  00322E  90D8               	bcf	status,0,c
  5219  003230  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5220  003232  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5221  003234  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5222  003236  3205               	rrcf	??___fpclassifyf^0,f,c
  5223  003238                     u3630:
  5224  003238  2EE8               	decfsz	wreg,f,c
  5225  00323A  EF17  F019         	goto	u3635
  5226  00323E  5005               	movf	??___fpclassifyf^0,w,c
  5227  003240  6E09               	movwf	___fpclassifyf@e^0,c
  5228  003242  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5229  003244  5009               	movf	___fpclassifyf@e^0,w,c
  5230  003246  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5231  003248  A4D8               	btfss	status,2,c
  5232  00324A  EF29  F019         	goto	u3641
  5233  00324E  EF2B  F019         	goto	u3640
  5234  003252                     u3641:
  5235  003252  EF4B  F019         	goto	l3547
  5236  003256                     u3640:
  5237  003256  90D8               	bcf	status,0,c
  5238  003258  340B               	rlcf	___fpclassifyf@u^0,w,c
  5239  00325A  6E05               	movwf	??___fpclassifyf^0,c
  5240  00325C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5241  00325E  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5242  003260  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5243  003262  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5244  003264  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5245  003266  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5246  003268  5005               	movf	??___fpclassifyf^0,w,c
  5247  00326A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5248  00326C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5249  00326E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5250  003270  A4D8               	btfss	status,2,c
  5251  003272  EF3D  F019         	goto	u3651
  5252  003276  EF3F  F019         	goto	u3650
  5253  00327A                     u3651:
  5254  00327A  EF45  F019         	goto	l3543
  5255  00327E                     u3650:
  5256  00327E  0E00               	movlw	0
  5257  003280  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5258  003282  0E02               	movlw	2
  5259  003284  6E01               	movwf	?___fpclassifyf^0,c
  5260  003286  EF7A  F019         	goto	l1037
  5261  00328A                     l3543:
  5262  00328A  0E00               	movlw	0
  5263  00328C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5264  00328E  0E03               	movlw	3
  5265  003290  6E01               	movwf	?___fpclassifyf^0,c
  5266  003292  EF7A  F019         	goto	l1037
  5267  003296                     l3547:
  5268  003296  2809               	incf	___fpclassifyf@e^0,w,c
  5269  003298  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5270  00329A  A4D8               	btfss	status,2,c
  5271  00329C  EF52  F019         	goto	u3661
  5272  0032A0  EF54  F019         	goto	u3660
  5273  0032A4                     u3661:
  5274  0032A4  EF76  F019         	goto	l3553
  5275  0032A8                     u3660:
  5276  0032A8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5277  0032AC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5278  0032B0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5279  0032B4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5280  0032B8  0E09               	movlw	9
  5281  0032BA                     u3675:
  5282  0032BA  90D8               	bcf	status,0,c
  5283  0032BC  3605               	rlcf	??___fpclassifyf^0,f,c
  5284  0032BE  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5285  0032C0  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5286  0032C2  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5287  0032C4  2EE8               	decfsz	wreg,f,c
  5288  0032C6  EF5D  F019         	goto	u3675
  5289  0032CA  5005               	movf	??___fpclassifyf^0,w,c
  5290  0032CC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5291  0032CE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5292  0032D0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5293  0032D2  B4D8               	btfsc	status,2,c
  5294  0032D4  EF6E  F019         	goto	u3681
  5295  0032D8  EF71  F019         	goto	u3680
  5296  0032DC                     u3681:
  5297  0032DC  0E01               	movlw	1
  5298  0032DE  EF72  F019         	goto	u3690
  5299  0032E2                     u3680:
  5300  0032E2  0E00               	movlw	0
  5301  0032E4                     u3690:
  5302  0032E4  6E01               	movwf	?___fpclassifyf^0,c
  5303  0032E6  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5304  0032E8  EF7A  F019         	goto	l1037
  5305  0032EC                     l3553:
  5306  0032EC  0E00               	movlw	0
  5307  0032EE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5308  0032F0  0E04               	movlw	4
  5309  0032F2  6E01               	movwf	?___fpclassifyf^0,c
  5310  0032F4                     l1037:
  5311  0032F4  0012               	return		;funcret
  5312  0032F6                     __end_of___fpclassifyf:
  5313                           	callstack 0
  5314                           
  5315 ;; *************** function ___flsub *****************
  5316 ;; Defined at:
  5317 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  b               4   34[COMRAM] int 
  5320 ;;  a               4   38[COMRAM] int 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  4   34[COMRAM] int 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0, cstack
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5332 ;;      Params:         8       0       0       0       0       0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5335 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5336 ;;Total ram usage:        8 bytes
  5337 ;; Hardware stack levels used: 1
  5338 ;; Hardware stack levels required when called: 1
  5339 ;; This function calls:
  5340 ;;		___fladd
  5341 ;; This function is called by:
  5342 ;;		_main
  5343 ;;		_efgtoa
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text16
  5348  003C12                     __ptext16:
  5349                           	callstack 0
  5350  003C12                     ___flsub:
  5351                           	callstack 25
  5352  003C12  0E00               	movlw	0
  5353  003C14  1A27               	xorwf	___flsub@a^0,f,c
  5354  003C16  0E00               	movlw	0
  5355  003C18  1A28               	xorwf	(___flsub@a+1)^0,f,c
  5356  003C1A  0E00               	movlw	0
  5357  003C1C  1A29               	xorwf	(___flsub@a+2)^0,f,c
  5358  003C1E  0E80               	movlw	128
  5359  003C20  1A2A               	xorwf	(___flsub@a+3)^0,f,c
  5360  003C22  C023  F013         	movff	___flsub@b,___fladd@b
  5361  003C26  C024  F014         	movff	___flsub@b+1,___fladd@b+1
  5362  003C2A  C025  F015         	movff	___flsub@b+2,___fladd@b+2
  5363  003C2E  C026  F016         	movff	___flsub@b+3,___fladd@b+3
  5364  003C32  C027  F017         	movff	___flsub@a,___fladd@a
  5365  003C36  C028  F018         	movff	___flsub@a+1,___fladd@a+1
  5366  003C3A  C029  F019         	movff	___flsub@a+2,___fladd@a+2
  5367  003C3E  C02A  F01A         	movff	___flsub@a+3,___fladd@a+3
  5368  003C42  EC93  F00C         	call	___fladd	;wreg free
  5369  003C46  C013  F023         	movff	?___fladd,?___flsub
  5370  003C4A  C014  F024         	movff	?___fladd+1,?___flsub+1
  5371  003C4E  C015  F025         	movff	?___fladd+2,?___flsub+2
  5372  003C52  C016  F026         	movff	?___fladd+3,?___flsub+3
  5373  003C56  0012               	return		;funcret
  5374  003C58                     __end_of___flsub:
  5375                           	callstack 0
  5376                           
  5377 ;; *************** function ___flneg *****************
  5378 ;; Defined at:
  5379 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;  f1              4    0[COMRAM] int 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  4    0[COMRAM] int 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5393 ;;      Params:         4       0       0       0       0       0       0       0       0
  5394 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5396 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5397 ;;Total ram usage:        4 bytes
  5398 ;; Hardware stack levels used: 1
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_efgtoa
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text17
  5407  003D16                     __ptext17:
  5408                           	callstack 0
  5409  003D16                     ___flneg:
  5410                           	callstack 26
  5411  003D16  5001               	movf	___flneg@f1^0,w,c
  5412  003D18  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5413  003D1A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5414  003D1C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5415  003D1E  B4D8               	btfsc	status,2,c
  5416  003D20  EF94  F01E         	goto	u3511
  5417  003D24  EF96  F01E         	goto	u3510
  5418  003D28                     u3511:
  5419  003D28  EF9E  F01E         	goto	l3465
  5420  003D2C                     u3510:
  5421  003D2C  0E00               	movlw	0
  5422  003D2E  1A01               	xorwf	___flneg@f1^0,f,c
  5423  003D30  0E00               	movlw	0
  5424  003D32  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5425  003D34  0E00               	movlw	0
  5426  003D36  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5427  003D38  0E80               	movlw	128
  5428  003D3A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5429  003D3C                     l3465:
  5430  003D3C  C001  F001         	movff	___flneg@f1,?___flneg
  5431  003D40  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5432  003D44  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5433  003D48  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5434  003D4C  0012               	return		;funcret
  5435  003D4E                     __end_of___flneg:
  5436                           	callstack 0
  5437                           
  5438 ;; *************** function ___flge *****************
  5439 ;; Defined at:
  5440 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  ff1             4   67[COMRAM] int 
  5443 ;;  ff2             4   71[COMRAM] int 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;		None
  5446 ;; Return value:  Size  Location     Type
  5447 ;;		None               void
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5455 ;;      Params:         8       0       0       0       0       0       0       0       0
  5456 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5457 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5458 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5459 ;;Total ram usage:       12 bytes
  5460 ;; Hardware stack levels used: 1
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_main
  5465 ;;		_efgtoa
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text18
  5470  0030F4                     __ptext18:
  5471                           	callstack 0
  5472  0030F4                     ___flge:
  5473                           	callstack 26
  5474  0030F4  0E00               	movlw	0
  5475  0030F6  1444               	andwf	___flge@ff1^0,w,c
  5476  0030F8  6E4C               	movwf	??___flge^0,c
  5477  0030FA  0E00               	movlw	0
  5478  0030FC  1445               	andwf	(___flge@ff1+1)^0,w,c
  5479  0030FE  6E4D               	movwf	(??___flge+1)^0,c
  5480  003100  0E80               	movlw	128
  5481  003102  1446               	andwf	(___flge@ff1+2)^0,w,c
  5482  003104  6E4E               	movwf	(??___flge+2)^0,c
  5483  003106  0E7F               	movlw	127
  5484  003108  1447               	andwf	(___flge@ff1+3)^0,w,c
  5485  00310A  6E4F               	movwf	(??___flge+3)^0,c
  5486  00310C  504C               	movf	??___flge^0,w,c
  5487  00310E  104D               	iorwf	(??___flge+1)^0,w,c
  5488  003110  104E               	iorwf	(??___flge+2)^0,w,c
  5489  003112  104F               	iorwf	(??___flge+3)^0,w,c
  5490  003114  A4D8               	btfss	status,2,c
  5491  003116  EF8F  F018         	goto	u3461
  5492  00311A  EF91  F018         	goto	u3460
  5493  00311E                     u3461:
  5494  00311E  EF99  F018         	goto	l3443
  5495  003122                     u3460:
  5496  003122  0E00               	movlw	0
  5497  003124  6E44               	movwf	___flge@ff1^0,c
  5498  003126  0E00               	movlw	0
  5499  003128  6E45               	movwf	(___flge@ff1+1)^0,c
  5500  00312A  0E00               	movlw	0
  5501  00312C  6E46               	movwf	(___flge@ff1+2)^0,c
  5502  00312E  0E00               	movlw	0
  5503  003130  6E47               	movwf	(___flge@ff1+3)^0,c
  5504  003132                     l3443:
  5505  003132  0E00               	movlw	0
  5506  003134  1448               	andwf	___flge@ff2^0,w,c
  5507  003136  6E4C               	movwf	??___flge^0,c
  5508  003138  0E00               	movlw	0
  5509  00313A  1449               	andwf	(___flge@ff2+1)^0,w,c
  5510  00313C  6E4D               	movwf	(??___flge+1)^0,c
  5511  00313E  0E80               	movlw	128
  5512  003140  144A               	andwf	(___flge@ff2+2)^0,w,c
  5513  003142  6E4E               	movwf	(??___flge+2)^0,c
  5514  003144  0E7F               	movlw	127
  5515  003146  144B               	andwf	(___flge@ff2+3)^0,w,c
  5516  003148  6E4F               	movwf	(??___flge+3)^0,c
  5517  00314A  504C               	movf	??___flge^0,w,c
  5518  00314C  104D               	iorwf	(??___flge+1)^0,w,c
  5519  00314E  104E               	iorwf	(??___flge+2)^0,w,c
  5520  003150  104F               	iorwf	(??___flge+3)^0,w,c
  5521  003152  A4D8               	btfss	status,2,c
  5522  003154  EFAE  F018         	goto	u3471
  5523  003158  EFB0  F018         	goto	u3470
  5524  00315C                     u3471:
  5525  00315C  EFB8  F018         	goto	l3447
  5526  003160                     u3470:
  5527  003160  0E00               	movlw	0
  5528  003162  6E48               	movwf	___flge@ff2^0,c
  5529  003164  0E00               	movlw	0
  5530  003166  6E49               	movwf	(___flge@ff2+1)^0,c
  5531  003168  0E00               	movlw	0
  5532  00316A  6E4A               	movwf	(___flge@ff2+2)^0,c
  5533  00316C  0E00               	movlw	0
  5534  00316E  6E4B               	movwf	(___flge@ff2+3)^0,c
  5535  003170                     l3447:
  5536  003170  AE47               	btfss	(___flge@ff1+3)^0,7,c
  5537  003172  EFBD  F018         	goto	u3481
  5538  003176  EFBF  F018         	goto	u3480
  5539  00317A                     u3481:
  5540  00317A  EFC8  F018         	goto	l3451
  5541  00317E                     u3480:
  5542  00317E  6C44               	negf	___flge@ff1^0,c
  5543  003180  1E45               	comf	(___flge@ff1+1)^0,f,c
  5544  003182  B0D8               	btfsc	status,0,c
  5545  003184  2A45               	incf	(___flge@ff1+1)^0,f,c
  5546  003186  1E46               	comf	(___flge@ff1+2)^0,f,c
  5547  003188  B0D8               	btfsc	status,0,c
  5548  00318A  2A46               	incf	(___flge@ff1+2)^0,f,c
  5549  00318C  0E80               	movlw	128
  5550  00318E  5647               	subfwb	(___flge@ff1+3)^0,f,c
  5551  003190                     l3451:
  5552  003190  AE4B               	btfss	(___flge@ff2+3)^0,7,c
  5553  003192  EFCD  F018         	goto	u3491
  5554  003196  EFCF  F018         	goto	u3490
  5555  00319A                     u3491:
  5556  00319A  EFD8  F018         	goto	l442
  5557  00319E                     u3490:
  5558  00319E  6C48               	negf	___flge@ff2^0,c
  5559  0031A0  1E49               	comf	(___flge@ff2+1)^0,f,c
  5560  0031A2  B0D8               	btfsc	status,0,c
  5561  0031A4  2A49               	incf	(___flge@ff2+1)^0,f,c
  5562  0031A6  1E4A               	comf	(___flge@ff2+2)^0,f,c
  5563  0031A8  B0D8               	btfsc	status,0,c
  5564  0031AA  2A4A               	incf	(___flge@ff2+2)^0,f,c
  5565  0031AC  0E80               	movlw	128
  5566  0031AE  564B               	subfwb	(___flge@ff2+3)^0,f,c
  5567  0031B0                     l442:
  5568  0031B0  0E00               	movlw	0
  5569  0031B2  1A44               	xorwf	___flge@ff1^0,f,c
  5570  0031B4  0E00               	movlw	0
  5571  0031B6  1A45               	xorwf	(___flge@ff1+1)^0,f,c
  5572  0031B8  0E00               	movlw	0
  5573  0031BA  1A46               	xorwf	(___flge@ff1+2)^0,f,c
  5574  0031BC  0E80               	movlw	128
  5575  0031BE  1A47               	xorwf	(___flge@ff1+3)^0,f,c
  5576  0031C0  0E00               	movlw	0
  5577  0031C2  1A48               	xorwf	___flge@ff2^0,f,c
  5578  0031C4  0E00               	movlw	0
  5579  0031C6  1A49               	xorwf	(___flge@ff2+1)^0,f,c
  5580  0031C8  0E00               	movlw	0
  5581  0031CA  1A4A               	xorwf	(___flge@ff2+2)^0,f,c
  5582  0031CC  0E80               	movlw	128
  5583  0031CE  1A4B               	xorwf	(___flge@ff2+3)^0,f,c
  5584  0031D0  5048               	movf	___flge@ff2^0,w,c
  5585  0031D2  5C44               	subwf	___flge@ff1^0,w,c
  5586  0031D4  5049               	movf	(___flge@ff2+1)^0,w,c
  5587  0031D6  5845               	subwfb	(___flge@ff1+1)^0,w,c
  5588  0031D8  504A               	movf	(___flge@ff2+2)^0,w,c
  5589  0031DA  5846               	subwfb	(___flge@ff1+2)^0,w,c
  5590  0031DC  504B               	movf	(___flge@ff2+3)^0,w,c
  5591  0031DE  5847               	subwfb	(___flge@ff1+3)^0,w,c
  5592  0031E0  B0D8               	btfsc	status,0,c
  5593  0031E2  EFF5  F018         	goto	u3501
  5594  0031E6  EFF7  F018         	goto	u3500
  5595  0031EA                     u3501:
  5596  0031EA  EFFA  F018         	goto	l3457
  5597  0031EE                     u3500:
  5598  0031EE  90D8               	bcf	status,0,c
  5599  0031F0  EFFB  F018         	goto	l447
  5600  0031F4                     l3457:
  5601  0031F4  80D8               	bsf	status,0,c
  5602  0031F6                     l447:
  5603  0031F6  0012               	return		;funcret
  5604  0031F8                     __end_of___flge:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function ___fleq *****************
  5608 ;; Defined at:
  5609 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  ff1             4    0[COMRAM] int 
  5612 ;;  ff2             4    4[COMRAM] int 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;		None               void
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5624 ;;      Params:         8       0       0       0       0       0       0       0       0
  5625 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5626 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5627 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5628 ;;Total ram usage:       12 bytes
  5629 ;; Hardware stack levels used: 1
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_efgtoa
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text19
  5638  003874                     __ptext19:
  5639                           	callstack 0
  5640  003874                     ___fleq:
  5641                           	callstack 26
  5642  003874  0E00               	movlw	0
  5643  003876  1401               	andwf	___fleq@ff1^0,w,c
  5644  003878  6E09               	movwf	??___fleq^0,c
  5645  00387A  0E00               	movlw	0
  5646  00387C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5647  00387E  6E0A               	movwf	(??___fleq+1)^0,c
  5648  003880  0E80               	movlw	128
  5649  003882  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5650  003884  6E0B               	movwf	(??___fleq+2)^0,c
  5651  003886  0E7F               	movlw	127
  5652  003888  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5653  00388A  6E0C               	movwf	(??___fleq+3)^0,c
  5654  00388C  5009               	movf	??___fleq^0,w,c
  5655  00388E  100A               	iorwf	(??___fleq+1)^0,w,c
  5656  003890  100B               	iorwf	(??___fleq+2)^0,w,c
  5657  003892  100C               	iorwf	(??___fleq+3)^0,w,c
  5658  003894  A4D8               	btfss	status,2,c
  5659  003896  EF4F  F01C         	goto	u3431
  5660  00389A  EF51  F01C         	goto	u3430
  5661  00389E                     u3431:
  5662  00389E  EF59  F01C         	goto	l3427
  5663  0038A2                     u3430:
  5664  0038A2  0E00               	movlw	0
  5665  0038A4  6E01               	movwf	___fleq@ff1^0,c
  5666  0038A6  0E00               	movlw	0
  5667  0038A8  6E02               	movwf	(___fleq@ff1+1)^0,c
  5668  0038AA  0E00               	movlw	0
  5669  0038AC  6E03               	movwf	(___fleq@ff1+2)^0,c
  5670  0038AE  0E00               	movlw	0
  5671  0038B0  6E04               	movwf	(___fleq@ff1+3)^0,c
  5672  0038B2                     l3427:
  5673  0038B2  0E00               	movlw	0
  5674  0038B4  1405               	andwf	___fleq@ff2^0,w,c
  5675  0038B6  6E09               	movwf	??___fleq^0,c
  5676  0038B8  0E00               	movlw	0
  5677  0038BA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5678  0038BC  6E0A               	movwf	(??___fleq+1)^0,c
  5679  0038BE  0E80               	movlw	128
  5680  0038C0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5681  0038C2  6E0B               	movwf	(??___fleq+2)^0,c
  5682  0038C4  0E7F               	movlw	127
  5683  0038C6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5684  0038C8  6E0C               	movwf	(??___fleq+3)^0,c
  5685  0038CA  5009               	movf	??___fleq^0,w,c
  5686  0038CC  100A               	iorwf	(??___fleq+1)^0,w,c
  5687  0038CE  100B               	iorwf	(??___fleq+2)^0,w,c
  5688  0038D0  100C               	iorwf	(??___fleq+3)^0,w,c
  5689  0038D2  A4D8               	btfss	status,2,c
  5690  0038D4  EF6E  F01C         	goto	u3441
  5691  0038D8  EF70  F01C         	goto	u3440
  5692  0038DC                     u3441:
  5693  0038DC  EF78  F01C         	goto	l3431
  5694  0038E0                     u3440:
  5695  0038E0  0E00               	movlw	0
  5696  0038E2  6E05               	movwf	___fleq@ff2^0,c
  5697  0038E4  0E00               	movlw	0
  5698  0038E6  6E06               	movwf	(___fleq@ff2+1)^0,c
  5699  0038E8  0E00               	movlw	0
  5700  0038EA  6E07               	movwf	(___fleq@ff2+2)^0,c
  5701  0038EC  0E00               	movlw	0
  5702  0038EE  6E08               	movwf	(___fleq@ff2+3)^0,c
  5703  0038F0                     l3431:
  5704  0038F0  5005               	movf	___fleq@ff2^0,w,c
  5705  0038F2  1801               	xorwf	___fleq@ff1^0,w,c
  5706  0038F4  E10F               	bnz	u3450
  5707  0038F6  5006               	movf	(___fleq@ff2+1)^0,w,c
  5708  0038F8  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5709  0038FA  E10C               	bnz	u3450
  5710  0038FC  5007               	movf	(___fleq@ff2+2)^0,w,c
  5711  0038FE  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5712  003900  E109               	bnz	u3450
  5713  003902  5008               	movf	(___fleq@ff2+3)^0,w,c
  5714  003904  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5715  003906  B4D8               	btfsc	status,2,c
  5716  003908  EF88  F01C         	goto	u3451
  5717  00390C  EF8A  F01C         	goto	u3450
  5718  003910                     u3451:
  5719  003910  EF8D  F01C         	goto	l3435
  5720  003914                     u3450:
  5721  003914  90D8               	bcf	status,0,c
  5722  003916  EF8E  F01C         	goto	l436
  5723  00391A                     l3435:
  5724  00391A  80D8               	bsf	status,0,c
  5725  00391C                     l436:
  5726  00391C  0012               	return		;funcret
  5727  00391E                     __end_of___fleq:
  5728                           	callstack 0
  5729                           
  5730 ;; *************** function ___awmod *****************
  5731 ;; Defined at:
  5732 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  dividend        2    0[COMRAM] int 
  5735 ;;  divisor         2    2[COMRAM] int 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  sign            1    5[COMRAM] unsigned char 
  5738 ;;  counter         1    4[COMRAM] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  2    0[COMRAM] int 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5748 ;;      Params:         4       0       0       0       0       0       0       0       0
  5749 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5751 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5752 ;;Total ram usage:        6 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_efgtoa
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text20
  5762  0037C4                     __ptext20:
  5763                           	callstack 0
  5764  0037C4                     ___awmod:
  5765                           	callstack 26
  5766  0037C4  0E00               	movlw	0
  5767  0037C6  6E06               	movwf	___awmod@sign^0,c
  5768  0037C8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5769  0037CA  EFEB  F01B         	goto	u3370
  5770  0037CE  EFE9  F01B         	goto	u3371
  5771  0037D2                     u3371:
  5772  0037D2  EFF1  F01B         	goto	l3395
  5773  0037D6                     u3370:
  5774  0037D6  6C01               	negf	___awmod@dividend^0,c
  5775  0037D8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5776  0037DA  B0D8               	btfsc	status,0,c
  5777  0037DC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5778  0037DE  0E01               	movlw	1
  5779  0037E0  6E06               	movwf	___awmod@sign^0,c
  5780  0037E2                     l3395:
  5781  0037E2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5782  0037E4  EFF8  F01B         	goto	u3380
  5783  0037E8  EFF6  F01B         	goto	u3381
  5784  0037EC                     u3381:
  5785  0037EC  EFFC  F01B         	goto	l3399
  5786  0037F0                     u3380:
  5787  0037F0  6C03               	negf	___awmod@divisor^0,c
  5788  0037F2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5789  0037F4  B0D8               	btfsc	status,0,c
  5790  0037F6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5791  0037F8                     l3399:
  5792  0037F8  5003               	movf	___awmod@divisor^0,w,c
  5793  0037FA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5794  0037FC  B4D8               	btfsc	status,2,c
  5795  0037FE  EF03  F01C         	goto	u3391
  5796  003802  EF05  F01C         	goto	u3390
  5797  003806                     u3391:
  5798  003806  EF29  F01C         	goto	l3415
  5799  00380A                     u3390:
  5800  00380A  0E01               	movlw	1
  5801  00380C  6E05               	movwf	___awmod@counter^0,c
  5802  00380E  EF0D  F01C         	goto	l3405
  5803  003812                     l3403:
  5804  003812  90D8               	bcf	status,0,c
  5805  003814  3603               	rlcf	___awmod@divisor^0,f,c
  5806  003816  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5807  003818  2A05               	incf	___awmod@counter^0,f,c
  5808  00381A                     l3405:
  5809  00381A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5810  00381C  EF12  F01C         	goto	u3401
  5811  003820  EF14  F01C         	goto	u3400
  5812  003824                     u3401:
  5813  003824  EF09  F01C         	goto	l3403
  5814  003828                     u3400:
  5815  003828                     l3407:
  5816  003828  5003               	movf	___awmod@divisor^0,w,c
  5817  00382A  5C01               	subwf	___awmod@dividend^0,w,c
  5818  00382C  5004               	movf	(___awmod@divisor+1)^0,w,c
  5819  00382E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5820  003830  A0D8               	btfss	status,0,c
  5821  003832  EF1D  F01C         	goto	u3411
  5822  003836  EF1F  F01C         	goto	u3410
  5823  00383A                     u3411:
  5824  00383A  EF23  F01C         	goto	l3411
  5825  00383E                     u3410:
  5826  00383E  5003               	movf	___awmod@divisor^0,w,c
  5827  003840  5E01               	subwf	___awmod@dividend^0,f,c
  5828  003842  5004               	movf	(___awmod@divisor+1)^0,w,c
  5829  003844  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5830  003846                     l3411:
  5831  003846  90D8               	bcf	status,0,c
  5832  003848  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5833  00384A  3203               	rrcf	___awmod@divisor^0,f,c
  5834  00384C  2E05               	decfsz	___awmod@counter^0,f,c
  5835  00384E  EF14  F01C         	goto	l3407
  5836  003852                     l3415:
  5837  003852  5006               	movf	___awmod@sign^0,w,c
  5838  003854  B4D8               	btfsc	status,2,c
  5839  003856  EF2F  F01C         	goto	u3421
  5840  00385A  EF31  F01C         	goto	u3420
  5841  00385E                     u3421:
  5842  00385E  EF35  F01C         	goto	l3419
  5843  003862                     u3420:
  5844  003862  6C01               	negf	___awmod@dividend^0,c
  5845  003864  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5846  003866  B0D8               	btfsc	status,0,c
  5847  003868  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5848  00386A                     l3419:
  5849  00386A  C001  F001         	movff	___awmod@dividend,?___awmod
  5850  00386E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5851  003872  0012               	return		;funcret
  5852  003874                     __end_of___awmod:
  5853                           	callstack 0
  5854                           
  5855 ;; *************** function ___awdiv *****************
  5856 ;; Defined at:
  5857 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  dividend        2    0[COMRAM] int 
  5860 ;;  divisor         2    2[COMRAM] int 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  quotient        2    6[COMRAM] int 
  5863 ;;  sign            1    5[COMRAM] unsigned char 
  5864 ;;  counter         1    4[COMRAM] unsigned char 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  2    0[COMRAM] int 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5874 ;;      Params:         4       0       0       0       0       0       0       0       0
  5875 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5877 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5878 ;;Total ram usage:        8 bytes
  5879 ;; Hardware stack levels used: 1
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_efgtoa
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text21
  5888  003644                     __ptext21:
  5889                           	callstack 0
  5890  003644                     ___awdiv:
  5891                           	callstack 26
  5892  003644  0E00               	movlw	0
  5893  003646  6E06               	movwf	___awdiv@sign^0,c
  5894  003648  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5895  00364A  EF2B  F01B         	goto	u3310
  5896  00364E  EF29  F01B         	goto	u3311
  5897  003652                     u3311:
  5898  003652  EF31  F01B         	goto	l3351
  5899  003656                     u3310:
  5900  003656  6C03               	negf	___awdiv@divisor^0,c
  5901  003658  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5902  00365A  B0D8               	btfsc	status,0,c
  5903  00365C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5904  00365E  0E01               	movlw	1
  5905  003660  6E06               	movwf	___awdiv@sign^0,c
  5906  003662                     l3351:
  5907  003662  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5908  003664  EF38  F01B         	goto	u3320
  5909  003668  EF36  F01B         	goto	u3321
  5910  00366C                     u3321:
  5911  00366C  EF3E  F01B         	goto	l3357
  5912  003670                     u3320:
  5913  003670  6C01               	negf	___awdiv@dividend^0,c
  5914  003672  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5915  003674  B0D8               	btfsc	status,0,c
  5916  003676  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5917  003678  0E01               	movlw	1
  5918  00367A  1A06               	xorwf	___awdiv@sign^0,f,c
  5919  00367C                     l3357:
  5920  00367C  0E00               	movlw	0
  5921  00367E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5922  003680  0E00               	movlw	0
  5923  003682  6E07               	movwf	___awdiv@quotient^0,c
  5924  003684  5003               	movf	___awdiv@divisor^0,w,c
  5925  003686  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5926  003688  B4D8               	btfsc	status,2,c
  5927  00368A  EF49  F01B         	goto	u3331
  5928  00368E  EF4B  F01B         	goto	u3330
  5929  003692                     u3331:
  5930  003692  EF73  F01B         	goto	l3379
  5931  003696                     u3330:
  5932  003696  0E01               	movlw	1
  5933  003698  6E05               	movwf	___awdiv@counter^0,c
  5934  00369A  EF53  F01B         	goto	l3365
  5935  00369E                     l3363:
  5936  00369E  90D8               	bcf	status,0,c
  5937  0036A0  3603               	rlcf	___awdiv@divisor^0,f,c
  5938  0036A2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5939  0036A4  2A05               	incf	___awdiv@counter^0,f,c
  5940  0036A6                     l3365:
  5941  0036A6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5942  0036A8  EF58  F01B         	goto	u3341
  5943  0036AC  EF5A  F01B         	goto	u3340
  5944  0036B0                     u3341:
  5945  0036B0  EF4F  F01B         	goto	l3363
  5946  0036B4                     u3340:
  5947  0036B4                     l3367:
  5948  0036B4  90D8               	bcf	status,0,c
  5949  0036B6  3607               	rlcf	___awdiv@quotient^0,f,c
  5950  0036B8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5951  0036BA  5003               	movf	___awdiv@divisor^0,w,c
  5952  0036BC  5C01               	subwf	___awdiv@dividend^0,w,c
  5953  0036BE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5954  0036C0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5955  0036C2  A0D8               	btfss	status,0,c
  5956  0036C4  EF66  F01B         	goto	u3351
  5957  0036C8  EF68  F01B         	goto	u3350
  5958  0036CC                     u3351:
  5959  0036CC  EF6D  F01B         	goto	l3375
  5960  0036D0                     u3350:
  5961  0036D0  5003               	movf	___awdiv@divisor^0,w,c
  5962  0036D2  5E01               	subwf	___awdiv@dividend^0,f,c
  5963  0036D4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5964  0036D6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5965  0036D8  8007               	bsf	___awdiv@quotient^0,0,c
  5966  0036DA                     l3375:
  5967  0036DA  90D8               	bcf	status,0,c
  5968  0036DC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5969  0036DE  3203               	rrcf	___awdiv@divisor^0,f,c
  5970  0036E0  2E05               	decfsz	___awdiv@counter^0,f,c
  5971  0036E2  EF5A  F01B         	goto	l3367
  5972  0036E6                     l3379:
  5973  0036E6  5006               	movf	___awdiv@sign^0,w,c
  5974  0036E8  B4D8               	btfsc	status,2,c
  5975  0036EA  EF79  F01B         	goto	u3361
  5976  0036EE  EF7B  F01B         	goto	u3360
  5977  0036F2                     u3361:
  5978  0036F2  EF7F  F01B         	goto	l3383
  5979  0036F6                     u3360:
  5980  0036F6  6C07               	negf	___awdiv@quotient^0,c
  5981  0036F8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5982  0036FA  B0D8               	btfsc	status,0,c
  5983  0036FC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5984  0036FE                     l3383:
  5985  0036FE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5986  003702  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5987  003706  0012               	return		;funcret
  5988  003708                     __end_of___awdiv:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _atoi *****************
  5992 ;; Defined at:
  5993 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5996 ;;		 -> STR_1(19), 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  n               2   15[COMRAM] int 
  5999 ;;  neg             2   13[COMRAM] int 
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  2    7[COMRAM] int 
  6002 ;; Registers used:
  6003 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6009 ;;      Params:         2       0       0       0       0       0       0       0       0
  6010 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6011 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6012 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6013 ;;Total ram usage:       10 bytes
  6014 ;; Hardware stack levels used: 1
  6015 ;; Hardware stack levels required when called: 1
  6016 ;; This function calls:
  6017 ;;		___wmul
  6018 ;;		_isdigit
  6019 ;;		_isspace
  6020 ;; This function is called by:
  6021 ;;		_vfpfcnvrt
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text22
  6026  002E96                     __ptext22:
  6027                           	callstack 0
  6028  002E96                     _atoi:
  6029                           	callstack 26
  6030  002E96  0E00               	movlw	0
  6031  002E98  6E11               	movwf	(atoi@n+1)^0,c
  6032  002E9A  0E00               	movlw	0
  6033  002E9C  6E10               	movwf	atoi@n^0,c
  6034  002E9E  0E00               	movlw	0
  6035  002EA0  6E0F               	movwf	(atoi@neg+1)^0,c
  6036  002EA2  0E00               	movlw	0
  6037  002EA4  6E0E               	movwf	atoi@neg^0,c
  6038  002EA6  EF57  F017         	goto	l3927
  6039  002EAA                     l3923:
  6040  002EAA  4A08               	infsnz	atoi@s^0,f,c
  6041  002EAC  2A09               	incf	(atoi@s+1)^0,f,c
  6042  002EAE                     l3927:
  6043  002EAE  C008  FFF6         	movff	atoi@s,tblptrl
  6044  002EB2  C009  FFF7         	movff	atoi@s+1,tblptrh
  6045  002EB6                     	if	0	;tblptru may be non-zero
  6046  002EB6                     	endif
  6047  002EB6                     	if	0	;tblptru may be non-zero
  6048  002EB6                     	endif
  6049  002EB6  0008               	tblrd		*
  6050  002EB8  50F5               	movf	tablat,w,c
  6051  002EBA  0A20               	xorlw	32
  6052  002EBC  B4D8               	btfsc	status,2,c
  6053  002EBE  EF63  F017         	goto	u4351
  6054  002EC2  EF65  F017         	goto	u4350
  6055  002EC6                     u4351:
  6056  002EC6  EF55  F017         	goto	l3923
  6057  002ECA                     u4350:
  6058  002ECA  0EF7               	movlw	247
  6059  002ECC  6E0A               	movwf	??_atoi^0,c
  6060  002ECE  0EFF               	movlw	255
  6061  002ED0  6E0B               	movwf	(??_atoi+1)^0,c
  6062  002ED2  C008  FFF6         	movff	atoi@s,tblptrl
  6063  002ED6  C009  FFF7         	movff	atoi@s+1,tblptrh
  6064  002EDA                     	if	0	;tblptru may be non-zero
  6065  002EDA                     	endif
  6066  002EDA                     	if	0	;tblptru may be non-zero
  6067  002EDA                     	endif
  6068  002EDA  0008               	tblrd		*
  6069  002EDC  50F5               	movf	tablat,w,c
  6070  002EDE  6E0C               	movwf	(??_atoi+2)^0,c
  6071  002EE0  6A0D               	clrf	(??_atoi+3)^0,c
  6072  002EE2  500A               	movf	??_atoi^0,w,c
  6073  002EE4  260C               	addwf	(??_atoi+2)^0,f,c
  6074  002EE6  500B               	movf	(??_atoi+1)^0,w,c
  6075  002EE8  220D               	addwfc	(??_atoi+3)^0,f,c
  6076  002EEA  500D               	movf	(??_atoi+3)^0,w,c
  6077  002EEC  E109               	bnz	u4360
  6078  002EEE  0E05               	movlw	5
  6079  002EF0  5C0C               	subwf	(??_atoi+2)^0,w,c
  6080  002EF2  A0D8               	btfss	status,0,c
  6081  002EF4  EF7E  F017         	goto	u4361
  6082  002EF8  EF80  F017         	goto	u4360
  6083  002EFC                     u4361:
  6084  002EFC  EF55  F017         	goto	l3923
  6085  002F00                     u4360:
  6086  002F00  EF8A  F017         	goto	l3935
  6087  002F04                     l3931:
  6088  002F04  0E00               	movlw	0
  6089  002F06  6E0F               	movwf	(atoi@neg+1)^0,c
  6090  002F08  0E01               	movlw	1
  6091  002F0A  6E0E               	movwf	atoi@neg^0,c
  6092  002F0C                     l3933:
  6093  002F0C  4A08               	infsnz	atoi@s^0,f,c
  6094  002F0E  2A09               	incf	(atoi@s+1)^0,f,c
  6095  002F10  EFBF  F017         	goto	l3943
  6096  002F14                     l3935:
  6097  002F14  C008  FFF6         	movff	atoi@s,tblptrl
  6098  002F18  C009  FFF7         	movff	atoi@s+1,tblptrh
  6099  002F1C                     	if	0	;tblptru may be non-zero
  6100  002F1C                     	endif
  6101  002F1C                     	if	0	;tblptru may be non-zero
  6102  002F1C                     	endif
  6103  002F1C  0008               	tblrd		*
  6104  002F1E  50F5               	movf	tablat,w,c
  6105  002F20  6E0A               	movwf	??_atoi^0,c
  6106  002F22  6A0B               	clrf	(??_atoi+1)^0,c
  6107                           
  6108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6109                           ; Switch size 1, requested type "simple"
  6110                           ; Number of cases is 1, Range of values is 0 to 0
  6111                           ; switch strategies available:
  6112                           ; Name         Instructions Cycles
  6113                           ; simple_byte            4     3 (average)
  6114                           ;	Chosen strategy is simple_byte
  6115  002F24  500B               	movf	(??_atoi+1)^0,w,c
  6116  002F26  0A00               	xorlw	0	; case 0
  6117  002F28  B4D8               	btfsc	status,2,c
  6118  002F2A  EF99  F017         	goto	l4465
  6119  002F2E  EFBF  F017         	goto	l3943
  6120  002F32                     l4465:
  6121                           
  6122                           ; Switch size 1, requested type "simple"
  6123                           ; Number of cases is 2, Range of values is 43 to 45
  6124                           ; switch strategies available:
  6125                           ; Name         Instructions Cycles
  6126                           ; simple_byte            7     4 (average)
  6127                           ;	Chosen strategy is simple_byte
  6128  002F32  500A               	movf	??_atoi^0,w,c
  6129  002F34  0A2B               	xorlw	43	; case 43
  6130  002F36  B4D8               	btfsc	status,2,c
  6131  002F38  EF86  F017         	goto	l3933
  6132  002F3C  0A06               	xorlw	6	; case 45
  6133  002F3E  B4D8               	btfsc	status,2,c
  6134  002F40  EF82  F017         	goto	l3931
  6135  002F44  EFBF  F017         	goto	l3943
  6136  002F48                     l3937:
  6137  002F48  C010  F001         	movff	atoi@n,___wmul@multiplier
  6138  002F4C  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6139  002F50  0E00               	movlw	0
  6140  002F52  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6141  002F54  0E0A               	movlw	10
  6142  002F56  6E03               	movwf	___wmul@multiplicand^0,c
  6143  002F58  ECF6  F01E         	call	___wmul	;wreg free
  6144  002F5C  C008  FFF6         	movff	atoi@s,tblptrl
  6145  002F60  C009  FFF7         	movff	atoi@s+1,tblptrh
  6146  002F64                     	if	0	;tblptru may be non-zero
  6147  002F64                     	endif
  6148  002F64                     	if	0	;tblptru may be non-zero
  6149  002F64                     	endif
  6150  002F64  0008               	tblrd		*
  6151  002F66  50F5               	movf	tablat,w,c
  6152  002F68  5E01               	subwf	?___wmul^0,f,c
  6153  002F6A  0E00               	movlw	0
  6154  002F6C  5A02               	subwfb	(?___wmul+1)^0,f,c
  6155  002F6E  0E30               	movlw	48
  6156  002F70  2401               	addwf	?___wmul^0,w,c
  6157  002F72  6E10               	movwf	atoi@n^0,c
  6158  002F74  0E00               	movlw	0
  6159  002F76  2002               	addwfc	(?___wmul+1)^0,w,c
  6160  002F78  6E11               	movwf	(atoi@n+1)^0,c
  6161  002F7A  EF86  F017         	goto	l3933
  6162  002F7E                     l3943:
  6163  002F7E  0ED0               	movlw	208
  6164  002F80  6E0A               	movwf	??_atoi^0,c
  6165  002F82  0EFF               	movlw	255
  6166  002F84  6E0B               	movwf	(??_atoi+1)^0,c
  6167  002F86  C008  FFF6         	movff	atoi@s,tblptrl
  6168  002F8A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6169  002F8E                     	if	0	;tblptru may be non-zero
  6170  002F8E                     	endif
  6171  002F8E                     	if	0	;tblptru may be non-zero
  6172  002F8E                     	endif
  6173  002F8E  0008               	tblrd		*
  6174  002F90  50F5               	movf	tablat,w,c
  6175  002F92  6E0C               	movwf	(??_atoi+2)^0,c
  6176  002F94  6A0D               	clrf	(??_atoi+3)^0,c
  6177  002F96  500A               	movf	??_atoi^0,w,c
  6178  002F98  260C               	addwf	(??_atoi+2)^0,f,c
  6179  002F9A  500B               	movf	(??_atoi+1)^0,w,c
  6180  002F9C  220D               	addwfc	(??_atoi+3)^0,f,c
  6181  002F9E  500D               	movf	(??_atoi+3)^0,w,c
  6182  002FA0  E109               	bnz	u4370
  6183  002FA2  0E0A               	movlw	10
  6184  002FA4  5C0C               	subwf	(??_atoi+2)^0,w,c
  6185  002FA6  A0D8               	btfss	status,0,c
  6186  002FA8  EFD8  F017         	goto	u4371
  6187  002FAC  EFDA  F017         	goto	u4370
  6188  002FB0                     u4371:
  6189  002FB0  EFA4  F017         	goto	l3937
  6190  002FB4                     u4370:
  6191  002FB4  500E               	movf	atoi@neg^0,w,c
  6192  002FB6  100F               	iorwf	(atoi@neg+1)^0,w,c
  6193  002FB8  A4D8               	btfss	status,2,c
  6194  002FBA  EFE1  F017         	goto	u4381
  6195  002FBE  EFE3  F017         	goto	u4380
  6196  002FC2                     u4381:
  6197  002FC2  EFF1  F017         	goto	l1060
  6198  002FC6                     u4380:
  6199  002FC6  C010  F00A         	movff	atoi@n,??_atoi
  6200  002FCA  C011  F00B         	movff	atoi@n+1,??_atoi+1
  6201  002FCE  1E0A               	comf	??_atoi^0,f,c
  6202  002FD0  1E0B               	comf	(??_atoi+1)^0,f,c
  6203  002FD2  4A0A               	infsnz	??_atoi^0,f,c
  6204  002FD4  2A0B               	incf	(??_atoi+1)^0,f,c
  6205  002FD6  C00A  F008         	movff	??_atoi,?_atoi
  6206  002FDA  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6207  002FDE  EFF5  F017         	goto	l1063
  6208  002FE2                     l1060:
  6209  002FE2  C010  F008         	movff	atoi@n,?_atoi
  6210  002FE6  C011  F009         	movff	atoi@n+1,?_atoi+1
  6211  002FEA                     l1063:
  6212  002FEA  0012               	return		;funcret
  6213  002FEC                     __end_of_atoi:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function _isspace *****************
  6217 ;; Defined at:
  6218 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  c               2    0[COMRAM] int 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;		None
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  2    0[COMRAM] int 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2, status,0
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6232 ;;      Params:         2       0       0       0       0       0       0       0       0
  6233 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6234 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6235 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6236 ;;Total ram usage:        7 bytes
  6237 ;; Hardware stack levels used: 1
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		_atoi
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245                           	psect	text23
  6246  003B30                     __ptext23:
  6247                           	callstack 0
  6248  003B30                     _isspace:
  6249                           	callstack 26
  6250  003B30  0E01               	movlw	1
  6251  003B32  6E07               	movwf	_isspace$1256^0,c
  6252  003B34  0E20               	movlw	32
  6253  003B36  1801               	xorwf	isspace@c^0,w,c
  6254  003B38  1002               	iorwf	(isspace@c+1)^0,w,c
  6255  003B3A  B4D8               	btfsc	status,2,c
  6256  003B3C  EFA2  F01D         	goto	u3851
  6257  003B40  EFA4  F01D         	goto	u3850
  6258  003B44                     u3851:
  6259  003B44  EFBD  F01D         	goto	l3611
  6260  003B48                     u3850:
  6261  003B48  0EF7               	movlw	247
  6262  003B4A  6E03               	movwf	??_isspace^0,c
  6263  003B4C  0EFF               	movlw	255
  6264  003B4E  6E04               	movwf	(??_isspace+1)^0,c
  6265  003B50  C001  F005         	movff	isspace@c,??_isspace+2
  6266  003B54  C002  F006         	movff	isspace@c+1,??_isspace+3
  6267  003B58  5003               	movf	??_isspace^0,w,c
  6268  003B5A  2605               	addwf	(??_isspace+2)^0,f,c
  6269  003B5C  5004               	movf	(??_isspace+1)^0,w,c
  6270  003B5E  2206               	addwfc	(??_isspace+3)^0,f,c
  6271  003B60  5006               	movf	(??_isspace+3)^0,w,c
  6272  003B62  E109               	bnz	u3860
  6273  003B64  0E05               	movlw	5
  6274  003B66  5C05               	subwf	(??_isspace+2)^0,w,c
  6275  003B68  A0D8               	btfss	status,0,c
  6276  003B6A  EFB9  F01D         	goto	u3861
  6277  003B6E  EFBB  F01D         	goto	u3860
  6278  003B72                     u3861:
  6279  003B72  EFBD  F01D         	goto	l3611
  6280  003B76                     u3860:
  6281  003B76  0E00               	movlw	0
  6282  003B78  6E07               	movwf	_isspace$1256^0,c
  6283  003B7A                     l3611:
  6284  003B7A  C007  F001         	movff	_isspace$1256,?_isspace
  6285  003B7E  6A02               	clrf	(?_isspace+1)^0,c
  6286  003B80  0012               	return		;funcret
  6287  003B82                     __end_of_isspace:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function _isdigit *****************
  6291 ;; Defined at:
  6292 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  c               2    0[COMRAM] int 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  2    0[COMRAM] int 
  6299 ;; Registers used:
  6300 ;;		wreg, status,2, status,0
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6306 ;;      Params:         2       0       0       0       0       0       0       0       0
  6307 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6308 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6309 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6310 ;;Total ram usage:        6 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		_vfpfcnvrt
  6316 ;;		_atoi
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text24
  6321  003D4E                     __ptext24:
  6322                           	callstack 0
  6323  003D4E                     _isdigit:
  6324                           	callstack 27
  6325  003D4E  0ED0               	movlw	208
  6326  003D50  6E03               	movwf	??_isdigit^0,c
  6327  003D52  0EFF               	movlw	255
  6328  003D54  6E04               	movwf	(??_isdigit+1)^0,c
  6329  003D56  C001  F005         	movff	isdigit@c,??_isdigit+2
  6330  003D5A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6331  003D5E  5003               	movf	??_isdigit^0,w,c
  6332  003D60  2605               	addwf	(??_isdigit+2)^0,f,c
  6333  003D62  5004               	movf	(??_isdigit+1)^0,w,c
  6334  003D64  2206               	addwfc	(??_isdigit+3)^0,f,c
  6335  003D66  5006               	movf	(??_isdigit+3)^0,w,c
  6336  003D68  E10A               	bnz	u3830
  6337  003D6A  0E0A               	movlw	10
  6338  003D6C  5C05               	subwf	(??_isdigit+2)^0,w,c
  6339  003D6E  A0D8               	btfss	status,0,c
  6340  003D70  EFBC  F01E         	goto	u3831
  6341  003D74  EFBF  F01E         	goto	u3830
  6342  003D78                     u3831:
  6343  003D78  0E01               	movlw	1
  6344  003D7A  EFC0  F01E         	goto	u3840
  6345  003D7E                     u3830:
  6346  003D7E  0E00               	movlw	0
  6347  003D80                     u3840:
  6348  003D80  6E01               	movwf	?_isdigit^0,c
  6349  003D82  6A02               	clrf	(?_isdigit+1)^0,c
  6350  003D84  0012               	return		;funcret
  6351  003D86                     __end_of_isdigit:
  6352                           	callstack 0
  6353                           
  6354 ;; *************** function ___wmul *****************
  6355 ;; Defined at:
  6356 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  multiplier      2    0[COMRAM] unsigned int 
  6359 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;  product         2    4[COMRAM] unsigned int 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  2    0[COMRAM] unsigned int 
  6364 ;; Registers used:
  6365 ;;		wreg, status,2, status,0, prodl, prodh
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6371 ;;      Params:         4       0       0       0       0       0       0       0       0
  6372 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6374 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6375 ;;Total ram usage:        6 bytes
  6376 ;; Hardware stack levels used: 1
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_atoi
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text25
  6385  003DEC                     __ptext25:
  6386                           	callstack 0
  6387  003DEC                     ___wmul:
  6388                           	callstack 26
  6389  003DEC  5001               	movf	___wmul@multiplier^0,w,c
  6390  003DEE  0203               	mulwf	___wmul@multiplicand^0,c
  6391  003DF0  CFF3 F005          	movff	prodl,___wmul@product
  6392  003DF4  CFF4 F006          	movff	prodh,___wmul@product+1
  6393  003DF8  5001               	movf	___wmul@multiplier^0,w,c
  6394  003DFA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6395  003DFC  50F3               	movf	243,w,c
  6396  003DFE  2606               	addwf	(___wmul@product+1)^0,f,c
  6397  003E00  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6398  003E02  0203               	mulwf	___wmul@multiplicand^0,c
  6399  003E04  50F3               	movf	243,w,c
  6400  003E06  2606               	addwf	(___wmul@product+1)^0,f,c
  6401  003E08  C005  F001         	movff	___wmul@product,?___wmul
  6402  003E0C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6403  003E10  0012               	return		;funcret
  6404  003E12                     __end_of___wmul:
  6405                           	callstack 0
  6406                           
  6407 ;; *************** function _getDistance *****************
  6408 ;; Defined at:
  6409 ;;		line 78 in file "main.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;		None
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  count           2    2[COMRAM] unsigned short 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  2    0[COMRAM] unsigned short 
  6416 ;; Registers used:
  6417 ;;		wreg, status,2, status,0
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6423 ;;      Params:         2       0       0       0       0       0       0       0       0
  6424 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6426 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6427 ;;Total ram usage:        4 bytes
  6428 ;; Hardware stack levels used: 1
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_main
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text26
  6437  003B82                     __ptext26:
  6438                           	callstack 0
  6439  003B82                     _getDistance:
  6440                           	callstack 30
  6441  003B82                     
  6442                           ;main.c: 79:     uint16_t count=0;
  6443  003B82  0E00               	movlw	0
  6444  003B84  6E04               	movwf	(getDistance@count+1)^0,c
  6445  003B86  0E00               	movlw	0
  6446  003B88  6E03               	movwf	getDistance@count^0,c
  6447  003B8A                     
  6448                           ;main.c: 80:     PORTBbits.RB0 = 1;
  6449  003B8A  8081               	bsf	129,0,c	;volatile
  6450  003B8C                     
  6451                           ;main.c: 81:     _delay((unsigned long)((10)*(20000000UL/4000000.0)));
  6452  003B8C  0E10               	movlw	16
  6453  003B8E                     u4837:
  6454  003B8E  2EE8               	decfsz	wreg,f,c
  6455  003B90  D7FE               	bra	u4837
  6456  003B92  D000               	nop2	
  6457  003B94                     
  6458                           ;main.c: 82:     PORTBbits.RB0 = 0;
  6459  003B94  9081               	bcf	129,0,c	;volatile
  6460  003B96                     l64:
  6461  003B96  A281               	btfss	129,1,c	;volatile
  6462  003B98  EFD0  F01D         	goto	u4761
  6463  003B9C  EFD2  F01D         	goto	u4760
  6464  003BA0                     u4761:
  6465  003BA0  EFCB  F01D         	goto	l64
  6466  003BA4                     u4760:
  6467  003BA4  EFDA  F01D         	goto	l4263
  6468  003BA8                     l4259:
  6469                           
  6470                           ;main.c: 86:         count++;
  6471  003BA8  4A03               	infsnz	getDistance@count^0,f,c
  6472  003BAA  2A04               	incf	(getDistance@count+1)^0,f,c
  6473  003BAC                     
  6474                           ;main.c: 87:         _delay((unsigned long)((58)*(20000000UL/4000000.0)));
  6475  003BAC  0E60               	movlw	96
  6476  003BAE                     u4847:
  6477  003BAE  2EE8               	decfsz	wreg,f,c
  6478  003BB0  D7FE               	bra	u4847
  6479  003BB2  D000               	nop2	
  6480  003BB4                     l4263:
  6481                           
  6482                           ;main.c: 85:     while(PORTBbits.RB1 == 1){
  6483  003BB4  B281               	btfsc	129,1,c	;volatile
  6484  003BB6  EFDF  F01D         	goto	u4771
  6485  003BBA  EFE1  F01D         	goto	u4770
  6486  003BBE                     u4771:
  6487  003BBE  EFD4  F01D         	goto	l4259
  6488  003BC2                     u4770:
  6489  003BC2                     
  6490                           ;main.c: 90:     return(count);
  6491  003BC2  C003  F001         	movff	getDistance@count,?_getDistance
  6492  003BC6  C004  F002         	movff	getDistance@count+1,?_getDistance+1
  6493  003BCA  0012               	return		;funcret
  6494  003BCC                     __end_of_getDistance:
  6495                           	callstack 0
  6496                           
  6497 ;; *************** function _UART_Write_Text *****************
  6498 ;; Defined at:
  6499 ;;		line 44 in file "UART_LIB.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  text            2    1[COMRAM] PTR unsigned char 
  6502 ;;		 -> strUART(50), 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1    wreg      void 
  6507 ;; Registers used:
  6508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6514 ;;      Params:         2       0       0       0       0       0       0       0       0
  6515 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6517 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6518 ;;Total ram usage:        2 bytes
  6519 ;; Hardware stack levels used: 1
  6520 ;; Hardware stack levels required when called: 1
  6521 ;; This function calls:
  6522 ;;		_UART_Write_Chr
  6523 ;; This function is called by:
  6524 ;;		_main
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text27
  6529  003DBC                     __ptext27:
  6530                           	callstack 0
  6531  003DBC                     _UART_Write_Text:
  6532                           	callstack 29
  6533  003DBC                     
  6534                           ;UART_LIB.c: 45:     while(*text){
  6535  003DBC  EFE9  F01E         	goto	l4283
  6536  003DC0                     l4279:
  6537                           
  6538                           ;UART_LIB.c: 46:         UART_Write_Chr(*text);
  6539  003DC0  C002  FFD9         	movff	UART_Write_Text@text,fsr2l
  6540  003DC4  C003  FFDA         	movff	UART_Write_Text@text+1,fsr2h
  6541  003DC8  50DF               	movf	indf2,w,c
  6542  003DCA  EC09  F01F         	call	_UART_Write_Chr
  6543  003DCE                     
  6544                           ;UART_LIB.c: 47:         text++;
  6545  003DCE  4A02               	infsnz	UART_Write_Text@text^0,f,c
  6546  003DD0  2A03               	incf	(UART_Write_Text@text+1)^0,f,c
  6547  003DD2                     l4283:
  6548                           
  6549                           ;UART_LIB.c: 45:     while(*text){
  6550  003DD2  C002  FFD9         	movff	UART_Write_Text@text,fsr2l
  6551  003DD6  C003  FFDA         	movff	UART_Write_Text@text+1,fsr2h
  6552  003DDA  50DF               	movf	indf2,w,c
  6553  003DDC  A4D8               	btfss	status,2,c
  6554  003DDE  EFF3  F01E         	goto	u4781
  6555  003DE2  EFF5  F01E         	goto	u4780
  6556  003DE6                     u4781:
  6557  003DE6  EFE0  F01E         	goto	l4279
  6558  003DEA                     u4780:
  6559  003DEA  0012               	return		;funcret
  6560  003DEC                     __end_of_UART_Write_Text:
  6561                           	callstack 0
  6562                           
  6563 ;; *************** function _UART_Write_Chr *****************
  6564 ;; Defined at:
  6565 ;;		line 40 in file "UART_LIB.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;  letter          1    wreg     unsigned char 
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;  letter          1    0[COMRAM] unsigned char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      void 
  6572 ;; Registers used:
  6573 ;;		wreg
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6579 ;;      Params:         0       0       0       0       0       0       0       0       0
  6580 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6582 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6583 ;;Total ram usage:        1 bytes
  6584 ;; Hardware stack levels used: 1
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_UART_Write_Text
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           	psect	text28
  6593  003E12                     __ptext28:
  6594                           	callstack 0
  6595  003E12                     _UART_Write_Chr:
  6596                           	callstack 29
  6597                           
  6598                           ;incstack = 0
  6599                           ;UART_Write_Chr@letter stored from wreg
  6600  003E12  6E01               	movwf	UART_Write_Chr@letter^0,c
  6601  003E14                     l115:
  6602  003E14  A2AC               	btfss	172,1,c	;volatile
  6603  003E16  EF0F  F01F         	goto	u4561
  6604  003E1A  EF11  F01F         	goto	u4560
  6605  003E1E                     u4561:
  6606  003E1E  EF0A  F01F         	goto	l115
  6607  003E22                     u4560:
  6608  003E22                     
  6609                           ;UART_LIB.c: 42:     TXREG = letter;
  6610  003E22  C001  FFAD         	movff	UART_Write_Chr@letter,4013	;volatile
  6611  003E26  0012               	return		;funcret
  6612  003E28                     __end_of_UART_Write_Chr:
  6613                           	callstack 0
  6614                           
  6615 ;; *************** function _UART_Init *****************
  6616 ;; Defined at:
  6617 ;;		line 5 in file "UART_LIB.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  config          8   13[COMRAM] struct .
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;  spbrg_val       4   25[COMRAM] unsigned long 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0, cstack
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6631 ;;      Params:         8       0       0       0       0       0       0       0       0
  6632 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6633 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6634 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6635 ;;Total ram usage:       16 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; Hardware stack levels required when called: 1
  6638 ;; This function calls:
  6639 ;;		___lldiv
  6640 ;; This function is called by:
  6641 ;;		_main
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text29
  6646  0032F6                     __ptext29:
  6647                           	callstack 0
  6648  0032F6                     _UART_Init:
  6649                           	callstack 29
  6650  0032F6                     
  6651                           ;UART_LIB.c: 7:     unsigned long spbrg_val = (20000000UL / (16 * config.baud_rate)) - 1
      +                          ;
  6652  0032F6  0E00               	movlw	0
  6653  0032F8  6E01               	movwf	___lldiv@dividend^0,c
  6654  0032FA  0E2D               	movlw	45
  6655  0032FC  6E02               	movwf	(___lldiv@dividend+1)^0,c
  6656  0032FE  0E31               	movlw	49
  6657  003300  6E03               	movwf	(___lldiv@dividend+2)^0,c
  6658  003302  0E01               	movlw	1
  6659  003304  6E04               	movwf	(___lldiv@dividend+3)^0,c
  6660  003306  C00E  F016         	movff	UART_Init@config,??_UART_Init
  6661  00330A  C00F  F017         	movff	UART_Init@config+1,??_UART_Init+1
  6662  00330E  C010  F018         	movff	UART_Init@config+2,??_UART_Init+2
  6663  003312  C011  F019         	movff	UART_Init@config+3,??_UART_Init+3
  6664  003316  0E04               	movlw	4
  6665  003318                     u4715:
  6666  003318  90D8               	bcf	status,0,c
  6667  00331A  3616               	rlcf	??_UART_Init^0,f,c
  6668  00331C  3617               	rlcf	(??_UART_Init+1)^0,f,c
  6669  00331E  3618               	rlcf	(??_UART_Init+2)^0,f,c
  6670  003320  3619               	rlcf	(??_UART_Init+3)^0,f,c
  6671  003322  2EE8               	decfsz	wreg,f,c
  6672  003324  EF8C  F019         	goto	u4715
  6673  003328  C016  F005         	movff	??_UART_Init,___lldiv@divisor
  6674  00332C  C017  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
  6675  003330  C018  F007         	movff	??_UART_Init+2,___lldiv@divisor+2
  6676  003334  C019  F008         	movff	??_UART_Init+3,___lldiv@divisor+3
  6677  003338  EC8F  F01C         	call	___lldiv	;wreg free
  6678  00333C  0EFF               	movlw	255
  6679  00333E  2401               	addwf	?___lldiv^0,w,c
  6680  003340  6E1A               	movwf	UART_Init@spbrg_val^0,c
  6681  003342  0EFF               	movlw	255
  6682  003344  2002               	addwfc	(?___lldiv+1)^0,w,c
  6683  003346  6E1B               	movwf	(UART_Init@spbrg_val+1)^0,c
  6684  003348  0EFF               	movlw	255
  6685  00334A  2003               	addwfc	(?___lldiv+2)^0,w,c
  6686  00334C  6E1C               	movwf	(UART_Init@spbrg_val+2)^0,c
  6687  00334E  0EFF               	movlw	255
  6688  003350  2004               	addwfc	(?___lldiv+3)^0,w,c
  6689  003352  6E1D               	movwf	(UART_Init@spbrg_val+3)^0,c
  6690  003354                     
  6691                           ;UART_LIB.c: 8:     SPBRG = (unsigned char)(spbrg_val);
  6692  003354  C01A  FFAF         	movff	UART_Init@spbrg_val,4015	;volatile
  6693  003358                     
  6694                           ;UART_LIB.c: 11:     TXSTA = 0x24;
  6695  003358  0E24               	movlw	36
  6696  00335A  6EAC               	movwf	172,c	;volatile
  6697  00335C                     
  6698                           ;UART_LIB.c: 12:     RCSTA = 0x90;
  6699  00335C  0E90               	movlw	144
  6700  00335E  6EAB               	movwf	171,c	;volatile
  6701  003360                     
  6702                           ;UART_LIB.c: 15:     TX9 = config.data_bits == 9 ? 1 : 0;
  6703  003360  0E09               	movlw	9
  6704  003362  1812               	xorwf	(UART_Init@config+4)^0,w,c
  6705  003364  B4D8               	btfsc	status,2,c
  6706  003366  EFB7  F019         	goto	u4721
  6707  00336A  EFBA  F019         	goto	u4720
  6708  00336E                     u4721:
  6709  00336E  8CAC               	bsf	4012,6,c	;volatile
  6710  003370  EFBB  F019         	goto	u4735
  6711  003374                     u4720:
  6712  003374  9CAC               	bcf	4012,6,c	;volatile
  6713  003376                     u4735:
  6714  003376                     
  6715                           ;UART_LIB.c: 16:     RX9 = config.data_bits == 9 ? 1 : 0;
  6716  003376  0E09               	movlw	9
  6717  003378  1812               	xorwf	(UART_Init@config+4)^0,w,c
  6718  00337A  B4D8               	btfsc	status,2,c
  6719  00337C  EFC2  F019         	goto	u4741
  6720  003380  EFC5  F019         	goto	u4740
  6721  003384                     u4741:
  6722  003384  8CAB               	bsf	4011,6,c	;volatile
  6723  003386  EFC6  F019         	goto	u4755
  6724  00338A                     u4740:
  6725  00338A  9CAB               	bcf	4011,6,c	;volatile
  6726  00338C                     u4755:
  6727  00338C                     
  6728                           ;UART_LIB.c: 17:     TXEN = 1;
  6729  00338C  8AAC               	bsf	4012,5,c	;volatile
  6730  00338E                     
  6731                           ;UART_LIB.c: 18:     SYNC = 0;
  6732  00338E  98AC               	bcf	4012,4,c	;volatile
  6733  003390                     
  6734                           ;UART_LIB.c: 19:     SPEN = 1;
  6735  003390  8EAB               	bsf	4011,7,c	;volatile
  6736                           
  6737                           ;UART_LIB.c: 22:     switch (config.parity) {
  6738  003392  EFD9  F019         	goto	l4243
  6739  003396                     l108:
  6740                           
  6741                           ;UART_LIB.c: 24:             BRGH = 1;
  6742  003396  84AC               	bsf	4012,2,c	;volatile
  6743                           
  6744                           ;UART_LIB.c: 25:             TX9D = 0;
  6745  003398  90AC               	bcf	4012,0,c	;volatile
  6746  00339A                     l4235:
  6747                           
  6748                           ;UART_LIB.c: 26:             RCSTA |= 0x02;
  6749  00339A  82AB               	bsf	171,1,c	;volatile
  6750                           
  6751                           ;UART_LIB.c: 27:             break;
  6752  00339C  EFEE  F019         	goto	l112
  6753  0033A0                     l110:
  6754                           
  6755                           ;UART_LIB.c: 29:             BRGH = 1;
  6756  0033A0  84AC               	bsf	4012,2,c	;volatile
  6757                           
  6758                           ;UART_LIB.c: 30:             TX9D = 1;
  6759  0033A2  80AC               	bsf	4012,0,c	;volatile
  6760  0033A4  EFCD  F019         	goto	l4235
  6761  0033A8                     l111:
  6762                           
  6763                           ;UART_LIB.c: 34:             BRGH = 1;
  6764  0033A8  84AC               	bsf	4012,2,c	;volatile
  6765                           
  6766                           ;UART_LIB.c: 35:             TX9D = 0;
  6767  0033AA  90AC               	bcf	4012,0,c	;volatile
  6768  0033AC                     
  6769                           ;UART_LIB.c: 36:             RCSTA &= ~0x02;
  6770  0033AC  92AB               	bcf	171,1,c	;volatile
  6771                           
  6772                           ;UART_LIB.c: 37:             break;
  6773  0033AE  EFEE  F019         	goto	l112
  6774  0033B2                     l4243:
  6775  0033B2  5013               	movf	(UART_Init@config+5)^0,w,c
  6776  0033B4  6E16               	movwf	??_UART_Init^0,c
  6777  0033B6  6A17               	clrf	(??_UART_Init+1)^0,c
  6778                           
  6779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6780                           ; Switch size 1, requested type "simple"
  6781                           ; Number of cases is 1, Range of values is 0 to 0
  6782                           ; switch strategies available:
  6783                           ; Name         Instructions Cycles
  6784                           ; simple_byte            4     3 (average)
  6785                           ;	Chosen strategy is simple_byte
  6786  0033B8  5017               	movf	(??_UART_Init+1)^0,w,c
  6787  0033BA  0A00               	xorlw	0	; case 0
  6788  0033BC  B4D8               	btfsc	status,2,c
  6789  0033BE  EFE3  F019         	goto	l4467
  6790  0033C2  EFD4  F019         	goto	l111
  6791  0033C6                     l4467:
  6792                           
  6793                           ; Switch size 1, requested type "simple"
  6794                           ; Number of cases is 2, Range of values is 1 to 2
  6795                           ; switch strategies available:
  6796                           ; Name         Instructions Cycles
  6797                           ; simple_byte            7     4 (average)
  6798                           ;	Chosen strategy is simple_byte
  6799  0033C6  5016               	movf	??_UART_Init^0,w,c
  6800  0033C8  0A01               	xorlw	1	; case 1
  6801  0033CA  B4D8               	btfsc	status,2,c
  6802  0033CC  EFCB  F019         	goto	l108
  6803  0033D0  0A03               	xorlw	3	; case 2
  6804  0033D2  B4D8               	btfsc	status,2,c
  6805  0033D4  EFD0  F019         	goto	l110
  6806  0033D8  EFD4  F019         	goto	l111
  6807  0033DC                     l112:
  6808  0033DC  0012               	return		;funcret
  6809  0033DE                     __end_of_UART_Init:
  6810                           	callstack 0
  6811                           
  6812 ;; *************** function ___lldiv *****************
  6813 ;; Defined at:
  6814 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;  dividend        4    0[COMRAM] unsigned long 
  6817 ;;  divisor         4    4[COMRAM] unsigned long 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;  quotient        4    8[COMRAM] unsigned long 
  6820 ;;  counter         1   12[COMRAM] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  4    0[COMRAM] unsigned long 
  6823 ;; Registers used:
  6824 ;;		wreg, status,2, status,0
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6830 ;;      Params:         8       0       0       0       0       0       0       0       0
  6831 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6833 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6834 ;;Total ram usage:       13 bytes
  6835 ;; Hardware stack levels used: 1
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_UART_Init
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text30
  6844  00391E                     __ptext30:
  6845                           	callstack 0
  6846  00391E                     ___lldiv:
  6847                           	callstack 29
  6848  00391E  0E00               	movlw	0
  6849  003920  6E09               	movwf	___lldiv@quotient^0,c
  6850  003922  0E00               	movlw	0
  6851  003924  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6852  003926  0E00               	movlw	0
  6853  003928  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6854  00392A  0E00               	movlw	0
  6855  00392C  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6856  00392E  5005               	movf	___lldiv@divisor^0,w,c
  6857  003930  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6858  003932  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6859  003934  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6860  003936  B4D8               	btfsc	status,2,c
  6861  003938  EFA0  F01C         	goto	u4571
  6862  00393C  EFA2  F01C         	goto	u4570
  6863  003940                     u4571:
  6864  003940  EFD8  F01C         	goto	l204
  6865  003944                     u4570:
  6866  003944  0E01               	movlw	1
  6867  003946  6E0D               	movwf	___lldiv@counter^0,c
  6868  003948  EFAC  F01C         	goto	l4111
  6869  00394C                     l4109:
  6870  00394C  90D8               	bcf	status,0,c
  6871  00394E  3605               	rlcf	___lldiv@divisor^0,f,c
  6872  003950  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6873  003952  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6874  003954  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6875  003956  2A0D               	incf	___lldiv@counter^0,f,c
  6876  003958                     l4111:
  6877  003958  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6878  00395A  EFB1  F01C         	goto	u4581
  6879  00395E  EFB3  F01C         	goto	u4580
  6880  003962                     u4581:
  6881  003962  EFA6  F01C         	goto	l4109
  6882  003966                     u4580:
  6883  003966                     l4113:
  6884  003966  90D8               	bcf	status,0,c
  6885  003968  3609               	rlcf	___lldiv@quotient^0,f,c
  6886  00396A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6887  00396C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6888  00396E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6889  003970  5005               	movf	___lldiv@divisor^0,w,c
  6890  003972  5C01               	subwf	___lldiv@dividend^0,w,c
  6891  003974  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6892  003976  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6893  003978  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6894  00397A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6895  00397C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6896  00397E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6897  003980  A0D8               	btfss	status,0,c
  6898  003982  EFC5  F01C         	goto	u4591
  6899  003986  EFC7  F01C         	goto	u4590
  6900  00398A                     u4591:
  6901  00398A  EFD0  F01C         	goto	l4121
  6902  00398E                     u4590:
  6903  00398E  5005               	movf	___lldiv@divisor^0,w,c
  6904  003990  5E01               	subwf	___lldiv@dividend^0,f,c
  6905  003992  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6906  003994  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6907  003996  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6908  003998  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6909  00399A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6910  00399C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6911  00399E  8009               	bsf	___lldiv@quotient^0,0,c
  6912  0039A0                     l4121:
  6913  0039A0  90D8               	bcf	status,0,c
  6914  0039A2  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6915  0039A4  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6916  0039A6  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6917  0039A8  3205               	rrcf	___lldiv@divisor^0,f,c
  6918  0039AA  2E0D               	decfsz	___lldiv@counter^0,f,c
  6919  0039AC  EFB3  F01C         	goto	l4113
  6920  0039B0                     l204:
  6921  0039B0  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6922  0039B4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6923  0039B8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6924  0039BC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6925  0039C0  0012               	return		;funcret
  6926  0039C2                     __end_of___lldiv:
  6927                           	callstack 0
  6928                           
  6929 ;; *************** function _PWM1_Start *****************
  6930 ;; Defined at:
  6931 ;;		line 68 in file "PWM_LIB.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;		None
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;		None
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  1    wreg      void 
  6938 ;; Registers used:
  6939 ;;		None
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6945 ;;      Params:         0       0       0       0       0       0       0       0       0
  6946 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6948 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6949 ;;Total ram usage:        0 bytes
  6950 ;; Hardware stack levels used: 1
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_main
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text31
  6959  003E2E                     __ptext31:
  6960                           	callstack 0
  6961  003E2E                     _PWM1_Start:
  6962                           	callstack 30
  6963  003E2E                     
  6964                           ;PWM_LIB.c: 69:     T2CONbits.TMR2ON = 1;
  6965  003E2E  84CA               	bsf	202,2,c	;volatile
  6966  003E30  0012               	return		;funcret
  6967  003E32                     __end_of_PWM1_Start:
  6968                           	callstack 0
  6969                           
  6970 ;; *************** function _PWM1_Set_Duty *****************
  6971 ;; Defined at:
  6972 ;;		line 60 in file "PWM_LIB.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  duty            1    wreg     unsigned char 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  duty            1    8[BANK0 ] unsigned char 
  6977 ;;  val             4    9[BANK0 ] float 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      void 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6987 ;;      Params:         0       0       0       0       0       0       0       0       0
  6988 ;;      Locals:         0       5       0       0       0       0       0       0       0
  6989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6990 ;;      Totals:         0       5       0       0       0       0       0       0       0
  6991 ;;Total ram usage:        5 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; Hardware stack levels required when called: 1
  6994 ;; This function calls:
  6995 ;;		___fldiv
  6996 ;;		___flmul
  6997 ;;		___fltol
  6998 ;;		___xxtofl
  6999 ;; This function is called by:
  7000 ;;		_main
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text32
  7005  003708                     __ptext32:
  7006                           	callstack 0
  7007  003708                     _PWM1_Set_Duty:
  7008                           	callstack 29
  7009                           
  7010                           ;incstack = 0
  7011                           ;PWM1_Set_Duty@duty stored from wreg
  7012  003708  0100               	movlb	0	; () banked
  7013  00370A  6F68               	movwf	PWM1_Set_Duty@duty& (0+255),b
  7014  00370C                     
  7015                           ;PWM_LIB.c: 61:     float val = duty*reg10bits/100.0;
  7016  00370C  C108  F02F         	movff	_reg10bits,___flmul@a
  7017  003710  C109  F030         	movff	_reg10bits+1,___flmul@a+1
  7018  003714  C10A  F031         	movff	_reg10bits+2,___flmul@a+2
  7019  003718  C10B  F032         	movff	_reg10bits+3,___flmul@a+3
  7020  00371C  0100               	movlb	0	; () banked
  7021  00371E  5168               	movf	PWM1_Set_Duty@duty& (0+255),w,b
  7022  003720  6E05               	movwf	___xxtofl@val^0,c
  7023  003722  6A06               	clrf	(___xxtofl@val+1)^0,c
  7024  003724  6A07               	clrf	(___xxtofl@val+2)^0,c
  7025  003726  6A08               	clrf	(___xxtofl@val+3)^0,c
  7026  003728  0E01               	movlw	1
  7027  00372A  EC71  F016         	call	___xxtofl
  7028  00372E  C005  F02B         	movff	?___xxtofl,___flmul@b
  7029  003732  C006  F02C         	movff	?___xxtofl+1,___flmul@b+1
  7030  003736  C007  F02D         	movff	?___xxtofl+2,___flmul@b+2
  7031  00373A  C008  F02E         	movff	?___xxtofl+3,___flmul@b+3
  7032  00373E  ECF3  F00E         	call	___flmul	;wreg free
  7033  003742  C02B  F044         	movff	?___flmul,___fldiv@b
  7034  003746  C02C  F045         	movff	?___flmul+1,___fldiv@b+1
  7035  00374A  C02D  F046         	movff	?___flmul+2,___fldiv@b+2
  7036  00374E  C02E  F047         	movff	?___flmul+3,___fldiv@b+3
  7037  003752  0E00               	movlw	0
  7038  003754  6E48               	movwf	___fldiv@a^0,c
  7039  003756  0E00               	movlw	0
  7040  003758  6E49               	movwf	(___fldiv@a+1)^0,c
  7041  00375A  0EC8               	movlw	200
  7042  00375C  6E4A               	movwf	(___fldiv@a+2)^0,c
  7043  00375E  0E42               	movlw	66
  7044  003760  6E4B               	movwf	(___fldiv@a+3)^0,c
  7045  003762  EC08  F011         	call	___fldiv	;wreg free
  7046  003766  C044  F069         	movff	?___fldiv,PWM1_Set_Duty@val
  7047  00376A  C045  F06A         	movff	?___fldiv+1,PWM1_Set_Duty@val+1
  7048  00376E  C046  F06B         	movff	?___fldiv+2,PWM1_Set_Duty@val+2
  7049  003772  C047  F06C         	movff	?___fldiv+3,PWM1_Set_Duty@val+3
  7050  003776                     
  7051                           ;PWM_LIB.c: 62:     CCPR1L = (int)(val)>>2;
  7052  003776  C069  F060         	movff	PWM1_Set_Duty@val,___fltol@f1
  7053  00377A  C06A  F061         	movff	PWM1_Set_Duty@val+1,___fltol@f1+1
  7054  00377E  C06B  F062         	movff	PWM1_Set_Duty@val+2,___fltol@f1+2
  7055  003782  C06C  F063         	movff	PWM1_Set_Duty@val+3,___fltol@f1+3
  7056  003786  ECF6  F017         	call	___fltol	;wreg free
  7057  00378A  0100               	movlb	0	; () banked
  7058  00378C  3561               	rlcf	(?___fltol+1)& (0+255),w,b
  7059  00378E  3361               	rrcf	(?___fltol+1)& (0+255),f,b
  7060  003790  3360               	rrcf	?___fltol& (0+255),f,b
  7061  003792  3561               	rlcf	(?___fltol+1)& (0+255),w,b
  7062  003794  3361               	rrcf	(?___fltol+1)& (0+255),f,b
  7063  003796  3360               	rrcf	?___fltol& (0+255),f,b
  7064  003798  5160               	movf	?___fltol& (0+255),w,b
  7065  00379A  6EBE               	movwf	190,c	;volatile
  7066  00379C                     
  7067                           ; BSR set to: 0
  7068                           ;PWM_LIB.c: 63:     CCP1CONbits.DC1B = (int)(val)& 0x003;
  7069  00379C  C069  F060         	movff	PWM1_Set_Duty@val,___fltol@f1
  7070  0037A0  C06A  F061         	movff	PWM1_Set_Duty@val+1,___fltol@f1+1
  7071  0037A4  C06B  F062         	movff	PWM1_Set_Duty@val+2,___fltol@f1+2
  7072  0037A8  C06C  F063         	movff	PWM1_Set_Duty@val+3,___fltol@f1+3
  7073  0037AC  ECF6  F017         	call	___fltol	;wreg free
  7074  0037B0  0E03               	movlw	3
  7075  0037B2  0100               	movlb	0	; () banked
  7076  0037B4  1760               	andwf	?___fltol& (0+255),f,b
  7077  0037B6  3B60               	swapf	?___fltol& (0+255),f,b
  7078  0037B8  50BD               	movf	189,w,c	;volatile
  7079  0037BA  1960               	xorwf	?___fltol& (0+255),w,b
  7080  0037BC  0BCF               	andlw	-49
  7081  0037BE  1960               	xorwf	?___fltol& (0+255),w,b
  7082  0037C0  6EBD               	movwf	189,c	;volatile
  7083  0037C2                     
  7084                           ; BSR set to: 0
  7085  0037C2  0012               	return		;funcret
  7086  0037C4                     __end_of_PWM1_Set_Duty:
  7087                           	callstack 0
  7088                           
  7089 ;; *************** function _PWM1_Init *****************
  7090 ;; Defined at:
  7091 ;;		line 7 in file "PWM_LIB.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  freq            2    8[BANK0 ] unsigned short 
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;  prees           1   16[BANK0 ] unsigned char 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1    wreg      void 
  7098 ;; Registers used:
  7099 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7105 ;;      Params:         0       2       0       0       0       0       0       0       0
  7106 ;;      Locals:         0       5       0       0       0       0       0       0       0
  7107 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7108 ;;      Totals:         0       9       0       0       0       0       0       0       0
  7109 ;;Total ram usage:        9 bytes
  7110 ;; Hardware stack levels used: 1
  7111 ;; Hardware stack levels required when called: 1
  7112 ;; This function calls:
  7113 ;;		___fladd
  7114 ;;		___fldiv
  7115 ;;		___flmul
  7116 ;;		___fltol
  7117 ;;		___xxtofl
  7118 ;; This function is called by:
  7119 ;;		_main
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text33
  7124  00288C                     __ptext33:
  7125                           	callstack 0
  7126  00288C                     _PWM1_Init:
  7127                           	callstack 29
  7128  00288C                     
  7129                           ;PWM_LIB.c: 9:     uint8_t prees;;PWM_LIB.c: 11:     switch(2){
  7130  00288C  EF54  F014         	goto	l4189
  7131  002890                     l4181:
  7132                           
  7133                           ; BSR set to: 0
  7134  002890  0E01               	movlw	1
  7135  002892  6F70               	movwf	PWM1_Init@prees& (0+255),b
  7136  002894  EF6F  F014         	goto	l151
  7137  002898                     l4183:
  7138                           
  7139                           ; BSR set to: 0
  7140  002898  0E04               	movlw	4
  7141  00289A  6F70               	movwf	PWM1_Init@prees& (0+255),b
  7142  00289C  EF6F  F014         	goto	l151
  7143  0028A0                     l4185:
  7144                           
  7145                           ; BSR set to: 0
  7146  0028A0  0E10               	movlw	16
  7147  0028A2  6F70               	movwf	PWM1_Init@prees& (0+255),b
  7148  0028A4  EF6F  F014         	goto	l151
  7149  0028A8                     l4189:
  7150  0028A8  0E02               	movlw	2
  7151  0028AA  0100               	movlb	0	; () banked
  7152  0028AC  6F6A               	movwf	??_PWM1_Init& (0+255),b
  7153  0028AE  0E00               	movlw	0
  7154  0028B0  6F6B               	movwf	(??_PWM1_Init+1)& (0+255),b
  7155                           
  7156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7157                           ; Switch size 1, requested type "simple"
  7158                           ; Number of cases is 1, Range of values is 0 to 0
  7159                           ; switch strategies available:
  7160                           ; Name         Instructions Cycles
  7161                           ; simple_byte            4     3 (average)
  7162                           ;	Chosen strategy is simple_byte
  7163  0028B2  516B               	movf	(??_PWM1_Init+1)& (0+255),w,b
  7164  0028B4  0A00               	xorlw	0	; case 0
  7165  0028B6  B4D8               	btfsc	status,2,c
  7166  0028B8  EF60  F014         	goto	l4469
  7167  0028BC  EF6F  F014         	goto	l151
  7168  0028C0                     l4469:
  7169                           
  7170                           ; BSR set to: 0
  7171                           ; Switch size 1, requested type "simple"
  7172                           ; Number of cases is 3, Range of values is 0 to 2
  7173                           ; switch strategies available:
  7174                           ; Name         Instructions Cycles
  7175                           ; simple_byte           10     6 (average)
  7176                           ;	Chosen strategy is simple_byte
  7177  0028C0  516A               	movf	??_PWM1_Init& (0+255),w,b
  7178  0028C2  0A00               	xorlw	0	; case 0
  7179  0028C4  B4D8               	btfsc	status,2,c
  7180  0028C6  EF48  F014         	goto	l4181
  7181  0028CA  0A01               	xorlw	1	; case 1
  7182  0028CC  B4D8               	btfsc	status,2,c
  7183  0028CE  EF4C  F014         	goto	l4183
  7184  0028D2  0A03               	xorlw	3	; case 2
  7185  0028D4  B4D8               	btfsc	status,2,c
  7186  0028D6  EF50  F014         	goto	l4185
  7187  0028DA  EF6F  F014         	goto	l151
  7188  0028DE                     l151:
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;PWM_LIB.c: 18:     TRISCbits.TRISC2 = 0;
  7192  0028DE  9494               	bcf	148,2,c	;volatile
  7193  0028E0                     
  7194                           ; BSR set to: 0
  7195                           ;PWM_LIB.c: 21:     CCP1CONbits.CCP1M = 0b1100;
  7196  0028E0  50BD               	movf	189,w,c	;volatile
  7197  0028E2  0BF0               	andlw	-16
  7198  0028E4  090C               	iorlw	12
  7199  0028E6  6EBD               	movwf	189,c	;volatile
  7200                           
  7201                           ;PWM_LIB.c: 24:     T2CONbits.T2CKPS = 2;
  7202  0028E8  50CA               	movf	202,w,c	;volatile
  7203  0028EA  0BFC               	andlw	-4
  7204  0028EC  0902               	iorlw	2
  7205  0028EE  6ECA               	movwf	202,c	;volatile
  7206  0028F0                     
  7207                           ; BSR set to: 0
  7208                           ;PWM_LIB.c: 27:     PR2 = (uint8_t)((20000000UL / (4.0*freq*prees) ) - 1.0);
  7209  0028F0  0E00               	movlw	0
  7210  0028F2  6E2F               	movwf	___flmul@a^0,c
  7211  0028F4  0E00               	movlw	0
  7212  0028F6  6E30               	movwf	(___flmul@a+1)^0,c
  7213  0028F8  0E80               	movlw	128
  7214  0028FA  6E31               	movwf	(___flmul@a+2)^0,c
  7215  0028FC  0E40               	movlw	64
  7216  0028FE  6E32               	movwf	(___flmul@a+3)^0,c
  7217  002900  C068  F005         	movff	PWM1_Init@freq,___xxtofl@val
  7218  002904  C069  F006         	movff	PWM1_Init@freq+1,___xxtofl@val+1
  7219  002908  6A07               	clrf	(___xxtofl@val+2)^0,c
  7220  00290A  6A08               	clrf	(___xxtofl@val+3)^0,c
  7221  00290C  0E00               	movlw	0
  7222  00290E  EC71  F016         	call	___xxtofl
  7223  002912  C005  F02B         	movff	?___xxtofl,___flmul@b
  7224  002916  C006  F02C         	movff	?___xxtofl+1,___flmul@b+1
  7225  00291A  C007  F02D         	movff	?___xxtofl+2,___flmul@b+2
  7226  00291E  C008  F02E         	movff	?___xxtofl+3,___flmul@b+3
  7227  002922  ECF3  F00E         	call	___flmul	;wreg free
  7228  002926  C02B  F06C         	movff	?___flmul,_PWM1_Init$1544
  7229  00292A  C02C  F06D         	movff	?___flmul+1,_PWM1_Init$1544+1
  7230  00292E  C02D  F06E         	movff	?___flmul+2,_PWM1_Init$1544+2
  7231  002932  C02E  F06F         	movff	?___flmul+3,_PWM1_Init$1544+3
  7232  002936                     
  7233                           ;PWM_LIB.c: 27:     PR2 = (uint8_t)((20000000UL / (4.0*freq*prees) ) - 1.0);
  7234  002936  0E00               	movlw	0
  7235  002938  6E17               	movwf	___fladd@a^0,c
  7236  00293A  0E00               	movlw	0
  7237  00293C  6E18               	movwf	(___fladd@a+1)^0,c
  7238  00293E  0E80               	movlw	128
  7239  002940  6E19               	movwf	(___fladd@a+2)^0,c
  7240  002942  0EBF               	movlw	191
  7241  002944  6E1A               	movwf	(___fladd@a+3)^0,c
  7242  002946  0100               	movlb	0	; () banked
  7243  002948  5170               	movf	PWM1_Init@prees& (0+255),w,b
  7244  00294A  6E05               	movwf	___xxtofl@val^0,c
  7245  00294C  6A06               	clrf	(___xxtofl@val+1)^0,c
  7246  00294E  6A07               	clrf	(___xxtofl@val+2)^0,c
  7247  002950  6A08               	clrf	(___xxtofl@val+3)^0,c
  7248  002952  0E01               	movlw	1
  7249  002954  EC71  F016         	call	___xxtofl
  7250  002958  C005  F02F         	movff	?___xxtofl,___flmul@a
  7251  00295C  C006  F030         	movff	?___xxtofl+1,___flmul@a+1
  7252  002960  C007  F031         	movff	?___xxtofl+2,___flmul@a+2
  7253  002964  C008  F032         	movff	?___xxtofl+3,___flmul@a+3
  7254  002968  C06C  F02B         	movff	_PWM1_Init$1544,___flmul@b
  7255  00296C  C06D  F02C         	movff	_PWM1_Init$1544+1,___flmul@b+1
  7256  002970  C06E  F02D         	movff	_PWM1_Init$1544+2,___flmul@b+2
  7257  002974  C06F  F02E         	movff	_PWM1_Init$1544+3,___flmul@b+3
  7258  002978  ECF3  F00E         	call	___flmul	;wreg free
  7259  00297C  C02B  F048         	movff	?___flmul,___fldiv@a
  7260  002980  C02C  F049         	movff	?___flmul+1,___fldiv@a+1
  7261  002984  C02D  F04A         	movff	?___flmul+2,___fldiv@a+2
  7262  002988  C02E  F04B         	movff	?___flmul+3,___fldiv@a+3
  7263  00298C  0E80               	movlw	128
  7264  00298E  6E44               	movwf	___fldiv@b^0,c
  7265  002990  0E96               	movlw	150
  7266  002992  6E45               	movwf	(___fldiv@b+1)^0,c
  7267  002994  0E98               	movlw	152
  7268  002996  6E46               	movwf	(___fldiv@b+2)^0,c
  7269  002998  0E4B               	movlw	75
  7270  00299A  6E47               	movwf	(___fldiv@b+3)^0,c
  7271  00299C  EC08  F011         	call	___fldiv	;wreg free
  7272  0029A0  C044  F013         	movff	?___fldiv,___fladd@b
  7273  0029A4  C045  F014         	movff	?___fldiv+1,___fladd@b+1
  7274  0029A8  C046  F015         	movff	?___fldiv+2,___fladd@b+2
  7275  0029AC  C047  F016         	movff	?___fldiv+3,___fladd@b+3
  7276  0029B0  EC93  F00C         	call	___fladd	;wreg free
  7277  0029B4  C013  F060         	movff	?___fladd,___fltol@f1
  7278  0029B8  C014  F061         	movff	?___fladd+1,___fltol@f1+1
  7279  0029BC  C015  F062         	movff	?___fladd+2,___fltol@f1+2
  7280  0029C0  C016  F063         	movff	?___fladd+3,___fltol@f1+3
  7281  0029C4  ECF6  F017         	call	___fltol	;wreg free
  7282  0029C8  0100               	movlb	0	; () banked
  7283  0029CA  5160               	movf	?___fltol& (0+255),w,b
  7284  0029CC  6ECB               	movwf	203,c	;volatile
  7285  0029CE                     
  7286                           ; BSR set to: 0
  7287                           ;PWM_LIB.c: 29:     reg10bits = (20000000UL/(1.0*freq*prees));
  7288  0029CE  0E00               	movlw	0
  7289  0029D0  6E2F               	movwf	___flmul@a^0,c
  7290  0029D2  0E00               	movlw	0
  7291  0029D4  6E30               	movwf	(___flmul@a+1)^0,c
  7292  0029D6  0E80               	movlw	128
  7293  0029D8  6E31               	movwf	(___flmul@a+2)^0,c
  7294  0029DA  0E3F               	movlw	63
  7295  0029DC  6E32               	movwf	(___flmul@a+3)^0,c
  7296  0029DE  C068  F005         	movff	PWM1_Init@freq,___xxtofl@val
  7297  0029E2  C069  F006         	movff	PWM1_Init@freq+1,___xxtofl@val+1
  7298  0029E6  6A07               	clrf	(___xxtofl@val+2)^0,c
  7299  0029E8  6A08               	clrf	(___xxtofl@val+3)^0,c
  7300  0029EA  0E00               	movlw	0
  7301  0029EC  EC71  F016         	call	___xxtofl
  7302  0029F0  C005  F02B         	movff	?___xxtofl,___flmul@b
  7303  0029F4  C006  F02C         	movff	?___xxtofl+1,___flmul@b+1
  7304  0029F8  C007  F02D         	movff	?___xxtofl+2,___flmul@b+2
  7305  0029FC  C008  F02E         	movff	?___xxtofl+3,___flmul@b+3
  7306  002A00  ECF3  F00E         	call	___flmul	;wreg free
  7307  002A04  C02B  F06C         	movff	?___flmul,_PWM1_Init$1544
  7308  002A08  C02C  F06D         	movff	?___flmul+1,_PWM1_Init$1544+1
  7309  002A0C  C02D  F06E         	movff	?___flmul+2,_PWM1_Init$1544+2
  7310  002A10  C02E  F06F         	movff	?___flmul+3,_PWM1_Init$1544+3
  7311  002A14                     
  7312                           ;PWM_LIB.c: 29:     reg10bits = (20000000UL/(1.0*freq*prees));
  7313  002A14  0E80               	movlw	128
  7314  002A16  6E44               	movwf	___fldiv@b^0,c
  7315  002A18  0E96               	movlw	150
  7316  002A1A  6E45               	movwf	(___fldiv@b+1)^0,c
  7317  002A1C  0E98               	movlw	152
  7318  002A1E  6E46               	movwf	(___fldiv@b+2)^0,c
  7319  002A20  0E4B               	movlw	75
  7320  002A22  6E47               	movwf	(___fldiv@b+3)^0,c
  7321  002A24  0100               	movlb	0	; () banked
  7322  002A26  5170               	movf	PWM1_Init@prees& (0+255),w,b
  7323  002A28  6E05               	movwf	___xxtofl@val^0,c
  7324  002A2A  6A06               	clrf	(___xxtofl@val+1)^0,c
  7325  002A2C  6A07               	clrf	(___xxtofl@val+2)^0,c
  7326  002A2E  6A08               	clrf	(___xxtofl@val+3)^0,c
  7327  002A30  0E01               	movlw	1
  7328  002A32  EC71  F016         	call	___xxtofl
  7329  002A36  C005  F02F         	movff	?___xxtofl,___flmul@a
  7330  002A3A  C006  F030         	movff	?___xxtofl+1,___flmul@a+1
  7331  002A3E  C007  F031         	movff	?___xxtofl+2,___flmul@a+2
  7332  002A42  C008  F032         	movff	?___xxtofl+3,___flmul@a+3
  7333  002A46  C06C  F02B         	movff	_PWM1_Init$1544,___flmul@b
  7334  002A4A  C06D  F02C         	movff	_PWM1_Init$1544+1,___flmul@b+1
  7335  002A4E  C06E  F02D         	movff	_PWM1_Init$1544+2,___flmul@b+2
  7336  002A52  C06F  F02E         	movff	_PWM1_Init$1544+3,___flmul@b+3
  7337  002A56  ECF3  F00E         	call	___flmul	;wreg free
  7338  002A5A  C02B  F048         	movff	?___flmul,___fldiv@a
  7339  002A5E  C02C  F049         	movff	?___flmul+1,___fldiv@a+1
  7340  002A62  C02D  F04A         	movff	?___flmul+2,___fldiv@a+2
  7341  002A66  C02E  F04B         	movff	?___flmul+3,___fldiv@a+3
  7342  002A6A  EC08  F011         	call	___fldiv	;wreg free
  7343  002A6E  C044  F108         	movff	?___fldiv,_reg10bits
  7344  002A72  C045  F109         	movff	?___fldiv+1,_reg10bits+1
  7345  002A76  C046  F10A         	movff	?___fldiv+2,_reg10bits+2
  7346  002A7A  C047  F10B         	movff	?___fldiv+3,_reg10bits+3
  7347  002A7E                     
  7348                           ;PWM_LIB.c: 31:     CCPR1L = (int)(reg10bits)>>2;
  7349  002A7E  C108  F060         	movff	_reg10bits,___fltol@f1
  7350  002A82  C109  F061         	movff	_reg10bits+1,___fltol@f1+1
  7351  002A86  C10A  F062         	movff	_reg10bits+2,___fltol@f1+2
  7352  002A8A  C10B  F063         	movff	_reg10bits+3,___fltol@f1+3
  7353  002A8E  ECF6  F017         	call	___fltol	;wreg free
  7354  002A92  0100               	movlb	0	; () banked
  7355  002A94  3561               	rlcf	(?___fltol+1)& (0+255),w,b
  7356  002A96  3361               	rrcf	(?___fltol+1)& (0+255),f,b
  7357  002A98  3360               	rrcf	?___fltol& (0+255),f,b
  7358  002A9A  3561               	rlcf	(?___fltol+1)& (0+255),w,b
  7359  002A9C  3361               	rrcf	(?___fltol+1)& (0+255),f,b
  7360  002A9E  3360               	rrcf	?___fltol& (0+255),f,b
  7361  002AA0  5160               	movf	?___fltol& (0+255),w,b
  7362  002AA2  6EBE               	movwf	190,c	;volatile
  7363  002AA4                     
  7364                           ; BSR set to: 0
  7365                           ;PWM_LIB.c: 32:     CCP1CONbits.DC1B = (int)(reg10bits)& 0x003;
  7366  002AA4  C108  F060         	movff	_reg10bits,___fltol@f1
  7367  002AA8  C109  F061         	movff	_reg10bits+1,___fltol@f1+1
  7368  002AAC  C10A  F062         	movff	_reg10bits+2,___fltol@f1+2
  7369  002AB0  C10B  F063         	movff	_reg10bits+3,___fltol@f1+3
  7370  002AB4  ECF6  F017         	call	___fltol	;wreg free
  7371  002AB8  0E03               	movlw	3
  7372  002ABA  0100               	movlb	0	; () banked
  7373  002ABC  1760               	andwf	?___fltol& (0+255),f,b
  7374  002ABE  3B60               	swapf	?___fltol& (0+255),f,b
  7375  002AC0  50BD               	movf	189,w,c	;volatile
  7376  002AC2  1960               	xorwf	?___fltol& (0+255),w,b
  7377  002AC4  0BCF               	andlw	-49
  7378  002AC6  1960               	xorwf	?___fltol& (0+255),w,b
  7379  002AC8  6EBD               	movwf	189,c	;volatile
  7380  002ACA                     
  7381                           ; BSR set to: 0
  7382  002ACA  0012               	return		;funcret
  7383  002ACC                     __end_of_PWM1_Init:
  7384                           	callstack 0
  7385                           
  7386 ;; *************** function ___xxtofl *****************
  7387 ;; Defined at:
  7388 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  sign            1    wreg     unsigned char 
  7391 ;;  val             4    4[COMRAM] long 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;  sign            1   12[COMRAM] unsigned char 
  7394 ;;  arg             4   14[COMRAM] unsigned long 
  7395 ;;  exp             1   13[COMRAM] unsigned char 
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  4    4[COMRAM] unsigned char 
  7398 ;; Registers used:
  7399 ;;		wreg, status,2, status,0
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7405 ;;      Params:         4       0       0       0       0       0       0       0       0
  7406 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7407 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7408 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7409 ;;Total ram usage:       14 bytes
  7410 ;; Hardware stack levels used: 1
  7411 ;; This function calls:
  7412 ;;		Nothing
  7413 ;; This function is called by:
  7414 ;;		_main
  7415 ;;		_PWM1_Init
  7416 ;;		_PWM1_Set_Duty
  7417 ;;		_PWM2_Init
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           	psect	text34
  7422  002CE2                     __ptext34:
  7423                           	callstack 0
  7424  002CE2                     ___xxtofl:
  7425                           	callstack 30
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;incstack = 0
  7429                           ;___xxtofl@sign stored from wreg
  7430  002CE2  6E0D               	movwf	___xxtofl@sign^0,c
  7431  002CE4  500D               	movf	___xxtofl@sign^0,w,c
  7432  002CE6  B4D8               	btfsc	status,2,c
  7433  002CE8  EF78  F016         	goto	u4601
  7434  002CEC  EF7A  F016         	goto	u4600
  7435  002CF0                     u4601:
  7436  002CF0  EF9C  F016         	goto	l832
  7437  002CF4                     u4600:
  7438  002CF4  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7439  002CF6  EF81  F016         	goto	u4610
  7440  002CFA  EF7F  F016         	goto	u4611
  7441  002CFE                     u4611:
  7442  002CFE  EF9C  F016         	goto	l832
  7443  002D02                     u4610:
  7444  002D02  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7445  002D06  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7446  002D0A  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7447  002D0E  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7448  002D12  1E09               	comf	??___xxtofl^0,f,c
  7449  002D14  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7450  002D16  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7451  002D18  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7452  002D1A  2A09               	incf	??___xxtofl^0,f,c
  7453  002D1C  0E00               	movlw	0
  7454  002D1E  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7455  002D20  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7456  002D22  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7457  002D24  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7458  002D28  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7459  002D2C  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7460  002D30  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7461  002D34  EFA4  F016         	goto	l4131
  7462  002D38                     l832:
  7463  002D38  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7464  002D3C  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7465  002D40  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7466  002D44  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7467  002D48                     l4131:
  7468  002D48  5005               	movf	___xxtofl@val^0,w,c
  7469  002D4A  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7470  002D4C  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7471  002D4E  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7472  002D50  A4D8               	btfss	status,2,c
  7473  002D52  EFAD  F016         	goto	u4621
  7474  002D56  EFAF  F016         	goto	u4620
  7475  002D5A                     u4621:
  7476  002D5A  EFB9  F016         	goto	l4137
  7477  002D5E                     u4620:
  7478  002D5E  0E00               	movlw	0
  7479  002D60  6E05               	movwf	?___xxtofl^0,c
  7480  002D62  0E00               	movlw	0
  7481  002D64  6E06               	movwf	(?___xxtofl+1)^0,c
  7482  002D66  0E00               	movlw	0
  7483  002D68  6E07               	movwf	(?___xxtofl+2)^0,c
  7484  002D6A  0E00               	movlw	0
  7485  002D6C  6E08               	movwf	(?___xxtofl+3)^0,c
  7486  002D6E  EF4A  F017         	goto	l835
  7487  002D72                     l4137:
  7488  002D72  0E96               	movlw	150
  7489  002D74  6E0E               	movwf	___xxtofl@exp^0,c
  7490  002D76  EFC3  F016         	goto	l4141
  7491  002D7A                     l4139:
  7492  002D7A  2A0E               	incf	___xxtofl@exp^0,f,c
  7493  002D7C  90D8               	bcf	status,0,c
  7494  002D7E  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7495  002D80  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7496  002D82  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7497  002D84  320F               	rrcf	___xxtofl@arg^0,f,c
  7498  002D86                     l4141:
  7499  002D86  0E00               	movlw	0
  7500  002D88  140F               	andwf	___xxtofl@arg^0,w,c
  7501  002D8A  6E09               	movwf	??___xxtofl^0,c
  7502  002D8C  0E00               	movlw	0
  7503  002D8E  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7504  002D90  6E0A               	movwf	(??___xxtofl+1)^0,c
  7505  002D92  0E00               	movlw	0
  7506  002D94  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7507  002D96  6E0B               	movwf	(??___xxtofl+2)^0,c
  7508  002D98  0EFE               	movlw	254
  7509  002D9A  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7510  002D9C  6E0C               	movwf	(??___xxtofl+3)^0,c
  7511  002D9E  5009               	movf	??___xxtofl^0,w,c
  7512  002DA0  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7513  002DA2  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7514  002DA4  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7515  002DA6  A4D8               	btfss	status,2,c
  7516  002DA8  EFD8  F016         	goto	u4631
  7517  002DAC  EFDA  F016         	goto	u4630
  7518  002DB0                     u4631:
  7519  002DB0  EFBD  F016         	goto	l4139
  7520  002DB4                     u4630:
  7521  002DB4  EFE8  F016         	goto	l839
  7522  002DB8                     l4143:
  7523  002DB8  2A0E               	incf	___xxtofl@exp^0,f,c
  7524  002DBA  0E01               	movlw	1
  7525  002DBC  260F               	addwf	___xxtofl@arg^0,f,c
  7526  002DBE  0E00               	movlw	0
  7527  002DC0  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7528  002DC2  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7529  002DC4  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7530  002DC6  90D8               	bcf	status,0,c
  7531  002DC8  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7532  002DCA  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7533  002DCC  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7534  002DCE  320F               	rrcf	___xxtofl@arg^0,f,c
  7535  002DD0                     l839:
  7536  002DD0  0E00               	movlw	0
  7537  002DD2  140F               	andwf	___xxtofl@arg^0,w,c
  7538  002DD4  6E09               	movwf	??___xxtofl^0,c
  7539  002DD6  0E00               	movlw	0
  7540  002DD8  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7541  002DDA  6E0A               	movwf	(??___xxtofl+1)^0,c
  7542  002DDC  0E00               	movlw	0
  7543  002DDE  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7544  002DE0  6E0B               	movwf	(??___xxtofl+2)^0,c
  7545  002DE2  0EFF               	movlw	255
  7546  002DE4  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7547  002DE6  6E0C               	movwf	(??___xxtofl+3)^0,c
  7548  002DE8  5009               	movf	??___xxtofl^0,w,c
  7549  002DEA  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7550  002DEC  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7551  002DEE  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7552  002DF0  A4D8               	btfss	status,2,c
  7553  002DF2  EFFD  F016         	goto	u4641
  7554  002DF6  EFFF  F016         	goto	u4640
  7555  002DFA                     u4641:
  7556  002DFA  EFDC  F016         	goto	l4143
  7557  002DFE                     u4640:
  7558  002DFE  EF07  F017         	goto	l4151
  7559  002E02                     l4149:
  7560  002E02  060E               	decf	___xxtofl@exp^0,f,c
  7561  002E04  90D8               	bcf	status,0,c
  7562  002E06  360F               	rlcf	___xxtofl@arg^0,f,c
  7563  002E08  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7564  002E0A  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7565  002E0C  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7566  002E0E                     l4151:
  7567  002E0E  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7568  002E10  EF0C  F017         	goto	u4651
  7569  002E14  EF0E  F017         	goto	u4650
  7570  002E18                     u4651:
  7571  002E18  EF16  F017         	goto	l846
  7572  002E1C                     u4650:
  7573  002E1C  0E02               	movlw	2
  7574  002E1E  600E               	cpfslt	___xxtofl@exp^0,c
  7575  002E20  EF14  F017         	goto	u4661
  7576  002E24  EF16  F017         	goto	u4660
  7577  002E28                     u4661:
  7578  002E28  EF01  F017         	goto	l4149
  7579  002E2C                     u4660:
  7580  002E2C                     l846:
  7581  002E2C  B00E               	btfsc	___xxtofl@exp^0,0,c
  7582  002E2E  EF1B  F017         	goto	u4671
  7583  002E32  EF1D  F017         	goto	u4670
  7584  002E36                     u4671:
  7585  002E36  EF1E  F017         	goto	l4157
  7586  002E3A                     u4670:
  7587  002E3A  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7588  002E3C                     l4157:
  7589  002E3C  90D8               	bcf	status,0,c
  7590  002E3E  320E               	rrcf	___xxtofl@exp^0,f,c
  7591  002E40  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7592  002E44  6A0A               	clrf	(??___xxtofl+1)^0,c
  7593  002E46  6A0B               	clrf	(??___xxtofl+2)^0,c
  7594  002E48  6A0C               	clrf	(??___xxtofl+3)^0,c
  7595  002E4A  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7596  002E4E  6A0B               	clrf	(??___xxtofl+2)^0,c
  7597  002E50  6A0A               	clrf	(??___xxtofl+1)^0,c
  7598  002E52  6A09               	clrf	??___xxtofl^0,c
  7599  002E54  5009               	movf	??___xxtofl^0,w,c
  7600  002E56  120F               	iorwf	___xxtofl@arg^0,f,c
  7601  002E58  500A               	movf	(??___xxtofl+1)^0,w,c
  7602  002E5A  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7603  002E5C  500B               	movf	(??___xxtofl+2)^0,w,c
  7604  002E5E  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7605  002E60  500C               	movf	(??___xxtofl+3)^0,w,c
  7606  002E62  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7607  002E64  500D               	movf	___xxtofl@sign^0,w,c
  7608  002E66  B4D8               	btfsc	status,2,c
  7609  002E68  EF38  F017         	goto	u4681
  7610  002E6C  EF3A  F017         	goto	u4680
  7611  002E70                     u4681:
  7612  002E70  EF42  F017         	goto	l4167
  7613  002E74                     u4680:
  7614  002E74  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7615  002E76  EF41  F017         	goto	u4690
  7616  002E7A  EF3F  F017         	goto	u4691
  7617  002E7E                     u4691:
  7618  002E7E  EF42  F017         	goto	l4167
  7619  002E82                     u4690:
  7620  002E82  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7621  002E84                     l4167:
  7622  002E84  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7623  002E88  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7624  002E8C  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7625  002E90  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7626  002E94                     l835:
  7627  002E94  0012               	return		;funcret
  7628  002E96                     __end_of___xxtofl:
  7629                           	callstack 0
  7630                           
  7631 ;; *************** function ___fltol *****************
  7632 ;; Defined at:
  7633 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;  f1              4    0[BANK0 ] unsigned char 
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  exp1            1   93[COMRAM] unsigned char 
  7638 ;;  sign1           1   92[COMRAM] unsigned char 
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  4    0[BANK0 ] long 
  7641 ;; Registers used:
  7642 ;;		wreg, status,2, status,0
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7648 ;;      Params:         0       4       0       0       0       0       0       0       0
  7649 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7650 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7651 ;;      Totals:         2       8       0       0       0       0       0       0       0
  7652 ;;Total ram usage:       10 bytes
  7653 ;; Hardware stack levels used: 1
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_main
  7658 ;;		_PWM1_Init
  7659 ;;		_PWM1_Set_Duty
  7660 ;;		_efgtoa
  7661 ;;		_PWM2_Init
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           	psect	text35
  7666  002FEC                     __ptext35:
  7667                           	callstack 0
  7668  002FEC                     ___fltol:
  7669                           	callstack 26
  7670  002FEC  0100               	movlb	0	; () banked
  7671  002FEE  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7672  002FF0  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7673  002FF2  6E5E               	movwf	___fltol@exp1^0,c
  7674  002FF4  505E               	movf	___fltol@exp1^0,w,c
  7675  002FF6  A4D8               	btfss	status,2,c
  7676  002FF8  EF00  F018         	goto	u3521
  7677  002FFC  EF02  F018         	goto	u3520
  7678  003000                     u3521:
  7679  003000  EF0C  F018         	goto	l3475
  7680  003004                     u3520:
  7681  003004                     l3471:
  7682                           
  7683                           ; BSR set to: 0
  7684  003004  0E00               	movlw	0
  7685  003006  6F60               	movwf	?___fltol& (0+255),b
  7686  003008  0E00               	movlw	0
  7687  00300A  6F61               	movwf	(?___fltol+1)& (0+255),b
  7688  00300C  0E00               	movlw	0
  7689  00300E  6F62               	movwf	(?___fltol+2)& (0+255),b
  7690  003010  0E00               	movlw	0
  7691  003012  6F63               	movwf	(?___fltol+3)& (0+255),b
  7692  003014  EF79  F018         	goto	l474
  7693  003018                     l3475:
  7694                           
  7695                           ; BSR set to: 0
  7696  003018  C060  F064         	movff	___fltol@f1,??___fltol
  7697  00301C  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  7698  003020  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  7699  003024  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  7700  003028  0E20               	movlw	32
  7701  00302A  EF1C  F018         	goto	u3530
  7702  00302E                     u3535:
  7703  00302E  90D8               	bcf	status,0,c
  7704  003030  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  7705  003032  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  7706  003034  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  7707  003036  3364               	rrcf	??___fltol& (0+255),f,b
  7708  003038                     u3530:
  7709  003038  2EE8               	decfsz	wreg,f,c
  7710  00303A  EF17  F018         	goto	u3535
  7711  00303E  5164               	movf	??___fltol& (0+255),w,b
  7712  003040  6E5D               	movwf	___fltol@sign1^0,c
  7713  003042                     
  7714                           ; BSR set to: 0
  7715  003042  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  7716  003044                     
  7717                           ; BSR set to: 0
  7718  003044  0EFF               	movlw	255
  7719  003046  1760               	andwf	___fltol@f1& (0+255),f,b
  7720  003048  0EFF               	movlw	255
  7721  00304A  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  7722  00304C  0EFF               	movlw	255
  7723  00304E  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  7724  003050  0E00               	movlw	0
  7725  003052  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  7726  003054                     
  7727                           ; BSR set to: 0
  7728  003054  0E96               	movlw	150
  7729  003056  5E5E               	subwf	___fltol@exp1^0,f,c
  7730  003058                     
  7731                           ; BSR set to: 0
  7732  003058  BE5E               	btfsc	___fltol@exp1^0,7,c
  7733  00305A  EF33  F018         	goto	u3540
  7734  00305E  EF31  F018         	goto	u3541
  7735  003062                     u3541:
  7736  003062  EF49  F018         	goto	l3495
  7737  003066                     u3540:
  7738  003066                     
  7739                           ; BSR set to: 0
  7740  003066  505E               	movf	___fltol@exp1^0,w,c
  7741  003068  0A80               	xorlw	128
  7742  00306A  0F97               	addlw	151
  7743  00306C  B0D8               	btfsc	status,0,c
  7744  00306E  EF3B  F018         	goto	u3551
  7745  003072  EF3D  F018         	goto	u3550
  7746  003076                     u3551:
  7747  003076  EF3F  F018         	goto	l3491
  7748  00307A                     u3550:
  7749  00307A  EF02  F018         	goto	l3471
  7750  00307E                     l3491:
  7751                           
  7752                           ; BSR set to: 0
  7753  00307E  90D8               	bcf	status,0,c
  7754  003080  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7755  003082  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7756  003084  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7757  003086  3360               	rrcf	___fltol@f1& (0+255),f,b
  7758  003088                     
  7759                           ; BSR set to: 0
  7760  003088  3E5E               	incfsz	___fltol@exp1^0,f,c
  7761  00308A  EF3F  F018         	goto	l3491
  7762  00308E  EF61  F018         	goto	l3505
  7763  003092                     l3495:
  7764                           
  7765                           ; BSR set to: 0
  7766  003092  0E1F               	movlw	31
  7767  003094  645E               	cpfsgt	___fltol@exp1^0,c
  7768  003096  EF4F  F018         	goto	u3561
  7769  00309A  EF51  F018         	goto	u3560
  7770  00309E                     u3561:
  7771  00309E  EF59  F018         	goto	l3503
  7772  0030A2                     u3560:
  7773  0030A2  EF02  F018         	goto	l3471
  7774  0030A6                     l3501:
  7775                           
  7776                           ; BSR set to: 0
  7777  0030A6  90D8               	bcf	status,0,c
  7778  0030A8  3760               	rlcf	___fltol@f1& (0+255),f,b
  7779  0030AA  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7780  0030AC  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7781  0030AE  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7782  0030B0  065E               	decf	___fltol@exp1^0,f,c
  7783  0030B2                     l3503:
  7784                           
  7785                           ; BSR set to: 0
  7786  0030B2  505E               	movf	___fltol@exp1^0,w,c
  7787  0030B4  A4D8               	btfss	status,2,c
  7788  0030B6  EF5F  F018         	goto	u3571
  7789  0030BA  EF61  F018         	goto	u3570
  7790  0030BE                     u3571:
  7791  0030BE  EF53  F018         	goto	l3501
  7792  0030C2                     u3570:
  7793  0030C2                     l3505:
  7794                           
  7795                           ; BSR set to: 0
  7796  0030C2  505D               	movf	___fltol@sign1^0,w,c
  7797  0030C4  B4D8               	btfsc	status,2,c
  7798  0030C6  EF67  F018         	goto	u3581
  7799  0030CA  EF69  F018         	goto	u3580
  7800  0030CE                     u3581:
  7801  0030CE  EF71  F018         	goto	l3509
  7802  0030D2                     u3580:
  7803  0030D2                     
  7804                           ; BSR set to: 0
  7805  0030D2  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  7806  0030D4  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  7807  0030D6  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  7808  0030D8  6D60               	negf	___fltol@f1& (0+255),b
  7809  0030DA  0E00               	movlw	0
  7810  0030DC  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7811  0030DE  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7812  0030E0  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7813  0030E2                     l3509:
  7814                           
  7815                           ; BSR set to: 0
  7816  0030E2  C060  F060         	movff	___fltol@f1,?___fltol
  7817  0030E6  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  7818  0030EA  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  7819  0030EE  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  7820  0030F2                     l474:
  7821                           
  7822                           ; BSR set to: 0
  7823  0030F2  0012               	return		;funcret
  7824  0030F4                     __end_of___fltol:
  7825                           	callstack 0
  7826                           
  7827 ;; *************** function ___flmul *****************
  7828 ;; Defined at:
  7829 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  b               4   42[COMRAM] long 
  7832 ;;  a               4   46[COMRAM] long 
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;  prod            4   61[COMRAM] struct .
  7835 ;;  grs             4   55[COMRAM] unsigned long 
  7836 ;;  temp            2   65[COMRAM] struct .
  7837 ;;  bexp            1   60[COMRAM] unsigned char 
  7838 ;;  aexp            1   59[COMRAM] unsigned char 
  7839 ;;  sign            1   54[COMRAM] unsigned char 
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  4   42[COMRAM] unsigned char 
  7842 ;; Registers used:
  7843 ;;		wreg, status,2, status,0, prodl, prodh
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7849 ;;      Params:         8       0       0       0       0       0       0       0       0
  7850 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7851 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7852 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7853 ;;Total ram usage:       25 bytes
  7854 ;; Hardware stack levels used: 1
  7855 ;; This function calls:
  7856 ;;		Nothing
  7857 ;; This function is called by:
  7858 ;;		_main
  7859 ;;		_PWM1_Init
  7860 ;;		_PWM1_Set_Duty
  7861 ;;		_efgtoa
  7862 ;;		_PWM2_Init
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text36
  7867  001DE6                     __ptext36:
  7868                           	callstack 0
  7869  001DE6                     ___flmul:
  7870                           	callstack 26
  7871  001DE6  502E               	movf	(___flmul@b+3)^0,w,c
  7872  001DE8  0B80               	andlw	128
  7873  001DEA  6E37               	movwf	___flmul@sign^0,c
  7874  001DEC  502E               	movf	(___flmul@b+3)^0,w,c
  7875  001DEE  242E               	addwf	(___flmul@b+3)^0,w,c
  7876  001DF0  6E3D               	movwf	___flmul@bexp^0,c
  7877  001DF2  AE2D               	btfss	(___flmul@b+2)^0,7,c
  7878  001DF4  EFFE  F00E         	goto	u3121
  7879  001DF8  EF00  F00F         	goto	u3120
  7880  001DFC                     u3121:
  7881  001DFC  EF01  F00F         	goto	l3213
  7882  001E00                     u3120:
  7883  001E00  803D               	bsf	___flmul@bexp^0,0,c
  7884  001E02                     l3213:
  7885  001E02  503D               	movf	___flmul@bexp^0,w,c
  7886  001E04  B4D8               	btfsc	status,2,c
  7887  001E06  EF07  F00F         	goto	u3131
  7888  001E0A  EF09  F00F         	goto	u3130
  7889  001E0E                     u3131:
  7890  001E0E  EF1C  F00F         	goto	l3221
  7891  001E12                     u3130:
  7892  001E12  283D               	incf	___flmul@bexp^0,w,c
  7893  001E14  A4D8               	btfss	status,2,c
  7894  001E16  EF0F  F00F         	goto	u3141
  7895  001E1A  EF11  F00F         	goto	u3140
  7896  001E1E                     u3141:
  7897  001E1E  EF19  F00F         	goto	l3219
  7898  001E22                     u3140:
  7899  001E22  0E00               	movlw	0
  7900  001E24  6E2B               	movwf	___flmul@b^0,c
  7901  001E26  0E00               	movlw	0
  7902  001E28  6E2C               	movwf	(___flmul@b+1)^0,c
  7903  001E2A  0E00               	movlw	0
  7904  001E2C  6E2D               	movwf	(___flmul@b+2)^0,c
  7905  001E2E  0E00               	movlw	0
  7906  001E30  6E2E               	movwf	(___flmul@b+3)^0,c
  7907  001E32                     l3219:
  7908  001E32  8E2D               	bsf	(___flmul@b+2)^0,7,c
  7909  001E34  EF24  F00F         	goto	l3223
  7910  001E38                     l3221:
  7911  001E38  0E00               	movlw	0
  7912  001E3A  6E2B               	movwf	___flmul@b^0,c
  7913  001E3C  0E00               	movlw	0
  7914  001E3E  6E2C               	movwf	(___flmul@b+1)^0,c
  7915  001E40  0E00               	movlw	0
  7916  001E42  6E2D               	movwf	(___flmul@b+2)^0,c
  7917  001E44  0E00               	movlw	0
  7918  001E46  6E2E               	movwf	(___flmul@b+3)^0,c
  7919  001E48                     l3223:
  7920  001E48  5032               	movf	(___flmul@a+3)^0,w,c
  7921  001E4A  0B80               	andlw	128
  7922  001E4C  1A37               	xorwf	___flmul@sign^0,f,c
  7923  001E4E  5032               	movf	(___flmul@a+3)^0,w,c
  7924  001E50  2432               	addwf	(___flmul@a+3)^0,w,c
  7925  001E52  6E3C               	movwf	___flmul@aexp^0,c
  7926  001E54  AE31               	btfss	(___flmul@a+2)^0,7,c
  7927  001E56  EF2F  F00F         	goto	u3151
  7928  001E5A  EF31  F00F         	goto	u3150
  7929  001E5E                     u3151:
  7930  001E5E  EF32  F00F         	goto	l3231
  7931  001E62                     u3150:
  7932  001E62  803C               	bsf	___flmul@aexp^0,0,c
  7933  001E64                     l3231:
  7934  001E64  503C               	movf	___flmul@aexp^0,w,c
  7935  001E66  B4D8               	btfsc	status,2,c
  7936  001E68  EF38  F00F         	goto	u3161
  7937  001E6C  EF3A  F00F         	goto	u3160
  7938  001E70                     u3161:
  7939  001E70  EF4D  F00F         	goto	l3239
  7940  001E74                     u3160:
  7941  001E74  283C               	incf	___flmul@aexp^0,w,c
  7942  001E76  A4D8               	btfss	status,2,c
  7943  001E78  EF40  F00F         	goto	u3171
  7944  001E7C  EF42  F00F         	goto	u3170
  7945  001E80                     u3171:
  7946  001E80  EF4A  F00F         	goto	l3237
  7947  001E84                     u3170:
  7948  001E84  0E00               	movlw	0
  7949  001E86  6E2F               	movwf	___flmul@a^0,c
  7950  001E88  0E00               	movlw	0
  7951  001E8A  6E30               	movwf	(___flmul@a+1)^0,c
  7952  001E8C  0E00               	movlw	0
  7953  001E8E  6E31               	movwf	(___flmul@a+2)^0,c
  7954  001E90  0E00               	movlw	0
  7955  001E92  6E32               	movwf	(___flmul@a+3)^0,c
  7956  001E94                     l3237:
  7957  001E94  8E31               	bsf	(___flmul@a+2)^0,7,c
  7958  001E96  EF55  F00F         	goto	l791
  7959  001E9A                     l3239:
  7960  001E9A  0E00               	movlw	0
  7961  001E9C  6E2F               	movwf	___flmul@a^0,c
  7962  001E9E  0E00               	movlw	0
  7963  001EA0  6E30               	movwf	(___flmul@a+1)^0,c
  7964  001EA2  0E00               	movlw	0
  7965  001EA4  6E31               	movwf	(___flmul@a+2)^0,c
  7966  001EA6  0E00               	movlw	0
  7967  001EA8  6E32               	movwf	(___flmul@a+3)^0,c
  7968  001EAA                     l791:
  7969  001EAA  503C               	movf	___flmul@aexp^0,w,c
  7970  001EAC  B4D8               	btfsc	status,2,c
  7971  001EAE  EF5B  F00F         	goto	u3181
  7972  001EB2  EF5D  F00F         	goto	u3180
  7973  001EB6                     u3181:
  7974  001EB6  EF65  F00F         	goto	l3243
  7975  001EBA                     u3180:
  7976  001EBA  503D               	movf	___flmul@bexp^0,w,c
  7977  001EBC  A4D8               	btfss	status,2,c
  7978  001EBE  EF63  F00F         	goto	u3191
  7979  001EC2  EF65  F00F         	goto	u3190
  7980  001EC6                     u3191:
  7981  001EC6  EF6F  F00F         	goto	l3247
  7982  001ECA                     u3190:
  7983  001ECA                     l3243:
  7984  001ECA  0E00               	movlw	0
  7985  001ECC  6E2B               	movwf	?___flmul^0,c
  7986  001ECE  0E00               	movlw	0
  7987  001ED0  6E2C               	movwf	(?___flmul+1)^0,c
  7988  001ED2  0E00               	movlw	0
  7989  001ED4  6E2D               	movwf	(?___flmul+2)^0,c
  7990  001ED6  0E00               	movlw	0
  7991  001ED8  6E2E               	movwf	(?___flmul+3)^0,c
  7992  001EDA  EF07  F011         	goto	l795
  7993  001EDE                     l3247:
  7994  001EDE  5031               	movf	(___flmul@a+2)^0,w,c
  7995  001EE0  022B               	mulwf	___flmul@b^0,c
  7996  001EE2  CFF3 F042          	movff	prodl,___flmul@temp
  7997  001EE6  CFF4 F043          	movff	prodh,___flmul@temp+1
  7998  001EEA  5042               	movf	___flmul@temp^0,w,c
  7999  001EEC  6E38               	movwf	___flmul@grs^0,c
  8000  001EEE  6A39               	clrf	(___flmul@grs+1)^0,c
  8001  001EF0  6A3A               	clrf	(___flmul@grs+2)^0,c
  8002  001EF2  6A3B               	clrf	(___flmul@grs+3)^0,c
  8003  001EF4  5043               	movf	(___flmul@temp+1)^0,w,c
  8004  001EF6  6E3E               	movwf	___flmul@prod^0,c
  8005  001EF8  6A3F               	clrf	(___flmul@prod+1)^0,c
  8006  001EFA  6A40               	clrf	(___flmul@prod+2)^0,c
  8007  001EFC  6A41               	clrf	(___flmul@prod+3)^0,c
  8008  001EFE  5030               	movf	(___flmul@a+1)^0,w,c
  8009  001F00  022C               	mulwf	(___flmul@b+1)^0,c
  8010  001F02  CFF3 F042          	movff	prodl,___flmul@temp
  8011  001F06  CFF4 F043          	movff	prodh,___flmul@temp+1
  8012  001F0A  5042               	movf	___flmul@temp^0,w,c
  8013  001F0C  2638               	addwf	___flmul@grs^0,f,c
  8014  001F0E  0E00               	movlw	0
  8015  001F10  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8016  001F12  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8017  001F14  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8018  001F16  5043               	movf	(___flmul@temp+1)^0,w,c
  8019  001F18  263E               	addwf	___flmul@prod^0,f,c
  8020  001F1A  0E00               	movlw	0
  8021  001F1C  223F               	addwfc	(___flmul@prod+1)^0,f,c
  8022  001F1E  2240               	addwfc	(___flmul@prod+2)^0,f,c
  8023  001F20  2241               	addwfc	(___flmul@prod+3)^0,f,c
  8024  001F22  502F               	movf	___flmul@a^0,w,c
  8025  001F24  022D               	mulwf	(___flmul@b+2)^0,c
  8026  001F26  CFF3 F042          	movff	prodl,___flmul@temp
  8027  001F2A  CFF4 F043          	movff	prodh,___flmul@temp+1
  8028  001F2E  5042               	movf	___flmul@temp^0,w,c
  8029  001F30  2638               	addwf	___flmul@grs^0,f,c
  8030  001F32  0E00               	movlw	0
  8031  001F34  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8032  001F36  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8033  001F38  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8034  001F3A  5043               	movf	(___flmul@temp+1)^0,w,c
  8035  001F3C  263E               	addwf	___flmul@prod^0,f,c
  8036  001F3E  0E00               	movlw	0
  8037  001F40  223F               	addwfc	(___flmul@prod+1)^0,f,c
  8038  001F42  2240               	addwfc	(___flmul@prod+2)^0,f,c
  8039  001F44  2241               	addwfc	(___flmul@prod+3)^0,f,c
  8040  001F46  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  8041  001F4A  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  8042  001F4E  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  8043  001F52  6A38               	clrf	___flmul@grs^0,c
  8044  001F54  502F               	movf	___flmul@a^0,w,c
  8045  001F56  022C               	mulwf	(___flmul@b+1)^0,c
  8046  001F58  CFF3 F042          	movff	prodl,___flmul@temp
  8047  001F5C  CFF4 F043          	movff	prodh,___flmul@temp+1
  8048  001F60  5042               	movf	___flmul@temp^0,w,c
  8049  001F62  2638               	addwf	___flmul@grs^0,f,c
  8050  001F64  5043               	movf	(___flmul@temp+1)^0,w,c
  8051  001F66  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8052  001F68  0E00               	movlw	0
  8053  001F6A  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8054  001F6C  0E00               	movlw	0
  8055  001F6E  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8056  001F70  5030               	movf	(___flmul@a+1)^0,w,c
  8057  001F72  022B               	mulwf	___flmul@b^0,c
  8058  001F74  CFF3 F042          	movff	prodl,___flmul@temp
  8059  001F78  CFF4 F043          	movff	prodh,___flmul@temp+1
  8060  001F7C  5042               	movf	___flmul@temp^0,w,c
  8061  001F7E  2638               	addwf	___flmul@grs^0,f,c
  8062  001F80  5043               	movf	(___flmul@temp+1)^0,w,c
  8063  001F82  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8064  001F84  0E00               	movlw	0
  8065  001F86  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8066  001F88  0E00               	movlw	0
  8067  001F8A  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8068  001F8C  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  8069  001F90  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  8070  001F94  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  8071  001F98  6A38               	clrf	___flmul@grs^0,c
  8072  001F9A  502F               	movf	___flmul@a^0,w,c
  8073  001F9C  022B               	mulwf	___flmul@b^0,c
  8074  001F9E  CFF3 F042          	movff	prodl,___flmul@temp
  8075  001FA2  CFF4 F043          	movff	prodh,___flmul@temp+1
  8076  001FA6  5042               	movf	___flmul@temp^0,w,c
  8077  001FA8  2638               	addwf	___flmul@grs^0,f,c
  8078  001FAA  5043               	movf	(___flmul@temp+1)^0,w,c
  8079  001FAC  2239               	addwfc	(___flmul@grs+1)^0,f,c
  8080  001FAE  0E00               	movlw	0
  8081  001FB0  223A               	addwfc	(___flmul@grs+2)^0,f,c
  8082  001FB2  0E00               	movlw	0
  8083  001FB4  223B               	addwfc	(___flmul@grs+3)^0,f,c
  8084  001FB6  5031               	movf	(___flmul@a+2)^0,w,c
  8085  001FB8  022C               	mulwf	(___flmul@b+1)^0,c
  8086  001FBA  CFF3 F042          	movff	prodl,___flmul@temp
  8087  001FBE  CFF4 F043          	movff	prodh,___flmul@temp+1
  8088  001FC2  5042               	movf	___flmul@temp^0,w,c
  8089  001FC4  263E               	addwf	___flmul@prod^0,f,c
  8090  001FC6  5043               	movf	(___flmul@temp+1)^0,w,c
  8091  001FC8  223F               	addwfc	(___flmul@prod+1)^0,f,c
  8092  001FCA  0E00               	movlw	0
  8093  001FCC  2240               	addwfc	(___flmul@prod+2)^0,f,c
  8094  001FCE  0E00               	movlw	0
  8095  001FD0  2241               	addwfc	(___flmul@prod+3)^0,f,c
  8096  001FD2  5030               	movf	(___flmul@a+1)^0,w,c
  8097  001FD4  022D               	mulwf	(___flmul@b+2)^0,c
  8098  001FD6  CFF3 F042          	movff	prodl,___flmul@temp
  8099  001FDA  CFF4 F043          	movff	prodh,___flmul@temp+1
  8100  001FDE  5042               	movf	___flmul@temp^0,w,c
  8101  001FE0  263E               	addwf	___flmul@prod^0,f,c
  8102  001FE2  5043               	movf	(___flmul@temp+1)^0,w,c
  8103  001FE4  223F               	addwfc	(___flmul@prod+1)^0,f,c
  8104  001FE6  0E00               	movlw	0
  8105  001FE8  2240               	addwfc	(___flmul@prod+2)^0,f,c
  8106  001FEA  0E00               	movlw	0
  8107  001FEC  2241               	addwfc	(___flmul@prod+3)^0,f,c
  8108  001FEE  5031               	movf	(___flmul@a+2)^0,w,c
  8109  001FF0  022D               	mulwf	(___flmul@b+2)^0,c
  8110  001FF2  CFF3 F042          	movff	prodl,___flmul@temp
  8111  001FF6  CFF4 F043          	movff	prodh,___flmul@temp+1
  8112  001FFA  5042               	movf	___flmul@temp^0,w,c
  8113  001FFC  6E33               	movwf	??___flmul^0,c
  8114  001FFE  5043               	movf	(___flmul@temp+1)^0,w,c
  8115  002000  6E34               	movwf	(??___flmul+1)^0,c
  8116  002002  6A35               	clrf	(??___flmul+2)^0,c
  8117  002004  6A36               	clrf	(??___flmul+3)^0,c
  8118  002006  C035  F036         	movff	??___flmul+2,??___flmul+3
  8119  00200A  C034  F035         	movff	??___flmul+1,??___flmul+2
  8120  00200E  C033  F034         	movff	??___flmul,??___flmul+1
  8121  002012  6A33               	clrf	??___flmul^0,c
  8122  002014  5033               	movf	??___flmul^0,w,c
  8123  002016  263E               	addwf	___flmul@prod^0,f,c
  8124  002018  5034               	movf	(??___flmul+1)^0,w,c
  8125  00201A  223F               	addwfc	(___flmul@prod+1)^0,f,c
  8126  00201C  5035               	movf	(??___flmul+2)^0,w,c
  8127  00201E  2240               	addwfc	(___flmul@prod+2)^0,f,c
  8128  002020  5036               	movf	(??___flmul+3)^0,w,c
  8129  002022  2241               	addwfc	(___flmul@prod+3)^0,f,c
  8130  002024  C038  F033         	movff	___flmul@grs,??___flmul
  8131  002028  C039  F034         	movff	___flmul@grs+1,??___flmul+1
  8132  00202C  C03A  F035         	movff	___flmul@grs+2,??___flmul+2
  8133  002030  C03B  F036         	movff	___flmul@grs+3,??___flmul+3
  8134  002034  0E19               	movlw	25
  8135  002036  EF22  F010         	goto	u3200
  8136  00203A                     u3205:
  8137  00203A  90D8               	bcf	status,0,c
  8138  00203C  3236               	rrcf	(??___flmul+3)^0,f,c
  8139  00203E  3235               	rrcf	(??___flmul+2)^0,f,c
  8140  002040  3234               	rrcf	(??___flmul+1)^0,f,c
  8141  002042  3233               	rrcf	??___flmul^0,f,c
  8142  002044                     u3200:
  8143  002044  2EE8               	decfsz	wreg,f,c
  8144  002046  EF1D  F010         	goto	u3205
  8145  00204A  5033               	movf	??___flmul^0,w,c
  8146  00204C  263E               	addwf	___flmul@prod^0,f,c
  8147  00204E  5034               	movf	(??___flmul+1)^0,w,c
  8148  002050  223F               	addwfc	(___flmul@prod+1)^0,f,c
  8149  002052  5035               	movf	(??___flmul+2)^0,w,c
  8150  002054  2240               	addwfc	(___flmul@prod+2)^0,f,c
  8151  002056  5036               	movf	(??___flmul+3)^0,w,c
  8152  002058  2241               	addwfc	(___flmul@prod+3)^0,f,c
  8153  00205A  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  8154  00205E  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  8155  002062  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  8156  002066  6A38               	clrf	___flmul@grs^0,c
  8157  002068  503C               	movf	___flmul@aexp^0,w,c
  8158  00206A  C03D  F033         	movff	___flmul@bexp,??___flmul
  8159  00206E  6A34               	clrf	(??___flmul+1)^0,c
  8160  002070  2633               	addwf	??___flmul^0,f,c
  8161  002072  0E00               	movlw	0
  8162  002074  2234               	addwfc	(??___flmul+1)^0,f,c
  8163  002076  0E82               	movlw	130
  8164  002078  2433               	addwf	??___flmul^0,w,c
  8165  00207A  6E42               	movwf	___flmul@temp^0,c
  8166  00207C  0EFF               	movlw	255
  8167  00207E  2034               	addwfc	(??___flmul+1)^0,w,c
  8168  002080  6E43               	movwf	(___flmul@temp+1)^0,c
  8169  002082  EF58  F010         	goto	l3295
  8170  002086                     l3289:
  8171  002086  90D8               	bcf	status,0,c
  8172  002088  363E               	rlcf	___flmul@prod^0,f,c
  8173  00208A  363F               	rlcf	(___flmul@prod+1)^0,f,c
  8174  00208C  3640               	rlcf	(___flmul@prod+2)^0,f,c
  8175  00208E  3641               	rlcf	(___flmul@prod+3)^0,f,c
  8176  002090  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  8177  002092  EF4D  F010         	goto	u3211
  8178  002096  EF4F  F010         	goto	u3210
  8179  00209A                     u3211:
  8180  00209A  EF50  F010         	goto	l798
  8181  00209E                     u3210:
  8182  00209E  803E               	bsf	___flmul@prod^0,0,c
  8183  0020A0                     l798:
  8184  0020A0  90D8               	bcf	status,0,c
  8185  0020A2  3638               	rlcf	___flmul@grs^0,f,c
  8186  0020A4  3639               	rlcf	(___flmul@grs+1)^0,f,c
  8187  0020A6  363A               	rlcf	(___flmul@grs+2)^0,f,c
  8188  0020A8  363B               	rlcf	(___flmul@grs+3)^0,f,c
  8189  0020AA  0642               	decf	___flmul@temp^0,f,c
  8190  0020AC  A0D8               	btfss	status,0,c
  8191  0020AE  0643               	decf	(___flmul@temp+1)^0,f,c
  8192  0020B0                     l3295:
  8193  0020B0  AE40               	btfss	(___flmul@prod+2)^0,7,c
  8194  0020B2  EF5D  F010         	goto	u3221
  8195  0020B6  EF5F  F010         	goto	u3220
  8196  0020BA                     u3221:
  8197  0020BA  EF43  F010         	goto	l3289
  8198  0020BE                     u3220:
  8199  0020BE  0E00               	movlw	0
  8200  0020C0  6E3C               	movwf	___flmul@aexp^0,c
  8201  0020C2  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  8202  0020C4  EF66  F010         	goto	u3231
  8203  0020C8  EF68  F010         	goto	u3230
  8204  0020CC                     u3231:
  8205  0020CC  EF8C  F010         	goto	l800
  8206  0020D0                     u3230:
  8207  0020D0  0EFF               	movlw	255
  8208  0020D2  1438               	andwf	___flmul@grs^0,w,c
  8209  0020D4  6E33               	movwf	??___flmul^0,c
  8210  0020D6  0EFF               	movlw	255
  8211  0020D8  1439               	andwf	(___flmul@grs+1)^0,w,c
  8212  0020DA  6E34               	movwf	(??___flmul+1)^0,c
  8213  0020DC  0EFF               	movlw	255
  8214  0020DE  143A               	andwf	(___flmul@grs+2)^0,w,c
  8215  0020E0  6E35               	movwf	(??___flmul+2)^0,c
  8216  0020E2  0E7F               	movlw	127
  8217  0020E4  143B               	andwf	(___flmul@grs+3)^0,w,c
  8218  0020E6  6E36               	movwf	(??___flmul+3)^0,c
  8219  0020E8  5033               	movf	??___flmul^0,w,c
  8220  0020EA  1034               	iorwf	(??___flmul+1)^0,w,c
  8221  0020EC  1035               	iorwf	(??___flmul+2)^0,w,c
  8222  0020EE  1036               	iorwf	(??___flmul+3)^0,w,c
  8223  0020F0  B4D8               	btfsc	status,2,c
  8224  0020F2  EF7D  F010         	goto	u3241
  8225  0020F6  EF7F  F010         	goto	u3240
  8226  0020FA                     u3241:
  8227  0020FA  EF83  F010         	goto	l801
  8228  0020FE                     u3240:
  8229  0020FE                     l3303:
  8230  0020FE  0E01               	movlw	1
  8231  002100  6E3C               	movwf	___flmul@aexp^0,c
  8232  002102  EF8C  F010         	goto	l800
  8233  002106                     l801:
  8234  002106  A03E               	btfss	___flmul@prod^0,0,c
  8235  002108  EF88  F010         	goto	u3251
  8236  00210C  EF8A  F010         	goto	u3250
  8237  002110                     u3251:
  8238  002110  EF8C  F010         	goto	l800
  8239  002114                     u3250:
  8240  002114  EF7F  F010         	goto	l3303
  8241  002118                     l800:
  8242  002118  503C               	movf	___flmul@aexp^0,w,c
  8243  00211A  B4D8               	btfsc	status,2,c
  8244  00211C  EF92  F010         	goto	u3261
  8245  002120  EF94  F010         	goto	u3260
  8246  002124                     u3261:
  8247  002124  EFB8  F010         	goto	l3315
  8248  002128                     u3260:
  8249  002128  0E01               	movlw	1
  8250  00212A  263E               	addwf	___flmul@prod^0,f,c
  8251  00212C  0E00               	movlw	0
  8252  00212E  223F               	addwfc	(___flmul@prod+1)^0,f,c
  8253  002130  2240               	addwfc	(___flmul@prod+2)^0,f,c
  8254  002132  2241               	addwfc	(___flmul@prod+3)^0,f,c
  8255  002134  A041               	btfss	(___flmul@prod+3)^0,0,c
  8256  002136  EF9F  F010         	goto	u3271
  8257  00213A  EFA1  F010         	goto	u3270
  8258  00213E                     u3271:
  8259  00213E  EFB8  F010         	goto	l3315
  8260  002142                     u3270:
  8261  002142  C03E  F033         	movff	___flmul@prod,??___flmul
  8262  002146  C03F  F034         	movff	___flmul@prod+1,??___flmul+1
  8263  00214A  C040  F035         	movff	___flmul@prod+2,??___flmul+2
  8264  00214E  C041  F036         	movff	___flmul@prod+3,??___flmul+3
  8265  002152  3436               	rlcf	(??___flmul+3)^0,w,c
  8266  002154  3236               	rrcf	(??___flmul+3)^0,f,c
  8267  002156  3235               	rrcf	(??___flmul+2)^0,f,c
  8268  002158  3234               	rrcf	(??___flmul+1)^0,f,c
  8269  00215A  3233               	rrcf	??___flmul^0,f,c
  8270  00215C  C033  F03E         	movff	??___flmul,___flmul@prod
  8271  002160  C034  F03F         	movff	??___flmul+1,___flmul@prod+1
  8272  002164  C035  F040         	movff	??___flmul+2,___flmul@prod+2
  8273  002168  C036  F041         	movff	??___flmul+3,___flmul@prod+3
  8274  00216C  4A42               	infsnz	___flmul@temp^0,f,c
  8275  00216E  2A43               	incf	(___flmul@temp+1)^0,f,c
  8276  002170                     l3315:
  8277  002170  BE43               	btfsc	(___flmul@temp+1)^0,7,c
  8278  002172  EFC3  F010         	goto	u3281
  8279  002176  5043               	movf	(___flmul@temp+1)^0,w,c
  8280  002178  E108               	bnz	u3280
  8281  00217A  2842               	incf	___flmul@temp^0,w,c
  8282  00217C  A0D8               	btfss	status,0,c
  8283  00217E  EFC3  F010         	goto	u3281
  8284  002182  EFC5  F010         	goto	u3280
  8285  002186                     u3281:
  8286  002186  EFCF  F010         	goto	l3319
  8287  00218A                     u3280:
  8288  00218A  0E00               	movlw	0
  8289  00218C  6E3E               	movwf	___flmul@prod^0,c
  8290  00218E  0E00               	movlw	0
  8291  002190  6E3F               	movwf	(___flmul@prod+1)^0,c
  8292  002192  0E80               	movlw	128
  8293  002194  6E40               	movwf	(___flmul@prod+2)^0,c
  8294  002196  0E7F               	movlw	127
  8295  002198  6E41               	movwf	(___flmul@prod+3)^0,c
  8296  00219A  EFFD  F010         	goto	l3331
  8297  00219E                     l3319:
  8298  00219E  BE43               	btfsc	(___flmul@temp+1)^0,7,c
  8299  0021A0  EFDC  F010         	goto	u3290
  8300  0021A4  5043               	movf	(___flmul@temp+1)^0,w,c
  8301  0021A6  E106               	bnz	u3291
  8302  0021A8  0442               	decf	___flmul@temp^0,w,c
  8303  0021AA  B0D8               	btfsc	status,0,c
  8304  0021AC  EFDA  F010         	goto	u3291
  8305  0021B0  EFDC  F010         	goto	u3290
  8306  0021B4                     u3291:
  8307  0021B4  EFE8  F010         	goto	l808
  8308  0021B8                     u3290:
  8309  0021B8  0E00               	movlw	0
  8310  0021BA  6E3E               	movwf	___flmul@prod^0,c
  8311  0021BC  0E00               	movlw	0
  8312  0021BE  6E3F               	movwf	(___flmul@prod+1)^0,c
  8313  0021C0  0E00               	movlw	0
  8314  0021C2  6E40               	movwf	(___flmul@prod+2)^0,c
  8315  0021C4  0E00               	movlw	0
  8316  0021C6  6E41               	movwf	(___flmul@prod+3)^0,c
  8317  0021C8  0E00               	movlw	0
  8318  0021CA  6E37               	movwf	___flmul@sign^0,c
  8319  0021CC  EFFD  F010         	goto	l3331
  8320  0021D0                     l808:
  8321  0021D0  C042  F03D         	movff	___flmul@temp,___flmul@bexp
  8322  0021D4  0EFF               	movlw	255
  8323  0021D6  163E               	andwf	___flmul@prod^0,f,c
  8324  0021D8  0EFF               	movlw	255
  8325  0021DA  163F               	andwf	(___flmul@prod+1)^0,f,c
  8326  0021DC  0E7F               	movlw	127
  8327  0021DE  1640               	andwf	(___flmul@prod+2)^0,f,c
  8328  0021E0  0E00               	movlw	0
  8329  0021E2  1641               	andwf	(___flmul@prod+3)^0,f,c
  8330  0021E4  A03D               	btfss	___flmul@bexp^0,0,c
  8331  0021E6  EFF7  F010         	goto	u3301
  8332  0021EA  EFF9  F010         	goto	u3300
  8333  0021EE                     u3301:
  8334  0021EE  EFFA  F010         	goto	l3329
  8335  0021F2                     u3300:
  8336  0021F2  8E40               	bsf	(___flmul@prod+2)^0,7,c
  8337  0021F4                     l3329:
  8338  0021F4  90D8               	bcf	status,0,c
  8339  0021F6  303D               	rrcf	___flmul@bexp^0,w,c
  8340  0021F8  6E41               	movwf	(___flmul@prod+3)^0,c
  8341  0021FA                     l3331:
  8342  0021FA  5037               	movf	___flmul@sign^0,w,c
  8343  0021FC  1241               	iorwf	(___flmul@prod+3)^0,f,c
  8344  0021FE  C03E  F02B         	movff	___flmul@prod,?___flmul
  8345  002202  C03F  F02C         	movff	___flmul@prod+1,?___flmul+1
  8346  002206  C040  F02D         	movff	___flmul@prod+2,?___flmul+2
  8347  00220A  C041  F02E         	movff	___flmul@prod+3,?___flmul+3
  8348  00220E                     l795:
  8349  00220E  0012               	return		;funcret
  8350  002210                     __end_of___flmul:
  8351                           	callstack 0
  8352                           
  8353 ;; *************** function ___fldiv *****************
  8354 ;; Defined at:
  8355 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  b               4   67[COMRAM] unsigned char 
  8358 ;;  a               4   71[COMRAM] unsigned char 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;  grs             4   86[COMRAM] unsigned long 
  8361 ;;  rem             4   79[COMRAM] unsigned long 
  8362 ;;  new_exp         2   84[COMRAM] short 
  8363 ;;  aexp            1   91[COMRAM] unsigned char 
  8364 ;;  bexp            1   90[COMRAM] unsigned char 
  8365 ;;  sign            1   83[COMRAM] unsigned char 
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  4   67[COMRAM] unsigned char 
  8368 ;; Registers used:
  8369 ;;		wreg, status,2, status,0
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8375 ;;      Params:         8       0       0       0       0       0       0       0       0
  8376 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8377 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8378 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8379 ;;Total ram usage:       25 bytes
  8380 ;; Hardware stack levels used: 1
  8381 ;; This function calls:
  8382 ;;		Nothing
  8383 ;; This function is called by:
  8384 ;;		_PWM1_Init
  8385 ;;		_PWM1_Set_Duty
  8386 ;;		_efgtoa
  8387 ;;		_PWM2_Init
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           
  8391                           	psect	text37
  8392  002210                     __ptext37:
  8393                           	callstack 0
  8394  002210                     ___fldiv:
  8395                           	callstack 26
  8396  002210  5047               	movf	(___fldiv@b+3)^0,w,c
  8397  002212  0B80               	andlw	128
  8398  002214  6E54               	movwf	___fldiv@sign^0,c
  8399  002216  5047               	movf	(___fldiv@b+3)^0,w,c
  8400  002218  2447               	addwf	(___fldiv@b+3)^0,w,c
  8401  00221A  6E5B               	movwf	___fldiv@bexp^0,c
  8402  00221C  AE46               	btfss	(___fldiv@b+2)^0,7,c
  8403  00221E  EF13  F011         	goto	u2891
  8404  002222  EF15  F011         	goto	u2890
  8405  002226                     u2891:
  8406  002226  EF16  F011         	goto	l3075
  8407  00222A                     u2890:
  8408  00222A  805B               	bsf	___fldiv@bexp^0,0,c
  8409  00222C                     l3075:
  8410  00222C  505B               	movf	___fldiv@bexp^0,w,c
  8411  00222E  B4D8               	btfsc	status,2,c
  8412  002230  EF1C  F011         	goto	u2901
  8413  002234  EF1E  F011         	goto	u2900
  8414  002238                     u2901:
  8415  002238  EF33  F011         	goto	l3085
  8416  00223C                     u2900:
  8417  00223C  285B               	incf	___fldiv@bexp^0,w,c
  8418  00223E  A4D8               	btfss	status,2,c
  8419  002240  EF24  F011         	goto	u2911
  8420  002244  EF26  F011         	goto	u2910
  8421  002248                     u2911:
  8422  002248  EF2E  F011         	goto	l3081
  8423  00224C                     u2910:
  8424  00224C  0E00               	movlw	0
  8425  00224E  6E44               	movwf	___fldiv@b^0,c
  8426  002250  0E00               	movlw	0
  8427  002252  6E45               	movwf	(___fldiv@b+1)^0,c
  8428  002254  0E00               	movlw	0
  8429  002256  6E46               	movwf	(___fldiv@b+2)^0,c
  8430  002258  0E00               	movlw	0
  8431  00225A  6E47               	movwf	(___fldiv@b+3)^0,c
  8432  00225C                     l3081:
  8433  00225C  8E46               	bsf	(___fldiv@b+2)^0,7,c
  8434  00225E  0E00               	movlw	0
  8435  002260  6E47               	movwf	(___fldiv@b+3)^0,c
  8436  002262  EF3B  F011         	goto	l3087
  8437  002266                     l3085:
  8438  002266  0E00               	movlw	0
  8439  002268  6E44               	movwf	___fldiv@b^0,c
  8440  00226A  0E00               	movlw	0
  8441  00226C  6E45               	movwf	(___fldiv@b+1)^0,c
  8442  00226E  0E00               	movlw	0
  8443  002270  6E46               	movwf	(___fldiv@b+2)^0,c
  8444  002272  0E00               	movlw	0
  8445  002274  6E47               	movwf	(___fldiv@b+3)^0,c
  8446  002276                     l3087:
  8447  002276  504B               	movf	(___fldiv@a+3)^0,w,c
  8448  002278  0B80               	andlw	128
  8449  00227A  1A54               	xorwf	___fldiv@sign^0,f,c
  8450  00227C  504B               	movf	(___fldiv@a+3)^0,w,c
  8451  00227E  244B               	addwf	(___fldiv@a+3)^0,w,c
  8452  002280  6E5C               	movwf	___fldiv@aexp^0,c
  8453  002282  AE4A               	btfss	(___fldiv@a+2)^0,7,c
  8454  002284  EF46  F011         	goto	u2921
  8455  002288  EF48  F011         	goto	u2920
  8456  00228C                     u2921:
  8457  00228C  EF49  F011         	goto	l3095
  8458  002290                     u2920:
  8459  002290  805C               	bsf	___fldiv@aexp^0,0,c
  8460  002292                     l3095:
  8461  002292  505C               	movf	___fldiv@aexp^0,w,c
  8462  002294  B4D8               	btfsc	status,2,c
  8463  002296  EF4F  F011         	goto	u2931
  8464  00229A  EF51  F011         	goto	u2930
  8465  00229E                     u2931:
  8466  00229E  EF66  F011         	goto	l3105
  8467  0022A2                     u2930:
  8468  0022A2  285C               	incf	___fldiv@aexp^0,w,c
  8469  0022A4  A4D8               	btfss	status,2,c
  8470  0022A6  EF57  F011         	goto	u2941
  8471  0022AA  EF59  F011         	goto	u2940
  8472  0022AE                     u2941:
  8473  0022AE  EF61  F011         	goto	l3101
  8474  0022B2                     u2940:
  8475  0022B2  0E00               	movlw	0
  8476  0022B4  6E48               	movwf	___fldiv@a^0,c
  8477  0022B6  0E00               	movlw	0
  8478  0022B8  6E49               	movwf	(___fldiv@a+1)^0,c
  8479  0022BA  0E00               	movlw	0
  8480  0022BC  6E4A               	movwf	(___fldiv@a+2)^0,c
  8481  0022BE  0E00               	movlw	0
  8482  0022C0  6E4B               	movwf	(___fldiv@a+3)^0,c
  8483  0022C2                     l3101:
  8484  0022C2  8E4A               	bsf	(___fldiv@a+2)^0,7,c
  8485  0022C4  0E00               	movlw	0
  8486  0022C6  6E4B               	movwf	(___fldiv@a+3)^0,c
  8487  0022C8  EF6E  F011         	goto	l3107
  8488  0022CC                     l3105:
  8489  0022CC  0E00               	movlw	0
  8490  0022CE  6E48               	movwf	___fldiv@a^0,c
  8491  0022D0  0E00               	movlw	0
  8492  0022D2  6E49               	movwf	(___fldiv@a+1)^0,c
  8493  0022D4  0E00               	movlw	0
  8494  0022D6  6E4A               	movwf	(___fldiv@a+2)^0,c
  8495  0022D8  0E00               	movlw	0
  8496  0022DA  6E4B               	movwf	(___fldiv@a+3)^0,c
  8497  0022DC                     l3107:
  8498  0022DC  5048               	movf	___fldiv@a^0,w,c
  8499  0022DE  1049               	iorwf	(___fldiv@a+1)^0,w,c
  8500  0022E0  104A               	iorwf	(___fldiv@a+2)^0,w,c
  8501  0022E2  104B               	iorwf	(___fldiv@a+3)^0,w,c
  8502  0022E4  A4D8               	btfss	status,2,c
  8503  0022E6  EF77  F011         	goto	u2951
  8504  0022EA  EF79  F011         	goto	u2950
  8505  0022EE                     u2951:
  8506  0022EE  EF91  F011         	goto	l3119
  8507  0022F2                     u2950:
  8508  0022F2  0E00               	movlw	0
  8509  0022F4  6E44               	movwf	___fldiv@b^0,c
  8510  0022F6  0E00               	movlw	0
  8511  0022F8  6E45               	movwf	(___fldiv@b+1)^0,c
  8512  0022FA  0E00               	movlw	0
  8513  0022FC  6E46               	movwf	(___fldiv@b+2)^0,c
  8514  0022FE  0E00               	movlw	0
  8515  002300  6E47               	movwf	(___fldiv@b+3)^0,c
  8516  002302  0E80               	movlw	128
  8517  002304  1246               	iorwf	(___fldiv@b+2)^0,f,c
  8518  002306  0E7F               	movlw	127
  8519  002308  1247               	iorwf	(___fldiv@b+3)^0,f,c
  8520  00230A                     l3113:
  8521  00230A  5054               	movf	___fldiv@sign^0,w,c
  8522  00230C  1247               	iorwf	(___fldiv@b+3)^0,f,c
  8523  00230E  C044  F044         	movff	___fldiv@b,?___fldiv
  8524  002312  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
  8525  002316  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
  8526  00231A  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
  8527  00231E  EFD4  F012         	goto	l759
  8528  002322                     l3119:
  8529  002322  505B               	movf	___fldiv@bexp^0,w,c
  8530  002324  A4D8               	btfss	status,2,c
  8531  002326  EF97  F011         	goto	u2961
  8532  00232A  EF99  F011         	goto	u2960
  8533  00232E                     u2961:
  8534  00232E  EFA3  F011         	goto	l3127
  8535  002332                     u2960:
  8536  002332  0E00               	movlw	0
  8537  002334  6E44               	movwf	?___fldiv^0,c
  8538  002336  0E00               	movlw	0
  8539  002338  6E45               	movwf	(?___fldiv+1)^0,c
  8540  00233A  0E00               	movlw	0
  8541  00233C  6E46               	movwf	(?___fldiv+2)^0,c
  8542  00233E  0E00               	movlw	0
  8543  002340  6E47               	movwf	(?___fldiv+3)^0,c
  8544  002342  EFD4  F012         	goto	l759
  8545  002346                     l3127:
  8546  002346  505C               	movf	___fldiv@aexp^0,w,c
  8547  002348  C05B  F04C         	movff	___fldiv@bexp,??___fldiv
  8548  00234C  6A4D               	clrf	(??___fldiv+1)^0,c
  8549  00234E  5E4C               	subwf	??___fldiv^0,f,c
  8550  002350  0E00               	movlw	0
  8551  002352  5A4D               	subwfb	(??___fldiv+1)^0,f,c
  8552  002354  0E7F               	movlw	127
  8553  002356  244C               	addwf	??___fldiv^0,w,c
  8554  002358  6E55               	movwf	___fldiv@new_exp^0,c
  8555  00235A  0E00               	movlw	0
  8556  00235C  204D               	addwfc	(??___fldiv+1)^0,w,c
  8557  00235E  6E56               	movwf	(___fldiv@new_exp+1)^0,c
  8558  002360  C044  F050         	movff	___fldiv@b,___fldiv@rem
  8559  002364  C045  F051         	movff	___fldiv@b+1,___fldiv@rem+1
  8560  002368  C046  F052         	movff	___fldiv@b+2,___fldiv@rem+2
  8561  00236C  C047  F053         	movff	___fldiv@b+3,___fldiv@rem+3
  8562  002370  0E00               	movlw	0
  8563  002372  6E44               	movwf	___fldiv@b^0,c
  8564  002374  0E00               	movlw	0
  8565  002376  6E45               	movwf	(___fldiv@b+1)^0,c
  8566  002378  0E00               	movlw	0
  8567  00237A  6E46               	movwf	(___fldiv@b+2)^0,c
  8568  00237C  0E00               	movlw	0
  8569  00237E  6E47               	movwf	(___fldiv@b+3)^0,c
  8570  002380  0E00               	movlw	0
  8571  002382  6E57               	movwf	___fldiv@grs^0,c
  8572  002384  0E00               	movlw	0
  8573  002386  6E58               	movwf	(___fldiv@grs+1)^0,c
  8574  002388  0E00               	movlw	0
  8575  00238A  6E59               	movwf	(___fldiv@grs+2)^0,c
  8576  00238C  0E00               	movlw	0
  8577  00238E  6E5A               	movwf	(___fldiv@grs+3)^0,c
  8578  002390  0E00               	movlw	0
  8579  002392  6E5C               	movwf	___fldiv@aexp^0,c
  8580  002394  EF04  F012         	goto	l761
  8581  002398                     l3137:
  8582  002398  505C               	movf	___fldiv@aexp^0,w,c
  8583  00239A  B4D8               	btfsc	status,2,c
  8584  00239C  EFD2  F011         	goto	u2971
  8585  0023A0  EFD4  F011         	goto	u2970
  8586  0023A4                     u2971:
  8587  0023A4  EFEB  F011         	goto	l3145
  8588  0023A8                     u2970:
  8589  0023A8  90D8               	bcf	status,0,c
  8590  0023AA  3650               	rlcf	___fldiv@rem^0,f,c
  8591  0023AC  3651               	rlcf	(___fldiv@rem+1)^0,f,c
  8592  0023AE  3652               	rlcf	(___fldiv@rem+2)^0,f,c
  8593  0023B0  3653               	rlcf	(___fldiv@rem+3)^0,f,c
  8594  0023B2  90D8               	bcf	status,0,c
  8595  0023B4  3644               	rlcf	___fldiv@b^0,f,c
  8596  0023B6  3645               	rlcf	(___fldiv@b+1)^0,f,c
  8597  0023B8  3646               	rlcf	(___fldiv@b+2)^0,f,c
  8598  0023BA  3647               	rlcf	(___fldiv@b+3)^0,f,c
  8599  0023BC  AE5A               	btfss	(___fldiv@grs+3)^0,7,c
  8600  0023BE  EFE3  F011         	goto	u2981
  8601  0023C2  EFE5  F011         	goto	u2980
  8602  0023C6                     u2981:
  8603  0023C6  EFE6  F011         	goto	l764
  8604  0023CA                     u2980:
  8605  0023CA  8044               	bsf	___fldiv@b^0,0,c
  8606  0023CC                     l764:
  8607  0023CC  90D8               	bcf	status,0,c
  8608  0023CE  3657               	rlcf	___fldiv@grs^0,f,c
  8609  0023D0  3658               	rlcf	(___fldiv@grs+1)^0,f,c
  8610  0023D2  3659               	rlcf	(___fldiv@grs+2)^0,f,c
  8611  0023D4  365A               	rlcf	(___fldiv@grs+3)^0,f,c
  8612  0023D6                     l3145:
  8613  0023D6  5048               	movf	___fldiv@a^0,w,c
  8614  0023D8  5C50               	subwf	___fldiv@rem^0,w,c
  8615  0023DA  5049               	movf	(___fldiv@a+1)^0,w,c
  8616  0023DC  5851               	subwfb	(___fldiv@rem+1)^0,w,c
  8617  0023DE  504A               	movf	(___fldiv@a+2)^0,w,c
  8618  0023E0  5852               	subwfb	(___fldiv@rem+2)^0,w,c
  8619  0023E2  504B               	movf	(___fldiv@a+3)^0,w,c
  8620  0023E4  5853               	subwfb	(___fldiv@rem+3)^0,w,c
  8621  0023E6  A0D8               	btfss	status,0,c
  8622  0023E8  EFF8  F011         	goto	u2991
  8623  0023EC  EFFA  F011         	goto	u2990
  8624  0023F0                     u2991:
  8625  0023F0  EF03  F012         	goto	l3151
  8626  0023F4                     u2990:
  8627  0023F4  8C5A               	bsf	(___fldiv@grs+3)^0,6,c
  8628  0023F6  5048               	movf	___fldiv@a^0,w,c
  8629  0023F8  5E50               	subwf	___fldiv@rem^0,f,c
  8630  0023FA  5049               	movf	(___fldiv@a+1)^0,w,c
  8631  0023FC  5A51               	subwfb	(___fldiv@rem+1)^0,f,c
  8632  0023FE  504A               	movf	(___fldiv@a+2)^0,w,c
  8633  002400  5A52               	subwfb	(___fldiv@rem+2)^0,f,c
  8634  002402  504B               	movf	(___fldiv@a+3)^0,w,c
  8635  002404  5A53               	subwfb	(___fldiv@rem+3)^0,f,c
  8636  002406                     l3151:
  8637  002406  2A5C               	incf	___fldiv@aexp^0,f,c
  8638  002408                     l761:
  8639  002408  0E19               	movlw	25
  8640  00240A  645C               	cpfsgt	___fldiv@aexp^0,c
  8641  00240C  EF0A  F012         	goto	u3001
  8642  002410  EF0C  F012         	goto	u3000
  8643  002414                     u3001:
  8644  002414  EFCC  F011         	goto	l3137
  8645  002418                     u3000:
  8646  002418  5050               	movf	___fldiv@rem^0,w,c
  8647  00241A  1051               	iorwf	(___fldiv@rem+1)^0,w,c
  8648  00241C  1052               	iorwf	(___fldiv@rem+2)^0,w,c
  8649  00241E  1053               	iorwf	(___fldiv@rem+3)^0,w,c
  8650  002420  B4D8               	btfsc	status,2,c
  8651  002422  EF15  F012         	goto	u3011
  8652  002426  EF17  F012         	goto	u3010
  8653  00242A                     u3011:
  8654  00242A  EF2F  F012         	goto	l3163
  8655  00242E                     u3010:
  8656  00242E  8057               	bsf	___fldiv@grs^0,0,c
  8657  002430  EF2F  F012         	goto	l3163
  8658  002434                     l3157:
  8659  002434  90D8               	bcf	status,0,c
  8660  002436  3644               	rlcf	___fldiv@b^0,f,c
  8661  002438  3645               	rlcf	(___fldiv@b+1)^0,f,c
  8662  00243A  3646               	rlcf	(___fldiv@b+2)^0,f,c
  8663  00243C  3647               	rlcf	(___fldiv@b+3)^0,f,c
  8664  00243E  AE5A               	btfss	(___fldiv@grs+3)^0,7,c
  8665  002440  EF24  F012         	goto	u3021
  8666  002444  EF26  F012         	goto	u3020
  8667  002448                     u3021:
  8668  002448  EF27  F012         	goto	l770
  8669  00244C                     u3020:
  8670  00244C  8044               	bsf	___fldiv@b^0,0,c
  8671  00244E                     l770:
  8672  00244E  90D8               	bcf	status,0,c
  8673  002450  3657               	rlcf	___fldiv@grs^0,f,c
  8674  002452  3658               	rlcf	(___fldiv@grs+1)^0,f,c
  8675  002454  3659               	rlcf	(___fldiv@grs+2)^0,f,c
  8676  002456  365A               	rlcf	(___fldiv@grs+3)^0,f,c
  8677  002458  0655               	decf	___fldiv@new_exp^0,f,c
  8678  00245A  A0D8               	btfss	status,0,c
  8679  00245C  0656               	decf	(___fldiv@new_exp+1)^0,f,c
  8680  00245E                     l3163:
  8681  00245E  AE46               	btfss	(___fldiv@b+2)^0,7,c
  8682  002460  EF34  F012         	goto	u3031
  8683  002464  EF36  F012         	goto	u3030
  8684  002468                     u3031:
  8685  002468  EF1A  F012         	goto	l3157
  8686  00246C                     u3030:
  8687  00246C  0E00               	movlw	0
  8688  00246E  6E5C               	movwf	___fldiv@aexp^0,c
  8689  002470  AE5A               	btfss	(___fldiv@grs+3)^0,7,c
  8690  002472  EF3D  F012         	goto	u3041
  8691  002476  EF3F  F012         	goto	u3040
  8692  00247A                     u3041:
  8693  00247A  EF63  F012         	goto	l772
  8694  00247E                     u3040:
  8695  00247E  0EFF               	movlw	255
  8696  002480  1457               	andwf	___fldiv@grs^0,w,c
  8697  002482  6E4C               	movwf	??___fldiv^0,c
  8698  002484  0EFF               	movlw	255
  8699  002486  1458               	andwf	(___fldiv@grs+1)^0,w,c
  8700  002488  6E4D               	movwf	(??___fldiv+1)^0,c
  8701  00248A  0EFF               	movlw	255
  8702  00248C  1459               	andwf	(___fldiv@grs+2)^0,w,c
  8703  00248E  6E4E               	movwf	(??___fldiv+2)^0,c
  8704  002490  0E7F               	movlw	127
  8705  002492  145A               	andwf	(___fldiv@grs+3)^0,w,c
  8706  002494  6E4F               	movwf	(??___fldiv+3)^0,c
  8707  002496  504C               	movf	??___fldiv^0,w,c
  8708  002498  104D               	iorwf	(??___fldiv+1)^0,w,c
  8709  00249A  104E               	iorwf	(??___fldiv+2)^0,w,c
  8710  00249C  104F               	iorwf	(??___fldiv+3)^0,w,c
  8711  00249E  B4D8               	btfsc	status,2,c
  8712  0024A0  EF54  F012         	goto	u3051
  8713  0024A4  EF56  F012         	goto	u3050
  8714  0024A8                     u3051:
  8715  0024A8  EF5A  F012         	goto	l773
  8716  0024AC                     u3050:
  8717  0024AC                     l3171:
  8718  0024AC  0E01               	movlw	1
  8719  0024AE  6E5C               	movwf	___fldiv@aexp^0,c
  8720  0024B0  EF63  F012         	goto	l772
  8721  0024B4                     l773:
  8722  0024B4  A044               	btfss	___fldiv@b^0,0,c
  8723  0024B6  EF5F  F012         	goto	u3061
  8724  0024BA  EF61  F012         	goto	u3060
  8725  0024BE                     u3061:
  8726  0024BE  EF63  F012         	goto	l772
  8727  0024C2                     u3060:
  8728  0024C2  EF56  F012         	goto	l3171
  8729  0024C6                     l772:
  8730  0024C6  505C               	movf	___fldiv@aexp^0,w,c
  8731  0024C8  B4D8               	btfsc	status,2,c
  8732  0024CA  EF69  F012         	goto	u3071
  8733  0024CE  EF6B  F012         	goto	u3070
  8734  0024D2                     u3071:
  8735  0024D2  EF8F  F012         	goto	l3183
  8736  0024D6                     u3070:
  8737  0024D6  0E01               	movlw	1
  8738  0024D8  2644               	addwf	___fldiv@b^0,f,c
  8739  0024DA  0E00               	movlw	0
  8740  0024DC  2245               	addwfc	(___fldiv@b+1)^0,f,c
  8741  0024DE  2246               	addwfc	(___fldiv@b+2)^0,f,c
  8742  0024E0  2247               	addwfc	(___fldiv@b+3)^0,f,c
  8743  0024E2  A047               	btfss	(___fldiv@b+3)^0,0,c
  8744  0024E4  EF76  F012         	goto	u3081
  8745  0024E8  EF78  F012         	goto	u3080
  8746  0024EC                     u3081:
  8747  0024EC  EF8F  F012         	goto	l3183
  8748  0024F0                     u3080:
  8749  0024F0  C044  F04C         	movff	___fldiv@b,??___fldiv
  8750  0024F4  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
  8751  0024F8  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
  8752  0024FC  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
  8753  002500  344F               	rlcf	(??___fldiv+3)^0,w,c
  8754  002502  324F               	rrcf	(??___fldiv+3)^0,f,c
  8755  002504  324E               	rrcf	(??___fldiv+2)^0,f,c
  8756  002506  324D               	rrcf	(??___fldiv+1)^0,f,c
  8757  002508  324C               	rrcf	??___fldiv^0,f,c
  8758  00250A  C04C  F044         	movff	??___fldiv,___fldiv@b
  8759  00250E  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
  8760  002512  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
  8761  002516  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
  8762  00251A  4A55               	infsnz	___fldiv@new_exp^0,f,c
  8763  00251C  2A56               	incf	(___fldiv@new_exp+1)^0,f,c
  8764  00251E                     l3183:
  8765  00251E  BE56               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8766  002520  EF9A  F012         	goto	u3091
  8767  002524  5056               	movf	(___fldiv@new_exp+1)^0,w,c
  8768  002526  E108               	bnz	u3090
  8769  002528  2855               	incf	___fldiv@new_exp^0,w,c
  8770  00252A  A0D8               	btfss	status,0,c
  8771  00252C  EF9A  F012         	goto	u3091
  8772  002530  EF9C  F012         	goto	u3090
  8773  002534                     u3091:
  8774  002534  EFA7  F012         	goto	l3187
  8775  002538                     u3090:
  8776  002538  0E00               	movlw	0
  8777  00253A  6E56               	movwf	(___fldiv@new_exp+1)^0,c
  8778  00253C  6855               	setf	___fldiv@new_exp^0,c
  8779  00253E  0E00               	movlw	0
  8780  002540  6E44               	movwf	___fldiv@b^0,c
  8781  002542  0E00               	movlw	0
  8782  002544  6E45               	movwf	(___fldiv@b+1)^0,c
  8783  002546  0E00               	movlw	0
  8784  002548  6E46               	movwf	(___fldiv@b+2)^0,c
  8785  00254A  0E00               	movlw	0
  8786  00254C  6E47               	movwf	(___fldiv@b+3)^0,c
  8787  00254E                     l3187:
  8788  00254E  BE56               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8789  002550  EFB4  F012         	goto	u3100
  8790  002554  5056               	movf	(___fldiv@new_exp+1)^0,w,c
  8791  002556  E106               	bnz	u3101
  8792  002558  0455               	decf	___fldiv@new_exp^0,w,c
  8793  00255A  B0D8               	btfsc	status,0,c
  8794  00255C  EFB2  F012         	goto	u3101
  8795  002560  EFB4  F012         	goto	u3100
  8796  002564                     u3101:
  8797  002564  EFC2  F012         	goto	l3191
  8798  002568                     u3100:
  8799  002568  0E00               	movlw	0
  8800  00256A  6E56               	movwf	(___fldiv@new_exp+1)^0,c
  8801  00256C  0E00               	movlw	0
  8802  00256E  6E55               	movwf	___fldiv@new_exp^0,c
  8803  002570  0E00               	movlw	0
  8804  002572  6E44               	movwf	___fldiv@b^0,c
  8805  002574  0E00               	movlw	0
  8806  002576  6E45               	movwf	(___fldiv@b+1)^0,c
  8807  002578  0E00               	movlw	0
  8808  00257A  6E46               	movwf	(___fldiv@b+2)^0,c
  8809  00257C  0E00               	movlw	0
  8810  00257E  6E47               	movwf	(___fldiv@b+3)^0,c
  8811  002580  0E00               	movlw	0
  8812  002582  6E54               	movwf	___fldiv@sign^0,c
  8813  002584                     l3191:
  8814  002584  C055  F05B         	movff	___fldiv@new_exp,___fldiv@bexp
  8815  002588  A05B               	btfss	___fldiv@bexp^0,0,c
  8816  00258A  EFC9  F012         	goto	u3111
  8817  00258E  EFCB  F012         	goto	u3110
  8818  002592                     u3111:
  8819  002592  EFCE  F012         	goto	l3197
  8820  002596                     u3110:
  8821  002596  8E46               	bsf	(___fldiv@b+2)^0,7,c
  8822  002598  EFCF  F012         	goto	l3199
  8823  00259C                     l3197:
  8824  00259C  9E46               	bcf	(___fldiv@b+2)^0,7,c
  8825  00259E                     l3199:
  8826  00259E  90D8               	bcf	status,0,c
  8827  0025A0  305B               	rrcf	___fldiv@bexp^0,w,c
  8828  0025A2  6E47               	movwf	(___fldiv@b+3)^0,c
  8829  0025A4  EF85  F011         	goto	l3113
  8830  0025A8                     l759:
  8831  0025A8  0012               	return		;funcret
  8832  0025AA                     __end_of___fldiv:
  8833                           	callstack 0
  8834                           
  8835 ;; *************** function ___fladd *****************
  8836 ;; Defined at:
  8837 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  b               4   18[COMRAM] unsigned char 
  8840 ;;  a               4   22[COMRAM] unsigned char 
  8841 ;; Auto vars:     Size  Location     Type
  8842 ;;  grs             1   33[COMRAM] unsigned char 
  8843 ;;  bexp            1   32[COMRAM] unsigned char 
  8844 ;;  aexp            1   31[COMRAM] unsigned char 
  8845 ;;  signs           1   30[COMRAM] unsigned char 
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  4   18[COMRAM] unsigned char 
  8848 ;; Registers used:
  8849 ;;		wreg, status,2, status,0
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8855 ;;      Params:         8       0       0       0       0       0       0       0       0
  8856 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8857 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8858 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8859 ;;Total ram usage:       16 bytes
  8860 ;; Hardware stack levels used: 1
  8861 ;; This function calls:
  8862 ;;		Nothing
  8863 ;; This function is called by:
  8864 ;;		_main
  8865 ;;		_PWM1_Init
  8866 ;;		___flsub
  8867 ;;		_efgtoa
  8868 ;;		_PWM2_Init
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text38
  8873  001926                     __ptext38:
  8874                           	callstack 0
  8875  001926                     ___fladd:
  8876                           	callstack 25
  8877  001926  5016               	movf	(___fladd@b+3)^0,w,c
  8878  001928  0B80               	andlw	128
  8879  00192A  6E1F               	movwf	___fladd@signs^0,c
  8880  00192C  5016               	movf	(___fladd@b+3)^0,w,c
  8881  00192E  2416               	addwf	(___fladd@b+3)^0,w,c
  8882  001930  6E21               	movwf	___fladd@bexp^0,c
  8883  001932  AE15               	btfss	(___fladd@b+2)^0,7,c
  8884  001934  EF9E  F00C         	goto	u2461
  8885  001938  EFA0  F00C         	goto	u2460
  8886  00193C                     u2461:
  8887  00193C  EFA1  F00C         	goto	l2845
  8888  001940                     u2460:
  8889  001940  8021               	bsf	___fladd@bexp^0,0,c
  8890  001942                     l2845:
  8891  001942  5021               	movf	___fladd@bexp^0,w,c
  8892  001944  B4D8               	btfsc	status,2,c
  8893  001946  EFA7  F00C         	goto	u2471
  8894  00194A  EFA9  F00C         	goto	u2470
  8895  00194E                     u2471:
  8896  00194E  EFBE  F00C         	goto	l2855
  8897  001952                     u2470:
  8898  001952  2821               	incf	___fladd@bexp^0,w,c
  8899  001954  A4D8               	btfss	status,2,c
  8900  001956  EFAF  F00C         	goto	u2481
  8901  00195A  EFB1  F00C         	goto	u2480
  8902  00195E                     u2481:
  8903  00195E  EFB9  F00C         	goto	l2851
  8904  001962                     u2480:
  8905  001962  0E00               	movlw	0
  8906  001964  6E13               	movwf	___fladd@b^0,c
  8907  001966  0E00               	movlw	0
  8908  001968  6E14               	movwf	(___fladd@b+1)^0,c
  8909  00196A  0E00               	movlw	0
  8910  00196C  6E15               	movwf	(___fladd@b+2)^0,c
  8911  00196E  0E00               	movlw	0
  8912  001970  6E16               	movwf	(___fladd@b+3)^0,c
  8913  001972                     l2851:
  8914  001972  8E15               	bsf	(___fladd@b+2)^0,7,c
  8915  001974  0E00               	movlw	0
  8916  001976  6E16               	movwf	(___fladd@b+3)^0,c
  8917  001978  EFC6  F00C         	goto	l2857
  8918  00197C                     l2855:
  8919  00197C  0E00               	movlw	0
  8920  00197E  6E13               	movwf	___fladd@b^0,c
  8921  001980  0E00               	movlw	0
  8922  001982  6E14               	movwf	(___fladd@b+1)^0,c
  8923  001984  0E00               	movlw	0
  8924  001986  6E15               	movwf	(___fladd@b+2)^0,c
  8925  001988  0E00               	movlw	0
  8926  00198A  6E16               	movwf	(___fladd@b+3)^0,c
  8927  00198C                     l2857:
  8928  00198C  501A               	movf	(___fladd@a+3)^0,w,c
  8929  00198E  0B80               	andlw	128
  8930  001990  6E20               	movwf	___fladd@aexp^0,c
  8931  001992  501F               	movf	___fladd@signs^0,w,c
  8932  001994  1820               	xorwf	___fladd@aexp^0,w,c
  8933  001996  B4D8               	btfsc	status,2,c
  8934  001998  EFD0  F00C         	goto	u2491
  8935  00199C  EFD2  F00C         	goto	u2490
  8936  0019A0                     u2491:
  8937  0019A0  EFD3  F00C         	goto	l2863
  8938  0019A4                     u2490:
  8939  0019A4  8C1F               	bsf	___fladd@signs^0,6,c
  8940  0019A6                     l2863:
  8941  0019A6  501A               	movf	(___fladd@a+3)^0,w,c
  8942  0019A8  241A               	addwf	(___fladd@a+3)^0,w,c
  8943  0019AA  6E20               	movwf	___fladd@aexp^0,c
  8944  0019AC  AE19               	btfss	(___fladd@a+2)^0,7,c
  8945  0019AE  EFDB  F00C         	goto	u2501
  8946  0019B2  EFDD  F00C         	goto	u2500
  8947  0019B6                     u2501:
  8948  0019B6  EFDE  F00C         	goto	l2869
  8949  0019BA                     u2500:
  8950  0019BA  8020               	bsf	___fladd@aexp^0,0,c
  8951  0019BC                     l2869:
  8952  0019BC  5020               	movf	___fladd@aexp^0,w,c
  8953  0019BE  B4D8               	btfsc	status,2,c
  8954  0019C0  EFE4  F00C         	goto	u2511
  8955  0019C4  EFE6  F00C         	goto	u2510
  8956  0019C8                     u2511:
  8957  0019C8  EFFB  F00C         	goto	l2879
  8958  0019CC                     u2510:
  8959  0019CC  2820               	incf	___fladd@aexp^0,w,c
  8960  0019CE  A4D8               	btfss	status,2,c
  8961  0019D0  EFEC  F00C         	goto	u2521
  8962  0019D4  EFEE  F00C         	goto	u2520
  8963  0019D8                     u2521:
  8964  0019D8  EFF6  F00C         	goto	l2875
  8965  0019DC                     u2520:
  8966  0019DC  0E00               	movlw	0
  8967  0019DE  6E17               	movwf	___fladd@a^0,c
  8968  0019E0  0E00               	movlw	0
  8969  0019E2  6E18               	movwf	(___fladd@a+1)^0,c
  8970  0019E4  0E00               	movlw	0
  8971  0019E6  6E19               	movwf	(___fladd@a+2)^0,c
  8972  0019E8  0E00               	movlw	0
  8973  0019EA  6E1A               	movwf	(___fladd@a+3)^0,c
  8974  0019EC                     l2875:
  8975  0019EC  8E19               	bsf	(___fladd@a+2)^0,7,c
  8976  0019EE  0E00               	movlw	0
  8977  0019F0  6E1A               	movwf	(___fladd@a+3)^0,c
  8978  0019F2  EF03  F00D         	goto	l2881
  8979  0019F6                     l2879:
  8980  0019F6  0E00               	movlw	0
  8981  0019F8  6E17               	movwf	___fladd@a^0,c
  8982  0019FA  0E00               	movlw	0
  8983  0019FC  6E18               	movwf	(___fladd@a+1)^0,c
  8984  0019FE  0E00               	movlw	0
  8985  001A00  6E19               	movwf	(___fladd@a+2)^0,c
  8986  001A02  0E00               	movlw	0
  8987  001A04  6E1A               	movwf	(___fladd@a+3)^0,c
  8988  001A06                     l2881:
  8989  001A06  5021               	movf	___fladd@bexp^0,w,c
  8990  001A08  5C20               	subwf	___fladd@aexp^0,w,c
  8991  001A0A  B0D8               	btfsc	status,0,c
  8992  001A0C  EF0A  F00D         	goto	u2531
  8993  001A10  EF0C  F00D         	goto	u2530
  8994  001A14                     u2531:
  8995  001A14  EF33  F00D         	goto	l2917
  8996  001A18                     u2530:
  8997  001A18  AC1F               	btfss	___fladd@signs^0,6,c
  8998  001A1A  EF11  F00D         	goto	u2541
  8999  001A1E  EF13  F00D         	goto	u2540
  9000  001A22                     u2541:
  9001  001A22  EF15  F00D         	goto	l2887
  9002  001A26                     u2540:
  9003  001A26  0E80               	movlw	128
  9004  001A28  1A1F               	xorwf	___fladd@signs^0,f,c
  9005  001A2A                     l2887:
  9006  001A2A  C021  F022         	movff	___fladd@bexp,___fladd@grs
  9007  001A2E  C020  F021         	movff	___fladd@aexp,___fladd@bexp
  9008  001A32  C022  F020         	movff	___fladd@grs,___fladd@aexp
  9009  001A36  C013  F022         	movff	___fladd@b,___fladd@grs
  9010  001A3A  C017  F013         	movff	___fladd@a,___fladd@b
  9011  001A3E  C022  F017         	movff	___fladd@grs,___fladd@a
  9012  001A42  C014  F022         	movff	___fladd@b+1,___fladd@grs
  9013  001A46  C018  F014         	movff	___fladd@a+1,___fladd@b+1
  9014  001A4A  C022  F018         	movff	___fladd@grs,___fladd@a+1
  9015  001A4E  C015  F022         	movff	___fladd@b+2,___fladd@grs
  9016  001A52  C019  F015         	movff	___fladd@a+2,___fladd@b+2
  9017  001A56  C022  F019         	movff	___fladd@grs,___fladd@a+2
  9018  001A5A  C016  F022         	movff	___fladd@b+3,___fladd@grs
  9019  001A5E  C01A  F016         	movff	___fladd@a+3,___fladd@b+3
  9020  001A62  C022  F01A         	movff	___fladd@grs,___fladd@a+3
  9021  001A66                     l2917:
  9022  001A66  0E00               	movlw	0
  9023  001A68  6E22               	movwf	___fladd@grs^0,c
  9024  001A6A  5021               	movf	___fladd@bexp^0,w,c
  9025  001A6C  C020  F01B         	movff	___fladd@aexp,??___fladd
  9026  001A70  6A1C               	clrf	(??___fladd+1)^0,c
  9027  001A72  5E1B               	subwf	??___fladd^0,f,c
  9028  001A74  0E00               	movlw	0
  9029  001A76  5A1C               	subwfb	(??___fladd+1)^0,f,c
  9030  001A78  BE1C               	btfsc	(??___fladd+1)^0,7,c
  9031  001A7A  EF48  F00D         	goto	u2551
  9032  001A7E  501C               	movf	(??___fladd+1)^0,w,c
  9033  001A80  E109               	bnz	u2550
  9034  001A82  0E1A               	movlw	26
  9035  001A84  5C1B               	subwf	??___fladd^0,w,c
  9036  001A86  A0D8               	btfss	status,0,c
  9037  001A88  EF48  F00D         	goto	u2551
  9038  001A8C  EF4A  F00D         	goto	u2550
  9039  001A90                     u2551:
  9040  001A90  EF81  F00D         	goto	l706
  9041  001A94                     u2550:
  9042  001A94  5013               	movf	___fladd@b^0,w,c
  9043  001A96  1014               	iorwf	(___fladd@b+1)^0,w,c
  9044  001A98  1015               	iorwf	(___fladd@b+2)^0,w,c
  9045  001A9A  1016               	iorwf	(___fladd@b+3)^0,w,c
  9046  001A9C  A4D8               	btfss	status,2,c
  9047  001A9E  EF53  F00D         	goto	u2561
  9048  001AA2  EF56  F00D         	goto	u2560
  9049  001AA6                     u2561:
  9050  001AA6  0E01               	movlw	1
  9051  001AA8  EF57  F00D         	goto	u2570
  9052  001AAC                     u2560:
  9053  001AAC  0E00               	movlw	0
  9054  001AAE                     u2570:
  9055  001AAE  6E22               	movwf	___fladd@grs^0,c
  9056  001AB0  0E00               	movlw	0
  9057  001AB2  6E13               	movwf	___fladd@b^0,c
  9058  001AB4  0E00               	movlw	0
  9059  001AB6  6E14               	movwf	(___fladd@b+1)^0,c
  9060  001AB8  0E00               	movlw	0
  9061  001ABA  6E15               	movwf	(___fladd@b+2)^0,c
  9062  001ABC  0E00               	movlw	0
  9063  001ABE  6E16               	movwf	(___fladd@b+3)^0,c
  9064  001AC0  C020  F021         	movff	___fladd@aexp,___fladd@bexp
  9065  001AC4  EF8A  F00D         	goto	l705
  9066  001AC8                     l707:
  9067  001AC8  A022               	btfss	___fladd@grs^0,0,c
  9068  001ACA  EF69  F00D         	goto	u2581
  9069  001ACE  EF6B  F00D         	goto	u2580
  9070  001AD2                     u2581:
  9071  001AD2  EF71  F00D         	goto	l2929
  9072  001AD6                     u2580:
  9073  001AD6  90D8               	bcf	status,0,c
  9074  001AD8  3022               	rrcf	___fladd@grs^0,w,c
  9075  001ADA  0901               	iorlw	1
  9076  001ADC  6E22               	movwf	___fladd@grs^0,c
  9077  001ADE  EF73  F00D         	goto	l2931
  9078  001AE2                     l2929:
  9079  001AE2  90D8               	bcf	status,0,c
  9080  001AE4  3222               	rrcf	___fladd@grs^0,f,c
  9081  001AE6                     l2931:
  9082  001AE6  A013               	btfss	___fladd@b^0,0,c
  9083  001AE8  EF78  F00D         	goto	u2591
  9084  001AEC  EF7A  F00D         	goto	u2590
  9085  001AF0                     u2591:
  9086  001AF0  EF7B  F00D         	goto	l2935
  9087  001AF4                     u2590:
  9088  001AF4  8E22               	bsf	___fladd@grs^0,7,c
  9089  001AF6                     l2935:
  9090  001AF6  3416               	rlcf	(___fladd@b+3)^0,w,c
  9091  001AF8  3216               	rrcf	(___fladd@b+3)^0,f,c
  9092  001AFA  3215               	rrcf	(___fladd@b+2)^0,f,c
  9093  001AFC  3214               	rrcf	(___fladd@b+1)^0,f,c
  9094  001AFE  3213               	rrcf	___fladd@b^0,f,c
  9095  001B00  2A21               	incf	___fladd@bexp^0,f,c
  9096  001B02                     l706:
  9097  001B02  5020               	movf	___fladd@aexp^0,w,c
  9098  001B04  5C21               	subwf	___fladd@bexp^0,w,c
  9099  001B06  A0D8               	btfss	status,0,c
  9100  001B08  EF88  F00D         	goto	u2601
  9101  001B0C  EF8A  F00D         	goto	u2600
  9102  001B10                     u2601:
  9103  001B10  EF64  F00D         	goto	l707
  9104  001B14                     u2600:
  9105  001B14                     l705:
  9106  001B14  BC1F               	btfsc	___fladd@signs^0,6,c
  9107  001B16  EF8F  F00D         	goto	u2611
  9108  001B1A  EF91  F00D         	goto	u2610
  9109  001B1E                     u2611:
  9110  001B1E  EFD1  F00D         	goto	l2963
  9111  001B22                     u2610:
  9112  001B22  5021               	movf	___fladd@bexp^0,w,c
  9113  001B24  A4D8               	btfss	status,2,c
  9114  001B26  EF97  F00D         	goto	u2621
  9115  001B2A  EF99  F00D         	goto	u2620
  9116  001B2E                     u2621:
  9117  001B2E  EFA3  F00D         	goto	l2945
  9118  001B32                     u2620:
  9119  001B32  0E00               	movlw	0
  9120  001B34  6E13               	movwf	?___fladd^0,c
  9121  001B36  0E00               	movlw	0
  9122  001B38  6E14               	movwf	(?___fladd+1)^0,c
  9123  001B3A  0E00               	movlw	0
  9124  001B3C  6E15               	movwf	(?___fladd+2)^0,c
  9125  001B3E  0E00               	movlw	0
  9126  001B40  6E16               	movwf	(?___fladd+3)^0,c
  9127  001B42  EFF2  F00E         	goto	l714
  9128  001B46                     l2945:
  9129  001B46  5017               	movf	___fladd@a^0,w,c
  9130  001B48  2613               	addwf	___fladd@b^0,f,c
  9131  001B4A  5018               	movf	(___fladd@a+1)^0,w,c
  9132  001B4C  2214               	addwfc	(___fladd@b+1)^0,f,c
  9133  001B4E  5019               	movf	(___fladd@a+2)^0,w,c
  9134  001B50  2215               	addwfc	(___fladd@b+2)^0,f,c
  9135  001B52  501A               	movf	(___fladd@a+3)^0,w,c
  9136  001B54  2216               	addwfc	(___fladd@b+3)^0,f,c
  9137  001B56  A016               	btfss	(___fladd@b+3)^0,0,c
  9138  001B58  EFB0  F00D         	goto	u2631
  9139  001B5C  EFB2  F00D         	goto	u2630
  9140  001B60                     u2631:
  9141  001B60  EF5E  F00E         	goto	l2999
  9142  001B64                     u2630:
  9143  001B64  A022               	btfss	___fladd@grs^0,0,c
  9144  001B66  EFB7  F00D         	goto	u2641
  9145  001B6A  EFB9  F00D         	goto	u2640
  9146  001B6E                     u2641:
  9147  001B6E  EFBF  F00D         	goto	l2953
  9148  001B72                     u2640:
  9149  001B72  90D8               	bcf	status,0,c
  9150  001B74  3022               	rrcf	___fladd@grs^0,w,c
  9151  001B76  0901               	iorlw	1
  9152  001B78  6E22               	movwf	___fladd@grs^0,c
  9153  001B7A  EFC1  F00D         	goto	l2955
  9154  001B7E                     l2953:
  9155  001B7E  90D8               	bcf	status,0,c
  9156  001B80  3222               	rrcf	___fladd@grs^0,f,c
  9157  001B82                     l2955:
  9158  001B82  A013               	btfss	___fladd@b^0,0,c
  9159  001B84  EFC6  F00D         	goto	u2651
  9160  001B88  EFC8  F00D         	goto	u2650
  9161  001B8C                     u2651:
  9162  001B8C  EFC9  F00D         	goto	l2959
  9163  001B90                     u2650:
  9164  001B90  8E22               	bsf	___fladd@grs^0,7,c
  9165  001B92                     l2959:
  9166  001B92  3416               	rlcf	(___fladd@b+3)^0,w,c
  9167  001B94  3216               	rrcf	(___fladd@b+3)^0,f,c
  9168  001B96  3215               	rrcf	(___fladd@b+2)^0,f,c
  9169  001B98  3214               	rrcf	(___fladd@b+1)^0,f,c
  9170  001B9A  3213               	rrcf	___fladd@b^0,f,c
  9171  001B9C  2A21               	incf	___fladd@bexp^0,f,c
  9172  001B9E  EF5E  F00E         	goto	l2999
  9173  001BA2                     l2963:
  9174  001BA2  5017               	movf	___fladd@a^0,w,c
  9175  001BA4  5C13               	subwf	___fladd@b^0,w,c
  9176  001BA6  5018               	movf	(___fladd@a+1)^0,w,c
  9177  001BA8  5814               	subwfb	(___fladd@b+1)^0,w,c
  9178  001BAA  5019               	movf	(___fladd@a+2)^0,w,c
  9179  001BAC  5815               	subwfb	(___fladd@b+2)^0,w,c
  9180  001BAE  5016               	movf	(___fladd@b+3)^0,w,c
  9181  001BB0  0A80               	xorlw	128
  9182  001BB2  6E1B               	movwf	??___fladd^0,c
  9183  001BB4  501A               	movf	(___fladd@a+3)^0,w,c
  9184  001BB6  0A80               	xorlw	128
  9185  001BB8  581B               	subwfb	??___fladd^0,w,c
  9186  001BBA  B0D8               	btfsc	status,0,c
  9187  001BBC  EFE2  F00D         	goto	u2661
  9188  001BC0  EFE4  F00D         	goto	u2660
  9189  001BC4                     u2661:
  9190  001BC4  EF0F  F00E         	goto	l2973
  9191  001BC8                     u2660:
  9192  001BC8  5013               	movf	___fladd@b^0,w,c
  9193  001BCA  5C17               	subwf	___fladd@a^0,w,c
  9194  001BCC  6E1B               	movwf	??___fladd^0,c
  9195  001BCE  5014               	movf	(___fladd@b+1)^0,w,c
  9196  001BD0  5818               	subwfb	(___fladd@a+1)^0,w,c
  9197  001BD2  6E1C               	movwf	(??___fladd+1)^0,c
  9198  001BD4  5015               	movf	(___fladd@b+2)^0,w,c
  9199  001BD6  5819               	subwfb	(___fladd@a+2)^0,w,c
  9200  001BD8  6E1D               	movwf	(??___fladd+2)^0,c
  9201  001BDA  5016               	movf	(___fladd@b+3)^0,w,c
  9202  001BDC  581A               	subwfb	(___fladd@a+3)^0,w,c
  9203  001BDE  6E1E               	movwf	(??___fladd+3)^0,c
  9204  001BE0  0EFF               	movlw	255
  9205  001BE2  241B               	addwf	??___fladd^0,w,c
  9206  001BE4  6E13               	movwf	___fladd@b^0,c
  9207  001BE6  0EFF               	movlw	255
  9208  001BE8  201C               	addwfc	(??___fladd+1)^0,w,c
  9209  001BEA  6E14               	movwf	(___fladd@b+1)^0,c
  9210  001BEC  0EFF               	movlw	255
  9211  001BEE  201D               	addwfc	(??___fladd+2)^0,w,c
  9212  001BF0  6E15               	movwf	(___fladd@b+2)^0,c
  9213  001BF2  0EFF               	movlw	255
  9214  001BF4  201E               	addwfc	(??___fladd+3)^0,w,c
  9215  001BF6  6E16               	movwf	(___fladd@b+3)^0,c
  9216  001BF8  0E80               	movlw	128
  9217  001BFA  1A1F               	xorwf	___fladd@signs^0,f,c
  9218  001BFC  6C22               	negf	___fladd@grs^0,c
  9219  001BFE  5022               	movf	___fladd@grs^0,w,c
  9220  001C00  A4D8               	btfss	status,2,c
  9221  001C02  EF05  F00E         	goto	u2671
  9222  001C06  EF07  F00E         	goto	u2670
  9223  001C0A                     u2671:
  9224  001C0A  EF17  F00E         	goto	l722
  9225  001C0E                     u2670:
  9226  001C0E  0E01               	movlw	1
  9227  001C10  2613               	addwf	___fladd@b^0,f,c
  9228  001C12  0E00               	movlw	0
  9229  001C14  2214               	addwfc	(___fladd@b+1)^0,f,c
  9230  001C16  2215               	addwfc	(___fladd@b+2)^0,f,c
  9231  001C18  2216               	addwfc	(___fladd@b+3)^0,f,c
  9232  001C1A  EF17  F00E         	goto	l722
  9233  001C1E                     l2973:
  9234  001C1E  5017               	movf	___fladd@a^0,w,c
  9235  001C20  5E13               	subwf	___fladd@b^0,f,c
  9236  001C22  5018               	movf	(___fladd@a+1)^0,w,c
  9237  001C24  5A14               	subwfb	(___fladd@b+1)^0,f,c
  9238  001C26  5019               	movf	(___fladd@a+2)^0,w,c
  9239  001C28  5A15               	subwfb	(___fladd@b+2)^0,f,c
  9240  001C2A  501A               	movf	(___fladd@a+3)^0,w,c
  9241  001C2C  5A16               	subwfb	(___fladd@b+3)^0,f,c
  9242  001C2E                     l722:
  9243  001C2E  5013               	movf	___fladd@b^0,w,c
  9244  001C30  1014               	iorwf	(___fladd@b+1)^0,w,c
  9245  001C32  1015               	iorwf	(___fladd@b+2)^0,w,c
  9246  001C34  1016               	iorwf	(___fladd@b+3)^0,w,c
  9247  001C36  A4D8               	btfss	status,2,c
  9248  001C38  EF20  F00E         	goto	u2681
  9249  001C3C  EF22  F00E         	goto	u2680
  9250  001C40                     u2681:
  9251  001C40  EF57  F00E         	goto	l2997
  9252  001C44                     u2680:
  9253  001C44  5022               	movf	___fladd@grs^0,w,c
  9254  001C46  A4D8               	btfss	status,2,c
  9255  001C48  EF28  F00E         	goto	u2691
  9256  001C4C  EF2A  F00E         	goto	u2690
  9257  001C50                     u2691:
  9258  001C50  EF57  F00E         	goto	l2997
  9259  001C54                     u2690:
  9260  001C54  0E00               	movlw	0
  9261  001C56  6E13               	movwf	?___fladd^0,c
  9262  001C58  0E00               	movlw	0
  9263  001C5A  6E14               	movwf	(?___fladd+1)^0,c
  9264  001C5C  0E00               	movlw	0
  9265  001C5E  6E15               	movwf	(?___fladd+2)^0,c
  9266  001C60  0E00               	movlw	0
  9267  001C62  6E16               	movwf	(?___fladd+3)^0,c
  9268  001C64  EFF2  F00E         	goto	l714
  9269  001C68                     l2981:
  9270  001C68  90D8               	bcf	status,0,c
  9271  001C6A  3613               	rlcf	___fladd@b^0,f,c
  9272  001C6C  3614               	rlcf	(___fladd@b+1)^0,f,c
  9273  001C6E  3615               	rlcf	(___fladd@b+2)^0,f,c
  9274  001C70  3616               	rlcf	(___fladd@b+3)^0,f,c
  9275  001C72  AE22               	btfss	___fladd@grs^0,7,c
  9276  001C74  EF3E  F00E         	goto	u2701
  9277  001C78  EF40  F00E         	goto	u2700
  9278  001C7C                     u2701:
  9279  001C7C  EF41  F00E         	goto	l2987
  9280  001C80                     u2700:
  9281  001C80  8013               	bsf	___fladd@b^0,0,c
  9282  001C82                     l2987:
  9283  001C82  A022               	btfss	___fladd@grs^0,0,c
  9284  001C84  EF46  F00E         	goto	u2711
  9285  001C88  EF48  F00E         	goto	u2710
  9286  001C8C                     u2711:
  9287  001C8C  EF4C  F00E         	goto	l2991
  9288  001C90                     u2710:
  9289  001C90  80D8               	bsf	status,0,c
  9290  001C92  3622               	rlcf	___fladd@grs^0,f,c
  9291  001C94  EF4E  F00E         	goto	l2993
  9292  001C98                     l2991:
  9293  001C98  90D8               	bcf	status,0,c
  9294  001C9A  3622               	rlcf	___fladd@grs^0,f,c
  9295  001C9C                     l2993:
  9296  001C9C  5021               	movf	___fladd@bexp^0,w,c
  9297  001C9E  B4D8               	btfsc	status,2,c
  9298  001CA0  EF54  F00E         	goto	u2721
  9299  001CA4  EF56  F00E         	goto	u2720
  9300  001CA8                     u2721:
  9301  001CA8  EF57  F00E         	goto	l2997
  9302  001CAC                     u2720:
  9303  001CAC  0621               	decf	___fladd@bexp^0,f,c
  9304  001CAE                     l2997:
  9305  001CAE  AE15               	btfss	(___fladd@b+2)^0,7,c
  9306  001CB0  EF5C  F00E         	goto	u2731
  9307  001CB4  EF5E  F00E         	goto	u2730
  9308  001CB8                     u2731:
  9309  001CB8  EF34  F00E         	goto	l2981
  9310  001CBC                     u2730:
  9311  001CBC                     l2999:
  9312  001CBC  0E00               	movlw	0
  9313  001CBE  6E20               	movwf	___fladd@aexp^0,c
  9314  001CC0  AE22               	btfss	___fladd@grs^0,7,c
  9315  001CC2  EF65  F00E         	goto	u2741
  9316  001CC6  EF67  F00E         	goto	u2740
  9317  001CCA                     u2741:
  9318  001CCA  EF7F  F00E         	goto	l731
  9319  001CCE                     u2740:
  9320  001CCE  C022  F01B         	movff	___fladd@grs,??___fladd
  9321  001CD2  0E7F               	movlw	127
  9322  001CD4  161B               	andwf	??___fladd^0,f,c
  9323  001CD6  B4D8               	btfsc	status,2,c
  9324  001CD8  EF70  F00E         	goto	u2751
  9325  001CDC  EF72  F00E         	goto	u2750
  9326  001CE0                     u2751:
  9327  001CE0  EF76  F00E         	goto	l732
  9328  001CE4                     u2750:
  9329  001CE4                     l3005:
  9330  001CE4  0E01               	movlw	1
  9331  001CE6  6E20               	movwf	___fladd@aexp^0,c
  9332  001CE8  EF7F  F00E         	goto	l731
  9333  001CEC                     l732:
  9334  001CEC  A013               	btfss	___fladd@b^0,0,c
  9335  001CEE  EF7B  F00E         	goto	u2761
  9336  001CF2  EF7D  F00E         	goto	u2760
  9337  001CF6                     u2761:
  9338  001CF6  EF7F  F00E         	goto	l731
  9339  001CFA                     u2760:
  9340  001CFA  EF72  F00E         	goto	l3005
  9341  001CFE                     l731:
  9342  001CFE  5020               	movf	___fladd@aexp^0,w,c
  9343  001D00  B4D8               	btfsc	status,2,c
  9344  001D02  EF85  F00E         	goto	u2771
  9345  001D06  EF87  F00E         	goto	u2770
  9346  001D0A                     u2771:
  9347  001D0A  EFB2  F00E         	goto	l3017
  9348  001D0E                     u2770:
  9349  001D0E  0E01               	movlw	1
  9350  001D10  2613               	addwf	___fladd@b^0,f,c
  9351  001D12  0E00               	movlw	0
  9352  001D14  2214               	addwfc	(___fladd@b+1)^0,f,c
  9353  001D16  2215               	addwfc	(___fladd@b+2)^0,f,c
  9354  001D18  2216               	addwfc	(___fladd@b+3)^0,f,c
  9355  001D1A  A016               	btfss	(___fladd@b+3)^0,0,c
  9356  001D1C  EF92  F00E         	goto	u2781
  9357  001D20  EF94  F00E         	goto	u2780
  9358  001D24                     u2781:
  9359  001D24  EFB2  F00E         	goto	l3017
  9360  001D28                     u2780:
  9361  001D28  C013  F01B         	movff	___fladd@b,??___fladd
  9362  001D2C  C014  F01C         	movff	___fladd@b+1,??___fladd+1
  9363  001D30  C015  F01D         	movff	___fladd@b+2,??___fladd+2
  9364  001D34  C016  F01E         	movff	___fladd@b+3,??___fladd+3
  9365  001D38  341E               	rlcf	(??___fladd+3)^0,w,c
  9366  001D3A  321E               	rrcf	(??___fladd+3)^0,f,c
  9367  001D3C  321D               	rrcf	(??___fladd+2)^0,f,c
  9368  001D3E  321C               	rrcf	(??___fladd+1)^0,f,c
  9369  001D40  321B               	rrcf	??___fladd^0,f,c
  9370  001D42  C01B  F013         	movff	??___fladd,___fladd@b
  9371  001D46  C01C  F014         	movff	??___fladd+1,___fladd@b+1
  9372  001D4A  C01D  F015         	movff	??___fladd+2,___fladd@b+2
  9373  001D4E  C01E  F016         	movff	??___fladd+3,___fladd@b+3
  9374  001D52  2821               	incf	___fladd@bexp^0,w,c
  9375  001D54  B4D8               	btfsc	status,2,c
  9376  001D56  EFAF  F00E         	goto	u2791
  9377  001D5A  EFB1  F00E         	goto	u2790
  9378  001D5E                     u2791:
  9379  001D5E  EFB2  F00E         	goto	l3017
  9380  001D62                     u2790:
  9381  001D62  2A21               	incf	___fladd@bexp^0,f,c
  9382  001D64                     l3017:
  9383  001D64  2821               	incf	___fladd@bexp^0,w,c
  9384  001D66  B4D8               	btfsc	status,2,c
  9385  001D68  EFB8  F00E         	goto	u2801
  9386  001D6C  EFBA  F00E         	goto	u2800
  9387  001D70                     u2801:
  9388  001D70  EFC2  F00E         	goto	l3021
  9389  001D74                     u2800:
  9390  001D74  5021               	movf	___fladd@bexp^0,w,c
  9391  001D76  A4D8               	btfss	status,2,c
  9392  001D78  EFC0  F00E         	goto	u2811
  9393  001D7C  EFC2  F00E         	goto	u2810
  9394  001D80                     u2811:
  9395  001D80  EFD4  F00E         	goto	l3025
  9396  001D84                     u2810:
  9397  001D84                     l3021:
  9398  001D84  0E00               	movlw	0
  9399  001D86  6E13               	movwf	___fladd@b^0,c
  9400  001D88  0E00               	movlw	0
  9401  001D8A  6E14               	movwf	(___fladd@b+1)^0,c
  9402  001D8C  0E00               	movlw	0
  9403  001D8E  6E15               	movwf	(___fladd@b+2)^0,c
  9404  001D90  0E00               	movlw	0
  9405  001D92  6E16               	movwf	(___fladd@b+3)^0,c
  9406  001D94  5021               	movf	___fladd@bexp^0,w,c
  9407  001D96  A4D8               	btfss	status,2,c
  9408  001D98  EFD0  F00E         	goto	u2821
  9409  001D9C  EFD2  F00E         	goto	u2820
  9410  001DA0                     u2821:
  9411  001DA0  EFD4  F00E         	goto	l3025
  9412  001DA4                     u2820:
  9413  001DA4  0E00               	movlw	0
  9414  001DA6  6E1F               	movwf	___fladd@signs^0,c
  9415  001DA8                     l3025:
  9416  001DA8  A021               	btfss	___fladd@bexp^0,0,c
  9417  001DAA  EFD9  F00E         	goto	u2831
  9418  001DAE  EFDB  F00E         	goto	u2830
  9419  001DB2                     u2831:
  9420  001DB2  EFDE  F00E         	goto	l3029
  9421  001DB6                     u2830:
  9422  001DB6  8E15               	bsf	(___fladd@b+2)^0,7,c
  9423  001DB8  EFDF  F00E         	goto	l3031
  9424  001DBC                     l3029:
  9425  001DBC  9E15               	bcf	(___fladd@b+2)^0,7,c
  9426  001DBE                     l3031:
  9427  001DBE  90D8               	bcf	status,0,c
  9428  001DC0  3021               	rrcf	___fladd@bexp^0,w,c
  9429  001DC2  6E16               	movwf	(___fladd@b+3)^0,c
  9430  001DC4  AE1F               	btfss	___fladd@signs^0,7,c
  9431  001DC6  EFE7  F00E         	goto	u2841
  9432  001DCA  EFE9  F00E         	goto	u2840
  9433  001DCE                     u2841:
  9434  001DCE  EFEA  F00E         	goto	l3037
  9435  001DD2                     u2840:
  9436  001DD2  8E16               	bsf	(___fladd@b+3)^0,7,c
  9437  001DD4                     l3037:
  9438  001DD4  C013  F013         	movff	___fladd@b,?___fladd
  9439  001DD8  C014  F014         	movff	___fladd@b+1,?___fladd+1
  9440  001DDC  C015  F015         	movff	___fladd@b+2,?___fladd+2
  9441  001DE0  C016  F016         	movff	___fladd@b+3,?___fladd+3
  9442  001DE4                     l714:
  9443  001DE4  0012               	return		;funcret
  9444  001DE6                     __end_of___fladd:
  9445                           	callstack 0
  9446                           
  9447 ;; *************** function _Motor_Start *****************
  9448 ;; Defined at:
  9449 ;;		line 93 in file "main.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;		None
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      void 
  9456 ;; Registers used:
  9457 ;;		None
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9463 ;;      Params:         0       0       0       0       0       0       0       0       0
  9464 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9465 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9466 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9467 ;;Total ram usage:        0 bytes
  9468 ;; Hardware stack levels used: 1
  9469 ;; This function calls:
  9470 ;;		Nothing
  9471 ;; This function is called by:
  9472 ;;		_main
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text39
  9477  003E28                     __ptext39:
  9478                           	callstack 0
  9479  003E28                     _Motor_Start:
  9480                           	callstack 30
  9481  003E28                     
  9482                           ;main.c: 94:     PORTDbits.RD0 = 1;
  9483  003E28  8083               	bsf	131,0,c	;volatile
  9484                           
  9485                           ;main.c: 95:     PORTDbits.RD1 = 0;
  9486  003E2A  9283               	bcf	131,1,c	;volatile
  9487  003E2C  0012               	return		;funcret
  9488  003E2E                     __end_of_Motor_Start:
  9489                           	callstack 0
  9490                           
  9491                           	psect	rparam
  9492  0000                     
  9493                           	psect	idloc
  9494                           
  9495                           ;Config register IDLOC0 @ 0x200000
  9496                           ;	unspecified, using default values
  9497  200000                     	org	2097152
  9498  200000  FF                 	db	255
  9499                           
  9500                           ;Config register IDLOC1 @ 0x200001
  9501                           ;	unspecified, using default values
  9502  200001                     	org	2097153
  9503  200001  FF                 	db	255
  9504                           
  9505                           ;Config register IDLOC2 @ 0x200002
  9506                           ;	unspecified, using default values
  9507  200002                     	org	2097154
  9508  200002  FF                 	db	255
  9509                           
  9510                           ;Config register IDLOC3 @ 0x200003
  9511                           ;	unspecified, using default values
  9512  200003                     	org	2097155
  9513  200003  FF                 	db	255
  9514                           
  9515                           ;Config register IDLOC4 @ 0x200004
  9516                           ;	unspecified, using default values
  9517  200004                     	org	2097156
  9518  200004  FF                 	db	255
  9519                           
  9520                           ;Config register IDLOC5 @ 0x200005
  9521                           ;	unspecified, using default values
  9522  200005                     	org	2097157
  9523  200005  FF                 	db	255
  9524                           
  9525                           ;Config register IDLOC6 @ 0x200006
  9526                           ;	unspecified, using default values
  9527  200006                     	org	2097158
  9528  200006  FF                 	db	255
  9529                           
  9530                           ;Config register IDLOC7 @ 0x200007
  9531                           ;	unspecified, using default values
  9532  200007                     	org	2097159
  9533  200007  FF                 	db	255
  9534                           
  9535                           	psect	config
  9536                           
  9537                           ;Config register CONFIG1L @ 0x300000
  9538                           ;	PLL Prescaler Selection bits
  9539                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9540                           ;	System Clock Postscaler Selection bits
  9541                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9542                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9543                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9544  300000                     	org	3145728
  9545  300000  00                 	db	0
  9546                           
  9547                           ;Config register CONFIG1H @ 0x300001
  9548                           ;	Oscillator Selection bits
  9549                           ;	FOSC = HS, HS oscillator (HS)
  9550                           ;	Fail-Safe Clock Monitor Enable bit
  9551                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9552                           ;	Internal/External Oscillator Switchover bit
  9553                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9554  300001                     	org	3145729
  9555  300001  0C                 	db	12
  9556                           
  9557                           ;Config register CONFIG2L @ 0x300002
  9558                           ;	Power-up Timer Enable bit
  9559                           ;	PWRT = OFF, PWRT disabled
  9560                           ;	Brown-out Reset Enable bits
  9561                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  9562                           ;	Brown-out Reset Voltage bits
  9563                           ;	BORV = 3, Minimum setting 2.05V
  9564                           ;	USB Voltage Regulator Enable bit
  9565                           ;	VREGEN = OFF, USB voltage regulator disabled
  9566  300002                     	org	3145730
  9567  300002  1F                 	db	31
  9568                           
  9569                           ;Config register CONFIG2H @ 0x300003
  9570                           ;	Watchdog Timer Enable bit
  9571                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9572                           ;	Watchdog Timer Postscale Select bits
  9573                           ;	WDTPS = 32768, 1:32768
  9574  300003                     	org	3145731
  9575  300003  1E                 	db	30
  9576                           
  9577                           ; Padding undefined space
  9578  300004                     	org	3145732
  9579  300004  FF                 	db	255
  9580                           
  9581                           ;Config register CONFIG3H @ 0x300005
  9582                           ;	CCP2 MUX bit
  9583                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9584                           ;	PORTB A/D Enable bit
  9585                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9586                           ;	Low-Power Timer 1 Oscillator Enable bit
  9587                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9588                           ;	MCLR Pin Enable bit
  9589                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9590  300005                     	org	3145733
  9591  300005  81                 	db	129
  9592                           
  9593                           ;Config register CONFIG4L @ 0x300006
  9594                           ;	Stack Full/Underflow Reset Enable bit
  9595                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9596                           ;	Single-Supply ICSP Enable bit
  9597                           ;	LVP = OFF, Single-Supply ICSP disabled
  9598                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9599                           ;	ICPRT = OFF, ICPORT disabled
  9600                           ;	Extended Instruction Set Enable bit
  9601                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9602                           ;	Background Debugger Enable bit
  9603                           ;	DEBUG = 0x1, unprogrammed default
  9604  300006                     	org	3145734
  9605  300006  81                 	db	129
  9606                           
  9607                           ; Padding undefined space
  9608  300007                     	org	3145735
  9609  300007  FF                 	db	255
  9610                           
  9611                           ;Config register CONFIG5L @ 0x300008
  9612                           ;	Code Protection bit
  9613                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9614                           ;	Code Protection bit
  9615                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9616                           ;	Code Protection bit
  9617                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9618                           ;	Code Protection bit
  9619                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9620  300008                     	org	3145736
  9621  300008  0F                 	db	15
  9622                           
  9623                           ;Config register CONFIG5H @ 0x300009
  9624                           ;	Boot Block Code Protection bit
  9625                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9626                           ;	Data EEPROM Code Protection bit
  9627                           ;	CPD = OFF, Data EEPROM is not code-protected
  9628  300009                     	org	3145737
  9629  300009  C0                 	db	192
  9630                           
  9631                           ;Config register CONFIG6L @ 0x30000A
  9632                           ;	Write Protection bit
  9633                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9634                           ;	Write Protection bit
  9635                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9636                           ;	Write Protection bit
  9637                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9638                           ;	Write Protection bit
  9639                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9640  30000A                     	org	3145738
  9641  30000A  0F                 	db	15
  9642                           
  9643                           ;Config register CONFIG6H @ 0x30000B
  9644                           ;	Configuration Register Write Protection bit
  9645                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9646                           ;	Boot Block Write Protection bit
  9647                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9648                           ;	Data EEPROM Write Protection bit
  9649                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9650  30000B                     	org	3145739
  9651  30000B  E0                 	db	224
  9652                           
  9653                           ;Config register CONFIG7L @ 0x30000C
  9654                           ;	Table Read Protection bit
  9655                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9656                           ;	Table Read Protection bit
  9657                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9658                           ;	Table Read Protection bit
  9659                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9660                           ;	Table Read Protection bit
  9661                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9662  30000C                     	org	3145740
  9663  30000C  0F                 	db	15
  9664                           
  9665                           ;Config register CONFIG7H @ 0x30000D
  9666                           ;	Boot Block Table Read Protection bit
  9667                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9668  30000D                     	org	3145741
  9669  30000D  40                 	db	64
  9670                           tosu	equ	0xFFF
  9671                           tosh	equ	0xFFE
  9672                           tosl	equ	0xFFD
  9673                           stkptr	equ	0xFFC
  9674                           pclatu	equ	0xFFB
  9675                           pclath	equ	0xFFA
  9676                           pcl	equ	0xFF9
  9677                           tblptru	equ	0xFF8
  9678                           tblptrh	equ	0xFF7
  9679                           tblptrl	equ	0xFF6
  9680                           tablat	equ	0xFF5
  9681                           prodh	equ	0xFF4
  9682                           prodl	equ	0xFF3
  9683                           indf0	equ	0xFEF
  9684                           postinc0	equ	0xFEE
  9685                           postdec0	equ	0xFED
  9686                           preinc0	equ	0xFEC
  9687                           plusw0	equ	0xFEB
  9688                           fsr0h	equ	0xFEA
  9689                           fsr0l	equ	0xFE9
  9690                           wreg	equ	0xFE8
  9691                           indf1	equ	0xFE7
  9692                           postinc1	equ	0xFE6
  9693                           postdec1	equ	0xFE5
  9694                           preinc1	equ	0xFE4
  9695                           plusw1	equ	0xFE3
  9696                           fsr1h	equ	0xFE2
  9697                           fsr1l	equ	0xFE1
  9698                           bsr	equ	0xFE0
  9699                           indf2	equ	0xFDF
  9700                           postinc2	equ	0xFDE
  9701                           postdec2	equ	0xFDD
  9702                           preinc2	equ	0xFDC
  9703                           plusw2	equ	0xFDB
  9704                           fsr2h	equ	0xFDA
  9705                           fsr2l	equ	0xFD9
  9706                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    0
    Data        67
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160    153     160
    BANK1           256      0     180
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1035$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1035$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK1[50]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _atoi->_isspace
    _UART_Write_Text->_UART_Write_Chr
    _UART_Init->___lldiv
    _PWM1_Set_Duty->___fltol
    _PWM1_Init->___fltol
    ___xxtofl->_getDistance
    ___fltol->___fldiv
    ___flmul->___flsub
    ___fldiv->___flmul
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _PWM1_Set_Duty->___fltol
    _PWM1_Init->___fltol

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   71060
                                            131 BANK0     22    22      0
                        _Motor_Start
                          _PWM1_Init
                      _PWM1_Set_Duty
                         _PWM1_Start
                          _UART_Init
                    _UART_Write_Text
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                        _getDistance
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   33287
                                            110 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   32930
                                            102 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   32547
                                             82 BANK0     20    14      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   27236
                                             20 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                              0 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3953
                                             34 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             67 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _getDistance                                          4     2      2      24
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2     143
                                              1 COMRAM     2     0      2
                     _UART_Write_Chr
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Chr                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16     8      8     504
                                             13 COMRAM    16     8      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        5     5      0    9461
                                              8 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            9     7      2   12781
                                              8 BANK0      9     7      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1082
                                              4 COMRAM    14    10      4
                        _getDistance (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1065
                                             92 COMRAM     2     2      0
                                              0 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4480
                                             42 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2767
                                             67 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3174
                                             18 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Motor_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Motor_Start
   _PWM1_Init
     ___fladd
       ___xxtofl (ARG)
         _getDistance (ARG)
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _PWM1_Set_Duty
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _PWM1_Start
   _UART_Init
     ___lldiv
   _UART_Write_Text
     _UART_Write_Chr
   ___fladd
   ___flge
     ___flmul (ARG)
   ___flmul
   ___flsub
   ___fltol
   ___xxtofl
   _getDistance
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      B4       7       70.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITBIGSFRhh         34      0       0      20        0.0%
BITBIGSFRlll        21      0       0      29        0.0%
BITBIGSFRllhh        F      0       0      27        0.0%
BITBIGSFRlhhllh      C      0       0      25        0.0%
BITBIGSFRlhhhll      A      0       0      24        0.0%
BITBIGSFRlhhlll      8      0       0      26        0.0%
BITBIGSFRhl          8      0       0      21        0.0%
BITBIGSFRlhhhh       2      0       0      22        0.0%
BITBIGSFRlhhhlh      1      0       0      23        0.0%
BITBIGSFRllhl        1      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B2      30        0.0%
DATA                 0      0     1B2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 26 11:59:38 2023

       PWM1_Set_Duty@val 0069             ___fldiv@aexp 005C             ___fldiv@bexp 005B  
           ___fldiv@sign 0054        PWM1_Set_Duty@duty 0068                       l70 3BCA  
                     l64 3B96                       l73 3E2C                       l69 3BC2  
                     _Kd 017A                       _Ki 0176                       _Kp 017E  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003                      l110 33A0  
                    l111 33A8                      l112 33DC                      l211 39C0  
                    l115 3E14                      l204 39B0                      l108 3396  
                    l124 3DEA                      l118 3E26                      l151 28DE  
                    l154 2ACA                      l171 3E30                      l165 37C2  
                    l421 3872                      l408 3706                      l177 3E10  
                    l442 31B0                      l451 3D4C                      l436 391C  
                    l447 31F6                      l800 2118                      l705 1B14  
                    l801 2106                      l722 1C2E                      l714 1DE4  
                    l706 1B02                      l474 30F2                      l731 1CFE  
                    l707 1AC8                      l732 1CEC                      l901 3642  
                    l808 21D0                      l832 2D38                      l761 2408  
                    l770 244E                      l835 2E94                      l747 3C56  
                    l772 24C6                      l764 23CC                      l773 24B4  
                    l933 0BE0                      l917 1430                      l846 2E2C  
                    l759 25A8                      l791 1EAA                      l839 2DD0  
                    l855 3B2E                      l961 1020                      l795 220E  
                    l798 20A0                      l896 35C4                      l899 3606  
                    _PR2 000FCB                      _RX9 007D5E                      _TX9 007D66  
                    _pad 357E                      _ref 0172             ___awmod@sign 0006  
                    wreg 000FE8             ___flmul@aexp 003C             ___flmul@bexp 003D  
           ___flmul@sign 0037             ___flmul@temp 0042             ___flmul@prod 003E  
           ___fltol@exp1 005E                     l1002 1524                     l1020 186A  
                   l1015 1924                     l1026 3A22                     l1131 3DBA  
                   l1027 3A2A                     l1060 2FE2                     l1108 357C  
                   l1116 3C9A                     l1037 32F4                     l1125 3A86  
                   l1063 2FEA                     l1119 3E32                     l1135 34B2  
                   l1072 2C24                     l3001 1CC0                     l1145 3C08  
                   l3011 1D1A                     l3003 1CCE                     l1148 3C10  
                   l3021 1D84                     l3013 1D28                     l3005 1CE4  
                   l3101 22C2                     l1069 2CE0                     l1093 3D14  
                   l3031 1DBE                     l3023 1DA4                     l3015 1D62  
                   l3111 2302                     l3103 22C4                     l1079 3D84  
                   l1087 3B80                     l3033 1DC4                     l3025 1DA8  
                   l3009 1D0E                     l3017 1D64                     l3121 2332  
                   l3113 230A                     l3105 22CC                     l3041 3C58  
                   l3035 1DD2                     l3027 1DB6                     l3019 1D74  
                   l3131 2370                     l3123 2332                     l3115 230E  
                   l3107 22DC                     l3211 1E00                     l3043 3C64  
                   l3051 3D92                     l4011 1532                     l4003 14B2  
                   l3037 1DD4                     l3029 1DBC                     l3141 23BC  
                   l3133 2380                     l3109 22F2                     l3301 20D0  
                   l3221 1E38                     l3213 1E02                     l4101 3E22  
                   l3045 3C76                     l3053 3D96                     l4021 1592  
                   l4013 1534                     l3151 2406                     l3143 23CA  
                   l3135 2390                     l3127 2346                     l3119 2322  
                   l3071 221C                     l3311 2142                     l3303 20FE  
                   l3231 1E64                     l3223 1E48                     l3215 1E12  
                   l3207 1DE6                     l4111 3958                     l4103 391E  
                   l3063 3DEC                     l3047 3C7A                     l3055 3DAE  
                   l4023 15CC                     l4015 1558                     l4031 163A  
                   l4007 14BE                     l3161 244C                     l3153 2418  
                   l3145 23D6                     l3137 2398                     l3129 2360  
                   l3081 225C                     l3073 222A                     l3321 21B8  
                   l3313 216C                     l3241 1EBA                     l3233 1E74  
                   l3225 1E4E                     l3217 1E22                     l3209 1DF2  
                   l4201 2A7E                     l4121 39A0                     l4113 3966  
                   l4105 392E                     l3065 3E08                     l3401 380A  
                   l3049 3D86                     l4041 16E0                     l4033 165C  
                   l4025 15EC                     l4017 1560                     l4009 1512  
                   l3171 24AC                     l3155 242E                     l3163 245E  
                   l3147 23F4                     l3139 23A8                     l3091 2282  
                   l3083 225E                     l3075 222C                     l3323 21D4  
                   l3331 21FA                     l3307 2128                     l3315 2170  
                   l3251 1EF4                     l3243 1ECA                     l3235 1E84  
                   l3227 1E54                     l3219 1E32                     l4131 2D48  
                   l4203 2AA4                     l4211 3776                     l4123 39AA  
                   l4115 3970                     l4107 3944                     l3411 3846  
                   l3403 3812                     l3059 3CDE                     l4043 16F2  
                   l4035 166C                     l4019 156E                     l3181 251A  
                   l3165 246C                     l3157 2434                     l3149 23F6  
                   l3093 2290                     l3077 223C                     l3085 2266  
                   l3069 2210                     l3333 21FE                     l3325 21E4  
                   l3317 218A                     l3309 2134                     l3261 1F46  
                   l3253 1F0A                     l3237 1E94                     l3229 1E62  
                   l3501 30A6                     l4141 2D86                     l4133 2D5E  
                   l4125 2CE4                     l4213 379C                     l4117 398E  
                   l4109 394C                     l4221 3358                     l3413 384C  
                   l3405 381A                     l4061 1806                     l4045 1708  
                   l4053 1772                     l4037 169E                     l4029 15FA  
                   l4301 25CE                     l3191 2584                     l3175 24D6  
                   l3183 251E                     l3167 2470                     l3159 243E  
                   l3095 2292                     l3087 2276                     l3079 224C  
                   l3327 21F2                     l3319 219E                     l3271 1F8C  
                   l3263 1F54                     l3255 1F16                     l3247 1EDE  
                   l3239 1E9A                     l3503 30B2                     l4151 2E0E  
                   l4143 2DB8                     l4127 2CF4                     l4215 3E2E  
                   l4119 399E                     l4231 338E                     l4223 335C  
                   l3351 3662                     l3343 3644                     l3407 3828  
                   l3415 3852                     l3431 38F0                     l3423 3874  
                   l4071 18A2                     l4063 183A                     l4055 17A0  
                   l4047 1716                     l4039 16AE                     l4311 2602  
                   l4303 25E0                     l3193 2588                     l3185 2538  
                   l3177 24E2                     l3169 247E                     l3097 22A2  
                   l3089 227C                     l3329 21F4                     l3281 1FFA  
                   l3273 1FA6                     l3265 1F60                     l3257 1F2E  
                   l3249 1EEA                     l3505 30C2                     l4161 2E64  
                   l4153 2E1C                     l4145 2DBA                     l4137 2D72  
                   l4129 2D02                     l4209 370C                     l4233 3390  
                   l4225 3360                     l4217 32F6                     l3361 3696  
                   l3353 3670                     l3345 3648                     l3417 3862  
                   l3409 383E                     l3433 3914                     l3425 38A2  
                   l3441 3122                     l3337 3C12                     l3521 35BC  
                   l3513 357E                     l4081 18E0                     l4073 18B0  
                   l4049 1746                     l4321 2722                     l4313 2606  
                   l4305 25E4                     l3195 2596                     l3187 254E  
                   l3179 24F0                     l3099 22B2                     l3291 2090  
                   l3283 2024                     l3275 1FB6                     l3267 1F70  
                   l3259 1F3A                     l3507 30D2                     l4163 2E74  
                   l4155 2E3A                     l4147 2DC6                     l4139 2D7A  
                   l4235 339A                     l4243 33B2                     l4227 3376  
                   l4219 3354                     l4251 3B82                     l3611 3B7A  
                   l3603 3B30                     l3371 36D0                     l3363 369E  
                   l3355 3678                     l3347 3656                     l3419 386A  
                   l3435 391A                     l3427 38B2                     l3451 3190  
                   l3443 3132                     l3339 3C22                     l3531 362A  
                   l3523 35D0                     l3515 358E                     l4075 18C4  
                   l4059 17C8                     l4171 39C2                     l4331 2806  
                   l4323 277A                     l4315 263E                     l4307 25E8  
                   l2901 1A46                     l3197 259C                     l3189 2568  
                   l3293 209E                     l3285 205A                     l3277 1FD2  
                   l3269 1F7C                     l3509 30E2                     l4165 2E82  
                   l4157 2E3C                     l4149 2E02                     l4181 2890  
                   l4229 338C                     l4261 3BAC                     l4253 3B8A  
                   l3605 3B34                     l3381 36F6                     l3373 36D8  
                   l3365 36A6                     l3357 367C                     l3349 365E  
                   l3429 38E0                     l3453 319E                     l3445 3160  
                   l3461 3D16                     l3541 327E                     l3525 35E4  
                   l3517 35A2                     l3701 0B8A                     l3621 0850  
                   l4069 187E                     l4085 18EE                     l4173 39CA  
                   l4341 2874                     l4333 2816                     l4325 27AE  
                   l4317 2672                     l4309 25EC                     l2911 1A5A  
                   l2903 1A4A                     l3199 259E                     l3295 20B0  
                   l3287 2068                     l3279 1FDE                     l3471 3004  
                   l4167 2E84                     l4159 2E40                     l4191 28E0  
                   l4183 2898                     l4239 33AC                     l4263 3BB4  
                   l4255 3B8C                     l3607 3B48                     l3383 36FE  
                   l3375 36DA                     l3367 36B4                     l3359 3684  
                   l3391 37D6                     l3455 31EE                     l3447 3170  
                   l3439 30F4                     l3463 3D2C                     l3543 328A  
                   l3535 31F8                     l2831 34E2                     l3527 35E8  
                   l3519 35B0                     l3711 0BD4                     l3703 0B8E  
                   l3631 08A0                     l3623 0858                     l3615 0828  
                   l4087 1912                     l4079 18D2                     l4175 39D8  
                   l4271 3B00                     l4335 2832                     l4327 27E0  
                   l4319 26CA                     l4249 3E28                     l2921 1A94  
                   l2913 1A5E                     l2905 1A4E                     l2841 1932  
                   l3297 20BE                     l3289 2086                     l3481 3054  
                   l4193 28F0                     l4185 28A0                     l4281 3DCE  
                   l4257 3B94                     l3609 3B76                     l3377 36E0  
                   l3369 36BA                     l3393 37DE                     l3457 31F4  
                   l3449 317E                     l3465 3D3C                     l3553 32EC  
                   l3537 3218                     l2833 3500                     l2825 34B4  
                   l3529 3616                     l3561 3BCC                     l3801 10B0  
                   l3721 0C10                     l3705 0BA0                     l3713 0BEC  
                   l3641 08D8                     l3633 08AE                     l3625 087C  
                   l3617 0832                     l4177 3A06                     l4273 3B1C  
                   l4265 3ADE                     l4337 2858                     l4329 27F6  
                   l2931 1AE6                     l2923 1AB0                     l2915 1A62  
                   l2907 1A52                     l2851 1972                     l2843 1940  
                   l3299 20C2                     l3491 307E                     l3483 3058  
                   l3475 3018                     l4195 2936                     l4179 288C  
                   l4099 3E14                     l4283 3DD2                     l4259 3BA8  
                   l3379 36E6                     l3395 37E2                     l3387 37C4  
                   l3539 3256                     l3547 3296                     l3571 2ACC  
                   l2835 3536                     l2827 34C6                     l3811 10FC  
                   l3803 10C2                     l3731 0C76                     l3723 0C2C  
                   l3707 0BB2                     l3651 0908                     l3643 08DC  
                   l3635 08C0                     l3627 0886                     l3619 0842  
                   l4267 3AF0                     l4339 2864                     l4291 25B2  
                   l2941 1B32                     l2933 1AF4                     l2925 1AC0  
                   l2909 1A56                     l2917 1A66                     l2861 19A4  
                   l2853 1974                     l2845 1942                     l3493 3088  
                   l3485 3066                     l3477 3042                     l3469 2FEC  
                   l4197 29CE                     l4189 28A8                     l4277 3DBC  
                   l3397 37F0                     l3389 37C8                     l3549 32A8  
                   l3573 2AEC                     l2829 34D8                     l3557 3A2C  
                   l3565 3BCC                     l3901 13B4                     l3821 1130  
                   l3813 110A                     l3805 10D4                     l3741 0CBE  
                   l3733 0C88                     l3725 0C62                     l3709 0BBA  
                   l3653 0936                     l3637 08CC                     l3645 08E2  
                   l3629 088E                     l4269 3AF8                     l4293 25B4  
                   l4285 25AA                     ?_pad 0011                     l2951 1B72  
                   l2935 1AF6                     l2927 1AD6                     l2919 1A6A  
                   l2871 19CC                     l2863 19A6                     l2847 1952  
                   l2855 197C                     l2839 1926                     l3495 3092  
                   l3479 3044                     l4199 2A14                     l4279 3DC0  
                   l3399 37F8                     l3591 2C98                     l3583 2BD8  
                   l3575 2B44                     l3559 3A3C                     l3567 3BFA  
                   l3911 13FA                     l3831 1162                     l3823 1140  
                   l3815 111A                     l3807 10E2                     l3751 0D06  
                   l3743 0CCC                     l3735 0C9A                     l3727 0C6A  
                   l3719 0BFE                     l3671 09F0                     l3655 0952  
                   l3663 099C                     l3639 08D4                     l4463 14E4  
                   l4295 25B6                     l4287 25AE                     l2961 1B9C  
                   l2953 1B7E                     l2945 1B46                     l2937 1B00  
                   l2929 1AE2                     l2881 1A06                     l2873 19DC  
                   l2865 19AC                     l2857 198C                     l2849 1962  
                   l4465 2F32                     l3921 2E96                     l3593 2CC0  
                   l3585 2C14                     l3577 2B58                     l3913 140A  
                   l3905 13BA                     l3841 120A                     l3833 1174  
                   l3825 1144                     l3817 111E                     l3809 10EA  
                   l3761 0E1A                     l3753 0D16                     l3745 0CE4  
                   l3737 0CA8                     l3729 0C6E                     l3673 0A0C  
                   l3681 0A28                     l3657 096A                     l4297 25C4  
                   l4289 25B0                     l2971 1C0E                     l2955 1B82  
                   l2947 1B56                     l2939 1B22                     l2963 1BA2  
                   l2891 1A32                     l2883 1A18                     l2875 19EC  
                   l2867 19BA                     l2859 1992                     l4467 33C6  
                   l3931 2F04                     l3923 2EAA                     l3595 2CD0  
                   l3579 2B66                     l3587 2C48                     l3915 1410  
                   l3907 13E6                     l3851 1262                     l3843 1212  
                   l3835 1178                     l3827 114A                     l3819 1124  
                   l3771 0EBA                     l3755 0D2A                     l3763 0E20  
                   l3747 0CF6                     l3739 0CAC                     l3691 0AB2  
                   l3683 0A42                     l3659 0974                     l4299 25CA  
                   l2981 1C68                     l2965 1BC8                     l2973 1C1E  
                   l2957 1B90                     l2949 1B64                     l2893 1A36  
                   l2885 1A26                     l2877 19EE                     l2869 19BC  
                   l4469 28C0                     l3933 2F0C                     l3589 2C84  
                   l3909 13F2                     l3861 12A6                     l3853 1270  
                   l3829 1150                     l3837 117E                     l3845 1216  
                   l3781 0F96                     l3773 0EEC                     l3765 0E3E  
                   l3757 0D8E                     l3749 0CFE                     l3693 0B0C  
                   l3669 09C2                     l2991 1C98                     l2983 1C72  
                   l2975 1C44                     l2967 1BFC                     l2959 1B92  
                   l2895 1A3A                     l2887 1A2A                     l2879 19F6  
                   l3599 3D4E                     l3943 2F7E                     l3935 2F14  
                   l3927 2EAE                     l3871 12DC                     l3863 12AE  
                   l3855 1280                     l3847 1234                     l3839 11D6  
                   l3791 0FF8                     l3783 0F9C                     l3775 0EFC  
                   l3767 0E72                     l3759 0DE6                     l3695 0B40  
                   l3687 0A78                     l2993 1C9C                     l2985 1C80  
                   l2977 1C54                     l2969 1BFE                     l2897 1A3E  
                   l2889 1A2E                     l3945 2FB4                     l3937 2F48  
                   l3929 2ECA                     l3881 1338                     l3873 12E4  
                   l3865 12BE                     l3857 1284                     l3849 1250  
                   l3793 100C                     l3785 0FD0                     l3777 0F0C  
                   l3769 0EA4                     l3697 0B48                     l3689 0AAC  
                   l3961 3422                     l3953 33DE                     l2995 1CAC  
                   l2987 1C82                     l2899 1A42                     l3947 2FC6  
                   l3891 1378                     l3883 1340                     l3875 12F0  
                   l3867 12C6                     l3859 1294                     l3795 1018  
                   l3787 0FE4                     l3779 0F40                     l3699 0B7A  
                   l3963 343A                     l3955 3408                     l2989 1C90  
                   l2997 1CAE                     l3893 138A                     l3877 12F6  
                   l3885 1346                     l3869 12D4                     l3797 103C  
                   l3789 0FE8                     l3965 3456                     l3981 147A  
                   l3973 1432                     l2999 1CBC                     l3895 1396  
                   l3887 1358                     l3879 131C                     l3799 10A0  
                   l3967 3468                     l3959 3414                     l3991 14A0  
                   l3983 1486                     l3975 1456                     l3897 139E  
                   l3889 1372                     l3969 3490                     l3985 1488  
                   l3977 1464                     l3899 13AE                     l3995 14A6  
                   l3987 149A                     l3979 1476                     l3999 14AC  
                   STR_1 0801                     STR_2 0814                     STR_3 081C  
                   STR_6 0818                     STR_7 0820                     _BRGH 007D62  
                   u3000 2418                     u3001 2414                     u3010 242E  
                   u3011 242A                     u3100 2568                     u3020 244C  
                   u3101 2564                     u3021 2448                     u3110 2596  
                   u3030 246C                     u3111 2592                     u3031 2468  
                   u3040 247E                     u3200 2044                     u3120 1E00  
                   u4000 0BD4                     u3041 247A                     u3121 1DFC  
                   u4001 0BD0                     u3050 24AC                     u3210 209E  
                   u3130 1E12                     u4010 0BFA                     u3051 24A8  
                   u3211 209A                     u3131 1E0E                     u4011 0BF6  
                   u2500 19BA                     u3060 24C2                     u3300 21F2  
                   u3220 20BE                     u3140 1E22                     u2420 34C6  
                   u4100 0CF6                     u4020 0C10                     u2501 19B6  
                   u3061 24BE                     u3301 21EE                     u3221 20BA  
                   u3205 203A                     u3141 1E1E                     u2421 34C2  
                   u4101 0CF2                     u4021 0C0C                     u2510 19CC  
                   u3070 24D6                     u3230 20D0                     u3150 1E62  
                   u3310 3656                     u2430 34D8                     u4110 0E3E  
                   u4030 0C2C                     u2511 19C8                     u3071 24D2  
                   u3231 20CC                     u3151 1E5E                     u3311 3652  
                   u2431 34D4                     u4111 0E3A                     u4031 0C28  
                   u2600 1B14                     u2520 19DC                     u3080 24F0  
                   u3240 20FE                     u3160 1E74                     u3320 3670  
                   u3400 3828                     u2440 3500                     u4200 10D4  
                   u4120 0EA4                     u4040 0C62                     u2601 1B10  
                   u2521 19D8                     u3081 24EC                     u3241 20FA  
                   u3161 1E70                     u3321 366C                     u3401 3824  
                   u2441 34FC                     u4201 10D0                     u4121 0EA0  
                   u4041 0C5E                     u2610 1B22                     u2530 1A18  
                   u3090 2538                     u3250 2114                     u3170 1E84  
                   u3330 3696                     u3410 383E                     u2450 3536  
                   u4210 10E2                     u4130 0EEC                     u4050 0C88  
                   u2611 1B1E                     u2531 1A14                     u3091 2534  
                   u3251 2110                     u3171 1E80                     u3331 3692  
                   u3411 383A                     u2451 3532                     u4211 10DE  
                   u4131 0EE8                     u4051 0C84                     u2700 1C80  
                   u2620 1B32                     u2540 1A26                     u2460 1940  
                   u3260 2128                     u3180 1EBA                     u3340 36B4  
                   u3420 3862                     u3500 31EE                     u4300 12D4  
                   u4220 10FC                     u4140 0EFC                     u4060 0C9A  
                   u2701 1C7C                     u2621 1B2E                     u2541 1A22  
                   u2461 193C                     u3261 2124                     u3181 1EB6  
                   u3341 36B0                     u3421 385E                     u3501 31EA  
                   u4301 12D0                     u4221 10F8                     u4141 0EF8  
                   u4061 0C96                     u2710 1C90                     u2630 1B64  
                   u2550 1A94                     u2470 1952                     u3270 2142  
                   u3190 1ECA                     u3350 36D0                     u3430 38A2  
                   u3510 3D2C                     u4310 1358                     u4230 110A  
                   u4150 0F96                     u4070 0CA8                     u2711 1C8C  
                   u2631 1B60                     u2551 1A90                     u2471 194E  
                   u3271 213E                     u3191 1EC6                     u3351 36CC  
                   u3431 389E                     u3511 3D28                     u4311 1354  
                   u4231 1106                     u4151 0F92                     u4071 0CA4  
                   u2800 1D74                     u2720 1CAC                     u2640 1B72  
                   u2560 1AAC                     u2480 1962                     u3280 218A  
                   u3520 3004                     u3360 36F6                     u3440 38E0  
                   u3600 35B0                     u4320 1372                     u4240 1162  
                   u4160 0FE4                     u4080 0CBE                     u4400 343A  
                   u2801 1D70                     u2721 1CA8                     u2641 1B6E  
                   u2561 1AA6                     u2481 195E                     u3281 2186  
                   u3521 3000                     u3361 36F2                     u3441 38DC  
                   u3601 35AC                     u4321 136E                     u4241 115E  
                   u4161 0FE0                     u4081 0CBA                     u4401 3436  
                   u2810 1D84                     u2730 1CBC                     u2650 1B90  
                   u2570 1AAE                     u2490 19A4                     u3290 21B8  
                   u3530 3038                     u3370 37D6                     u3450 3914  
                   u3610 3606                     u4330 138A                     u4250 1234  
                   u4170 100C                     u4090 0CCC                     u4410 3456  
                   u2811 1D80                     u2731 1CB8                     u2651 1B8C  
                   u2491 19A0                     u3291 21B4                     u3371 37D2  
                   u3451 3910                     u3611 3602                     u4331 1386  
                   u4251 1230                     u4171 1008                     u4091 0CC8  
                   u4411 3452                     u2820 1DA4                     u2740 1CCE  
                   u2660 1BC8                     u2580 1AD6                     u2900 223C  
                   u3540 3066                     u3380 37F0                     u3460 3122  
                   u3620 3616                     u3700 3A74                     u4340 13E6  
                   u4260 1250                     u4180 10B0                     u4420 3468  
                   u4500 166C                     u2821 1DA0                     u2741 1CCA  
                   u2661 1BC4                     u2581 1AD2                     u2901 2238  
                   u3541 3062                     u3381 37EC                     u3461 311E  
                   u3621 3612                     u4341 13E2                     u4261 124C  
                   u4181 10AC                     u4421 3464                     u4501 1668  
                   u2830 1DB6                     u2750 1CE4                     u2670 1C0E  
                   u2590 1AF4                     u2910 224C                     u3550 307A  
                   u4350 2ECA                     u3390 380A                     u3470 3160  
                   u3630 3238                     u3710 3A86                     u4270 1262  
                   u4190 10C2                     u4430 3490                     u4510 16AE  
                   u2831 1DB2                     u2751 1CE0                     u2671 1C0A  
                   u2591 1AF0                     u2911 2248                     u3551 3076  
                   u3535 302E                     u4351 2EC6                     u3391 3806  
                   u3471 315C                     u3711 3A82                     u4271 125E  
                   u4191 10BE                     u4431 348C                     u4511 16AA  
                   u2840 1DD2                     u2760 1CFA                     u2680 1C44  
                   u2920 2290                     u3560 30A2                     u4600 2CF4  
                   u4360 2F00                     u3480 317E                     u3640 3256  
                   u3800 2C68                     u3720 3BFA                     u4280 1270  
                   u4520 16F2                     u4440 1456                     u2841 1DCE  
                   u2761 1CF6                     u2681 1C40                     u2921 228C  
                   u3561 309E                     u4601 2CF0                     u4361 2EFC  
                   u3481 317A                     u3641 3252                     u3721 3BF6  
                   u4281 126C                     u4521 16EE                     u4441 1452  
                   u2770 1D0E                     u2690 1C54                     u2930 22A2  
                   u3570 30C2                     u4610 2D02                     u4370 2FB4  
                   u3490 319E                     u3650 327E                     u3810 2C84  
                   u3730 2B16                     u2850 3C9A                     u4290 12A6  
                   u4530 17A0                     u4450 1524                     u2771 1D0A  
                   u2691 1C50                     u2931 229E                     u3571 30BE  
                   u4611 2CFE                     u4371 2FB0                     u3491 319A  
                   u3651 327A                     u3635 322E                     u3811 2C80  
                   u2851 3C96                     u3707 3A6A                     u4291 12A2  
                   u4531 179C                     u4451 1520                     u2780 1D28  
                   u2940 22B2                     u3580 30D2                     u4620 2D5E  
                   u4380 2FC6                     u3660 32A8                     u3820 2CC0  
                   u3740 2B44                     u2860 3DAE                     u3900 08C0  
                   u4540 1806                     u4460 1532                     u4700 3A22  
                   u2781 1D24                     u2941 22AE                     u3581 30CE  
                   u4621 2D5A                     u4381 2FC2                     u3661 32A4  
                   u3821 2CBC                     u3805 2C5E                     u3741 2B40  
                   u2861 3DAA                     u3901 08BC                     u4541 1802  
                   u4461 152E                     u4701 3A1E                     u2790 1D62  
                   u2950 22F2                     u4630 2DB4                     u3830 3D7E  
                   u3750 2B66                     u3590 358E                     u2870 3D0E  
                   u3910 0908                     u4390 3408                     u4550 18A2  
                   u4470 1558                     u2791 1D5E                     u2951 22EE  
                   u4631 2DB0                     u3831 3D78                     u3751 2B62  
                   u3735 2B0C                     u3591 358A                     u2871 3D08  
                   u3911 0904                     u4391 3404                     u4551 189E  
                   u4471 1554                     u2960 2332                     u4640 2DFE  
                   u4720 3374                     u4560 3E22                     u3840 3D80  
                   u3680 32E2                     u2880 3D10                     u3920 0936  
                   u4480 1592                     u4800 27E0                     u2961 232E  
                   u4641 2DFA                     u4721 336E                     u4561 3E1E  
                   u3681 32DC                     u3921 0932                     u4481 158E  
                   u4801 27DC                     u2970 23A8                     u2890 222A  
                   u4650 2E1C                     u4570 3944                     u3850 3B48  
                   u3690 32E4                     u3770 2BD4                     u3930 09C2  
                   u4490 163A                     u4810 2806                     u2971 23A4  
                   u2891 2226                     u4651 2E18                     u4571 3940  
                   u4715 3318                     u3851 3B44                     u3675 32BA  
                   u3771 2BD0                     u3931 09BE                     u4491 1636  
                   u4811 2802                     u2980 23CA                     u4660 2E2C  
                   u4580 3966                     u4740 338A                     u3860 3B76  
                   u3780 2BF8                     u3940 09F0                     u2981 23C6  
                   u4661 2E28                     u4581 3962                     u4741 3384  
                   u3861 3B72                     u3765 2B7A                     u3941 09EC  
                   u2990 23F4                     u4670 2E3A                     u4590 398E  
                   u3790 2C14                     u3766 2B84                     u3950 0A74  
                   u3870 0850                     u2991 23F0                     u4671 2E36  
                   u4591 398A                     u4735 3376                     u3791 2C10  
                   u3767 2B94                     u3951 0A70                     u3871 084C  
                   u4680 2E74                     u4760 3BA4                     u3960 0B08  
                   u3880 08A0                     u4681 2E70                     u4761 3BA0  
                   u3785 2BEE                     u3961 0B04                     u3881 089C  
                   u4690 2E82                     u4770 3BC2                     u3970 0B7A  
                   u3890 08AE                     u4691 2E7E                     u4755 338C  
                   u4771 3BBE                     u3971 0B76                     u3891 08AA  
                   u4827 286C                     u4780 3DEA                     u3980 0BA0  
                   u4781 3DE6                     u4837 3B8E                     u3981 0B9C  
                   u3990 0BB2                     u4847 3BAE                     u3991 0BAE  
                   u4791 25F6                     _SPEN 007D5F                     _TX9D 007D60  
                   _TXEN 007D65                     _SYNC 007D64                     _dbuf 0122  
                   _atoi 2E96                     _main 25AA                     _duty 00FF  
                   _prec 00FB                     _nout 0120                     pad@i 0018  
                   pad@p 0015                     fsr0h 000FEA                     fsr1h 000FE2  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     _suma 0114            ___fpclassifyf 31F8  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        ___fldiv@new_exp 0055             ___param_bank 000000  __end_of_UART_Write_Text 3DEC  
                  ??_pad 0017            ___fltol@sign1 005D                    ?_atoi 0008  
        __end_of___fladd 1DE6                    ?_main 0001          __end_of___fldiv 25AA  
        __end_of___awdiv 3708          __end_of___flneg 3D4E                    STR_10 0824  
                  STR_12 0824          __end_of___awmod 3874          __end_of___flmul 2210  
        __end_of___flsub 3C58          __end_of___fltol 30F4          __end_of___lldiv 39C2  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _RCREG 000FAE  
                  _RCSTA 000FAB             vfpfcnvrt@fmt 00B4                    _SPBRG 000FAF  
                  _TXREG 000FAD                    _TXSTA 000FAC              ?_PWM1_Start 0001  
                  _flags 00FD                    _error 0118                    _fputc 34B4  
                  _fputs 3C58          __end_of_isdigit 3D86                    atoi@n 0010  
                  pad@fp 0011                    atoi@s 0008                    _width 00F9  
                  _putch 3E32          __end_of_isspace 3B82          __end_of_isupper 3D16  
                  tablat 000FF5                    plusw0 000FEB                    plusw2 000FDB  
                  status 000FD8          __end_of_sprintf 3B30           ?___fpclassifyf 0001  
        __end_of_tolower 3C12          __end_of_strncmp 34B4          __initialization 3A88  
           __end_of_atoi 2FEC             __end_of_main 288C                   ??_atoi 000A  
                 ??_main 00E3            __activetblptr 000002                   _ADCON1 000FC1  
                 ?_fputc 0001                   ?_fputs 000A                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB         ___awdiv@dividend 0001                   ?_putch 0001  
          vfpfcnvrt@done 00BC         __end_of___xxtofl 2E96             vfprintf@cfmt 00CC  
      __end_of_UART_Init 33DE                   ___flge 30F4                   ___fleq 3874  
      __end_of_PWM1_Init 2ACC            ??_Motor_Start 0001                ??___fladd 001B  
                 ___wmul 3DEC                ??___fldiv 004C                ??___awdiv 0005  
              ??___flneg 0005                ??___awmod 0005                ??___flmul 0033  
       ?_UART_Write_Text 0002                ??___flsub 002B                ??___fltol 0064  
                 _actual 0110                ??___lldiv 0009                   _efgtoa 0828  
                 _floorf 2ACC                   clear_0 3AC0         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 000001          ___awmod@counter 0005  
                 pad@buf 0013                   _strcpy 3A2C                   _strlen 3D86  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
        ___fpclassifyf@u 000B          ___fpclassifyf@x 0001             __mediumconst 0000  
              ??_isspace 0003                   tblptrh 000FF7                ??_isupper 0003  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 3A2C                ??_sprintf 005F                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 0044               ___flge@ff2 0048  
        ??___fpclassifyf 0005             ___xxtofl@arg 000F             ___xxtofl@exp 000E  
           ___xxtofl@val 0005               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0060  __end_of__initialization 3AD4               ___flneg@f1 0001  
          ___rparam_used 000001               ___fltol@f1 0060           __pcstackCOMRAM 0001  
  __end_of_PWM1_Set_Duty 37C4             __pidataBANK0 3E34             __pidataBANK1 3C9C  
          __end_of_fputc 357E            __end_of_fputs 3C9C            __end_of_putch 3E34  
    __end_of_Motor_Start 3E2E                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 00F9               __pbssBANK1 0100  
                ?___flge 0044                  ?___fleq 0001                  ?___wmul 0001  
                ?_efgtoa 0074                  ?_floorf 0060                  ?_strcpy 0001  
                ?_strlen 0001                ?___xxtofl 0005             ??_PWM1_Start 0001  
                __Hparam 0000                  __Lparam 0000                  ___fladd 1926  
                ___fldiv 2210              _Motor_Start 3E28                  ___awdiv 3644  
                ___flneg 3D16                  ___awmod 37C4                  ___flmul 1DE6  
                ___flsub 3C12                  ___fltol 2FEC                  ___lldiv 391E  
              ?_vfprintf 00C6       __end_of_PWM1_Start 3E32             __psmallconst 0800  
                __pcinit 3A88                  __ramtop 0800                  __ptext0 25AA  
                __ptext1 3ADE                  __ptext2 39C2                  __ptext3 1432  
                __ptext4 33DE                  __ptext5 0828                  __ptext6 3BCC  
                __ptext7 3CDE                  __ptext8 3A2C                  __ptext9 357E  
              _T2CONbits 000FCA                  _isdigit 3D4E               ??___xxtofl 0009  
       ___awmod@dividend 0001                  _isspace 3B30           main@uartConfig 00F1  
         _PWM1_Init$1544 006C                  _isupper 3CDE                  efgtoa@c 007A  
                efgtoa@d 0092                  efgtoa@e 00AA                  efgtoa@f 0076  
                efgtoa@g 00A6                  efgtoa@h 009C                  efgtoa@i 00A4  
                efgtoa@l 00A0                  efgtoa@m 008C                  efgtoa@n 00AC  
                efgtoa@p 0096                  efgtoa@t 0086                  efgtoa@u 00AE  
                efgtoa@w 0098                  _strUART 0182                  atoi@neg 000E  
                _sprintf 3ADE                  _tolower 3BCC                  _strncmp 33DE  
   end_of_initialization 3AD4                  floorf@e 006E                  floorf@m 006A  
                floorf@u 0070                  floorf@x 0060           PWM1_Init@prees 0070  
                fputc@fp 0003            __Lmediumconst 0000                  fputs@fp 000C  
        ___lldiv@divisor 0005          ___lldiv@counter 000D        __end_of_vfpfcnvrt 1926  
             efgtoa@mode 009B               efgtoa@sign 0094                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE            ??_getDistance 0003           _UART_Write_Chr 3E12  
             ??_vfprintf 005F                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001                _UART_Init 32F6  
              _PWM1_Init 288C                _PORTBbits 000F81                _PORTDbits 000F83  
            ___fladd@grs 0022            ___xxtofl@sign 000D                _TRISBbits 000F93  
              _TRISCbits 000F94                _TRISDbits 000F95              ___fldiv@grs 0057  
            ___fldiv@rem 0050              ___flmul@grs 0038              _CCP1CONbits 000FBD  
            _CCP2CONbits 000FBA                _TXSTAbits 000FAC     UART_Write_Chr@letter 0001  
 __end_of_UART_Write_Chr 3E28           __end_of___flge 31F8           __end_of___fleq 391E  
            vfpfcnvrt@ap 00B6              vfpfcnvrt@ct 00C2              vfpfcnvrt@fp 00B2  
         __end_of___wmul 3E12               ?_UART_Init 000E           __end_of_efgtoa 1432  
             ?_PWM1_Init 0068           __end_of_floorf 2CE2               floorf@F526 0100  
    __end_of_getDistance 3BCC           __end_of_strcpy 3A88           __end_of_strlen 3DBC  
    start_initialization 3A88              __end_of_pad 3644         getDistance@count 0003  
     UART_Init@spbrg_val 001A    __end_of___fpclassifyf 32F6              vfprintf@fmt 00C8  
        ?_UART_Write_Chr 0001                 ??___flge 004C                 ??___fleq 0009  
               ??___wmul 0005                 ??_efgtoa 007B              __pdataBANK0 00FF  
            __pdataBANK1 0172                 ??_floorf 0064                 ??_strcpy 0005  
               ??_strlen 0003                ___fladd@a 0017                ___fladd@b 0013  
              ___fldiv@a 0048                ___fldiv@b 0044                ___flmul@a 002F  
              ___flmul@b 002B                ___flsub@a 0027                ___flsub@b 0023  
          __pcstackBANK0 0060              _efgtoa$1177 0082              _efgtoa$1169 0080  
            _efgtoa$1178 0084                _main$1541 00E5                _main$1542 00E9  
              _main$1543 00ED             ?_Motor_Start 0001                 ?___fladd 0013  
               ?___fldiv 0044                 ?___awdiv 0001                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 002B                 ?___flsub 0023  
               ?___fltol 0060                 ?___lldiv 0001                _reg10bits 0108  
            _getDistance 3B82              ??_UART_Init 0016              ??_PWM1_Init 006A  
              _distancia 011C          UART_Init@config 000E              __smallconst 0800  
               ?_isdigit 0001                 ?_isspace 0001                 ?_isupper 0001  
              _errorAnte 010C                 ?_sprintf 00CE                 ?_tolower 0007  
               ?_strncmp 0001        ??_UART_Write_Text 0004           ___wmul@product 0005  
          PWM1_Init@freq 0068                 _PIR1bits 000F9E            _PWM1_Set_Duty 3708  
              _vfpfcnvrt 1432        ___wmul@multiplier 0001             _isspace$1256 0007  
             vfpfcnvrt@c 00C5               vfpfcnvrt@f 00BE                copy_data0 3A9C  
               __Hrparam 0000               vfprintf@ap 00CA                 __Lrparam 0000  
             vfprintf@fp 00C6           ?_PWM1_Set_Duty 0001               ?_vfpfcnvrt 00B2  
     ___fpclassifyf@F465 0104               sprintf@fmt 00D0                 ___xxtofl 2CE2  
               __ptext10 3D86                 __ptext11 3C58                 __ptext20 37C4  
               __ptext12 34B4                 __ptext21 3644                 __ptext13 3E32  
               __ptext30 391E                 __ptext22 2E96                 __ptext14 2ACC  
               __ptext31 3E2E                 __ptext23 3B30                 __ptext15 31F8  
               __ptext32 3708                 __ptext24 3D4E                 __ptext16 3C12  
               __ptext33 288C                 __ptext25 3DEC                 __ptext17 3D16  
               __ptext34 2CE2                 __ptext26 3B82                 __ptext18 30F4  
               __ptext35 2FEC                 __ptext27 3DBC                 __ptext19 3874  
               __ptext36 1DE6                 __ptext28 3E12                 __ptext37 2210  
               __ptext29 32F6                 __ptext38 1926                 __ptext39 3E28  
             strcpy@dest 0001      UART_Write_Text@text 0002         ??_UART_Write_Chr 0001  
               efgtoa@fp 0074                 efgtoa@ne 008A                 efgtoa@pp 0088  
               efgtoa@ou 008E                 isa$xinst 000000                 _vfprintf 39C2  
               isdigit@c 0001                sprintf@ap 00D6                 isspace@c 0001  
       ___lldiv@dividend 0001                strcpy@src 0003                 isupper@c 0001  
              strncmp@_l 0001                strncmp@_r 0003          ??_PWM1_Set_Duty 005F  
            efgtoa@nmode 009A             ?_getDistance 0001              ??_vfpfcnvrt 00B8  
        _UART_Write_Text 3DBC                 sprintf@f 00D8                 tolower@c 0007  
               sprintf@s 00CE         ___lldiv@quotient 0009                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A               _PWM1_Start 3E2E  
          ___fladd@signs 001F             ___fladd@aexp 0020             ___fladd@bexp 0021  
