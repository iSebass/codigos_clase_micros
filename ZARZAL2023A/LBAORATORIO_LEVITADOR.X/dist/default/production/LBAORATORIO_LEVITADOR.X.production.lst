

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 02 08:31:17 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.40
    64                           ; Generated 17/11/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4550 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataBANK1
   100  0043CE                     __pidataBANK1:
   101                           	callstack 0
   102                           
   103                           ;initializer for _ref
   104  0043CE  0000               	dw	0
   105  0043D0  42A0               	dw	17056
   106                           
   107                           ;initializer for _Ki
   108  0043D2  CCCD               	dw	52429
   109  0043D4  3DCC               	dw	15820
   110                           
   111                           ;initializer for _Kd
   112  0043D6  CCCD               	dw	52429
   113  0043D8  3ECC               	dw	16076
   114                           
   115                           ;initializer for _Kp
   116  0043DA  0000               	dw	0
   117  0043DC  3F00               	dw	16128
   118                           
   119                           ;initializer for _duty
   120  0043DE  0046               	dw	70
   121                           
   122                           ;initializer for _strUART
   123  0043E0  20                 	db	32
   124  0043E1  00                 	db	0
   125  0043E2  00                 	db	0
   126  0043E3  00                 	db	0
   127  0043E4  00                 	db	0
   128  0043E5  00                 	db	0
   129  0043E6  00                 	db	0
   130  0043E7  00                 	db	0
   131  0043E8  00                 	db	0
   132  0043E9  00                 	db	0
   133  0043EA  00                 	db	0
   134  0043EB  00                 	db	0
   135  0043EC  00                 	db	0
   136  0043ED  00                 	db	0
   137  0043EE  00                 	db	0
   138  0043EF  00                 	db	0
   139  0043F0  00                 	db	0
   140  0043F1  00                 	db	0
   141  0043F2  00                 	db	0
   142  0043F3  00                 	db	0
   143  0043F4  00                 	db	0
   144  0043F5  00                 	db	0
   145  0043F6  00                 	db	0
   146  0043F7  00                 	db	0
   147  0043F8  00                 	db	0
   148  0043F9  00                 	db	0
   149  0043FA  00                 	db	0
   150  0043FB  00                 	db	0
   151  0043FC  00                 	db	0
   152  0043FD  00                 	db	0
   153  0043FE  00                 	db	0
   154  0043FF  00                 	db	0
   155  004400  00                 	db	0
   156  004401  00                 	db	0
   157  004402  00                 	db	0
   158  004403  00                 	db	0
   159  004404  00                 	db	0
   160  004405  00                 	db	0
   161  004406  00                 	db	0
   162  004407  00                 	db	0
   163  004408  00                 	db	0
   164  004409  00                 	db	0
   165  00440A  00                 	db	0
   166  00440B  00                 	db	0
   167  00440C  00                 	db	0
   168  00440D  00                 	db	0
   169  00440E  00                 	db	0
   170  00440F  00                 	db	0
   171  004410  00                 	db	0
   172  004411  00                 	db	0
   173  0000                     _TRISCbits	set	3988
   174  0000                     _RCREG	set	4014
   175  0000                     _TXREG	set	4013
   176  0000                     _TRISDbits	set	3989
   177  0000                     _TXSTAbits	set	4012
   178  0000                     _TX9D	set	32096
   179  0000                     _BRGH	set	32098
   180  0000                     _SPEN	set	32095
   181  0000                     _SYNC	set	32100
   182  0000                     _TXEN	set	32101
   183  0000                     _RX9	set	32094
   184  0000                     _TX9	set	32102
   185  0000                     _PORTBbits	set	3969
   186  0000                     _TRISBbits	set	3987
   187  0000                     _ADCON1	set	4033
   188  0000                     _T2CONbits	set	4042
   189  0000                     _PIR1bits	set	3998
   190  0000                     _RCSTA	set	4011
   191  0000                     _TXSTA	set	4012
   192  0000                     _SPBRG	set	4015
   193  0000                     _PORTDbits	set	3971
   194  0000                     _CCP2CONbits	set	4026
   195  0000                     _CCPR2L	set	4027
   196  0000                     _CCP1CONbits	set	4029
   197  0000                     _CCPR1L	set	4030
   198  0000                     _PR2	set	4043
   199                           
   200                           	psect	smallconst
   201  000800                     __psmallconst:
   202                           	callstack 0
   203  000800  00                 	db	0
   204  000801                     STR_1:
   205  000801  2A                 	db	42
   206  000802  25                 	db	37
   207  000803  30                 	db	48	;'0'
   208  000804  2E                 	db	46
   209  000805  31                 	db	49	;'1'
   210  000806  66                 	db	102	;'f'
   211  000807  2F                 	db	47
   212  000808  25                 	db	37
   213  000809  30                 	db	48	;'0'
   214  00080A  33                 	db	51	;'3'
   215  00080B  64                 	db	100	;'d'
   216  00080C  2F                 	db	47
   217  00080D  25                 	db	37
   218  00080E  30                 	db	48	;'0'
   219  00080F  2E                 	db	46
   220  000810  32                 	db	50	;'2'
   221  000811  66                 	db	102	;'f'
   222  000812  2F                 	db	47
   223  000813  25                 	db	37
   224  000814  30                 	db	48	;'0'
   225  000815  2E                 	db	46
   226  000816  32                 	db	50	;'2'
   227  000817  66                 	db	102	;'f'
   228  000818  2F                 	db	47
   229  000819  25                 	db	37
   230  00081A  30                 	db	48	;'0'
   231  00081B  2E                 	db	46
   232  00081C  32                 	db	50	;'2'
   233  00081D  66                 	db	102	;'f'
   234  00081E  23                 	db	35
   235  00081F  0D                 	db	13
   236  000820  0A                 	db	10
   237  000821  00                 	db	0
   238  000822                     STR_2:
   239  000822  49                 	db	73	;'I'
   240  000823  4E                 	db	78	;'N'
   241  000824  46                 	db	70	;'F'
   242  000825  00                 	db	0
   243  000826                     STR_6:
   244  000826  4E                 	db	78	;'N'
   245  000827  41                 	db	65	;'A'
   246  000828  4E                 	db	78	;'N'
   247  000829  00                 	db	0
   248  00082A                     STR_3:
   249  00082A  69                 	db	105	;'i'
   250  00082B  6E                 	db	110	;'n'
   251  00082C  66                 	db	102	;'f'
   252  00082D  00                 	db	0
   253  00082E                     STR_7:
   254  00082E  6E                 	db	110	;'n'
   255  00082F  61                 	db	97	;'a'
   256  000830  6E                 	db	110	;'n'
   257  000831  00                 	db	0
   258  000832                     STR_10:
   259  000832  6C                 	db	108	;'l'
   260  000833  66                 	db	102	;'f'
   261  000834  00                 	db	0
   262  000835  00                 	db	0	; dummy byte at the end
   263  0000                     
   264                           ; #config settings
   265                           
   266                           	psect	cinit
   267  004456                     __pcinit:
   268                           	callstack 0
   269  004456                     start_initialization:
   270                           	callstack 0
   271  004456                     __initialization:
   272                           	callstack 0
   273                           
   274                           ; Initialize objects allocated to BANK1 (68 bytes)
   275                           ; load TBLPTR registers with __pidataBANK1
   276  004456  0ECE               	movlw	low __pidataBANK1
   277  004458  6EF6               	movwf	tblptrl,c
   278  00445A  0E43               	movlw	high __pidataBANK1
   279  00445C  6EF7               	movwf	tblptrh,c
   280  00445E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   281  004460  6EF8               	movwf	tblptru,c
   282  004462  EE01  F074         	lfsr	0,__pdataBANK1
   283  004466  EE10 F044          	lfsr	1,68
   284  00446A                     copy_data0:
   285  00446A  0009               	tblrd		*+
   286  00446C  CFF5 FFEE          	movff	tablat,postinc0
   287  004470  50E5               	movf	postdec1,w,c
   288  004472  50E1               	movf	fsr1l,w,c
   289  004474  E1FA               	bnz	copy_data0
   290                           
   291                           ; Clear objects allocated to BANK1 (116 bytes)
   292  004476  EE01  F000         	lfsr	0,__pbssBANK1
   293  00447A  0E74               	movlw	116
   294  00447C                     clear_0:
   295  00447C  6AEE               	clrf	postinc0,c
   296  00447E  06E8               	decf	wreg,f,c
   297  004480  E1FD               	bnz	clear_0
   298                           
   299                           ; Clear objects allocated to BANK0 (4 bytes)
   300  004482  0100               	movlb	0
   301  004484  6BFE               	clrf	(__pbssBANK0+3)& (0+255),b
   302  004486  6BFD               	clrf	(__pbssBANK0+2)& (0+255),b
   303  004488  6BFC               	clrf	(__pbssBANK0+1)& (0+255),b
   304  00448A  6BFB               	clrf	__pbssBANK0& (0+255),b
   305  00448C                     end_of_initialization:
   306                           	callstack 0
   307  00448C                     __end_of__initialization:
   308                           	callstack 0
   309  00448C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   310  00448E  6EF8               	movwf	tblptru,c
   311  004490  0100               	movlb	0
   312  004492  EFB7  F013         	goto	_main	;jump to C main() function
   313                           
   314                           	psect	bssBANK0
   315  0000FB                     __pbssBANK0:
   316                           	callstack 0
   317  0000FB                     _prec:
   318                           	callstack 0
   319  0000FB                     	ds	2
   320  0000FD                     _flags:
   321                           	callstack 0
   322  0000FD                     	ds	2
   323                           
   324                           	psect	bssBANK1
   325  000100                     __pbssBANK1:
   326                           	callstack 0
   327  000100                     floorf@F526:
   328                           	callstack 0
   329  000100                     	ds	4
   330  000104                     ___fpclassifyf@F465:
   331                           	callstack 0
   332  000104                     	ds	4
   333  000108                     _reg10bits:
   334                           	callstack 0
   335  000108                     	ds	4
   336  00010C                     _errorAnte:
   337                           	callstack 0
   338  00010C                     	ds	4
   339  000110                     _actual:
   340                           	callstack 0
   341  000110                     	ds	4
   342  000114                     _suma:
   343                           	callstack 0
   344  000114                     	ds	4
   345  000118                     _error:
   346                           	callstack 0
   347  000118                     	ds	4
   348  00011C                     _distancia:
   349                           	callstack 0
   350  00011C                     	ds	4
   351  000120                     _nout:
   352                           	callstack 0
   353  000120                     	ds	2
   354  000122                     _width:
   355                           	callstack 0
   356  000122                     	ds	2
   357  000124                     _dbuf:
   358                           	callstack 0
   359  000124                     	ds	80
   360                           
   361                           	psect	dataBANK1
   362  000174                     __pdataBANK1:
   363                           	callstack 0
   364  000174                     _ref:
   365                           	callstack 0
   366  000174                     	ds	4
   367  000178                     _Ki:
   368                           	callstack 0
   369  000178                     	ds	4
   370  00017C                     _Kd:
   371                           	callstack 0
   372  00017C                     	ds	4
   373  000180                     _Kp:
   374                           	callstack 0
   375  000180                     	ds	4
   376  000184                     _duty:
   377                           	callstack 0
   378  000184                     	ds	2
   379  000186                     _strUART:
   380                           	callstack 0
   381  000186                     	ds	50
   382                           
   383                           	psect	cstackBANK1
   384  0001B8                     __pcstackBANK1:
   385                           	callstack 0
   386  0001B8                     _main$1560:
   387                           	callstack 0
   388                           
   389                           ; 4 bytes @ 0x0
   390  0001B8                     	ds	4
   391  0001BC                     _main$1561:
   392                           	callstack 0
   393                           
   394                           ; 4 bytes @ 0x4
   395  0001BC                     	ds	4
   396  0001C0                     _main$1562:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x8
   400  0001C0                     	ds	4
   401  0001C4                     main@uartConfig:
   402                           	callstack 0
   403                           
   404                           ; 8 bytes @ 0xC
   405  0001C4                     	ds	8
   406                           
   407                           	psect	cstackBANK0
   408  000060                     __pcstackBANK0:
   409                           	callstack 0
   410  000060                     ?_floorf:
   411                           	callstack 0
   412  000060                     ?___fltol:
   413                           	callstack 0
   414  000060                     ___fltol@f1:
   415                           	callstack 0
   416  000060                     floorf@x:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0x0
   420  000060                     	ds	4
   421  000064                     ??_floorf:
   422  000064                     ??___fltol:
   423                           
   424                           ; 1 bytes @ 0x4
   425  000064                     	ds	4
   426  000068                     PWM1_Set_Duty@duty:
   427                           	callstack 0
   428  000068                     PWM1_Init@freq:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x8
   432  000068                     	ds	1
   433  000069                     PWM1_Set_Duty@val:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0x9
   437  000069                     	ds	1
   438  00006A                     ??_PWM1_Init:
   439  00006A                     floorf@m:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0xA
   443  00006A                     	ds	2
   444  00006C                     _PWM1_Init$1563:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0xC
   448  00006C                     	ds	2
   449  00006E                     floorf@e:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xE
   453  00006E                     	ds	2
   454  000070                     PWM1_Init@prees:
   455                           	callstack 0
   456  000070                     floorf@u:
   457                           	callstack 0
   458                           
   459                           ; 4 bytes @ 0x10
   460  000070                     	ds	4
   461  000074                     ?_efgtoa:
   462                           	callstack 0
   463  000074                     efgtoa@fp:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x14
   467  000074                     	ds	2
   468  000076                     efgtoa@f:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x16
   472  000076                     	ds	4
   473  00007A                     efgtoa@c:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x1A
   477  00007A                     	ds	1
   478  00007B                     ??_efgtoa:
   479                           
   480                           ; 1 bytes @ 0x1B
   481  00007B                     	ds	5
   482  000080                     _efgtoa$1184:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x20
   486  000080                     	ds	2
   487  000082                     _efgtoa$1191:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x22
   491  000082                     	ds	2
   492  000084                     _efgtoa$1192:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x24
   496  000084                     	ds	2
   497  000086                     efgtoa@t:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x26
   501  000086                     	ds	2
   502  000088                     efgtoa@pp:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x28
   506  000088                     	ds	2
   507  00008A                     efgtoa@ne:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x2A
   511  00008A                     	ds	2
   512  00008C                     efgtoa@m:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x2C
   516  00008C                     	ds	2
   517  00008E                     efgtoa@ou:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0x2E
   521  00008E                     	ds	4
   522  000092                     efgtoa@d:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x32
   526  000092                     	ds	2
   527  000094                     efgtoa@sign:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x34
   531  000094                     	ds	2
   532  000096                     efgtoa@p:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x36
   536  000096                     	ds	2
   537  000098                     efgtoa@w:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x38
   541  000098                     	ds	2
   542  00009A                     efgtoa@nmode:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x3A
   546  00009A                     	ds	1
   547  00009B                     efgtoa@mode:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x3B
   551  00009B                     	ds	1
   552  00009C                     efgtoa@h:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x3C
   556  00009C                     	ds	4
   557  0000A0                     efgtoa@l:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x40
   561  0000A0                     	ds	4
   562  0000A4                     efgtoa@i:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x44
   566  0000A4                     	ds	2
   567  0000A6                     efgtoa@g:
   568                           	callstack 0
   569                           
   570                           ; 4 bytes @ 0x46
   571  0000A6                     	ds	4
   572  0000AA                     efgtoa@e:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x4A
   576  0000AA                     	ds	2
   577  0000AC                     efgtoa@n:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x4C
   581  0000AC                     	ds	2
   582  0000AE                     efgtoa@u:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x4E
   586  0000AE                     	ds	4
   587  0000B2                     ?_vfpfcnvrt:
   588                           	callstack 0
   589  0000B2                     vfpfcnvrt@fp:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x52
   593  0000B2                     	ds	2
   594  0000B4                     vfpfcnvrt@fmt:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x54
   598  0000B4                     	ds	2
   599  0000B6                     vfpfcnvrt@ap:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x56
   603  0000B6                     	ds	2
   604  0000B8                     ??_vfpfcnvrt:
   605                           
   606                           ; 1 bytes @ 0x58
   607  0000B8                     	ds	4
   608  0000BC                     vfpfcnvrt@ll:
   609                           	callstack 0
   610                           
   611                           ; 8 bytes @ 0x5C
   612  0000BC                     	ds	8
   613  0000C4                     vfpfcnvrt@done:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x64
   617  0000C4                     	ds	2
   618  0000C6                     vfpfcnvrt@f:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x66
   622  0000C6                     	ds	4
   623  0000CA                     vfpfcnvrt@ct:
   624                           	callstack 0
   625                           
   626                           ; 3 bytes @ 0x6A
   627  0000CA                     	ds	3
   628  0000CD                     vfpfcnvrt@c:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x6D
   632  0000CD                     	ds	1
   633  0000CE                     ?_vfprintf:
   634                           	callstack 0
   635  0000CE                     vfprintf@fp:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x6E
   639  0000CE                     	ds	2
   640  0000D0                     vfprintf@fmt:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x70
   644  0000D0                     	ds	2
   645  0000D2                     vfprintf@ap:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x72
   649  0000D2                     	ds	2
   650  0000D4                     vfprintf@cfmt:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x74
   654  0000D4                     	ds	2
   655  0000D6                     ?_sprintf:
   656                           	callstack 0
   657  0000D6                     sprintf@s:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x76
   661  0000D6                     	ds	2
   662  0000D8                     sprintf@fmt:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x78
   666  0000D8                     	ds	20
   667  0000EC                     sprintf@ap:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x8C
   671  0000EC                     	ds	2
   672  0000EE                     sprintf@f:
   673                           	callstack 0
   674                           
   675                           ; 11 bytes @ 0x8E
   676  0000EE                     	ds	11
   677  0000F9                     ??_main:
   678                           
   679                           ; 1 bytes @ 0x99
   680  0000F9                     	ds	2
   681                           
   682                           	psect	cstackCOMRAM
   683  000001                     __pcstackCOMRAM:
   684                           	callstack 0
   685  000001                     ?_getDistance:
   686                           	callstack 0
   687  000001                     ?_strlen:
   688                           	callstack 0
   689  000001                     ?___fpclassifyf:
   690                           	callstack 0
   691  000001                     ?_isupper:
   692                           	callstack 0
   693  000001                     ?_isdigit:
   694                           	callstack 0
   695  000001                     ?_strncmp:
   696                           	callstack 0
   697  000001                     ?_isspace:
   698                           	callstack 0
   699  000001                     ?___wmul:
   700                           	callstack 0
   701  000001                     ?___awdiv:
   702                           	callstack 0
   703  000001                     ?___awmod:
   704                           	callstack 0
   705  000001                     ?___lldiv:
   706                           	callstack 0
   707  000001                     ?___flneg:
   708                           	callstack 0
   709  000001                     ?___aodiv:
   710                           	callstack 0
   711  000001                     ?___aomod:
   712                           	callstack 0
   713  000001                     UART_Write_Chr@letter:
   714                           	callstack 0
   715  000001                     ___wmul@multiplier:
   716                           	callstack 0
   717  000001                     ___awdiv@dividend:
   718                           	callstack 0
   719  000001                     ___awmod@dividend:
   720                           	callstack 0
   721  000001                     isdigit@c:
   722                           	callstack 0
   723  000001                     isspace@c:
   724                           	callstack 0
   725  000001                     isupper@c:
   726                           	callstack 0
   727  000001                     fputc@c:
   728                           	callstack 0
   729  000001                     strcpy@dest:
   730                           	callstack 0
   731  000001                     strlen@s:
   732                           	callstack 0
   733  000001                     strncmp@_l:
   734                           	callstack 0
   735  000001                     ___lldiv@dividend:
   736                           	callstack 0
   737  000001                     ___fleq@ff1:
   738                           	callstack 0
   739  000001                     ___flneg@f1:
   740                           	callstack 0
   741  000001                     ___fpclassifyf@x:
   742                           	callstack 0
   743  000001                     ___aodiv@dividend:
   744                           	callstack 0
   745  000001                     ___aomod@dividend:
   746                           	callstack 0
   747                           
   748                           ; 8 bytes @ 0x0
   749  000001                     	ds	1
   750  000002                     UART_Write_Text@text:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x1
   754  000002                     	ds	1
   755  000003                     ??_isupper:
   756  000003                     ??_isdigit:
   757  000003                     ??_isspace:
   758  000003                     getDistance@count:
   759                           	callstack 0
   760  000003                     ___wmul@multiplicand:
   761                           	callstack 0
   762  000003                     ___awdiv@divisor:
   763                           	callstack 0
   764  000003                     ___awmod@divisor:
   765                           	callstack 0
   766  000003                     fputc@fp:
   767                           	callstack 0
   768  000003                     strcpy@src:
   769                           	callstack 0
   770  000003                     strlen@a:
   771                           	callstack 0
   772  000003                     strncmp@_r:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x2
   776  000003                     	ds	1
   777  000004                     
   778                           ; 1 bytes @ 0x3
   779  000004                     	ds	1
   780  000005                     ??_fputc:
   781  000005                     ??___fpclassifyf:
   782  000005                     ??_strcpy:
   783  000005                     ?___xxtofl:
   784                           	callstack 0
   785  000005                     ___awdiv@counter:
   786                           	callstack 0
   787  000005                     ___awmod@counter:
   788                           	callstack 0
   789  000005                     ___wmul@product:
   790                           	callstack 0
   791  000005                     strncmp@n:
   792                           	callstack 0
   793  000005                     ___lldiv@divisor:
   794                           	callstack 0
   795  000005                     ___fleq@ff2:
   796                           	callstack 0
   797  000005                     ___xxtofl@val:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x4
   801  000005                     	ds	1
   802  000006                     ___awdiv@sign:
   803                           	callstack 0
   804  000006                     ___awmod@sign:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x5
   808  000006                     	ds	1
   809  000007                     ??_strncmp:
   810  000007                     ?_tolower:
   811                           	callstack 0
   812  000007                     _isspace$1273:
   813                           	callstack 0
   814  000007                     ___awdiv@quotient:
   815                           	callstack 0
   816  000007                     strcpy@s:
   817                           	callstack 0
   818  000007                     tolower@c:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x6
   822  000007                     	ds	1
   823  000008                     ?_atoi:
   824                           	callstack 0
   825  000008                     atoi@s:
   826                           	callstack 0
   827  000008                     strncmp@l:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x7
   831  000008                     	ds	1
   832  000009                     ??_tolower:
   833  000009                     ??___fleq:
   834  000009                     ??___xxtofl:
   835  000009                     ___fpclassifyf@e:
   836                           	callstack 0
   837  000009                     strcpy@d:
   838                           	callstack 0
   839  000009                     ___lldiv@quotient:
   840                           	callstack 0
   841  000009                     ___aodiv@divisor:
   842                           	callstack 0
   843  000009                     ___aomod@divisor:
   844                           	callstack 0
   845                           
   846                           ; 8 bytes @ 0x8
   847  000009                     	ds	1
   848  00000A                     ??_atoi:
   849  00000A                     fputs@s:
   850                           	callstack 0
   851  00000A                     strncmp@r:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x9
   855  00000A                     	ds	1
   856  00000B                     ___fpclassifyf@u:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0xA
   860  00000B                     	ds	1
   861  00000C                     fputs@fp:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0xB
   865  00000C                     	ds	1
   866  00000D                     ___lldiv@counter:
   867                           	callstack 0
   868  00000D                     ___xxtofl@sign:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0xC
   872  00000D                     	ds	1
   873  00000E                     ___xxtofl@exp:
   874                           	callstack 0
   875  00000E                     fputs@c:
   876                           	callstack 0
   877  00000E                     atoi@neg:
   878                           	callstack 0
   879  00000E                     UART_Init@config:
   880                           	callstack 0
   881                           
   882                           ; 8 bytes @ 0xD
   883  00000E                     	ds	1
   884  00000F                     fputs@i:
   885                           	callstack 0
   886  00000F                     ___xxtofl@arg:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0xE
   890  00000F                     	ds	1
   891  000010                     atoi@n:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0xF
   895  000010                     	ds	1
   896  000011                     ?_pad:
   897                           	callstack 0
   898  000011                     ___aodiv@counter:
   899                           	callstack 0
   900  000011                     ___aomod@counter:
   901                           	callstack 0
   902  000011                     pad@fp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x10
   906  000011                     	ds	1
   907  000012                     ___aodiv@sign:
   908                           	callstack 0
   909  000012                     ___aomod@sign:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x11
   913  000012                     	ds	1
   914  000013                     ?_abs:
   915                           	callstack 0
   916  000013                     ?___fladd:
   917                           	callstack 0
   918  000013                     pad@buf:
   919                           	callstack 0
   920  000013                     abs@a:
   921                           	callstack 0
   922  000013                     ___fladd@b:
   923                           	callstack 0
   924  000013                     ___aodiv@quotient:
   925                           	callstack 0
   926                           
   927                           ; 8 bytes @ 0x12
   928  000013                     	ds	2
   929  000015                     ??_abs:
   930  000015                     pad@p:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x14
   934  000015                     	ds	1
   935  000016                     ??_UART_Init:
   936                           
   937                           ; 1 bytes @ 0x15
   938  000016                     	ds	1
   939  000017                     ??_pad:
   940  000017                     ___fladd@a:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x16
   944  000017                     	ds	1
   945  000018                     pad@i:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x17
   949  000018                     	ds	2
   950  00001A                     pad@w:
   951                           	callstack 0
   952  00001A                     UART_Init@spbrg_val:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x19
   956  00001A                     	ds	1
   957  00001B                     ??___fladd:
   958                           
   959                           ; 1 bytes @ 0x1A
   960  00001B                     	ds	1
   961  00001C                     ?_dtoa:
   962                           	callstack 0
   963  00001C                     dtoa@fp:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x1B
   967  00001C                     	ds	2
   968  00001E                     dtoa@d:
   969                           	callstack 0
   970                           
   971                           ; 8 bytes @ 0x1D
   972  00001E                     	ds	1
   973  00001F                     ___fladd@signs:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x1E
   977  00001F                     	ds	1
   978  000020                     ___fladd@aexp:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0x1F
   982  000020                     	ds	1
   983  000021                     ___fladd@bexp:
   984                           	callstack 0
   985                           
   986                           ; 1 bytes @ 0x20
   987  000021                     	ds	1
   988  000022                     ___fladd@grs:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x21
   992  000022                     	ds	1
   993  000023                     ?___flsub:
   994                           	callstack 0
   995  000023                     ___flsub@b:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x22
   999  000023                     	ds	3
  1000  000026                     ??_dtoa:
  1001                           
  1002                           ; 1 bytes @ 0x25
  1003  000026                     	ds	1
  1004  000027                     ___flsub@a:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0x26
  1008  000027                     	ds	4
  1009  00002B                     ?___flmul:
  1010                           	callstack 0
  1011  00002B                     ___flmul@b:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x2A
  1015  00002B                     	ds	3
  1016  00002E                     _dtoa$1160:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x2D
  1020  00002E                     	ds	1
  1021  00002F                     ___flmul@a:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x2E
  1025  00002F                     	ds	1
  1026  000030                     dtoa@p:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x2F
  1030  000030                     	ds	2
  1031  000032                     dtoa@w:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x31
  1035  000032                     	ds	1
  1036  000033                     ??___flmul:
  1037                           
  1038                           ; 1 bytes @ 0x32
  1039  000033                     	ds	1
  1040  000034                     dtoa@s:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x33
  1044  000034                     	ds	2
  1045  000036                     dtoa@n:
  1046                           	callstack 0
  1047                           
  1048                           ; 8 bytes @ 0x35
  1049  000036                     	ds	1
  1050  000037                     ___flmul@sign:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x36
  1054  000037                     	ds	1
  1055  000038                     ___flmul@grs:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x37
  1059  000038                     	ds	4
  1060  00003C                     ___flmul@aexp:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x3B
  1064  00003C                     	ds	1
  1065  00003D                     ___flmul@bexp:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x3C
  1069  00003D                     	ds	1
  1070  00003E                     dtoa@i:
  1071                           	callstack 0
  1072  00003E                     ___flmul@prod:
  1073                           	callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x3D
  1076  00003E                     	ds	4
  1077  000042                     ___flmul@temp:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x41
  1081  000042                     	ds	2
  1082  000044                     ?___fldiv:
  1083                           	callstack 0
  1084  000044                     ___flge@ff1:
  1085                           	callstack 0
  1086  000044                     ___fldiv@b:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x43
  1090  000044                     	ds	4
  1091  000048                     ___flge@ff2:
  1092                           	callstack 0
  1093  000048                     ___fldiv@a:
  1094                           	callstack 0
  1095                           
  1096                           ; 4 bytes @ 0x47
  1097  000048                     	ds	4
  1098  00004C                     ??___fldiv:
  1099  00004C                     ??___flge:
  1100                           
  1101                           ; 1 bytes @ 0x4B
  1102  00004C                     	ds	4
  1103  000050                     ___fldiv@rem:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x4F
  1107  000050                     	ds	4
  1108  000054                     ___fldiv@sign:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x53
  1112  000054                     	ds	1
  1113  000055                     ___fldiv@new_exp:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x54
  1117  000055                     	ds	2
  1118  000057                     ___fldiv@grs:
  1119                           	callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x56
  1122  000057                     	ds	4
  1123  00005B                     ___fldiv@bexp:
  1124                           	callstack 0
  1125                           
  1126                           ; 1 bytes @ 0x5A
  1127  00005B                     	ds	1
  1128  00005C                     ___fldiv@aexp:
  1129                           	callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x5B
  1132  00005C                     	ds	1
  1133  00005D                     ___fltol@sign1:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x5C
  1137  00005D                     	ds	1
  1138  00005E                     ___fltol@exp1:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x5D
  1142  00005E                     	ds	1
  1143  00005F                     
  1144                           ; 1 bytes @ 0x5E
  1145 ;;
  1146 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1147 ;;
  1148 ;; *************** function _main *****************
  1149 ;; Defined at:
  1150 ;;		line 33 in file "main.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  uartConfig      8   12[BANK1 ] struct .
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0
  1165 ;;      Locals:         0       0      20       0       0       0       0       0       0
  1166 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1167 ;;      Totals:         0       2      20       0       0       0       0       0       0
  1168 ;;Total ram usage:       22 bytes
  1169 ;; Hardware stack levels required when called: 8
  1170 ;; This function calls:
  1171 ;;		_Motor_Start
  1172 ;;		_PWM1_Init
  1173 ;;		_PWM1_Set_Duty
  1174 ;;		_PWM1_Start
  1175 ;;		_UART_Init
  1176 ;;		_UART_Write_Text
  1177 ;;		___fladd
  1178 ;;		___flge
  1179 ;;		___flmul
  1180 ;;		___flsub
  1181 ;;		___fltol
  1182 ;;		___xxtofl
  1183 ;;		_getDistance
  1184 ;;		_sprintf
  1185 ;; This function is called by:
  1186 ;;		Startup code after reset
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text0
  1191  00276E                     __ptext0:
  1192                           	callstack 0
  1193  00276E                     _main:
  1194                           	callstack 23
  1195  00276E                     
  1196                           ;main.c: 34:     ADCON1 = 0x0F;
  1197  00276E  0E0F               	movlw	15
  1198  002770  6EC1               	movwf	193,c	;volatile
  1199  002772                     
  1200                           ;main.c: 36:     TRISBbits.TRISB0 = 0;
  1201  002772  9093               	bcf	147,0,c	;volatile
  1202  002774                     
  1203                           ;main.c: 37:     TRISBbits.TRISB1 = 1;
  1204  002774  8293               	bsf	147,1,c	;volatile
  1205  002776                     
  1206                           ;main.c: 39:     TRISDbits.TRISD0 = 0;
  1207  002776  9095               	bcf	149,0,c	;volatile
  1208  002778                     
  1209                           ;main.c: 40:     TRISDbits.TRISD1 = 0;
  1210  002778  9295               	bcf	149,1,c	;volatile
  1211  00277A                     
  1212                           ;main.c: 42:     PWM1_Init(2000);
  1213  00277A  0E07               	movlw	7
  1214  00277C  0100               	movlb	0	; () banked
  1215  00277E  6F69               	movwf	(PWM1_Init@freq+1)& (0+255),b
  1216  002780  0ED0               	movlw	208
  1217  002782  6F68               	movwf	PWM1_Init@freq& (0+255),b
  1218  002784  ECB6  F016         	call	_PWM1_Init	;wreg free
  1219  002788                     
  1220                           ;main.c: 43:     PWM1_Set_Duty( (uint8_t)(duty) );
  1221  002788  0E46               	movlw	70
  1222  00278A  EC6A  F01F         	call	_PWM1_Set_Duty
  1223  00278E                     
  1224                           ;main.c: 44:     PWM1_Start();
  1225  00278E  EC13  F023         	call	_PWM1_Start	;wreg free
  1226  002792                     
  1227                           ;main.c: 46:     UART_Config uartConfig;;main.c: 48:     uartConfig.baud_rate = 9600;
  1228  002792  0E80               	movlw	128
  1229  002794  0101               	movlb	1	; () banked
  1230  002796  6FC4               	movwf	main@uartConfig& (0+255),b
  1231  002798  0E25               	movlw	37
  1232  00279A  6FC5               	movwf	(main@uartConfig+1)& (0+255),b
  1233  00279C  0E00               	movlw	0
  1234  00279E  6FC6               	movwf	(main@uartConfig+2)& (0+255),b
  1235  0027A0  0E00               	movlw	0
  1236  0027A2  6FC7               	movwf	(main@uartConfig+3)& (0+255),b
  1237  0027A4                     
  1238                           ; BSR set to: 1
  1239                           ;main.c: 49:     uartConfig.data_bits = 8;
  1240  0027A4  0E08               	movlw	8
  1241  0027A6  6FC8               	movwf	(main@uartConfig+4)& (0+255),b
  1242  0027A8                     
  1243                           ; BSR set to: 1
  1244                           ;main.c: 50:     uartConfig.parity = 0;
  1245  0027A8  0E00               	movlw	0
  1246  0027AA  6FC9               	movwf	(main@uartConfig+5)& (0+255),b
  1247  0027AC                     
  1248                           ; BSR set to: 1
  1249                           ;main.c: 51:     uartConfig.stop_bits = 1;
  1250  0027AC  0E01               	movlw	1
  1251  0027AE  6FCA               	movwf	(main@uartConfig+6)& (0+255),b
  1252  0027B0                     
  1253                           ; BSR set to: 1
  1254                           ;main.c: 53:     UART_Init(uartConfig);
  1255  0027B0  EE21  F0C4         	lfsr	2,main@uartConfig
  1256  0027B4  EE00  F00E         	lfsr	0,UART_Init@config
  1257  0027B8  0E07               	movlw	7
  1258  0027BA                     u5471:
  1259  0027BA  CFDB FFEB          	movff	plusw2,plusw0
  1260  0027BE  06E8               	decf	wreg,f,c
  1261  0027C0  E2FC               	bc	u5471
  1262  0027C2  EC61  F01D         	call	_UART_Init	;wreg free
  1263  0027C6                     
  1264                           ;main.c: 55:     Motor_Start();
  1265  0027C6  EC10  F023         	call	_Motor_Start	;wreg free
  1266  0027CA                     l4703:
  1267                           
  1268                           ;main.c: 58:         actual = 50 - getDistance();
  1269  0027CA  EC7C  F021         	call	_getDistance	;wreg free
  1270  0027CE  0E32               	movlw	50
  1271  0027D0  0100               	movlb	0	; () banked
  1272  0027D2  6FF9               	movwf	??_main& (0+255),b
  1273  0027D4  0E00               	movlw	0
  1274  0027D6  6FFA               	movwf	(??_main+1)& (0+255),b
  1275  0027D8  5001               	movf	?_getDistance^0,w,c
  1276  0027DA  5FF9               	subwf	??_main& (0+255),f,b
  1277  0027DC  5002               	movf	(?_getDistance+1)^0,w,c
  1278  0027DE  5BFA               	subwfb	(??_main+1)& (0+255),f,b
  1279  0027E0  C0F9  F005         	movff	??_main,___xxtofl@val
  1280  0027E4  C0FA  F006         	movff	??_main+1,___xxtofl@val+1
  1281  0027E8  6A07               	clrf	(___xxtofl@val+2)^0,c
  1282  0027EA  6A08               	clrf	(___xxtofl@val+3)^0,c
  1283  0027EC  0E00               	movlw	0
  1284  0027EE  ECE1  F018         	call	___xxtofl
  1285  0027F2  C005  F110         	movff	?___xxtofl,_actual
  1286  0027F6  C006  F111         	movff	?___xxtofl+1,_actual+1
  1287  0027FA  C007  F112         	movff	?___xxtofl+2,_actual+2
  1288  0027FE  C008  F113         	movff	?___xxtofl+3,_actual+3
  1289  002802                     
  1290                           ;main.c: 59:         error = ref - actual;
  1291  002802  0E00               	movlw	0
  1292  002804  6E23               	movwf	___flsub@b^0,c
  1293  002806  0E00               	movlw	0
  1294  002808  6E24               	movwf	(___flsub@b+1)^0,c
  1295  00280A  0EA0               	movlw	160
  1296  00280C  6E25               	movwf	(___flsub@b+2)^0,c
  1297  00280E  0E42               	movlw	66
  1298  002810  6E26               	movwf	(___flsub@b+3)^0,c
  1299  002812  C110  F027         	movff	_actual,___flsub@a
  1300  002816  C111  F028         	movff	_actual+1,___flsub@a+1
  1301  00281A  C112  F029         	movff	_actual+2,___flsub@a+2
  1302  00281E  C113  F02A         	movff	_actual+3,___flsub@a+3
  1303  002822  ECC4  F021         	call	___flsub	;wreg free
  1304  002826  C023  F118         	movff	?___flsub,_error
  1305  00282A  C024  F119         	movff	?___flsub+1,_error+1
  1306  00282E  C025  F11A         	movff	?___flsub+2,_error+2
  1307  002832  C026  F11B         	movff	?___flsub+3,_error+3
  1308  002836                     
  1309                           ;main.c: 60:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1310  002836  0ECD               	movlw	205
  1311  002838  6E2F               	movwf	___flmul@a^0,c
  1312  00283A  0ECC               	movlw	204
  1313  00283C  6E30               	movwf	(___flmul@a+1)^0,c
  1314  00283E  0ECC               	movlw	204
  1315  002840  6E31               	movwf	(___flmul@a+2)^0,c
  1316  002842  0E3E               	movlw	62
  1317  002844  6E32               	movwf	(___flmul@a+3)^0,c
  1318  002846  C10C  F027         	movff	_errorAnte,___flsub@a
  1319  00284A  C10D  F028         	movff	_errorAnte+1,___flsub@a+1
  1320  00284E  C10E  F029         	movff	_errorAnte+2,___flsub@a+2
  1321  002852  C10F  F02A         	movff	_errorAnte+3,___flsub@a+3
  1322  002856  C118  F023         	movff	_error,___flsub@b
  1323  00285A  C119  F024         	movff	_error+1,___flsub@b+1
  1324  00285E  C11A  F025         	movff	_error+2,___flsub@b+2
  1325  002862  C11B  F026         	movff	_error+3,___flsub@b+3
  1326  002866  ECC4  F021         	call	___flsub	;wreg free
  1327  00286A  C023  F02B         	movff	?___flsub,___flmul@b
  1328  00286E  C024  F02C         	movff	?___flsub+1,___flmul@b+1
  1329  002872  C025  F02D         	movff	?___flsub+2,___flmul@b+2
  1330  002876  C026  F02E         	movff	?___flsub+3,___flmul@b+3
  1331  00287A  ECD5  F00F         	call	___flmul	;wreg free
  1332  00287E  C02B  F1B8         	movff	?___flmul,_main$1560
  1333  002882  C02C  F1B9         	movff	?___flmul+1,_main$1560+1
  1334  002886  C02D  F1BA         	movff	?___flmul+2,_main$1560+2
  1335  00288A  C02E  F1BB         	movff	?___flmul+3,_main$1560+3
  1336  00288E                     
  1337                           ;main.c: 60:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1338  00288E  C1B8  F017         	movff	_main$1560,___fladd@a
  1339  002892  C1B9  F018         	movff	_main$1560+1,___fladd@a+1
  1340  002896  C1BA  F019         	movff	_main$1560+2,___fladd@a+2
  1341  00289A  C1BB  F01A         	movff	_main$1560+3,___fladd@a+3
  1342  00289E  0E00               	movlw	0
  1343  0028A0  6E2F               	movwf	___flmul@a^0,c
  1344  0028A2  0E00               	movlw	0
  1345  0028A4  6E30               	movwf	(___flmul@a+1)^0,c
  1346  0028A6  0E00               	movlw	0
  1347  0028A8  6E31               	movwf	(___flmul@a+2)^0,c
  1348  0028AA  0E3F               	movlw	63
  1349  0028AC  6E32               	movwf	(___flmul@a+3)^0,c
  1350  0028AE  C118  F02B         	movff	_error,___flmul@b
  1351  0028B2  C119  F02C         	movff	_error+1,___flmul@b+1
  1352  0028B6  C11A  F02D         	movff	_error+2,___flmul@b+2
  1353  0028BA  C11B  F02E         	movff	_error+3,___flmul@b+3
  1354  0028BE  ECD5  F00F         	call	___flmul	;wreg free
  1355  0028C2  C02B  F013         	movff	?___flmul,___fladd@b
  1356  0028C6  C02C  F014         	movff	?___flmul+1,___fladd@b+1
  1357  0028CA  C02D  F015         	movff	?___flmul+2,___fladd@b+2
  1358  0028CE  C02E  F016         	movff	?___flmul+3,___fladd@b+3
  1359  0028D2  EC75  F00D         	call	___fladd	;wreg free
  1360  0028D6  C013  F1BC         	movff	?___fladd,_main$1561
  1361  0028DA  C014  F1BD         	movff	?___fladd+1,_main$1561+1
  1362  0028DE  C015  F1BE         	movff	?___fladd+2,_main$1561+2
  1363  0028E2  C016  F1BF         	movff	?___fladd+3,_main$1561+3
  1364  0028E6                     
  1365                           ;main.c: 60:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1366  0028E6  0ECD               	movlw	205
  1367  0028E8  6E2F               	movwf	___flmul@a^0,c
  1368  0028EA  0ECC               	movlw	204
  1369  0028EC  6E30               	movwf	(___flmul@a+1)^0,c
  1370  0028EE  0ECC               	movlw	204
  1371  0028F0  6E31               	movwf	(___flmul@a+2)^0,c
  1372  0028F2  0E3D               	movlw	61
  1373  0028F4  6E32               	movwf	(___flmul@a+3)^0,c
  1374  0028F6  C118  F02B         	movff	_error,___flmul@b
  1375  0028FA  C119  F02C         	movff	_error+1,___flmul@b+1
  1376  0028FE  C11A  F02D         	movff	_error+2,___flmul@b+2
  1377  002902  C11B  F02E         	movff	_error+3,___flmul@b+3
  1378  002906  ECD5  F00F         	call	___flmul	;wreg free
  1379  00290A  C02B  F017         	movff	?___flmul,___fladd@a
  1380  00290E  C02C  F018         	movff	?___flmul+1,___fladd@a+1
  1381  002912  C02D  F019         	movff	?___flmul+2,___fladd@a+2
  1382  002916  C02E  F01A         	movff	?___flmul+3,___fladd@a+3
  1383  00291A  C1BC  F013         	movff	_main$1561,___fladd@b
  1384  00291E  C1BD  F014         	movff	_main$1561+1,___fladd@b+1
  1385  002922  C1BE  F015         	movff	_main$1561+2,___fladd@b+2
  1386  002926  C1BF  F016         	movff	_main$1561+3,___fladd@b+3
  1387  00292A  EC75  F00D         	call	___fladd	;wreg free
  1388  00292E  C013  F1C0         	movff	?___fladd,_main$1562
  1389  002932  C014  F1C1         	movff	?___fladd+1,_main$1562+1
  1390  002936  C015  F1C2         	movff	?___fladd+2,_main$1562+2
  1391  00293A  C016  F1C3         	movff	?___fladd+3,_main$1562+3
  1392  00293E                     
  1393                           ;main.c: 60:         suma += Kp*error + Kd*(error-errorAnte)+Ki*error;
  1394  00293E  C114  F013         	movff	_suma,___fladd@b
  1395  002942  C115  F014         	movff	_suma+1,___fladd@b+1
  1396  002946  C116  F015         	movff	_suma+2,___fladd@b+2
  1397  00294A  C117  F016         	movff	_suma+3,___fladd@b+3
  1398  00294E  C1C0  F017         	movff	_main$1562,___fladd@a
  1399  002952  C1C1  F018         	movff	_main$1562+1,___fladd@a+1
  1400  002956  C1C2  F019         	movff	_main$1562+2,___fladd@a+2
  1401  00295A  C1C3  F01A         	movff	_main$1562+3,___fladd@a+3
  1402  00295E  EC75  F00D         	call	___fladd	;wreg free
  1403  002962  C013  F114         	movff	?___fladd,_suma
  1404  002966  C014  F115         	movff	?___fladd+1,_suma+1
  1405  00296A  C015  F116         	movff	?___fladd+2,_suma+2
  1406  00296E  C016  F117         	movff	?___fladd+3,_suma+3
  1407  002972                     
  1408                           ;main.c: 61:         if(suma>100){
  1409  002972  0E00               	movlw	0
  1410  002974  6E44               	movwf	___flge@ff1^0,c
  1411  002976  0E00               	movlw	0
  1412  002978  6E45               	movwf	(___flge@ff1+1)^0,c
  1413  00297A  0EC8               	movlw	200
  1414  00297C  6E46               	movwf	(___flge@ff1+2)^0,c
  1415  00297E  0E42               	movlw	66
  1416  002980  6E47               	movwf	(___flge@ff1+3)^0,c
  1417  002982  C114  F048         	movff	_suma,___flge@ff2
  1418  002986  C115  F049         	movff	_suma+1,___flge@ff2+1
  1419  00298A  C116  F04A         	movff	_suma+2,___flge@ff2+2
  1420  00298E  C117  F04B         	movff	_suma+3,___flge@ff2+3
  1421  002992  EC60  F01C         	call	___flge	;wreg free
  1422  002996  B0D8               	btfsc	status,0,c
  1423  002998  EFD0  F014         	goto	u5481
  1424  00299C  EFD2  F014         	goto	u5480
  1425  0029A0                     u5481:
  1426  0029A0  EFDD  F014         	goto	l4719
  1427  0029A4                     u5480:
  1428  0029A4                     
  1429                           ;main.c: 62:             suma=100;
  1430  0029A4  0E00               	movlw	0
  1431  0029A6  0101               	movlb	1	; () banked
  1432  0029A8  6F14               	movwf	_suma& (0+255),b
  1433  0029AA  0E00               	movlw	0
  1434  0029AC  6F15               	movwf	(_suma+1)& (0+255),b
  1435  0029AE  0EC8               	movlw	200
  1436  0029B0  6F16               	movwf	(_suma+2)& (0+255),b
  1437  0029B2  0E42               	movlw	66
  1438  0029B4  6F17               	movwf	(_suma+3)& (0+255),b
  1439                           
  1440                           ;main.c: 63:         }
  1441  0029B6  EFED  F014         	goto	l4723
  1442  0029BA                     l4719:
  1443  0029BA  0101               	movlb	1	; () banked
  1444  0029BC  BF17               	btfsc	(_suma+3)& (0+255),7,b
  1445  0029BE  EFE5  F014         	goto	u5490
  1446  0029C2  EFE3  F014         	goto	u5491
  1447  0029C6                     u5491:
  1448  0029C6  EFED  F014         	goto	l4723
  1449  0029CA                     u5490:
  1450  0029CA                     
  1451                           ; BSR set to: 1
  1452                           ;main.c: 65:             suma = 0;
  1453  0029CA  0E00               	movlw	0
  1454  0029CC  6F14               	movwf	_suma& (0+255),b
  1455  0029CE  0E00               	movlw	0
  1456  0029D0  6F15               	movwf	(_suma+1)& (0+255),b
  1457  0029D2  0E00               	movlw	0
  1458  0029D4  6F16               	movwf	(_suma+2)& (0+255),b
  1459  0029D6  0E00               	movlw	0
  1460  0029D8  6F17               	movwf	(_suma+3)& (0+255),b
  1461  0029DA                     l4723:
  1462                           
  1463                           ; BSR set to: 1
  1464                           ;main.c: 67:         PWM1_Set_Duty(suma);
  1465  0029DA  C114  F060         	movff	_suma,___fltol@f1
  1466  0029DE  C115  F061         	movff	_suma+1,___fltol@f1+1
  1467  0029E2  C116  F062         	movff	_suma+2,___fltol@f1+2
  1468  0029E6  C117  F063         	movff	_suma+3,___fltol@f1+3
  1469  0029EA  ECDC  F01B         	call	___fltol	;wreg free
  1470  0029EE  0100               	movlb	0	; () banked
  1471  0029F0  5160               	movf	?___fltol& (0+255),w,b
  1472  0029F2  EC6A  F01F         	call	_PWM1_Set_Duty
  1473  0029F6                     
  1474                           ;main.c: 69:         sprintf(strUART,"*%0.1f/%03d/%0.2f/%0.2f/%0.2f#\r\n",actual,duty,Kp
      +                          ,Kd,Ki);
  1475  0029F6  0E86               	movlw	low _strUART
  1476  0029F8  0100               	movlb	0	; () banked
  1477  0029FA  6FD6               	movwf	sprintf@s& (0+255),b
  1478  0029FC  0E01               	movlw	high _strUART
  1479  0029FE  6FD7               	movwf	(sprintf@s+1)& (0+255),b
  1480  002A00  0E01               	movlw	low STR_1
  1481  002A02  6FD8               	movwf	sprintf@fmt& (0+255),b
  1482  002A04  0E08               	movlw	high STR_1
  1483  002A06  6FD9               	movwf	(sprintf@fmt+1)& (0+255),b
  1484  002A08  C110  F0DA         	movff	_actual,?_sprintf+4
  1485  002A0C  C111  F0DB         	movff	_actual+1,?_sprintf+5
  1486  002A10  C112  F0DC         	movff	_actual+2,?_sprintf+6
  1487  002A14  C113  F0DD         	movff	_actual+3,?_sprintf+7
  1488  002A18  0E00               	movlw	0
  1489  002A1A  6FDF               	movwf	(?_sprintf+9)& (0+255),b
  1490  002A1C  0E46               	movlw	70
  1491  002A1E  6FDE               	movwf	(?_sprintf+8)& (0+255),b
  1492  002A20  0E00               	movlw	0
  1493  002A22  6FE0               	movwf	(?_sprintf+10)& (0+255),b
  1494  002A24  0E00               	movlw	0
  1495  002A26  6FE1               	movwf	(?_sprintf+11)& (0+255),b
  1496  002A28  0E00               	movlw	0
  1497  002A2A  6FE2               	movwf	(?_sprintf+12)& (0+255),b
  1498  002A2C  0E3F               	movlw	63
  1499  002A2E  6FE3               	movwf	(?_sprintf+13)& (0+255),b
  1500  002A30  0ECD               	movlw	205
  1501  002A32  6FE4               	movwf	(?_sprintf+14)& (0+255),b
  1502  002A34  0ECC               	movlw	204
  1503  002A36  6FE5               	movwf	(?_sprintf+15)& (0+255),b
  1504  002A38  0ECC               	movlw	204
  1505  002A3A  6FE6               	movwf	(?_sprintf+16)& (0+255),b
  1506  002A3C  0E3E               	movlw	62
  1507  002A3E  6FE7               	movwf	(?_sprintf+17)& (0+255),b
  1508  002A40  0ECD               	movlw	205
  1509  002A42  6FE8               	movwf	(?_sprintf+18)& (0+255),b
  1510  002A44  0ECC               	movlw	204
  1511  002A46  6FE9               	movwf	(?_sprintf+19)& (0+255),b
  1512  002A48  0ECC               	movlw	204
  1513  002A4A  6FEA               	movwf	(?_sprintf+20)& (0+255),b
  1514  002A4C  0E3D               	movlw	61
  1515  002A4E  6FEB               	movwf	(?_sprintf+21)& (0+255),b
  1516  002A50  EC2A  F021         	call	_sprintf	;wreg free
  1517  002A54                     
  1518                           ;main.c: 70:         UART_Write_Text(strUART);
  1519  002A54  0E86               	movlw	low _strUART
  1520  002A56  6E02               	movwf	UART_Write_Text@text^0,c
  1521  002A58  0E01               	movlw	high _strUART
  1522  002A5A  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  1523  002A5C  ECDA  F022         	call	_UART_Write_Text	;wreg free
  1524  002A60                     
  1525                           ;main.c: 71:         _delay((unsigned long)((1)*(20000000UL/4000.0)));
  1526  002A60  0E07               	movlw	7
  1527  002A62  0100               	movlb	0	; () banked
  1528  002A64  6FF9               	movwf	??_main& (0+255),b
  1529  002A66  0E7D               	movlw	125
  1530  002A68                     u5507:
  1531  002A68  2EE8               	decfsz	wreg,f,c
  1532  002A6A  D7FE               	bra	u5507
  1533  002A6C  2FF9               	decfsz	??_main& (0+255),f,b
  1534  002A6E  D7FC               	bra	u5507
  1535  002A70                     
  1536                           ;main.c: 72:         errorAnte = error;
  1537  002A70  C118  F10C         	movff	_error,_errorAnte
  1538  002A74  C119  F10D         	movff	_error+1,_errorAnte+1
  1539  002A78  C11A  F10E         	movff	_error+2,_errorAnte+2
  1540  002A7C  C11B  F10F         	movff	_error+3,_errorAnte+3
  1541  002A80  EFE5  F013         	goto	l4703
  1542  002A84  EF00  F000         	goto	start
  1543  002A88                     __end_of_main:
  1544                           	callstack 0
  1545                           
  1546 ;; *************** function _sprintf *****************
  1547 ;; Defined at:
  1548 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  s               2  118[BANK0 ] PTR unsigned char 
  1551 ;;		 -> strUART(50), 
  1552 ;;  fmt             2  120[BANK0 ] PTR const unsigned char 
  1553 ;;		 -> STR_1(33), 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  f              11  142[BANK0 ] struct _IO_FILE
  1556 ;;  ap              2  140[BANK0 ] PTR void [1]
  1557 ;;		 -> ?_sprintf(2), 
  1558 ;;  ret             2    0        int 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  2  118[BANK0 ] int 
  1561 ;; Registers used:
  1562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1568 ;;      Params:         0      22       0       0       0       0       0       0       0
  1569 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1571 ;;      Totals:         0      35       0       0       0       0       0       0       0
  1572 ;;Total ram usage:       35 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 7
  1575 ;; This function calls:
  1576 ;;		_vfprintf
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text1
  1583  004254                     __ptext1:
  1584                           	callstack 0
  1585  004254                     _sprintf:
  1586                           	callstack 23
  1587  004254  0EDA               	movlw	low (?_sprintf+4)
  1588  004256  0100               	movlb	0	; () banked
  1589  004258  6FEC               	movwf	sprintf@ap& (0+255),b
  1590  00425A  0E00               	movlw	high (?_sprintf+4)
  1591  00425C  6FED               	movwf	(sprintf@ap+1)& (0+255),b
  1592  00425E  C0D6  F0EE         	movff	sprintf@s,sprintf@f
  1593  004262  C0D7  F0EF         	movff	sprintf@s+1,sprintf@f+1
  1594  004266                     
  1595                           ; BSR set to: 0
  1596  004266  0E00               	movlw	0
  1597  004268  6FF2               	movwf	(sprintf@f+4)& (0+255),b
  1598  00426A  0E00               	movlw	0
  1599  00426C  6FF1               	movwf	(sprintf@f+3)& (0+255),b
  1600  00426E                     
  1601                           ; BSR set to: 0
  1602  00426E  0E00               	movlw	0
  1603  004270  6FF8               	movwf	(sprintf@f+10)& (0+255),b
  1604  004272  0E00               	movlw	0
  1605  004274  6FF7               	movwf	(sprintf@f+9)& (0+255),b
  1606  004276                     
  1607                           ; BSR set to: 0
  1608  004276  0EEE               	movlw	low sprintf@f
  1609  004278  6FCE               	movwf	vfprintf@fp& (0+255),b
  1610  00427A  0E00               	movlw	high sprintf@f
  1611  00427C  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  1612  00427E  C0D8  F0D0         	movff	sprintf@fmt,vfprintf@fmt
  1613  004282  C0D9  F0D1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1614  004286  0EEC               	movlw	low sprintf@ap
  1615  004288  6FD2               	movwf	vfprintf@ap& (0+255),b
  1616  00428A  0E00               	movlw	high sprintf@ap
  1617  00428C  6FD3               	movwf	(vfprintf@ap+1)& (0+255),b
  1618  00428E  ECC7  F020         	call	_vfprintf	;wreg free
  1619  004292  0100               	movlb	0	; () banked
  1620  004294  51F1               	movf	(sprintf@f+3)& (0+255),w,b
  1621  004296  25D6               	addwf	sprintf@s& (0+255),w,b
  1622  004298  6ED9               	movwf	fsr2l,c
  1623  00429A  51F2               	movf	(sprintf@f+4)& (0+255),w,b
  1624  00429C  21D7               	addwfc	(sprintf@s+1)& (0+255),w,b
  1625  00429E  6EDA               	movwf	fsr2h,c
  1626  0042A0  0E00               	movlw	0
  1627  0042A2  6EDF               	movwf	indf2,c
  1628  0042A4                     
  1629                           ; BSR set to: 0
  1630  0042A4  0012               	return		;funcret
  1631  0042A6                     __end_of_sprintf:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _vfprintf *****************
  1635 ;; Defined at:
  1636 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  fp              2  110[BANK0 ] PTR struct _IO_FILE
  1639 ;;		 -> sprintf@f(11), 
  1640 ;;  fmt             2  112[BANK0 ] PTR const unsigned char 
  1641 ;;		 -> STR_1(33), 
  1642 ;;  ap              2  114[BANK0 ] PTR PTR void 
  1643 ;;		 -> sprintf@ap(2), 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  cfmt            2  116[BANK0 ] PTR unsigned char 
  1646 ;;		 -> STR_1(33), 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  2  110[BANK0 ] int 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1656 ;;      Params:         0       6       0       0       0       0       0       0       0
  1657 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1659 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1660 ;;Total ram usage:        8 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 6
  1663 ;; This function calls:
  1664 ;;		_vfpfcnvrt
  1665 ;; This function is called by:
  1666 ;;		_sprintf
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text2
  1671  00418E                     __ptext2:
  1672                           	callstack 0
  1673  00418E                     _vfprintf:
  1674                           	callstack 23
  1675  00418E                     
  1676                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1677  00418E  C0D0  F0D4         	movff	vfprintf@fmt,vfprintf@cfmt
  1678  004192  C0D1  F0D5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1679  004196                     
  1680                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1681  004196  0E00               	movlw	0
  1682  004198  0101               	movlb	1	; () banked
  1683  00419A  6F21               	movwf	(_nout+1)& (0+255),b
  1684  00419C  0E00               	movlw	0
  1685  00419E  6F20               	movwf	_nout& (0+255),b
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1688  0041A0  EFE9  F020         	goto	l4567
  1689  0041A4                     l4565:
  1690                           
  1691                           ; BSR set to: 1
  1692                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1693  0041A4  C0CE  F0B2         	movff	vfprintf@fp,vfpfcnvrt@fp
  1694  0041A8  C0CF  F0B3         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1695  0041AC  0ED4               	movlw	low vfprintf@cfmt
  1696  0041AE  0100               	movlb	0	; () banked
  1697  0041B0  6FB4               	movwf	vfpfcnvrt@fmt& (0+255),b
  1698  0041B2  0E00               	movlw	high vfprintf@cfmt
  1699  0041B4  6FB5               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1700  0041B6  C0D2  F0B6         	movff	vfprintf@ap,vfpfcnvrt@ap
  1701  0041BA  C0D3  F0B7         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1702  0041BE  EC20  F00A         	call	_vfpfcnvrt	;wreg free
  1703  0041C2  0100               	movlb	0	; () banked
  1704  0041C4  51B2               	movf	?_vfpfcnvrt& (0+255),w,b
  1705  0041C6  0101               	movlb	1	; () banked
  1706  0041C8  2720               	addwf	_nout& (0+255),f,b
  1707  0041CA  0100               	movlb	0	; () banked
  1708  0041CC  51B3               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1709  0041CE  0101               	movlb	1	; () banked
  1710  0041D0  2321               	addwfc	(_nout+1)& (0+255),f,b
  1711  0041D2                     l4567:
  1712                           
  1713                           ; BSR set to: 1
  1714                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1715  0041D2  C0D4  FFF6         	movff	vfprintf@cfmt,tblptrl
  1716  0041D6  C0D5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1717  0041DA                     	if	0	;tblptru may be non-zero
  1718  0041DA                     	endif
  1719  0041DA                     	if	0	;tblptru may be non-zero
  1720  0041DA                     	endif
  1721  0041DA  0008               	tblrd		*
  1722  0041DC  50F5               	movf	tablat,w,c
  1723  0041DE  0900               	iorlw	0
  1724  0041E0  A4D8               	btfss	status,2,c
  1725  0041E2  EFF5  F020         	goto	u5381
  1726  0041E6  EFF7  F020         	goto	u5380
  1727  0041EA                     u5381:
  1728  0041EA  EFD2  F020         	goto	l4565
  1729  0041EE                     u5380:
  1730  0041EE                     
  1731                           ; BSR set to: 1
  1732                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1733  0041EE  C120  F0CE         	movff	_nout,?_vfprintf
  1734  0041F2  C121  F0CF         	movff	_nout+1,?_vfprintf+1
  1735  0041F6                     
  1736                           ; BSR set to: 1
  1737  0041F6  0012               	return		;funcret
  1738  0041F8                     __end_of_vfprintf:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _vfpfcnvrt *****************
  1742 ;; Defined at:
  1743 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  fp              2   82[BANK0 ] PTR struct _IO_FILE
  1746 ;;		 -> sprintf@f(11), 
  1747 ;;  fmt             2   84[BANK0 ] PTR PTR unsigned char 
  1748 ;;		 -> vfprintf@cfmt(2), 
  1749 ;;  ap              2   86[BANK0 ] PTR PTR void 
  1750 ;;		 -> sprintf@ap(2), 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  ll              8   92[BANK0 ] long long 
  1753 ;;  llu             8    0        unsigned long long 
  1754 ;;  f               4  102[BANK0 ] unsigned long long 
  1755 ;;  ct              3  106[BANK0 ] unsigned char [3]
  1756 ;;  vp              3    0        PTR void 
  1757 ;;  cp              3    0        PTR unsigned char 
  1758 ;;  done            2  100[BANK0 ] int 
  1759 ;;  i               2    0        int 
  1760 ;;  c               1  109[BANK0 ] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  2   82[BANK0 ] int 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1770 ;;      Params:         0       6       0       0       0       0       0       0       0
  1771 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1772 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1773 ;;      Totals:         0      28       0       0       0       0       0       0       0
  1774 ;;Total ram usage:       28 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; Hardware stack levels required when called: 5
  1777 ;; This function calls:
  1778 ;;		_atoi
  1779 ;;		_dtoa
  1780 ;;		_efgtoa
  1781 ;;		_fputc
  1782 ;;		_isdigit
  1783 ;;		_isupper
  1784 ;;		_strncmp
  1785 ;;		_tolower
  1786 ;; This function is called by:
  1787 ;;		_vfprintf
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text3
  1792  001440                     __ptext3:
  1793                           	callstack 0
  1794  001440                     _vfpfcnvrt:
  1795                           	callstack 23
  1796  001440                     
  1797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1798  001440  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1799  001444  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1800  001448  CFDE FFF6          	movff	postinc2,tblptrl
  1801  00144C  CFDD FFF7          	movff	postdec2,tblptrh
  1802  001450                     	if	0	;tblptru may be non-zero
  1803  001450                     	endif
  1804  001450                     	if	0	;tblptru may be non-zero
  1805  001450                     	endif
  1806  001450  0008               	tblrd		*
  1807  001452  50F5               	movf	tablat,w,c
  1808  001454  0A25               	xorlw	37
  1809  001456  A4D8               	btfss	status,2,c
  1810  001458  EF30  F00A         	goto	u5071
  1811  00145C  EF32  F00A         	goto	u5070
  1812  001460                     u5071:
  1813  001460  EF59  F00D         	goto	l4475
  1814  001464                     u5070:
  1815  001464                     
  1816                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1817  001464  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1818  001468  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1819  00146C  2ADE               	incf	postinc2,f,c
  1820  00146E  0E00               	movlw	0
  1821  001470  22DD               	addwfc	postdec2,f,c
  1822  001472                     
  1823                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1824  001472  0E00               	movlw	0
  1825  001474  0101               	movlb	1	; () banked
  1826  001476  6F23               	movwf	(_width+1)& (0+255),b
  1827  001478  0E00               	movlw	0
  1828  00147A  6F22               	movwf	_width& (0+255),b
  1829  00147C  C122  F0FD         	movff	_width,_flags
  1830  001480  C123  F0FE         	movff	_width+1,_flags+1
  1831  001484                     
  1832                           ; BSR set to: 1
  1833                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1834  001484  0100               	movlb	0	; () banked
  1835  001486  69FB               	setf	_prec& (0+255),b
  1836  001488  69FC               	setf	(_prec+1)& (0+255),b
  1837  00148A                     
  1838                           ; BSR set to: 0
  1839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1840  00148A  0E00               	movlw	0
  1841  00148C  6FC5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1842  00148E  0E00               	movlw	0
  1843  001490  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1846  001492  EF91  F00A         	goto	l4373
  1847  001496                     l4347:
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1851  001496  81FD               	bsf	_flags& (0+255),0,b
  1852  001498                     l4349:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1856  001498  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1857  00149C  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1858  0014A0  2ADE               	incf	postinc2,f,c
  1859  0014A2  0E00               	movlw	0
  1860  0014A4  22DD               	addwfc	postdec2,f,c
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1863  0014A6  EF91  F00A         	goto	l4373
  1864  0014AA                     l4351:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1868  0014AA  83FD               	bsf	_flags& (0+255),1,b
  1869  0014AC  EF4C  F00A         	goto	l4349
  1870  0014B0                     l4355:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1874  0014B0  85FD               	bsf	_flags& (0+255),2,b
  1875  0014B2  EF4C  F00A         	goto	l4349
  1876  0014B6                     l4359:
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1880  0014B6  87FD               	bsf	_flags& (0+255),3,b
  1881  0014B8  EF4C  F00A         	goto	l4349
  1882  0014BC                     l4363:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1886  0014BC  89FD               	bsf	_flags& (0+255),4,b
  1887  0014BE  EF4C  F00A         	goto	l4349
  1888  0014C2                     l4367:
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1892  0014C2  0E00               	movlw	0
  1893  0014C4  6FC5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1894  0014C6  0E01               	movlw	1
  1895  0014C8  6FC4               	movwf	vfpfcnvrt@done& (0+255),b
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1898  0014CA  EF91  F00A         	goto	l4373
  1899  0014CE                     l4371:
  1900                           
  1901                           ; BSR set to: 0
  1902  0014CE  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1903  0014D2  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1904  0014D6  CFDE FFF6          	movff	postinc2,tblptrl
  1905  0014DA  CFDD FFF7          	movff	postdec2,tblptrh
  1906  0014DE                     	if	0	;tblptru may be non-zero
  1907  0014DE                     	endif
  1908  0014DE                     	if	0	;tblptru may be non-zero
  1909  0014DE                     	endif
  1910  0014DE  0008               	tblrd		*
  1911  0014E0  50F5               	movf	tablat,w,c
  1912  0014E2  6FB8               	movwf	??_vfpfcnvrt& (0+255),b
  1913  0014E4  6BB9               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1914                           
  1915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1916                           ; Switch size 1, requested type "simple"
  1917                           ; Number of cases is 1, Range of values is 0 to 0
  1918                           ; switch strategies available:
  1919                           ; Name         Instructions Cycles
  1920                           ; simple_byte            4     3 (average)
  1921                           ;	Chosen strategy is simple_byte
  1922  0014E6  51B9               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1923  0014E8  0A00               	xorlw	0	; case 0
  1924  0014EA  B4D8               	btfsc	status,2,c
  1925  0014EC  EF7A  F00A         	goto	l4853
  1926  0014F0  EF61  F00A         	goto	l4367
  1927  0014F4                     l4853:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ; Switch size 1, requested type "simple"
  1931                           ; Number of cases is 5, Range of values is 32 to 48
  1932                           ; switch strategies available:
  1933                           ; Name         Instructions Cycles
  1934                           ; simple_byte           16     9 (average)
  1935                           ;	Chosen strategy is simple_byte
  1936  0014F4  51B8               	movf	??_vfpfcnvrt& (0+255),w,b
  1937  0014F6  0A20               	xorlw	32	; case 32
  1938  0014F8  B4D8               	btfsc	status,2,c
  1939  0014FA  EF5B  F00A         	goto	l4359
  1940  0014FE  0A03               	xorlw	3	; case 35
  1941  001500  B4D8               	btfsc	status,2,c
  1942  001502  EF5E  F00A         	goto	l4363
  1943  001506  0A08               	xorlw	8	; case 43
  1944  001508  B4D8               	btfsc	status,2,c
  1945  00150A  EF58  F00A         	goto	l4355
  1946  00150E  0A06               	xorlw	6	; case 45
  1947  001510  B4D8               	btfsc	status,2,c
  1948  001512  EF4B  F00A         	goto	l4347
  1949  001516  0A1D               	xorlw	29	; case 48
  1950  001518  B4D8               	btfsc	status,2,c
  1951  00151A  EF55  F00A         	goto	l4351
  1952  00151E  EF61  F00A         	goto	l4367
  1953  001522                     l4373:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1957  001522  51C4               	movf	vfpfcnvrt@done& (0+255),w,b
  1958  001524  11C5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1959  001526  B4D8               	btfsc	status,2,c
  1960  001528  EF98  F00A         	goto	u5081
  1961  00152C  EF9A  F00A         	goto	u5080
  1962  001530                     u5081:
  1963  001530  EF67  F00A         	goto	l4371
  1964  001534                     u5080:
  1965  001534                     
  1966                           ; BSR set to: 0
  1967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1968  001534  A1FD               	btfss	_flags& (0+255),0,b
  1969  001536  EF9F  F00A         	goto	u5091
  1970  00153A  EFA1  F00A         	goto	u5090
  1971  00153E                     u5091:
  1972  00153E  EFA2  F00A         	goto	l4377
  1973  001542                     u5090:
  1974  001542                     
  1975                           ; BSR set to: 0
  1976                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1977  001542  93FD               	bcf	_flags& (0+255),1,b
  1978  001544                     l4377:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1982  001544  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1983  001548  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1984  00154C  CFDE FFF6          	movff	postinc2,tblptrl
  1985  001550  CFDD FFF7          	movff	postdec2,tblptrh
  1986  001554                     	if	0	;tblptru may be non-zero
  1987  001554                     	endif
  1988  001554                     	if	0	;tblptru may be non-zero
  1989  001554                     	endif
  1990  001554  0008               	tblrd		*
  1991  001556  50F5               	movf	tablat,w,c
  1992  001558  0A2A               	xorlw	42
  1993  00155A  A4D8               	btfss	status,2,c
  1994  00155C  EFB2  F00A         	goto	u5101
  1995  001560  EFB4  F00A         	goto	u5100
  1996  001564                     u5101:
  1997  001564  EFE0  F00A         	goto	l4385
  1998  001568                     u5100:
  1999  001568                     
  2000                           ; BSR set to: 0
  2001                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2002  001568  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2003  00156C  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2004  001570  2ADE               	incf	postinc2,f,c
  2005  001572  0E00               	movlw	0
  2006  001574  22DD               	addwfc	postdec2,f,c
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2009  001576  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2010  00157A  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2011  00157E  CFDF F0B8          	movff	indf2,??_vfpfcnvrt
  2012  001582  0E02               	movlw	2
  2013  001584  26DE               	addwf	postinc2,f,c
  2014  001586  CFDF F0B9          	movff	indf2,??_vfpfcnvrt+1
  2015  00158A  0E00               	movlw	0
  2016  00158C  22DD               	addwfc	postdec2,f,c
  2017  00158E  C0B8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2018  001592  C0B9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2019  001596  CFDE F122          	movff	postinc2,_width
  2020  00159A  CFDD F123          	movff	postdec2,_width+1
  2021  00159E                     
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2024  00159E  0101               	movlb	1	; () banked
  2025  0015A0  BF23               	btfsc	(_width+1)& (0+255),7,b
  2026  0015A2  EFD7  F00A         	goto	u5110
  2027  0015A6  EFD5  F00A         	goto	u5111
  2028  0015AA                     u5111:
  2029  0015AA  EF17  F00B         	goto	l4393
  2030  0015AE                     u5110:
  2031  0015AE                     
  2032                           ; BSR set to: 1
  2033                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2034  0015AE  0100               	movlb	0	; () banked
  2035  0015B0  81FD               	bsf	_flags& (0+255),0,b
  2036                           
  2037                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2038  0015B2  0101               	movlb	1	; () banked
  2039  0015B4  6D22               	negf	_width& (0+255),b
  2040  0015B6  1F23               	comf	(_width+1)& (0+255),f,b
  2041  0015B8  B0D8               	btfsc	status,0,c
  2042  0015BA  2B23               	incf	(_width+1)& (0+255),f,b
  2043  0015BC  EF17  F00B         	goto	l4393
  2044  0015C0                     l4385:
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2048  0015C0  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2049  0015C4  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2050  0015C8  CFDE F008          	movff	postinc2,atoi@s
  2051  0015CC  CFDD F009          	movff	postdec2,atoi@s+1
  2052  0015D0  EC31  F01B         	call	_atoi	;wreg free
  2053  0015D4  C008  F122         	movff	?_atoi,_width
  2054  0015D8  C009  F123         	movff	?_atoi+1,_width+1
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2057  0015DC  EFF7  F00A         	goto	l4391
  2058  0015E0                     l4387:
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2062  0015E0  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2063  0015E4  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2064  0015E8  2ADE               	incf	postinc2,f,c
  2065  0015EA  0E00               	movlw	0
  2066  0015EC  22DD               	addwfc	postdec2,f,c
  2067  0015EE                     l4391:
  2068  0015EE  0ED0               	movlw	208
  2069  0015F0  0100               	movlb	0	; () banked
  2070  0015F2  6FB8               	movwf	??_vfpfcnvrt& (0+255),b
  2071  0015F4  0EFF               	movlw	255
  2072  0015F6  6FB9               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2073  0015F8  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2074  0015FC  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2075  001600  CFDE FFF6          	movff	postinc2,tblptrl
  2076  001604  CFDD FFF7          	movff	postdec2,tblptrh
  2077  001608                     	if	0	;tblptru may be non-zero
  2078  001608                     	endif
  2079  001608                     	if	0	;tblptru may be non-zero
  2080  001608                     	endif
  2081  001608  0008               	tblrd		*
  2082  00160A  50F5               	movf	tablat,w,c
  2083  00160C  6FBA               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2084  00160E  6BBB               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2085  001610  51B8               	movf	??_vfpfcnvrt& (0+255),w,b
  2086  001612  27BA               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2087  001614  51B9               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2088  001616  23BB               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2089  001618  51BB               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2090  00161A  E109               	bnz	u5120
  2091  00161C  0E0A               	movlw	10
  2092  00161E  5DBA               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2093  001620  A0D8               	btfss	status,0,c
  2094  001622  EF15  F00B         	goto	u5121
  2095  001626  EF17  F00B         	goto	u5120
  2096  00162A                     u5121:
  2097  00162A  EFF0  F00A         	goto	l4387
  2098  00162E                     u5120:
  2099  00162E                     l4393:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2102  00162E  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2103  001632  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2104  001636  CFDE FFF6          	movff	postinc2,tblptrl
  2105  00163A  CFDD FFF7          	movff	postdec2,tblptrh
  2106  00163E                     	if	0	;tblptru may be non-zero
  2107  00163E                     	endif
  2108  00163E                     	if	0	;tblptru may be non-zero
  2109  00163E                     	endif
  2110  00163E  0008               	tblrd		*
  2111  001640  50F5               	movf	tablat,w,c
  2112  001642  0A2E               	xorlw	46
  2113  001644  A4D8               	btfss	status,2,c
  2114  001646  EF27  F00B         	goto	u5131
  2115  00164A  EF29  F00B         	goto	u5130
  2116  00164E                     u5131:
  2117  00164E  EF9B  F00B         	goto	l4411
  2118  001652                     u5130:
  2119  001652                     
  2120                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2121  001652  0E00               	movlw	0
  2122  001654  0100               	movlb	0	; () banked
  2123  001656  6FFC               	movwf	(_prec+1)& (0+255),b
  2124  001658  0E00               	movlw	0
  2125  00165A  6FFB               	movwf	_prec& (0+255),b
  2126  00165C                     
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2129  00165C  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2130  001660  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2131  001664  2ADE               	incf	postinc2,f,c
  2132  001666  0E00               	movlw	0
  2133  001668  22DD               	addwfc	postdec2,f,c
  2134  00166A                     
  2135                           ; BSR set to: 0
  2136                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2137  00166A  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2138  00166E  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2139  001672  CFDE FFF6          	movff	postinc2,tblptrl
  2140  001676  CFDD FFF7          	movff	postdec2,tblptrh
  2141  00167A                     	if	0	;tblptru may be non-zero
  2142  00167A                     	endif
  2143  00167A                     	if	0	;tblptru may be non-zero
  2144  00167A                     	endif
  2145  00167A  0008               	tblrd		*
  2146  00167C  50F5               	movf	tablat,w,c
  2147  00167E  0A2A               	xorlw	42
  2148  001680  A4D8               	btfss	status,2,c
  2149  001682  EF45  F00B         	goto	u5141
  2150  001686  EF47  F00B         	goto	u5140
  2151  00168A                     u5141:
  2152  00168A  EF64  F00B         	goto	l4403
  2153  00168E                     u5140:
  2154  00168E                     
  2155                           ; BSR set to: 0
  2156                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2157  00168E  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2158  001692  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2159  001696  2ADE               	incf	postinc2,f,c
  2160  001698  0E00               	movlw	0
  2161  00169A  22DD               	addwfc	postdec2,f,c
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2164  00169C  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2165  0016A0  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2166  0016A4  CFDF F0B8          	movff	indf2,??_vfpfcnvrt
  2167  0016A8  0E02               	movlw	2
  2168  0016AA  26DE               	addwf	postinc2,f,c
  2169  0016AC  CFDF F0B9          	movff	indf2,??_vfpfcnvrt+1
  2170  0016B0  0E00               	movlw	0
  2171  0016B2  22DD               	addwfc	postdec2,f,c
  2172  0016B4  C0B8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2173  0016B8  C0B9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2174  0016BC  CFDE F0FB          	movff	postinc2,_prec
  2175  0016C0  CFDD F0FC          	movff	postdec2,_prec+1
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2178  0016C4  EF9B  F00B         	goto	l4411
  2179  0016C8                     l4403:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2183  0016C8  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2184  0016CC  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2185  0016D0  CFDE F008          	movff	postinc2,atoi@s
  2186  0016D4  CFDD F009          	movff	postdec2,atoi@s+1
  2187  0016D8  EC31  F01B         	call	_atoi	;wreg free
  2188  0016DC  C008  F0FB         	movff	?_atoi,_prec
  2189  0016E0  C009  F0FC         	movff	?_atoi+1,_prec+1
  2190                           
  2191                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2192  0016E4  EF7B  F00B         	goto	l4409
  2193  0016E8                     l4405:
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2197  0016E8  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2198  0016EC  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2199  0016F0  2ADE               	incf	postinc2,f,c
  2200  0016F2  0E00               	movlw	0
  2201  0016F4  22DD               	addwfc	postdec2,f,c
  2202  0016F6                     l4409:
  2203  0016F6  0ED0               	movlw	208
  2204  0016F8  0100               	movlb	0	; () banked
  2205  0016FA  6FB8               	movwf	??_vfpfcnvrt& (0+255),b
  2206  0016FC  0EFF               	movlw	255
  2207  0016FE  6FB9               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2208  001700  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2209  001704  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2210  001708  CFDE FFF6          	movff	postinc2,tblptrl
  2211  00170C  CFDD FFF7          	movff	postdec2,tblptrh
  2212  001710                     	if	0	;tblptru may be non-zero
  2213  001710                     	endif
  2214  001710                     	if	0	;tblptru may be non-zero
  2215  001710                     	endif
  2216  001710  0008               	tblrd		*
  2217  001712  50F5               	movf	tablat,w,c
  2218  001714  6FBA               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2219  001716  6BBB               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2220  001718  51B8               	movf	??_vfpfcnvrt& (0+255),w,b
  2221  00171A  27BA               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2222  00171C  51B9               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2223  00171E  23BB               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2224  001720  51BB               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2225  001722  E109               	bnz	u5150
  2226  001724  0E0A               	movlw	10
  2227  001726  5DBA               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2228  001728  A0D8               	btfss	status,0,c
  2229  00172A  EF99  F00B         	goto	u5151
  2230  00172E  EF9B  F00B         	goto	u5150
  2231  001732                     u5151:
  2232  001732  EF74  F00B         	goto	l4405
  2233  001736                     u5150:
  2234  001736                     l4411:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2237  001736  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2238  00173A  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2239  00173E  CFDE FFF6          	movff	postinc2,tblptrl
  2240  001742  CFDD FFF7          	movff	postdec2,tblptrh
  2241  001746                     	if	0	;tblptru may be non-zero
  2242  001746                     	endif
  2243  001746                     	if	0	;tblptru may be non-zero
  2244  001746                     	endif
  2245  001746  0008               	tblrd		*
  2246  001748  50F5               	movf	tablat,w,c
  2247  00174A  6E07               	movwf	tolower@c^0,c
  2248  00174C  6A08               	clrf	(tolower@c+1)^0,c
  2249  00174E  ECA1  F021         	call	_tolower	;wreg free
  2250  001752  5007               	movf	?_tolower^0,w,c
  2251  001754  0100               	movlb	0	; () banked
  2252  001756  6FCA               	movwf	vfpfcnvrt@ct& (0+255),b
  2253  001758                     
  2254                           ; BSR set to: 0
  2255                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2256  001758  51CA               	movf	vfpfcnvrt@ct& (0+255),w,b
  2257  00175A  B4D8               	btfsc	status,2,c
  2258  00175C  EFB2  F00B         	goto	u5161
  2259  001760  EFB4  F00B         	goto	u5160
  2260  001764                     u5161:
  2261  001764  EFEE  F00B         	goto	l4421
  2262  001768                     u5160:
  2263  001768                     
  2264                           ; BSR set to: 0
  2265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2266  001768  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2267  00176C  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2268  001770  CFDE F0B8          	movff	postinc2,??_vfpfcnvrt
  2269  001774  CFDD F0B9          	movff	postdec2,??_vfpfcnvrt+1
  2270  001778  0E01               	movlw	1
  2271  00177A  27B8               	addwf	??_vfpfcnvrt& (0+255),f,b
  2272  00177C  0E00               	movlw	0
  2273  00177E  23B9               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2274  001780  C0B8  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2275  001784  C0B9  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2276  001788                     	if	0	;tblptru may be non-zero
  2277  001788                     	endif
  2278  001788                     	if	0	;tblptru may be non-zero
  2279  001788                     	endif
  2280  001788  0008               	tblrd		*
  2281  00178A  50F5               	movf	tablat,w,c
  2282  00178C  6E07               	movwf	tolower@c^0,c
  2283  00178E  6A08               	clrf	(tolower@c+1)^0,c
  2284  001790  ECA1  F021         	call	_tolower	;wreg free
  2285  001794  5007               	movf	?_tolower^0,w,c
  2286  001796  0100               	movlb	0	; () banked
  2287  001798  6FCB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2288  00179A                     
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2291  00179A  51CB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2292  00179C  B4D8               	btfsc	status,2,c
  2293  00179E  EFD3  F00B         	goto	u5171
  2294  0017A2  EFD5  F00B         	goto	u5170
  2295  0017A6                     u5171:
  2296  0017A6  EFEE  F00B         	goto	l4421
  2297  0017AA                     u5170:
  2298  0017AA                     
  2299                           ; BSR set to: 0
  2300                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2301  0017AA  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2302  0017AE  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2303  0017B2  CFDE F0B8          	movff	postinc2,??_vfpfcnvrt
  2304  0017B6  CFDD F0B9          	movff	postdec2,??_vfpfcnvrt+1
  2305  0017BA  0E02               	movlw	2
  2306  0017BC  27B8               	addwf	??_vfpfcnvrt& (0+255),f,b
  2307  0017BE  0E00               	movlw	0
  2308  0017C0  23B9               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2309  0017C2  C0B8  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2310  0017C6  C0B9  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2311  0017CA                     	if	0	;tblptru may be non-zero
  2312  0017CA                     	endif
  2313  0017CA                     	if	0	;tblptru may be non-zero
  2314  0017CA                     	endif
  2315  0017CA  0008               	tblrd		*
  2316  0017CC  50F5               	movf	tablat,w,c
  2317  0017CE  6E07               	movwf	tolower@c^0,c
  2318  0017D0  6A08               	clrf	(tolower@c+1)^0,c
  2319  0017D2  ECA1  F021         	call	_tolower	;wreg free
  2320  0017D6  5007               	movf	?_tolower^0,w,c
  2321  0017D8  0100               	movlb	0	; () banked
  2322  0017DA  6FCC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2323  0017DC                     l4421:
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2327  0017DC  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2328  0017E0  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2329  0017E4  CFDE FFF6          	movff	postinc2,tblptrl
  2330  0017E8  CFDD FFF7          	movff	postdec2,tblptrh
  2331  0017EC                     	if	0	;tblptru may be non-zero
  2332  0017EC                     	endif
  2333  0017EC                     	if	0	;tblptru may be non-zero
  2334  0017EC                     	endif
  2335  0017EC  0008               	tblrd		*
  2336  0017EE  50F5               	movf	tablat,w,c
  2337  0017F0  0A64               	xorlw	100
  2338  0017F2  B4D8               	btfsc	status,2,c
  2339  0017F4  EFFE  F00B         	goto	u5181
  2340  0017F8  EF00  F00C         	goto	u5180
  2341  0017FC                     u5181:
  2342  0017FC  EF12  F00C         	goto	l4425
  2343  001800                     u5180:
  2344  001800                     
  2345                           ; BSR set to: 0
  2346  001800  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2347  001804  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2348  001808  CFDE FFF6          	movff	postinc2,tblptrl
  2349  00180C  CFDD FFF7          	movff	postdec2,tblptrh
  2350  001810                     	if	0	;tblptru may be non-zero
  2351  001810                     	endif
  2352  001810                     	if	0	;tblptru may be non-zero
  2353  001810                     	endif
  2354  001810  0008               	tblrd		*
  2355  001812  50F5               	movf	tablat,w,c
  2356  001814  0A69               	xorlw	105
  2357  001816  A4D8               	btfss	status,2,c
  2358  001818  EF10  F00C         	goto	u5191
  2359  00181C  EF12  F00C         	goto	u5190
  2360  001820                     u5191:
  2361  001820  EF52  F00C         	goto	l4431
  2362  001824                     u5190:
  2363  001824                     l4425:
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2367  001824  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2368  001828  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2369  00182C  2ADE               	incf	postinc2,f,c
  2370  00182E  0E00               	movlw	0
  2371  001830  22DD               	addwfc	postdec2,f,c
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2374  001832  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2375  001836  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2376  00183A  CFDF F0B8          	movff	indf2,??_vfpfcnvrt
  2377  00183E  0E02               	movlw	2
  2378  001840  26DE               	addwf	postinc2,f,c
  2379  001842  CFDF F0B9          	movff	indf2,??_vfpfcnvrt+1
  2380  001846  0E00               	movlw	0
  2381  001848  22DD               	addwfc	postdec2,f,c
  2382  00184A  C0B8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2383  00184E  C0B9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2384  001852  CFDE F0BC          	movff	postinc2,vfpfcnvrt@ll
  2385  001856  CFDD F0BD          	movff	postdec2,vfpfcnvrt@ll+1
  2386  00185A  0E00               	movlw	0
  2387  00185C  BFBD               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2388  00185E  0EFF               	movlw	-1
  2389  001860  6FBE               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2390  001862  6FBF               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2391  001864  6FC0               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2392  001866  6FC1               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2393  001868  6FC2               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2394  00186A  6FC3               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2395  00186C                     
  2396                           ; BSR set to: 0
  2397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2398  00186C  C0B2  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2399  001870  C0B3  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2400  001874  C0BC  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2401  001878  C0BD  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2402  00187C  C0BE  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2403  001880  C0BF  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2404  001884  C0C0  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2405  001888  C0C1  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2406  00188C  C0C2  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2407  001890  C0C3  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2408  001894  EC44  F015         	call	_dtoa	;wreg free
  2409  001898  C01C  F0B2         	movff	?_dtoa,?_vfpfcnvrt
  2410  00189C  C01D  F0B3         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2411  0018A0  EF74  F00D         	goto	l1053
  2412  0018A4                     l4431:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2416  0018A4  0E66               	movlw	102
  2417  0018A6  19CA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2418  0018A8  A4D8               	btfss	status,2,c
  2419  0018AA  EF59  F00C         	goto	u5201
  2420  0018AE  EF5B  F00C         	goto	u5200
  2421  0018B2                     u5201:
  2422  0018B2  EF9B  F00C         	goto	l4443
  2423  0018B6                     u5200:
  2424  0018B6                     
  2425                           ; BSR set to: 0
  2426                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2427  0018B6  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2428  0018BA  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2429  0018BE  CFDE FFF6          	movff	postinc2,tblptrl
  2430  0018C2  CFDD FFF7          	movff	postdec2,tblptrh
  2431  0018C6                     	if	0	;tblptru may be non-zero
  2432  0018C6                     	endif
  2433  0018C6                     	if	0	;tblptru may be non-zero
  2434  0018C6                     	endif
  2435  0018C6  0008               	tblrd		*
  2436  0018C8  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  2437  0018CC                     
  2438                           ; BSR set to: 0
  2439                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2440  0018CC  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2441  0018D0  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2442  0018D4  2ADE               	incf	postinc2,f,c
  2443  0018D6  0E00               	movlw	0
  2444  0018D8  22DD               	addwfc	postdec2,f,c
  2445  0018DA                     
  2446                           ; BSR set to: 0
  2447                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2448  0018DA  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2449  0018DE  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2450  0018E2  CFDF F0B8          	movff	indf2,??_vfpfcnvrt
  2451  0018E6  0E04               	movlw	4
  2452  0018E8  26DE               	addwf	postinc2,f,c
  2453  0018EA  CFDF F0B9          	movff	indf2,??_vfpfcnvrt+1
  2454  0018EE  0E00               	movlw	0
  2455  0018F0  22DD               	addwfc	postdec2,f,c
  2456  0018F2  C0B8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2457  0018F6  C0B9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2458  0018FA  CFDE F0C6          	movff	postinc2,vfpfcnvrt@f
  2459  0018FE  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f+1
  2460  001902  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+2
  2461  001906  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+3
  2462  00190A                     l4439:
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2466  00190A  C0B2  F074         	movff	vfpfcnvrt@fp,efgtoa@fp
  2467  00190E  C0B3  F075         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2468  001912  C0C6  F076         	movff	vfpfcnvrt@f,efgtoa@f
  2469  001916  C0C7  F077         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2470  00191A  C0C8  F078         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2471  00191E  C0C9  F079         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2472  001922  C0CD  F07A         	movff	vfpfcnvrt@c,efgtoa@c
  2473  001926  EC1B  F004         	call	_efgtoa	;wreg free
  2474  00192A  C074  F0B2         	movff	?_efgtoa,?_vfpfcnvrt
  2475  00192E  C075  F0B3         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2476  001932  EF74  F00D         	goto	l1053
  2477  001936                     l4443:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2481  001936  0ECA               	movlw	low vfpfcnvrt@ct
  2482  001938  6E01               	movwf	strncmp@_l^0,c
  2483  00193A  0E00               	movlw	high vfpfcnvrt@ct
  2484  00193C  6E02               	movwf	(strncmp@_l+1)^0,c
  2485  00193E  0E32               	movlw	low STR_10
  2486  001940  6E03               	movwf	strncmp@_r^0,c
  2487  001942  0E08               	movlw	high STR_10
  2488  001944  6E04               	movwf	(strncmp@_r+1)^0,c
  2489  001946  0E00               	movlw	0
  2490  001948  6E06               	movwf	(strncmp@n+1)^0,c
  2491  00194A  0E02               	movlw	2
  2492  00194C  6E05               	movwf	strncmp@n^0,c
  2493  00194E  ECD5  F01D         	call	_strncmp	;wreg free
  2494  001952  5001               	movf	?_strncmp^0,w,c
  2495  001954  1002               	iorwf	(?_strncmp+1)^0,w,c
  2496  001956  A4D8               	btfss	status,2,c
  2497  001958  EFB0  F00C         	goto	u5211
  2498  00195C  EFB2  F00C         	goto	u5210
  2499  001960                     u5211:
  2500  001960  EF21  F00D         	goto	l4459
  2501  001964                     u5210:
  2502  001964                     
  2503                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2504  001964  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2505  001968  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2506  00196C  CFDE F0B8          	movff	postinc2,??_vfpfcnvrt
  2507  001970  CFDD F0B9          	movff	postdec2,??_vfpfcnvrt+1
  2508  001974  0E01               	movlw	1
  2509  001976  0100               	movlb	0	; () banked
  2510  001978  27B8               	addwf	??_vfpfcnvrt& (0+255),f,b
  2511  00197A  0E00               	movlw	0
  2512  00197C  23B9               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2513  00197E  C0B8  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2514  001982  C0B9  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2515  001986                     	if	0	;tblptru may be non-zero
  2516  001986                     	endif
  2517  001986                     	if	0	;tblptru may be non-zero
  2518  001986                     	endif
  2519  001986  0008               	tblrd		*
  2520  001988  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  2521  00198C                     
  2522                           ; BSR set to: 0
  2523  00198C  0EBF               	movlw	191
  2524  00198E  6FB8               	movwf	??_vfpfcnvrt& (0+255),b
  2525  001990  0EFF               	movlw	255
  2526  001992  6FB9               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2527  001994  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2528  001998  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2529  00199C  CFDE FFF6          	movff	postinc2,tblptrl
  2530  0019A0  CFDD FFF7          	movff	postdec2,tblptrh
  2531  0019A4                     	if	0	;tblptru may be non-zero
  2532  0019A4                     	endif
  2533  0019A4                     	if	0	;tblptru may be non-zero
  2534  0019A4                     	endif
  2535  0019A4  0008               	tblrd		*
  2536  0019A6  50F5               	movf	tablat,w,c
  2537  0019A8  6FBA               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2538  0019AA  6BBB               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2539  0019AC  51B8               	movf	??_vfpfcnvrt& (0+255),w,b
  2540  0019AE  27BA               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2541  0019B0  51B9               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2542  0019B2  23BB               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2543  0019B4  51BB               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2544  0019B6  E107               	bnz	u5221
  2545  0019B8  0E1A               	movlw	26
  2546  0019BA  5DBA               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2547  0019BC  B0D8               	btfsc	status,0,c
  2548  0019BE  EFE3  F00C         	goto	u5221
  2549  0019C2  EFE5  F00C         	goto	u5220
  2550  0019C6                     u5221:
  2551  0019C6  EFFF  F00C         	goto	l4453
  2552  0019CA                     u5220:
  2553  0019CA                     
  2554                           ; BSR set to: 0
  2555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2556  0019CA  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2557  0019CE  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2558  0019D2  CFDF F0B8          	movff	indf2,??_vfpfcnvrt
  2559  0019D6  0E04               	movlw	4
  2560  0019D8  26DE               	addwf	postinc2,f,c
  2561  0019DA  CFDF F0B9          	movff	indf2,??_vfpfcnvrt+1
  2562  0019DE  0E00               	movlw	0
  2563  0019E0  22DD               	addwfc	postdec2,f,c
  2564  0019E2  C0B8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2565  0019E6  C0B9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2566  0019EA  CFDE F0C6          	movff	postinc2,vfpfcnvrt@f
  2567  0019EE  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f+1
  2568  0019F2  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+2
  2569  0019F6  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+3
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2572  0019FA  EF17  F00D         	goto	l1059
  2573  0019FE                     l4453:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2577  0019FE  C0B6  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2578  001A02  C0B7  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2579  001A06  CFDF F0B8          	movff	indf2,??_vfpfcnvrt
  2580  001A0A  0E04               	movlw	4
  2581  001A0C  26DE               	addwf	postinc2,f,c
  2582  001A0E  CFDF F0B9          	movff	indf2,??_vfpfcnvrt+1
  2583  001A12  0E00               	movlw	0
  2584  001A14  22DD               	addwfc	postdec2,f,c
  2585  001A16  C0B8  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2586  001A1A  C0B9  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2587  001A1E  CFDE F0C6          	movff	postinc2,vfpfcnvrt@f
  2588  001A22  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f+1
  2589  001A26  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+2
  2590  001A2A  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+3
  2591  001A2E                     l1059:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2595  001A2E  0E02               	movlw	2
  2596  001A30  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2597  001A34  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2598  001A38  26DE               	addwf	postinc2,f,c
  2599  001A3A  0E00               	movlw	0
  2600  001A3C  22DD               	addwfc	postdec2,f,c
  2601  001A3E  EF85  F00C         	goto	l4439
  2602  001A42                     l4459:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2605  001A42  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2606  001A46  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2607  001A4A  CFDE FFF6          	movff	postinc2,tblptrl
  2608  001A4E  CFDD FFF7          	movff	postdec2,tblptrh
  2609  001A52                     	if	0	;tblptru may be non-zero
  2610  001A52                     	endif
  2611  001A52                     	if	0	;tblptru may be non-zero
  2612  001A52                     	endif
  2613  001A52  0008               	tblrd		*
  2614  001A54  50F5               	movf	tablat,w,c
  2615  001A56  0A25               	xorlw	37
  2616  001A58  A4D8               	btfss	status,2,c
  2617  001A5A  EF31  F00D         	goto	u5231
  2618  001A5E  EF33  F00D         	goto	u5230
  2619  001A62                     u5231:
  2620  001A62  EF4B  F00D         	goto	l4469
  2621  001A66                     u5230:
  2622  001A66                     
  2623                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2624  001A66  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2625  001A6A  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2626  001A6E  2ADE               	incf	postinc2,f,c
  2627  001A70  0E00               	movlw	0
  2628  001A72  22DD               	addwfc	postdec2,f,c
  2629  001A74                     
  2630                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2631  001A74  0E00               	movlw	0
  2632  001A76  6E02               	movwf	(fputc@c+1)^0,c
  2633  001A78  0E25               	movlw	37
  2634  001A7A  6E01               	movwf	fputc@c^0,c
  2635  001A7C  C0B2  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2636  001A80  C0B3  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2637  001A84  EC40  F01E         	call	_fputc	;wreg free
  2638  001A88                     l4465:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2641  001A88  0E00               	movlw	0
  2642  001A8A  0100               	movlb	0	; () banked
  2643  001A8C  6FB3               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2644  001A8E  0E01               	movlw	1
  2645  001A90  6FB2               	movwf	?_vfpfcnvrt& (0+255),b
  2646  001A92  EF74  F00D         	goto	l1053
  2647  001A96                     l4469:
  2648                           
  2649                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2650  001A96  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2651  001A9A  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2652  001A9E  2ADE               	incf	postinc2,f,c
  2653  001AA0  0E00               	movlw	0
  2654  001AA2  22DD               	addwfc	postdec2,f,c
  2655  001AA4                     
  2656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2657  001AA4  0E00               	movlw	0
  2658  001AA6  0100               	movlb	0	; () banked
  2659  001AA8  6FB3               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2660  001AAA  0E00               	movlw	0
  2661  001AAC  6FB2               	movwf	?_vfpfcnvrt& (0+255),b
  2662  001AAE  EF74  F00D         	goto	l1053
  2663  001AB2                     l4475:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2666  001AB2  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2667  001AB6  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2668  001ABA  CFDE FFF6          	movff	postinc2,tblptrl
  2669  001ABE  CFDD FFF7          	movff	postdec2,tblptrh
  2670  001AC2                     	if	0	;tblptru may be non-zero
  2671  001AC2                     	endif
  2672  001AC2                     	if	0	;tblptru may be non-zero
  2673  001AC2                     	endif
  2674  001AC2  0008               	tblrd		*
  2675  001AC4  50F5               	movf	tablat,w,c
  2676  001AC6  6E01               	movwf	fputc@c^0,c
  2677  001AC8  6A02               	clrf	(fputc@c+1)^0,c
  2678  001ACA  C0B2  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2679  001ACE  C0B3  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2680  001AD2  EC40  F01E         	call	_fputc	;wreg free
  2681  001AD6                     
  2682                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2683  001AD6  C0B4  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2684  001ADA  C0B5  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2685  001ADE  2ADE               	incf	postinc2,f,c
  2686  001AE0  0E00               	movlw	0
  2687  001AE2  22DD               	addwfc	postdec2,f,c
  2688  001AE4  EF44  F00D         	goto	l4465
  2689  001AE8                     l1053:
  2690  001AE8  0012               	return		;funcret
  2691  001AEA                     __end_of_vfpfcnvrt:
  2692                           	callstack 0
  2693                           
  2694 ;; *************** function _strncmp *****************
  2695 ;; Defined at:
  2696 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2699 ;;		 -> vfpfcnvrt@ct(3), 
  2700 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2701 ;;		 -> STR_12(3), 
  2702 ;;  n               2    4[COMRAM] unsigned int 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2705 ;;		 -> STR_12(3), 
  2706 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2707 ;;		 -> vfpfcnvrt@ct(3), 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  2    0[COMRAM] int 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2717 ;;      Params:         6       0       0       0       0       0       0       0       0
  2718 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2719 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2720 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2721 ;;Total ram usage:       11 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_vfpfcnvrt
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text4
  2731  003BAA                     __ptext4:
  2732                           	callstack 0
  2733  003BAA                     _strncmp:
  2734                           	callstack 27
  2735  003BAA  C001  F008         	movff	strncmp@_l,strncmp@l
  2736  003BAE  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2737  003BB2  C003  F00A         	movff	strncmp@_r,strncmp@r
  2738  003BB6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2739  003BBA  0605               	decf	strncmp@n^0,f,c
  2740  003BBC  A0D8               	btfss	status,0,c
  2741  003BBE  0606               	decf	(strncmp@n+1)^0,f,c
  2742  003BC0  2805               	incf	strncmp@n^0,w,c
  2743  003BC2  E106               	bnz	u5021
  2744  003BC4  2806               	incf	(strncmp@n+1)^0,w,c
  2745  003BC6  A4D8               	btfss	status,2,c
  2746  003BC8  EFE8  F01D         	goto	u5021
  2747  003BCC  EFEA  F01D         	goto	u5020
  2748  003BD0                     u5021:
  2749  003BD0  EFF7  F01D         	goto	l4325
  2750  003BD4                     u5020:
  2751  003BD4  0E00               	movlw	0
  2752  003BD6  6E02               	movwf	(?_strncmp+1)^0,c
  2753  003BD8  0E00               	movlw	0
  2754  003BDA  6E01               	movwf	?_strncmp^0,c
  2755  003BDC  EF3F  F01E         	goto	l1181
  2756  003BE0                     l4323:
  2757  003BE0  4A08               	infsnz	strncmp@l^0,f,c
  2758  003BE2  2A09               	incf	(strncmp@l+1)^0,f,c
  2759  003BE4  4A0A               	infsnz	strncmp@r^0,f,c
  2760  003BE6  2A0B               	incf	(strncmp@r+1)^0,f,c
  2761  003BE8  0605               	decf	strncmp@n^0,f,c
  2762  003BEA  A0D8               	btfss	status,0,c
  2763  003BEC  0606               	decf	(strncmp@n+1)^0,f,c
  2764  003BEE                     l4325:
  2765  003BEE  C008  FFD9         	movff	strncmp@l,fsr2l
  2766  003BF2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2767  003BF6  50DF               	movf	indf2,w,c
  2768  003BF8  B4D8               	btfsc	status,2,c
  2769  003BFA  EF01  F01E         	goto	u5031
  2770  003BFE  EF03  F01E         	goto	u5030
  2771  003C02                     u5031:
  2772  003C02  EF2E  F01E         	goto	l4333
  2773  003C06                     u5030:
  2774  003C06  C00A  FFF6         	movff	strncmp@r,tblptrl
  2775  003C0A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2776  003C0E                     	if	0	;tblptru may be non-zero
  2777  003C0E                     	endif
  2778  003C0E                     	if	0	;tblptru may be non-zero
  2779  003C0E                     	endif
  2780  003C0E  0008               	tblrd		*
  2781  003C10  50F5               	movf	tablat,w,c
  2782  003C12  0900               	iorlw	0
  2783  003C14  B4D8               	btfsc	status,2,c
  2784  003C16  EF0F  F01E         	goto	u5041
  2785  003C1A  EF11  F01E         	goto	u5040
  2786  003C1E                     u5041:
  2787  003C1E  EF2E  F01E         	goto	l4333
  2788  003C22                     u5040:
  2789  003C22  5005               	movf	strncmp@n^0,w,c
  2790  003C24  1006               	iorwf	(strncmp@n+1)^0,w,c
  2791  003C26  B4D8               	btfsc	status,2,c
  2792  003C28  EF18  F01E         	goto	u5051
  2793  003C2C  EF1A  F01E         	goto	u5050
  2794  003C30                     u5051:
  2795  003C30  EF2E  F01E         	goto	l4333
  2796  003C34                     u5050:
  2797  003C34  C008  FFD9         	movff	strncmp@l,fsr2l
  2798  003C38  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2799  003C3C  50DF               	movf	indf2,w,c
  2800  003C3E  6E07               	movwf	??_strncmp^0,c
  2801  003C40  C00A  FFF6         	movff	strncmp@r,tblptrl
  2802  003C44  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2803  003C48                     	if	0	;tblptru may be non-zero
  2804  003C48                     	endif
  2805  003C48                     	if	0	;tblptru may be non-zero
  2806  003C48                     	endif
  2807  003C48  0008               	tblrd		*
  2808  003C4A  50F5               	movf	tablat,w,c
  2809  003C4C  1807               	xorwf	??_strncmp^0,w,c
  2810  003C4E  B4D8               	btfsc	status,2,c
  2811  003C50  EF2C  F01E         	goto	u5061
  2812  003C54  EF2E  F01E         	goto	u5060
  2813  003C58                     u5061:
  2814  003C58  EFF0  F01D         	goto	l4323
  2815  003C5C                     u5060:
  2816  003C5C                     l4333:
  2817  003C5C  C008  FFD9         	movff	strncmp@l,fsr2l
  2818  003C60  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2819  003C64  50DF               	movf	indf2,w,c
  2820  003C66  6E07               	movwf	??_strncmp^0,c
  2821  003C68  C00A  FFF6         	movff	strncmp@r,tblptrl
  2822  003C6C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2823  003C70                     	if	0	;tblptru may be non-zero
  2824  003C70                     	endif
  2825  003C70                     	if	0	;tblptru may be non-zero
  2826  003C70                     	endif
  2827  003C70  0008               	tblrd		*
  2828  003C72  50F5               	movf	tablat,w,c
  2829  003C74  5C07               	subwf	??_strncmp^0,w,c
  2830  003C76  6E01               	movwf	?_strncmp^0,c
  2831  003C78  6A02               	clrf	(?_strncmp+1)^0,c
  2832  003C7A  A0D8               	btfss	status,0,c
  2833  003C7C  0602               	decf	(?_strncmp+1)^0,f,c
  2834  003C7E                     l1181:
  2835  003C7E  0012               	return		;funcret
  2836  003C80                     __end_of_strncmp:
  2837                           	callstack 0
  2838                           
  2839 ;; *************** function _efgtoa *****************
  2840 ;; Defined at:
  2841 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  2844 ;;		 -> sprintf@f(11), 
  2845 ;;  f               4   22[BANK0 ] PTR struct _IO_FILE
  2846 ;;  c               1   26[BANK0 ] unsigned char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  u               4   78[BANK0 ] unsigned char 
  2849 ;;  g               4   70[BANK0 ] unsigned char 
  2850 ;;  l               4   64[BANK0 ] unsigned char 
  2851 ;;  h               4   60[BANK0 ] unsigned char 
  2852 ;;  ou              4   46[BANK0 ] unsigned char 
  2853 ;;  n               2   76[BANK0 ] int 
  2854 ;;  e               2   74[BANK0 ] int 
  2855 ;;  i               2   68[BANK0 ] int 
  2856 ;;  w               2   56[BANK0 ] int 
  2857 ;;  p               2   54[BANK0 ] int 
  2858 ;;  sign            2   52[BANK0 ] int 
  2859 ;;  d               2   50[BANK0 ] int 
  2860 ;;  m               2   44[BANK0 ] int 
  2861 ;;  ne              2   42[BANK0 ] int 
  2862 ;;  pp              2   40[BANK0 ] int 
  2863 ;;  t               2   38[BANK0 ] int 
  2864 ;;  mode            1   59[BANK0 ] unsigned char 
  2865 ;;  nmode           1   58[BANK0 ] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  2   20[BANK0 ] int 
  2868 ;; Registers used:
  2869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2875 ;;      Params:         0       7       0       0       0       0       0       0       0
  2876 ;;      Locals:         0      50       0       0       0       0       0       0       0
  2877 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2878 ;;      Totals:         0      62       0       0       0       0       0       0       0
  2879 ;;Total ram usage:       62 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 4
  2882 ;; This function calls:
  2883 ;;		___awdiv
  2884 ;;		___awmod
  2885 ;;		___fladd
  2886 ;;		___fldiv
  2887 ;;		___fleq
  2888 ;;		___flge
  2889 ;;		___flmul
  2890 ;;		___flneg
  2891 ;;		___flsub
  2892 ;;		___fltol
  2893 ;;		___fpclassifyf
  2894 ;;		_floorf
  2895 ;;		_isupper
  2896 ;;		_pad
  2897 ;;		_strcpy
  2898 ;;		_tolower
  2899 ;; This function is called by:
  2900 ;;		_vfpfcnvrt
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text5
  2905  000836                     __ptext5:
  2906                           	callstack 0
  2907  000836                     _efgtoa:
  2908                           	callstack 23
  2909  000836                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2911  000836  0E00               	movlw	0
  2912  000838  0100               	movlb	0	; () banked
  2913  00083A  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  2914  00083C  0E00               	movlw	0
  2915  00083E  6F94               	movwf	efgtoa@sign& (0+255),b
  2916  000840                     
  2917                           ; BSR set to: 0
  2918                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2919  000840  C076  F0A6         	movff	efgtoa@f,efgtoa@g
  2920  000844  C077  F0A7         	movff	efgtoa@f+1,efgtoa@g+1
  2921  000848  C078  F0A8         	movff	efgtoa@f+2,efgtoa@g+2
  2922  00084C  C079  F0A9         	movff	efgtoa@f+3,efgtoa@g+3
  2923  000850                     
  2924                           ; BSR set to: 0
  2925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2926  000850  BFA9               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2927  000852  EF2F  F004         	goto	u4500
  2928  000856  EF2D  F004         	goto	u4501
  2929  00085A                     u4501:
  2930  00085A  EF45  F004         	goto	l3989
  2931  00085E                     u4500:
  2932  00085E                     
  2933                           ; BSR set to: 0
  2934                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2935  00085E  0E00               	movlw	0
  2936  000860  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  2937  000862  0E01               	movlw	1
  2938  000864  6F94               	movwf	efgtoa@sign& (0+255),b
  2939  000866                     
  2940                           ; BSR set to: 0
  2941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2942  000866  C0A6  F001         	movff	efgtoa@g,___flneg@f1
  2943  00086A  C0A7  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2944  00086E  C0A8  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2945  000872  C0A9  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2946  000876  EC87  F022         	call	___flneg	;wreg free
  2947  00087A  C001  F0A6         	movff	?___flneg,efgtoa@g
  2948  00087E  C002  F0A7         	movff	?___flneg+1,efgtoa@g+1
  2949  000882  C003  F0A8         	movff	?___flneg+2,efgtoa@g+2
  2950  000886  C004  F0A9         	movff	?___flneg+3,efgtoa@g+3
  2951  00088A                     l3989:
  2952                           
  2953                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2954  00088A  0E00               	movlw	0
  2955  00088C  0100               	movlb	0	; () banked
  2956  00088E  6FAD               	movwf	(efgtoa@n+1)& (0+255),b
  2957  000890  0E00               	movlw	0
  2958  000892  6FAC               	movwf	efgtoa@n& (0+255),b
  2959  000894                     
  2960                           ; BSR set to: 0
  2961                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2962  000894  C122  F098         	movff	_width,efgtoa@w
  2963  000898  C123  F099         	movff	_width+1,efgtoa@w+1
  2964  00089C                     
  2965                           ; BSR set to: 0
  2966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2967  00089C  5194               	movf	efgtoa@sign& (0+255),w,b
  2968  00089E  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2969  0008A0  A4D8               	btfss	status,2,c
  2970  0008A2  EF55  F004         	goto	u4511
  2971  0008A6  EF57  F004         	goto	u4510
  2972  0008AA                     u4511:
  2973  0008AA  EF5E  F004         	goto	l3997
  2974  0008AE                     u4510:
  2975  0008AE                     
  2976                           ; BSR set to: 0
  2977  0008AE  A5FD               	btfss	_flags& (0+255),2,b
  2978  0008B0  EF5C  F004         	goto	u4521
  2979  0008B4  EF5E  F004         	goto	u4520
  2980  0008B8                     u4521:
  2981  0008B8  EF78  F004         	goto	l4009
  2982  0008BC                     u4520:
  2983  0008BC                     l3997:
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2987  0008BC  5194               	movf	efgtoa@sign& (0+255),w,b
  2988  0008BE  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2989  0008C0  A4D8               	btfss	status,2,c
  2990  0008C2  EF65  F004         	goto	u4531
  2991  0008C6  EF67  F004         	goto	u4530
  2992  0008CA                     u4531:
  2993  0008CA  EF6D  F004         	goto	l4001
  2994  0008CE                     u4530:
  2995  0008CE                     
  2996                           ; BSR set to: 0
  2997  0008CE  0E00               	movlw	0
  2998  0008D0  6F81               	movwf	(_efgtoa$1184+1)& (0+255),b
  2999  0008D2  0E2B               	movlw	43
  3000  0008D4  6F80               	movwf	_efgtoa$1184& (0+255),b
  3001  0008D6  EF71  F004         	goto	l4003
  3002  0008DA                     l4001:
  3003                           
  3004                           ; BSR set to: 0
  3005  0008DA  0E00               	movlw	0
  3006  0008DC  6F81               	movwf	(_efgtoa$1184+1)& (0+255),b
  3007  0008DE  0E2D               	movlw	45
  3008  0008E0  6F80               	movwf	_efgtoa$1184& (0+255),b
  3009  0008E2                     l4003:
  3010                           
  3011                           ; BSR set to: 0
  3012  0008E2  C080  F124         	movff	_efgtoa$1184,_dbuf
  3013  0008E6                     
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3016  0008E6  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  3017  0008E8  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  3018  0008EA                     
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3021  0008EA  0798               	decf	efgtoa@w& (0+255),f,b
  3022  0008EC  A0D8               	btfss	status,0,c
  3023  0008EE  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  3024  0008F0                     l4009:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3028  0008F0  C0A6  F001         	movff	efgtoa@g,___fpclassifyf@x
  3029  0008F4  C0A7  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3030  0008F8  C0A8  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3031  0008FC  C0A9  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3032  000900  ECE2  F01C         	call	___fpclassifyf	;wreg free
  3033  000904  0401               	decf	?___fpclassifyf^0,w,c
  3034  000906  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3035  000908  A4D8               	btfss	status,2,c
  3036  00090A  EF89  F004         	goto	u4541
  3037  00090E  EF8B  F004         	goto	u4540
  3038  000912                     u4541:
  3039  000912  EFD5  F004         	goto	l4027
  3040  000916                     u4540:
  3041  000916  0EBF               	movlw	191
  3042  000918  0100               	movlb	0	; () banked
  3043  00091A  6F7B               	movwf	??_efgtoa& (0+255),b
  3044  00091C  0EFF               	movlw	255
  3045  00091E  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  3046  000920  517A               	movf	efgtoa@c& (0+255),w,b
  3047  000922  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  3048  000924  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  3049  000926  517B               	movf	??_efgtoa& (0+255),w,b
  3050  000928  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  3051  00092A  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  3052  00092C  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3053  00092E  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  3054  000930  E107               	bnz	u4551
  3055  000932  0E1A               	movlw	26
  3056  000934  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  3057  000936  B0D8               	btfsc	status,0,c
  3058  000938  EFA0  F004         	goto	u4551
  3059  00093C  EFA2  F004         	goto	u4550
  3060  000940                     u4551:
  3061  000940  EFB0  F004         	goto	l4019
  3062  000944                     u4550:
  3063  000944                     
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3066  000944  0E24               	movlw	low _dbuf
  3067  000946  25AC               	addwf	efgtoa@n& (0+255),w,b
  3068  000948  6E01               	movwf	strcpy@dest^0,c
  3069  00094A  0E01               	movlw	high _dbuf
  3070  00094C  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3071  00094E  6E02               	movwf	(strcpy@dest+1)^0,c
  3072  000950  0E22               	movlw	low STR_2
  3073  000952  6E03               	movwf	strcpy@src^0,c
  3074  000954  0E08               	movlw	high STR_2
  3075  000956  6E04               	movwf	(strcpy@src+1)^0,c
  3076  000958  ECFC  F020         	call	_strcpy	;wreg free
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3079  00095C  EFBC  F004         	goto	l4021
  3080  000960                     l4019:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3084  000960  0E24               	movlw	low _dbuf
  3085  000962  25AC               	addwf	efgtoa@n& (0+255),w,b
  3086  000964  6E01               	movwf	strcpy@dest^0,c
  3087  000966  0E01               	movlw	high _dbuf
  3088  000968  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3089  00096A  6E02               	movwf	(strcpy@dest+1)^0,c
  3090  00096C  0E2A               	movlw	low STR_3
  3091  00096E  6E03               	movwf	strcpy@src^0,c
  3092  000970  0E08               	movlw	high STR_3
  3093  000972  6E04               	movwf	(strcpy@src+1)^0,c
  3094  000974  ECFC  F020         	call	_strcpy	;wreg free
  3095  000978                     l4021:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3098  000978  0100               	movlb	0	; () banked
  3099  00097A  0EFD               	movlw	253
  3100  00097C  2798               	addwf	efgtoa@w& (0+255),f,b
  3101  00097E  0EFF               	movlw	255
  3102  000980  2399               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3103  000982                     l4023:
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3106  000982  C074  F011         	movff	efgtoa@fp,pad@fp
  3107  000986  C075  F012         	movff	efgtoa@fp+1,pad@fp+1
  3108  00098A  0E24               	movlw	low _dbuf
  3109  00098C  6E13               	movwf	pad@buf^0,c
  3110  00098E  0E01               	movlw	high _dbuf
  3111  000990  6E14               	movwf	(pad@buf+1)^0,c
  3112  000992  C098  F015         	movff	efgtoa@w,pad@p
  3113  000996  C099  F016         	movff	efgtoa@w+1,pad@p+1
  3114  00099A  ECA5  F01E         	call	_pad	;wreg free
  3115  00099E  C011  F074         	movff	?_pad,?_efgtoa
  3116  0009A2  C012  F075         	movff	?_pad+1,?_efgtoa+1
  3117  0009A6  EF1F  F00A         	goto	l945
  3118  0009AA                     l4027:
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  3121  0009AA  C0A6  F001         	movff	efgtoa@g,___fpclassifyf@x
  3122  0009AE  C0A7  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3123  0009B2  C0A8  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3124  0009B6  C0A9  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3125  0009BA  ECE2  F01C         	call	___fpclassifyf	;wreg free
  3126  0009BE  5001               	movf	?___fpclassifyf^0,w,c
  3127  0009C0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3128  0009C2  A4D8               	btfss	status,2,c
  3129  0009C4  EFE6  F004         	goto	u4561
  3130  0009C8  EFE8  F004         	goto	u4560
  3131  0009CC                     u4561:
  3132  0009CC  EF1B  F005         	goto	l4045
  3133  0009D0                     u4560:
  3134  0009D0  0EBF               	movlw	191
  3135  0009D2  0100               	movlb	0	; () banked
  3136  0009D4  6F7B               	movwf	??_efgtoa& (0+255),b
  3137  0009D6  0EFF               	movlw	255
  3138  0009D8  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  3139  0009DA  517A               	movf	efgtoa@c& (0+255),w,b
  3140  0009DC  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  3141  0009DE  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  3142  0009E0  517B               	movf	??_efgtoa& (0+255),w,b
  3143  0009E2  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  3144  0009E4  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  3145  0009E6  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3146  0009E8  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  3147  0009EA  E107               	bnz	u4571
  3148  0009EC  0E1A               	movlw	26
  3149  0009EE  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  3150  0009F0  B0D8               	btfsc	status,0,c
  3151  0009F2  EFFD  F004         	goto	u4571
  3152  0009F6  EFFF  F004         	goto	u4570
  3153  0009FA                     u4571:
  3154  0009FA  EF0D  F005         	goto	l4037
  3155  0009FE                     u4570:
  3156  0009FE                     
  3157                           ; BSR set to: 0
  3158                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3159  0009FE  0E24               	movlw	low _dbuf
  3160  000A00  25AC               	addwf	efgtoa@n& (0+255),w,b
  3161  000A02  6E01               	movwf	strcpy@dest^0,c
  3162  000A04  0E01               	movlw	high _dbuf
  3163  000A06  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3164  000A08  6E02               	movwf	(strcpy@dest+1)^0,c
  3165  000A0A  0E26               	movlw	low STR_6
  3166  000A0C  6E03               	movwf	strcpy@src^0,c
  3167  000A0E  0E08               	movlw	high STR_6
  3168  000A10  6E04               	movwf	(strcpy@src+1)^0,c
  3169  000A12  ECFC  F020         	call	_strcpy	;wreg free
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3172  000A16  EFBC  F004         	goto	l4021
  3173  000A1A                     l4037:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3177  000A1A  0E24               	movlw	low _dbuf
  3178  000A1C  25AC               	addwf	efgtoa@n& (0+255),w,b
  3179  000A1E  6E01               	movwf	strcpy@dest^0,c
  3180  000A20  0E01               	movlw	high _dbuf
  3181  000A22  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3182  000A24  6E02               	movwf	(strcpy@dest+1)^0,c
  3183  000A26  0E2E               	movlw	low STR_7
  3184  000A28  6E03               	movwf	strcpy@src^0,c
  3185  000A2A  0E08               	movlw	high STR_7
  3186  000A2C  6E04               	movwf	(strcpy@src+1)^0,c
  3187  000A2E  ECFC  F020         	call	_strcpy	;wreg free
  3188  000A32  EFBC  F004         	goto	l4021
  3189  000A36                     l4045:
  3190                           
  3191                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3192  000A36  0E00               	movlw	0
  3193  000A38  0100               	movlb	0	; () banked
  3194  000A3A  6FAE               	movwf	efgtoa@u& (0+255),b
  3195  000A3C  0E00               	movlw	0
  3196  000A3E  6FAF               	movwf	(efgtoa@u+1)& (0+255),b
  3197  000A40  0E80               	movlw	128
  3198  000A42  6FB0               	movwf	(efgtoa@u+2)& (0+255),b
  3199  000A44  0E3F               	movlw	63
  3200  000A46  6FB1               	movwf	(efgtoa@u+3)& (0+255),b
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3203  000A48  0E00               	movlw	0
  3204  000A4A  6FAB               	movwf	(efgtoa@e+1)& (0+255),b
  3205  000A4C  0E00               	movlw	0
  3206  000A4E  6FAA               	movwf	efgtoa@e& (0+255),b
  3207  000A50                     
  3208                           ; BSR set to: 0
  3209                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3210  000A50  C0A6  F001         	movff	efgtoa@g,___fleq@ff1
  3211  000A54  C0A7  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3212  000A58  C0A8  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3213  000A5C  C0A9  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3214  000A60  0E00               	movlw	0
  3215  000A62  6E05               	movwf	___fleq@ff2^0,c
  3216  000A64  0E00               	movlw	0
  3217  000A66  6E06               	movwf	(___fleq@ff2+1)^0,c
  3218  000A68  0E00               	movlw	0
  3219  000A6A  6E07               	movwf	(___fleq@ff2+2)^0,c
  3220  000A6C  0E00               	movlw	0
  3221  000A6E  6E08               	movwf	(___fleq@ff2+3)^0,c
  3222  000A70  EC20  F020         	call	___fleq	;wreg free
  3223  000A74  B0D8               	btfsc	status,0,c
  3224  000A76  EF3F  F005         	goto	u4581
  3225  000A7A  EF41  F005         	goto	u4580
  3226  000A7E                     u4581:
  3227  000A7E  EFC4  F005         	goto	l4063
  3228  000A82                     u4580:
  3229  000A82  EF60  F005         	goto	l4055
  3230  000A86                     l4051:
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3233  000A86  C0AE  F02B         	movff	efgtoa@u,___flmul@b
  3234  000A8A  C0AF  F02C         	movff	efgtoa@u+1,___flmul@b+1
  3235  000A8E  C0B0  F02D         	movff	efgtoa@u+2,___flmul@b+2
  3236  000A92  C0B1  F02E         	movff	efgtoa@u+3,___flmul@b+3
  3237  000A96  0E00               	movlw	0
  3238  000A98  6E2F               	movwf	___flmul@a^0,c
  3239  000A9A  0E00               	movlw	0
  3240  000A9C  6E30               	movwf	(___flmul@a+1)^0,c
  3241  000A9E  0E20               	movlw	32
  3242  000AA0  6E31               	movwf	(___flmul@a+2)^0,c
  3243  000AA2  0E41               	movlw	65
  3244  000AA4  6E32               	movwf	(___flmul@a+3)^0,c
  3245  000AA6  ECD5  F00F         	call	___flmul	;wreg free
  3246  000AAA  C02B  F0AE         	movff	?___flmul,efgtoa@u
  3247  000AAE  C02C  F0AF         	movff	?___flmul+1,efgtoa@u+1
  3248  000AB2  C02D  F0B0         	movff	?___flmul+2,efgtoa@u+2
  3249  000AB6  C02E  F0B1         	movff	?___flmul+3,efgtoa@u+3
  3250  000ABA                     
  3251                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3252  000ABA  0100               	movlb	0	; () banked
  3253  000ABC  4BAA               	infsnz	efgtoa@e& (0+255),f,b
  3254  000ABE  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  3255  000AC0                     l4055:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3258  000AC0  C0A6  F044         	movff	efgtoa@g,___flge@ff1
  3259  000AC4  C0A7  F045         	movff	efgtoa@g+1,___flge@ff1+1
  3260  000AC8  C0A8  F046         	movff	efgtoa@g+2,___flge@ff1+2
  3261  000ACC  C0A9  F047         	movff	efgtoa@g+3,___flge@ff1+3
  3262  000AD0  0E00               	movlw	0
  3263  000AD2  6E2F               	movwf	___flmul@a^0,c
  3264  000AD4  0E00               	movlw	0
  3265  000AD6  6E30               	movwf	(___flmul@a+1)^0,c
  3266  000AD8  0E20               	movlw	32
  3267  000ADA  6E31               	movwf	(___flmul@a+2)^0,c
  3268  000ADC  0E41               	movlw	65
  3269  000ADE  6E32               	movwf	(___flmul@a+3)^0,c
  3270  000AE0  C0AE  F02B         	movff	efgtoa@u,___flmul@b
  3271  000AE4  C0AF  F02C         	movff	efgtoa@u+1,___flmul@b+1
  3272  000AE8  C0B0  F02D         	movff	efgtoa@u+2,___flmul@b+2
  3273  000AEC  C0B1  F02E         	movff	efgtoa@u+3,___flmul@b+3
  3274  000AF0  ECD5  F00F         	call	___flmul	;wreg free
  3275  000AF4  C02B  F048         	movff	?___flmul,___flge@ff2
  3276  000AF8  C02C  F049         	movff	?___flmul+1,___flge@ff2+1
  3277  000AFC  C02D  F04A         	movff	?___flmul+2,___flge@ff2+2
  3278  000B00  C02E  F04B         	movff	?___flmul+3,___flge@ff2+3
  3279  000B04  EC60  F01C         	call	___flge	;wreg free
  3280  000B08  B0D8               	btfsc	status,0,c
  3281  000B0A  EF89  F005         	goto	u4591
  3282  000B0E  EF8B  F005         	goto	u4590
  3283  000B12                     u4591:
  3284  000B12  EF43  F005         	goto	l4051
  3285  000B16                     u4590:
  3286  000B16  EFAB  F005         	goto	l4061
  3287  000B1A                     l4057:
  3288                           
  3289                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3290  000B1A  C0AE  F044         	movff	efgtoa@u,___fldiv@b
  3291  000B1E  C0AF  F045         	movff	efgtoa@u+1,___fldiv@b+1
  3292  000B22  C0B0  F046         	movff	efgtoa@u+2,___fldiv@b+2
  3293  000B26  C0B1  F047         	movff	efgtoa@u+3,___fldiv@b+3
  3294  000B2A  0E00               	movlw	0
  3295  000B2C  6E48               	movwf	___fldiv@a^0,c
  3296  000B2E  0E00               	movlw	0
  3297  000B30  6E49               	movwf	(___fldiv@a+1)^0,c
  3298  000B32  0E20               	movlw	32
  3299  000B34  6E4A               	movwf	(___fldiv@a+2)^0,c
  3300  000B36  0E41               	movlw	65
  3301  000B38  6E4B               	movwf	(___fldiv@a+3)^0,c
  3302  000B3A  ECEA  F011         	call	___fldiv	;wreg free
  3303  000B3E  C044  F0AE         	movff	?___fldiv,efgtoa@u
  3304  000B42  C045  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  3305  000B46  C046  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  3306  000B4A  C047  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  3307  000B4E                     
  3308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3309  000B4E  0100               	movlb	0	; () banked
  3310  000B50  07AA               	decf	efgtoa@e& (0+255),f,b
  3311  000B52  A0D8               	btfss	status,0,c
  3312  000B54  07AB               	decf	(efgtoa@e+1)& (0+255),f,b
  3313  000B56                     l4061:
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3316  000B56  C0A6  F044         	movff	efgtoa@g,___flge@ff1
  3317  000B5A  C0A7  F045         	movff	efgtoa@g+1,___flge@ff1+1
  3318  000B5E  C0A8  F046         	movff	efgtoa@g+2,___flge@ff1+2
  3319  000B62  C0A9  F047         	movff	efgtoa@g+3,___flge@ff1+3
  3320  000B66  C0AE  F048         	movff	efgtoa@u,___flge@ff2
  3321  000B6A  C0AF  F049         	movff	efgtoa@u+1,___flge@ff2+1
  3322  000B6E  C0B0  F04A         	movff	efgtoa@u+2,___flge@ff2+2
  3323  000B72  C0B1  F04B         	movff	efgtoa@u+3,___flge@ff2+3
  3324  000B76  EC60  F01C         	call	___flge	;wreg free
  3325  000B7A  A0D8               	btfss	status,0,c
  3326  000B7C  EFC2  F005         	goto	u4601
  3327  000B80  EFC4  F005         	goto	u4600
  3328  000B84                     u4601:
  3329  000B84  EF8D  F005         	goto	l4057
  3330  000B88                     u4600:
  3331  000B88                     l4063:
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3334  000B88  C07A  F007         	movff	efgtoa@c,tolower@c
  3335  000B8C  6A08               	clrf	(tolower@c+1)^0,c
  3336  000B8E  ECA1  F021         	call	_tolower	;wreg free
  3337  000B92  5007               	movf	?_tolower^0,w,c
  3338  000B94  0100               	movlb	0	; () banked
  3339  000B96  6F9B               	movwf	efgtoa@mode& (0+255),b
  3340  000B98                     
  3341                           ; BSR set to: 0
  3342                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3343  000B98  C09B  F09A         	movff	efgtoa@mode,efgtoa@nmode
  3344  000B9C                     
  3345                           ; BSR set to: 0
  3346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3347  000B9C  0E67               	movlw	103
  3348  000B9E  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3349  000BA0  A4D8               	btfss	status,2,c
  3350  000BA2  EFD5  F005         	goto	u4611
  3351  000BA6  EFD7  F005         	goto	u4610
  3352  000BAA                     u4611:
  3353  000BAA  EFFD  F005         	goto	l4077
  3354  000BAE                     u4610:
  3355  000BAE                     
  3356                           ; BSR set to: 0
  3357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3358  000BAE  51FB               	movf	_prec& (0+255),w,b
  3359  000BB0  11FC               	iorwf	(_prec+1)& (0+255),w,b
  3360  000BB2  A4D8               	btfss	status,2,c
  3361  000BB4  EFDE  F005         	goto	u4621
  3362  000BB8  EFE0  F005         	goto	u4620
  3363  000BBC                     u4621:
  3364  000BBC  EFE4  F005         	goto	l4073
  3365  000BC0                     u4620:
  3366  000BC0                     
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3369  000BC0  0E00               	movlw	0
  3370  000BC2  6FFC               	movwf	(_prec+1)& (0+255),b
  3371  000BC4  0E01               	movlw	1
  3372  000BC6  6FFB               	movwf	_prec& (0+255),b
  3373  000BC8                     l4073:
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3377  000BC8  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  3378  000BCA  EFF1  F005         	goto	u4630
  3379  000BCE  51FC               	movf	(_prec+1)& (0+255),w,b
  3380  000BD0  E106               	bnz	u4631
  3381  000BD2  05FB               	decf	_prec& (0+255),w,b
  3382  000BD4  B0D8               	btfsc	status,0,c
  3383  000BD6  EFEF  F005         	goto	u4631
  3384  000BDA  EFF1  F005         	goto	u4630
  3385  000BDE                     u4631:
  3386  000BDE  EFF7  F005         	goto	l961
  3387  000BE2                     u4630:
  3388  000BE2                     l4075:
  3389                           
  3390                           ; BSR set to: 0
  3391  000BE2  0E00               	movlw	0
  3392  000BE4  6F97               	movwf	(efgtoa@p+1)& (0+255),b
  3393  000BE6  0E06               	movlw	6
  3394  000BE8  6F96               	movwf	efgtoa@p& (0+255),b
  3395  000BEA  EF06  F006         	goto	l4083
  3396  000BEE                     l961:
  3397                           
  3398                           ; BSR set to: 0
  3399  000BEE  C0FB  F096         	movff	_prec,efgtoa@p
  3400  000BF2  C0FC  F097         	movff	_prec+1,efgtoa@p+1
  3401  000BF6  EF06  F006         	goto	l4083
  3402  000BFA                     l4077:
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3406  000BFA  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  3407  000BFC  EF02  F006         	goto	u4641
  3408  000C00  EF04  F006         	goto	u4640
  3409  000C04                     u4641:
  3410  000C04  EFF1  F005         	goto	l4075
  3411  000C08                     u4640:
  3412  000C08  EFF7  F005         	goto	l961
  3413  000C0C                     l4083:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3417  000C0C  0E67               	movlw	103
  3418  000C0E  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3419  000C10  A4D8               	btfss	status,2,c
  3420  000C12  EF0D  F006         	goto	u4651
  3421  000C16  EF0F  F006         	goto	u4650
  3422  000C1A                     u4651:
  3423  000C1A  EF3E  F006         	goto	l4093
  3424  000C1E                     u4650:
  3425  000C1E                     
  3426                           ; BSR set to: 0
  3427                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3428  000C1E  AFAB               	btfss	(efgtoa@e+1)& (0+255),7,b
  3429  000C20  EF1D  F006         	goto	u4660
  3430  000C24  0EFC               	movlw	252
  3431  000C26  5DAA               	subwf	efgtoa@e& (0+255),w,b
  3432  000C28  0EFF               	movlw	255
  3433  000C2A  59AB               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3434  000C2C  A0D8               	btfss	status,0,c
  3435  000C2E  EF1B  F006         	goto	u4661
  3436  000C32  EF1D  F006         	goto	u4660
  3437  000C36                     u4661:
  3438  000C36  EF3C  F006         	goto	l4091
  3439  000C3A                     u4660:
  3440  000C3A                     
  3441                           ; BSR set to: 0
  3442  000C3A  0EFF               	movlw	255
  3443  000C3C  6F7B               	movwf	??_efgtoa& (0+255),b
  3444  000C3E  0EFF               	movlw	255
  3445  000C40  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  3446  000C42  C096  F07D         	movff	efgtoa@p,??_efgtoa+2
  3447  000C46  C097  F07E         	movff	efgtoa@p+1,??_efgtoa+3
  3448  000C4A  517B               	movf	??_efgtoa& (0+255),w,b
  3449  000C4C  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  3450  000C4E  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  3451  000C50  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3452  000C52  51AA               	movf	efgtoa@e& (0+255),w,b
  3453  000C54  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  3454  000C56  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  3455  000C58  0A80               	xorlw	128
  3456  000C5A  6F7F               	movwf	(??_efgtoa+4)& (0+255),b
  3457  000C5C  51AB               	movf	(efgtoa@e+1)& (0+255),w,b
  3458  000C5E  0A80               	xorlw	128
  3459  000C60  597F               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3460  000C62  A0D8               	btfss	status,0,c
  3461  000C64  EF36  F006         	goto	u4671
  3462  000C68  EF38  F006         	goto	u4670
  3463  000C6C                     u4671:
  3464  000C6C  EF3C  F006         	goto	l4091
  3465  000C70                     u4670:
  3466  000C70                     
  3467                           ; BSR set to: 0
  3468                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3469  000C70  0E66               	movlw	102
  3470  000C72  6F9A               	movwf	efgtoa@nmode& (0+255),b
  3471                           
  3472                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3473  000C74  EF3E  F006         	goto	l4093
  3474  000C78                     l4091:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3478  000C78  0E65               	movlw	101
  3479  000C7A  6F9A               	movwf	efgtoa@nmode& (0+255),b
  3480  000C7C                     l4093:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3484  000C7C  C096  F08C         	movff	efgtoa@p,efgtoa@m
  3485  000C80  C097  F08D         	movff	efgtoa@p+1,efgtoa@m+1
  3486  000C84                     
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3489  000C84  0E67               	movlw	103
  3490  000C86  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3491  000C88  A4D8               	btfss	status,2,c
  3492  000C8A  EF49  F006         	goto	u4681
  3493  000C8E  EF4B  F006         	goto	u4680
  3494  000C92                     u4681:
  3495  000C92  EF5B  F006         	goto	l4101
  3496  000C96                     u4680:
  3497  000C96                     
  3498                           ; BSR set to: 0
  3499  000C96  0E66               	movlw	102
  3500  000C98  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3501  000C9A  A4D8               	btfss	status,2,c
  3502  000C9C  EF52  F006         	goto	u4691
  3503  000CA0  EF54  F006         	goto	u4690
  3504  000CA4                     u4691:
  3505  000CA4  EF5D  F006         	goto	l4103
  3506  000CA8                     u4690:
  3507  000CA8                     
  3508                           ; BSR set to: 0
  3509  000CA8  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3510  000CAA  EF5B  F006         	goto	u4700
  3511  000CAE  EF59  F006         	goto	u4701
  3512  000CB2                     u4701:
  3513  000CB2  EF5D  F006         	goto	l4103
  3514  000CB6                     u4700:
  3515  000CB6                     l4101:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3519  000CB6  4B8C               	infsnz	efgtoa@m& (0+255),f,b
  3520  000CB8  2B8D               	incf	(efgtoa@m+1)& (0+255),f,b
  3521  000CBA                     l4103:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3525  000CBA  0E66               	movlw	102
  3526  000CBC  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3527  000CBE  A4D8               	btfss	status,2,c
  3528  000CC0  EF64  F006         	goto	u4711
  3529  000CC4  EF66  F006         	goto	u4710
  3530  000CC8                     u4711:
  3531  000CC8  EF86  F006         	goto	l4113
  3532  000CCC                     u4710:
  3533  000CCC                     
  3534                           ; BSR set to: 0
  3535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3536  000CCC  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3537  000CCE  EF6D  F006         	goto	u4720
  3538  000CD2  EF6B  F006         	goto	u4721
  3539  000CD6                     u4721:
  3540  000CD6  EF79  F006         	goto	l4109
  3541  000CDA                     u4720:
  3542  000CDA                     
  3543                           ; BSR set to: 0
  3544                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3545  000CDA  0E00               	movlw	0
  3546  000CDC  6FAE               	movwf	efgtoa@u& (0+255),b
  3547  000CDE  0E00               	movlw	0
  3548  000CE0  6FAF               	movwf	(efgtoa@u+1)& (0+255),b
  3549  000CE2  0E80               	movlw	128
  3550  000CE4  6FB0               	movwf	(efgtoa@u+2)& (0+255),b
  3551  000CE6  0E3F               	movlw	63
  3552  000CE8  6FB1               	movwf	(efgtoa@u+3)& (0+255),b
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3555  000CEA  0E00               	movlw	0
  3556  000CEC  6FAB               	movwf	(efgtoa@e+1)& (0+255),b
  3557  000CEE  0E00               	movlw	0
  3558  000CF0  6FAA               	movwf	efgtoa@e& (0+255),b
  3559  000CF2                     l4109:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3563  000CF2  0E67               	movlw	103
  3564  000CF4  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3565  000CF6  B4D8               	btfsc	status,2,c
  3566  000CF8  EF80  F006         	goto	u4731
  3567  000CFC  EF82  F006         	goto	u4730
  3568  000D00                     u4731:
  3569  000D00  EF86  F006         	goto	l4113
  3570  000D04                     u4730:
  3571  000D04                     
  3572                           ; BSR set to: 0
  3573                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3574  000D04  51AA               	movf	efgtoa@e& (0+255),w,b
  3575  000D06  278C               	addwf	efgtoa@m& (0+255),f,b
  3576  000D08  51AB               	movf	(efgtoa@e+1)& (0+255),w,b
  3577  000D0A  238D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3578  000D0C                     l4113:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3582  000D0C  0E00               	movlw	0
  3583  000D0E  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  3584  000D10  0E00               	movlw	0
  3585  000D12  6FA4               	movwf	efgtoa@i& (0+255),b
  3586  000D14                     
  3587                           ; BSR set to: 0
  3588                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3589  000D14  C0A6  F09C         	movff	efgtoa@g,efgtoa@h
  3590  000D18  C0A7  F09D         	movff	efgtoa@g+1,efgtoa@h+1
  3591  000D1C  C0A8  F09E         	movff	efgtoa@g+2,efgtoa@h+2
  3592  000D20  C0A9  F09F         	movff	efgtoa@g+3,efgtoa@h+3
  3593  000D24                     
  3594                           ; BSR set to: 0
  3595                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3596  000D24  C0AE  F08E         	movff	efgtoa@u,efgtoa@ou
  3597  000D28  C0AF  F08F         	movff	efgtoa@u+1,efgtoa@ou+1
  3598  000D2C  C0B0  F090         	movff	efgtoa@u+2,efgtoa@ou+2
  3599  000D30  C0B1  F091         	movff	efgtoa@u+3,efgtoa@ou+3
  3600                           
  3601                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3602  000D34  EF17  F007         	goto	l4127
  3603  000D38                     l4119:
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3607  000D38  C09C  F044         	movff	efgtoa@h,___fldiv@b
  3608  000D3C  C09D  F045         	movff	efgtoa@h+1,___fldiv@b+1
  3609  000D40  C09E  F046         	movff	efgtoa@h+2,___fldiv@b+2
  3610  000D44  C09F  F047         	movff	efgtoa@h+3,___fldiv@b+3
  3611  000D48  C0AE  F048         	movff	efgtoa@u,___fldiv@a
  3612  000D4C  C0AF  F049         	movff	efgtoa@u+1,___fldiv@a+1
  3613  000D50  C0B0  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  3614  000D54  C0B1  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  3615  000D58  ECEA  F011         	call	___fldiv	;wreg free
  3616  000D5C  C044  F060         	movff	?___fldiv,floorf@x
  3617  000D60  C045  F061         	movff	?___fldiv+1,floorf@x+1
  3618  000D64  C046  F062         	movff	?___fldiv+2,floorf@x+2
  3619  000D68  C047  F063         	movff	?___fldiv+3,floorf@x+3
  3620  000D6C  ECD6  F017         	call	_floorf	;wreg free
  3621  000D70  C060  F0A0         	movff	?_floorf,efgtoa@l
  3622  000D74  C061  F0A1         	movff	?_floorf+1,efgtoa@l+1
  3623  000D78  C062  F0A2         	movff	?_floorf+2,efgtoa@l+2
  3624  000D7C  C063  F0A3         	movff	?_floorf+3,efgtoa@l+3
  3625                           
  3626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3627  000D80  C0A0  F060         	movff	efgtoa@l,___fltol@f1
  3628  000D84  C0A1  F061         	movff	efgtoa@l+1,___fltol@f1+1
  3629  000D88  C0A2  F062         	movff	efgtoa@l+2,___fltol@f1+2
  3630  000D8C  C0A3  F063         	movff	efgtoa@l+3,___fltol@f1+3
  3631  000D90  ECDC  F01B         	call	___fltol	;wreg free
  3632  000D94  C060  F092         	movff	?___fltol,efgtoa@d
  3633  000D98  C061  F093         	movff	?___fltol+1,efgtoa@d+1
  3634  000D9C                     
  3635                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3636  000D9C  C09C  F023         	movff	efgtoa@h,___flsub@b
  3637  000DA0  C09D  F024         	movff	efgtoa@h+1,___flsub@b+1
  3638  000DA4  C09E  F025         	movff	efgtoa@h+2,___flsub@b+2
  3639  000DA8  C09F  F026         	movff	efgtoa@h+3,___flsub@b+3
  3640  000DAC  C0AE  F02F         	movff	efgtoa@u,___flmul@a
  3641  000DB0  C0AF  F030         	movff	efgtoa@u+1,___flmul@a+1
  3642  000DB4  C0B0  F031         	movff	efgtoa@u+2,___flmul@a+2
  3643  000DB8  C0B1  F032         	movff	efgtoa@u+3,___flmul@a+3
  3644  000DBC  C0A0  F02B         	movff	efgtoa@l,___flmul@b
  3645  000DC0  C0A1  F02C         	movff	efgtoa@l+1,___flmul@b+1
  3646  000DC4  C0A2  F02D         	movff	efgtoa@l+2,___flmul@b+2
  3647  000DC8  C0A3  F02E         	movff	efgtoa@l+3,___flmul@b+3
  3648  000DCC  ECD5  F00F         	call	___flmul	;wreg free
  3649  000DD0  C02B  F027         	movff	?___flmul,___flsub@a
  3650  000DD4  C02C  F028         	movff	?___flmul+1,___flsub@a+1
  3651  000DD8  C02D  F029         	movff	?___flmul+2,___flsub@a+2
  3652  000DDC  C02E  F02A         	movff	?___flmul+3,___flsub@a+3
  3653  000DE0  ECC4  F021         	call	___flsub	;wreg free
  3654  000DE4  C023  F09C         	movff	?___flsub,efgtoa@h
  3655  000DE8  C024  F09D         	movff	?___flsub+1,efgtoa@h+1
  3656  000DEC  C025  F09E         	movff	?___flsub+2,efgtoa@h+2
  3657  000DF0  C026  F09F         	movff	?___flsub+3,efgtoa@h+3
  3658  000DF4                     
  3659                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3660  000DF4  C0AE  F044         	movff	efgtoa@u,___fldiv@b
  3661  000DF8  C0AF  F045         	movff	efgtoa@u+1,___fldiv@b+1
  3662  000DFC  C0B0  F046         	movff	efgtoa@u+2,___fldiv@b+2
  3663  000E00  C0B1  F047         	movff	efgtoa@u+3,___fldiv@b+3
  3664  000E04  0E00               	movlw	0
  3665  000E06  6E48               	movwf	___fldiv@a^0,c
  3666  000E08  0E00               	movlw	0
  3667  000E0A  6E49               	movwf	(___fldiv@a+1)^0,c
  3668  000E0C  0E20               	movlw	32
  3669  000E0E  6E4A               	movwf	(___fldiv@a+2)^0,c
  3670  000E10  0E41               	movlw	65
  3671  000E12  6E4B               	movwf	(___fldiv@a+3)^0,c
  3672  000E14  ECEA  F011         	call	___fldiv	;wreg free
  3673  000E18  C044  F0AE         	movff	?___fldiv,efgtoa@u
  3674  000E1C  C045  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  3675  000E20  C046  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  3676  000E24  C047  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  3677  000E28                     
  3678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3679  000E28  0100               	movlb	0	; () banked
  3680  000E2A  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  3681  000E2C  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  3682  000E2E                     l4127:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3686  000E2E  518C               	movf	efgtoa@m& (0+255),w,b
  3687  000E30  5DA4               	subwf	efgtoa@i& (0+255),w,b
  3688  000E32  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  3689  000E34  0A80               	xorlw	128
  3690  000E36  6F7B               	movwf	??_efgtoa& (0+255),b
  3691  000E38  518D               	movf	(efgtoa@m+1)& (0+255),w,b
  3692  000E3A  0A80               	xorlw	128
  3693  000E3C  597B               	subwfb	??_efgtoa& (0+255),w,b
  3694  000E3E  A0D8               	btfss	status,0,c
  3695  000E40  EF24  F007         	goto	u4741
  3696  000E44  EF26  F007         	goto	u4740
  3697  000E48                     u4741:
  3698  000E48  EF9C  F006         	goto	l4119
  3699  000E4C                     u4740:
  3700  000E4C                     
  3701                           ; BSR set to: 0
  3702                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3703  000E4C  C0AE  F02B         	movff	efgtoa@u,___flmul@b
  3704  000E50  C0AF  F02C         	movff	efgtoa@u+1,___flmul@b+1
  3705  000E54  C0B0  F02D         	movff	efgtoa@u+2,___flmul@b+2
  3706  000E58  C0B1  F02E         	movff	efgtoa@u+3,___flmul@b+3
  3707  000E5C  0E00               	movlw	0
  3708  000E5E  6E2F               	movwf	___flmul@a^0,c
  3709  000E60  0E00               	movlw	0
  3710  000E62  6E30               	movwf	(___flmul@a+1)^0,c
  3711  000E64  0EA0               	movlw	160
  3712  000E66  6E31               	movwf	(___flmul@a+2)^0,c
  3713  000E68  0E40               	movlw	64
  3714  000E6A  6E32               	movwf	(___flmul@a+3)^0,c
  3715  000E6C  ECD5  F00F         	call	___flmul	;wreg free
  3716  000E70  C02B  F0A0         	movff	?___flmul,efgtoa@l
  3717  000E74  C02C  F0A1         	movff	?___flmul+1,efgtoa@l+1
  3718  000E78  C02D  F0A2         	movff	?___flmul+2,efgtoa@l+2
  3719  000E7C  C02E  F0A3         	movff	?___flmul+3,efgtoa@l+3
  3720  000E80                     
  3721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3722  000E80  C09C  F044         	movff	efgtoa@h,___flge@ff1
  3723  000E84  C09D  F045         	movff	efgtoa@h+1,___flge@ff1+1
  3724  000E88  C09E  F046         	movff	efgtoa@h+2,___flge@ff1+2
  3725  000E8C  C09F  F047         	movff	efgtoa@h+3,___flge@ff1+3
  3726  000E90  C0A0  F048         	movff	efgtoa@l,___flge@ff2
  3727  000E94  C0A1  F049         	movff	efgtoa@l+1,___flge@ff2+1
  3728  000E98  C0A2  F04A         	movff	efgtoa@l+2,___flge@ff2+2
  3729  000E9C  C0A3  F04B         	movff	efgtoa@l+3,___flge@ff2+3
  3730  000EA0  EC60  F01C         	call	___flge	;wreg free
  3731  000EA4  B0D8               	btfsc	status,0,c
  3732  000EA6  EF57  F007         	goto	u4751
  3733  000EAA  EF59  F007         	goto	u4750
  3734  000EAE                     u4751:
  3735  000EAE  EF64  F007         	goto	l4135
  3736  000EB2                     u4750:
  3737  000EB2                     
  3738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3739  000EB2  0E00               	movlw	0
  3740  000EB4  0100               	movlb	0	; () banked
  3741  000EB6  6FA0               	movwf	efgtoa@l& (0+255),b
  3742  000EB8  0E00               	movlw	0
  3743  000EBA  6FA1               	movwf	(efgtoa@l+1)& (0+255),b
  3744  000EBC  0E00               	movlw	0
  3745  000EBE  6FA2               	movwf	(efgtoa@l+2)& (0+255),b
  3746  000EC0  0E00               	movlw	0
  3747  000EC2  6FA3               	movwf	(efgtoa@l+3)& (0+255),b
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  3750  000EC4  EF8D  F007         	goto	l4141
  3751  000EC8                     l4135:
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3754  000EC8  C09C  F001         	movff	efgtoa@h,___fleq@ff1
  3755  000ECC  C09D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3756  000ED0  C09E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3757  000ED4  C09F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3758  000ED8  C0A0  F005         	movff	efgtoa@l,___fleq@ff2
  3759  000EDC  C0A1  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3760  000EE0  C0A2  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3761  000EE4  C0A3  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3762  000EE8  EC20  F020         	call	___fleq	;wreg free
  3763  000EEC  A0D8               	btfss	status,0,c
  3764  000EEE  EF7B  F007         	goto	u4761
  3765  000EF2  EF7D  F007         	goto	u4760
  3766  000EF6                     u4761:
  3767  000EF6  EF8D  F007         	goto	l4141
  3768  000EFA                     u4760:
  3769  000EFA  0100               	movlb	0	; () banked
  3770  000EFC  B192               	btfsc	efgtoa@d& (0+255),0,b
  3771  000EFE  EF83  F007         	goto	u4771
  3772  000F02  EF85  F007         	goto	u4770
  3773  000F06                     u4771:
  3774  000F06  EF8D  F007         	goto	l4141
  3775  000F0A                     u4770:
  3776  000F0A                     
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3779  000F0A  0E00               	movlw	0
  3780  000F0C  6FA0               	movwf	efgtoa@l& (0+255),b
  3781  000F0E  0E00               	movlw	0
  3782  000F10  6FA1               	movwf	(efgtoa@l+1)& (0+255),b
  3783  000F12  0E00               	movlw	0
  3784  000F14  6FA2               	movwf	(efgtoa@l+2)& (0+255),b
  3785  000F16  0E00               	movlw	0
  3786  000F18  6FA3               	movwf	(efgtoa@l+3)& (0+255),b
  3787  000F1A                     l4141:
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3790  000F1A  C0A6  F013         	movff	efgtoa@g,___fladd@b
  3791  000F1E  C0A7  F014         	movff	efgtoa@g+1,___fladd@b+1
  3792  000F22  C0A8  F015         	movff	efgtoa@g+2,___fladd@b+2
  3793  000F26  C0A9  F016         	movff	efgtoa@g+3,___fladd@b+3
  3794  000F2A  C0A0  F017         	movff	efgtoa@l,___fladd@a
  3795  000F2E  C0A1  F018         	movff	efgtoa@l+1,___fladd@a+1
  3796  000F32  C0A2  F019         	movff	efgtoa@l+2,___fladd@a+2
  3797  000F36  C0A3  F01A         	movff	efgtoa@l+3,___fladd@a+3
  3798  000F3A  EC75  F00D         	call	___fladd	;wreg free
  3799  000F3E  C013  F09C         	movff	?___fladd,efgtoa@h
  3800  000F42  C014  F09D         	movff	?___fladd+1,efgtoa@h+1
  3801  000F46  C015  F09E         	movff	?___fladd+2,efgtoa@h+2
  3802  000F4A  C016  F09F         	movff	?___fladd+3,efgtoa@h+3
  3803  000F4E                     
  3804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3805  000F4E  C09C  F044         	movff	efgtoa@h,___flge@ff1
  3806  000F52  C09D  F045         	movff	efgtoa@h+1,___flge@ff1+1
  3807  000F56  C09E  F046         	movff	efgtoa@h+2,___flge@ff1+2
  3808  000F5A  C09F  F047         	movff	efgtoa@h+3,___flge@ff1+3
  3809  000F5E  0E00               	movlw	0
  3810  000F60  6E2F               	movwf	___flmul@a^0,c
  3811  000F62  0E00               	movlw	0
  3812  000F64  6E30               	movwf	(___flmul@a+1)^0,c
  3813  000F66  0E20               	movlw	32
  3814  000F68  6E31               	movwf	(___flmul@a+2)^0,c
  3815  000F6A  0E41               	movlw	65
  3816  000F6C  6E32               	movwf	(___flmul@a+3)^0,c
  3817  000F6E  C08E  F02B         	movff	efgtoa@ou,___flmul@b
  3818  000F72  C08F  F02C         	movff	efgtoa@ou+1,___flmul@b+1
  3819  000F76  C090  F02D         	movff	efgtoa@ou+2,___flmul@b+2
  3820  000F7A  C091  F02E         	movff	efgtoa@ou+3,___flmul@b+3
  3821  000F7E  ECD5  F00F         	call	___flmul	;wreg free
  3822  000F82  C02B  F048         	movff	?___flmul,___flge@ff2
  3823  000F86  C02C  F049         	movff	?___flmul+1,___flge@ff2+1
  3824  000F8A  C02D  F04A         	movff	?___flmul+2,___flge@ff2+2
  3825  000F8E  C02E  F04B         	movff	?___flmul+3,___flge@ff2+3
  3826  000F92  EC60  F01C         	call	___flge	;wreg free
  3827  000F96  A0D8               	btfss	status,0,c
  3828  000F98  EFD0  F007         	goto	u4781
  3829  000F9C  EFD2  F007         	goto	u4780
  3830  000FA0                     u4781:
  3831  000FA0  EFFB  F007         	goto	l4153
  3832  000FA4                     u4780:
  3833  000FA4                     
  3834                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3835  000FA4  0100               	movlb	0	; () banked
  3836  000FA6  4BAA               	infsnz	efgtoa@e& (0+255),f,b
  3837  000FA8  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  3838  000FAA                     
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3841  000FAA  C08E  F02B         	movff	efgtoa@ou,___flmul@b
  3842  000FAE  C08F  F02C         	movff	efgtoa@ou+1,___flmul@b+1
  3843  000FB2  C090  F02D         	movff	efgtoa@ou+2,___flmul@b+2
  3844  000FB6  C091  F02E         	movff	efgtoa@ou+3,___flmul@b+3
  3845  000FBA  0E00               	movlw	0
  3846  000FBC  6E2F               	movwf	___flmul@a^0,c
  3847  000FBE  0E00               	movlw	0
  3848  000FC0  6E30               	movwf	(___flmul@a+1)^0,c
  3849  000FC2  0E20               	movlw	32
  3850  000FC4  6E31               	movwf	(___flmul@a+2)^0,c
  3851  000FC6  0E41               	movlw	65
  3852  000FC8  6E32               	movwf	(___flmul@a+3)^0,c
  3853  000FCA  ECD5  F00F         	call	___flmul	;wreg free
  3854  000FCE  C02B  F08E         	movff	?___flmul,efgtoa@ou
  3855  000FD2  C02C  F08F         	movff	?___flmul+1,efgtoa@ou+1
  3856  000FD6  C02D  F090         	movff	?___flmul+2,efgtoa@ou+2
  3857  000FDA  C02E  F091         	movff	?___flmul+3,efgtoa@ou+3
  3858  000FDE                     
  3859                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3860  000FDE  0E66               	movlw	102
  3861  000FE0  0100               	movlb	0	; () banked
  3862  000FE2  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3863  000FE4  A4D8               	btfss	status,2,c
  3864  000FE6  EFF7  F007         	goto	u4791
  3865  000FEA  EFF9  F007         	goto	u4790
  3866  000FEE                     u4791:
  3867  000FEE  EFFB  F007         	goto	l4153
  3868  000FF2                     u4790:
  3869  000FF2                     
  3870                           ; BSR set to: 0
  3871                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3872  000FF2  4B8C               	infsnz	efgtoa@m& (0+255),f,b
  3873  000FF4  2B8D               	incf	(efgtoa@m+1)& (0+255),f,b
  3874  000FF6                     l4153:
  3875                           
  3876                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3877  000FF6  C08E  F0AE         	movff	efgtoa@ou,efgtoa@u
  3878  000FFA  C08F  F0AF         	movff	efgtoa@ou+1,efgtoa@u+1
  3879  000FFE  C090  F0B0         	movff	efgtoa@ou+2,efgtoa@u+2
  3880  001002  C091  F0B1         	movff	efgtoa@ou+3,efgtoa@u+3
  3881  001006                     
  3882                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3883  001006  0E65               	movlw	101
  3884  001008  0100               	movlb	0	; () banked
  3885  00100A  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  3886  00100C  B4D8               	btfsc	status,2,c
  3887  00100E  EF0B  F008         	goto	u4801
  3888  001012  EF0D  F008         	goto	u4800
  3889  001016                     u4801:
  3890  001016  EF13  F008         	goto	l4159
  3891  00101A                     u4800:
  3892  00101A                     
  3893                           ; BSR set to: 0
  3894  00101A  C0AA  F08A         	movff	efgtoa@e,efgtoa@ne
  3895  00101E  C0AB  F08B         	movff	efgtoa@e+1,efgtoa@ne+1
  3896  001022  EF17  F008         	goto	l989
  3897  001026                     l4159:
  3898                           
  3899                           ; BSR set to: 0
  3900  001026  0E00               	movlw	0
  3901  001028  6F8B               	movwf	(efgtoa@ne+1)& (0+255),b
  3902  00102A  0E00               	movlw	0
  3903  00102C  6F8A               	movwf	efgtoa@ne& (0+255),b
  3904  00102E                     l989:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3908  00102E  0E00               	movlw	0
  3909  001030  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  3910  001032  0E00               	movlw	0
  3911  001034  6F88               	movwf	efgtoa@pp& (0+255),b
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3914  001036  0E00               	movlw	0
  3915  001038  6F87               	movwf	(efgtoa@t+1)& (0+255),b
  3916  00103A  0E00               	movlw	0
  3917  00103C  6F86               	movwf	efgtoa@t& (0+255),b
  3918                           
  3919                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3920  00103E  0E00               	movlw	0
  3921  001040  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  3922  001042  0E00               	movlw	0
  3923  001044  6FA4               	movwf	efgtoa@i& (0+255),b
  3924                           
  3925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3926  001046  EF12  F009         	goto	l4209
  3927  00104A                     l4161:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3931  00104A  C09C  F044         	movff	efgtoa@h,___fldiv@b
  3932  00104E  C09D  F045         	movff	efgtoa@h+1,___fldiv@b+1
  3933  001052  C09E  F046         	movff	efgtoa@h+2,___fldiv@b+2
  3934  001056  C09F  F047         	movff	efgtoa@h+3,___fldiv@b+3
  3935  00105A  C0AE  F048         	movff	efgtoa@u,___fldiv@a
  3936  00105E  C0AF  F049         	movff	efgtoa@u+1,___fldiv@a+1
  3937  001062  C0B0  F04A         	movff	efgtoa@u+2,___fldiv@a+2
  3938  001066  C0B1  F04B         	movff	efgtoa@u+3,___fldiv@a+3
  3939  00106A  ECEA  F011         	call	___fldiv	;wreg free
  3940  00106E  C044  F060         	movff	?___fldiv,floorf@x
  3941  001072  C045  F061         	movff	?___fldiv+1,floorf@x+1
  3942  001076  C046  F062         	movff	?___fldiv+2,floorf@x+2
  3943  00107A  C047  F063         	movff	?___fldiv+3,floorf@x+3
  3944  00107E  ECD6  F017         	call	_floorf	;wreg free
  3945  001082  C060  F0A0         	movff	?_floorf,efgtoa@l
  3946  001086  C061  F0A1         	movff	?_floorf+1,efgtoa@l+1
  3947  00108A  C062  F0A2         	movff	?_floorf+2,efgtoa@l+2
  3948  00108E  C063  F0A3         	movff	?_floorf+3,efgtoa@l+3
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3951  001092  C0A0  F060         	movff	efgtoa@l,___fltol@f1
  3952  001096  C0A1  F061         	movff	efgtoa@l+1,___fltol@f1+1
  3953  00109A  C0A2  F062         	movff	efgtoa@l+2,___fltol@f1+2
  3954  00109E  C0A3  F063         	movff	efgtoa@l+3,___fltol@f1+3
  3955  0010A2  ECDC  F01B         	call	___fltol	;wreg free
  3956  0010A6  C060  F092         	movff	?___fltol,efgtoa@d
  3957  0010AA  C061  F093         	movff	?___fltol+1,efgtoa@d+1
  3958  0010AE                     
  3959                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3960  0010AE  0100               	movlb	0	; () banked
  3961  0010B0  B9FD               	btfsc	_flags& (0+255),4,b
  3962  0010B2  EF5D  F008         	goto	u4811
  3963  0010B6  EF5F  F008         	goto	u4810
  3964  0010BA                     u4811:
  3965  0010BA  EF7C  F008         	goto	l4173
  3966  0010BE                     u4810:
  3967  0010BE                     
  3968                           ; BSR set to: 0
  3969  0010BE  5192               	movf	efgtoa@d& (0+255),w,b
  3970  0010C0  1193               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3971  0010C2  A4D8               	btfss	status,2,c
  3972  0010C4  EF66  F008         	goto	u4821
  3973  0010C8  EF68  F008         	goto	u4820
  3974  0010CC                     u4821:
  3975  0010CC  EF7C  F008         	goto	l4173
  3976  0010D0                     u4820:
  3977  0010D0                     
  3978                           ; BSR set to: 0
  3979  0010D0  0E67               	movlw	103
  3980  0010D2  199B               	xorwf	efgtoa@mode& (0+255),w,b
  3981  0010D4  A4D8               	btfss	status,2,c
  3982  0010D6  EF6F  F008         	goto	u4831
  3983  0010DA  EF71  F008         	goto	u4830
  3984  0010DE                     u4831:
  3985  0010DE  EF7C  F008         	goto	l4173
  3986  0010E2                     u4830:
  3987  0010E2                     
  3988                           ; BSR set to: 0
  3989  0010E2  BF8B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3990  0010E4  EF78  F008         	goto	u4840
  3991  0010E8  EF76  F008         	goto	u4841
  3992  0010EC                     u4841:
  3993  0010EC  EF7C  F008         	goto	l4173
  3994  0010F0                     u4840:
  3995  0010F0                     
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3998  0010F0  4B86               	infsnz	efgtoa@t& (0+255),f,b
  3999  0010F2  2B87               	incf	(efgtoa@t+1)& (0+255),f,b
  4000                           
  4001                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4002  0010F4  EFC6  F008         	goto	l4201
  4003  0010F8                     l4173:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4007  0010F8  5188               	movf	efgtoa@pp& (0+255),w,b
  4008  0010FA  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4009  0010FC  A4D8               	btfss	status,2,c
  4010  0010FE  EF83  F008         	goto	u4851
  4011  001102  EF85  F008         	goto	u4850
  4012  001106                     u4851:
  4013  001106  EFAF  F008         	goto	l4193
  4014  00110A                     u4850:
  4015  00110A                     
  4016                           ; BSR set to: 0
  4017  00110A  BF8B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4018  00110C  EF8C  F008         	goto	u4860
  4019  001110  EF8A  F008         	goto	u4861
  4020  001114                     u4861:
  4021  001114  EFAF  F008         	goto	l4193
  4022  001118                     u4860:
  4023  001118                     
  4024                           ; BSR set to: 0
  4025                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4026  001118  0E24               	movlw	low _dbuf
  4027  00111A  25AC               	addwf	efgtoa@n& (0+255),w,b
  4028  00111C  6ED9               	movwf	fsr2l,c
  4029  00111E  0E01               	movlw	high _dbuf
  4030  001120  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4031  001122  6EDA               	movwf	fsr2h,c
  4032  001124  0E2E               	movlw	46
  4033  001126  6EDF               	movwf	indf2,c
  4034  001128                     
  4035                           ; BSR set to: 0
  4036  001128  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4037  00112A  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4038  00112C                     
  4039                           ; BSR set to: 0
  4040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4041  00112C  0798               	decf	efgtoa@w& (0+255),f,b
  4042  00112E  A0D8               	btfss	status,0,c
  4043  001130  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4044  001132                     
  4045                           ; BSR set to: 0
  4046                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4047  001132  0E00               	movlw	0
  4048  001134  6F89               	movwf	(efgtoa@pp+1)& (0+255),b
  4049  001136  0E01               	movlw	1
  4050  001138  6F88               	movwf	efgtoa@pp& (0+255),b
  4051  00113A  EFAF  F008         	goto	l4193
  4052  00113E                     l4185:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4056  00113E  0E24               	movlw	low _dbuf
  4057  001140  25AC               	addwf	efgtoa@n& (0+255),w,b
  4058  001142  6ED9               	movwf	fsr2l,c
  4059  001144  0E01               	movlw	high _dbuf
  4060  001146  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4061  001148  6EDA               	movwf	fsr2h,c
  4062  00114A  0E30               	movlw	48
  4063  00114C  6EDF               	movwf	indf2,c
  4064  00114E                     
  4065                           ; BSR set to: 0
  4066  00114E  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4067  001150  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4068  001152                     
  4069                           ; BSR set to: 0
  4070                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4071  001152  0798               	decf	efgtoa@w& (0+255),f,b
  4072  001154  A0D8               	btfss	status,0,c
  4073  001156  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4074  001158                     
  4075                           ; BSR set to: 0
  4076                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4077  001158  0786               	decf	efgtoa@t& (0+255),f,b
  4078  00115A  A0D8               	btfss	status,0,c
  4079  00115C  0787               	decf	(efgtoa@t+1)& (0+255),f,b
  4080  00115E                     l4193:
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4084  00115E  5186               	movf	efgtoa@t& (0+255),w,b
  4085  001160  1187               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4086  001162  A4D8               	btfss	status,2,c
  4087  001164  EFB6  F008         	goto	u4871
  4088  001168  EFB8  F008         	goto	u4870
  4089  00116C                     u4871:
  4090  00116C  EF9F  F008         	goto	l4185
  4091  001170                     u4870:
  4092  001170                     
  4093                           ; BSR set to: 0
  4094                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4095  001170  0E24               	movlw	low _dbuf
  4096  001172  25AC               	addwf	efgtoa@n& (0+255),w,b
  4097  001174  6ED9               	movwf	fsr2l,c
  4098  001176  0E01               	movlw	high _dbuf
  4099  001178  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4100  00117A  6EDA               	movwf	fsr2h,c
  4101  00117C  5192               	movf	efgtoa@d& (0+255),w,b
  4102  00117E  0F30               	addlw	48
  4103  001180  6EDF               	movwf	indf2,c
  4104  001182                     
  4105                           ; BSR set to: 0
  4106  001182  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4107  001184  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4108  001186                     
  4109                           ; BSR set to: 0
  4110                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4111  001186  0798               	decf	efgtoa@w& (0+255),f,b
  4112  001188  A0D8               	btfss	status,0,c
  4113  00118A  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4114  00118C                     l4201:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4118  00118C  C09C  F023         	movff	efgtoa@h,___flsub@b
  4119  001190  C09D  F024         	movff	efgtoa@h+1,___flsub@b+1
  4120  001194  C09E  F025         	movff	efgtoa@h+2,___flsub@b+2
  4121  001198  C09F  F026         	movff	efgtoa@h+3,___flsub@b+3
  4122  00119C  C0AE  F02F         	movff	efgtoa@u,___flmul@a
  4123  0011A0  C0AF  F030         	movff	efgtoa@u+1,___flmul@a+1
  4124  0011A4  C0B0  F031         	movff	efgtoa@u+2,___flmul@a+2
  4125  0011A8  C0B1  F032         	movff	efgtoa@u+3,___flmul@a+3
  4126  0011AC  C0A0  F02B         	movff	efgtoa@l,___flmul@b
  4127  0011B0  C0A1  F02C         	movff	efgtoa@l+1,___flmul@b+1
  4128  0011B4  C0A2  F02D         	movff	efgtoa@l+2,___flmul@b+2
  4129  0011B8  C0A3  F02E         	movff	efgtoa@l+3,___flmul@b+3
  4130  0011BC  ECD5  F00F         	call	___flmul	;wreg free
  4131  0011C0  C02B  F027         	movff	?___flmul,___flsub@a
  4132  0011C4  C02C  F028         	movff	?___flmul+1,___flsub@a+1
  4133  0011C8  C02D  F029         	movff	?___flmul+2,___flsub@a+2
  4134  0011CC  C02E  F02A         	movff	?___flmul+3,___flsub@a+3
  4135  0011D0  ECC4  F021         	call	___flsub	;wreg free
  4136  0011D4  C023  F09C         	movff	?___flsub,efgtoa@h
  4137  0011D8  C024  F09D         	movff	?___flsub+1,efgtoa@h+1
  4138  0011DC  C025  F09E         	movff	?___flsub+2,efgtoa@h+2
  4139  0011E0  C026  F09F         	movff	?___flsub+3,efgtoa@h+3
  4140  0011E4                     
  4141                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4142  0011E4  C0AE  F044         	movff	efgtoa@u,___fldiv@b
  4143  0011E8  C0AF  F045         	movff	efgtoa@u+1,___fldiv@b+1
  4144  0011EC  C0B0  F046         	movff	efgtoa@u+2,___fldiv@b+2
  4145  0011F0  C0B1  F047         	movff	efgtoa@u+3,___fldiv@b+3
  4146  0011F4  0E00               	movlw	0
  4147  0011F6  6E48               	movwf	___fldiv@a^0,c
  4148  0011F8  0E00               	movlw	0
  4149  0011FA  6E49               	movwf	(___fldiv@a+1)^0,c
  4150  0011FC  0E20               	movlw	32
  4151  0011FE  6E4A               	movwf	(___fldiv@a+2)^0,c
  4152  001200  0E41               	movlw	65
  4153  001202  6E4B               	movwf	(___fldiv@a+3)^0,c
  4154  001204  ECEA  F011         	call	___fldiv	;wreg free
  4155  001208  C044  F0AE         	movff	?___fldiv,efgtoa@u
  4156  00120C  C045  F0AF         	movff	?___fldiv+1,efgtoa@u+1
  4157  001210  C046  F0B0         	movff	?___fldiv+2,efgtoa@u+2
  4158  001214  C047  F0B1         	movff	?___fldiv+3,efgtoa@u+3
  4159  001218                     
  4160                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4161  001218  0100               	movlb	0	; () banked
  4162  00121A  078A               	decf	efgtoa@ne& (0+255),f,b
  4163  00121C  A0D8               	btfss	status,0,c
  4164  00121E  078B               	decf	(efgtoa@ne+1)& (0+255),f,b
  4165  001220                     
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4168  001220  4BA4               	infsnz	efgtoa@i& (0+255),f,b
  4169  001222  2BA5               	incf	(efgtoa@i+1)& (0+255),f,b
  4170  001224                     l4209:
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4174  001224  518C               	movf	efgtoa@m& (0+255),w,b
  4175  001226  5DA4               	subwf	efgtoa@i& (0+255),w,b
  4176  001228  51A5               	movf	(efgtoa@i+1)& (0+255),w,b
  4177  00122A  0A80               	xorlw	128
  4178  00122C  6F7B               	movwf	??_efgtoa& (0+255),b
  4179  00122E  518D               	movf	(efgtoa@m+1)& (0+255),w,b
  4180  001230  0A80               	xorlw	128
  4181  001232  597B               	subwfb	??_efgtoa& (0+255),w,b
  4182  001234  B0D8               	btfsc	status,0,c
  4183  001236  EF1F  F009         	goto	u4881
  4184  00123A  EF21  F009         	goto	u4880
  4185  00123E                     u4881:
  4186  00123E  EF2F  F009         	goto	l4213
  4187  001242                     u4880:
  4188  001242                     
  4189                           ; BSR set to: 0
  4190  001242  BFAD               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4191  001244  EF2D  F009         	goto	u4891
  4192  001248  51AD               	movf	(efgtoa@n+1)& (0+255),w,b
  4193  00124A  E109               	bnz	u4890
  4194  00124C  0E4B               	movlw	75
  4195  00124E  5DAC               	subwf	efgtoa@n& (0+255),w,b
  4196  001250  A0D8               	btfss	status,0,c
  4197  001252  EF2D  F009         	goto	u4891
  4198  001256  EF2F  F009         	goto	u4890
  4199  00125A                     u4891:
  4200  00125A  EF25  F008         	goto	l4161
  4201  00125E                     u4890:
  4202  00125E                     l4213:
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4206  00125E  5188               	movf	efgtoa@pp& (0+255),w,b
  4207  001260  1189               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4208  001262  A4D8               	btfss	status,2,c
  4209  001264  EF36  F009         	goto	u4901
  4210  001268  EF38  F009         	goto	u4900
  4211  00126C                     u4901:
  4212  00126C  EF49  F009         	goto	l4221
  4213  001270                     u4900:
  4214  001270                     
  4215                           ; BSR set to: 0
  4216  001270  A9FD               	btfss	_flags& (0+255),4,b
  4217  001272  EF3D  F009         	goto	u4911
  4218  001276  EF3F  F009         	goto	u4910
  4219  00127A                     u4911:
  4220  00127A  EF49  F009         	goto	l4221
  4221  00127E                     u4910:
  4222  00127E                     
  4223                           ; BSR set to: 0
  4224                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4225  00127E  0E24               	movlw	low _dbuf
  4226  001280  25AC               	addwf	efgtoa@n& (0+255),w,b
  4227  001282  6ED9               	movwf	fsr2l,c
  4228  001284  0E01               	movlw	high _dbuf
  4229  001286  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4230  001288  6EDA               	movwf	fsr2h,c
  4231  00128A  0E2E               	movlw	46
  4232  00128C  6EDF               	movwf	indf2,c
  4233  00128E                     
  4234                           ; BSR set to: 0
  4235  00128E  4BAC               	infsnz	efgtoa@n& (0+255),f,b
  4236  001290  2BAD               	incf	(efgtoa@n+1)& (0+255),f,b
  4237  001292                     l4221:
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4241  001292  0E24               	movlw	low _dbuf
  4242  001294  25AC               	addwf	efgtoa@n& (0+255),w,b
  4243  001296  6ED9               	movwf	fsr2l,c
  4244  001298  0E01               	movlw	high _dbuf
  4245  00129A  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4246  00129C  6EDA               	movwf	fsr2h,c
  4247  00129E  0E00               	movlw	0
  4248  0012A0  6EDF               	movwf	indf2,c
  4249  0012A2                     
  4250                           ; BSR set to: 0
  4251                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4252  0012A2  0E65               	movlw	101
  4253  0012A4  199A               	xorwf	efgtoa@nmode& (0+255),w,b
  4254  0012A6  A4D8               	btfss	status,2,c
  4255  0012A8  EF58  F009         	goto	u4921
  4256  0012AC  EF5A  F009         	goto	u4920
  4257  0012B0                     u4921:
  4258  0012B0  EFC1  F004         	goto	l4023
  4259  0012B4                     u4920:
  4260  0012B4                     
  4261                           ; BSR set to: 0
  4262                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4263  0012B4  0E00               	movlw	0
  4264  0012B6  6FA5               	movwf	(efgtoa@i+1)& (0+255),b
  4265  0012B8  0E4F               	movlw	79
  4266  0012BA  6FA4               	movwf	efgtoa@i& (0+255),b
  4267  0012BC                     
  4268                           ; BSR set to: 0
  4269                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4270  0012BC  0E24               	movlw	low _dbuf
  4271  0012BE  25A4               	addwf	efgtoa@i& (0+255),w,b
  4272  0012C0  6ED9               	movwf	fsr2l,c
  4273  0012C2  0E01               	movlw	high _dbuf
  4274  0012C4  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4275  0012C6  6EDA               	movwf	fsr2h,c
  4276  0012C8  0E00               	movlw	0
  4277  0012CA  6EDF               	movwf	indf2,c
  4278  0012CC                     
  4279                           ; BSR set to: 0
  4280                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4281  0012CC  0E00               	movlw	0
  4282  0012CE  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  4283  0012D0  0E00               	movlw	0
  4284  0012D2  6F94               	movwf	efgtoa@sign& (0+255),b
  4285  0012D4                     
  4286                           ; BSR set to: 0
  4287                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4288  0012D4  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4289  0012D6  EF71  F009         	goto	u4930
  4290  0012DA  EF6F  F009         	goto	u4931
  4291  0012DE                     u4931:
  4292  0012DE  EF79  F009         	goto	l4237
  4293  0012E2                     u4930:
  4294  0012E2                     
  4295                           ; BSR set to: 0
  4296                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4297  0012E2  0E00               	movlw	0
  4298  0012E4  6F95               	movwf	(efgtoa@sign+1)& (0+255),b
  4299  0012E6  0E01               	movlw	1
  4300  0012E8  6F94               	movwf	efgtoa@sign& (0+255),b
  4301  0012EA                     
  4302                           ; BSR set to: 0
  4303                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4304  0012EA  6DAA               	negf	efgtoa@e& (0+255),b
  4305  0012EC  1FAB               	comf	(efgtoa@e+1)& (0+255),f,b
  4306  0012EE  B0D8               	btfsc	status,0,c
  4307  0012F0  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  4308  0012F2                     l4237:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4312  0012F2  0E00               	movlw	0
  4313  0012F4  6F97               	movwf	(efgtoa@p+1)& (0+255),b
  4314  0012F6  0E02               	movlw	2
  4315  0012F8  6F96               	movwf	efgtoa@p& (0+255),b
  4316                           
  4317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4318  0012FA  EFAA  F009         	goto	l4249
  4319  0012FE                     l4239:
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4323  0012FE  07A4               	decf	efgtoa@i& (0+255),f,b
  4324  001300  A0D8               	btfss	status,0,c
  4325  001302  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  4326  001304                     
  4327                           ; BSR set to: 0
  4328                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4329  001304  0E24               	movlw	low _dbuf
  4330  001306  25A4               	addwf	efgtoa@i& (0+255),w,b
  4331  001308  6ED9               	movwf	fsr2l,c
  4332  00130A  0E01               	movlw	high _dbuf
  4333  00130C  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4334  00130E  6EDA               	movwf	fsr2h,c
  4335  001310  C0AA  F001         	movff	efgtoa@e,___awmod@dividend
  4336  001314  C0AB  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4337  001318  0E00               	movlw	0
  4338  00131A  6E04               	movwf	(___awmod@divisor+1)^0,c
  4339  00131C  0E0A               	movlw	10
  4340  00131E  6E03               	movwf	___awmod@divisor^0,c
  4341  001320  ECC8  F01F         	call	___awmod	;wreg free
  4342  001324  5001               	movf	?___awmod^0,w,c
  4343  001326  0F30               	addlw	48
  4344  001328  6EDF               	movwf	indf2,c
  4345  00132A                     
  4346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4347  00132A  C0AA  F001         	movff	efgtoa@e,___awdiv@dividend
  4348  00132E  C0AB  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4349  001332  0E00               	movlw	0
  4350  001334  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4351  001336  0E0A               	movlw	10
  4352  001338  6E03               	movwf	___awdiv@divisor^0,c
  4353  00133A  EC08  F01F         	call	___awdiv	;wreg free
  4354  00133E  C001  F0AA         	movff	?___awdiv,efgtoa@e
  4355  001342  C002  F0AB         	movff	?___awdiv+1,efgtoa@e+1
  4356  001346                     
  4357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4358  001346  0100               	movlb	0	; () banked
  4359  001348  0796               	decf	efgtoa@p& (0+255),f,b
  4360  00134A  A0D8               	btfss	status,0,c
  4361  00134C  0797               	decf	(efgtoa@p+1)& (0+255),f,b
  4362  00134E                     
  4363                           ; BSR set to: 0
  4364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4365  00134E  0798               	decf	efgtoa@w& (0+255),f,b
  4366  001350  A0D8               	btfss	status,0,c
  4367  001352  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4368  001354                     l4249:
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4372  001354  51AA               	movf	efgtoa@e& (0+255),w,b
  4373  001356  11AB               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4374  001358  A4D8               	btfss	status,2,c
  4375  00135A  EFB1  F009         	goto	u4941
  4376  00135E  EFB3  F009         	goto	u4940
  4377  001362                     u4941:
  4378  001362  EF7F  F009         	goto	l4239
  4379  001366                     u4940:
  4380  001366                     
  4381                           ; BSR set to: 0
  4382  001366  BF97               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4383  001368  EFC0  F009         	goto	u4950
  4384  00136C  5197               	movf	(efgtoa@p+1)& (0+255),w,b
  4385  00136E  E106               	bnz	u4951
  4386  001370  0596               	decf	efgtoa@p& (0+255),w,b
  4387  001372  B0D8               	btfsc	status,0,c
  4388  001374  EFBE  F009         	goto	u4951
  4389  001378  EFC0  F009         	goto	u4950
  4390  00137C                     u4951:
  4391  00137C  EF7F  F009         	goto	l4239
  4392  001380                     u4950:
  4393  001380                     
  4394                           ; BSR set to: 0
  4395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  4396  001380  07A4               	decf	efgtoa@i& (0+255),f,b
  4397  001382  A0D8               	btfss	status,0,c
  4398  001384  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  4399  001386                     
  4400                           ; BSR set to: 0
  4401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4402  001386  5194               	movf	efgtoa@sign& (0+255),w,b
  4403  001388  1195               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4404  00138A  A4D8               	btfss	status,2,c
  4405  00138C  EFCA  F009         	goto	u4961
  4406  001390  EFCC  F009         	goto	u4960
  4407  001394                     u4961:
  4408  001394  EFD2  F009         	goto	l4259
  4409  001398                     u4960:
  4410  001398                     
  4411                           ; BSR set to: 0
  4412  001398  0E00               	movlw	0
  4413  00139A  6F83               	movwf	(_efgtoa$1191+1)& (0+255),b
  4414  00139C  0E2B               	movlw	43
  4415  00139E  6F82               	movwf	_efgtoa$1191& (0+255),b
  4416  0013A0  EFD6  F009         	goto	l4261
  4417  0013A4                     l4259:
  4418                           
  4419                           ; BSR set to: 0
  4420  0013A4  0E00               	movlw	0
  4421  0013A6  6F83               	movwf	(_efgtoa$1191+1)& (0+255),b
  4422  0013A8  0E2D               	movlw	45
  4423  0013AA  6F82               	movwf	_efgtoa$1191& (0+255),b
  4424  0013AC                     l4261:
  4425                           
  4426                           ; BSR set to: 0
  4427  0013AC  0E24               	movlw	low _dbuf
  4428  0013AE  25A4               	addwf	efgtoa@i& (0+255),w,b
  4429  0013B0  6ED9               	movwf	fsr2l,c
  4430  0013B2  0E01               	movlw	high _dbuf
  4431  0013B4  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4432  0013B6  6EDA               	movwf	fsr2h,c
  4433  0013B8  C082  FFDF         	movff	_efgtoa$1191,indf2
  4434  0013BC                     
  4435                           ; BSR set to: 0
  4436                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4437  0013BC  0798               	decf	efgtoa@w& (0+255),f,b
  4438  0013BE  A0D8               	btfss	status,0,c
  4439  0013C0  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4440  0013C2                     
  4441                           ; BSR set to: 0
  4442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4443  0013C2  07A4               	decf	efgtoa@i& (0+255),f,b
  4444  0013C4  A0D8               	btfss	status,0,c
  4445  0013C6  07A5               	decf	(efgtoa@i+1)& (0+255),f,b
  4446  0013C8                     
  4447                           ; BSR set to: 0
  4448  0013C8  0EBF               	movlw	191
  4449  0013CA  6F7B               	movwf	??_efgtoa& (0+255),b
  4450  0013CC  0EFF               	movlw	255
  4451  0013CE  6F7C               	movwf	(??_efgtoa+1)& (0+255),b
  4452  0013D0  517A               	movf	efgtoa@c& (0+255),w,b
  4453  0013D2  6F7D               	movwf	(??_efgtoa+2)& (0+255),b
  4454  0013D4  6B7E               	clrf	(??_efgtoa+3)& (0+255),b
  4455  0013D6  517B               	movf	??_efgtoa& (0+255),w,b
  4456  0013D8  277D               	addwf	(??_efgtoa+2)& (0+255),f,b
  4457  0013DA  517C               	movf	(??_efgtoa+1)& (0+255),w,b
  4458  0013DC  237E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4459  0013DE  517E               	movf	(??_efgtoa+3)& (0+255),w,b
  4460  0013E0  E109               	bnz	u4970
  4461  0013E2  0E1A               	movlw	26
  4462  0013E4  5D7D               	subwf	(??_efgtoa+2)& (0+255),w,b
  4463  0013E6  A0D8               	btfss	status,0,c
  4464  0013E8  EFF8  F009         	goto	u4971
  4465  0013EC  EFFA  F009         	goto	u4970
  4466  0013F0                     u4971:
  4467  0013F0  EF00  F00A         	goto	l4273
  4468  0013F4                     u4970:
  4469  0013F4                     
  4470                           ; BSR set to: 0
  4471  0013F4  0E00               	movlw	0
  4472  0013F6  6F85               	movwf	(_efgtoa$1192+1)& (0+255),b
  4473  0013F8  0E65               	movlw	101
  4474  0013FA  6F84               	movwf	_efgtoa$1192& (0+255),b
  4475  0013FC  EF04  F00A         	goto	l4275
  4476  001400                     l4273:
  4477                           
  4478                           ; BSR set to: 0
  4479  001400  0E00               	movlw	0
  4480  001402  6F85               	movwf	(_efgtoa$1192+1)& (0+255),b
  4481  001404  0E45               	movlw	69
  4482  001406  6F84               	movwf	_efgtoa$1192& (0+255),b
  4483  001408                     l4275:
  4484                           
  4485                           ; BSR set to: 0
  4486  001408  0E24               	movlw	low _dbuf
  4487  00140A  25A4               	addwf	efgtoa@i& (0+255),w,b
  4488  00140C  6ED9               	movwf	fsr2l,c
  4489  00140E  0E01               	movlw	high _dbuf
  4490  001410  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4491  001412  6EDA               	movwf	fsr2h,c
  4492  001414  C084  FFDF         	movff	_efgtoa$1192,indf2
  4493  001418                     
  4494                           ; BSR set to: 0
  4495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4496  001418  0798               	decf	efgtoa@w& (0+255),f,b
  4497  00141A  A0D8               	btfss	status,0,c
  4498  00141C  0799               	decf	(efgtoa@w+1)& (0+255),f,b
  4499  00141E                     
  4500                           ; BSR set to: 0
  4501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4502  00141E  0E24               	movlw	low _dbuf
  4503  001420  25AC               	addwf	efgtoa@n& (0+255),w,b
  4504  001422  6E01               	movwf	strcpy@dest^0,c
  4505  001424  0E01               	movlw	high _dbuf
  4506  001426  21AD               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4507  001428  6E02               	movwf	(strcpy@dest+1)^0,c
  4508  00142A  0E24               	movlw	low _dbuf
  4509  00142C  25A4               	addwf	efgtoa@i& (0+255),w,b
  4510  00142E  6E03               	movwf	strcpy@src^0,c
  4511  001430  0E01               	movlw	high _dbuf
  4512  001432  21A5               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4513  001434  6E04               	movwf	(strcpy@src+1)^0,c
  4514  001436  ECFC  F020         	call	_strcpy	;wreg free
  4515  00143A  EFC1  F004         	goto	l4023
  4516  00143E                     l945:
  4517  00143E  0012               	return		;funcret
  4518  001440                     __end_of_efgtoa:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _tolower *****************
  4522 ;; Defined at:
  4523 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  c               2    6[COMRAM] int 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;		None
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  2    6[COMRAM] int 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4537 ;;      Params:         2       0       0       0       0       0       0       0       0
  4538 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4539 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4540 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4541 ;;Total ram usage:        6 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 1
  4544 ;; This function calls:
  4545 ;;		_isupper
  4546 ;; This function is called by:
  4547 ;;		_efgtoa
  4548 ;;		_vfpfcnvrt
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text6
  4553  004342                     __ptext6:
  4554                           	callstack 0
  4555  004342                     _tolower:
  4556                           	callstack 26
  4557  004342  0EBF               	movlw	191
  4558  004344  6E09               	movwf	??_tolower^0,c
  4559  004346  0EFF               	movlw	255
  4560  004348  6E0A               	movwf	(??_tolower+1)^0,c
  4561  00434A  C007  F00B         	movff	tolower@c,??_tolower+2
  4562  00434E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4563  004352  5009               	movf	??_tolower^0,w,c
  4564  004354  260B               	addwf	(??_tolower+2)^0,f,c
  4565  004356  500A               	movf	(??_tolower+1)^0,w,c
  4566  004358  220C               	addwfc	(??_tolower+3)^0,f,c
  4567  00435A  500C               	movf	(??_tolower+3)^0,w,c
  4568  00435C  E107               	bnz	u4201
  4569  00435E  0E1A               	movlw	26
  4570  004360  5C0B               	subwf	(??_tolower+2)^0,w,c
  4571  004362  B0D8               	btfsc	status,0,c
  4572  004364  EFB6  F021         	goto	u4201
  4573  004368  EFB8  F021         	goto	u4200
  4574  00436C                     u4201:
  4575  00436C  EFBF  F021         	goto	l1191
  4576  004370                     u4200:
  4577  004370  0E20               	movlw	32
  4578  004372  1007               	iorwf	tolower@c^0,w,c
  4579  004374  6E07               	movwf	?_tolower^0,c
  4580  004376  5008               	movf	(tolower@c+1)^0,w,c
  4581  004378  6E08               	movwf	(?_tolower+1)^0,c
  4582  00437A  EFC3  F021         	goto	l1194
  4583  00437E                     l1191:
  4584  00437E  C007  F007         	movff	tolower@c,?_tolower
  4585  004382  C008  F008         	movff	tolower@c+1,?_tolower+1
  4586  004386                     l1194:
  4587  004386  0012               	return		;funcret
  4588  004388                     __end_of_tolower:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function _isupper *****************
  4592 ;; Defined at:
  4593 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  c               2    0[COMRAM] int 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;		None
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  2    0[COMRAM] int 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4607 ;;      Params:         2       0       0       0       0       0       0       0       0
  4608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4609 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4610 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4611 ;;Total ram usage:        6 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_efgtoa
  4617 ;;		_vfpfcnvrt
  4618 ;;		_tolower
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text7
  4623  0044D6                     __ptext7:
  4624                           	callstack 0
  4625  0044D6                     _isupper:
  4626                           	callstack 26
  4627  0044D6  0EBF               	movlw	191
  4628  0044D8  6E03               	movwf	??_isupper^0,c
  4629  0044DA  0EFF               	movlw	255
  4630  0044DC  6E04               	movwf	(??_isupper+1)^0,c
  4631  0044DE  C001  F005         	movff	isupper@c,??_isupper+2
  4632  0044E2  C002  F006         	movff	isupper@c+1,??_isupper+3
  4633  0044E6  5003               	movf	??_isupper^0,w,c
  4634  0044E8  2605               	addwf	(??_isupper+2)^0,f,c
  4635  0044EA  5004               	movf	(??_isupper+1)^0,w,c
  4636  0044EC  2206               	addwfc	(??_isupper+3)^0,f,c
  4637  0044EE  5006               	movf	(??_isupper+3)^0,w,c
  4638  0044F0  E10A               	bnz	u3210
  4639  0044F2  0E1A               	movlw	26
  4640  0044F4  5C05               	subwf	(??_isupper+2)^0,w,c
  4641  0044F6  A0D8               	btfss	status,0,c
  4642  0044F8  EF80  F022         	goto	u3211
  4643  0044FC  EF83  F022         	goto	u3210
  4644  004500                     u3211:
  4645  004500  0E01               	movlw	1
  4646  004502  EF84  F022         	goto	u3220
  4647  004506                     u3210:
  4648  004506  0E00               	movlw	0
  4649  004508                     u3220:
  4650  004508  6E01               	movwf	?_isupper^0,c
  4651  00450A  6A02               	clrf	(?_isupper+1)^0,c
  4652  00450C  0012               	return		;funcret
  4653  00450E                     __end_of_isupper:
  4654                           	callstack 0
  4655                           
  4656 ;; *************** function _strcpy *****************
  4657 ;; Defined at:
  4658 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4661 ;;		 -> dbuf(80), 
  4662 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4663 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4664 ;;		 -> dbuf(80), 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  d               2    8[COMRAM] PTR unsigned char 
  4667 ;;		 -> dbuf(80), 
  4668 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4669 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4670 ;;		 -> dbuf(80), 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  2    0[COMRAM] PTR unsigned char 
  4673 ;; Registers used:
  4674 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4680 ;;      Params:         4       0       0       0       0       0       0       0       0
  4681 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4682 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4683 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4684 ;;Total ram usage:       10 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_efgtoa
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text8
  4694  0041F8                     __ptext8:
  4695                           	callstack 0
  4696  0041F8                     _strcpy:
  4697                           	callstack 26
  4698  0041F8  C003  F007         	movff	strcpy@src,strcpy@s
  4699  0041FC  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4700  004200  C001  F009         	movff	strcpy@dest,strcpy@d
  4701  004204  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4702  004208                     l3861:
  4703  004208  5007               	movf	strcpy@s^0,w,c
  4704  00420A  6E05               	movwf	??_strcpy^0,c
  4705  00420C  5008               	movf	(strcpy@s+1)^0,w,c
  4706  00420E  6E06               	movwf	(??_strcpy+1)^0,c
  4707  004210  4A07               	infsnz	strcpy@s^0,f,c
  4708  004212  2A08               	incf	(strcpy@s+1)^0,f,c
  4709  004214  C005  FFF6         	movff	??_strcpy,tblptrl
  4710  004218  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4711  00421C  6AF8               	clrf	tblptru,c
  4712  00421E  C009  FFD9         	movff	strcpy@d,fsr2l
  4713  004222  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4714  004226  4A09               	infsnz	strcpy@d^0,f,c
  4715  004228  2A0A               	incf	(strcpy@d+1)^0,f,c
  4716  00422A  0E07               	movlw	(high __ramtop+-1)
  4717  00422C  64F7               	cpfsgt	tblptrh,c
  4718  00422E  D003               	bra	u4187
  4719  004230  0008               	tblrd		*
  4720  004232  50F5               	movf	tablat,w,c
  4721  004234  D005               	bra	u4180
  4722  004236                     u4187:
  4723  004236  CFF6 FFE9          	movff	tblptrl,fsr0l
  4724  00423A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4725  00423E  50EF               	movf	indf0,w,c
  4726  004240                     u4180:
  4727  004240  6EDF               	movwf	indf2,c
  4728  004242  50DF               	movf	indf2,w,c
  4729  004244  A4D8               	btfss	status,2,c
  4730  004246  EF27  F021         	goto	u4191
  4731  00424A  EF29  F021         	goto	u4190
  4732  00424E                     u4191:
  4733  00424E  EF04  F021         	goto	l3861
  4734  004252                     u4190:
  4735  004252  0012               	return		;funcret
  4736  004254                     __end_of_strcpy:
  4737                           	callstack 0
  4738                           
  4739 ;; *************** function _floorf *****************
  4740 ;; Defined at:
  4741 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  x               4    0[BANK0 ] float 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  u               4   16[BANK0 ] struct .
  4746 ;;  m               4   10[BANK0 ] unsigned long 
  4747 ;;  e               2   14[BANK0 ] int 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  4    0[BANK0 ] float 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4757 ;;      Params:         0       4       0       0       0       0       0       0       0
  4758 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4759 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4760 ;;      Totals:         0      20       0       0       0       0       0       0       0
  4761 ;;Total ram usage:       20 bytes
  4762 ;; Hardware stack levels used: 1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_efgtoa
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text9
  4771  002FAC                     __ptext9:
  4772                           	callstack 0
  4773  002FAC                     _floorf:
  4774                           	callstack 26
  4775  002FAC  C100  F070         	movff	floorf@F526,floorf@u
  4776  002FB0  C101  F071         	movff	floorf@F526+1,floorf@u+1
  4777  002FB4  C102  F072         	movff	floorf@F526+2,floorf@u+2
  4778  002FB8  C103  F073         	movff	floorf@F526+3,floorf@u+3
  4779  002FBC  C060  F070         	movff	floorf@x,floorf@u
  4780  002FC0  C061  F071         	movff	floorf@x+1,floorf@u+1
  4781  002FC4  C062  F072         	movff	floorf@x+2,floorf@u+2
  4782  002FC8  C063  F073         	movff	floorf@x+3,floorf@u+3
  4783  002FCC  0E81               	movlw	129
  4784  002FCE  0100               	movlb	0	; () banked
  4785  002FD0  6F64               	movwf	??_floorf& (0+255),b
  4786  002FD2  0EFF               	movlw	255
  4787  002FD4  6F65               	movwf	(??_floorf+1)& (0+255),b
  4788  002FD6  C070  F066         	movff	floorf@u,??_floorf+2
  4789  002FDA  C071  F067         	movff	floorf@u+1,??_floorf+3
  4790  002FDE  C072  F068         	movff	floorf@u+2,??_floorf+4
  4791  002FE2  C073  F069         	movff	floorf@u+3,??_floorf+5
  4792  002FE6  0E18               	movlw	24
  4793  002FE8  EFFB  F017         	goto	u4210
  4794  002FEC                     u4215:
  4795  002FEC  90D8               	bcf	status,0,c
  4796  002FEE  3369               	rrcf	(??_floorf+5)& (0+255),f,b
  4797  002FF0  3368               	rrcf	(??_floorf+4)& (0+255),f,b
  4798  002FF2  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  4799  002FF4  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  4800  002FF6                     u4210:
  4801  002FF6  2EE8               	decfsz	wreg,f,c
  4802  002FF8  EFF6  F017         	goto	u4215
  4803  002FFC  5166               	movf	(??_floorf+2)& (0+255),w,b
  4804  002FFE  2564               	addwf	??_floorf& (0+255),w,b
  4805  003000  6F6E               	movwf	floorf@e& (0+255),b
  4806  003002  0E00               	movlw	0
  4807  003004  2165               	addwfc	(??_floorf+1)& (0+255),w,b
  4808  003006  6F6F               	movwf	(floorf@e+1)& (0+255),b
  4809  003008  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
  4810  00300A  EF10  F018         	goto	u4221
  4811  00300E  516F               	movf	(floorf@e+1)& (0+255),w,b
  4812  003010  E109               	bnz	u4220
  4813  003012  0E17               	movlw	23
  4814  003014  5D6E               	subwf	floorf@e& (0+255),w,b
  4815  003016  A0D8               	btfss	status,0,c
  4816  003018  EF10  F018         	goto	u4221
  4817  00301C  EF12  F018         	goto	u4220
  4818  003020                     u4221:
  4819  003020  EF1C  F018         	goto	l3879
  4820  003024                     u4220:
  4821  003024                     l3877:
  4822                           
  4823                           ; BSR set to: 0
  4824  003024  C060  F060         	movff	floorf@x,?_floorf
  4825  003028  C061  F061         	movff	floorf@x+1,?_floorf+1
  4826  00302C  C062  F062         	movff	floorf@x+2,?_floorf+2
  4827  003030  C063  F063         	movff	floorf@x+3,?_floorf+3
  4828  003034  EFE0  F018         	goto	l1115
  4829  003038                     l3879:
  4830                           
  4831                           ; BSR set to: 0
  4832  003038  BF6F               	btfsc	(floorf@e+1)& (0+255),7,b
  4833  00303A  EF21  F018         	goto	u4231
  4834  00303E  EF23  F018         	goto	u4230
  4835  003042                     u4231:
  4836  003042  EF94  F018         	goto	l3889
  4837  003046                     u4230:
  4838  003046                     
  4839                           ; BSR set to: 0
  4840  003046  C06E  F064         	movff	floorf@e,??_floorf
  4841  00304A  0EFF               	movlw	255
  4842  00304C  6F65               	movwf	(??_floorf+1)& (0+255),b
  4843  00304E  0EFF               	movlw	255
  4844  003050  6F66               	movwf	(??_floorf+2)& (0+255),b
  4845  003052  0E7F               	movlw	127
  4846  003054  6F67               	movwf	(??_floorf+3)& (0+255),b
  4847  003056  0E00               	movlw	0
  4848  003058  6F68               	movwf	(??_floorf+4)& (0+255),b
  4849  00305A                     u4245:
  4850  00305A  6764               	tstfsz	??_floorf& (0+255),b
  4851  00305C  EF32  F018         	goto	u4246
  4852  003060  EF3A  F018         	goto	u4247
  4853  003064                     u4246:
  4854  003064  3568               	rlcf	(??_floorf+4)& (0+255),w,b
  4855  003066  3368               	rrcf	(??_floorf+4)& (0+255),f,b
  4856  003068  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  4857  00306A  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  4858  00306C  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  4859  00306E  2F64               	decfsz	??_floorf& (0+255),f,b
  4860  003070  EF2D  F018         	goto	u4245
  4861  003074                     u4247:
  4862  003074  C065  F06A         	movff	??_floorf+1,floorf@m
  4863  003078  C066  F06B         	movff	??_floorf+2,floorf@m+1
  4864  00307C  C067  F06C         	movff	??_floorf+3,floorf@m+2
  4865  003080  C068  F06D         	movff	??_floorf+4,floorf@m+3
  4866  003084  0100               	movlb	0	; () banked
  4867  003086  516A               	movf	floorf@m& (0+255),w,b
  4868  003088  1570               	andwf	floorf@u& (0+255),w,b
  4869  00308A  6F64               	movwf	??_floorf& (0+255),b
  4870  00308C  516B               	movf	(floorf@m+1)& (0+255),w,b
  4871  00308E  1571               	andwf	(floorf@u+1)& (0+255),w,b
  4872  003090  6F65               	movwf	(??_floorf+1)& (0+255),b
  4873  003092  516C               	movf	(floorf@m+2)& (0+255),w,b
  4874  003094  1572               	andwf	(floorf@u+2)& (0+255),w,b
  4875  003096  6F66               	movwf	(??_floorf+2)& (0+255),b
  4876  003098  516D               	movf	(floorf@m+3)& (0+255),w,b
  4877  00309A  1573               	andwf	(floorf@u+3)& (0+255),w,b
  4878  00309C  6F67               	movwf	(??_floorf+3)& (0+255),b
  4879  00309E  5164               	movf	??_floorf& (0+255),w,b
  4880  0030A0  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  4881  0030A2  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  4882  0030A4  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  4883  0030A6  A4D8               	btfss	status,2,c
  4884  0030A8  EF58  F018         	goto	u4251
  4885  0030AC  EF5A  F018         	goto	u4250
  4886  0030B0                     u4251:
  4887  0030B0  EF5C  F018         	goto	l3885
  4888  0030B4                     u4250:
  4889  0030B4  EF12  F018         	goto	l3877
  4890  0030B8                     l3885:
  4891                           
  4892                           ; BSR set to: 0
  4893  0030B8  C070  F064         	movff	floorf@u,??_floorf
  4894  0030BC  C071  F065         	movff	floorf@u+1,??_floorf+1
  4895  0030C0  C072  F066         	movff	floorf@u+2,??_floorf+2
  4896  0030C4  C073  F067         	movff	floorf@u+3,??_floorf+3
  4897  0030C8  0E20               	movlw	32
  4898  0030CA  EF6C  F018         	goto	u4260
  4899  0030CE                     u4265:
  4900  0030CE  90D8               	bcf	status,0,c
  4901  0030D0  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  4902  0030D2  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  4903  0030D4  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  4904  0030D6  3364               	rrcf	??_floorf& (0+255),f,b
  4905  0030D8                     u4260:
  4906  0030D8  2EE8               	decfsz	wreg,f,c
  4907  0030DA  EF67  F018         	goto	u4265
  4908  0030DE  5164               	movf	??_floorf& (0+255),w,b
  4909  0030E0  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  4910  0030E2  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  4911  0030E4  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  4912  0030E6  B4D8               	btfsc	status,2,c
  4913  0030E8  EF78  F018         	goto	u4271
  4914  0030EC  EF7A  F018         	goto	u4270
  4915  0030F0                     u4271:
  4916  0030F0  EF82  F018         	goto	l1118
  4917  0030F4                     u4270:
  4918  0030F4                     
  4919                           ; BSR set to: 0
  4920  0030F4  516A               	movf	floorf@m& (0+255),w,b
  4921  0030F6  2770               	addwf	floorf@u& (0+255),f,b
  4922  0030F8  516B               	movf	(floorf@m+1)& (0+255),w,b
  4923  0030FA  2371               	addwfc	(floorf@u+1)& (0+255),f,b
  4924  0030FC  516C               	movf	(floorf@m+2)& (0+255),w,b
  4925  0030FE  2372               	addwfc	(floorf@u+2)& (0+255),f,b
  4926  003100  516D               	movf	(floorf@m+3)& (0+255),w,b
  4927  003102  2373               	addwfc	(floorf@u+3)& (0+255),f,b
  4928  003104                     l1118:
  4929                           
  4930                           ; BSR set to: 0
  4931  003104  1D6A               	comf	floorf@m& (0+255),w,b
  4932  003106  6F64               	movwf	??_floorf& (0+255),b
  4933  003108  1D6B               	comf	(floorf@m+1)& (0+255),w,b
  4934  00310A  6F65               	movwf	(??_floorf+1)& (0+255),b
  4935  00310C  1D6C               	comf	(floorf@m+2)& (0+255),w,b
  4936  00310E  6F66               	movwf	(??_floorf+2)& (0+255),b
  4937  003110  1D6D               	comf	(floorf@m+3)& (0+255),w,b
  4938  003112  6F67               	movwf	(??_floorf+3)& (0+255),b
  4939  003114  5164               	movf	??_floorf& (0+255),w,b
  4940  003116  1770               	andwf	floorf@u& (0+255),f,b
  4941  003118  5165               	movf	(??_floorf+1)& (0+255),w,b
  4942  00311A  1771               	andwf	(floorf@u+1)& (0+255),f,b
  4943  00311C  5166               	movf	(??_floorf+2)& (0+255),w,b
  4944  00311E  1772               	andwf	(floorf@u+2)& (0+255),f,b
  4945  003120  5167               	movf	(??_floorf+3)& (0+255),w,b
  4946  003122  1773               	andwf	(floorf@u+3)& (0+255),f,b
  4947  003124  EFD8  F018         	goto	l3897
  4948  003128                     l3889:
  4949                           
  4950                           ; BSR set to: 0
  4951  003128  C070  F064         	movff	floorf@u,??_floorf
  4952  00312C  C071  F065         	movff	floorf@u+1,??_floorf+1
  4953  003130  C072  F066         	movff	floorf@u+2,??_floorf+2
  4954  003134  C073  F067         	movff	floorf@u+3,??_floorf+3
  4955  003138  0E20               	movlw	32
  4956  00313A  EFA4  F018         	goto	u4280
  4957  00313E                     u4285:
  4958  00313E  90D8               	bcf	status,0,c
  4959  003140  3367               	rrcf	(??_floorf+3)& (0+255),f,b
  4960  003142  3366               	rrcf	(??_floorf+2)& (0+255),f,b
  4961  003144  3365               	rrcf	(??_floorf+1)& (0+255),f,b
  4962  003146  3364               	rrcf	??_floorf& (0+255),f,b
  4963  003148                     u4280:
  4964  003148  2EE8               	decfsz	wreg,f,c
  4965  00314A  EF9F  F018         	goto	u4285
  4966  00314E  5164               	movf	??_floorf& (0+255),w,b
  4967  003150  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  4968  003152  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  4969  003154  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  4970  003156  A4D8               	btfss	status,2,c
  4971  003158  EFB0  F018         	goto	u4291
  4972  00315C  EFB2  F018         	goto	u4290
  4973  003160                     u4291:
  4974  003160  EFBC  F018         	goto	l3893
  4975  003164                     u4290:
  4976  003164                     
  4977                           ; BSR set to: 0
  4978  003164  0E00               	movlw	0
  4979  003166  6F70               	movwf	floorf@u& (0+255),b
  4980  003168  0E00               	movlw	0
  4981  00316A  6F71               	movwf	(floorf@u+1)& (0+255),b
  4982  00316C  0E00               	movlw	0
  4983  00316E  6F72               	movwf	(floorf@u+2)& (0+255),b
  4984  003170  0E00               	movlw	0
  4985  003172  6F73               	movwf	(floorf@u+3)& (0+255),b
  4986  003174  EFD8  F018         	goto	l3897
  4987  003178                     l3893:
  4988                           
  4989                           ; BSR set to: 0
  4990  003178  90D8               	bcf	status,0,c
  4991  00317A  3570               	rlcf	floorf@u& (0+255),w,b
  4992  00317C  6F64               	movwf	??_floorf& (0+255),b
  4993  00317E  3571               	rlcf	(floorf@u+1)& (0+255),w,b
  4994  003180  6F65               	movwf	(??_floorf+1)& (0+255),b
  4995  003182  3572               	rlcf	(floorf@u+2)& (0+255),w,b
  4996  003184  6F66               	movwf	(??_floorf+2)& (0+255),b
  4997  003186  3573               	rlcf	(floorf@u+3)& (0+255),w,b
  4998  003188  6F67               	movwf	(??_floorf+3)& (0+255),b
  4999  00318A  5164               	movf	??_floorf& (0+255),w,b
  5000  00318C  1165               	iorwf	(??_floorf+1)& (0+255),w,b
  5001  00318E  1166               	iorwf	(??_floorf+2)& (0+255),w,b
  5002  003190  1167               	iorwf	(??_floorf+3)& (0+255),w,b
  5003  003192  B4D8               	btfsc	status,2,c
  5004  003194  EFCE  F018         	goto	u4301
  5005  003198  EFD0  F018         	goto	u4300
  5006  00319C                     u4301:
  5007  00319C  EFD8  F018         	goto	l3897
  5008  0031A0                     u4300:
  5009  0031A0                     
  5010                           ; BSR set to: 0
  5011  0031A0  0E00               	movlw	0
  5012  0031A2  6F70               	movwf	floorf@u& (0+255),b
  5013  0031A4  0E00               	movlw	0
  5014  0031A6  6F71               	movwf	(floorf@u+1)& (0+255),b
  5015  0031A8  0E80               	movlw	128
  5016  0031AA  6F72               	movwf	(floorf@u+2)& (0+255),b
  5017  0031AC  0EBF               	movlw	191
  5018  0031AE  6F73               	movwf	(floorf@u+3)& (0+255),b
  5019  0031B0                     l3897:
  5020                           
  5021                           ; BSR set to: 0
  5022  0031B0  C070  F060         	movff	floorf@u,?_floorf
  5023  0031B4  C071  F061         	movff	floorf@u+1,?_floorf+1
  5024  0031B8  C072  F062         	movff	floorf@u+2,?_floorf+2
  5025  0031BC  C073  F063         	movff	floorf@u+3,?_floorf+3
  5026  0031C0                     l1115:
  5027                           
  5028                           ; BSR set to: 0
  5029  0031C0  0012               	return		;funcret
  5030  0031C2                     __end_of_floorf:
  5031                           	callstack 0
  5032                           
  5033 ;; *************** function ___fpclassifyf *****************
  5034 ;; Defined at:
  5035 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;  x               4    0[COMRAM] float 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  u               4   10[COMRAM] struct .
  5040 ;;  e               2    8[COMRAM] int 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  2    0[COMRAM] int 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5050 ;;      Params:         4       0       0       0       0       0       0       0       0
  5051 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5052 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5053 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5054 ;;Total ram usage:       14 bytes
  5055 ;; Hardware stack levels used: 1
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_efgtoa
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text10
  5064  0039C4                     __ptext10:
  5065                           	callstack 0
  5066  0039C4                     ___fpclassifyf:
  5067                           	callstack 26
  5068  0039C4  C104  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5069  0039C8  C105  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5070  0039CC  C106  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5071  0039D0  C107  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5072  0039D4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5073  0039D8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5074  0039DC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5075  0039E0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5076  0039E4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5077  0039E8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5078  0039EC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5079  0039F0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5080  0039F4  0E18               	movlw	24
  5081  0039F6  EF02  F01D         	goto	u4110
  5082  0039FA                     u4115:
  5083  0039FA  90D8               	bcf	status,0,c
  5084  0039FC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5085  0039FE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5086  003A00  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5087  003A02  3205               	rrcf	??___fpclassifyf^0,f,c
  5088  003A04                     u4110:
  5089  003A04  2EE8               	decfsz	wreg,f,c
  5090  003A06  EFFD  F01C         	goto	u4115
  5091  003A0A  5005               	movf	??___fpclassifyf^0,w,c
  5092  003A0C  6E09               	movwf	___fpclassifyf@e^0,c
  5093  003A0E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5094  003A10  5009               	movf	___fpclassifyf@e^0,w,c
  5095  003A12  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5096  003A14  A4D8               	btfss	status,2,c
  5097  003A16  EF0F  F01D         	goto	u4121
  5098  003A1A  EF11  F01D         	goto	u4120
  5099  003A1E                     u4121:
  5100  003A1E  EF31  F01D         	goto	l3849
  5101  003A22                     u4120:
  5102  003A22  90D8               	bcf	status,0,c
  5103  003A24  340B               	rlcf	___fpclassifyf@u^0,w,c
  5104  003A26  6E05               	movwf	??___fpclassifyf^0,c
  5105  003A28  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5106  003A2A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5107  003A2C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5108  003A2E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5109  003A30  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5110  003A32  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5111  003A34  5005               	movf	??___fpclassifyf^0,w,c
  5112  003A36  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5113  003A38  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5114  003A3A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5115  003A3C  A4D8               	btfss	status,2,c
  5116  003A3E  EF23  F01D         	goto	u4131
  5117  003A42  EF25  F01D         	goto	u4130
  5118  003A46                     u4131:
  5119  003A46  EF2B  F01D         	goto	l3845
  5120  003A4A                     u4130:
  5121  003A4A  0E00               	movlw	0
  5122  003A4C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5123  003A4E  0E02               	movlw	2
  5124  003A50  6E01               	movwf	?___fpclassifyf^0,c
  5125  003A52  EF60  F01D         	goto	l1076
  5126  003A56                     l3845:
  5127  003A56  0E00               	movlw	0
  5128  003A58  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5129  003A5A  0E03               	movlw	3
  5130  003A5C  6E01               	movwf	?___fpclassifyf^0,c
  5131  003A5E  EF60  F01D         	goto	l1076
  5132  003A62                     l3849:
  5133  003A62  2809               	incf	___fpclassifyf@e^0,w,c
  5134  003A64  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5135  003A66  A4D8               	btfss	status,2,c
  5136  003A68  EF38  F01D         	goto	u4141
  5137  003A6C  EF3A  F01D         	goto	u4140
  5138  003A70                     u4141:
  5139  003A70  EF5C  F01D         	goto	l3855
  5140  003A74                     u4140:
  5141  003A74  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5142  003A78  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5143  003A7C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5144  003A80  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5145  003A84  0E09               	movlw	9
  5146  003A86                     u4155:
  5147  003A86  90D8               	bcf	status,0,c
  5148  003A88  3605               	rlcf	??___fpclassifyf^0,f,c
  5149  003A8A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5150  003A8C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5151  003A8E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5152  003A90  2EE8               	decfsz	wreg,f,c
  5153  003A92  EF43  F01D         	goto	u4155
  5154  003A96  5005               	movf	??___fpclassifyf^0,w,c
  5155  003A98  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5156  003A9A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5157  003A9C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5158  003A9E  B4D8               	btfsc	status,2,c
  5159  003AA0  EF54  F01D         	goto	u4161
  5160  003AA4  EF57  F01D         	goto	u4160
  5161  003AA8                     u4161:
  5162  003AA8  0E01               	movlw	1
  5163  003AAA  EF58  F01D         	goto	u4170
  5164  003AAE                     u4160:
  5165  003AAE  0E00               	movlw	0
  5166  003AB0                     u4170:
  5167  003AB0  6E01               	movwf	?___fpclassifyf^0,c
  5168  003AB2  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5169  003AB4  EF60  F01D         	goto	l1076
  5170  003AB8                     l3855:
  5171  003AB8  0E00               	movlw	0
  5172  003ABA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5173  003ABC  0E04               	movlw	4
  5174  003ABE  6E01               	movwf	?___fpclassifyf^0,c
  5175  003AC0                     l1076:
  5176  003AC0  0012               	return		;funcret
  5177  003AC2                     __end_of___fpclassifyf:
  5178                           	callstack 0
  5179                           
  5180 ;; *************** function ___flsub *****************
  5181 ;; Defined at:
  5182 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  b               4   34[COMRAM] int 
  5185 ;;  a               4   38[COMRAM] int 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  4   34[COMRAM] int 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5197 ;;      Params:         8       0       0       0       0       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5200 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5201 ;;Total ram usage:        8 bytes
  5202 ;; Hardware stack levels used: 1
  5203 ;; Hardware stack levels required when called: 1
  5204 ;; This function calls:
  5205 ;;		___fladd
  5206 ;; This function is called by:
  5207 ;;		_main
  5208 ;;		_efgtoa
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text11
  5213  004388                     __ptext11:
  5214                           	callstack 0
  5215  004388                     ___flsub:
  5216                           	callstack 25
  5217  004388  0E00               	movlw	0
  5218  00438A  1A27               	xorwf	___flsub@a^0,f,c
  5219  00438C  0E00               	movlw	0
  5220  00438E  1A28               	xorwf	(___flsub@a+1)^0,f,c
  5221  004390  0E00               	movlw	0
  5222  004392  1A29               	xorwf	(___flsub@a+2)^0,f,c
  5223  004394  0E80               	movlw	128
  5224  004396  1A2A               	xorwf	(___flsub@a+3)^0,f,c
  5225  004398  C023  F013         	movff	___flsub@b,___fladd@b
  5226  00439C  C024  F014         	movff	___flsub@b+1,___fladd@b+1
  5227  0043A0  C025  F015         	movff	___flsub@b+2,___fladd@b+2
  5228  0043A4  C026  F016         	movff	___flsub@b+3,___fladd@b+3
  5229  0043A8  C027  F017         	movff	___flsub@a,___fladd@a
  5230  0043AC  C028  F018         	movff	___flsub@a+1,___fladd@a+1
  5231  0043B0  C029  F019         	movff	___flsub@a+2,___fladd@a+2
  5232  0043B4  C02A  F01A         	movff	___flsub@a+3,___fladd@a+3
  5233  0043B8  EC75  F00D         	call	___fladd	;wreg free
  5234  0043BC  C013  F023         	movff	?___fladd,?___flsub
  5235  0043C0  C014  F024         	movff	?___fladd+1,?___flsub+1
  5236  0043C4  C015  F025         	movff	?___fladd+2,?___flsub+2
  5237  0043C8  C016  F026         	movff	?___fladd+3,?___flsub+3
  5238  0043CC  0012               	return		;funcret
  5239  0043CE                     __end_of___flsub:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function ___flneg *****************
  5243 ;; Defined at:
  5244 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  f1              4    0[COMRAM] int 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  4    0[COMRAM] int 
  5251 ;; Registers used:
  5252 ;;		wreg, status,2, status,0
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5258 ;;      Params:         4       0       0       0       0       0       0       0       0
  5259 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5261 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5262 ;;Total ram usage:        4 bytes
  5263 ;; Hardware stack levels used: 1
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_efgtoa
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text12
  5272  00450E                     __ptext12:
  5273                           	callstack 0
  5274  00450E                     ___flneg:
  5275                           	callstack 26
  5276  00450E  5001               	movf	___flneg@f1^0,w,c
  5277  004510  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5278  004512  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5279  004514  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5280  004516  B4D8               	btfsc	status,2,c
  5281  004518  EF90  F022         	goto	u3981
  5282  00451C  EF92  F022         	goto	u3980
  5283  004520                     u3981:
  5284  004520  EF9A  F022         	goto	l3763
  5285  004524                     u3980:
  5286  004524  0E00               	movlw	0
  5287  004526  1A01               	xorwf	___flneg@f1^0,f,c
  5288  004528  0E00               	movlw	0
  5289  00452A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5290  00452C  0E00               	movlw	0
  5291  00452E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5292  004530  0E80               	movlw	128
  5293  004532  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5294  004534                     l3763:
  5295  004534  C001  F001         	movff	___flneg@f1,?___flneg
  5296  004538  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5297  00453C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5298  004540  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5299  004544  0012               	return		;funcret
  5300  004546                     __end_of___flneg:
  5301                           	callstack 0
  5302                           
  5303 ;; *************** function ___flge *****************
  5304 ;; Defined at:
  5305 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  ff1             4   67[COMRAM] int 
  5308 ;;  ff2             4   71[COMRAM] int 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;		None
  5311 ;; Return value:  Size  Location     Type
  5312 ;;		None               void
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, status,0
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5320 ;;      Params:         8       0       0       0       0       0       0       0       0
  5321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5322 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5323 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5324 ;;Total ram usage:       12 bytes
  5325 ;; Hardware stack levels used: 1
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		_main
  5330 ;;		_efgtoa
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text13
  5335  0038C0                     __ptext13:
  5336                           	callstack 0
  5337  0038C0                     ___flge:
  5338                           	callstack 26
  5339  0038C0  0E00               	movlw	0
  5340  0038C2  1444               	andwf	___flge@ff1^0,w,c
  5341  0038C4  6E4C               	movwf	??___flge^0,c
  5342  0038C6  0E00               	movlw	0
  5343  0038C8  1445               	andwf	(___flge@ff1+1)^0,w,c
  5344  0038CA  6E4D               	movwf	(??___flge+1)^0,c
  5345  0038CC  0E80               	movlw	128
  5346  0038CE  1446               	andwf	(___flge@ff1+2)^0,w,c
  5347  0038D0  6E4E               	movwf	(??___flge+2)^0,c
  5348  0038D2  0E7F               	movlw	127
  5349  0038D4  1447               	andwf	(___flge@ff1+3)^0,w,c
  5350  0038D6  6E4F               	movwf	(??___flge+3)^0,c
  5351  0038D8  504C               	movf	??___flge^0,w,c
  5352  0038DA  104D               	iorwf	(??___flge+1)^0,w,c
  5353  0038DC  104E               	iorwf	(??___flge+2)^0,w,c
  5354  0038DE  104F               	iorwf	(??___flge+3)^0,w,c
  5355  0038E0  A4D8               	btfss	status,2,c
  5356  0038E2  EF75  F01C         	goto	u3931
  5357  0038E6  EF77  F01C         	goto	u3930
  5358  0038EA                     u3931:
  5359  0038EA  EF7F  F01C         	goto	l3741
  5360  0038EE                     u3930:
  5361  0038EE  0E00               	movlw	0
  5362  0038F0  6E44               	movwf	___flge@ff1^0,c
  5363  0038F2  0E00               	movlw	0
  5364  0038F4  6E45               	movwf	(___flge@ff1+1)^0,c
  5365  0038F6  0E00               	movlw	0
  5366  0038F8  6E46               	movwf	(___flge@ff1+2)^0,c
  5367  0038FA  0E00               	movlw	0
  5368  0038FC  6E47               	movwf	(___flge@ff1+3)^0,c
  5369  0038FE                     l3741:
  5370  0038FE  0E00               	movlw	0
  5371  003900  1448               	andwf	___flge@ff2^0,w,c
  5372  003902  6E4C               	movwf	??___flge^0,c
  5373  003904  0E00               	movlw	0
  5374  003906  1449               	andwf	(___flge@ff2+1)^0,w,c
  5375  003908  6E4D               	movwf	(??___flge+1)^0,c
  5376  00390A  0E80               	movlw	128
  5377  00390C  144A               	andwf	(___flge@ff2+2)^0,w,c
  5378  00390E  6E4E               	movwf	(??___flge+2)^0,c
  5379  003910  0E7F               	movlw	127
  5380  003912  144B               	andwf	(___flge@ff2+3)^0,w,c
  5381  003914  6E4F               	movwf	(??___flge+3)^0,c
  5382  003916  504C               	movf	??___flge^0,w,c
  5383  003918  104D               	iorwf	(??___flge+1)^0,w,c
  5384  00391A  104E               	iorwf	(??___flge+2)^0,w,c
  5385  00391C  104F               	iorwf	(??___flge+3)^0,w,c
  5386  00391E  A4D8               	btfss	status,2,c
  5387  003920  EF94  F01C         	goto	u3941
  5388  003924  EF96  F01C         	goto	u3940
  5389  003928                     u3941:
  5390  003928  EF9E  F01C         	goto	l3745
  5391  00392C                     u3940:
  5392  00392C  0E00               	movlw	0
  5393  00392E  6E48               	movwf	___flge@ff2^0,c
  5394  003930  0E00               	movlw	0
  5395  003932  6E49               	movwf	(___flge@ff2+1)^0,c
  5396  003934  0E00               	movlw	0
  5397  003936  6E4A               	movwf	(___flge@ff2+2)^0,c
  5398  003938  0E00               	movlw	0
  5399  00393A  6E4B               	movwf	(___flge@ff2+3)^0,c
  5400  00393C                     l3745:
  5401  00393C  AE47               	btfss	(___flge@ff1+3)^0,7,c
  5402  00393E  EFA3  F01C         	goto	u3951
  5403  003942  EFA5  F01C         	goto	u3950
  5404  003946                     u3951:
  5405  003946  EFAE  F01C         	goto	l3749
  5406  00394A                     u3950:
  5407  00394A  6C44               	negf	___flge@ff1^0,c
  5408  00394C  1E45               	comf	(___flge@ff1+1)^0,f,c
  5409  00394E  B0D8               	btfsc	status,0,c
  5410  003950  2A45               	incf	(___flge@ff1+1)^0,f,c
  5411  003952  1E46               	comf	(___flge@ff1+2)^0,f,c
  5412  003954  B0D8               	btfsc	status,0,c
  5413  003956  2A46               	incf	(___flge@ff1+2)^0,f,c
  5414  003958  0E80               	movlw	128
  5415  00395A  5647               	subfwb	(___flge@ff1+3)^0,f,c
  5416  00395C                     l3749:
  5417  00395C  AE4B               	btfss	(___flge@ff2+3)^0,7,c
  5418  00395E  EFB3  F01C         	goto	u3961
  5419  003962  EFB5  F01C         	goto	u3960
  5420  003966                     u3961:
  5421  003966  EFBE  F01C         	goto	l442
  5422  00396A                     u3960:
  5423  00396A  6C48               	negf	___flge@ff2^0,c
  5424  00396C  1E49               	comf	(___flge@ff2+1)^0,f,c
  5425  00396E  B0D8               	btfsc	status,0,c
  5426  003970  2A49               	incf	(___flge@ff2+1)^0,f,c
  5427  003972  1E4A               	comf	(___flge@ff2+2)^0,f,c
  5428  003974  B0D8               	btfsc	status,0,c
  5429  003976  2A4A               	incf	(___flge@ff2+2)^0,f,c
  5430  003978  0E80               	movlw	128
  5431  00397A  564B               	subfwb	(___flge@ff2+3)^0,f,c
  5432  00397C                     l442:
  5433  00397C  0E00               	movlw	0
  5434  00397E  1A44               	xorwf	___flge@ff1^0,f,c
  5435  003980  0E00               	movlw	0
  5436  003982  1A45               	xorwf	(___flge@ff1+1)^0,f,c
  5437  003984  0E00               	movlw	0
  5438  003986  1A46               	xorwf	(___flge@ff1+2)^0,f,c
  5439  003988  0E80               	movlw	128
  5440  00398A  1A47               	xorwf	(___flge@ff1+3)^0,f,c
  5441  00398C  0E00               	movlw	0
  5442  00398E  1A48               	xorwf	___flge@ff2^0,f,c
  5443  003990  0E00               	movlw	0
  5444  003992  1A49               	xorwf	(___flge@ff2+1)^0,f,c
  5445  003994  0E00               	movlw	0
  5446  003996  1A4A               	xorwf	(___flge@ff2+2)^0,f,c
  5447  003998  0E80               	movlw	128
  5448  00399A  1A4B               	xorwf	(___flge@ff2+3)^0,f,c
  5449  00399C  5048               	movf	___flge@ff2^0,w,c
  5450  00399E  5C44               	subwf	___flge@ff1^0,w,c
  5451  0039A0  5049               	movf	(___flge@ff2+1)^0,w,c
  5452  0039A2  5845               	subwfb	(___flge@ff1+1)^0,w,c
  5453  0039A4  504A               	movf	(___flge@ff2+2)^0,w,c
  5454  0039A6  5846               	subwfb	(___flge@ff1+2)^0,w,c
  5455  0039A8  504B               	movf	(___flge@ff2+3)^0,w,c
  5456  0039AA  5847               	subwfb	(___flge@ff1+3)^0,w,c
  5457  0039AC  B0D8               	btfsc	status,0,c
  5458  0039AE  EFDB  F01C         	goto	u3971
  5459  0039B2  EFDD  F01C         	goto	u3970
  5460  0039B6                     u3971:
  5461  0039B6  EFE0  F01C         	goto	l3755
  5462  0039BA                     u3970:
  5463  0039BA  90D8               	bcf	status,0,c
  5464  0039BC  EFE1  F01C         	goto	l447
  5465  0039C0                     l3755:
  5466  0039C0  80D8               	bsf	status,0,c
  5467  0039C2                     l447:
  5468  0039C2  0012               	return		;funcret
  5469  0039C4                     __end_of___flge:
  5470                           	callstack 0
  5471                           
  5472 ;; *************** function ___fleq *****************
  5473 ;; Defined at:
  5474 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  ff1             4    0[COMRAM] int 
  5477 ;;  ff2             4    4[COMRAM] int 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;		None               void
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5489 ;;      Params:         8       0       0       0       0       0       0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5491 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5492 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5493 ;;Total ram usage:       12 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_efgtoa
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text14
  5503  004040                     __ptext14:
  5504                           	callstack 0
  5505  004040                     ___fleq:
  5506                           	callstack 26
  5507  004040  0E00               	movlw	0
  5508  004042  1401               	andwf	___fleq@ff1^0,w,c
  5509  004044  6E09               	movwf	??___fleq^0,c
  5510  004046  0E00               	movlw	0
  5511  004048  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5512  00404A  6E0A               	movwf	(??___fleq+1)^0,c
  5513  00404C  0E80               	movlw	128
  5514  00404E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5515  004050  6E0B               	movwf	(??___fleq+2)^0,c
  5516  004052  0E7F               	movlw	127
  5517  004054  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5518  004056  6E0C               	movwf	(??___fleq+3)^0,c
  5519  004058  5009               	movf	??___fleq^0,w,c
  5520  00405A  100A               	iorwf	(??___fleq+1)^0,w,c
  5521  00405C  100B               	iorwf	(??___fleq+2)^0,w,c
  5522  00405E  100C               	iorwf	(??___fleq+3)^0,w,c
  5523  004060  A4D8               	btfss	status,2,c
  5524  004062  EF35  F020         	goto	u3901
  5525  004066  EF37  F020         	goto	u3900
  5526  00406A                     u3901:
  5527  00406A  EF3F  F020         	goto	l3725
  5528  00406E                     u3900:
  5529  00406E  0E00               	movlw	0
  5530  004070  6E01               	movwf	___fleq@ff1^0,c
  5531  004072  0E00               	movlw	0
  5532  004074  6E02               	movwf	(___fleq@ff1+1)^0,c
  5533  004076  0E00               	movlw	0
  5534  004078  6E03               	movwf	(___fleq@ff1+2)^0,c
  5535  00407A  0E00               	movlw	0
  5536  00407C  6E04               	movwf	(___fleq@ff1+3)^0,c
  5537  00407E                     l3725:
  5538  00407E  0E00               	movlw	0
  5539  004080  1405               	andwf	___fleq@ff2^0,w,c
  5540  004082  6E09               	movwf	??___fleq^0,c
  5541  004084  0E00               	movlw	0
  5542  004086  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5543  004088  6E0A               	movwf	(??___fleq+1)^0,c
  5544  00408A  0E80               	movlw	128
  5545  00408C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5546  00408E  6E0B               	movwf	(??___fleq+2)^0,c
  5547  004090  0E7F               	movlw	127
  5548  004092  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5549  004094  6E0C               	movwf	(??___fleq+3)^0,c
  5550  004096  5009               	movf	??___fleq^0,w,c
  5551  004098  100A               	iorwf	(??___fleq+1)^0,w,c
  5552  00409A  100B               	iorwf	(??___fleq+2)^0,w,c
  5553  00409C  100C               	iorwf	(??___fleq+3)^0,w,c
  5554  00409E  A4D8               	btfss	status,2,c
  5555  0040A0  EF54  F020         	goto	u3911
  5556  0040A4  EF56  F020         	goto	u3910
  5557  0040A8                     u3911:
  5558  0040A8  EF5E  F020         	goto	l3729
  5559  0040AC                     u3910:
  5560  0040AC  0E00               	movlw	0
  5561  0040AE  6E05               	movwf	___fleq@ff2^0,c
  5562  0040B0  0E00               	movlw	0
  5563  0040B2  6E06               	movwf	(___fleq@ff2+1)^0,c
  5564  0040B4  0E00               	movlw	0
  5565  0040B6  6E07               	movwf	(___fleq@ff2+2)^0,c
  5566  0040B8  0E00               	movlw	0
  5567  0040BA  6E08               	movwf	(___fleq@ff2+3)^0,c
  5568  0040BC                     l3729:
  5569  0040BC  5005               	movf	___fleq@ff2^0,w,c
  5570  0040BE  1801               	xorwf	___fleq@ff1^0,w,c
  5571  0040C0  E10F               	bnz	u3920
  5572  0040C2  5006               	movf	(___fleq@ff2+1)^0,w,c
  5573  0040C4  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5574  0040C6  E10C               	bnz	u3920
  5575  0040C8  5007               	movf	(___fleq@ff2+2)^0,w,c
  5576  0040CA  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5577  0040CC  E109               	bnz	u3920
  5578  0040CE  5008               	movf	(___fleq@ff2+3)^0,w,c
  5579  0040D0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5580  0040D2  B4D8               	btfsc	status,2,c
  5581  0040D4  EF6E  F020         	goto	u3921
  5582  0040D8  EF70  F020         	goto	u3920
  5583  0040DC                     u3921:
  5584  0040DC  EF73  F020         	goto	l3733
  5585  0040E0                     u3920:
  5586  0040E0  90D8               	bcf	status,0,c
  5587  0040E2  EF74  F020         	goto	l436
  5588  0040E6                     l3733:
  5589  0040E6  80D8               	bsf	status,0,c
  5590  0040E8                     l436:
  5591  0040E8  0012               	return		;funcret
  5592  0040EA                     __end_of___fleq:
  5593                           	callstack 0
  5594                           
  5595 ;; *************** function ___awmod *****************
  5596 ;; Defined at:
  5597 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  dividend        2    0[COMRAM] int 
  5600 ;;  divisor         2    2[COMRAM] int 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;  sign            1    5[COMRAM] unsigned char 
  5603 ;;  counter         1    4[COMRAM] unsigned char 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  2    0[COMRAM] int 
  5606 ;; Registers used:
  5607 ;;		wreg, status,2, status,0
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5613 ;;      Params:         4       0       0       0       0       0       0       0       0
  5614 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5616 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5617 ;;Total ram usage:        6 bytes
  5618 ;; Hardware stack levels used: 1
  5619 ;; This function calls:
  5620 ;;		Nothing
  5621 ;; This function is called by:
  5622 ;;		_efgtoa
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           	psect	text15
  5627  003F90                     __ptext15:
  5628                           	callstack 0
  5629  003F90                     ___awmod:
  5630                           	callstack 26
  5631  003F90  0E00               	movlw	0
  5632  003F92  6E06               	movwf	___awmod@sign^0,c
  5633  003F94  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5634  003F96  EFD1  F01F         	goto	u3840
  5635  003F9A  EFCF  F01F         	goto	u3841
  5636  003F9E                     u3841:
  5637  003F9E  EFD7  F01F         	goto	l3693
  5638  003FA2                     u3840:
  5639  003FA2  6C01               	negf	___awmod@dividend^0,c
  5640  003FA4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5641  003FA6  B0D8               	btfsc	status,0,c
  5642  003FA8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5643  003FAA  0E01               	movlw	1
  5644  003FAC  6E06               	movwf	___awmod@sign^0,c
  5645  003FAE                     l3693:
  5646  003FAE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5647  003FB0  EFDE  F01F         	goto	u3850
  5648  003FB4  EFDC  F01F         	goto	u3851
  5649  003FB8                     u3851:
  5650  003FB8  EFE2  F01F         	goto	l3697
  5651  003FBC                     u3850:
  5652  003FBC  6C03               	negf	___awmod@divisor^0,c
  5653  003FBE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5654  003FC0  B0D8               	btfsc	status,0,c
  5655  003FC2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5656  003FC4                     l3697:
  5657  003FC4  5003               	movf	___awmod@divisor^0,w,c
  5658  003FC6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5659  003FC8  B4D8               	btfsc	status,2,c
  5660  003FCA  EFE9  F01F         	goto	u3861
  5661  003FCE  EFEB  F01F         	goto	u3860
  5662  003FD2                     u3861:
  5663  003FD2  EF0F  F020         	goto	l3713
  5664  003FD6                     u3860:
  5665  003FD6  0E01               	movlw	1
  5666  003FD8  6E05               	movwf	___awmod@counter^0,c
  5667  003FDA  EFF3  F01F         	goto	l3703
  5668  003FDE                     l3701:
  5669  003FDE  90D8               	bcf	status,0,c
  5670  003FE0  3603               	rlcf	___awmod@divisor^0,f,c
  5671  003FE2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5672  003FE4  2A05               	incf	___awmod@counter^0,f,c
  5673  003FE6                     l3703:
  5674  003FE6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5675  003FE8  EFF8  F01F         	goto	u3871
  5676  003FEC  EFFA  F01F         	goto	u3870
  5677  003FF0                     u3871:
  5678  003FF0  EFEF  F01F         	goto	l3701
  5679  003FF4                     u3870:
  5680  003FF4                     l3705:
  5681  003FF4  5003               	movf	___awmod@divisor^0,w,c
  5682  003FF6  5C01               	subwf	___awmod@dividend^0,w,c
  5683  003FF8  5004               	movf	(___awmod@divisor+1)^0,w,c
  5684  003FFA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5685  003FFC  A0D8               	btfss	status,0,c
  5686  003FFE  EF03  F020         	goto	u3881
  5687  004002  EF05  F020         	goto	u3880
  5688  004006                     u3881:
  5689  004006  EF09  F020         	goto	l3709
  5690  00400A                     u3880:
  5691  00400A  5003               	movf	___awmod@divisor^0,w,c
  5692  00400C  5E01               	subwf	___awmod@dividend^0,f,c
  5693  00400E  5004               	movf	(___awmod@divisor+1)^0,w,c
  5694  004010  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5695  004012                     l3709:
  5696  004012  90D8               	bcf	status,0,c
  5697  004014  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5698  004016  3203               	rrcf	___awmod@divisor^0,f,c
  5699  004018  2E05               	decfsz	___awmod@counter^0,f,c
  5700  00401A  EFFA  F01F         	goto	l3705
  5701  00401E                     l3713:
  5702  00401E  5006               	movf	___awmod@sign^0,w,c
  5703  004020  B4D8               	btfsc	status,2,c
  5704  004022  EF15  F020         	goto	u3891
  5705  004026  EF17  F020         	goto	u3890
  5706  00402A                     u3891:
  5707  00402A  EF1B  F020         	goto	l3717
  5708  00402E                     u3890:
  5709  00402E  6C01               	negf	___awmod@dividend^0,c
  5710  004030  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5711  004032  B0D8               	btfsc	status,0,c
  5712  004034  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5713  004036                     l3717:
  5714  004036  C001  F001         	movff	___awmod@dividend,?___awmod
  5715  00403A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5716  00403E  0012               	return		;funcret
  5717  004040                     __end_of___awmod:
  5718                           	callstack 0
  5719                           
  5720 ;; *************** function ___awdiv *****************
  5721 ;; Defined at:
  5722 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  dividend        2    0[COMRAM] int 
  5725 ;;  divisor         2    2[COMRAM] int 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  quotient        2    6[COMRAM] int 
  5728 ;;  sign            1    5[COMRAM] unsigned char 
  5729 ;;  counter         1    4[COMRAM] unsigned char 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  2    0[COMRAM] int 
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, status,0
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5739 ;;      Params:         4       0       0       0       0       0       0       0       0
  5740 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5742 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5743 ;;Total ram usage:        8 bytes
  5744 ;; Hardware stack levels used: 1
  5745 ;; This function calls:
  5746 ;;		Nothing
  5747 ;; This function is called by:
  5748 ;;		_efgtoa
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text16
  5753  003E10                     __ptext16:
  5754                           	callstack 0
  5755  003E10                     ___awdiv:
  5756                           	callstack 26
  5757  003E10  0E00               	movlw	0
  5758  003E12  6E06               	movwf	___awdiv@sign^0,c
  5759  003E14  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5760  003E16  EF11  F01F         	goto	u3780
  5761  003E1A  EF0F  F01F         	goto	u3781
  5762  003E1E                     u3781:
  5763  003E1E  EF17  F01F         	goto	l3649
  5764  003E22                     u3780:
  5765  003E22  6C03               	negf	___awdiv@divisor^0,c
  5766  003E24  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5767  003E26  B0D8               	btfsc	status,0,c
  5768  003E28  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5769  003E2A  0E01               	movlw	1
  5770  003E2C  6E06               	movwf	___awdiv@sign^0,c
  5771  003E2E                     l3649:
  5772  003E2E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5773  003E30  EF1E  F01F         	goto	u3790
  5774  003E34  EF1C  F01F         	goto	u3791
  5775  003E38                     u3791:
  5776  003E38  EF24  F01F         	goto	l3655
  5777  003E3C                     u3790:
  5778  003E3C  6C01               	negf	___awdiv@dividend^0,c
  5779  003E3E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5780  003E40  B0D8               	btfsc	status,0,c
  5781  003E42  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5782  003E44  0E01               	movlw	1
  5783  003E46  1A06               	xorwf	___awdiv@sign^0,f,c
  5784  003E48                     l3655:
  5785  003E48  0E00               	movlw	0
  5786  003E4A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5787  003E4C  0E00               	movlw	0
  5788  003E4E  6E07               	movwf	___awdiv@quotient^0,c
  5789  003E50  5003               	movf	___awdiv@divisor^0,w,c
  5790  003E52  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5791  003E54  B4D8               	btfsc	status,2,c
  5792  003E56  EF2F  F01F         	goto	u3801
  5793  003E5A  EF31  F01F         	goto	u3800
  5794  003E5E                     u3801:
  5795  003E5E  EF59  F01F         	goto	l3677
  5796  003E62                     u3800:
  5797  003E62  0E01               	movlw	1
  5798  003E64  6E05               	movwf	___awdiv@counter^0,c
  5799  003E66  EF39  F01F         	goto	l3663
  5800  003E6A                     l3661:
  5801  003E6A  90D8               	bcf	status,0,c
  5802  003E6C  3603               	rlcf	___awdiv@divisor^0,f,c
  5803  003E6E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5804  003E70  2A05               	incf	___awdiv@counter^0,f,c
  5805  003E72                     l3663:
  5806  003E72  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5807  003E74  EF3E  F01F         	goto	u3811
  5808  003E78  EF40  F01F         	goto	u3810
  5809  003E7C                     u3811:
  5810  003E7C  EF35  F01F         	goto	l3661
  5811  003E80                     u3810:
  5812  003E80                     l3665:
  5813  003E80  90D8               	bcf	status,0,c
  5814  003E82  3607               	rlcf	___awdiv@quotient^0,f,c
  5815  003E84  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5816  003E86  5003               	movf	___awdiv@divisor^0,w,c
  5817  003E88  5C01               	subwf	___awdiv@dividend^0,w,c
  5818  003E8A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5819  003E8C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5820  003E8E  A0D8               	btfss	status,0,c
  5821  003E90  EF4C  F01F         	goto	u3821
  5822  003E94  EF4E  F01F         	goto	u3820
  5823  003E98                     u3821:
  5824  003E98  EF53  F01F         	goto	l3673
  5825  003E9C                     u3820:
  5826  003E9C  5003               	movf	___awdiv@divisor^0,w,c
  5827  003E9E  5E01               	subwf	___awdiv@dividend^0,f,c
  5828  003EA0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5829  003EA2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5830  003EA4  8007               	bsf	___awdiv@quotient^0,0,c
  5831  003EA6                     l3673:
  5832  003EA6  90D8               	bcf	status,0,c
  5833  003EA8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5834  003EAA  3203               	rrcf	___awdiv@divisor^0,f,c
  5835  003EAC  2E05               	decfsz	___awdiv@counter^0,f,c
  5836  003EAE  EF40  F01F         	goto	l3665
  5837  003EB2                     l3677:
  5838  003EB2  5006               	movf	___awdiv@sign^0,w,c
  5839  003EB4  B4D8               	btfsc	status,2,c
  5840  003EB6  EF5F  F01F         	goto	u3831
  5841  003EBA  EF61  F01F         	goto	u3830
  5842  003EBE                     u3831:
  5843  003EBE  EF65  F01F         	goto	l3681
  5844  003EC2                     u3830:
  5845  003EC2  6C07               	negf	___awdiv@quotient^0,c
  5846  003EC4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5847  003EC6  B0D8               	btfsc	status,0,c
  5848  003EC8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5849  003ECA                     l3681:
  5850  003ECA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5851  003ECE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5852  003ED2  0012               	return		;funcret
  5853  003ED4                     __end_of___awdiv:
  5854                           	callstack 0
  5855                           
  5856 ;; *************** function _dtoa *****************
  5857 ;; Defined at:
  5858 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5861 ;;		 -> sprintf@f(11), 
  5862 ;;  d               8   29[COMRAM] long long 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  n               8   53[COMRAM] long long 
  5865 ;;  i               2   61[COMRAM] int 
  5866 ;;  s               2   51[COMRAM] int 
  5867 ;;  w               2   49[COMRAM] int 
  5868 ;;  p               2   47[COMRAM] int 
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  2   27[COMRAM] int 
  5871 ;; Registers used:
  5872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5878 ;;      Params:        10       0       0       0       0       0       0       0       0
  5879 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5880 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5881 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5882 ;;Total ram usage:       36 bytes
  5883 ;; Hardware stack levels used: 1
  5884 ;; Hardware stack levels required when called: 4
  5885 ;; This function calls:
  5886 ;;		___aodiv
  5887 ;;		___aomod
  5888 ;;		_abs
  5889 ;;		_pad
  5890 ;; This function is called by:
  5891 ;;		_vfpfcnvrt
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text17
  5896  002A88                     __ptext17:
  5897                           	callstack 0
  5898  002A88                     _dtoa:
  5899                           	callstack 23
  5900  002A88                     
  5901                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5902  002A88  C01E  F036         	movff	dtoa@d,dtoa@n
  5903  002A8C  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5904  002A90  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5905  002A94  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5906  002A98  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5907  002A9C  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5908  002AA0  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5909  002AA4  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5910  002AA8                     
  5911                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5912  002AA8  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5913  002AAA  EF59  F015         	goto	u4351
  5914  002AAE  EF5C  F015         	goto	u4350
  5915  002AB2                     u4351:
  5916  002AB2  0E01               	movlw	1
  5917  002AB4  EF5D  F015         	goto	u4360
  5918  002AB8                     u4350:
  5919  002AB8  0E00               	movlw	0
  5920  002ABA                     u4360:
  5921  002ABA  6E34               	movwf	dtoa@s^0,c
  5922  002ABC  6A35               	clrf	(dtoa@s+1)^0,c
  5923                           
  5924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5925  002ABE  5034               	movf	dtoa@s^0,w,c
  5926  002AC0  1035               	iorwf	(dtoa@s+1)^0,w,c
  5927  002AC2  B4D8               	btfsc	status,2,c
  5928  002AC4  EF66  F015         	goto	u4371
  5929  002AC8  EF68  F015         	goto	u4370
  5930  002ACC                     u4371:
  5931  002ACC  EF78  F015         	goto	l3923
  5932  002AD0                     u4370:
  5933  002AD0                     
  5934                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5935  002AD0  1E3D               	comf	(dtoa@n+7)^0,f,c
  5936  002AD2  1E3C               	comf	(dtoa@n+6)^0,f,c
  5937  002AD4  1E3B               	comf	(dtoa@n+5)^0,f,c
  5938  002AD6  1E3A               	comf	(dtoa@n+4)^0,f,c
  5939  002AD8  1E39               	comf	(dtoa@n+3)^0,f,c
  5940  002ADA  1E38               	comf	(dtoa@n+2)^0,f,c
  5941  002ADC  1E37               	comf	(dtoa@n+1)^0,f,c
  5942  002ADE  6C36               	negf	dtoa@n^0,c
  5943  002AE0  0E00               	movlw	0
  5944  002AE2  2237               	addwfc	(dtoa@n+1)^0,f,c
  5945  002AE4  2238               	addwfc	(dtoa@n+2)^0,f,c
  5946  002AE6  2239               	addwfc	(dtoa@n+3)^0,f,c
  5947  002AE8  223A               	addwfc	(dtoa@n+4)^0,f,c
  5948  002AEA  223B               	addwfc	(dtoa@n+5)^0,f,c
  5949  002AEC  223C               	addwfc	(dtoa@n+6)^0,f,c
  5950  002AEE  223D               	addwfc	(dtoa@n+7)^0,f,c
  5951  002AF0                     l3923:
  5952                           
  5953                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5954  002AF0  0100               	movlb	0	; () banked
  5955  002AF2  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  5956  002AF4  EF7E  F015         	goto	u4381
  5957  002AF8  EF80  F015         	goto	u4380
  5958  002AFC                     u4381:
  5959  002AFC  EF81  F015         	goto	l3927
  5960  002B00                     u4380:
  5961  002B00                     
  5962                           ; BSR set to: 0
  5963                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5964  002B00  93FD               	bcf	_flags& (0+255),1,b
  5965  002B02                     l3927:
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5969  002B02  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  5970  002B04  EF8E  F015         	goto	u4390
  5971  002B08  51FC               	movf	(_prec+1)& (0+255),w,b
  5972  002B0A  E106               	bnz	u4391
  5973  002B0C  05FB               	decf	_prec& (0+255),w,b
  5974  002B0E  B0D8               	btfsc	status,0,c
  5975  002B10  EF8C  F015         	goto	u4391
  5976  002B14  EF8E  F015         	goto	u4390
  5977  002B18                     u4391:
  5978  002B18  EF94  F015         	goto	l909
  5979  002B1C                     u4390:
  5980  002B1C                     
  5981                           ; BSR set to: 0
  5982  002B1C  0E00               	movlw	0
  5983  002B1E  6E31               	movwf	(dtoa@p+1)^0,c
  5984  002B20  0E01               	movlw	1
  5985  002B22  6E30               	movwf	dtoa@p^0,c
  5986  002B24  EF98  F015         	goto	l911
  5987  002B28                     l909:
  5988                           
  5989                           ; BSR set to: 0
  5990  002B28  C0FB  F030         	movff	_prec,dtoa@p
  5991  002B2C  C0FC  F031         	movff	_prec+1,dtoa@p+1
  5992  002B30                     l911:
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5996  002B30  C122  F032         	movff	_width,dtoa@w
  5997  002B34  C123  F033         	movff	_width+1,dtoa@w+1
  5998  002B38                     
  5999                           ; BSR set to: 0
  6000                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6001  002B38  5034               	movf	dtoa@s^0,w,c
  6002  002B3A  1035               	iorwf	(dtoa@s+1)^0,w,c
  6003  002B3C  A4D8               	btfss	status,2,c
  6004  002B3E  EFA3  F015         	goto	u4401
  6005  002B42  EFA5  F015         	goto	u4400
  6006  002B46                     u4401:
  6007  002B46  EFAC  F015         	goto	l3935
  6008  002B4A                     u4400:
  6009  002B4A                     
  6010                           ; BSR set to: 0
  6011  002B4A  A5FD               	btfss	_flags& (0+255),2,b
  6012  002B4C  EFAA  F015         	goto	u4411
  6013  002B50  EFAC  F015         	goto	u4410
  6014  002B54                     u4411:
  6015  002B54  EFAF  F015         	goto	l3937
  6016  002B58                     u4410:
  6017  002B58                     l3935:
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  6021  002B58  0632               	decf	dtoa@w^0,f,c
  6022  002B5A  A0D8               	btfss	status,0,c
  6023  002B5C  0633               	decf	(dtoa@w+1)^0,f,c
  6024  002B5E                     l3937:
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6028  002B5E  0E00               	movlw	0
  6029  002B60  6E3F               	movwf	(dtoa@i+1)^0,c
  6030  002B62  0E4F               	movlw	79
  6031  002B64  6E3E               	movwf	dtoa@i^0,c
  6032  002B66                     
  6033                           ; BSR set to: 0
  6034                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6035  002B66  0E00               	movlw	0
  6036  002B68  0101               	movlb	1	; () banked
  6037  002B6A  6F73               	movwf	(_dbuf+79)& (0+255),b
  6038                           
  6039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6040  002B6C  EF34  F016         	goto	l3951
  6041  002B70                     l3941:
  6042                           
  6043                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  6044  002B70  063E               	decf	dtoa@i^0,f,c
  6045  002B72  A0D8               	btfss	status,0,c
  6046  002B74  063F               	decf	(dtoa@i+1)^0,f,c
  6047  002B76                     
  6048                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6049  002B76  0E24               	movlw	low _dbuf
  6050  002B78  243E               	addwf	dtoa@i^0,w,c
  6051  002B7A  6ED9               	movwf	fsr2l,c
  6052  002B7C  0E01               	movlw	high _dbuf
  6053  002B7E  203F               	addwfc	(dtoa@i+1)^0,w,c
  6054  002B80  6EDA               	movwf	fsr2h,c
  6055  002B82  C036  F001         	movff	dtoa@n,___aomod@dividend
  6056  002B86  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6057  002B8A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6058  002B8E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6059  002B92  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6060  002B96  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6061  002B9A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6062  002B9E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6063  002BA2  0E0A               	movlw	10
  6064  002BA4  6E09               	movwf	___aomod@divisor^0,c
  6065  002BA6  0E00               	movlw	0
  6066  002BA8  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6067  002BAA  0E00               	movlw	0
  6068  002BAC  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6069  002BAE  0E00               	movlw	0
  6070  002BB0  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6071  002BB2  0E00               	movlw	0
  6072  002BB4  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6073  002BB6  0E00               	movlw	0
  6074  002BB8  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6075  002BBA  0E00               	movlw	0
  6076  002BBC  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6077  002BBE  0E00               	movlw	0
  6078  002BC0  6E10               	movwf	(___aomod@divisor+7)^0,c
  6079  002BC2  EC7F  F01A         	call	___aomod	;wreg free
  6080  002BC6  C001  F026         	movff	?___aomod,??_dtoa
  6081  002BCA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6082  002BCE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6083  002BD2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6084  002BD6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6085  002BDA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6086  002BDE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6087  002BE2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6088  002BE6  C026  F013         	movff	??_dtoa,abs@a
  6089  002BEA  C028  F014         	movff	??_dtoa+2,abs@a+1
  6090  002BEE  EC4B  F022         	call	_abs	;wreg free
  6091  002BF2  5013               	movf	?_abs^0,w,c
  6092  002BF4  0F30               	addlw	48
  6093  002BF6  6EDF               	movwf	indf2,c
  6094  002BF8                     
  6095                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  6096  002BF8  0630               	decf	dtoa@p^0,f,c
  6097  002BFA  A0D8               	btfss	status,0,c
  6098  002BFC  0631               	decf	(dtoa@p+1)^0,f,c
  6099  002BFE                     
  6100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  6101  002BFE  0632               	decf	dtoa@w^0,f,c
  6102  002C00  A0D8               	btfss	status,0,c
  6103  002C02  0633               	decf	(dtoa@w+1)^0,f,c
  6104  002C04                     
  6105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6106  002C04  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6107  002C08  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6108  002C0C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6109  002C10  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6110  002C14  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6111  002C18  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6112  002C1C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6113  002C20  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6114  002C24  0E0A               	movlw	10
  6115  002C26  6E09               	movwf	___aodiv@divisor^0,c
  6116  002C28  0E00               	movlw	0
  6117  002C2A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6118  002C2C  0E00               	movlw	0
  6119  002C2E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6120  002C30  0E00               	movlw	0
  6121  002C32  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6122  002C34  0E00               	movlw	0
  6123  002C36  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6124  002C38  0E00               	movlw	0
  6125  002C3A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6126  002C3C  0E00               	movlw	0
  6127  002C3E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6128  002C40  0E00               	movlw	0
  6129  002C42  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6130  002C44  ECBB  F019         	call	___aodiv	;wreg free
  6131  002C48  C001  F036         	movff	?___aodiv,dtoa@n
  6132  002C4C  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6133  002C50  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6134  002C54  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6135  002C58  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6136  002C5C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6137  002C60  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6138  002C64  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6139  002C68                     l3951:
  6140                           
  6141                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6142  002C68  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6143  002C6A  EF3F  F016         	goto	u4421
  6144  002C6E  503F               	movf	(dtoa@i+1)^0,w,c
  6145  002C70  E108               	bnz	u4420
  6146  002C72  043E               	decf	dtoa@i^0,w,c
  6147  002C74  A0D8               	btfss	status,0,c
  6148  002C76  EF3F  F016         	goto	u4421
  6149  002C7A  EF41  F016         	goto	u4420
  6150  002C7E                     u4421:
  6151  002C7E  EF72  F016         	goto	l3961
  6152  002C82                     u4420:
  6153  002C82  5036               	movf	dtoa@n^0,w,c
  6154  002C84  1037               	iorwf	(dtoa@n+1)^0,w,c
  6155  002C86  1038               	iorwf	(dtoa@n+2)^0,w,c
  6156  002C88  1039               	iorwf	(dtoa@n+3)^0,w,c
  6157  002C8A  103A               	iorwf	(dtoa@n+4)^0,w,c
  6158  002C8C  103B               	iorwf	(dtoa@n+5)^0,w,c
  6159  002C8E  103C               	iorwf	(dtoa@n+6)^0,w,c
  6160  002C90  103D               	iorwf	(dtoa@n+7)^0,w,c
  6161  002C92  A4D8               	btfss	status,2,c
  6162  002C94  EF4E  F016         	goto	u4431
  6163  002C98  EF50  F016         	goto	u4430
  6164  002C9C                     u4431:
  6165  002C9C  EFB8  F015         	goto	l3941
  6166  002CA0                     u4430:
  6167  002CA0  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6168  002CA2  EF5D  F016         	goto	u4440
  6169  002CA6  5031               	movf	(dtoa@p+1)^0,w,c
  6170  002CA8  E106               	bnz	u4441
  6171  002CAA  0430               	decf	dtoa@p^0,w,c
  6172  002CAC  B0D8               	btfsc	status,0,c
  6173  002CAE  EF5B  F016         	goto	u4441
  6174  002CB2  EF5D  F016         	goto	u4440
  6175  002CB6                     u4441:
  6176  002CB6  EFB8  F015         	goto	l3941
  6177  002CBA                     u4440:
  6178  002CBA  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6179  002CBC  EF68  F016         	goto	u4451
  6180  002CC0  5033               	movf	(dtoa@w+1)^0,w,c
  6181  002CC2  E108               	bnz	u4450
  6182  002CC4  0432               	decf	dtoa@w^0,w,c
  6183  002CC6  A0D8               	btfss	status,0,c
  6184  002CC8  EF68  F016         	goto	u4451
  6185  002CCC  EF6A  F016         	goto	u4450
  6186  002CD0                     u4451:
  6187  002CD0  EF72  F016         	goto	l3961
  6188  002CD4                     u4450:
  6189  002CD4  0100               	movlb	0	; () banked
  6190  002CD6  B3FD               	btfsc	_flags& (0+255),1,b
  6191  002CD8  EF70  F016         	goto	u4461
  6192  002CDC  EF72  F016         	goto	u4460
  6193  002CE0                     u4461:
  6194  002CE0  EFB8  F015         	goto	l3941
  6195  002CE4                     u4460:
  6196  002CE4                     l3961:
  6197                           
  6198                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6199  002CE4  5034               	movf	dtoa@s^0,w,c
  6200  002CE6  1035               	iorwf	(dtoa@s+1)^0,w,c
  6201  002CE8  A4D8               	btfss	status,2,c
  6202  002CEA  EF79  F016         	goto	u4471
  6203  002CEE  EF7B  F016         	goto	u4470
  6204  002CF2                     u4471:
  6205  002CF2  EF83  F016         	goto	l3965
  6206  002CF6                     u4470:
  6207  002CF6  0100               	movlb	0	; () banked
  6208  002CF8  A5FD               	btfss	_flags& (0+255),2,b
  6209  002CFA  EF81  F016         	goto	u4481
  6210  002CFE  EF83  F016         	goto	u4480
  6211  002D02                     u4481:
  6212  002D02  EFA1  F016         	goto	l3975
  6213  002D06                     u4480:
  6214  002D06                     l3965:
  6215                           
  6216                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  6217  002D06  063E               	decf	dtoa@i^0,f,c
  6218  002D08  A0D8               	btfss	status,0,c
  6219  002D0A  063F               	decf	(dtoa@i+1)^0,f,c
  6220  002D0C                     
  6221                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6222  002D0C  5034               	movf	dtoa@s^0,w,c
  6223  002D0E  1035               	iorwf	(dtoa@s+1)^0,w,c
  6224  002D10  A4D8               	btfss	status,2,c
  6225  002D12  EF8D  F016         	goto	u4491
  6226  002D16  EF8F  F016         	goto	u4490
  6227  002D1A                     u4491:
  6228  002D1A  EF95  F016         	goto	l3971
  6229  002D1E                     u4490:
  6230  002D1E  0E00               	movlw	0
  6231  002D20  6E2F               	movwf	(_dtoa$1160+1)^0,c
  6232  002D22  0E2B               	movlw	43
  6233  002D24  6E2E               	movwf	_dtoa$1160^0,c
  6234  002D26  EF99  F016         	goto	l3973
  6235  002D2A                     l3971:
  6236  002D2A  0E00               	movlw	0
  6237  002D2C  6E2F               	movwf	(_dtoa$1160+1)^0,c
  6238  002D2E  0E2D               	movlw	45
  6239  002D30  6E2E               	movwf	_dtoa$1160^0,c
  6240  002D32                     l3973:
  6241  002D32  0E24               	movlw	low _dbuf
  6242  002D34  243E               	addwf	dtoa@i^0,w,c
  6243  002D36  6ED9               	movwf	fsr2l,c
  6244  002D38  0E01               	movlw	high _dbuf
  6245  002D3A  203F               	addwfc	(dtoa@i+1)^0,w,c
  6246  002D3C  6EDA               	movwf	fsr2h,c
  6247  002D3E  C02E  FFDF         	movff	_dtoa$1160,indf2
  6248  002D42                     l3975:
  6249                           
  6250                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6251  002D42  C01C  F011         	movff	dtoa@fp,pad@fp
  6252  002D46  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6253  002D4A  0E24               	movlw	low _dbuf
  6254  002D4C  243E               	addwf	dtoa@i^0,w,c
  6255  002D4E  6E13               	movwf	pad@buf^0,c
  6256  002D50  0E01               	movlw	high _dbuf
  6257  002D52  203F               	addwfc	(dtoa@i+1)^0,w,c
  6258  002D54  6E14               	movwf	(pad@buf+1)^0,c
  6259  002D56  C032  F015         	movff	dtoa@w,pad@p
  6260  002D5A  C033  F016         	movff	dtoa@w+1,pad@p+1
  6261  002D5E  ECA5  F01E         	call	_pad	;wreg free
  6262  002D62  C011  F01C         	movff	?_pad,?_dtoa
  6263  002D66  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6264  002D6A  0012               	return		;funcret
  6265  002D6C                     __end_of_dtoa:
  6266                           	callstack 0
  6267                           
  6268 ;; *************** function _pad *****************
  6269 ;; Defined at:
  6270 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6273 ;;		 -> sprintf@f(11), 
  6274 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6275 ;;		 -> dbuf(80), 
  6276 ;;  p               2   20[COMRAM] int 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  w               2   25[COMRAM] int 
  6279 ;;  i               2   23[COMRAM] int 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  2   16[COMRAM] int 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6289 ;;      Params:         6       0       0       0       0       0       0       0       0
  6290 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6291 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6292 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6293 ;;Total ram usage:       11 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; Hardware stack levels required when called: 3
  6296 ;; This function calls:
  6297 ;;		_fputc
  6298 ;;		_fputs
  6299 ;;		_strlen
  6300 ;; This function is called by:
  6301 ;;		_dtoa
  6302 ;;		_efgtoa
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text18
  6307  003D4A                     __ptext18:
  6308                           	callstack 0
  6309  003D4A                     _pad:
  6310                           	callstack 23
  6311  003D4A                     
  6312                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6313  003D4A  0100               	movlb	0	; () banked
  6314  003D4C  A1FD               	btfss	_flags& (0+255),0,b
  6315  003D4E  EFAB  F01E         	goto	u4061
  6316  003D52  EFAD  F01E         	goto	u4060
  6317  003D56                     u4061:
  6318  003D56  EFB7  F01E         	goto	l3815
  6319  003D5A                     u4060:
  6320  003D5A                     
  6321                           ; BSR set to: 0
  6322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6323  003D5A  C013  F00A         	movff	pad@buf,fputs@s
  6324  003D5E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6325  003D62  C011  F00C         	movff	pad@fp,fputs@fp
  6326  003D66  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6327  003D6A  EC09  F022         	call	_fputs	;wreg free
  6328  003D6E                     l3815:
  6329                           
  6330                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6331  003D6E  BE16               	btfsc	(pad@p+1)^0,7,c
  6332  003D70  EFBC  F01E         	goto	u4071
  6333  003D74  EFBE  F01E         	goto	u4070
  6334  003D78                     u4071:
  6335  003D78  EFC4  F01E         	goto	l3819
  6336  003D7C                     u4070:
  6337  003D7C  C015  F01A         	movff	pad@p,pad@w
  6338  003D80  C016  F01B         	movff	pad@p+1,pad@w+1
  6339  003D84  EFC8  F01E         	goto	l898
  6340  003D88                     l3819:
  6341  003D88  0E00               	movlw	0
  6342  003D8A  6E1B               	movwf	(pad@w+1)^0,c
  6343  003D8C  0E00               	movlw	0
  6344  003D8E  6E1A               	movwf	pad@w^0,c
  6345  003D90                     l898:
  6346                           
  6347                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6348  003D90  0E00               	movlw	0
  6349  003D92  6E19               	movwf	(pad@i+1)^0,c
  6350  003D94  0E00               	movlw	0
  6351  003D96  6E18               	movwf	pad@i^0,c
  6352                           
  6353                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6354  003D98  EFDA  F01E         	goto	l3825
  6355  003D9C                     l3821:
  6356                           
  6357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6358  003D9C  0E00               	movlw	0
  6359  003D9E  6E02               	movwf	(fputc@c+1)^0,c
  6360  003DA0  0E20               	movlw	32
  6361  003DA2  6E01               	movwf	fputc@c^0,c
  6362  003DA4  C011  F003         	movff	pad@fp,fputc@fp
  6363  003DA8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6364  003DAC  EC40  F01E         	call	_fputc	;wreg free
  6365  003DB0                     
  6366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6367  003DB0  4A18               	infsnz	pad@i^0,f,c
  6368  003DB2  2A19               	incf	(pad@i+1)^0,f,c
  6369  003DB4                     l3825:
  6370                           
  6371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6372  003DB4  501A               	movf	pad@w^0,w,c
  6373  003DB6  5C18               	subwf	pad@i^0,w,c
  6374  003DB8  5019               	movf	(pad@i+1)^0,w,c
  6375  003DBA  0A80               	xorlw	128
  6376  003DBC  6E17               	movwf	??_pad^0,c
  6377  003DBE  501B               	movf	(pad@w+1)^0,w,c
  6378  003DC0  0A80               	xorlw	128
  6379  003DC2  5817               	subwfb	??_pad^0,w,c
  6380  003DC4  A0D8               	btfss	status,0,c
  6381  003DC6  EFE7  F01E         	goto	u4081
  6382  003DCA  EFE9  F01E         	goto	u4080
  6383  003DCE                     u4081:
  6384  003DCE  EFCE  F01E         	goto	l3821
  6385  003DD2                     u4080:
  6386  003DD2                     
  6387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6388  003DD2  0100               	movlb	0	; () banked
  6389  003DD4  B1FD               	btfsc	_flags& (0+255),0,b
  6390  003DD6  EFEF  F01E         	goto	u4091
  6391  003DDA  EFF1  F01E         	goto	u4090
  6392  003DDE                     u4091:
  6393  003DDE  EFFB  F01E         	goto	l3829
  6394  003DE2                     u4090:
  6395  003DE2                     
  6396                           ; BSR set to: 0
  6397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6398  003DE2  C013  F00A         	movff	pad@buf,fputs@s
  6399  003DE6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6400  003DEA  C011  F00C         	movff	pad@fp,fputs@fp
  6401  003DEE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6402  003DF2  EC09  F022         	call	_fputs	;wreg free
  6403  003DF6                     l3829:
  6404                           
  6405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6406  003DF6  C013  F001         	movff	pad@buf,strlen@s
  6407  003DFA  C014  F002         	movff	pad@buf+1,strlen@s+1
  6408  003DFE  ECBF  F022         	call	_strlen	;wreg free
  6409  003E02  501A               	movf	pad@w^0,w,c
  6410  003E04  2401               	addwf	?_strlen^0,w,c
  6411  003E06  6E11               	movwf	?_pad^0,c
  6412  003E08  501B               	movf	(pad@w+1)^0,w,c
  6413  003E0A  2002               	addwfc	(?_strlen+1)^0,w,c
  6414  003E0C  6E12               	movwf	(?_pad+1)^0,c
  6415  003E0E  0012               	return		;funcret
  6416  003E10                     __end_of_pad:
  6417                           	callstack 0
  6418                           
  6419 ;; *************** function _strlen *****************
  6420 ;; Defined at:
  6421 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6424 ;;		 -> dbuf(80), 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6427 ;;		 -> dbuf(80), 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  2    0[COMRAM] unsigned int 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6437 ;;      Params:         2       0       0       0       0       0       0       0       0
  6438 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6440 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6441 ;;Total ram usage:        4 bytes
  6442 ;; Hardware stack levels used: 1
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		_pad
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text19
  6451  00457E                     __ptext19:
  6452                           	callstack 0
  6453  00457E                     _strlen:
  6454                           	callstack 25
  6455  00457E  C001  F003         	movff	strlen@s,strlen@a
  6456  004582  C002  F004         	movff	strlen@s+1,strlen@a+1
  6457  004586  EFC7  F022         	goto	l3271
  6458  00458A                     l3269:
  6459  00458A  4A01               	infsnz	strlen@s^0,f,c
  6460  00458C  2A02               	incf	(strlen@s+1)^0,f,c
  6461  00458E                     l3271:
  6462  00458E  C001  FFD9         	movff	strlen@s,fsr2l
  6463  004592  C002  FFDA         	movff	strlen@s+1,fsr2h
  6464  004596  50DF               	movf	indf2,w,c
  6465  004598  A4D8               	btfss	status,2,c
  6466  00459A  EFD1  F022         	goto	u3201
  6467  00459E  EFD3  F022         	goto	u3200
  6468  0045A2                     u3201:
  6469  0045A2  EFC5  F022         	goto	l3269
  6470  0045A6                     u3200:
  6471  0045A6  5003               	movf	strlen@a^0,w,c
  6472  0045A8  5C01               	subwf	strlen@s^0,w,c
  6473  0045AA  6E01               	movwf	?_strlen^0,c
  6474  0045AC  5004               	movf	(strlen@a+1)^0,w,c
  6475  0045AE  5802               	subwfb	(strlen@s+1)^0,w,c
  6476  0045B0  6E02               	movwf	(?_strlen+1)^0,c
  6477  0045B2  0012               	return		;funcret
  6478  0045B4                     __end_of_strlen:
  6479                           	callstack 0
  6480                           
  6481 ;; *************** function _fputs *****************
  6482 ;; Defined at:
  6483 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6486 ;;		 -> dbuf(80), 
  6487 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6488 ;;		 -> sprintf@f(11), 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  i               2   14[COMRAM] int 
  6491 ;;  c               1   13[COMRAM] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  2    9[COMRAM] int 
  6494 ;; Registers used:
  6495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6501 ;;      Params:         4       0       0       0       0       0       0       0       0
  6502 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6504 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6505 ;;Total ram usage:        7 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; Hardware stack levels required when called: 2
  6508 ;; This function calls:
  6509 ;;		_fputc
  6510 ;; This function is called by:
  6511 ;;		_pad
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text20
  6516  004412                     __ptext20:
  6517                           	callstack 0
  6518  004412                     _fputs:
  6519                           	callstack 23
  6520  004412  0E00               	movlw	0
  6521  004414  6E10               	movwf	(fputs@i+1)^0,c
  6522  004416  0E00               	movlw	0
  6523  004418  6E0F               	movwf	fputs@i^0,c
  6524  00441A  EF1A  F022         	goto	l3265
  6525  00441E                     l3261:
  6526  00441E  C00E  F001         	movff	fputs@c,fputc@c
  6527  004422  6A02               	clrf	(fputc@c+1)^0,c
  6528  004424  C00C  F003         	movff	fputs@fp,fputc@fp
  6529  004428  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6530  00442C  EC40  F01E         	call	_fputc	;wreg free
  6531  004430  4A0F               	infsnz	fputs@i^0,f,c
  6532  004432  2A10               	incf	(fputs@i+1)^0,f,c
  6533  004434                     l3265:
  6534  004434  500F               	movf	fputs@i^0,w,c
  6535  004436  240A               	addwf	fputs@s^0,w,c
  6536  004438  6ED9               	movwf	fsr2l,c
  6537  00443A  5010               	movf	(fputs@i+1)^0,w,c
  6538  00443C  200B               	addwfc	(fputs@s+1)^0,w,c
  6539  00443E  6EDA               	movwf	fsr2h,c
  6540  004440  50DF               	movf	indf2,w,c
  6541  004442  6E0E               	movwf	fputs@c^0,c
  6542  004444  500E               	movf	fputs@c^0,w,c
  6543  004446  A4D8               	btfss	status,2,c
  6544  004448  EF28  F022         	goto	u3191
  6545  00444C  EF2A  F022         	goto	u3190
  6546  004450                     u3191:
  6547  004450  EF0F  F022         	goto	l3261
  6548  004454                     u3190:
  6549  004454  0012               	return		;funcret
  6550  004456                     __end_of_fputs:
  6551                           	callstack 0
  6552                           
  6553 ;; *************** function _fputc *****************
  6554 ;; Defined at:
  6555 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  c               2    0[COMRAM] int 
  6558 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6559 ;;		 -> sprintf@f(11), 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  2    0[COMRAM] int 
  6564 ;; Registers used:
  6565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6571 ;;      Params:         4       0       0       0       0       0       0       0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6573 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6574 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6575 ;;Total ram usage:        9 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 1
  6578 ;; This function calls:
  6579 ;;		_putch
  6580 ;; This function is called by:
  6581 ;;		_pad
  6582 ;;		_vfpfcnvrt
  6583 ;;		_fputs
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text21
  6588  003C80                     __ptext21:
  6589                           	callstack 0
  6590  003C80                     _fputc:
  6591                           	callstack 26
  6592  003C80  5003               	movf	fputc@fp^0,w,c
  6593  003C82  1004               	iorwf	(fputc@fp+1)^0,w,c
  6594  003C84  B4D8               	btfsc	status,2,c
  6595  003C86  EF47  F01E         	goto	u2761
  6596  003C8A  EF49  F01E         	goto	u2760
  6597  003C8E                     u2761:
  6598  003C8E  EF52  F01E         	goto	l3047
  6599  003C92                     u2760:
  6600  003C92  5003               	movf	fputc@fp^0,w,c
  6601  003C94  1004               	iorwf	(fputc@fp+1)^0,w,c
  6602  003C96  A4D8               	btfss	status,2,c
  6603  003C98  EF50  F01E         	goto	u2771
  6604  003C9C  EF52  F01E         	goto	u2770
  6605  003CA0                     u2771:
  6606  003CA0  EF57  F01E         	goto	l3049
  6607  003CA4                     u2770:
  6608  003CA4                     l3047:
  6609  003CA4  5001               	movf	fputc@c^0,w,c
  6610  003CA6  EC15  F023         	call	_putch
  6611  003CAA  EFA4  F01E         	goto	l1154
  6612  003CAE                     l3049:
  6613  003CAE  EE20 F009          	lfsr	2,9
  6614  003CB2  5003               	movf	fputc@fp^0,w,c
  6615  003CB4  26D9               	addwf	fsr2l,f,c
  6616  003CB6  5004               	movf	(fputc@fp+1)^0,w,c
  6617  003CB8  22DA               	addwfc	fsr2h,f,c
  6618  003CBA  50DE               	movf	postinc2,w,c
  6619  003CBC  10DE               	iorwf	postinc2,w,c
  6620  003CBE  B4D8               	btfsc	status,2,c
  6621  003CC0  EF64  F01E         	goto	u2781
  6622  003CC4  EF66  F01E         	goto	u2780
  6623  003CC8                     u2781:
  6624  003CC8  EF81  F01E         	goto	l3053
  6625  003CCC                     u2780:
  6626  003CCC  EE20 F009          	lfsr	2,9
  6627  003CD0  5003               	movf	fputc@fp^0,w,c
  6628  003CD2  26D9               	addwf	fsr2l,f,c
  6629  003CD4  5004               	movf	(fputc@fp+1)^0,w,c
  6630  003CD6  22DA               	addwfc	fsr2h,f,c
  6631  003CD8  EE10 F003          	lfsr	1,3
  6632  003CDC  5003               	movf	fputc@fp^0,w,c
  6633  003CDE  26E1               	addwf	fsr1l,f,c
  6634  003CE0  5004               	movf	(fputc@fp+1)^0,w,c
  6635  003CE2  22E2               	addwfc	fsr1h,f,c
  6636  003CE4  50DE               	movf	postinc2,w,c
  6637  003CE6  5CE6               	subwf	postinc1,w,c
  6638  003CE8  50E6               	movf	postinc1,w,c
  6639  003CEA  0A80               	xorlw	128
  6640  003CEC  6E09               	movwf	(??_fputc+4)^0,c
  6641  003CEE  50DE               	movf	postinc2,w,c
  6642  003CF0  0A80               	xorlw	128
  6643  003CF2  5809               	subwfb	(??_fputc+4)^0,w,c
  6644  003CF4  B0D8               	btfsc	status,0,c
  6645  003CF6  EF7F  F01E         	goto	u2791
  6646  003CFA  EF81  F01E         	goto	u2790
  6647  003CFE                     u2791:
  6648  003CFE  EFA4  F01E         	goto	l1154
  6649  003D02                     u2790:
  6650  003D02                     l3053:
  6651  003D02  EE20 F003          	lfsr	2,3
  6652  003D06  5003               	movf	fputc@fp^0,w,c
  6653  003D08  26D9               	addwf	fsr2l,f,c
  6654  003D0A  5004               	movf	(fputc@fp+1)^0,w,c
  6655  003D0C  22DA               	addwfc	fsr2h,f,c
  6656  003D0E  CFDE F005          	movff	postinc2,??_fputc
  6657  003D12  CFDD F006          	movff	postdec2,??_fputc+1
  6658  003D16  C003  FFD9         	movff	fputc@fp,fsr2l
  6659  003D1A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6660  003D1E  CFDE F007          	movff	postinc2,??_fputc+2
  6661  003D22  CFDD F008          	movff	postdec2,??_fputc+3
  6662  003D26  5005               	movf	??_fputc^0,w,c
  6663  003D28  2407               	addwf	(??_fputc+2)^0,w,c
  6664  003D2A  6ED9               	movwf	fsr2l,c
  6665  003D2C  5006               	movf	(??_fputc+1)^0,w,c
  6666  003D2E  2008               	addwfc	(??_fputc+3)^0,w,c
  6667  003D30  6EDA               	movwf	fsr2h,c
  6668  003D32  C001  FFDF         	movff	fputc@c,indf2
  6669  003D36  EE20 F003          	lfsr	2,3
  6670  003D3A  5003               	movf	fputc@fp^0,w,c
  6671  003D3C  26D9               	addwf	fsr2l,f,c
  6672  003D3E  5004               	movf	(fputc@fp+1)^0,w,c
  6673  003D40  22DA               	addwfc	fsr2h,f,c
  6674  003D42  2ADE               	incf	postinc2,f,c
  6675  003D44  0E00               	movlw	0
  6676  003D46  22DD               	addwfc	postdec2,f,c
  6677  003D48                     l1154:
  6678  003D48  0012               	return		;funcret
  6679  003D4A                     __end_of_fputc:
  6680                           	callstack 0
  6681                           
  6682 ;; *************** function _putch *****************
  6683 ;; Defined at:
  6684 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  c               1    wreg     unsigned char 
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;  c               1    0[COMRAM] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6701 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6702 ;;Total ram usage:        0 bytes
  6703 ;; Hardware stack levels used: 1
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_fputc
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text22
  6712  00462A                     __ptext22:
  6713                           	callstack 0
  6714  00462A                     _putch:
  6715                           	callstack 26
  6716  00462A  0012               	return		;funcret
  6717  00462C                     __end_of_putch:
  6718                           	callstack 0
  6719                           
  6720 ;; *************** function _abs *****************
  6721 ;; Defined at:
  6722 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  a               2   18[COMRAM] int 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  2   18[COMRAM] int 
  6729 ;; Registers used:
  6730 ;;		wreg, status,2, status,0
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6736 ;;      Params:         2       0       0       0       0       0       0       0       0
  6737 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6738 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6739 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6740 ;;Total ram usage:        4 bytes
  6741 ;; Hardware stack levels used: 1
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		_dtoa
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           	psect	text23
  6750  004496                     __ptext23:
  6751                           	callstack 0
  6752  004496                     _abs:
  6753                           	callstack 26
  6754  004496  BE14               	btfsc	(abs@a+1)^0,7,c
  6755  004498  EF58  F022         	goto	u4100
  6756  00449C  5014               	movf	(abs@a+1)^0,w,c
  6757  00449E  E106               	bnz	u4101
  6758  0044A0  0413               	decf	abs@a^0,w,c
  6759  0044A2  B0D8               	btfsc	status,0,c
  6760  0044A4  EF56  F022         	goto	u4101
  6761  0044A8  EF58  F022         	goto	u4100
  6762  0044AC                     u4101:
  6763  0044AC  EF66  F022         	goto	l1081
  6764  0044B0                     u4100:
  6765  0044B0  C013  F015         	movff	abs@a,??_abs
  6766  0044B4  C014  F016         	movff	abs@a+1,??_abs+1
  6767  0044B8  1E15               	comf	??_abs^0,f,c
  6768  0044BA  1E16               	comf	(??_abs+1)^0,f,c
  6769  0044BC  4A15               	infsnz	??_abs^0,f,c
  6770  0044BE  2A16               	incf	(??_abs+1)^0,f,c
  6771  0044C0  C015  F013         	movff	??_abs,?_abs
  6772  0044C4  C016  F014         	movff	??_abs+1,?_abs+1
  6773  0044C8  EF6A  F022         	goto	l1084
  6774  0044CC                     l1081:
  6775  0044CC  C013  F013         	movff	abs@a,?_abs
  6776  0044D0  C014  F014         	movff	abs@a+1,?_abs+1
  6777  0044D4                     l1084:
  6778  0044D4  0012               	return		;funcret
  6779  0044D6                     __end_of_abs:
  6780                           	callstack 0
  6781                           
  6782 ;; *************** function ___aomod *****************
  6783 ;; Defined at:
  6784 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  dividend        8    0[COMRAM] long long 
  6787 ;;  divisor         8    8[COMRAM] long long 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;  sign            1   17[COMRAM] unsigned char 
  6790 ;;  counter         1   16[COMRAM] unsigned char 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  8    0[COMRAM] long long 
  6793 ;; Registers used:
  6794 ;;		wreg, status,2, status,0
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6800 ;;      Params:        16       0       0       0       0       0       0       0       0
  6801 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6802 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6803 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6804 ;;Total ram usage:       18 bytes
  6805 ;; Hardware stack levels used: 1
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_dtoa
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	text24
  6814  0034FE                     __ptext24:
  6815                           	callstack 0
  6816  0034FE                     ___aomod:
  6817                           	callstack 26
  6818  0034FE  0E00               	movlw	0
  6819  003500  6E12               	movwf	___aomod@sign^0,c
  6820  003502  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6821  003504  EF88  F01A         	goto	u3300
  6822  003508  EF86  F01A         	goto	u3301
  6823  00350C                     u3301:
  6824  00350C  EF9A  F01A         	goto	l3339
  6825  003510                     u3300:
  6826  003510  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6827  003512  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6828  003514  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6829  003516  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6830  003518  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6831  00351A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6832  00351C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6833  00351E  6C01               	negf	___aomod@dividend^0,c
  6834  003520  0E00               	movlw	0
  6835  003522  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6836  003524  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6837  003526  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6838  003528  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6839  00352A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6840  00352C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6841  00352E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6842  003530  0E01               	movlw	1
  6843  003532  6E12               	movwf	___aomod@sign^0,c
  6844  003534                     l3339:
  6845  003534  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6846  003536  EFA1  F01A         	goto	u3310
  6847  00353A  EF9F  F01A         	goto	u3311
  6848  00353E                     u3311:
  6849  00353E  EFB1  F01A         	goto	l3343
  6850  003542                     u3310:
  6851  003542  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6852  003544  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6853  003546  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6854  003548  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6855  00354A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6856  00354C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6857  00354E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6858  003550  6C09               	negf	___aomod@divisor^0,c
  6859  003552  0E00               	movlw	0
  6860  003554  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6861  003556  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6862  003558  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6863  00355A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6864  00355C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6865  00355E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6866  003560  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6867  003562                     l3343:
  6868  003562  5009               	movf	___aomod@divisor^0,w,c
  6869  003564  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6870  003566  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6871  003568  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6872  00356A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6873  00356C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6874  00356E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6875  003570  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6876  003572  B4D8               	btfsc	status,2,c
  6877  003574  EFBE  F01A         	goto	u3321
  6878  003578  EFC0  F01A         	goto	u3320
  6879  00357C                     u3321:
  6880  00357C  EF08  F01B         	goto	l3359
  6881  003580                     u3320:
  6882  003580  0E01               	movlw	1
  6883  003582  6E11               	movwf	___aomod@counter^0,c
  6884  003584  EFCE  F01A         	goto	l3349
  6885  003588                     l3347:
  6886  003588  90D8               	bcf	status,0,c
  6887  00358A  3609               	rlcf	___aomod@divisor^0,f,c
  6888  00358C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6889  00358E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6890  003590  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6891  003592  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6892  003594  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6893  003596  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6894  003598  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6895  00359A  2A11               	incf	___aomod@counter^0,f,c
  6896  00359C                     l3349:
  6897  00359C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6898  00359E  EFD3  F01A         	goto	u3331
  6899  0035A2  EFD5  F01A         	goto	u3330
  6900  0035A6                     u3331:
  6901  0035A6  EFC4  F01A         	goto	l3347
  6902  0035AA                     u3330:
  6903  0035AA                     l3351:
  6904  0035AA  5009               	movf	___aomod@divisor^0,w,c
  6905  0035AC  5C01               	subwf	___aomod@dividend^0,w,c
  6906  0035AE  500A               	movf	(___aomod@divisor+1)^0,w,c
  6907  0035B0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6908  0035B2  500B               	movf	(___aomod@divisor+2)^0,w,c
  6909  0035B4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6910  0035B6  500C               	movf	(___aomod@divisor+3)^0,w,c
  6911  0035B8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6912  0035BA  500D               	movf	(___aomod@divisor+4)^0,w,c
  6913  0035BC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6914  0035BE  500E               	movf	(___aomod@divisor+5)^0,w,c
  6915  0035C0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6916  0035C2  500F               	movf	(___aomod@divisor+6)^0,w,c
  6917  0035C4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6918  0035C6  5010               	movf	(___aomod@divisor+7)^0,w,c
  6919  0035C8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6920  0035CA  A0D8               	btfss	status,0,c
  6921  0035CC  EFEA  F01A         	goto	u3341
  6922  0035D0  EFEC  F01A         	goto	u3340
  6923  0035D4                     u3341:
  6924  0035D4  EFFC  F01A         	goto	l3355
  6925  0035D8                     u3340:
  6926  0035D8  5009               	movf	___aomod@divisor^0,w,c
  6927  0035DA  5E01               	subwf	___aomod@dividend^0,f,c
  6928  0035DC  500A               	movf	(___aomod@divisor+1)^0,w,c
  6929  0035DE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6930  0035E0  500B               	movf	(___aomod@divisor+2)^0,w,c
  6931  0035E2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6932  0035E4  500C               	movf	(___aomod@divisor+3)^0,w,c
  6933  0035E6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6934  0035E8  500D               	movf	(___aomod@divisor+4)^0,w,c
  6935  0035EA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6936  0035EC  500E               	movf	(___aomod@divisor+5)^0,w,c
  6937  0035EE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6938  0035F0  500F               	movf	(___aomod@divisor+6)^0,w,c
  6939  0035F2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6940  0035F4  5010               	movf	(___aomod@divisor+7)^0,w,c
  6941  0035F6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6942  0035F8                     l3355:
  6943  0035F8  90D8               	bcf	status,0,c
  6944  0035FA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6945  0035FC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6946  0035FE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6947  003600  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6948  003602  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6949  003604  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6950  003606  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6951  003608  3209               	rrcf	___aomod@divisor^0,f,c
  6952  00360A  2E11               	decfsz	___aomod@counter^0,f,c
  6953  00360C  EFD5  F01A         	goto	l3351
  6954  003610                     l3359:
  6955  003610  5012               	movf	___aomod@sign^0,w,c
  6956  003612  B4D8               	btfsc	status,2,c
  6957  003614  EF0E  F01B         	goto	u3351
  6958  003618  EF10  F01B         	goto	u3350
  6959  00361C                     u3351:
  6960  00361C  EF20  F01B         	goto	l3363
  6961  003620                     u3350:
  6962  003620  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6963  003622  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6964  003624  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6965  003626  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6966  003628  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6967  00362A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6968  00362C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6969  00362E  6C01               	negf	___aomod@dividend^0,c
  6970  003630  0E00               	movlw	0
  6971  003632  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6972  003634  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6973  003636  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6974  003638  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6975  00363A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6976  00363C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6977  00363E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6978  003640                     l3363:
  6979  003640  C001  F001         	movff	___aomod@dividend,?___aomod
  6980  003644  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6981  003648  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6982  00364C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6983  003650  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6984  003654  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6985  003658  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6986  00365C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6987  003660  0012               	return		;funcret
  6988  003662                     __end_of___aomod:
  6989                           	callstack 0
  6990                           
  6991 ;; *************** function ___aodiv *****************
  6992 ;; Defined at:
  6993 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;  dividend        8    0[COMRAM] long long 
  6996 ;;  divisor         8    8[COMRAM] long long 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  quotient        8   18[COMRAM] long long 
  6999 ;;  sign            1   17[COMRAM] unsigned char 
  7000 ;;  counter         1   16[COMRAM] unsigned char 
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  8    0[COMRAM] long long 
  7003 ;; Registers used:
  7004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7010 ;;      Params:        16       0       0       0       0       0       0       0       0
  7011 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7013 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7014 ;;Total ram usage:       26 bytes
  7015 ;; Hardware stack levels used: 1
  7016 ;; This function calls:
  7017 ;;		Nothing
  7018 ;; This function is called by:
  7019 ;;		_dtoa
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023                           	psect	text25
  7024  003376                     __ptext25:
  7025                           	callstack 0
  7026  003376                     ___aodiv:
  7027                           	callstack 26
  7028  003376  0E00               	movlw	0
  7029  003378  6E12               	movwf	___aodiv@sign^0,c
  7030  00337A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7031  00337C  EFC4  F019         	goto	u3230
  7032  003380  EFC2  F019         	goto	u3231
  7033  003384                     u3231:
  7034  003384  EFD6  F019         	goto	l3295
  7035  003388                     u3230:
  7036  003388  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7037  00338A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7038  00338C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7039  00338E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7040  003390  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7041  003392  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7042  003394  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7043  003396  6C09               	negf	___aodiv@divisor^0,c
  7044  003398  0E00               	movlw	0
  7045  00339A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7046  00339C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7047  00339E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7048  0033A0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7049  0033A2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7050  0033A4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7051  0033A6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7052  0033A8  0E01               	movlw	1
  7053  0033AA  6E12               	movwf	___aodiv@sign^0,c
  7054  0033AC                     l3295:
  7055  0033AC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7056  0033AE  EFDD  F019         	goto	u3240
  7057  0033B2  EFDB  F019         	goto	u3241
  7058  0033B6                     u3241:
  7059  0033B6  EFEF  F019         	goto	l3301
  7060  0033BA                     u3240:
  7061  0033BA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7062  0033BC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7063  0033BE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7064  0033C0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7065  0033C2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7066  0033C4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7067  0033C6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7068  0033C8  6C01               	negf	___aodiv@dividend^0,c
  7069  0033CA  0E00               	movlw	0
  7070  0033CC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7071  0033CE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7072  0033D0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7073  0033D2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7074  0033D4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7075  0033D6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7076  0033D8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7077  0033DA  0E01               	movlw	1
  7078  0033DC  1A12               	xorwf	___aodiv@sign^0,f,c
  7079  0033DE                     l3301:
  7080  0033DE  EE20  F013         	lfsr	2,___aodiv@quotient
  7081  0033E2  0E07               	movlw	7
  7082  0033E4                     u3251:
  7083  0033E4  6ADE               	clrf	postinc2,c
  7084  0033E6  06E8               	decf	wreg,f,c
  7085  0033E8  E2FD               	bc	u3251
  7086  0033EA  5009               	movf	___aodiv@divisor^0,w,c
  7087  0033EC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7088  0033EE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7089  0033F0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7090  0033F2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7091  0033F4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7092  0033F6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7093  0033F8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7094  0033FA  B4D8               	btfsc	status,2,c
  7095  0033FC  EF02  F01A         	goto	u3261
  7096  003400  EF04  F01A         	goto	u3260
  7097  003404                     u3261:
  7098  003404  EF56  F01A         	goto	l3323
  7099  003408                     u3260:
  7100  003408  0E01               	movlw	1
  7101  00340A  6E11               	movwf	___aodiv@counter^0,c
  7102  00340C  EF12  F01A         	goto	l3309
  7103  003410                     l3307:
  7104  003410  90D8               	bcf	status,0,c
  7105  003412  3609               	rlcf	___aodiv@divisor^0,f,c
  7106  003414  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7107  003416  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7108  003418  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7109  00341A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7110  00341C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7111  00341E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7112  003420  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7113  003422  2A11               	incf	___aodiv@counter^0,f,c
  7114  003424                     l3309:
  7115  003424  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7116  003426  EF17  F01A         	goto	u3271
  7117  00342A  EF19  F01A         	goto	u3270
  7118  00342E                     u3271:
  7119  00342E  EF08  F01A         	goto	l3307
  7120  003432                     u3270:
  7121  003432                     l3311:
  7122  003432  90D8               	bcf	status,0,c
  7123  003434  3613               	rlcf	___aodiv@quotient^0,f,c
  7124  003436  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7125  003438  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7126  00343A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7127  00343C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7128  00343E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7129  003440  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7130  003442  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7131  003444  5009               	movf	___aodiv@divisor^0,w,c
  7132  003446  5C01               	subwf	___aodiv@dividend^0,w,c
  7133  003448  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7134  00344A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7135  00344C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7136  00344E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7137  003450  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7138  003452  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7139  003454  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7140  003456  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7141  003458  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7142  00345A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7143  00345C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7144  00345E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7145  003460  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7146  003462  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7147  003464  A0D8               	btfss	status,0,c
  7148  003466  EF37  F01A         	goto	u3281
  7149  00346A  EF39  F01A         	goto	u3280
  7150  00346E                     u3281:
  7151  00346E  EF4A  F01A         	goto	l3319
  7152  003472                     u3280:
  7153  003472  5009               	movf	___aodiv@divisor^0,w,c
  7154  003474  5E01               	subwf	___aodiv@dividend^0,f,c
  7155  003476  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7156  003478  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7157  00347A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7158  00347C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7159  00347E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7160  003480  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7161  003482  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7162  003484  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7163  003486  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7164  003488  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7165  00348A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7166  00348C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7167  00348E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7168  003490  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7169  003492  8013               	bsf	___aodiv@quotient^0,0,c
  7170  003494                     l3319:
  7171  003494  90D8               	bcf	status,0,c
  7172  003496  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7173  003498  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7174  00349A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7175  00349C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7176  00349E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7177  0034A0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7178  0034A2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7179  0034A4  3209               	rrcf	___aodiv@divisor^0,f,c
  7180  0034A6  2E11               	decfsz	___aodiv@counter^0,f,c
  7181  0034A8  EF19  F01A         	goto	l3311
  7182  0034AC                     l3323:
  7183  0034AC  5012               	movf	___aodiv@sign^0,w,c
  7184  0034AE  B4D8               	btfsc	status,2,c
  7185  0034B0  EF5C  F01A         	goto	u3291
  7186  0034B4  EF5E  F01A         	goto	u3290
  7187  0034B8                     u3291:
  7188  0034B8  EF6E  F01A         	goto	l3327
  7189  0034BC                     u3290:
  7190  0034BC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7191  0034BE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7192  0034C0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7193  0034C2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7194  0034C4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7195  0034C6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7196  0034C8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7197  0034CA  6C13               	negf	___aodiv@quotient^0,c
  7198  0034CC  0E00               	movlw	0
  7199  0034CE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7200  0034D0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7201  0034D2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7202  0034D4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7203  0034D6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7204  0034D8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7205  0034DA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7206  0034DC                     l3327:
  7207  0034DC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7208  0034E0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7209  0034E4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7210  0034E8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7211  0034EC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7212  0034F0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7213  0034F4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7214  0034F8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7215  0034FC  0012               	return		;funcret
  7216  0034FE                     __end_of___aodiv:
  7217                           	callstack 0
  7218                           
  7219 ;; *************** function _atoi *****************
  7220 ;; Defined at:
  7221 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7224 ;;		 -> STR_1(33), 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  n               2   15[COMRAM] int 
  7227 ;;  neg             2   13[COMRAM] int 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  2    7[COMRAM] int 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7237 ;;      Params:         2       0       0       0       0       0       0       0       0
  7238 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7239 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7240 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7241 ;;Total ram usage:       10 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; Hardware stack levels required when called: 1
  7244 ;; This function calls:
  7245 ;;		___wmul
  7246 ;;		_isdigit
  7247 ;;		_isspace
  7248 ;; This function is called by:
  7249 ;;		_vfpfcnvrt
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text26
  7254  003662                     __ptext26:
  7255                           	callstack 0
  7256  003662                     _atoi:
  7257                           	callstack 26
  7258  003662  0E00               	movlw	0
  7259  003664  6E11               	movwf	(atoi@n+1)^0,c
  7260  003666  0E00               	movlw	0
  7261  003668  6E10               	movwf	atoi@n^0,c
  7262  00366A  0E00               	movlw	0
  7263  00366C  6E0F               	movwf	(atoi@neg+1)^0,c
  7264  00366E  0E00               	movlw	0
  7265  003670  6E0E               	movwf	atoi@neg^0,c
  7266  003672  EF3D  F01B         	goto	l4291
  7267  003676                     l4287:
  7268  003676  4A08               	infsnz	atoi@s^0,f,c
  7269  003678  2A09               	incf	(atoi@s+1)^0,f,c
  7270  00367A                     l4291:
  7271  00367A  C008  FFF6         	movff	atoi@s,tblptrl
  7272  00367E  C009  FFF7         	movff	atoi@s+1,tblptrh
  7273  003682                     	if	0	;tblptru may be non-zero
  7274  003682                     	endif
  7275  003682                     	if	0	;tblptru may be non-zero
  7276  003682                     	endif
  7277  003682  0008               	tblrd		*
  7278  003684  50F5               	movf	tablat,w,c
  7279  003686  0A20               	xorlw	32
  7280  003688  B4D8               	btfsc	status,2,c
  7281  00368A  EF49  F01B         	goto	u4981
  7282  00368E  EF4B  F01B         	goto	u4980
  7283  003692                     u4981:
  7284  003692  EF3B  F01B         	goto	l4287
  7285  003696                     u4980:
  7286  003696  0EF7               	movlw	247
  7287  003698  6E0A               	movwf	??_atoi^0,c
  7288  00369A  0EFF               	movlw	255
  7289  00369C  6E0B               	movwf	(??_atoi+1)^0,c
  7290  00369E  C008  FFF6         	movff	atoi@s,tblptrl
  7291  0036A2  C009  FFF7         	movff	atoi@s+1,tblptrh
  7292  0036A6                     	if	0	;tblptru may be non-zero
  7293  0036A6                     	endif
  7294  0036A6                     	if	0	;tblptru may be non-zero
  7295  0036A6                     	endif
  7296  0036A6  0008               	tblrd		*
  7297  0036A8  50F5               	movf	tablat,w,c
  7298  0036AA  6E0C               	movwf	(??_atoi+2)^0,c
  7299  0036AC  6A0D               	clrf	(??_atoi+3)^0,c
  7300  0036AE  500A               	movf	??_atoi^0,w,c
  7301  0036B0  260C               	addwf	(??_atoi+2)^0,f,c
  7302  0036B2  500B               	movf	(??_atoi+1)^0,w,c
  7303  0036B4  220D               	addwfc	(??_atoi+3)^0,f,c
  7304  0036B6  500D               	movf	(??_atoi+3)^0,w,c
  7305  0036B8  E109               	bnz	u4990
  7306  0036BA  0E05               	movlw	5
  7307  0036BC  5C0C               	subwf	(??_atoi+2)^0,w,c
  7308  0036BE  A0D8               	btfss	status,0,c
  7309  0036C0  EF64  F01B         	goto	u4991
  7310  0036C4  EF66  F01B         	goto	u4990
  7311  0036C8                     u4991:
  7312  0036C8  EF3B  F01B         	goto	l4287
  7313  0036CC                     u4990:
  7314  0036CC  EF70  F01B         	goto	l4299
  7315  0036D0                     l4295:
  7316  0036D0  0E00               	movlw	0
  7317  0036D2  6E0F               	movwf	(atoi@neg+1)^0,c
  7318  0036D4  0E01               	movlw	1
  7319  0036D6  6E0E               	movwf	atoi@neg^0,c
  7320  0036D8                     l4297:
  7321  0036D8  4A08               	infsnz	atoi@s^0,f,c
  7322  0036DA  2A09               	incf	(atoi@s+1)^0,f,c
  7323  0036DC  EFA5  F01B         	goto	l4307
  7324  0036E0                     l4299:
  7325  0036E0  C008  FFF6         	movff	atoi@s,tblptrl
  7326  0036E4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7327  0036E8                     	if	0	;tblptru may be non-zero
  7328  0036E8                     	endif
  7329  0036E8                     	if	0	;tblptru may be non-zero
  7330  0036E8                     	endif
  7331  0036E8  0008               	tblrd		*
  7332  0036EA  50F5               	movf	tablat,w,c
  7333  0036EC  6E0A               	movwf	??_atoi^0,c
  7334  0036EE  6A0B               	clrf	(??_atoi+1)^0,c
  7335                           
  7336                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7337                           ; Switch size 1, requested type "simple"
  7338                           ; Number of cases is 1, Range of values is 0 to 0
  7339                           ; switch strategies available:
  7340                           ; Name         Instructions Cycles
  7341                           ; simple_byte            4     3 (average)
  7342                           ;	Chosen strategy is simple_byte
  7343  0036F0  500B               	movf	(??_atoi+1)^0,w,c
  7344  0036F2  0A00               	xorlw	0	; case 0
  7345  0036F4  B4D8               	btfsc	status,2,c
  7346  0036F6  EF7F  F01B         	goto	l4855
  7347  0036FA  EFA5  F01B         	goto	l4307
  7348  0036FE                     l4855:
  7349                           
  7350                           ; Switch size 1, requested type "simple"
  7351                           ; Number of cases is 2, Range of values is 43 to 45
  7352                           ; switch strategies available:
  7353                           ; Name         Instructions Cycles
  7354                           ; simple_byte            7     4 (average)
  7355                           ;	Chosen strategy is simple_byte
  7356  0036FE  500A               	movf	??_atoi^0,w,c
  7357  003700  0A2B               	xorlw	43	; case 43
  7358  003702  B4D8               	btfsc	status,2,c
  7359  003704  EF6C  F01B         	goto	l4297
  7360  003708  0A06               	xorlw	6	; case 45
  7361  00370A  B4D8               	btfsc	status,2,c
  7362  00370C  EF68  F01B         	goto	l4295
  7363  003710  EFA5  F01B         	goto	l4307
  7364  003714                     l4301:
  7365  003714  C010  F001         	movff	atoi@n,___wmul@multiplier
  7366  003718  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7367  00371C  0E00               	movlw	0
  7368  00371E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7369  003720  0E0A               	movlw	10
  7370  003722  6E03               	movwf	___wmul@multiplicand^0,c
  7371  003724  ECF2  F022         	call	___wmul	;wreg free
  7372  003728  C008  FFF6         	movff	atoi@s,tblptrl
  7373  00372C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7374  003730                     	if	0	;tblptru may be non-zero
  7375  003730                     	endif
  7376  003730                     	if	0	;tblptru may be non-zero
  7377  003730                     	endif
  7378  003730  0008               	tblrd		*
  7379  003732  50F5               	movf	tablat,w,c
  7380  003734  5E01               	subwf	?___wmul^0,f,c
  7381  003736  0E00               	movlw	0
  7382  003738  5A02               	subwfb	(?___wmul+1)^0,f,c
  7383  00373A  0E30               	movlw	48
  7384  00373C  2401               	addwf	?___wmul^0,w,c
  7385  00373E  6E10               	movwf	atoi@n^0,c
  7386  003740  0E00               	movlw	0
  7387  003742  2002               	addwfc	(?___wmul+1)^0,w,c
  7388  003744  6E11               	movwf	(atoi@n+1)^0,c
  7389  003746  EF6C  F01B         	goto	l4297
  7390  00374A                     l4307:
  7391  00374A  0ED0               	movlw	208
  7392  00374C  6E0A               	movwf	??_atoi^0,c
  7393  00374E  0EFF               	movlw	255
  7394  003750  6E0B               	movwf	(??_atoi+1)^0,c
  7395  003752  C008  FFF6         	movff	atoi@s,tblptrl
  7396  003756  C009  FFF7         	movff	atoi@s+1,tblptrh
  7397  00375A                     	if	0	;tblptru may be non-zero
  7398  00375A                     	endif
  7399  00375A                     	if	0	;tblptru may be non-zero
  7400  00375A                     	endif
  7401  00375A  0008               	tblrd		*
  7402  00375C  50F5               	movf	tablat,w,c
  7403  00375E  6E0C               	movwf	(??_atoi+2)^0,c
  7404  003760  6A0D               	clrf	(??_atoi+3)^0,c
  7405  003762  500A               	movf	??_atoi^0,w,c
  7406  003764  260C               	addwf	(??_atoi+2)^0,f,c
  7407  003766  500B               	movf	(??_atoi+1)^0,w,c
  7408  003768  220D               	addwfc	(??_atoi+3)^0,f,c
  7409  00376A  500D               	movf	(??_atoi+3)^0,w,c
  7410  00376C  E109               	bnz	u5000
  7411  00376E  0E0A               	movlw	10
  7412  003770  5C0C               	subwf	(??_atoi+2)^0,w,c
  7413  003772  A0D8               	btfss	status,0,c
  7414  003774  EFBE  F01B         	goto	u5001
  7415  003778  EFC0  F01B         	goto	u5000
  7416  00377C                     u5001:
  7417  00377C  EF8A  F01B         	goto	l4301
  7418  003780                     u5000:
  7419  003780  500E               	movf	atoi@neg^0,w,c
  7420  003782  100F               	iorwf	(atoi@neg+1)^0,w,c
  7421  003784  A4D8               	btfss	status,2,c
  7422  003786  EFC7  F01B         	goto	u5011
  7423  00378A  EFC9  F01B         	goto	u5010
  7424  00378E                     u5011:
  7425  00378E  EFD7  F01B         	goto	l1106
  7426  003792                     u5010:
  7427  003792  C010  F00A         	movff	atoi@n,??_atoi
  7428  003796  C011  F00B         	movff	atoi@n+1,??_atoi+1
  7429  00379A  1E0A               	comf	??_atoi^0,f,c
  7430  00379C  1E0B               	comf	(??_atoi+1)^0,f,c
  7431  00379E  4A0A               	infsnz	??_atoi^0,f,c
  7432  0037A0  2A0B               	incf	(??_atoi+1)^0,f,c
  7433  0037A2  C00A  F008         	movff	??_atoi,?_atoi
  7434  0037A6  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7435  0037AA  EFDB  F01B         	goto	l1109
  7436  0037AE                     l1106:
  7437  0037AE  C010  F008         	movff	atoi@n,?_atoi
  7438  0037B2  C011  F009         	movff	atoi@n+1,?_atoi+1
  7439  0037B6                     l1109:
  7440  0037B6  0012               	return		;funcret
  7441  0037B8                     __end_of_atoi:
  7442                           	callstack 0
  7443                           
  7444 ;; *************** function _isspace *****************
  7445 ;; Defined at:
  7446 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  c               2    0[COMRAM] int 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;		None
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  2    0[COMRAM] int 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7460 ;;      Params:         2       0       0       0       0       0       0       0       0
  7461 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7462 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7463 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7464 ;;Total ram usage:        7 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; This function calls:
  7467 ;;		Nothing
  7468 ;; This function is called by:
  7469 ;;		_atoi
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text27
  7474  0042A6                     __ptext27:
  7475                           	callstack 0
  7476  0042A6                     _isspace:
  7477                           	callstack 26
  7478  0042A6  0E01               	movlw	1
  7479  0042A8  6E07               	movwf	_isspace$1273^0,c
  7480  0042AA  0E20               	movlw	32
  7481  0042AC  1801               	xorwf	isspace@c^0,w,c
  7482  0042AE  1002               	iorwf	(isspace@c+1)^0,w,c
  7483  0042B0  B4D8               	btfsc	status,2,c
  7484  0042B2  EF5D  F021         	goto	u4331
  7485  0042B6  EF5F  F021         	goto	u4330
  7486  0042BA                     u4331:
  7487  0042BA  EF78  F021         	goto	l3913
  7488  0042BE                     u4330:
  7489  0042BE  0EF7               	movlw	247
  7490  0042C0  6E03               	movwf	??_isspace^0,c
  7491  0042C2  0EFF               	movlw	255
  7492  0042C4  6E04               	movwf	(??_isspace+1)^0,c
  7493  0042C6  C001  F005         	movff	isspace@c,??_isspace+2
  7494  0042CA  C002  F006         	movff	isspace@c+1,??_isspace+3
  7495  0042CE  5003               	movf	??_isspace^0,w,c
  7496  0042D0  2605               	addwf	(??_isspace+2)^0,f,c
  7497  0042D2  5004               	movf	(??_isspace+1)^0,w,c
  7498  0042D4  2206               	addwfc	(??_isspace+3)^0,f,c
  7499  0042D6  5006               	movf	(??_isspace+3)^0,w,c
  7500  0042D8  E109               	bnz	u4340
  7501  0042DA  0E05               	movlw	5
  7502  0042DC  5C05               	subwf	(??_isspace+2)^0,w,c
  7503  0042DE  A0D8               	btfss	status,0,c
  7504  0042E0  EF74  F021         	goto	u4341
  7505  0042E4  EF76  F021         	goto	u4340
  7506  0042E8                     u4341:
  7507  0042E8  EF78  F021         	goto	l3913
  7508  0042EC                     u4340:
  7509  0042EC  0E00               	movlw	0
  7510  0042EE  6E07               	movwf	_isspace$1273^0,c
  7511  0042F0                     l3913:
  7512  0042F0  C007  F001         	movff	_isspace$1273,?_isspace
  7513  0042F4  6A02               	clrf	(?_isspace+1)^0,c
  7514  0042F6  0012               	return		;funcret
  7515  0042F8                     __end_of_isspace:
  7516                           	callstack 0
  7517                           
  7518 ;; *************** function _isdigit *****************
  7519 ;; Defined at:
  7520 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;  c               2    0[COMRAM] int 
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;		None
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  2    0[COMRAM] int 
  7527 ;; Registers used:
  7528 ;;		wreg, status,2, status,0
  7529 ;; Tracked objects:
  7530 ;;		On entry : 0/0
  7531 ;;		On exit  : 0/0
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7534 ;;      Params:         2       0       0       0       0       0       0       0       0
  7535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7536 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7537 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7538 ;;Total ram usage:        6 bytes
  7539 ;; Hardware stack levels used: 1
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		_vfpfcnvrt
  7544 ;;		_atoi
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text28
  7549  004546                     __ptext28:
  7550                           	callstack 0
  7551  004546                     _isdigit:
  7552                           	callstack 27
  7553  004546  0ED0               	movlw	208
  7554  004548  6E03               	movwf	??_isdigit^0,c
  7555  00454A  0EFF               	movlw	255
  7556  00454C  6E04               	movwf	(??_isdigit+1)^0,c
  7557  00454E  C001  F005         	movff	isdigit@c,??_isdigit+2
  7558  004552  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7559  004556  5003               	movf	??_isdigit^0,w,c
  7560  004558  2605               	addwf	(??_isdigit+2)^0,f,c
  7561  00455A  5004               	movf	(??_isdigit+1)^0,w,c
  7562  00455C  2206               	addwfc	(??_isdigit+3)^0,f,c
  7563  00455E  5006               	movf	(??_isdigit+3)^0,w,c
  7564  004560  E10A               	bnz	u4310
  7565  004562  0E0A               	movlw	10
  7566  004564  5C05               	subwf	(??_isdigit+2)^0,w,c
  7567  004566  A0D8               	btfss	status,0,c
  7568  004568  EFB8  F022         	goto	u4311
  7569  00456C  EFBB  F022         	goto	u4310
  7570  004570                     u4311:
  7571  004570  0E01               	movlw	1
  7572  004572  EFBC  F022         	goto	u4320
  7573  004576                     u4310:
  7574  004576  0E00               	movlw	0
  7575  004578                     u4320:
  7576  004578  6E01               	movwf	?_isdigit^0,c
  7577  00457A  6A02               	clrf	(?_isdigit+1)^0,c
  7578  00457C  0012               	return		;funcret
  7579  00457E                     __end_of_isdigit:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function ___wmul *****************
  7583 ;; Defined at:
  7584 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  multiplier      2    0[COMRAM] unsigned int 
  7587 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  product         2    4[COMRAM] unsigned int 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  2    0[COMRAM] unsigned int 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0, prodl, prodh
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7599 ;;      Params:         4       0       0       0       0       0       0       0       0
  7600 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7602 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7603 ;;Total ram usage:        6 bytes
  7604 ;; Hardware stack levels used: 1
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_atoi
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           	psect	text29
  7613  0045E4                     __ptext29:
  7614                           	callstack 0
  7615  0045E4                     ___wmul:
  7616                           	callstack 26
  7617  0045E4  5001               	movf	___wmul@multiplier^0,w,c
  7618  0045E6  0203               	mulwf	___wmul@multiplicand^0,c
  7619  0045E8  CFF3 F005          	movff	prodl,___wmul@product
  7620  0045EC  CFF4 F006          	movff	prodh,___wmul@product+1
  7621  0045F0  5001               	movf	___wmul@multiplier^0,w,c
  7622  0045F2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7623  0045F4  50F3               	movf	243,w,c
  7624  0045F6  2606               	addwf	(___wmul@product+1)^0,f,c
  7625  0045F8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7626  0045FA  0203               	mulwf	___wmul@multiplicand^0,c
  7627  0045FC  50F3               	movf	243,w,c
  7628  0045FE  2606               	addwf	(___wmul@product+1)^0,f,c
  7629  004600  C005  F001         	movff	___wmul@product,?___wmul
  7630  004604  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7631  004608  0012               	return		;funcret
  7632  00460A                     __end_of___wmul:
  7633                           	callstack 0
  7634                           
  7635 ;; *************** function _getDistance *****************
  7636 ;; Defined at:
  7637 ;;		line 76 in file "main.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;		None
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;  count           2    2[COMRAM] unsigned short 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  2    0[COMRAM] unsigned short 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7651 ;;      Params:         2       0       0       0       0       0       0       0       0
  7652 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7654 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7655 ;;Total ram usage:        4 bytes
  7656 ;; Hardware stack levels used: 1
  7657 ;; This function calls:
  7658 ;;		Nothing
  7659 ;; This function is called by:
  7660 ;;		_main
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           	psect	text30
  7665  0042F8                     __ptext30:
  7666                           	callstack 0
  7667  0042F8                     _getDistance:
  7668                           	callstack 30
  7669  0042F8                     
  7670                           ;main.c: 77:     uint16_t count=0;
  7671  0042F8  0E00               	movlw	0
  7672  0042FA  6E04               	movwf	(getDistance@count+1)^0,c
  7673  0042FC  0E00               	movlw	0
  7674  0042FE  6E03               	movwf	getDistance@count^0,c
  7675  004300                     
  7676                           ;main.c: 78:     PORTBbits.RB0 = 1;
  7677  004300  8081               	bsf	129,0,c	;volatile
  7678  004302                     
  7679                           ;main.c: 79:     _delay((unsigned long)((10)*(20000000UL/4000000.0)));
  7680  004302  0E10               	movlw	16
  7681  004304                     u5517:
  7682  004304  2EE8               	decfsz	wreg,f,c
  7683  004306  D7FE               	bra	u5517
  7684  004308  D000               	nop2	
  7685  00430A                     
  7686                           ;main.c: 80:     PORTBbits.RB0 = 0;
  7687  00430A  9081               	bcf	129,0,c	;volatile
  7688  00430C                     l64:
  7689  00430C  A281               	btfss	129,1,c	;volatile
  7690  00430E  EF8B  F021         	goto	u5441
  7691  004312  EF8D  F021         	goto	u5440
  7692  004316                     u5441:
  7693  004316  EF86  F021         	goto	l64
  7694  00431A                     u5440:
  7695  00431A  EF95  F021         	goto	l4653
  7696  00431E                     l4649:
  7697                           
  7698                           ;main.c: 84:         count++;
  7699  00431E  4A03               	infsnz	getDistance@count^0,f,c
  7700  004320  2A04               	incf	(getDistance@count+1)^0,f,c
  7701  004322                     
  7702                           ;main.c: 85:         _delay((unsigned long)((58)*(20000000UL/4000000.0)));
  7703  004322  0E60               	movlw	96
  7704  004324                     u5527:
  7705  004324  2EE8               	decfsz	wreg,f,c
  7706  004326  D7FE               	bra	u5527
  7707  004328  D000               	nop2	
  7708  00432A                     l4653:
  7709                           
  7710                           ;main.c: 83:     while(PORTBbits.RB1 == 1){
  7711  00432A  B281               	btfsc	129,1,c	;volatile
  7712  00432C  EF9A  F021         	goto	u5451
  7713  004330  EF9C  F021         	goto	u5450
  7714  004334                     u5451:
  7715  004334  EF8F  F021         	goto	l4649
  7716  004338                     u5450:
  7717  004338                     
  7718                           ;main.c: 88:     return(count);
  7719  004338  C003  F001         	movff	getDistance@count,?_getDistance
  7720  00433C  C004  F002         	movff	getDistance@count+1,?_getDistance+1
  7721  004340  0012               	return		;funcret
  7722  004342                     __end_of_getDistance:
  7723                           	callstack 0
  7724                           
  7725 ;; *************** function _UART_Write_Text *****************
  7726 ;; Defined at:
  7727 ;;		line 44 in file "UART_LIB.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  text            2    1[COMRAM] PTR unsigned char 
  7730 ;;		 -> strUART(50), 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;		None
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7742 ;;      Params:         2       0       0       0       0       0       0       0       0
  7743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7745 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7746 ;;Total ram usage:        2 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; Hardware stack levels required when called: 1
  7749 ;; This function calls:
  7750 ;;		_UART_Write_Chr
  7751 ;; This function is called by:
  7752 ;;		_main
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           
  7756                           	psect	text31
  7757  0045B4                     __ptext31:
  7758                           	callstack 0
  7759  0045B4                     _UART_Write_Text:
  7760                           	callstack 29
  7761  0045B4                     
  7762                           ;UART_LIB.c: 45:     while(*text){
  7763  0045B4  EFE5  F022         	goto	l4673
  7764  0045B8                     l4669:
  7765                           
  7766                           ;UART_LIB.c: 46:         UART_Write_Chr(*text);
  7767  0045B8  C002  FFD9         	movff	UART_Write_Text@text,fsr2l
  7768  0045BC  C003  FFDA         	movff	UART_Write_Text@text+1,fsr2h
  7769  0045C0  50DF               	movf	indf2,w,c
  7770  0045C2  EC05  F023         	call	_UART_Write_Chr
  7771  0045C6                     
  7772                           ;UART_LIB.c: 47:         text++;
  7773  0045C6  4A02               	infsnz	UART_Write_Text@text^0,f,c
  7774  0045C8  2A03               	incf	(UART_Write_Text@text+1)^0,f,c
  7775  0045CA                     l4673:
  7776                           
  7777                           ;UART_LIB.c: 45:     while(*text){
  7778  0045CA  C002  FFD9         	movff	UART_Write_Text@text,fsr2l
  7779  0045CE  C003  FFDA         	movff	UART_Write_Text@text+1,fsr2h
  7780  0045D2  50DF               	movf	indf2,w,c
  7781  0045D4  A4D8               	btfss	status,2,c
  7782  0045D6  EFEF  F022         	goto	u5461
  7783  0045DA  EFF1  F022         	goto	u5460
  7784  0045DE                     u5461:
  7785  0045DE  EFDC  F022         	goto	l4669
  7786  0045E2                     u5460:
  7787  0045E2  0012               	return		;funcret
  7788  0045E4                     __end_of_UART_Write_Text:
  7789                           	callstack 0
  7790                           
  7791 ;; *************** function _UART_Write_Chr *****************
  7792 ;; Defined at:
  7793 ;;		line 40 in file "UART_LIB.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  letter          1    wreg     unsigned char 
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;  letter          1    0[COMRAM] unsigned char 
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      void 
  7800 ;; Registers used:
  7801 ;;		wreg
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7807 ;;      Params:         0       0       0       0       0       0       0       0       0
  7808 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7810 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7811 ;;Total ram usage:        1 bytes
  7812 ;; Hardware stack levels used: 1
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_UART_Write_Text
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text32
  7821  00460A                     __ptext32:
  7822                           	callstack 0
  7823  00460A                     _UART_Write_Chr:
  7824                           	callstack 29
  7825                           
  7826                           ;incstack = 0
  7827                           ;UART_Write_Chr@letter stored from wreg
  7828  00460A  6E01               	movwf	UART_Write_Chr@letter^0,c
  7829  00460C                     l115:
  7830  00460C  A2AC               	btfss	172,1,c	;volatile
  7831  00460E  EF0B  F023         	goto	u5241
  7832  004612  EF0D  F023         	goto	u5240
  7833  004616                     u5241:
  7834  004616  EF06  F023         	goto	l115
  7835  00461A                     u5240:
  7836  00461A                     
  7837                           ;UART_LIB.c: 42:     TXREG = letter;
  7838  00461A  C001  FFAD         	movff	UART_Write_Chr@letter,4013	;volatile
  7839  00461E  0012               	return		;funcret
  7840  004620                     __end_of_UART_Write_Chr:
  7841                           	callstack 0
  7842                           
  7843 ;; *************** function _UART_Init *****************
  7844 ;; Defined at:
  7845 ;;		line 5 in file "UART_LIB.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  config          8   13[COMRAM] struct .
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;  spbrg_val       4   25[COMRAM] unsigned long 
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0, cstack
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7859 ;;      Params:         8       0       0       0       0       0       0       0       0
  7860 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7861 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7862 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7863 ;;Total ram usage:       16 bytes
  7864 ;; Hardware stack levels used: 1
  7865 ;; Hardware stack levels required when called: 1
  7866 ;; This function calls:
  7867 ;;		___lldiv
  7868 ;; This function is called by:
  7869 ;;		_main
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           	psect	text33
  7874  003AC2                     __ptext33:
  7875                           	callstack 0
  7876  003AC2                     _UART_Init:
  7877                           	callstack 29
  7878  003AC2                     
  7879                           ;UART_LIB.c: 7:     unsigned long spbrg_val = (20000000UL / (16 * config.baud_rate)) - 1
      +                          ;
  7880  003AC2  0E00               	movlw	0
  7881  003AC4  6E01               	movwf	___lldiv@dividend^0,c
  7882  003AC6  0E2D               	movlw	45
  7883  003AC8  6E02               	movwf	(___lldiv@dividend+1)^0,c
  7884  003ACA  0E31               	movlw	49
  7885  003ACC  6E03               	movwf	(___lldiv@dividend+2)^0,c
  7886  003ACE  0E01               	movlw	1
  7887  003AD0  6E04               	movwf	(___lldiv@dividend+3)^0,c
  7888  003AD2  C00E  F016         	movff	UART_Init@config,??_UART_Init
  7889  003AD6  C00F  F017         	movff	UART_Init@config+1,??_UART_Init+1
  7890  003ADA  C010  F018         	movff	UART_Init@config+2,??_UART_Init+2
  7891  003ADE  C011  F019         	movff	UART_Init@config+3,??_UART_Init+3
  7892  003AE2  0E04               	movlw	4
  7893  003AE4                     u5395:
  7894  003AE4  90D8               	bcf	status,0,c
  7895  003AE6  3616               	rlcf	??_UART_Init^0,f,c
  7896  003AE8  3617               	rlcf	(??_UART_Init+1)^0,f,c
  7897  003AEA  3618               	rlcf	(??_UART_Init+2)^0,f,c
  7898  003AEC  3619               	rlcf	(??_UART_Init+3)^0,f,c
  7899  003AEE  2EE8               	decfsz	wreg,f,c
  7900  003AF0  EF72  F01D         	goto	u5395
  7901  003AF4  C016  F005         	movff	??_UART_Init,___lldiv@divisor
  7902  003AF8  C017  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
  7903  003AFC  C018  F007         	movff	??_UART_Init+2,___lldiv@divisor+2
  7904  003B00  C019  F008         	movff	??_UART_Init+3,___lldiv@divisor+3
  7905  003B04  EC75  F020         	call	___lldiv	;wreg free
  7906  003B08  0EFF               	movlw	255
  7907  003B0A  2401               	addwf	?___lldiv^0,w,c
  7908  003B0C  6E1A               	movwf	UART_Init@spbrg_val^0,c
  7909  003B0E  0EFF               	movlw	255
  7910  003B10  2002               	addwfc	(?___lldiv+1)^0,w,c
  7911  003B12  6E1B               	movwf	(UART_Init@spbrg_val+1)^0,c
  7912  003B14  0EFF               	movlw	255
  7913  003B16  2003               	addwfc	(?___lldiv+2)^0,w,c
  7914  003B18  6E1C               	movwf	(UART_Init@spbrg_val+2)^0,c
  7915  003B1A  0EFF               	movlw	255
  7916  003B1C  2004               	addwfc	(?___lldiv+3)^0,w,c
  7917  003B1E  6E1D               	movwf	(UART_Init@spbrg_val+3)^0,c
  7918  003B20                     
  7919                           ;UART_LIB.c: 8:     SPBRG = (unsigned char)(spbrg_val);
  7920  003B20  C01A  FFAF         	movff	UART_Init@spbrg_val,4015	;volatile
  7921  003B24                     
  7922                           ;UART_LIB.c: 11:     TXSTA = 0x24;
  7923  003B24  0E24               	movlw	36
  7924  003B26  6EAC               	movwf	172,c	;volatile
  7925  003B28                     
  7926                           ;UART_LIB.c: 12:     RCSTA = 0x90;
  7927  003B28  0E90               	movlw	144
  7928  003B2A  6EAB               	movwf	171,c	;volatile
  7929  003B2C                     
  7930                           ;UART_LIB.c: 15:     TX9 = config.data_bits == 9 ? 1 : 0;
  7931  003B2C  0E09               	movlw	9
  7932  003B2E  1812               	xorwf	(UART_Init@config+4)^0,w,c
  7933  003B30  B4D8               	btfsc	status,2,c
  7934  003B32  EF9D  F01D         	goto	u5401
  7935  003B36  EFA0  F01D         	goto	u5400
  7936  003B3A                     u5401:
  7937  003B3A  8CAC               	bsf	4012,6,c	;volatile
  7938  003B3C  EFA1  F01D         	goto	u5415
  7939  003B40                     u5400:
  7940  003B40  9CAC               	bcf	4012,6,c	;volatile
  7941  003B42                     u5415:
  7942  003B42                     
  7943                           ;UART_LIB.c: 16:     RX9 = config.data_bits == 9 ? 1 : 0;
  7944  003B42  0E09               	movlw	9
  7945  003B44  1812               	xorwf	(UART_Init@config+4)^0,w,c
  7946  003B46  B4D8               	btfsc	status,2,c
  7947  003B48  EFA8  F01D         	goto	u5421
  7948  003B4C  EFAB  F01D         	goto	u5420
  7949  003B50                     u5421:
  7950  003B50  8CAB               	bsf	4011,6,c	;volatile
  7951  003B52  EFAC  F01D         	goto	u5435
  7952  003B56                     u5420:
  7953  003B56  9CAB               	bcf	4011,6,c	;volatile
  7954  003B58                     u5435:
  7955  003B58                     
  7956                           ;UART_LIB.c: 17:     TXEN = 1;
  7957  003B58  8AAC               	bsf	4012,5,c	;volatile
  7958  003B5A                     
  7959                           ;UART_LIB.c: 18:     SYNC = 0;
  7960  003B5A  98AC               	bcf	4012,4,c	;volatile
  7961  003B5C                     
  7962                           ;UART_LIB.c: 19:     SPEN = 1;
  7963  003B5C  8EAB               	bsf	4011,7,c	;volatile
  7964                           
  7965                           ;UART_LIB.c: 22:     switch (config.parity) {
  7966  003B5E  EFBF  F01D         	goto	l4633
  7967  003B62                     l108:
  7968                           
  7969                           ;UART_LIB.c: 24:             BRGH = 1;
  7970  003B62  84AC               	bsf	4012,2,c	;volatile
  7971                           
  7972                           ;UART_LIB.c: 25:             TX9D = 0;
  7973  003B64  90AC               	bcf	4012,0,c	;volatile
  7974  003B66                     l4625:
  7975                           
  7976                           ;UART_LIB.c: 26:             RCSTA |= 0x02;
  7977  003B66  82AB               	bsf	171,1,c	;volatile
  7978                           
  7979                           ;UART_LIB.c: 27:             break;
  7980  003B68  EFD4  F01D         	goto	l112
  7981  003B6C                     l110:
  7982                           
  7983                           ;UART_LIB.c: 29:             BRGH = 1;
  7984  003B6C  84AC               	bsf	4012,2,c	;volatile
  7985                           
  7986                           ;UART_LIB.c: 30:             TX9D = 1;
  7987  003B6E  80AC               	bsf	4012,0,c	;volatile
  7988  003B70  EFB3  F01D         	goto	l4625
  7989  003B74                     l111:
  7990                           
  7991                           ;UART_LIB.c: 34:             BRGH = 1;
  7992  003B74  84AC               	bsf	4012,2,c	;volatile
  7993                           
  7994                           ;UART_LIB.c: 35:             TX9D = 0;
  7995  003B76  90AC               	bcf	4012,0,c	;volatile
  7996  003B78                     
  7997                           ;UART_LIB.c: 36:             RCSTA &= ~0x02;
  7998  003B78  92AB               	bcf	171,1,c	;volatile
  7999                           
  8000                           ;UART_LIB.c: 37:             break;
  8001  003B7A  EFD4  F01D         	goto	l112
  8002  003B7E                     l4633:
  8003  003B7E  5013               	movf	(UART_Init@config+5)^0,w,c
  8004  003B80  6E16               	movwf	??_UART_Init^0,c
  8005  003B82  6A17               	clrf	(??_UART_Init+1)^0,c
  8006                           
  8007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8008                           ; Switch size 1, requested type "simple"
  8009                           ; Number of cases is 1, Range of values is 0 to 0
  8010                           ; switch strategies available:
  8011                           ; Name         Instructions Cycles
  8012                           ; simple_byte            4     3 (average)
  8013                           ;	Chosen strategy is simple_byte
  8014  003B84  5017               	movf	(??_UART_Init+1)^0,w,c
  8015  003B86  0A00               	xorlw	0	; case 0
  8016  003B88  B4D8               	btfsc	status,2,c
  8017  003B8A  EFC9  F01D         	goto	l4857
  8018  003B8E  EFBA  F01D         	goto	l111
  8019  003B92                     l4857:
  8020                           
  8021                           ; Switch size 1, requested type "simple"
  8022                           ; Number of cases is 2, Range of values is 1 to 2
  8023                           ; switch strategies available:
  8024                           ; Name         Instructions Cycles
  8025                           ; simple_byte            7     4 (average)
  8026                           ;	Chosen strategy is simple_byte
  8027  003B92  5016               	movf	??_UART_Init^0,w,c
  8028  003B94  0A01               	xorlw	1	; case 1
  8029  003B96  B4D8               	btfsc	status,2,c
  8030  003B98  EFB1  F01D         	goto	l108
  8031  003B9C  0A03               	xorlw	3	; case 2
  8032  003B9E  B4D8               	btfsc	status,2,c
  8033  003BA0  EFB6  F01D         	goto	l110
  8034  003BA4  EFBA  F01D         	goto	l111
  8035  003BA8                     l112:
  8036  003BA8  0012               	return		;funcret
  8037  003BAA                     __end_of_UART_Init:
  8038                           	callstack 0
  8039                           
  8040 ;; *************** function ___lldiv *****************
  8041 ;; Defined at:
  8042 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  dividend        4    0[COMRAM] unsigned long 
  8045 ;;  divisor         4    4[COMRAM] unsigned long 
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;  quotient        4    8[COMRAM] unsigned long 
  8048 ;;  counter         1   12[COMRAM] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  4    0[COMRAM] unsigned long 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8058 ;;      Params:         8       0       0       0       0       0       0       0       0
  8059 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8061 ;;      Totals:        13       0       0       0       0       0       0       0       0
  8062 ;;Total ram usage:       13 bytes
  8063 ;; Hardware stack levels used: 1
  8064 ;; This function calls:
  8065 ;;		Nothing
  8066 ;; This function is called by:
  8067 ;;		_UART_Init
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           	psect	text34
  8072  0040EA                     __ptext34:
  8073                           	callstack 0
  8074  0040EA                     ___lldiv:
  8075                           	callstack 29
  8076  0040EA  0E00               	movlw	0
  8077  0040EC  6E09               	movwf	___lldiv@quotient^0,c
  8078  0040EE  0E00               	movlw	0
  8079  0040F0  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  8080  0040F2  0E00               	movlw	0
  8081  0040F4  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  8082  0040F6  0E00               	movlw	0
  8083  0040F8  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  8084  0040FA  5005               	movf	___lldiv@divisor^0,w,c
  8085  0040FC  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  8086  0040FE  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  8087  004100  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  8088  004102  B4D8               	btfsc	status,2,c
  8089  004104  EF86  F020         	goto	u5251
  8090  004108  EF88  F020         	goto	u5250
  8091  00410C                     u5251:
  8092  00410C  EFBE  F020         	goto	l204
  8093  004110                     u5250:
  8094  004110  0E01               	movlw	1
  8095  004112  6E0D               	movwf	___lldiv@counter^0,c
  8096  004114  EF92  F020         	goto	l4501
  8097  004118                     l4499:
  8098  004118  90D8               	bcf	status,0,c
  8099  00411A  3605               	rlcf	___lldiv@divisor^0,f,c
  8100  00411C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  8101  00411E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  8102  004120  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  8103  004122  2A0D               	incf	___lldiv@counter^0,f,c
  8104  004124                     l4501:
  8105  004124  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  8106  004126  EF97  F020         	goto	u5261
  8107  00412A  EF99  F020         	goto	u5260
  8108  00412E                     u5261:
  8109  00412E  EF8C  F020         	goto	l4499
  8110  004132                     u5260:
  8111  004132                     l4503:
  8112  004132  90D8               	bcf	status,0,c
  8113  004134  3609               	rlcf	___lldiv@quotient^0,f,c
  8114  004136  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  8115  004138  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  8116  00413A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  8117  00413C  5005               	movf	___lldiv@divisor^0,w,c
  8118  00413E  5C01               	subwf	___lldiv@dividend^0,w,c
  8119  004140  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8120  004142  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  8121  004144  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8122  004146  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  8123  004148  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8124  00414A  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  8125  00414C  A0D8               	btfss	status,0,c
  8126  00414E  EFAB  F020         	goto	u5271
  8127  004152  EFAD  F020         	goto	u5270
  8128  004156                     u5271:
  8129  004156  EFB6  F020         	goto	l4511
  8130  00415A                     u5270:
  8131  00415A  5005               	movf	___lldiv@divisor^0,w,c
  8132  00415C  5E01               	subwf	___lldiv@dividend^0,f,c
  8133  00415E  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8134  004160  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  8135  004162  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8136  004164  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  8137  004166  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8138  004168  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  8139  00416A  8009               	bsf	___lldiv@quotient^0,0,c
  8140  00416C                     l4511:
  8141  00416C  90D8               	bcf	status,0,c
  8142  00416E  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  8143  004170  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  8144  004172  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  8145  004174  3205               	rrcf	___lldiv@divisor^0,f,c
  8146  004176  2E0D               	decfsz	___lldiv@counter^0,f,c
  8147  004178  EF99  F020         	goto	l4503
  8148  00417C                     l204:
  8149  00417C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  8150  004180  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  8151  004184  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  8152  004188  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  8153  00418C  0012               	return		;funcret
  8154  00418E                     __end_of___lldiv:
  8155                           	callstack 0
  8156                           
  8157 ;; *************** function _PWM1_Start *****************
  8158 ;; Defined at:
  8159 ;;		line 68 in file "PWM_LIB.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;		None
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;		None
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1    wreg      void 
  8166 ;; Registers used:
  8167 ;;		None
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8173 ;;      Params:         0       0       0       0       0       0       0       0       0
  8174 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8176 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8177 ;;Total ram usage:        0 bytes
  8178 ;; Hardware stack levels used: 1
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		_main
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           	psect	text35
  8187  004626                     __ptext35:
  8188                           	callstack 0
  8189  004626                     _PWM1_Start:
  8190                           	callstack 30
  8191  004626                     
  8192                           ;PWM_LIB.c: 69:     T2CONbits.TMR2ON = 1;
  8193  004626  84CA               	bsf	202,2,c	;volatile
  8194  004628  0012               	return		;funcret
  8195  00462A                     __end_of_PWM1_Start:
  8196                           	callstack 0
  8197                           
  8198 ;; *************** function _PWM1_Set_Duty *****************
  8199 ;; Defined at:
  8200 ;;		line 60 in file "PWM_LIB.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;  duty            1    wreg     unsigned char 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;  duty            1    8[BANK0 ] unsigned char 
  8205 ;;  val             4    9[BANK0 ] float 
  8206 ;; Return value:  Size  Location     Type
  8207 ;;                  1    wreg      void 
  8208 ;; Registers used:
  8209 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8215 ;;      Params:         0       0       0       0       0       0       0       0       0
  8216 ;;      Locals:         0       5       0       0       0       0       0       0       0
  8217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8218 ;;      Totals:         0       5       0       0       0       0       0       0       0
  8219 ;;Total ram usage:        5 bytes
  8220 ;; Hardware stack levels used: 1
  8221 ;; Hardware stack levels required when called: 1
  8222 ;; This function calls:
  8223 ;;		___fldiv
  8224 ;;		___flmul
  8225 ;;		___fltol
  8226 ;;		___xxtofl
  8227 ;; This function is called by:
  8228 ;;		_main
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           	psect	text36
  8233  003ED4                     __ptext36:
  8234                           	callstack 0
  8235  003ED4                     _PWM1_Set_Duty:
  8236                           	callstack 29
  8237                           
  8238                           ;incstack = 0
  8239                           ;PWM1_Set_Duty@duty stored from wreg
  8240  003ED4  0100               	movlb	0	; () banked
  8241  003ED6  6F68               	movwf	PWM1_Set_Duty@duty& (0+255),b
  8242  003ED8                     
  8243                           ;PWM_LIB.c: 61:     float val = duty*reg10bits/100.0;
  8244  003ED8  C108  F02F         	movff	_reg10bits,___flmul@a
  8245  003EDC  C109  F030         	movff	_reg10bits+1,___flmul@a+1
  8246  003EE0  C10A  F031         	movff	_reg10bits+2,___flmul@a+2
  8247  003EE4  C10B  F032         	movff	_reg10bits+3,___flmul@a+3
  8248  003EE8  0100               	movlb	0	; () banked
  8249  003EEA  5168               	movf	PWM1_Set_Duty@duty& (0+255),w,b
  8250  003EEC  6E05               	movwf	___xxtofl@val^0,c
  8251  003EEE  6A06               	clrf	(___xxtofl@val+1)^0,c
  8252  003EF0  6A07               	clrf	(___xxtofl@val+2)^0,c
  8253  003EF2  6A08               	clrf	(___xxtofl@val+3)^0,c
  8254  003EF4  0E01               	movlw	1
  8255  003EF6  ECE1  F018         	call	___xxtofl
  8256  003EFA  C005  F02B         	movff	?___xxtofl,___flmul@b
  8257  003EFE  C006  F02C         	movff	?___xxtofl+1,___flmul@b+1
  8258  003F02  C007  F02D         	movff	?___xxtofl+2,___flmul@b+2
  8259  003F06  C008  F02E         	movff	?___xxtofl+3,___flmul@b+3
  8260  003F0A  ECD5  F00F         	call	___flmul	;wreg free
  8261  003F0E  C02B  F044         	movff	?___flmul,___fldiv@b
  8262  003F12  C02C  F045         	movff	?___flmul+1,___fldiv@b+1
  8263  003F16  C02D  F046         	movff	?___flmul+2,___fldiv@b+2
  8264  003F1A  C02E  F047         	movff	?___flmul+3,___fldiv@b+3
  8265  003F1E  0E00               	movlw	0
  8266  003F20  6E48               	movwf	___fldiv@a^0,c
  8267  003F22  0E00               	movlw	0
  8268  003F24  6E49               	movwf	(___fldiv@a+1)^0,c
  8269  003F26  0EC8               	movlw	200
  8270  003F28  6E4A               	movwf	(___fldiv@a+2)^0,c
  8271  003F2A  0E42               	movlw	66
  8272  003F2C  6E4B               	movwf	(___fldiv@a+3)^0,c
  8273  003F2E  ECEA  F011         	call	___fldiv	;wreg free
  8274  003F32  C044  F069         	movff	?___fldiv,PWM1_Set_Duty@val
  8275  003F36  C045  F06A         	movff	?___fldiv+1,PWM1_Set_Duty@val+1
  8276  003F3A  C046  F06B         	movff	?___fldiv+2,PWM1_Set_Duty@val+2
  8277  003F3E  C047  F06C         	movff	?___fldiv+3,PWM1_Set_Duty@val+3
  8278  003F42                     
  8279                           ;PWM_LIB.c: 62:     CCPR1L = (int)(val)>>2;
  8280  003F42  C069  F060         	movff	PWM1_Set_Duty@val,___fltol@f1
  8281  003F46  C06A  F061         	movff	PWM1_Set_Duty@val+1,___fltol@f1+1
  8282  003F4A  C06B  F062         	movff	PWM1_Set_Duty@val+2,___fltol@f1+2
  8283  003F4E  C06C  F063         	movff	PWM1_Set_Duty@val+3,___fltol@f1+3
  8284  003F52  ECDC  F01B         	call	___fltol	;wreg free
  8285  003F56  0100               	movlb	0	; () banked
  8286  003F58  3561               	rlcf	(?___fltol+1)& (0+255),w,b
  8287  003F5A  3361               	rrcf	(?___fltol+1)& (0+255),f,b
  8288  003F5C  3360               	rrcf	?___fltol& (0+255),f,b
  8289  003F5E  3561               	rlcf	(?___fltol+1)& (0+255),w,b
  8290  003F60  3361               	rrcf	(?___fltol+1)& (0+255),f,b
  8291  003F62  3360               	rrcf	?___fltol& (0+255),f,b
  8292  003F64  5160               	movf	?___fltol& (0+255),w,b
  8293  003F66  6EBE               	movwf	190,c	;volatile
  8294  003F68                     
  8295                           ; BSR set to: 0
  8296                           ;PWM_LIB.c: 63:     CCP1CONbits.DC1B = (int)(val)& 0x003;
  8297  003F68  C069  F060         	movff	PWM1_Set_Duty@val,___fltol@f1
  8298  003F6C  C06A  F061         	movff	PWM1_Set_Duty@val+1,___fltol@f1+1
  8299  003F70  C06B  F062         	movff	PWM1_Set_Duty@val+2,___fltol@f1+2
  8300  003F74  C06C  F063         	movff	PWM1_Set_Duty@val+3,___fltol@f1+3
  8301  003F78  ECDC  F01B         	call	___fltol	;wreg free
  8302  003F7C  0E03               	movlw	3
  8303  003F7E  0100               	movlb	0	; () banked
  8304  003F80  1760               	andwf	?___fltol& (0+255),f,b
  8305  003F82  3B60               	swapf	?___fltol& (0+255),f,b
  8306  003F84  50BD               	movf	189,w,c	;volatile
  8307  003F86  1960               	xorwf	?___fltol& (0+255),w,b
  8308  003F88  0BCF               	andlw	-49
  8309  003F8A  1960               	xorwf	?___fltol& (0+255),w,b
  8310  003F8C  6EBD               	movwf	189,c	;volatile
  8311  003F8E                     
  8312                           ; BSR set to: 0
  8313  003F8E  0012               	return		;funcret
  8314  003F90                     __end_of_PWM1_Set_Duty:
  8315                           	callstack 0
  8316                           
  8317 ;; *************** function _PWM1_Init *****************
  8318 ;; Defined at:
  8319 ;;		line 7 in file "PWM_LIB.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  freq            2    8[BANK0 ] unsigned short 
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;  prees           1   16[BANK0 ] unsigned char 
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  1    wreg      void 
  8326 ;; Registers used:
  8327 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8333 ;;      Params:         0       2       0       0       0       0       0       0       0
  8334 ;;      Locals:         0       5       0       0       0       0       0       0       0
  8335 ;;      Temps:          0       2       0       0       0       0       0       0       0
  8336 ;;      Totals:         0       9       0       0       0       0       0       0       0
  8337 ;;Total ram usage:        9 bytes
  8338 ;; Hardware stack levels used: 1
  8339 ;; Hardware stack levels required when called: 1
  8340 ;; This function calls:
  8341 ;;		___fladd
  8342 ;;		___fldiv
  8343 ;;		___flmul
  8344 ;;		___fltol
  8345 ;;		___xxtofl
  8346 ;; This function is called by:
  8347 ;;		_main
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text37
  8352  002D6C                     __ptext37:
  8353                           	callstack 0
  8354  002D6C                     _PWM1_Init:
  8355                           	callstack 29
  8356  002D6C                     
  8357                           ;PWM_LIB.c: 9:     uint8_t prees;;PWM_LIB.c: 11:     switch(2){
  8358  002D6C  EFC4  F016         	goto	l4579
  8359  002D70                     l4571:
  8360                           
  8361                           ; BSR set to: 0
  8362  002D70  0E01               	movlw	1
  8363  002D72  6F70               	movwf	PWM1_Init@prees& (0+255),b
  8364  002D74  EFDF  F016         	goto	l151
  8365  002D78                     l4573:
  8366                           
  8367                           ; BSR set to: 0
  8368  002D78  0E04               	movlw	4
  8369  002D7A  6F70               	movwf	PWM1_Init@prees& (0+255),b
  8370  002D7C  EFDF  F016         	goto	l151
  8371  002D80                     l4575:
  8372                           
  8373                           ; BSR set to: 0
  8374  002D80  0E10               	movlw	16
  8375  002D82  6F70               	movwf	PWM1_Init@prees& (0+255),b
  8376  002D84  EFDF  F016         	goto	l151
  8377  002D88                     l4579:
  8378  002D88  0E02               	movlw	2
  8379  002D8A  0100               	movlb	0	; () banked
  8380  002D8C  6F6A               	movwf	??_PWM1_Init& (0+255),b
  8381  002D8E  0E00               	movlw	0
  8382  002D90  6F6B               	movwf	(??_PWM1_Init+1)& (0+255),b
  8383                           
  8384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8385                           ; Switch size 1, requested type "simple"
  8386                           ; Number of cases is 1, Range of values is 0 to 0
  8387                           ; switch strategies available:
  8388                           ; Name         Instructions Cycles
  8389                           ; simple_byte            4     3 (average)
  8390                           ;	Chosen strategy is simple_byte
  8391  002D92  516B               	movf	(??_PWM1_Init+1)& (0+255),w,b
  8392  002D94  0A00               	xorlw	0	; case 0
  8393  002D96  B4D8               	btfsc	status,2,c
  8394  002D98  EFD0  F016         	goto	l4859
  8395  002D9C  EFDF  F016         	goto	l151
  8396  002DA0                     l4859:
  8397                           
  8398                           ; BSR set to: 0
  8399                           ; Switch size 1, requested type "simple"
  8400                           ; Number of cases is 3, Range of values is 0 to 2
  8401                           ; switch strategies available:
  8402                           ; Name         Instructions Cycles
  8403                           ; simple_byte           10     6 (average)
  8404                           ;	Chosen strategy is simple_byte
  8405  002DA0  516A               	movf	??_PWM1_Init& (0+255),w,b
  8406  002DA2  0A00               	xorlw	0	; case 0
  8407  002DA4  B4D8               	btfsc	status,2,c
  8408  002DA6  EFB8  F016         	goto	l4571
  8409  002DAA  0A01               	xorlw	1	; case 1
  8410  002DAC  B4D8               	btfsc	status,2,c
  8411  002DAE  EFBC  F016         	goto	l4573
  8412  002DB2  0A03               	xorlw	3	; case 2
  8413  002DB4  B4D8               	btfsc	status,2,c
  8414  002DB6  EFC0  F016         	goto	l4575
  8415  002DBA  EFDF  F016         	goto	l151
  8416  002DBE                     l151:
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;PWM_LIB.c: 18:     TRISCbits.TRISC2 = 0;
  8420  002DBE  9494               	bcf	148,2,c	;volatile
  8421  002DC0                     
  8422                           ; BSR set to: 0
  8423                           ;PWM_LIB.c: 21:     CCP1CONbits.CCP1M = 0b1100;
  8424  002DC0  50BD               	movf	189,w,c	;volatile
  8425  002DC2  0BF0               	andlw	-16
  8426  002DC4  090C               	iorlw	12
  8427  002DC6  6EBD               	movwf	189,c	;volatile
  8428                           
  8429                           ;PWM_LIB.c: 24:     T2CONbits.T2CKPS = 2;
  8430  002DC8  50CA               	movf	202,w,c	;volatile
  8431  002DCA  0BFC               	andlw	-4
  8432  002DCC  0902               	iorlw	2
  8433  002DCE  6ECA               	movwf	202,c	;volatile
  8434  002DD0                     
  8435                           ; BSR set to: 0
  8436                           ;PWM_LIB.c: 27:     PR2 = (uint8_t)((20000000UL / (4.0*freq*prees) ) - 1.0);
  8437  002DD0  0E00               	movlw	0
  8438  002DD2  6E2F               	movwf	___flmul@a^0,c
  8439  002DD4  0E00               	movlw	0
  8440  002DD6  6E30               	movwf	(___flmul@a+1)^0,c
  8441  002DD8  0E80               	movlw	128
  8442  002DDA  6E31               	movwf	(___flmul@a+2)^0,c
  8443  002DDC  0E40               	movlw	64
  8444  002DDE  6E32               	movwf	(___flmul@a+3)^0,c
  8445  002DE0  C068  F005         	movff	PWM1_Init@freq,___xxtofl@val
  8446  002DE4  C069  F006         	movff	PWM1_Init@freq+1,___xxtofl@val+1
  8447  002DE8  6A07               	clrf	(___xxtofl@val+2)^0,c
  8448  002DEA  6A08               	clrf	(___xxtofl@val+3)^0,c
  8449  002DEC  0E00               	movlw	0
  8450  002DEE  ECE1  F018         	call	___xxtofl
  8451  002DF2  C005  F02B         	movff	?___xxtofl,___flmul@b
  8452  002DF6  C006  F02C         	movff	?___xxtofl+1,___flmul@b+1
  8453  002DFA  C007  F02D         	movff	?___xxtofl+2,___flmul@b+2
  8454  002DFE  C008  F02E         	movff	?___xxtofl+3,___flmul@b+3
  8455  002E02  ECD5  F00F         	call	___flmul	;wreg free
  8456  002E06  C02B  F06C         	movff	?___flmul,_PWM1_Init$1563
  8457  002E0A  C02C  F06D         	movff	?___flmul+1,_PWM1_Init$1563+1
  8458  002E0E  C02D  F06E         	movff	?___flmul+2,_PWM1_Init$1563+2
  8459  002E12  C02E  F06F         	movff	?___flmul+3,_PWM1_Init$1563+3
  8460  002E16                     
  8461                           ;PWM_LIB.c: 27:     PR2 = (uint8_t)((20000000UL / (4.0*freq*prees) ) - 1.0);
  8462  002E16  0E00               	movlw	0
  8463  002E18  6E17               	movwf	___fladd@a^0,c
  8464  002E1A  0E00               	movlw	0
  8465  002E1C  6E18               	movwf	(___fladd@a+1)^0,c
  8466  002E1E  0E80               	movlw	128
  8467  002E20  6E19               	movwf	(___fladd@a+2)^0,c
  8468  002E22  0EBF               	movlw	191
  8469  002E24  6E1A               	movwf	(___fladd@a+3)^0,c
  8470  002E26  0100               	movlb	0	; () banked
  8471  002E28  5170               	movf	PWM1_Init@prees& (0+255),w,b
  8472  002E2A  6E05               	movwf	___xxtofl@val^0,c
  8473  002E2C  6A06               	clrf	(___xxtofl@val+1)^0,c
  8474  002E2E  6A07               	clrf	(___xxtofl@val+2)^0,c
  8475  002E30  6A08               	clrf	(___xxtofl@val+3)^0,c
  8476  002E32  0E01               	movlw	1
  8477  002E34  ECE1  F018         	call	___xxtofl
  8478  002E38  C005  F02F         	movff	?___xxtofl,___flmul@a
  8479  002E3C  C006  F030         	movff	?___xxtofl+1,___flmul@a+1
  8480  002E40  C007  F031         	movff	?___xxtofl+2,___flmul@a+2
  8481  002E44  C008  F032         	movff	?___xxtofl+3,___flmul@a+3
  8482  002E48  C06C  F02B         	movff	_PWM1_Init$1563,___flmul@b
  8483  002E4C  C06D  F02C         	movff	_PWM1_Init$1563+1,___flmul@b+1
  8484  002E50  C06E  F02D         	movff	_PWM1_Init$1563+2,___flmul@b+2
  8485  002E54  C06F  F02E         	movff	_PWM1_Init$1563+3,___flmul@b+3
  8486  002E58  ECD5  F00F         	call	___flmul	;wreg free
  8487  002E5C  C02B  F048         	movff	?___flmul,___fldiv@a
  8488  002E60  C02C  F049         	movff	?___flmul+1,___fldiv@a+1
  8489  002E64  C02D  F04A         	movff	?___flmul+2,___fldiv@a+2
  8490  002E68  C02E  F04B         	movff	?___flmul+3,___fldiv@a+3
  8491  002E6C  0E80               	movlw	128
  8492  002E6E  6E44               	movwf	___fldiv@b^0,c
  8493  002E70  0E96               	movlw	150
  8494  002E72  6E45               	movwf	(___fldiv@b+1)^0,c
  8495  002E74  0E98               	movlw	152
  8496  002E76  6E46               	movwf	(___fldiv@b+2)^0,c
  8497  002E78  0E4B               	movlw	75
  8498  002E7A  6E47               	movwf	(___fldiv@b+3)^0,c
  8499  002E7C  ECEA  F011         	call	___fldiv	;wreg free
  8500  002E80  C044  F013         	movff	?___fldiv,___fladd@b
  8501  002E84  C045  F014         	movff	?___fldiv+1,___fladd@b+1
  8502  002E88  C046  F015         	movff	?___fldiv+2,___fladd@b+2
  8503  002E8C  C047  F016         	movff	?___fldiv+3,___fladd@b+3
  8504  002E90  EC75  F00D         	call	___fladd	;wreg free
  8505  002E94  C013  F060         	movff	?___fladd,___fltol@f1
  8506  002E98  C014  F061         	movff	?___fladd+1,___fltol@f1+1
  8507  002E9C  C015  F062         	movff	?___fladd+2,___fltol@f1+2
  8508  002EA0  C016  F063         	movff	?___fladd+3,___fltol@f1+3
  8509  002EA4  ECDC  F01B         	call	___fltol	;wreg free
  8510  002EA8  0100               	movlb	0	; () banked
  8511  002EAA  5160               	movf	?___fltol& (0+255),w,b
  8512  002EAC  6ECB               	movwf	203,c	;volatile
  8513  002EAE                     
  8514                           ; BSR set to: 0
  8515                           ;PWM_LIB.c: 29:     reg10bits = (20000000UL/(1.0*freq*prees));
  8516  002EAE  0E00               	movlw	0
  8517  002EB0  6E2F               	movwf	___flmul@a^0,c
  8518  002EB2  0E00               	movlw	0
  8519  002EB4  6E30               	movwf	(___flmul@a+1)^0,c
  8520  002EB6  0E80               	movlw	128
  8521  002EB8  6E31               	movwf	(___flmul@a+2)^0,c
  8522  002EBA  0E3F               	movlw	63
  8523  002EBC  6E32               	movwf	(___flmul@a+3)^0,c
  8524  002EBE  C068  F005         	movff	PWM1_Init@freq,___xxtofl@val
  8525  002EC2  C069  F006         	movff	PWM1_Init@freq+1,___xxtofl@val+1
  8526  002EC6  6A07               	clrf	(___xxtofl@val+2)^0,c
  8527  002EC8  6A08               	clrf	(___xxtofl@val+3)^0,c
  8528  002ECA  0E00               	movlw	0
  8529  002ECC  ECE1  F018         	call	___xxtofl
  8530  002ED0  C005  F02B         	movff	?___xxtofl,___flmul@b
  8531  002ED4  C006  F02C         	movff	?___xxtofl+1,___flmul@b+1
  8532  002ED8  C007  F02D         	movff	?___xxtofl+2,___flmul@b+2
  8533  002EDC  C008  F02E         	movff	?___xxtofl+3,___flmul@b+3
  8534  002EE0  ECD5  F00F         	call	___flmul	;wreg free
  8535  002EE4  C02B  F06C         	movff	?___flmul,_PWM1_Init$1563
  8536  002EE8  C02C  F06D         	movff	?___flmul+1,_PWM1_Init$1563+1
  8537  002EEC  C02D  F06E         	movff	?___flmul+2,_PWM1_Init$1563+2
  8538  002EF0  C02E  F06F         	movff	?___flmul+3,_PWM1_Init$1563+3
  8539  002EF4                     
  8540                           ;PWM_LIB.c: 29:     reg10bits = (20000000UL/(1.0*freq*prees));
  8541  002EF4  0E80               	movlw	128
  8542  002EF6  6E44               	movwf	___fldiv@b^0,c
  8543  002EF8  0E96               	movlw	150
  8544  002EFA  6E45               	movwf	(___fldiv@b+1)^0,c
  8545  002EFC  0E98               	movlw	152
  8546  002EFE  6E46               	movwf	(___fldiv@b+2)^0,c
  8547  002F00  0E4B               	movlw	75
  8548  002F02  6E47               	movwf	(___fldiv@b+3)^0,c
  8549  002F04  0100               	movlb	0	; () banked
  8550  002F06  5170               	movf	PWM1_Init@prees& (0+255),w,b
  8551  002F08  6E05               	movwf	___xxtofl@val^0,c
  8552  002F0A  6A06               	clrf	(___xxtofl@val+1)^0,c
  8553  002F0C  6A07               	clrf	(___xxtofl@val+2)^0,c
  8554  002F0E  6A08               	clrf	(___xxtofl@val+3)^0,c
  8555  002F10  0E01               	movlw	1
  8556  002F12  ECE1  F018         	call	___xxtofl
  8557  002F16  C005  F02F         	movff	?___xxtofl,___flmul@a
  8558  002F1A  C006  F030         	movff	?___xxtofl+1,___flmul@a+1
  8559  002F1E  C007  F031         	movff	?___xxtofl+2,___flmul@a+2
  8560  002F22  C008  F032         	movff	?___xxtofl+3,___flmul@a+3
  8561  002F26  C06C  F02B         	movff	_PWM1_Init$1563,___flmul@b
  8562  002F2A  C06D  F02C         	movff	_PWM1_Init$1563+1,___flmul@b+1
  8563  002F2E  C06E  F02D         	movff	_PWM1_Init$1563+2,___flmul@b+2
  8564  002F32  C06F  F02E         	movff	_PWM1_Init$1563+3,___flmul@b+3
  8565  002F36  ECD5  F00F         	call	___flmul	;wreg free
  8566  002F3A  C02B  F048         	movff	?___flmul,___fldiv@a
  8567  002F3E  C02C  F049         	movff	?___flmul+1,___fldiv@a+1
  8568  002F42  C02D  F04A         	movff	?___flmul+2,___fldiv@a+2
  8569  002F46  C02E  F04B         	movff	?___flmul+3,___fldiv@a+3
  8570  002F4A  ECEA  F011         	call	___fldiv	;wreg free
  8571  002F4E  C044  F108         	movff	?___fldiv,_reg10bits
  8572  002F52  C045  F109         	movff	?___fldiv+1,_reg10bits+1
  8573  002F56  C046  F10A         	movff	?___fldiv+2,_reg10bits+2
  8574  002F5A  C047  F10B         	movff	?___fldiv+3,_reg10bits+3
  8575  002F5E                     
  8576                           ;PWM_LIB.c: 31:     CCPR1L = (int)(reg10bits)>>2;
  8577  002F5E  C108  F060         	movff	_reg10bits,___fltol@f1
  8578  002F62  C109  F061         	movff	_reg10bits+1,___fltol@f1+1
  8579  002F66  C10A  F062         	movff	_reg10bits+2,___fltol@f1+2
  8580  002F6A  C10B  F063         	movff	_reg10bits+3,___fltol@f1+3
  8581  002F6E  ECDC  F01B         	call	___fltol	;wreg free
  8582  002F72  0100               	movlb	0	; () banked
  8583  002F74  3561               	rlcf	(?___fltol+1)& (0+255),w,b
  8584  002F76  3361               	rrcf	(?___fltol+1)& (0+255),f,b
  8585  002F78  3360               	rrcf	?___fltol& (0+255),f,b
  8586  002F7A  3561               	rlcf	(?___fltol+1)& (0+255),w,b
  8587  002F7C  3361               	rrcf	(?___fltol+1)& (0+255),f,b
  8588  002F7E  3360               	rrcf	?___fltol& (0+255),f,b
  8589  002F80  5160               	movf	?___fltol& (0+255),w,b
  8590  002F82  6EBE               	movwf	190,c	;volatile
  8591  002F84                     
  8592                           ; BSR set to: 0
  8593                           ;PWM_LIB.c: 32:     CCP1CONbits.DC1B = (int)(reg10bits)& 0x003;
  8594  002F84  C108  F060         	movff	_reg10bits,___fltol@f1
  8595  002F88  C109  F061         	movff	_reg10bits+1,___fltol@f1+1
  8596  002F8C  C10A  F062         	movff	_reg10bits+2,___fltol@f1+2
  8597  002F90  C10B  F063         	movff	_reg10bits+3,___fltol@f1+3
  8598  002F94  ECDC  F01B         	call	___fltol	;wreg free
  8599  002F98  0E03               	movlw	3
  8600  002F9A  0100               	movlb	0	; () banked
  8601  002F9C  1760               	andwf	?___fltol& (0+255),f,b
  8602  002F9E  3B60               	swapf	?___fltol& (0+255),f,b
  8603  002FA0  50BD               	movf	189,w,c	;volatile
  8604  002FA2  1960               	xorwf	?___fltol& (0+255),w,b
  8605  002FA4  0BCF               	andlw	-49
  8606  002FA6  1960               	xorwf	?___fltol& (0+255),w,b
  8607  002FA8  6EBD               	movwf	189,c	;volatile
  8608  002FAA                     
  8609                           ; BSR set to: 0
  8610  002FAA  0012               	return		;funcret
  8611  002FAC                     __end_of_PWM1_Init:
  8612                           	callstack 0
  8613                           
  8614 ;; *************** function ___xxtofl *****************
  8615 ;; Defined at:
  8616 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  sign            1    wreg     unsigned char 
  8619 ;;  val             4    4[COMRAM] long 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;  sign            1   12[COMRAM] unsigned char 
  8622 ;;  arg             4   14[COMRAM] unsigned long 
  8623 ;;  exp             1   13[COMRAM] unsigned char 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  4    4[COMRAM] unsigned char 
  8626 ;; Registers used:
  8627 ;;		wreg, status,2, status,0
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8633 ;;      Params:         4       0       0       0       0       0       0       0       0
  8634 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8635 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8636 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8637 ;;Total ram usage:       14 bytes
  8638 ;; Hardware stack levels used: 1
  8639 ;; This function calls:
  8640 ;;		Nothing
  8641 ;; This function is called by:
  8642 ;;		_main
  8643 ;;		_PWM1_Init
  8644 ;;		_PWM1_Set_Duty
  8645 ;;		_PWM2_Init
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           	psect	text38
  8650  0031C2                     __ptext38:
  8651                           	callstack 0
  8652  0031C2                     ___xxtofl:
  8653                           	callstack 30
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;incstack = 0
  8657                           ;___xxtofl@sign stored from wreg
  8658  0031C2  6E0D               	movwf	___xxtofl@sign^0,c
  8659  0031C4  500D               	movf	___xxtofl@sign^0,w,c
  8660  0031C6  B4D8               	btfsc	status,2,c
  8661  0031C8  EFE8  F018         	goto	u5281
  8662  0031CC  EFEA  F018         	goto	u5280
  8663  0031D0                     u5281:
  8664  0031D0  EF0C  F019         	goto	l832
  8665  0031D4                     u5280:
  8666  0031D4  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8667  0031D6  EFF1  F018         	goto	u5290
  8668  0031DA  EFEF  F018         	goto	u5291
  8669  0031DE                     u5291:
  8670  0031DE  EF0C  F019         	goto	l832
  8671  0031E2                     u5290:
  8672  0031E2  C005  F009         	movff	___xxtofl@val,??___xxtofl
  8673  0031E6  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  8674  0031EA  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  8675  0031EE  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  8676  0031F2  1E09               	comf	??___xxtofl^0,f,c
  8677  0031F4  1E0A               	comf	(??___xxtofl+1)^0,f,c
  8678  0031F6  1E0B               	comf	(??___xxtofl+2)^0,f,c
  8679  0031F8  1E0C               	comf	(??___xxtofl+3)^0,f,c
  8680  0031FA  2A09               	incf	??___xxtofl^0,f,c
  8681  0031FC  0E00               	movlw	0
  8682  0031FE  220A               	addwfc	(??___xxtofl+1)^0,f,c
  8683  003200  220B               	addwfc	(??___xxtofl+2)^0,f,c
  8684  003202  220C               	addwfc	(??___xxtofl+3)^0,f,c
  8685  003204  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  8686  003208  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  8687  00320C  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  8688  003210  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  8689  003214  EF14  F019         	goto	l4521
  8690  003218                     l832:
  8691  003218  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  8692  00321C  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8693  003220  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8694  003224  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8695  003228                     l4521:
  8696  003228  5005               	movf	___xxtofl@val^0,w,c
  8697  00322A  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  8698  00322C  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  8699  00322E  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  8700  003230  A4D8               	btfss	status,2,c
  8701  003232  EF1D  F019         	goto	u5301
  8702  003236  EF1F  F019         	goto	u5300
  8703  00323A                     u5301:
  8704  00323A  EF29  F019         	goto	l4527
  8705  00323E                     u5300:
  8706  00323E  0E00               	movlw	0
  8707  003240  6E05               	movwf	?___xxtofl^0,c
  8708  003242  0E00               	movlw	0
  8709  003244  6E06               	movwf	(?___xxtofl+1)^0,c
  8710  003246  0E00               	movlw	0
  8711  003248  6E07               	movwf	(?___xxtofl+2)^0,c
  8712  00324A  0E00               	movlw	0
  8713  00324C  6E08               	movwf	(?___xxtofl+3)^0,c
  8714  00324E  EFBA  F019         	goto	l835
  8715  003252                     l4527:
  8716  003252  0E96               	movlw	150
  8717  003254  6E0E               	movwf	___xxtofl@exp^0,c
  8718  003256  EF33  F019         	goto	l4531
  8719  00325A                     l4529:
  8720  00325A  2A0E               	incf	___xxtofl@exp^0,f,c
  8721  00325C  90D8               	bcf	status,0,c
  8722  00325E  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8723  003260  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8724  003262  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8725  003264  320F               	rrcf	___xxtofl@arg^0,f,c
  8726  003266                     l4531:
  8727  003266  0E00               	movlw	0
  8728  003268  140F               	andwf	___xxtofl@arg^0,w,c
  8729  00326A  6E09               	movwf	??___xxtofl^0,c
  8730  00326C  0E00               	movlw	0
  8731  00326E  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8732  003270  6E0A               	movwf	(??___xxtofl+1)^0,c
  8733  003272  0E00               	movlw	0
  8734  003274  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8735  003276  6E0B               	movwf	(??___xxtofl+2)^0,c
  8736  003278  0EFE               	movlw	254
  8737  00327A  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8738  00327C  6E0C               	movwf	(??___xxtofl+3)^0,c
  8739  00327E  5009               	movf	??___xxtofl^0,w,c
  8740  003280  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8741  003282  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8742  003284  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8743  003286  A4D8               	btfss	status,2,c
  8744  003288  EF48  F019         	goto	u5311
  8745  00328C  EF4A  F019         	goto	u5310
  8746  003290                     u5311:
  8747  003290  EF2D  F019         	goto	l4529
  8748  003294                     u5310:
  8749  003294  EF58  F019         	goto	l839
  8750  003298                     l4533:
  8751  003298  2A0E               	incf	___xxtofl@exp^0,f,c
  8752  00329A  0E01               	movlw	1
  8753  00329C  260F               	addwf	___xxtofl@arg^0,f,c
  8754  00329E  0E00               	movlw	0
  8755  0032A0  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  8756  0032A2  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  8757  0032A4  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  8758  0032A6  90D8               	bcf	status,0,c
  8759  0032A8  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8760  0032AA  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8761  0032AC  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8762  0032AE  320F               	rrcf	___xxtofl@arg^0,f,c
  8763  0032B0                     l839:
  8764  0032B0  0E00               	movlw	0
  8765  0032B2  140F               	andwf	___xxtofl@arg^0,w,c
  8766  0032B4  6E09               	movwf	??___xxtofl^0,c
  8767  0032B6  0E00               	movlw	0
  8768  0032B8  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8769  0032BA  6E0A               	movwf	(??___xxtofl+1)^0,c
  8770  0032BC  0E00               	movlw	0
  8771  0032BE  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8772  0032C0  6E0B               	movwf	(??___xxtofl+2)^0,c
  8773  0032C2  0EFF               	movlw	255
  8774  0032C4  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8775  0032C6  6E0C               	movwf	(??___xxtofl+3)^0,c
  8776  0032C8  5009               	movf	??___xxtofl^0,w,c
  8777  0032CA  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8778  0032CC  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8779  0032CE  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8780  0032D0  A4D8               	btfss	status,2,c
  8781  0032D2  EF6D  F019         	goto	u5321
  8782  0032D6  EF6F  F019         	goto	u5320
  8783  0032DA                     u5321:
  8784  0032DA  EF4C  F019         	goto	l4533
  8785  0032DE                     u5320:
  8786  0032DE  EF77  F019         	goto	l4541
  8787  0032E2                     l4539:
  8788  0032E2  060E               	decf	___xxtofl@exp^0,f,c
  8789  0032E4  90D8               	bcf	status,0,c
  8790  0032E6  360F               	rlcf	___xxtofl@arg^0,f,c
  8791  0032E8  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  8792  0032EA  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  8793  0032EC  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  8794  0032EE                     l4541:
  8795  0032EE  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  8796  0032F0  EF7C  F019         	goto	u5331
  8797  0032F4  EF7E  F019         	goto	u5330
  8798  0032F8                     u5331:
  8799  0032F8  EF86  F019         	goto	l846
  8800  0032FC                     u5330:
  8801  0032FC  0E02               	movlw	2
  8802  0032FE  600E               	cpfslt	___xxtofl@exp^0,c
  8803  003300  EF84  F019         	goto	u5341
  8804  003304  EF86  F019         	goto	u5340
  8805  003308                     u5341:
  8806  003308  EF71  F019         	goto	l4539
  8807  00330C                     u5340:
  8808  00330C                     l846:
  8809  00330C  B00E               	btfsc	___xxtofl@exp^0,0,c
  8810  00330E  EF8B  F019         	goto	u5351
  8811  003312  EF8D  F019         	goto	u5350
  8812  003316                     u5351:
  8813  003316  EF8E  F019         	goto	l4547
  8814  00331A                     u5350:
  8815  00331A  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  8816  00331C                     l4547:
  8817  00331C  90D8               	bcf	status,0,c
  8818  00331E  320E               	rrcf	___xxtofl@exp^0,f,c
  8819  003320  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  8820  003324  6A0A               	clrf	(??___xxtofl+1)^0,c
  8821  003326  6A0B               	clrf	(??___xxtofl+2)^0,c
  8822  003328  6A0C               	clrf	(??___xxtofl+3)^0,c
  8823  00332A  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  8824  00332E  6A0B               	clrf	(??___xxtofl+2)^0,c
  8825  003330  6A0A               	clrf	(??___xxtofl+1)^0,c
  8826  003332  6A09               	clrf	??___xxtofl^0,c
  8827  003334  5009               	movf	??___xxtofl^0,w,c
  8828  003336  120F               	iorwf	___xxtofl@arg^0,f,c
  8829  003338  500A               	movf	(??___xxtofl+1)^0,w,c
  8830  00333A  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  8831  00333C  500B               	movf	(??___xxtofl+2)^0,w,c
  8832  00333E  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  8833  003340  500C               	movf	(??___xxtofl+3)^0,w,c
  8834  003342  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  8835  003344  500D               	movf	___xxtofl@sign^0,w,c
  8836  003346  B4D8               	btfsc	status,2,c
  8837  003348  EFA8  F019         	goto	u5361
  8838  00334C  EFAA  F019         	goto	u5360
  8839  003350                     u5361:
  8840  003350  EFB2  F019         	goto	l4557
  8841  003354                     u5360:
  8842  003354  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8843  003356  EFB1  F019         	goto	u5370
  8844  00335A  EFAF  F019         	goto	u5371
  8845  00335E                     u5371:
  8846  00335E  EFB2  F019         	goto	l4557
  8847  003362                     u5370:
  8848  003362  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8849  003364                     l4557:
  8850  003364  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8851  003368  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8852  00336C  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8853  003370  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8854  003374                     l835:
  8855  003374  0012               	return		;funcret
  8856  003376                     __end_of___xxtofl:
  8857                           	callstack 0
  8858                           
  8859 ;; *************** function ___fltol *****************
  8860 ;; Defined at:
  8861 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  f1              4    0[BANK0 ] unsigned char 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;  exp1            1   93[COMRAM] unsigned char 
  8866 ;;  sign1           1   92[COMRAM] unsigned char 
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  4    0[BANK0 ] long 
  8869 ;; Registers used:
  8870 ;;		wreg, status,2, status,0
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8876 ;;      Params:         0       4       0       0       0       0       0       0       0
  8877 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8878 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8879 ;;      Totals:         2       8       0       0       0       0       0       0       0
  8880 ;;Total ram usage:       10 bytes
  8881 ;; Hardware stack levels used: 1
  8882 ;; This function calls:
  8883 ;;		Nothing
  8884 ;; This function is called by:
  8885 ;;		_main
  8886 ;;		_PWM1_Init
  8887 ;;		_PWM1_Set_Duty
  8888 ;;		_efgtoa
  8889 ;;		_PWM2_Init
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           	psect	text39
  8894  0037B8                     __ptext39:
  8895                           	callstack 0
  8896  0037B8                     ___fltol:
  8897                           	callstack 26
  8898  0037B8  0100               	movlb	0	; () banked
  8899  0037BA  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8900  0037BC  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8901  0037BE  6E5E               	movwf	___fltol@exp1^0,c
  8902  0037C0  505E               	movf	___fltol@exp1^0,w,c
  8903  0037C2  A4D8               	btfss	status,2,c
  8904  0037C4  EFE6  F01B         	goto	u3991
  8905  0037C8  EFE8  F01B         	goto	u3990
  8906  0037CC                     u3991:
  8907  0037CC  EFF2  F01B         	goto	l3773
  8908  0037D0                     u3990:
  8909  0037D0                     l3769:
  8910                           
  8911                           ; BSR set to: 0
  8912  0037D0  0E00               	movlw	0
  8913  0037D2  6F60               	movwf	?___fltol& (0+255),b
  8914  0037D4  0E00               	movlw	0
  8915  0037D6  6F61               	movwf	(?___fltol+1)& (0+255),b
  8916  0037D8  0E00               	movlw	0
  8917  0037DA  6F62               	movwf	(?___fltol+2)& (0+255),b
  8918  0037DC  0E00               	movlw	0
  8919  0037DE  6F63               	movwf	(?___fltol+3)& (0+255),b
  8920  0037E0  EF5F  F01C         	goto	l474
  8921  0037E4                     l3773:
  8922                           
  8923                           ; BSR set to: 0
  8924  0037E4  C060  F064         	movff	___fltol@f1,??___fltol
  8925  0037E8  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  8926  0037EC  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  8927  0037F0  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  8928  0037F4  0E20               	movlw	32
  8929  0037F6  EF02  F01C         	goto	u4000
  8930  0037FA                     u4005:
  8931  0037FA  90D8               	bcf	status,0,c
  8932  0037FC  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  8933  0037FE  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  8934  003800  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  8935  003802  3364               	rrcf	??___fltol& (0+255),f,b
  8936  003804                     u4000:
  8937  003804  2EE8               	decfsz	wreg,f,c
  8938  003806  EFFD  F01B         	goto	u4005
  8939  00380A  5164               	movf	??___fltol& (0+255),w,b
  8940  00380C  6E5D               	movwf	___fltol@sign1^0,c
  8941  00380E                     
  8942                           ; BSR set to: 0
  8943  00380E  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  8944  003810                     
  8945                           ; BSR set to: 0
  8946  003810  0EFF               	movlw	255
  8947  003812  1760               	andwf	___fltol@f1& (0+255),f,b
  8948  003814  0EFF               	movlw	255
  8949  003816  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  8950  003818  0EFF               	movlw	255
  8951  00381A  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  8952  00381C  0E00               	movlw	0
  8953  00381E  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  8954  003820                     
  8955                           ; BSR set to: 0
  8956  003820  0E96               	movlw	150
  8957  003822  5E5E               	subwf	___fltol@exp1^0,f,c
  8958  003824                     
  8959                           ; BSR set to: 0
  8960  003824  BE5E               	btfsc	___fltol@exp1^0,7,c
  8961  003826  EF19  F01C         	goto	u4010
  8962  00382A  EF17  F01C         	goto	u4011
  8963  00382E                     u4011:
  8964  00382E  EF2F  F01C         	goto	l3793
  8965  003832                     u4010:
  8966  003832                     
  8967                           ; BSR set to: 0
  8968  003832  505E               	movf	___fltol@exp1^0,w,c
  8969  003834  0A80               	xorlw	128
  8970  003836  0F97               	addlw	151
  8971  003838  B0D8               	btfsc	status,0,c
  8972  00383A  EF21  F01C         	goto	u4021
  8973  00383E  EF23  F01C         	goto	u4020
  8974  003842                     u4021:
  8975  003842  EF25  F01C         	goto	l3789
  8976  003846                     u4020:
  8977  003846  EFE8  F01B         	goto	l3769
  8978  00384A                     l3789:
  8979                           
  8980                           ; BSR set to: 0
  8981  00384A  90D8               	bcf	status,0,c
  8982  00384C  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8983  00384E  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8984  003850  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8985  003852  3360               	rrcf	___fltol@f1& (0+255),f,b
  8986  003854                     
  8987                           ; BSR set to: 0
  8988  003854  3E5E               	incfsz	___fltol@exp1^0,f,c
  8989  003856  EF25  F01C         	goto	l3789
  8990  00385A  EF47  F01C         	goto	l3803
  8991  00385E                     l3793:
  8992                           
  8993                           ; BSR set to: 0
  8994  00385E  0E1F               	movlw	31
  8995  003860  645E               	cpfsgt	___fltol@exp1^0,c
  8996  003862  EF35  F01C         	goto	u4031
  8997  003866  EF37  F01C         	goto	u4030
  8998  00386A                     u4031:
  8999  00386A  EF3F  F01C         	goto	l3801
  9000  00386E                     u4030:
  9001  00386E  EFE8  F01B         	goto	l3769
  9002  003872                     l3799:
  9003                           
  9004                           ; BSR set to: 0
  9005  003872  90D8               	bcf	status,0,c
  9006  003874  3760               	rlcf	___fltol@f1& (0+255),f,b
  9007  003876  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9008  003878  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9009  00387A  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9010  00387C  065E               	decf	___fltol@exp1^0,f,c
  9011  00387E                     l3801:
  9012                           
  9013                           ; BSR set to: 0
  9014  00387E  505E               	movf	___fltol@exp1^0,w,c
  9015  003880  A4D8               	btfss	status,2,c
  9016  003882  EF45  F01C         	goto	u4041
  9017  003886  EF47  F01C         	goto	u4040
  9018  00388A                     u4041:
  9019  00388A  EF39  F01C         	goto	l3799
  9020  00388E                     u4040:
  9021  00388E                     l3803:
  9022                           
  9023                           ; BSR set to: 0
  9024  00388E  505D               	movf	___fltol@sign1^0,w,c
  9025  003890  B4D8               	btfsc	status,2,c
  9026  003892  EF4D  F01C         	goto	u4051
  9027  003896  EF4F  F01C         	goto	u4050
  9028  00389A                     u4051:
  9029  00389A  EF57  F01C         	goto	l3807
  9030  00389E                     u4050:
  9031  00389E                     
  9032                           ; BSR set to: 0
  9033  00389E  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  9034  0038A0  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  9035  0038A2  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  9036  0038A4  6D60               	negf	___fltol@f1& (0+255),b
  9037  0038A6  0E00               	movlw	0
  9038  0038A8  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9039  0038AA  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9040  0038AC  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9041  0038AE                     l3807:
  9042                           
  9043                           ; BSR set to: 0
  9044  0038AE  C060  F060         	movff	___fltol@f1,?___fltol
  9045  0038B2  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  9046  0038B6  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  9047  0038BA  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  9048  0038BE                     l474:
  9049                           
  9050                           ; BSR set to: 0
  9051  0038BE  0012               	return		;funcret
  9052  0038C0                     __end_of___fltol:
  9053                           	callstack 0
  9054                           
  9055 ;; *************** function ___flmul *****************
  9056 ;; Defined at:
  9057 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  b               4   42[COMRAM] long 
  9060 ;;  a               4   46[COMRAM] long 
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;  prod            4   61[COMRAM] struct .
  9063 ;;  grs             4   55[COMRAM] unsigned long 
  9064 ;;  temp            2   65[COMRAM] struct .
  9065 ;;  bexp            1   60[COMRAM] unsigned char 
  9066 ;;  aexp            1   59[COMRAM] unsigned char 
  9067 ;;  sign            1   54[COMRAM] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  4   42[COMRAM] unsigned char 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0, prodl, prodh
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9077 ;;      Params:         8       0       0       0       0       0       0       0       0
  9078 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9079 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9080 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9081 ;;Total ram usage:       25 bytes
  9082 ;; Hardware stack levels used: 1
  9083 ;; This function calls:
  9084 ;;		Nothing
  9085 ;; This function is called by:
  9086 ;;		_main
  9087 ;;		_PWM1_Init
  9088 ;;		_PWM1_Set_Duty
  9089 ;;		_efgtoa
  9090 ;;		_PWM2_Init
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text40
  9095  001FAA                     __ptext40:
  9096                           	callstack 0
  9097  001FAA                     ___flmul:
  9098                           	callstack 26
  9099  001FAA  502E               	movf	(___flmul@b+3)^0,w,c
  9100  001FAC  0B80               	andlw	128
  9101  001FAE  6E37               	movwf	___flmul@sign^0,c
  9102  001FB0  502E               	movf	(___flmul@b+3)^0,w,c
  9103  001FB2  242E               	addwf	(___flmul@b+3)^0,w,c
  9104  001FB4  6E3D               	movwf	___flmul@bexp^0,c
  9105  001FB6  AE2D               	btfss	(___flmul@b+2)^0,7,c
  9106  001FB8  EFE0  F00F         	goto	u3591
  9107  001FBC  EFE2  F00F         	goto	u3590
  9108  001FC0                     u3591:
  9109  001FC0  EFE3  F00F         	goto	l3511
  9110  001FC4                     u3590:
  9111  001FC4  803D               	bsf	___flmul@bexp^0,0,c
  9112  001FC6                     l3511:
  9113  001FC6  503D               	movf	___flmul@bexp^0,w,c
  9114  001FC8  B4D8               	btfsc	status,2,c
  9115  001FCA  EFE9  F00F         	goto	u3601
  9116  001FCE  EFEB  F00F         	goto	u3600
  9117  001FD2                     u3601:
  9118  001FD2  EFFE  F00F         	goto	l3519
  9119  001FD6                     u3600:
  9120  001FD6  283D               	incf	___flmul@bexp^0,w,c
  9121  001FD8  A4D8               	btfss	status,2,c
  9122  001FDA  EFF1  F00F         	goto	u3611
  9123  001FDE  EFF3  F00F         	goto	u3610
  9124  001FE2                     u3611:
  9125  001FE2  EFFB  F00F         	goto	l3517
  9126  001FE6                     u3610:
  9127  001FE6  0E00               	movlw	0
  9128  001FE8  6E2B               	movwf	___flmul@b^0,c
  9129  001FEA  0E00               	movlw	0
  9130  001FEC  6E2C               	movwf	(___flmul@b+1)^0,c
  9131  001FEE  0E00               	movlw	0
  9132  001FF0  6E2D               	movwf	(___flmul@b+2)^0,c
  9133  001FF2  0E00               	movlw	0
  9134  001FF4  6E2E               	movwf	(___flmul@b+3)^0,c
  9135  001FF6                     l3517:
  9136  001FF6  8E2D               	bsf	(___flmul@b+2)^0,7,c
  9137  001FF8  EF06  F010         	goto	l3521
  9138  001FFC                     l3519:
  9139  001FFC  0E00               	movlw	0
  9140  001FFE  6E2B               	movwf	___flmul@b^0,c
  9141  002000  0E00               	movlw	0
  9142  002002  6E2C               	movwf	(___flmul@b+1)^0,c
  9143  002004  0E00               	movlw	0
  9144  002006  6E2D               	movwf	(___flmul@b+2)^0,c
  9145  002008  0E00               	movlw	0
  9146  00200A  6E2E               	movwf	(___flmul@b+3)^0,c
  9147  00200C                     l3521:
  9148  00200C  5032               	movf	(___flmul@a+3)^0,w,c
  9149  00200E  0B80               	andlw	128
  9150  002010  1A37               	xorwf	___flmul@sign^0,f,c
  9151  002012  5032               	movf	(___flmul@a+3)^0,w,c
  9152  002014  2432               	addwf	(___flmul@a+3)^0,w,c
  9153  002016  6E3C               	movwf	___flmul@aexp^0,c
  9154  002018  AE31               	btfss	(___flmul@a+2)^0,7,c
  9155  00201A  EF11  F010         	goto	u3621
  9156  00201E  EF13  F010         	goto	u3620
  9157  002022                     u3621:
  9158  002022  EF14  F010         	goto	l3529
  9159  002026                     u3620:
  9160  002026  803C               	bsf	___flmul@aexp^0,0,c
  9161  002028                     l3529:
  9162  002028  503C               	movf	___flmul@aexp^0,w,c
  9163  00202A  B4D8               	btfsc	status,2,c
  9164  00202C  EF1A  F010         	goto	u3631
  9165  002030  EF1C  F010         	goto	u3630
  9166  002034                     u3631:
  9167  002034  EF2F  F010         	goto	l3537
  9168  002038                     u3630:
  9169  002038  283C               	incf	___flmul@aexp^0,w,c
  9170  00203A  A4D8               	btfss	status,2,c
  9171  00203C  EF22  F010         	goto	u3641
  9172  002040  EF24  F010         	goto	u3640
  9173  002044                     u3641:
  9174  002044  EF2C  F010         	goto	l3535
  9175  002048                     u3640:
  9176  002048  0E00               	movlw	0
  9177  00204A  6E2F               	movwf	___flmul@a^0,c
  9178  00204C  0E00               	movlw	0
  9179  00204E  6E30               	movwf	(___flmul@a+1)^0,c
  9180  002050  0E00               	movlw	0
  9181  002052  6E31               	movwf	(___flmul@a+2)^0,c
  9182  002054  0E00               	movlw	0
  9183  002056  6E32               	movwf	(___flmul@a+3)^0,c
  9184  002058                     l3535:
  9185  002058  8E31               	bsf	(___flmul@a+2)^0,7,c
  9186  00205A  EF37  F010         	goto	l791
  9187  00205E                     l3537:
  9188  00205E  0E00               	movlw	0
  9189  002060  6E2F               	movwf	___flmul@a^0,c
  9190  002062  0E00               	movlw	0
  9191  002064  6E30               	movwf	(___flmul@a+1)^0,c
  9192  002066  0E00               	movlw	0
  9193  002068  6E31               	movwf	(___flmul@a+2)^0,c
  9194  00206A  0E00               	movlw	0
  9195  00206C  6E32               	movwf	(___flmul@a+3)^0,c
  9196  00206E                     l791:
  9197  00206E  503C               	movf	___flmul@aexp^0,w,c
  9198  002070  B4D8               	btfsc	status,2,c
  9199  002072  EF3D  F010         	goto	u3651
  9200  002076  EF3F  F010         	goto	u3650
  9201  00207A                     u3651:
  9202  00207A  EF47  F010         	goto	l3541
  9203  00207E                     u3650:
  9204  00207E  503D               	movf	___flmul@bexp^0,w,c
  9205  002080  A4D8               	btfss	status,2,c
  9206  002082  EF45  F010         	goto	u3661
  9207  002086  EF47  F010         	goto	u3660
  9208  00208A                     u3661:
  9209  00208A  EF51  F010         	goto	l3545
  9210  00208E                     u3660:
  9211  00208E                     l3541:
  9212  00208E  0E00               	movlw	0
  9213  002090  6E2B               	movwf	?___flmul^0,c
  9214  002092  0E00               	movlw	0
  9215  002094  6E2C               	movwf	(?___flmul+1)^0,c
  9216  002096  0E00               	movlw	0
  9217  002098  6E2D               	movwf	(?___flmul+2)^0,c
  9218  00209A  0E00               	movlw	0
  9219  00209C  6E2E               	movwf	(?___flmul+3)^0,c
  9220  00209E  EFE9  F011         	goto	l795
  9221  0020A2                     l3545:
  9222  0020A2  5031               	movf	(___flmul@a+2)^0,w,c
  9223  0020A4  022B               	mulwf	___flmul@b^0,c
  9224  0020A6  CFF3 F042          	movff	prodl,___flmul@temp
  9225  0020AA  CFF4 F043          	movff	prodh,___flmul@temp+1
  9226  0020AE  5042               	movf	___flmul@temp^0,w,c
  9227  0020B0  6E38               	movwf	___flmul@grs^0,c
  9228  0020B2  6A39               	clrf	(___flmul@grs+1)^0,c
  9229  0020B4  6A3A               	clrf	(___flmul@grs+2)^0,c
  9230  0020B6  6A3B               	clrf	(___flmul@grs+3)^0,c
  9231  0020B8  5043               	movf	(___flmul@temp+1)^0,w,c
  9232  0020BA  6E3E               	movwf	___flmul@prod^0,c
  9233  0020BC  6A3F               	clrf	(___flmul@prod+1)^0,c
  9234  0020BE  6A40               	clrf	(___flmul@prod+2)^0,c
  9235  0020C0  6A41               	clrf	(___flmul@prod+3)^0,c
  9236  0020C2  5030               	movf	(___flmul@a+1)^0,w,c
  9237  0020C4  022C               	mulwf	(___flmul@b+1)^0,c
  9238  0020C6  CFF3 F042          	movff	prodl,___flmul@temp
  9239  0020CA  CFF4 F043          	movff	prodh,___flmul@temp+1
  9240  0020CE  5042               	movf	___flmul@temp^0,w,c
  9241  0020D0  2638               	addwf	___flmul@grs^0,f,c
  9242  0020D2  0E00               	movlw	0
  9243  0020D4  2239               	addwfc	(___flmul@grs+1)^0,f,c
  9244  0020D6  223A               	addwfc	(___flmul@grs+2)^0,f,c
  9245  0020D8  223B               	addwfc	(___flmul@grs+3)^0,f,c
  9246  0020DA  5043               	movf	(___flmul@temp+1)^0,w,c
  9247  0020DC  263E               	addwf	___flmul@prod^0,f,c
  9248  0020DE  0E00               	movlw	0
  9249  0020E0  223F               	addwfc	(___flmul@prod+1)^0,f,c
  9250  0020E2  2240               	addwfc	(___flmul@prod+2)^0,f,c
  9251  0020E4  2241               	addwfc	(___flmul@prod+3)^0,f,c
  9252  0020E6  502F               	movf	___flmul@a^0,w,c
  9253  0020E8  022D               	mulwf	(___flmul@b+2)^0,c
  9254  0020EA  CFF3 F042          	movff	prodl,___flmul@temp
  9255  0020EE  CFF4 F043          	movff	prodh,___flmul@temp+1
  9256  0020F2  5042               	movf	___flmul@temp^0,w,c
  9257  0020F4  2638               	addwf	___flmul@grs^0,f,c
  9258  0020F6  0E00               	movlw	0
  9259  0020F8  2239               	addwfc	(___flmul@grs+1)^0,f,c
  9260  0020FA  223A               	addwfc	(___flmul@grs+2)^0,f,c
  9261  0020FC  223B               	addwfc	(___flmul@grs+3)^0,f,c
  9262  0020FE  5043               	movf	(___flmul@temp+1)^0,w,c
  9263  002100  263E               	addwf	___flmul@prod^0,f,c
  9264  002102  0E00               	movlw	0
  9265  002104  223F               	addwfc	(___flmul@prod+1)^0,f,c
  9266  002106  2240               	addwfc	(___flmul@prod+2)^0,f,c
  9267  002108  2241               	addwfc	(___flmul@prod+3)^0,f,c
  9268  00210A  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  9269  00210E  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  9270  002112  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  9271  002116  6A38               	clrf	___flmul@grs^0,c
  9272  002118  502F               	movf	___flmul@a^0,w,c
  9273  00211A  022C               	mulwf	(___flmul@b+1)^0,c
  9274  00211C  CFF3 F042          	movff	prodl,___flmul@temp
  9275  002120  CFF4 F043          	movff	prodh,___flmul@temp+1
  9276  002124  5042               	movf	___flmul@temp^0,w,c
  9277  002126  2638               	addwf	___flmul@grs^0,f,c
  9278  002128  5043               	movf	(___flmul@temp+1)^0,w,c
  9279  00212A  2239               	addwfc	(___flmul@grs+1)^0,f,c
  9280  00212C  0E00               	movlw	0
  9281  00212E  223A               	addwfc	(___flmul@grs+2)^0,f,c
  9282  002130  0E00               	movlw	0
  9283  002132  223B               	addwfc	(___flmul@grs+3)^0,f,c
  9284  002134  5030               	movf	(___flmul@a+1)^0,w,c
  9285  002136  022B               	mulwf	___flmul@b^0,c
  9286  002138  CFF3 F042          	movff	prodl,___flmul@temp
  9287  00213C  CFF4 F043          	movff	prodh,___flmul@temp+1
  9288  002140  5042               	movf	___flmul@temp^0,w,c
  9289  002142  2638               	addwf	___flmul@grs^0,f,c
  9290  002144  5043               	movf	(___flmul@temp+1)^0,w,c
  9291  002146  2239               	addwfc	(___flmul@grs+1)^0,f,c
  9292  002148  0E00               	movlw	0
  9293  00214A  223A               	addwfc	(___flmul@grs+2)^0,f,c
  9294  00214C  0E00               	movlw	0
  9295  00214E  223B               	addwfc	(___flmul@grs+3)^0,f,c
  9296  002150  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  9297  002154  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  9298  002158  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  9299  00215C  6A38               	clrf	___flmul@grs^0,c
  9300  00215E  502F               	movf	___flmul@a^0,w,c
  9301  002160  022B               	mulwf	___flmul@b^0,c
  9302  002162  CFF3 F042          	movff	prodl,___flmul@temp
  9303  002166  CFF4 F043          	movff	prodh,___flmul@temp+1
  9304  00216A  5042               	movf	___flmul@temp^0,w,c
  9305  00216C  2638               	addwf	___flmul@grs^0,f,c
  9306  00216E  5043               	movf	(___flmul@temp+1)^0,w,c
  9307  002170  2239               	addwfc	(___flmul@grs+1)^0,f,c
  9308  002172  0E00               	movlw	0
  9309  002174  223A               	addwfc	(___flmul@grs+2)^0,f,c
  9310  002176  0E00               	movlw	0
  9311  002178  223B               	addwfc	(___flmul@grs+3)^0,f,c
  9312  00217A  5031               	movf	(___flmul@a+2)^0,w,c
  9313  00217C  022C               	mulwf	(___flmul@b+1)^0,c
  9314  00217E  CFF3 F042          	movff	prodl,___flmul@temp
  9315  002182  CFF4 F043          	movff	prodh,___flmul@temp+1
  9316  002186  5042               	movf	___flmul@temp^0,w,c
  9317  002188  263E               	addwf	___flmul@prod^0,f,c
  9318  00218A  5043               	movf	(___flmul@temp+1)^0,w,c
  9319  00218C  223F               	addwfc	(___flmul@prod+1)^0,f,c
  9320  00218E  0E00               	movlw	0
  9321  002190  2240               	addwfc	(___flmul@prod+2)^0,f,c
  9322  002192  0E00               	movlw	0
  9323  002194  2241               	addwfc	(___flmul@prod+3)^0,f,c
  9324  002196  5030               	movf	(___flmul@a+1)^0,w,c
  9325  002198  022D               	mulwf	(___flmul@b+2)^0,c
  9326  00219A  CFF3 F042          	movff	prodl,___flmul@temp
  9327  00219E  CFF4 F043          	movff	prodh,___flmul@temp+1
  9328  0021A2  5042               	movf	___flmul@temp^0,w,c
  9329  0021A4  263E               	addwf	___flmul@prod^0,f,c
  9330  0021A6  5043               	movf	(___flmul@temp+1)^0,w,c
  9331  0021A8  223F               	addwfc	(___flmul@prod+1)^0,f,c
  9332  0021AA  0E00               	movlw	0
  9333  0021AC  2240               	addwfc	(___flmul@prod+2)^0,f,c
  9334  0021AE  0E00               	movlw	0
  9335  0021B0  2241               	addwfc	(___flmul@prod+3)^0,f,c
  9336  0021B2  5031               	movf	(___flmul@a+2)^0,w,c
  9337  0021B4  022D               	mulwf	(___flmul@b+2)^0,c
  9338  0021B6  CFF3 F042          	movff	prodl,___flmul@temp
  9339  0021BA  CFF4 F043          	movff	prodh,___flmul@temp+1
  9340  0021BE  5042               	movf	___flmul@temp^0,w,c
  9341  0021C0  6E33               	movwf	??___flmul^0,c
  9342  0021C2  5043               	movf	(___flmul@temp+1)^0,w,c
  9343  0021C4  6E34               	movwf	(??___flmul+1)^0,c
  9344  0021C6  6A35               	clrf	(??___flmul+2)^0,c
  9345  0021C8  6A36               	clrf	(??___flmul+3)^0,c
  9346  0021CA  C035  F036         	movff	??___flmul+2,??___flmul+3
  9347  0021CE  C034  F035         	movff	??___flmul+1,??___flmul+2
  9348  0021D2  C033  F034         	movff	??___flmul,??___flmul+1
  9349  0021D6  6A33               	clrf	??___flmul^0,c
  9350  0021D8  5033               	movf	??___flmul^0,w,c
  9351  0021DA  263E               	addwf	___flmul@prod^0,f,c
  9352  0021DC  5034               	movf	(??___flmul+1)^0,w,c
  9353  0021DE  223F               	addwfc	(___flmul@prod+1)^0,f,c
  9354  0021E0  5035               	movf	(??___flmul+2)^0,w,c
  9355  0021E2  2240               	addwfc	(___flmul@prod+2)^0,f,c
  9356  0021E4  5036               	movf	(??___flmul+3)^0,w,c
  9357  0021E6  2241               	addwfc	(___flmul@prod+3)^0,f,c
  9358  0021E8  C038  F033         	movff	___flmul@grs,??___flmul
  9359  0021EC  C039  F034         	movff	___flmul@grs+1,??___flmul+1
  9360  0021F0  C03A  F035         	movff	___flmul@grs+2,??___flmul+2
  9361  0021F4  C03B  F036         	movff	___flmul@grs+3,??___flmul+3
  9362  0021F8  0E19               	movlw	25
  9363  0021FA  EF04  F011         	goto	u3670
  9364  0021FE                     u3675:
  9365  0021FE  90D8               	bcf	status,0,c
  9366  002200  3236               	rrcf	(??___flmul+3)^0,f,c
  9367  002202  3235               	rrcf	(??___flmul+2)^0,f,c
  9368  002204  3234               	rrcf	(??___flmul+1)^0,f,c
  9369  002206  3233               	rrcf	??___flmul^0,f,c
  9370  002208                     u3670:
  9371  002208  2EE8               	decfsz	wreg,f,c
  9372  00220A  EFFF  F010         	goto	u3675
  9373  00220E  5033               	movf	??___flmul^0,w,c
  9374  002210  263E               	addwf	___flmul@prod^0,f,c
  9375  002212  5034               	movf	(??___flmul+1)^0,w,c
  9376  002214  223F               	addwfc	(___flmul@prod+1)^0,f,c
  9377  002216  5035               	movf	(??___flmul+2)^0,w,c
  9378  002218  2240               	addwfc	(___flmul@prod+2)^0,f,c
  9379  00221A  5036               	movf	(??___flmul+3)^0,w,c
  9380  00221C  2241               	addwfc	(___flmul@prod+3)^0,f,c
  9381  00221E  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  9382  002222  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  9383  002226  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  9384  00222A  6A38               	clrf	___flmul@grs^0,c
  9385  00222C  503C               	movf	___flmul@aexp^0,w,c
  9386  00222E  C03D  F033         	movff	___flmul@bexp,??___flmul
  9387  002232  6A34               	clrf	(??___flmul+1)^0,c
  9388  002234  2633               	addwf	??___flmul^0,f,c
  9389  002236  0E00               	movlw	0
  9390  002238  2234               	addwfc	(??___flmul+1)^0,f,c
  9391  00223A  0E82               	movlw	130
  9392  00223C  2433               	addwf	??___flmul^0,w,c
  9393  00223E  6E42               	movwf	___flmul@temp^0,c
  9394  002240  0EFF               	movlw	255
  9395  002242  2034               	addwfc	(??___flmul+1)^0,w,c
  9396  002244  6E43               	movwf	(___flmul@temp+1)^0,c
  9397  002246  EF3A  F011         	goto	l3593
  9398  00224A                     l3587:
  9399  00224A  90D8               	bcf	status,0,c
  9400  00224C  363E               	rlcf	___flmul@prod^0,f,c
  9401  00224E  363F               	rlcf	(___flmul@prod+1)^0,f,c
  9402  002250  3640               	rlcf	(___flmul@prod+2)^0,f,c
  9403  002252  3641               	rlcf	(___flmul@prod+3)^0,f,c
  9404  002254  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  9405  002256  EF2F  F011         	goto	u3681
  9406  00225A  EF31  F011         	goto	u3680
  9407  00225E                     u3681:
  9408  00225E  EF32  F011         	goto	l798
  9409  002262                     u3680:
  9410  002262  803E               	bsf	___flmul@prod^0,0,c
  9411  002264                     l798:
  9412  002264  90D8               	bcf	status,0,c
  9413  002266  3638               	rlcf	___flmul@grs^0,f,c
  9414  002268  3639               	rlcf	(___flmul@grs+1)^0,f,c
  9415  00226A  363A               	rlcf	(___flmul@grs+2)^0,f,c
  9416  00226C  363B               	rlcf	(___flmul@grs+3)^0,f,c
  9417  00226E  0642               	decf	___flmul@temp^0,f,c
  9418  002270  A0D8               	btfss	status,0,c
  9419  002272  0643               	decf	(___flmul@temp+1)^0,f,c
  9420  002274                     l3593:
  9421  002274  AE40               	btfss	(___flmul@prod+2)^0,7,c
  9422  002276  EF3F  F011         	goto	u3691
  9423  00227A  EF41  F011         	goto	u3690
  9424  00227E                     u3691:
  9425  00227E  EF25  F011         	goto	l3587
  9426  002282                     u3690:
  9427  002282  0E00               	movlw	0
  9428  002284  6E3C               	movwf	___flmul@aexp^0,c
  9429  002286  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  9430  002288  EF48  F011         	goto	u3701
  9431  00228C  EF4A  F011         	goto	u3700
  9432  002290                     u3701:
  9433  002290  EF6E  F011         	goto	l800
  9434  002294                     u3700:
  9435  002294  0EFF               	movlw	255
  9436  002296  1438               	andwf	___flmul@grs^0,w,c
  9437  002298  6E33               	movwf	??___flmul^0,c
  9438  00229A  0EFF               	movlw	255
  9439  00229C  1439               	andwf	(___flmul@grs+1)^0,w,c
  9440  00229E  6E34               	movwf	(??___flmul+1)^0,c
  9441  0022A0  0EFF               	movlw	255
  9442  0022A2  143A               	andwf	(___flmul@grs+2)^0,w,c
  9443  0022A4  6E35               	movwf	(??___flmul+2)^0,c
  9444  0022A6  0E7F               	movlw	127
  9445  0022A8  143B               	andwf	(___flmul@grs+3)^0,w,c
  9446  0022AA  6E36               	movwf	(??___flmul+3)^0,c
  9447  0022AC  5033               	movf	??___flmul^0,w,c
  9448  0022AE  1034               	iorwf	(??___flmul+1)^0,w,c
  9449  0022B0  1035               	iorwf	(??___flmul+2)^0,w,c
  9450  0022B2  1036               	iorwf	(??___flmul+3)^0,w,c
  9451  0022B4  B4D8               	btfsc	status,2,c
  9452  0022B6  EF5F  F011         	goto	u3711
  9453  0022BA  EF61  F011         	goto	u3710
  9454  0022BE                     u3711:
  9455  0022BE  EF65  F011         	goto	l801
  9456  0022C2                     u3710:
  9457  0022C2                     l3601:
  9458  0022C2  0E01               	movlw	1
  9459  0022C4  6E3C               	movwf	___flmul@aexp^0,c
  9460  0022C6  EF6E  F011         	goto	l800
  9461  0022CA                     l801:
  9462  0022CA  A03E               	btfss	___flmul@prod^0,0,c
  9463  0022CC  EF6A  F011         	goto	u3721
  9464  0022D0  EF6C  F011         	goto	u3720
  9465  0022D4                     u3721:
  9466  0022D4  EF6E  F011         	goto	l800
  9467  0022D8                     u3720:
  9468  0022D8  EF61  F011         	goto	l3601
  9469  0022DC                     l800:
  9470  0022DC  503C               	movf	___flmul@aexp^0,w,c
  9471  0022DE  B4D8               	btfsc	status,2,c
  9472  0022E0  EF74  F011         	goto	u3731
  9473  0022E4  EF76  F011         	goto	u3730
  9474  0022E8                     u3731:
  9475  0022E8  EF9A  F011         	goto	l3613
  9476  0022EC                     u3730:
  9477  0022EC  0E01               	movlw	1
  9478  0022EE  263E               	addwf	___flmul@prod^0,f,c
  9479  0022F0  0E00               	movlw	0
  9480  0022F2  223F               	addwfc	(___flmul@prod+1)^0,f,c
  9481  0022F4  2240               	addwfc	(___flmul@prod+2)^0,f,c
  9482  0022F6  2241               	addwfc	(___flmul@prod+3)^0,f,c
  9483  0022F8  A041               	btfss	(___flmul@prod+3)^0,0,c
  9484  0022FA  EF81  F011         	goto	u3741
  9485  0022FE  EF83  F011         	goto	u3740
  9486  002302                     u3741:
  9487  002302  EF9A  F011         	goto	l3613
  9488  002306                     u3740:
  9489  002306  C03E  F033         	movff	___flmul@prod,??___flmul
  9490  00230A  C03F  F034         	movff	___flmul@prod+1,??___flmul+1
  9491  00230E  C040  F035         	movff	___flmul@prod+2,??___flmul+2
  9492  002312  C041  F036         	movff	___flmul@prod+3,??___flmul+3
  9493  002316  3436               	rlcf	(??___flmul+3)^0,w,c
  9494  002318  3236               	rrcf	(??___flmul+3)^0,f,c
  9495  00231A  3235               	rrcf	(??___flmul+2)^0,f,c
  9496  00231C  3234               	rrcf	(??___flmul+1)^0,f,c
  9497  00231E  3233               	rrcf	??___flmul^0,f,c
  9498  002320  C033  F03E         	movff	??___flmul,___flmul@prod
  9499  002324  C034  F03F         	movff	??___flmul+1,___flmul@prod+1
  9500  002328  C035  F040         	movff	??___flmul+2,___flmul@prod+2
  9501  00232C  C036  F041         	movff	??___flmul+3,___flmul@prod+3
  9502  002330  4A42               	infsnz	___flmul@temp^0,f,c
  9503  002332  2A43               	incf	(___flmul@temp+1)^0,f,c
  9504  002334                     l3613:
  9505  002334  BE43               	btfsc	(___flmul@temp+1)^0,7,c
  9506  002336  EFA5  F011         	goto	u3751
  9507  00233A  5043               	movf	(___flmul@temp+1)^0,w,c
  9508  00233C  E108               	bnz	u3750
  9509  00233E  2842               	incf	___flmul@temp^0,w,c
  9510  002340  A0D8               	btfss	status,0,c
  9511  002342  EFA5  F011         	goto	u3751
  9512  002346  EFA7  F011         	goto	u3750
  9513  00234A                     u3751:
  9514  00234A  EFB1  F011         	goto	l3617
  9515  00234E                     u3750:
  9516  00234E  0E00               	movlw	0
  9517  002350  6E3E               	movwf	___flmul@prod^0,c
  9518  002352  0E00               	movlw	0
  9519  002354  6E3F               	movwf	(___flmul@prod+1)^0,c
  9520  002356  0E80               	movlw	128
  9521  002358  6E40               	movwf	(___flmul@prod+2)^0,c
  9522  00235A  0E7F               	movlw	127
  9523  00235C  6E41               	movwf	(___flmul@prod+3)^0,c
  9524  00235E  EFDF  F011         	goto	l3629
  9525  002362                     l3617:
  9526  002362  BE43               	btfsc	(___flmul@temp+1)^0,7,c
  9527  002364  EFBE  F011         	goto	u3760
  9528  002368  5043               	movf	(___flmul@temp+1)^0,w,c
  9529  00236A  E106               	bnz	u3761
  9530  00236C  0442               	decf	___flmul@temp^0,w,c
  9531  00236E  B0D8               	btfsc	status,0,c
  9532  002370  EFBC  F011         	goto	u3761
  9533  002374  EFBE  F011         	goto	u3760
  9534  002378                     u3761:
  9535  002378  EFCA  F011         	goto	l808
  9536  00237C                     u3760:
  9537  00237C  0E00               	movlw	0
  9538  00237E  6E3E               	movwf	___flmul@prod^0,c
  9539  002380  0E00               	movlw	0
  9540  002382  6E3F               	movwf	(___flmul@prod+1)^0,c
  9541  002384  0E00               	movlw	0
  9542  002386  6E40               	movwf	(___flmul@prod+2)^0,c
  9543  002388  0E00               	movlw	0
  9544  00238A  6E41               	movwf	(___flmul@prod+3)^0,c
  9545  00238C  0E00               	movlw	0
  9546  00238E  6E37               	movwf	___flmul@sign^0,c
  9547  002390  EFDF  F011         	goto	l3629
  9548  002394                     l808:
  9549  002394  C042  F03D         	movff	___flmul@temp,___flmul@bexp
  9550  002398  0EFF               	movlw	255
  9551  00239A  163E               	andwf	___flmul@prod^0,f,c
  9552  00239C  0EFF               	movlw	255
  9553  00239E  163F               	andwf	(___flmul@prod+1)^0,f,c
  9554  0023A0  0E7F               	movlw	127
  9555  0023A2  1640               	andwf	(___flmul@prod+2)^0,f,c
  9556  0023A4  0E00               	movlw	0
  9557  0023A6  1641               	andwf	(___flmul@prod+3)^0,f,c
  9558  0023A8  A03D               	btfss	___flmul@bexp^0,0,c
  9559  0023AA  EFD9  F011         	goto	u3771
  9560  0023AE  EFDB  F011         	goto	u3770
  9561  0023B2                     u3771:
  9562  0023B2  EFDC  F011         	goto	l3627
  9563  0023B6                     u3770:
  9564  0023B6  8E40               	bsf	(___flmul@prod+2)^0,7,c
  9565  0023B8                     l3627:
  9566  0023B8  90D8               	bcf	status,0,c
  9567  0023BA  303D               	rrcf	___flmul@bexp^0,w,c
  9568  0023BC  6E41               	movwf	(___flmul@prod+3)^0,c
  9569  0023BE                     l3629:
  9570  0023BE  5037               	movf	___flmul@sign^0,w,c
  9571  0023C0  1241               	iorwf	(___flmul@prod+3)^0,f,c
  9572  0023C2  C03E  F02B         	movff	___flmul@prod,?___flmul
  9573  0023C6  C03F  F02C         	movff	___flmul@prod+1,?___flmul+1
  9574  0023CA  C040  F02D         	movff	___flmul@prod+2,?___flmul+2
  9575  0023CE  C041  F02E         	movff	___flmul@prod+3,?___flmul+3
  9576  0023D2                     l795:
  9577  0023D2  0012               	return		;funcret
  9578  0023D4                     __end_of___flmul:
  9579                           	callstack 0
  9580                           
  9581 ;; *************** function ___fldiv *****************
  9582 ;; Defined at:
  9583 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;  b               4   67[COMRAM] unsigned char 
  9586 ;;  a               4   71[COMRAM] unsigned char 
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;  grs             4   86[COMRAM] unsigned long 
  9589 ;;  rem             4   79[COMRAM] unsigned long 
  9590 ;;  new_exp         2   84[COMRAM] short 
  9591 ;;  aexp            1   91[COMRAM] unsigned char 
  9592 ;;  bexp            1   90[COMRAM] unsigned char 
  9593 ;;  sign            1   83[COMRAM] unsigned char 
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  4   67[COMRAM] unsigned char 
  9596 ;; Registers used:
  9597 ;;		wreg, status,2, status,0
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9603 ;;      Params:         8       0       0       0       0       0       0       0       0
  9604 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9605 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9606 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9607 ;;Total ram usage:       25 bytes
  9608 ;; Hardware stack levels used: 1
  9609 ;; This function calls:
  9610 ;;		Nothing
  9611 ;; This function is called by:
  9612 ;;		_PWM1_Init
  9613 ;;		_PWM1_Set_Duty
  9614 ;;		_efgtoa
  9615 ;;		_PWM2_Init
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619                           	psect	text41
  9620  0023D4                     __ptext41:
  9621                           	callstack 0
  9622  0023D4                     ___fldiv:
  9623                           	callstack 26
  9624  0023D4  5047               	movf	(___fldiv@b+3)^0,w,c
  9625  0023D6  0B80               	andlw	128
  9626  0023D8  6E54               	movwf	___fldiv@sign^0,c
  9627  0023DA  5047               	movf	(___fldiv@b+3)^0,w,c
  9628  0023DC  2447               	addwf	(___fldiv@b+3)^0,w,c
  9629  0023DE  6E5B               	movwf	___fldiv@bexp^0,c
  9630  0023E0  AE46               	btfss	(___fldiv@b+2)^0,7,c
  9631  0023E2  EFF5  F011         	goto	u3361
  9632  0023E6  EFF7  F011         	goto	u3360
  9633  0023EA                     u3361:
  9634  0023EA  EFF8  F011         	goto	l3373
  9635  0023EE                     u3360:
  9636  0023EE  805B               	bsf	___fldiv@bexp^0,0,c
  9637  0023F0                     l3373:
  9638  0023F0  505B               	movf	___fldiv@bexp^0,w,c
  9639  0023F2  B4D8               	btfsc	status,2,c
  9640  0023F4  EFFE  F011         	goto	u3371
  9641  0023F8  EF00  F012         	goto	u3370
  9642  0023FC                     u3371:
  9643  0023FC  EF15  F012         	goto	l3383
  9644  002400                     u3370:
  9645  002400  285B               	incf	___fldiv@bexp^0,w,c
  9646  002402  A4D8               	btfss	status,2,c
  9647  002404  EF06  F012         	goto	u3381
  9648  002408  EF08  F012         	goto	u3380
  9649  00240C                     u3381:
  9650  00240C  EF10  F012         	goto	l3379
  9651  002410                     u3380:
  9652  002410  0E00               	movlw	0
  9653  002412  6E44               	movwf	___fldiv@b^0,c
  9654  002414  0E00               	movlw	0
  9655  002416  6E45               	movwf	(___fldiv@b+1)^0,c
  9656  002418  0E00               	movlw	0
  9657  00241A  6E46               	movwf	(___fldiv@b+2)^0,c
  9658  00241C  0E00               	movlw	0
  9659  00241E  6E47               	movwf	(___fldiv@b+3)^0,c
  9660  002420                     l3379:
  9661  002420  8E46               	bsf	(___fldiv@b+2)^0,7,c
  9662  002422  0E00               	movlw	0
  9663  002424  6E47               	movwf	(___fldiv@b+3)^0,c
  9664  002426  EF1D  F012         	goto	l3385
  9665  00242A                     l3383:
  9666  00242A  0E00               	movlw	0
  9667  00242C  6E44               	movwf	___fldiv@b^0,c
  9668  00242E  0E00               	movlw	0
  9669  002430  6E45               	movwf	(___fldiv@b+1)^0,c
  9670  002432  0E00               	movlw	0
  9671  002434  6E46               	movwf	(___fldiv@b+2)^0,c
  9672  002436  0E00               	movlw	0
  9673  002438  6E47               	movwf	(___fldiv@b+3)^0,c
  9674  00243A                     l3385:
  9675  00243A  504B               	movf	(___fldiv@a+3)^0,w,c
  9676  00243C  0B80               	andlw	128
  9677  00243E  1A54               	xorwf	___fldiv@sign^0,f,c
  9678  002440  504B               	movf	(___fldiv@a+3)^0,w,c
  9679  002442  244B               	addwf	(___fldiv@a+3)^0,w,c
  9680  002444  6E5C               	movwf	___fldiv@aexp^0,c
  9681  002446  AE4A               	btfss	(___fldiv@a+2)^0,7,c
  9682  002448  EF28  F012         	goto	u3391
  9683  00244C  EF2A  F012         	goto	u3390
  9684  002450                     u3391:
  9685  002450  EF2B  F012         	goto	l3393
  9686  002454                     u3390:
  9687  002454  805C               	bsf	___fldiv@aexp^0,0,c
  9688  002456                     l3393:
  9689  002456  505C               	movf	___fldiv@aexp^0,w,c
  9690  002458  B4D8               	btfsc	status,2,c
  9691  00245A  EF31  F012         	goto	u3401
  9692  00245E  EF33  F012         	goto	u3400
  9693  002462                     u3401:
  9694  002462  EF48  F012         	goto	l3403
  9695  002466                     u3400:
  9696  002466  285C               	incf	___fldiv@aexp^0,w,c
  9697  002468  A4D8               	btfss	status,2,c
  9698  00246A  EF39  F012         	goto	u3411
  9699  00246E  EF3B  F012         	goto	u3410
  9700  002472                     u3411:
  9701  002472  EF43  F012         	goto	l3399
  9702  002476                     u3410:
  9703  002476  0E00               	movlw	0
  9704  002478  6E48               	movwf	___fldiv@a^0,c
  9705  00247A  0E00               	movlw	0
  9706  00247C  6E49               	movwf	(___fldiv@a+1)^0,c
  9707  00247E  0E00               	movlw	0
  9708  002480  6E4A               	movwf	(___fldiv@a+2)^0,c
  9709  002482  0E00               	movlw	0
  9710  002484  6E4B               	movwf	(___fldiv@a+3)^0,c
  9711  002486                     l3399:
  9712  002486  8E4A               	bsf	(___fldiv@a+2)^0,7,c
  9713  002488  0E00               	movlw	0
  9714  00248A  6E4B               	movwf	(___fldiv@a+3)^0,c
  9715  00248C  EF50  F012         	goto	l3405
  9716  002490                     l3403:
  9717  002490  0E00               	movlw	0
  9718  002492  6E48               	movwf	___fldiv@a^0,c
  9719  002494  0E00               	movlw	0
  9720  002496  6E49               	movwf	(___fldiv@a+1)^0,c
  9721  002498  0E00               	movlw	0
  9722  00249A  6E4A               	movwf	(___fldiv@a+2)^0,c
  9723  00249C  0E00               	movlw	0
  9724  00249E  6E4B               	movwf	(___fldiv@a+3)^0,c
  9725  0024A0                     l3405:
  9726  0024A0  5048               	movf	___fldiv@a^0,w,c
  9727  0024A2  1049               	iorwf	(___fldiv@a+1)^0,w,c
  9728  0024A4  104A               	iorwf	(___fldiv@a+2)^0,w,c
  9729  0024A6  104B               	iorwf	(___fldiv@a+3)^0,w,c
  9730  0024A8  A4D8               	btfss	status,2,c
  9731  0024AA  EF59  F012         	goto	u3421
  9732  0024AE  EF5B  F012         	goto	u3420
  9733  0024B2                     u3421:
  9734  0024B2  EF73  F012         	goto	l3417
  9735  0024B6                     u3420:
  9736  0024B6  0E00               	movlw	0
  9737  0024B8  6E44               	movwf	___fldiv@b^0,c
  9738  0024BA  0E00               	movlw	0
  9739  0024BC  6E45               	movwf	(___fldiv@b+1)^0,c
  9740  0024BE  0E00               	movlw	0
  9741  0024C0  6E46               	movwf	(___fldiv@b+2)^0,c
  9742  0024C2  0E00               	movlw	0
  9743  0024C4  6E47               	movwf	(___fldiv@b+3)^0,c
  9744  0024C6  0E80               	movlw	128
  9745  0024C8  1246               	iorwf	(___fldiv@b+2)^0,f,c
  9746  0024CA  0E7F               	movlw	127
  9747  0024CC  1247               	iorwf	(___fldiv@b+3)^0,f,c
  9748  0024CE                     l3411:
  9749  0024CE  5054               	movf	___fldiv@sign^0,w,c
  9750  0024D0  1247               	iorwf	(___fldiv@b+3)^0,f,c
  9751  0024D2  C044  F044         	movff	___fldiv@b,?___fldiv
  9752  0024D6  C045  F045         	movff	___fldiv@b+1,?___fldiv+1
  9753  0024DA  C046  F046         	movff	___fldiv@b+2,?___fldiv+2
  9754  0024DE  C047  F047         	movff	___fldiv@b+3,?___fldiv+3
  9755  0024E2  EFB6  F013         	goto	l759
  9756  0024E6                     l3417:
  9757  0024E6  505B               	movf	___fldiv@bexp^0,w,c
  9758  0024E8  A4D8               	btfss	status,2,c
  9759  0024EA  EF79  F012         	goto	u3431
  9760  0024EE  EF7B  F012         	goto	u3430
  9761  0024F2                     u3431:
  9762  0024F2  EF85  F012         	goto	l3425
  9763  0024F6                     u3430:
  9764  0024F6  0E00               	movlw	0
  9765  0024F8  6E44               	movwf	?___fldiv^0,c
  9766  0024FA  0E00               	movlw	0
  9767  0024FC  6E45               	movwf	(?___fldiv+1)^0,c
  9768  0024FE  0E00               	movlw	0
  9769  002500  6E46               	movwf	(?___fldiv+2)^0,c
  9770  002502  0E00               	movlw	0
  9771  002504  6E47               	movwf	(?___fldiv+3)^0,c
  9772  002506  EFB6  F013         	goto	l759
  9773  00250A                     l3425:
  9774  00250A  505C               	movf	___fldiv@aexp^0,w,c
  9775  00250C  C05B  F04C         	movff	___fldiv@bexp,??___fldiv
  9776  002510  6A4D               	clrf	(??___fldiv+1)^0,c
  9777  002512  5E4C               	subwf	??___fldiv^0,f,c
  9778  002514  0E00               	movlw	0
  9779  002516  5A4D               	subwfb	(??___fldiv+1)^0,f,c
  9780  002518  0E7F               	movlw	127
  9781  00251A  244C               	addwf	??___fldiv^0,w,c
  9782  00251C  6E55               	movwf	___fldiv@new_exp^0,c
  9783  00251E  0E00               	movlw	0
  9784  002520  204D               	addwfc	(??___fldiv+1)^0,w,c
  9785  002522  6E56               	movwf	(___fldiv@new_exp+1)^0,c
  9786  002524  C044  F050         	movff	___fldiv@b,___fldiv@rem
  9787  002528  C045  F051         	movff	___fldiv@b+1,___fldiv@rem+1
  9788  00252C  C046  F052         	movff	___fldiv@b+2,___fldiv@rem+2
  9789  002530  C047  F053         	movff	___fldiv@b+3,___fldiv@rem+3
  9790  002534  0E00               	movlw	0
  9791  002536  6E44               	movwf	___fldiv@b^0,c
  9792  002538  0E00               	movlw	0
  9793  00253A  6E45               	movwf	(___fldiv@b+1)^0,c
  9794  00253C  0E00               	movlw	0
  9795  00253E  6E46               	movwf	(___fldiv@b+2)^0,c
  9796  002540  0E00               	movlw	0
  9797  002542  6E47               	movwf	(___fldiv@b+3)^0,c
  9798  002544  0E00               	movlw	0
  9799  002546  6E57               	movwf	___fldiv@grs^0,c
  9800  002548  0E00               	movlw	0
  9801  00254A  6E58               	movwf	(___fldiv@grs+1)^0,c
  9802  00254C  0E00               	movlw	0
  9803  00254E  6E59               	movwf	(___fldiv@grs+2)^0,c
  9804  002550  0E00               	movlw	0
  9805  002552  6E5A               	movwf	(___fldiv@grs+3)^0,c
  9806  002554  0E00               	movlw	0
  9807  002556  6E5C               	movwf	___fldiv@aexp^0,c
  9808  002558  EFE6  F012         	goto	l761
  9809  00255C                     l3435:
  9810  00255C  505C               	movf	___fldiv@aexp^0,w,c
  9811  00255E  B4D8               	btfsc	status,2,c
  9812  002560  EFB4  F012         	goto	u3441
  9813  002564  EFB6  F012         	goto	u3440
  9814  002568                     u3441:
  9815  002568  EFCD  F012         	goto	l3443
  9816  00256C                     u3440:
  9817  00256C  90D8               	bcf	status,0,c
  9818  00256E  3650               	rlcf	___fldiv@rem^0,f,c
  9819  002570  3651               	rlcf	(___fldiv@rem+1)^0,f,c
  9820  002572  3652               	rlcf	(___fldiv@rem+2)^0,f,c
  9821  002574  3653               	rlcf	(___fldiv@rem+3)^0,f,c
  9822  002576  90D8               	bcf	status,0,c
  9823  002578  3644               	rlcf	___fldiv@b^0,f,c
  9824  00257A  3645               	rlcf	(___fldiv@b+1)^0,f,c
  9825  00257C  3646               	rlcf	(___fldiv@b+2)^0,f,c
  9826  00257E  3647               	rlcf	(___fldiv@b+3)^0,f,c
  9827  002580  AE5A               	btfss	(___fldiv@grs+3)^0,7,c
  9828  002582  EFC5  F012         	goto	u3451
  9829  002586  EFC7  F012         	goto	u3450
  9830  00258A                     u3451:
  9831  00258A  EFC8  F012         	goto	l764
  9832  00258E                     u3450:
  9833  00258E  8044               	bsf	___fldiv@b^0,0,c
  9834  002590                     l764:
  9835  002590  90D8               	bcf	status,0,c
  9836  002592  3657               	rlcf	___fldiv@grs^0,f,c
  9837  002594  3658               	rlcf	(___fldiv@grs+1)^0,f,c
  9838  002596  3659               	rlcf	(___fldiv@grs+2)^0,f,c
  9839  002598  365A               	rlcf	(___fldiv@grs+3)^0,f,c
  9840  00259A                     l3443:
  9841  00259A  5048               	movf	___fldiv@a^0,w,c
  9842  00259C  5C50               	subwf	___fldiv@rem^0,w,c
  9843  00259E  5049               	movf	(___fldiv@a+1)^0,w,c
  9844  0025A0  5851               	subwfb	(___fldiv@rem+1)^0,w,c
  9845  0025A2  504A               	movf	(___fldiv@a+2)^0,w,c
  9846  0025A4  5852               	subwfb	(___fldiv@rem+2)^0,w,c
  9847  0025A6  504B               	movf	(___fldiv@a+3)^0,w,c
  9848  0025A8  5853               	subwfb	(___fldiv@rem+3)^0,w,c
  9849  0025AA  A0D8               	btfss	status,0,c
  9850  0025AC  EFDA  F012         	goto	u3461
  9851  0025B0  EFDC  F012         	goto	u3460
  9852  0025B4                     u3461:
  9853  0025B4  EFE5  F012         	goto	l3449
  9854  0025B8                     u3460:
  9855  0025B8  8C5A               	bsf	(___fldiv@grs+3)^0,6,c
  9856  0025BA  5048               	movf	___fldiv@a^0,w,c
  9857  0025BC  5E50               	subwf	___fldiv@rem^0,f,c
  9858  0025BE  5049               	movf	(___fldiv@a+1)^0,w,c
  9859  0025C0  5A51               	subwfb	(___fldiv@rem+1)^0,f,c
  9860  0025C2  504A               	movf	(___fldiv@a+2)^0,w,c
  9861  0025C4  5A52               	subwfb	(___fldiv@rem+2)^0,f,c
  9862  0025C6  504B               	movf	(___fldiv@a+3)^0,w,c
  9863  0025C8  5A53               	subwfb	(___fldiv@rem+3)^0,f,c
  9864  0025CA                     l3449:
  9865  0025CA  2A5C               	incf	___fldiv@aexp^0,f,c
  9866  0025CC                     l761:
  9867  0025CC  0E19               	movlw	25
  9868  0025CE  645C               	cpfsgt	___fldiv@aexp^0,c
  9869  0025D0  EFEC  F012         	goto	u3471
  9870  0025D4  EFEE  F012         	goto	u3470
  9871  0025D8                     u3471:
  9872  0025D8  EFAE  F012         	goto	l3435
  9873  0025DC                     u3470:
  9874  0025DC  5050               	movf	___fldiv@rem^0,w,c
  9875  0025DE  1051               	iorwf	(___fldiv@rem+1)^0,w,c
  9876  0025E0  1052               	iorwf	(___fldiv@rem+2)^0,w,c
  9877  0025E2  1053               	iorwf	(___fldiv@rem+3)^0,w,c
  9878  0025E4  B4D8               	btfsc	status,2,c
  9879  0025E6  EFF7  F012         	goto	u3481
  9880  0025EA  EFF9  F012         	goto	u3480
  9881  0025EE                     u3481:
  9882  0025EE  EF11  F013         	goto	l3461
  9883  0025F2                     u3480:
  9884  0025F2  8057               	bsf	___fldiv@grs^0,0,c
  9885  0025F4  EF11  F013         	goto	l3461
  9886  0025F8                     l3455:
  9887  0025F8  90D8               	bcf	status,0,c
  9888  0025FA  3644               	rlcf	___fldiv@b^0,f,c
  9889  0025FC  3645               	rlcf	(___fldiv@b+1)^0,f,c
  9890  0025FE  3646               	rlcf	(___fldiv@b+2)^0,f,c
  9891  002600  3647               	rlcf	(___fldiv@b+3)^0,f,c
  9892  002602  AE5A               	btfss	(___fldiv@grs+3)^0,7,c
  9893  002604  EF06  F013         	goto	u3491
  9894  002608  EF08  F013         	goto	u3490
  9895  00260C                     u3491:
  9896  00260C  EF09  F013         	goto	l770
  9897  002610                     u3490:
  9898  002610  8044               	bsf	___fldiv@b^0,0,c
  9899  002612                     l770:
  9900  002612  90D8               	bcf	status,0,c
  9901  002614  3657               	rlcf	___fldiv@grs^0,f,c
  9902  002616  3658               	rlcf	(___fldiv@grs+1)^0,f,c
  9903  002618  3659               	rlcf	(___fldiv@grs+2)^0,f,c
  9904  00261A  365A               	rlcf	(___fldiv@grs+3)^0,f,c
  9905  00261C  0655               	decf	___fldiv@new_exp^0,f,c
  9906  00261E  A0D8               	btfss	status,0,c
  9907  002620  0656               	decf	(___fldiv@new_exp+1)^0,f,c
  9908  002622                     l3461:
  9909  002622  AE46               	btfss	(___fldiv@b+2)^0,7,c
  9910  002624  EF16  F013         	goto	u3501
  9911  002628  EF18  F013         	goto	u3500
  9912  00262C                     u3501:
  9913  00262C  EFFC  F012         	goto	l3455
  9914  002630                     u3500:
  9915  002630  0E00               	movlw	0
  9916  002632  6E5C               	movwf	___fldiv@aexp^0,c
  9917  002634  AE5A               	btfss	(___fldiv@grs+3)^0,7,c
  9918  002636  EF1F  F013         	goto	u3511
  9919  00263A  EF21  F013         	goto	u3510
  9920  00263E                     u3511:
  9921  00263E  EF45  F013         	goto	l772
  9922  002642                     u3510:
  9923  002642  0EFF               	movlw	255
  9924  002644  1457               	andwf	___fldiv@grs^0,w,c
  9925  002646  6E4C               	movwf	??___fldiv^0,c
  9926  002648  0EFF               	movlw	255
  9927  00264A  1458               	andwf	(___fldiv@grs+1)^0,w,c
  9928  00264C  6E4D               	movwf	(??___fldiv+1)^0,c
  9929  00264E  0EFF               	movlw	255
  9930  002650  1459               	andwf	(___fldiv@grs+2)^0,w,c
  9931  002652  6E4E               	movwf	(??___fldiv+2)^0,c
  9932  002654  0E7F               	movlw	127
  9933  002656  145A               	andwf	(___fldiv@grs+3)^0,w,c
  9934  002658  6E4F               	movwf	(??___fldiv+3)^0,c
  9935  00265A  504C               	movf	??___fldiv^0,w,c
  9936  00265C  104D               	iorwf	(??___fldiv+1)^0,w,c
  9937  00265E  104E               	iorwf	(??___fldiv+2)^0,w,c
  9938  002660  104F               	iorwf	(??___fldiv+3)^0,w,c
  9939  002662  B4D8               	btfsc	status,2,c
  9940  002664  EF36  F013         	goto	u3521
  9941  002668  EF38  F013         	goto	u3520
  9942  00266C                     u3521:
  9943  00266C  EF3C  F013         	goto	l773
  9944  002670                     u3520:
  9945  002670                     l3469:
  9946  002670  0E01               	movlw	1
  9947  002672  6E5C               	movwf	___fldiv@aexp^0,c
  9948  002674  EF45  F013         	goto	l772
  9949  002678                     l773:
  9950  002678  A044               	btfss	___fldiv@b^0,0,c
  9951  00267A  EF41  F013         	goto	u3531
  9952  00267E  EF43  F013         	goto	u3530
  9953  002682                     u3531:
  9954  002682  EF45  F013         	goto	l772
  9955  002686                     u3530:
  9956  002686  EF38  F013         	goto	l3469
  9957  00268A                     l772:
  9958  00268A  505C               	movf	___fldiv@aexp^0,w,c
  9959  00268C  B4D8               	btfsc	status,2,c
  9960  00268E  EF4B  F013         	goto	u3541
  9961  002692  EF4D  F013         	goto	u3540
  9962  002696                     u3541:
  9963  002696  EF71  F013         	goto	l3481
  9964  00269A                     u3540:
  9965  00269A  0E01               	movlw	1
  9966  00269C  2644               	addwf	___fldiv@b^0,f,c
  9967  00269E  0E00               	movlw	0
  9968  0026A0  2245               	addwfc	(___fldiv@b+1)^0,f,c
  9969  0026A2  2246               	addwfc	(___fldiv@b+2)^0,f,c
  9970  0026A4  2247               	addwfc	(___fldiv@b+3)^0,f,c
  9971  0026A6  A047               	btfss	(___fldiv@b+3)^0,0,c
  9972  0026A8  EF58  F013         	goto	u3551
  9973  0026AC  EF5A  F013         	goto	u3550
  9974  0026B0                     u3551:
  9975  0026B0  EF71  F013         	goto	l3481
  9976  0026B4                     u3550:
  9977  0026B4  C044  F04C         	movff	___fldiv@b,??___fldiv
  9978  0026B8  C045  F04D         	movff	___fldiv@b+1,??___fldiv+1
  9979  0026BC  C046  F04E         	movff	___fldiv@b+2,??___fldiv+2
  9980  0026C0  C047  F04F         	movff	___fldiv@b+3,??___fldiv+3
  9981  0026C4  344F               	rlcf	(??___fldiv+3)^0,w,c
  9982  0026C6  324F               	rrcf	(??___fldiv+3)^0,f,c
  9983  0026C8  324E               	rrcf	(??___fldiv+2)^0,f,c
  9984  0026CA  324D               	rrcf	(??___fldiv+1)^0,f,c
  9985  0026CC  324C               	rrcf	??___fldiv^0,f,c
  9986  0026CE  C04C  F044         	movff	??___fldiv,___fldiv@b
  9987  0026D2  C04D  F045         	movff	??___fldiv+1,___fldiv@b+1
  9988  0026D6  C04E  F046         	movff	??___fldiv+2,___fldiv@b+2
  9989  0026DA  C04F  F047         	movff	??___fldiv+3,___fldiv@b+3
  9990  0026DE  4A55               	infsnz	___fldiv@new_exp^0,f,c
  9991  0026E0  2A56               	incf	(___fldiv@new_exp+1)^0,f,c
  9992  0026E2                     l3481:
  9993  0026E2  BE56               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9994  0026E4  EF7C  F013         	goto	u3561
  9995  0026E8  5056               	movf	(___fldiv@new_exp+1)^0,w,c
  9996  0026EA  E108               	bnz	u3560
  9997  0026EC  2855               	incf	___fldiv@new_exp^0,w,c
  9998  0026EE  A0D8               	btfss	status,0,c
  9999  0026F0  EF7C  F013         	goto	u3561
 10000  0026F4  EF7E  F013         	goto	u3560
 10001  0026F8                     u3561:
 10002  0026F8  EF89  F013         	goto	l3485
 10003  0026FC                     u3560:
 10004  0026FC  0E00               	movlw	0
 10005  0026FE  6E56               	movwf	(___fldiv@new_exp+1)^0,c
 10006  002700  6855               	setf	___fldiv@new_exp^0,c
 10007  002702  0E00               	movlw	0
 10008  002704  6E44               	movwf	___fldiv@b^0,c
 10009  002706  0E00               	movlw	0
 10010  002708  6E45               	movwf	(___fldiv@b+1)^0,c
 10011  00270A  0E00               	movlw	0
 10012  00270C  6E46               	movwf	(___fldiv@b+2)^0,c
 10013  00270E  0E00               	movlw	0
 10014  002710  6E47               	movwf	(___fldiv@b+3)^0,c
 10015  002712                     l3485:
 10016  002712  BE56               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10017  002714  EF96  F013         	goto	u3570
 10018  002718  5056               	movf	(___fldiv@new_exp+1)^0,w,c
 10019  00271A  E106               	bnz	u3571
 10020  00271C  0455               	decf	___fldiv@new_exp^0,w,c
 10021  00271E  B0D8               	btfsc	status,0,c
 10022  002720  EF94  F013         	goto	u3571
 10023  002724  EF96  F013         	goto	u3570
 10024  002728                     u3571:
 10025  002728  EFA4  F013         	goto	l3489
 10026  00272C                     u3570:
 10027  00272C  0E00               	movlw	0
 10028  00272E  6E56               	movwf	(___fldiv@new_exp+1)^0,c
 10029  002730  0E00               	movlw	0
 10030  002732  6E55               	movwf	___fldiv@new_exp^0,c
 10031  002734  0E00               	movlw	0
 10032  002736  6E44               	movwf	___fldiv@b^0,c
 10033  002738  0E00               	movlw	0
 10034  00273A  6E45               	movwf	(___fldiv@b+1)^0,c
 10035  00273C  0E00               	movlw	0
 10036  00273E  6E46               	movwf	(___fldiv@b+2)^0,c
 10037  002740  0E00               	movlw	0
 10038  002742  6E47               	movwf	(___fldiv@b+3)^0,c
 10039  002744  0E00               	movlw	0
 10040  002746  6E54               	movwf	___fldiv@sign^0,c
 10041  002748                     l3489:
 10042  002748  C055  F05B         	movff	___fldiv@new_exp,___fldiv@bexp
 10043  00274C  A05B               	btfss	___fldiv@bexp^0,0,c
 10044  00274E  EFAB  F013         	goto	u3581
 10045  002752  EFAD  F013         	goto	u3580
 10046  002756                     u3581:
 10047  002756  EFB0  F013         	goto	l3495
 10048  00275A                     u3580:
 10049  00275A  8E46               	bsf	(___fldiv@b+2)^0,7,c
 10050  00275C  EFB1  F013         	goto	l3497
 10051  002760                     l3495:
 10052  002760  9E46               	bcf	(___fldiv@b+2)^0,7,c
 10053  002762                     l3497:
 10054  002762  90D8               	bcf	status,0,c
 10055  002764  305B               	rrcf	___fldiv@bexp^0,w,c
 10056  002766  6E47               	movwf	(___fldiv@b+3)^0,c
 10057  002768  EF67  F012         	goto	l3411
 10058  00276C                     l759:
 10059  00276C  0012               	return		;funcret
 10060  00276E                     __end_of___fldiv:
 10061                           	callstack 0
 10062                           
 10063 ;; *************** function ___fladd *****************
 10064 ;; Defined at:
 10065 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  b               4   18[COMRAM] unsigned char 
 10068 ;;  a               4   22[COMRAM] unsigned char 
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;  grs             1   33[COMRAM] unsigned char 
 10071 ;;  bexp            1   32[COMRAM] unsigned char 
 10072 ;;  aexp            1   31[COMRAM] unsigned char 
 10073 ;;  signs           1   30[COMRAM] unsigned char 
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  4   18[COMRAM] unsigned char 
 10076 ;; Registers used:
 10077 ;;		wreg, status,2, status,0
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10083 ;;      Params:         8       0       0       0       0       0       0       0       0
 10084 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10085 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10086 ;;      Totals:        16       0       0       0       0       0       0       0       0
 10087 ;;Total ram usage:       16 bytes
 10088 ;; Hardware stack levels used: 1
 10089 ;; This function calls:
 10090 ;;		Nothing
 10091 ;; This function is called by:
 10092 ;;		_main
 10093 ;;		_PWM1_Init
 10094 ;;		___flsub
 10095 ;;		_efgtoa
 10096 ;;		_PWM2_Init
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           	psect	text42
 10101  001AEA                     __ptext42:
 10102                           	callstack 0
 10103  001AEA                     ___fladd:
 10104                           	callstack 25
 10105  001AEA  5016               	movf	(___fladd@b+3)^0,w,c
 10106  001AEC  0B80               	andlw	128
 10107  001AEE  6E1F               	movwf	___fladd@signs^0,c
 10108  001AF0  5016               	movf	(___fladd@b+3)^0,w,c
 10109  001AF2  2416               	addwf	(___fladd@b+3)^0,w,c
 10110  001AF4  6E21               	movwf	___fladd@bexp^0,c
 10111  001AF6  AE15               	btfss	(___fladd@b+2)^0,7,c
 10112  001AF8  EF80  F00D         	goto	u2801
 10113  001AFC  EF82  F00D         	goto	u2800
 10114  001B00                     u2801:
 10115  001B00  EF83  F00D         	goto	l3063
 10116  001B04                     u2800:
 10117  001B04  8021               	bsf	___fladd@bexp^0,0,c
 10118  001B06                     l3063:
 10119  001B06  5021               	movf	___fladd@bexp^0,w,c
 10120  001B08  B4D8               	btfsc	status,2,c
 10121  001B0A  EF89  F00D         	goto	u2811
 10122  001B0E  EF8B  F00D         	goto	u2810
 10123  001B12                     u2811:
 10124  001B12  EFA0  F00D         	goto	l3073
 10125  001B16                     u2810:
 10126  001B16  2821               	incf	___fladd@bexp^0,w,c
 10127  001B18  A4D8               	btfss	status,2,c
 10128  001B1A  EF91  F00D         	goto	u2821
 10129  001B1E  EF93  F00D         	goto	u2820
 10130  001B22                     u2821:
 10131  001B22  EF9B  F00D         	goto	l3069
 10132  001B26                     u2820:
 10133  001B26  0E00               	movlw	0
 10134  001B28  6E13               	movwf	___fladd@b^0,c
 10135  001B2A  0E00               	movlw	0
 10136  001B2C  6E14               	movwf	(___fladd@b+1)^0,c
 10137  001B2E  0E00               	movlw	0
 10138  001B30  6E15               	movwf	(___fladd@b+2)^0,c
 10139  001B32  0E00               	movlw	0
 10140  001B34  6E16               	movwf	(___fladd@b+3)^0,c
 10141  001B36                     l3069:
 10142  001B36  8E15               	bsf	(___fladd@b+2)^0,7,c
 10143  001B38  0E00               	movlw	0
 10144  001B3A  6E16               	movwf	(___fladd@b+3)^0,c
 10145  001B3C  EFA8  F00D         	goto	l3075
 10146  001B40                     l3073:
 10147  001B40  0E00               	movlw	0
 10148  001B42  6E13               	movwf	___fladd@b^0,c
 10149  001B44  0E00               	movlw	0
 10150  001B46  6E14               	movwf	(___fladd@b+1)^0,c
 10151  001B48  0E00               	movlw	0
 10152  001B4A  6E15               	movwf	(___fladd@b+2)^0,c
 10153  001B4C  0E00               	movlw	0
 10154  001B4E  6E16               	movwf	(___fladd@b+3)^0,c
 10155  001B50                     l3075:
 10156  001B50  501A               	movf	(___fladd@a+3)^0,w,c
 10157  001B52  0B80               	andlw	128
 10158  001B54  6E20               	movwf	___fladd@aexp^0,c
 10159  001B56  501F               	movf	___fladd@signs^0,w,c
 10160  001B58  1820               	xorwf	___fladd@aexp^0,w,c
 10161  001B5A  B4D8               	btfsc	status,2,c
 10162  001B5C  EFB2  F00D         	goto	u2831
 10163  001B60  EFB4  F00D         	goto	u2830
 10164  001B64                     u2831:
 10165  001B64  EFB5  F00D         	goto	l3081
 10166  001B68                     u2830:
 10167  001B68  8C1F               	bsf	___fladd@signs^0,6,c
 10168  001B6A                     l3081:
 10169  001B6A  501A               	movf	(___fladd@a+3)^0,w,c
 10170  001B6C  241A               	addwf	(___fladd@a+3)^0,w,c
 10171  001B6E  6E20               	movwf	___fladd@aexp^0,c
 10172  001B70  AE19               	btfss	(___fladd@a+2)^0,7,c
 10173  001B72  EFBD  F00D         	goto	u2841
 10174  001B76  EFBF  F00D         	goto	u2840
 10175  001B7A                     u2841:
 10176  001B7A  EFC0  F00D         	goto	l3087
 10177  001B7E                     u2840:
 10178  001B7E  8020               	bsf	___fladd@aexp^0,0,c
 10179  001B80                     l3087:
 10180  001B80  5020               	movf	___fladd@aexp^0,w,c
 10181  001B82  B4D8               	btfsc	status,2,c
 10182  001B84  EFC6  F00D         	goto	u2851
 10183  001B88  EFC8  F00D         	goto	u2850
 10184  001B8C                     u2851:
 10185  001B8C  EFDD  F00D         	goto	l3097
 10186  001B90                     u2850:
 10187  001B90  2820               	incf	___fladd@aexp^0,w,c
 10188  001B92  A4D8               	btfss	status,2,c
 10189  001B94  EFCE  F00D         	goto	u2861
 10190  001B98  EFD0  F00D         	goto	u2860
 10191  001B9C                     u2861:
 10192  001B9C  EFD8  F00D         	goto	l3093
 10193  001BA0                     u2860:
 10194  001BA0  0E00               	movlw	0
 10195  001BA2  6E17               	movwf	___fladd@a^0,c
 10196  001BA4  0E00               	movlw	0
 10197  001BA6  6E18               	movwf	(___fladd@a+1)^0,c
 10198  001BA8  0E00               	movlw	0
 10199  001BAA  6E19               	movwf	(___fladd@a+2)^0,c
 10200  001BAC  0E00               	movlw	0
 10201  001BAE  6E1A               	movwf	(___fladd@a+3)^0,c
 10202  001BB0                     l3093:
 10203  001BB0  8E19               	bsf	(___fladd@a+2)^0,7,c
 10204  001BB2  0E00               	movlw	0
 10205  001BB4  6E1A               	movwf	(___fladd@a+3)^0,c
 10206  001BB6  EFE5  F00D         	goto	l3099
 10207  001BBA                     l3097:
 10208  001BBA  0E00               	movlw	0
 10209  001BBC  6E17               	movwf	___fladd@a^0,c
 10210  001BBE  0E00               	movlw	0
 10211  001BC0  6E18               	movwf	(___fladd@a+1)^0,c
 10212  001BC2  0E00               	movlw	0
 10213  001BC4  6E19               	movwf	(___fladd@a+2)^0,c
 10214  001BC6  0E00               	movlw	0
 10215  001BC8  6E1A               	movwf	(___fladd@a+3)^0,c
 10216  001BCA                     l3099:
 10217  001BCA  5021               	movf	___fladd@bexp^0,w,c
 10218  001BCC  5C20               	subwf	___fladd@aexp^0,w,c
 10219  001BCE  B0D8               	btfsc	status,0,c
 10220  001BD0  EFEC  F00D         	goto	u2871
 10221  001BD4  EFEE  F00D         	goto	u2870
 10222  001BD8                     u2871:
 10223  001BD8  EF15  F00E         	goto	l3135
 10224  001BDC                     u2870:
 10225  001BDC  AC1F               	btfss	___fladd@signs^0,6,c
 10226  001BDE  EFF3  F00D         	goto	u2881
 10227  001BE2  EFF5  F00D         	goto	u2880
 10228  001BE6                     u2881:
 10229  001BE6  EFF7  F00D         	goto	l3105
 10230  001BEA                     u2880:
 10231  001BEA  0E80               	movlw	128
 10232  001BEC  1A1F               	xorwf	___fladd@signs^0,f,c
 10233  001BEE                     l3105:
 10234  001BEE  C021  F022         	movff	___fladd@bexp,___fladd@grs
 10235  001BF2  C020  F021         	movff	___fladd@aexp,___fladd@bexp
 10236  001BF6  C022  F020         	movff	___fladd@grs,___fladd@aexp
 10237  001BFA  C013  F022         	movff	___fladd@b,___fladd@grs
 10238  001BFE  C017  F013         	movff	___fladd@a,___fladd@b
 10239  001C02  C022  F017         	movff	___fladd@grs,___fladd@a
 10240  001C06  C014  F022         	movff	___fladd@b+1,___fladd@grs
 10241  001C0A  C018  F014         	movff	___fladd@a+1,___fladd@b+1
 10242  001C0E  C022  F018         	movff	___fladd@grs,___fladd@a+1
 10243  001C12  C015  F022         	movff	___fladd@b+2,___fladd@grs
 10244  001C16  C019  F015         	movff	___fladd@a+2,___fladd@b+2
 10245  001C1A  C022  F019         	movff	___fladd@grs,___fladd@a+2
 10246  001C1E  C016  F022         	movff	___fladd@b+3,___fladd@grs
 10247  001C22  C01A  F016         	movff	___fladd@a+3,___fladd@b+3
 10248  001C26  C022  F01A         	movff	___fladd@grs,___fladd@a+3
 10249  001C2A                     l3135:
 10250  001C2A  0E00               	movlw	0
 10251  001C2C  6E22               	movwf	___fladd@grs^0,c
 10252  001C2E  5021               	movf	___fladd@bexp^0,w,c
 10253  001C30  C020  F01B         	movff	___fladd@aexp,??___fladd
 10254  001C34  6A1C               	clrf	(??___fladd+1)^0,c
 10255  001C36  5E1B               	subwf	??___fladd^0,f,c
 10256  001C38  0E00               	movlw	0
 10257  001C3A  5A1C               	subwfb	(??___fladd+1)^0,f,c
 10258  001C3C  BE1C               	btfsc	(??___fladd+1)^0,7,c
 10259  001C3E  EF2A  F00E         	goto	u2891
 10260  001C42  501C               	movf	(??___fladd+1)^0,w,c
 10261  001C44  E109               	bnz	u2890
 10262  001C46  0E1A               	movlw	26
 10263  001C48  5C1B               	subwf	??___fladd^0,w,c
 10264  001C4A  A0D8               	btfss	status,0,c
 10265  001C4C  EF2A  F00E         	goto	u2891
 10266  001C50  EF2C  F00E         	goto	u2890
 10267  001C54                     u2891:
 10268  001C54  EF63  F00E         	goto	l706
 10269  001C58                     u2890:
 10270  001C58  5013               	movf	___fladd@b^0,w,c
 10271  001C5A  1014               	iorwf	(___fladd@b+1)^0,w,c
 10272  001C5C  1015               	iorwf	(___fladd@b+2)^0,w,c
 10273  001C5E  1016               	iorwf	(___fladd@b+3)^0,w,c
 10274  001C60  A4D8               	btfss	status,2,c
 10275  001C62  EF35  F00E         	goto	u2901
 10276  001C66  EF38  F00E         	goto	u2900
 10277  001C6A                     u2901:
 10278  001C6A  0E01               	movlw	1
 10279  001C6C  EF39  F00E         	goto	u2910
 10280  001C70                     u2900:
 10281  001C70  0E00               	movlw	0
 10282  001C72                     u2910:
 10283  001C72  6E22               	movwf	___fladd@grs^0,c
 10284  001C74  0E00               	movlw	0
 10285  001C76  6E13               	movwf	___fladd@b^0,c
 10286  001C78  0E00               	movlw	0
 10287  001C7A  6E14               	movwf	(___fladd@b+1)^0,c
 10288  001C7C  0E00               	movlw	0
 10289  001C7E  6E15               	movwf	(___fladd@b+2)^0,c
 10290  001C80  0E00               	movlw	0
 10291  001C82  6E16               	movwf	(___fladd@b+3)^0,c
 10292  001C84  C020  F021         	movff	___fladd@aexp,___fladd@bexp
 10293  001C88  EF6C  F00E         	goto	l705
 10294  001C8C                     l707:
 10295  001C8C  A022               	btfss	___fladd@grs^0,0,c
 10296  001C8E  EF4B  F00E         	goto	u2921
 10297  001C92  EF4D  F00E         	goto	u2920
 10298  001C96                     u2921:
 10299  001C96  EF53  F00E         	goto	l3147
 10300  001C9A                     u2920:
 10301  001C9A  90D8               	bcf	status,0,c
 10302  001C9C  3022               	rrcf	___fladd@grs^0,w,c
 10303  001C9E  0901               	iorlw	1
 10304  001CA0  6E22               	movwf	___fladd@grs^0,c
 10305  001CA2  EF55  F00E         	goto	l3149
 10306  001CA6                     l3147:
 10307  001CA6  90D8               	bcf	status,0,c
 10308  001CA8  3222               	rrcf	___fladd@grs^0,f,c
 10309  001CAA                     l3149:
 10310  001CAA  A013               	btfss	___fladd@b^0,0,c
 10311  001CAC  EF5A  F00E         	goto	u2931
 10312  001CB0  EF5C  F00E         	goto	u2930
 10313  001CB4                     u2931:
 10314  001CB4  EF5D  F00E         	goto	l3153
 10315  001CB8                     u2930:
 10316  001CB8  8E22               	bsf	___fladd@grs^0,7,c
 10317  001CBA                     l3153:
 10318  001CBA  3416               	rlcf	(___fladd@b+3)^0,w,c
 10319  001CBC  3216               	rrcf	(___fladd@b+3)^0,f,c
 10320  001CBE  3215               	rrcf	(___fladd@b+2)^0,f,c
 10321  001CC0  3214               	rrcf	(___fladd@b+1)^0,f,c
 10322  001CC2  3213               	rrcf	___fladd@b^0,f,c
 10323  001CC4  2A21               	incf	___fladd@bexp^0,f,c
 10324  001CC6                     l706:
 10325  001CC6  5020               	movf	___fladd@aexp^0,w,c
 10326  001CC8  5C21               	subwf	___fladd@bexp^0,w,c
 10327  001CCA  A0D8               	btfss	status,0,c
 10328  001CCC  EF6A  F00E         	goto	u2941
 10329  001CD0  EF6C  F00E         	goto	u2940
 10330  001CD4                     u2941:
 10331  001CD4  EF46  F00E         	goto	l707
 10332  001CD8                     u2940:
 10333  001CD8                     l705:
 10334  001CD8  BC1F               	btfsc	___fladd@signs^0,6,c
 10335  001CDA  EF71  F00E         	goto	u2951
 10336  001CDE  EF73  F00E         	goto	u2950
 10337  001CE2                     u2951:
 10338  001CE2  EFB3  F00E         	goto	l3181
 10339  001CE6                     u2950:
 10340  001CE6  5021               	movf	___fladd@bexp^0,w,c
 10341  001CE8  A4D8               	btfss	status,2,c
 10342  001CEA  EF79  F00E         	goto	u2961
 10343  001CEE  EF7B  F00E         	goto	u2960
 10344  001CF2                     u2961:
 10345  001CF2  EF85  F00E         	goto	l3163
 10346  001CF6                     u2960:
 10347  001CF6  0E00               	movlw	0
 10348  001CF8  6E13               	movwf	?___fladd^0,c
 10349  001CFA  0E00               	movlw	0
 10350  001CFC  6E14               	movwf	(?___fladd+1)^0,c
 10351  001CFE  0E00               	movlw	0
 10352  001D00  6E15               	movwf	(?___fladd+2)^0,c
 10353  001D02  0E00               	movlw	0
 10354  001D04  6E16               	movwf	(?___fladd+3)^0,c
 10355  001D06  EFD4  F00F         	goto	l714
 10356  001D0A                     l3163:
 10357  001D0A  5017               	movf	___fladd@a^0,w,c
 10358  001D0C  2613               	addwf	___fladd@b^0,f,c
 10359  001D0E  5018               	movf	(___fladd@a+1)^0,w,c
 10360  001D10  2214               	addwfc	(___fladd@b+1)^0,f,c
 10361  001D12  5019               	movf	(___fladd@a+2)^0,w,c
 10362  001D14  2215               	addwfc	(___fladd@b+2)^0,f,c
 10363  001D16  501A               	movf	(___fladd@a+3)^0,w,c
 10364  001D18  2216               	addwfc	(___fladd@b+3)^0,f,c
 10365  001D1A  A016               	btfss	(___fladd@b+3)^0,0,c
 10366  001D1C  EF92  F00E         	goto	u2971
 10367  001D20  EF94  F00E         	goto	u2970
 10368  001D24                     u2971:
 10369  001D24  EF40  F00F         	goto	l3217
 10370  001D28                     u2970:
 10371  001D28  A022               	btfss	___fladd@grs^0,0,c
 10372  001D2A  EF99  F00E         	goto	u2981
 10373  001D2E  EF9B  F00E         	goto	u2980
 10374  001D32                     u2981:
 10375  001D32  EFA1  F00E         	goto	l3171
 10376  001D36                     u2980:
 10377  001D36  90D8               	bcf	status,0,c
 10378  001D38  3022               	rrcf	___fladd@grs^0,w,c
 10379  001D3A  0901               	iorlw	1
 10380  001D3C  6E22               	movwf	___fladd@grs^0,c
 10381  001D3E  EFA3  F00E         	goto	l3173
 10382  001D42                     l3171:
 10383  001D42  90D8               	bcf	status,0,c
 10384  001D44  3222               	rrcf	___fladd@grs^0,f,c
 10385  001D46                     l3173:
 10386  001D46  A013               	btfss	___fladd@b^0,0,c
 10387  001D48  EFA8  F00E         	goto	u2991
 10388  001D4C  EFAA  F00E         	goto	u2990
 10389  001D50                     u2991:
 10390  001D50  EFAB  F00E         	goto	l3177
 10391  001D54                     u2990:
 10392  001D54  8E22               	bsf	___fladd@grs^0,7,c
 10393  001D56                     l3177:
 10394  001D56  3416               	rlcf	(___fladd@b+3)^0,w,c
 10395  001D58  3216               	rrcf	(___fladd@b+3)^0,f,c
 10396  001D5A  3215               	rrcf	(___fladd@b+2)^0,f,c
 10397  001D5C  3214               	rrcf	(___fladd@b+1)^0,f,c
 10398  001D5E  3213               	rrcf	___fladd@b^0,f,c
 10399  001D60  2A21               	incf	___fladd@bexp^0,f,c
 10400  001D62  EF40  F00F         	goto	l3217
 10401  001D66                     l3181:
 10402  001D66  5017               	movf	___fladd@a^0,w,c
 10403  001D68  5C13               	subwf	___fladd@b^0,w,c
 10404  001D6A  5018               	movf	(___fladd@a+1)^0,w,c
 10405  001D6C  5814               	subwfb	(___fladd@b+1)^0,w,c
 10406  001D6E  5019               	movf	(___fladd@a+2)^0,w,c
 10407  001D70  5815               	subwfb	(___fladd@b+2)^0,w,c
 10408  001D72  5016               	movf	(___fladd@b+3)^0,w,c
 10409  001D74  0A80               	xorlw	128
 10410  001D76  6E1B               	movwf	??___fladd^0,c
 10411  001D78  501A               	movf	(___fladd@a+3)^0,w,c
 10412  001D7A  0A80               	xorlw	128
 10413  001D7C  581B               	subwfb	??___fladd^0,w,c
 10414  001D7E  B0D8               	btfsc	status,0,c
 10415  001D80  EFC4  F00E         	goto	u3001
 10416  001D84  EFC6  F00E         	goto	u3000
 10417  001D88                     u3001:
 10418  001D88  EFF1  F00E         	goto	l3191
 10419  001D8C                     u3000:
 10420  001D8C  5013               	movf	___fladd@b^0,w,c
 10421  001D8E  5C17               	subwf	___fladd@a^0,w,c
 10422  001D90  6E1B               	movwf	??___fladd^0,c
 10423  001D92  5014               	movf	(___fladd@b+1)^0,w,c
 10424  001D94  5818               	subwfb	(___fladd@a+1)^0,w,c
 10425  001D96  6E1C               	movwf	(??___fladd+1)^0,c
 10426  001D98  5015               	movf	(___fladd@b+2)^0,w,c
 10427  001D9A  5819               	subwfb	(___fladd@a+2)^0,w,c
 10428  001D9C  6E1D               	movwf	(??___fladd+2)^0,c
 10429  001D9E  5016               	movf	(___fladd@b+3)^0,w,c
 10430  001DA0  581A               	subwfb	(___fladd@a+3)^0,w,c
 10431  001DA2  6E1E               	movwf	(??___fladd+3)^0,c
 10432  001DA4  0EFF               	movlw	255
 10433  001DA6  241B               	addwf	??___fladd^0,w,c
 10434  001DA8  6E13               	movwf	___fladd@b^0,c
 10435  001DAA  0EFF               	movlw	255
 10436  001DAC  201C               	addwfc	(??___fladd+1)^0,w,c
 10437  001DAE  6E14               	movwf	(___fladd@b+1)^0,c
 10438  001DB0  0EFF               	movlw	255
 10439  001DB2  201D               	addwfc	(??___fladd+2)^0,w,c
 10440  001DB4  6E15               	movwf	(___fladd@b+2)^0,c
 10441  001DB6  0EFF               	movlw	255
 10442  001DB8  201E               	addwfc	(??___fladd+3)^0,w,c
 10443  001DBA  6E16               	movwf	(___fladd@b+3)^0,c
 10444  001DBC  0E80               	movlw	128
 10445  001DBE  1A1F               	xorwf	___fladd@signs^0,f,c
 10446  001DC0  6C22               	negf	___fladd@grs^0,c
 10447  001DC2  5022               	movf	___fladd@grs^0,w,c
 10448  001DC4  A4D8               	btfss	status,2,c
 10449  001DC6  EFE7  F00E         	goto	u3011
 10450  001DCA  EFE9  F00E         	goto	u3010
 10451  001DCE                     u3011:
 10452  001DCE  EFF9  F00E         	goto	l722
 10453  001DD2                     u3010:
 10454  001DD2  0E01               	movlw	1
 10455  001DD4  2613               	addwf	___fladd@b^0,f,c
 10456  001DD6  0E00               	movlw	0
 10457  001DD8  2214               	addwfc	(___fladd@b+1)^0,f,c
 10458  001DDA  2215               	addwfc	(___fladd@b+2)^0,f,c
 10459  001DDC  2216               	addwfc	(___fladd@b+3)^0,f,c
 10460  001DDE  EFF9  F00E         	goto	l722
 10461  001DE2                     l3191:
 10462  001DE2  5017               	movf	___fladd@a^0,w,c
 10463  001DE4  5E13               	subwf	___fladd@b^0,f,c
 10464  001DE6  5018               	movf	(___fladd@a+1)^0,w,c
 10465  001DE8  5A14               	subwfb	(___fladd@b+1)^0,f,c
 10466  001DEA  5019               	movf	(___fladd@a+2)^0,w,c
 10467  001DEC  5A15               	subwfb	(___fladd@b+2)^0,f,c
 10468  001DEE  501A               	movf	(___fladd@a+3)^0,w,c
 10469  001DF0  5A16               	subwfb	(___fladd@b+3)^0,f,c
 10470  001DF2                     l722:
 10471  001DF2  5013               	movf	___fladd@b^0,w,c
 10472  001DF4  1014               	iorwf	(___fladd@b+1)^0,w,c
 10473  001DF6  1015               	iorwf	(___fladd@b+2)^0,w,c
 10474  001DF8  1016               	iorwf	(___fladd@b+3)^0,w,c
 10475  001DFA  A4D8               	btfss	status,2,c
 10476  001DFC  EF02  F00F         	goto	u3021
 10477  001E00  EF04  F00F         	goto	u3020
 10478  001E04                     u3021:
 10479  001E04  EF39  F00F         	goto	l3215
 10480  001E08                     u3020:
 10481  001E08  5022               	movf	___fladd@grs^0,w,c
 10482  001E0A  A4D8               	btfss	status,2,c
 10483  001E0C  EF0A  F00F         	goto	u3031
 10484  001E10  EF0C  F00F         	goto	u3030
 10485  001E14                     u3031:
 10486  001E14  EF39  F00F         	goto	l3215
 10487  001E18                     u3030:
 10488  001E18  0E00               	movlw	0
 10489  001E1A  6E13               	movwf	?___fladd^0,c
 10490  001E1C  0E00               	movlw	0
 10491  001E1E  6E14               	movwf	(?___fladd+1)^0,c
 10492  001E20  0E00               	movlw	0
 10493  001E22  6E15               	movwf	(?___fladd+2)^0,c
 10494  001E24  0E00               	movlw	0
 10495  001E26  6E16               	movwf	(?___fladd+3)^0,c
 10496  001E28  EFD4  F00F         	goto	l714
 10497  001E2C                     l3199:
 10498  001E2C  90D8               	bcf	status,0,c
 10499  001E2E  3613               	rlcf	___fladd@b^0,f,c
 10500  001E30  3614               	rlcf	(___fladd@b+1)^0,f,c
 10501  001E32  3615               	rlcf	(___fladd@b+2)^0,f,c
 10502  001E34  3616               	rlcf	(___fladd@b+3)^0,f,c
 10503  001E36  AE22               	btfss	___fladd@grs^0,7,c
 10504  001E38  EF20  F00F         	goto	u3041
 10505  001E3C  EF22  F00F         	goto	u3040
 10506  001E40                     u3041:
 10507  001E40  EF23  F00F         	goto	l3205
 10508  001E44                     u3040:
 10509  001E44  8013               	bsf	___fladd@b^0,0,c
 10510  001E46                     l3205:
 10511  001E46  A022               	btfss	___fladd@grs^0,0,c
 10512  001E48  EF28  F00F         	goto	u3051
 10513  001E4C  EF2A  F00F         	goto	u3050
 10514  001E50                     u3051:
 10515  001E50  EF2E  F00F         	goto	l3209
 10516  001E54                     u3050:
 10517  001E54  80D8               	bsf	status,0,c
 10518  001E56  3622               	rlcf	___fladd@grs^0,f,c
 10519  001E58  EF30  F00F         	goto	l3211
 10520  001E5C                     l3209:
 10521  001E5C  90D8               	bcf	status,0,c
 10522  001E5E  3622               	rlcf	___fladd@grs^0,f,c
 10523  001E60                     l3211:
 10524  001E60  5021               	movf	___fladd@bexp^0,w,c
 10525  001E62  B4D8               	btfsc	status,2,c
 10526  001E64  EF36  F00F         	goto	u3061
 10527  001E68  EF38  F00F         	goto	u3060
 10528  001E6C                     u3061:
 10529  001E6C  EF39  F00F         	goto	l3215
 10530  001E70                     u3060:
 10531  001E70  0621               	decf	___fladd@bexp^0,f,c
 10532  001E72                     l3215:
 10533  001E72  AE15               	btfss	(___fladd@b+2)^0,7,c
 10534  001E74  EF3E  F00F         	goto	u3071
 10535  001E78  EF40  F00F         	goto	u3070
 10536  001E7C                     u3071:
 10537  001E7C  EF16  F00F         	goto	l3199
 10538  001E80                     u3070:
 10539  001E80                     l3217:
 10540  001E80  0E00               	movlw	0
 10541  001E82  6E20               	movwf	___fladd@aexp^0,c
 10542  001E84  AE22               	btfss	___fladd@grs^0,7,c
 10543  001E86  EF47  F00F         	goto	u3081
 10544  001E8A  EF49  F00F         	goto	u3080
 10545  001E8E                     u3081:
 10546  001E8E  EF61  F00F         	goto	l731
 10547  001E92                     u3080:
 10548  001E92  C022  F01B         	movff	___fladd@grs,??___fladd
 10549  001E96  0E7F               	movlw	127
 10550  001E98  161B               	andwf	??___fladd^0,f,c
 10551  001E9A  B4D8               	btfsc	status,2,c
 10552  001E9C  EF52  F00F         	goto	u3091
 10553  001EA0  EF54  F00F         	goto	u3090
 10554  001EA4                     u3091:
 10555  001EA4  EF58  F00F         	goto	l732
 10556  001EA8                     u3090:
 10557  001EA8                     l3223:
 10558  001EA8  0E01               	movlw	1
 10559  001EAA  6E20               	movwf	___fladd@aexp^0,c
 10560  001EAC  EF61  F00F         	goto	l731
 10561  001EB0                     l732:
 10562  001EB0  A013               	btfss	___fladd@b^0,0,c
 10563  001EB2  EF5D  F00F         	goto	u3101
 10564  001EB6  EF5F  F00F         	goto	u3100
 10565  001EBA                     u3101:
 10566  001EBA  EF61  F00F         	goto	l731
 10567  001EBE                     u3100:
 10568  001EBE  EF54  F00F         	goto	l3223
 10569  001EC2                     l731:
 10570  001EC2  5020               	movf	___fladd@aexp^0,w,c
 10571  001EC4  B4D8               	btfsc	status,2,c
 10572  001EC6  EF67  F00F         	goto	u3111
 10573  001ECA  EF69  F00F         	goto	u3110
 10574  001ECE                     u3111:
 10575  001ECE  EF94  F00F         	goto	l3235
 10576  001ED2                     u3110:
 10577  001ED2  0E01               	movlw	1
 10578  001ED4  2613               	addwf	___fladd@b^0,f,c
 10579  001ED6  0E00               	movlw	0
 10580  001ED8  2214               	addwfc	(___fladd@b+1)^0,f,c
 10581  001EDA  2215               	addwfc	(___fladd@b+2)^0,f,c
 10582  001EDC  2216               	addwfc	(___fladd@b+3)^0,f,c
 10583  001EDE  A016               	btfss	(___fladd@b+3)^0,0,c
 10584  001EE0  EF74  F00F         	goto	u3121
 10585  001EE4  EF76  F00F         	goto	u3120
 10586  001EE8                     u3121:
 10587  001EE8  EF94  F00F         	goto	l3235
 10588  001EEC                     u3120:
 10589  001EEC  C013  F01B         	movff	___fladd@b,??___fladd
 10590  001EF0  C014  F01C         	movff	___fladd@b+1,??___fladd+1
 10591  001EF4  C015  F01D         	movff	___fladd@b+2,??___fladd+2
 10592  001EF8  C016  F01E         	movff	___fladd@b+3,??___fladd+3
 10593  001EFC  341E               	rlcf	(??___fladd+3)^0,w,c
 10594  001EFE  321E               	rrcf	(??___fladd+3)^0,f,c
 10595  001F00  321D               	rrcf	(??___fladd+2)^0,f,c
 10596  001F02  321C               	rrcf	(??___fladd+1)^0,f,c
 10597  001F04  321B               	rrcf	??___fladd^0,f,c
 10598  001F06  C01B  F013         	movff	??___fladd,___fladd@b
 10599  001F0A  C01C  F014         	movff	??___fladd+1,___fladd@b+1
 10600  001F0E  C01D  F015         	movff	??___fladd+2,___fladd@b+2
 10601  001F12  C01E  F016         	movff	??___fladd+3,___fladd@b+3
 10602  001F16  2821               	incf	___fladd@bexp^0,w,c
 10603  001F18  B4D8               	btfsc	status,2,c
 10604  001F1A  EF91  F00F         	goto	u3131
 10605  001F1E  EF93  F00F         	goto	u3130
 10606  001F22                     u3131:
 10607  001F22  EF94  F00F         	goto	l3235
 10608  001F26                     u3130:
 10609  001F26  2A21               	incf	___fladd@bexp^0,f,c
 10610  001F28                     l3235:
 10611  001F28  2821               	incf	___fladd@bexp^0,w,c
 10612  001F2A  B4D8               	btfsc	status,2,c
 10613  001F2C  EF9A  F00F         	goto	u3141
 10614  001F30  EF9C  F00F         	goto	u3140
 10615  001F34                     u3141:
 10616  001F34  EFA4  F00F         	goto	l3239
 10617  001F38                     u3140:
 10618  001F38  5021               	movf	___fladd@bexp^0,w,c
 10619  001F3A  A4D8               	btfss	status,2,c
 10620  001F3C  EFA2  F00F         	goto	u3151
 10621  001F40  EFA4  F00F         	goto	u3150
 10622  001F44                     u3151:
 10623  001F44  EFB6  F00F         	goto	l3243
 10624  001F48                     u3150:
 10625  001F48                     l3239:
 10626  001F48  0E00               	movlw	0
 10627  001F4A  6E13               	movwf	___fladd@b^0,c
 10628  001F4C  0E00               	movlw	0
 10629  001F4E  6E14               	movwf	(___fladd@b+1)^0,c
 10630  001F50  0E00               	movlw	0
 10631  001F52  6E15               	movwf	(___fladd@b+2)^0,c
 10632  001F54  0E00               	movlw	0
 10633  001F56  6E16               	movwf	(___fladd@b+3)^0,c
 10634  001F58  5021               	movf	___fladd@bexp^0,w,c
 10635  001F5A  A4D8               	btfss	status,2,c
 10636  001F5C  EFB2  F00F         	goto	u3161
 10637  001F60  EFB4  F00F         	goto	u3160
 10638  001F64                     u3161:
 10639  001F64  EFB6  F00F         	goto	l3243
 10640  001F68                     u3160:
 10641  001F68  0E00               	movlw	0
 10642  001F6A  6E1F               	movwf	___fladd@signs^0,c
 10643  001F6C                     l3243:
 10644  001F6C  A021               	btfss	___fladd@bexp^0,0,c
 10645  001F6E  EFBB  F00F         	goto	u3171
 10646  001F72  EFBD  F00F         	goto	u3170
 10647  001F76                     u3171:
 10648  001F76  EFC0  F00F         	goto	l3247
 10649  001F7A                     u3170:
 10650  001F7A  8E15               	bsf	(___fladd@b+2)^0,7,c
 10651  001F7C  EFC1  F00F         	goto	l3249
 10652  001F80                     l3247:
 10653  001F80  9E15               	bcf	(___fladd@b+2)^0,7,c
 10654  001F82                     l3249:
 10655  001F82  90D8               	bcf	status,0,c
 10656  001F84  3021               	rrcf	___fladd@bexp^0,w,c
 10657  001F86  6E16               	movwf	(___fladd@b+3)^0,c
 10658  001F88  AE1F               	btfss	___fladd@signs^0,7,c
 10659  001F8A  EFC9  F00F         	goto	u3181
 10660  001F8E  EFCB  F00F         	goto	u3180
 10661  001F92                     u3181:
 10662  001F92  EFCC  F00F         	goto	l3255
 10663  001F96                     u3180:
 10664  001F96  8E16               	bsf	(___fladd@b+3)^0,7,c
 10665  001F98                     l3255:
 10666  001F98  C013  F013         	movff	___fladd@b,?___fladd
 10667  001F9C  C014  F014         	movff	___fladd@b+1,?___fladd+1
 10668  001FA0  C015  F015         	movff	___fladd@b+2,?___fladd+2
 10669  001FA4  C016  F016         	movff	___fladd@b+3,?___fladd+3
 10670  001FA8                     l714:
 10671  001FA8  0012               	return		;funcret
 10672  001FAA                     __end_of___fladd:
 10673                           	callstack 0
 10674                           
 10675 ;; *************** function _Motor_Start *****************
 10676 ;; Defined at:
 10677 ;;		line 91 in file "main.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;		None
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;		None
 10682 ;; Return value:  Size  Location     Type
 10683 ;;                  1    wreg      void 
 10684 ;; Registers used:
 10685 ;;		None
 10686 ;; Tracked objects:
 10687 ;;		On entry : 0/0
 10688 ;;		On exit  : 0/0
 10689 ;;		Unchanged: 0/0
 10690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10691 ;;      Params:         0       0       0       0       0       0       0       0       0
 10692 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10693 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10694 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10695 ;;Total ram usage:        0 bytes
 10696 ;; Hardware stack levels used: 1
 10697 ;; This function calls:
 10698 ;;		Nothing
 10699 ;; This function is called by:
 10700 ;;		_main
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           	psect	text43
 10705  004620                     __ptext43:
 10706                           	callstack 0
 10707  004620                     _Motor_Start:
 10708                           	callstack 30
 10709  004620                     
 10710                           ;main.c: 92:     PORTDbits.RD0 = 1;
 10711  004620  8083               	bsf	131,0,c	;volatile
 10712                           
 10713                           ;main.c: 93:     PORTDbits.RD1 = 0;
 10714  004622  9283               	bcf	131,1,c	;volatile
 10715  004624  0012               	return		;funcret
 10716  004626                     __end_of_Motor_Start:
 10717                           	callstack 0
 10718                           
 10719                           	psect	rparam
 10720  0000                     
 10721                           	psect	idloc
 10722                           
 10723                           ;Config register IDLOC0 @ 0x200000
 10724                           ;	unspecified, using default values
 10725  200000                     	org	2097152
 10726  200000  FF                 	db	255
 10727                           
 10728                           ;Config register IDLOC1 @ 0x200001
 10729                           ;	unspecified, using default values
 10730  200001                     	org	2097153
 10731  200001  FF                 	db	255
 10732                           
 10733                           ;Config register IDLOC2 @ 0x200002
 10734                           ;	unspecified, using default values
 10735  200002                     	org	2097154
 10736  200002  FF                 	db	255
 10737                           
 10738                           ;Config register IDLOC3 @ 0x200003
 10739                           ;	unspecified, using default values
 10740  200003                     	org	2097155
 10741  200003  FF                 	db	255
 10742                           
 10743                           ;Config register IDLOC4 @ 0x200004
 10744                           ;	unspecified, using default values
 10745  200004                     	org	2097156
 10746  200004  FF                 	db	255
 10747                           
 10748                           ;Config register IDLOC5 @ 0x200005
 10749                           ;	unspecified, using default values
 10750  200005                     	org	2097157
 10751  200005  FF                 	db	255
 10752                           
 10753                           ;Config register IDLOC6 @ 0x200006
 10754                           ;	unspecified, using default values
 10755  200006                     	org	2097158
 10756  200006  FF                 	db	255
 10757                           
 10758                           ;Config register IDLOC7 @ 0x200007
 10759                           ;	unspecified, using default values
 10760  200007                     	org	2097159
 10761  200007  FF                 	db	255
 10762                           
 10763                           	psect	config
 10764                           
 10765                           ;Config register CONFIG1L @ 0x300000
 10766                           ;	PLL Prescaler Selection bits
 10767                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 10768                           ;	System Clock Postscaler Selection bits
 10769                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10770                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10771                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 10772  300000                     	org	3145728
 10773  300000  00                 	db	0
 10774                           
 10775                           ;Config register CONFIG1H @ 0x300001
 10776                           ;	Oscillator Selection bits
 10777                           ;	FOSC = HS, HS oscillator (HS)
 10778                           ;	Fail-Safe Clock Monitor Enable bit
 10779                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10780                           ;	Internal/External Oscillator Switchover bit
 10781                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10782  300001                     	org	3145729
 10783  300001  0C                 	db	12
 10784                           
 10785                           ;Config register CONFIG2L @ 0x300002
 10786                           ;	Power-up Timer Enable bit
 10787                           ;	PWRT = OFF, PWRT disabled
 10788                           ;	Brown-out Reset Enable bits
 10789                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10790                           ;	Brown-out Reset Voltage bits
 10791                           ;	BORV = 3, Minimum setting 2.05V
 10792                           ;	USB Voltage Regulator Enable bit
 10793                           ;	VREGEN = OFF, USB voltage regulator disabled
 10794  300002                     	org	3145730
 10795  300002  1F                 	db	31
 10796                           
 10797                           ;Config register CONFIG2H @ 0x300003
 10798                           ;	Watchdog Timer Enable bit
 10799                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10800                           ;	Watchdog Timer Postscale Select bits
 10801                           ;	WDTPS = 32768, 1:32768
 10802  300003                     	org	3145731
 10803  300003  1E                 	db	30
 10804                           
 10805                           ; Padding undefined space
 10806  300004                     	org	3145732
 10807  300004  FF                 	db	255
 10808                           
 10809                           ;Config register CONFIG3H @ 0x300005
 10810                           ;	CCP2 MUX bit
 10811                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10812                           ;	PORTB A/D Enable bit
 10813                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10814                           ;	Low-Power Timer 1 Oscillator Enable bit
 10815                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10816                           ;	MCLR Pin Enable bit
 10817                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10818  300005                     	org	3145733
 10819  300005  81                 	db	129
 10820                           
 10821                           ;Config register CONFIG4L @ 0x300006
 10822                           ;	Stack Full/Underflow Reset Enable bit
 10823                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10824                           ;	Single-Supply ICSP Enable bit
 10825                           ;	LVP = OFF, Single-Supply ICSP disabled
 10826                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10827                           ;	ICPRT = OFF, ICPORT disabled
 10828                           ;	Extended Instruction Set Enable bit
 10829                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10830                           ;	Background Debugger Enable bit
 10831                           ;	DEBUG = 0x1, unprogrammed default
 10832  300006                     	org	3145734
 10833  300006  81                 	db	129
 10834                           
 10835                           ; Padding undefined space
 10836  300007                     	org	3145735
 10837  300007  FF                 	db	255
 10838                           
 10839                           ;Config register CONFIG5L @ 0x300008
 10840                           ;	Code Protection bit
 10841                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10842                           ;	Code Protection bit
 10843                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10844                           ;	Code Protection bit
 10845                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10846                           ;	Code Protection bit
 10847                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10848  300008                     	org	3145736
 10849  300008  0F                 	db	15
 10850                           
 10851                           ;Config register CONFIG5H @ 0x300009
 10852                           ;	Boot Block Code Protection bit
 10853                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10854                           ;	Data EEPROM Code Protection bit
 10855                           ;	CPD = OFF, Data EEPROM is not code-protected
 10856  300009                     	org	3145737
 10857  300009  C0                 	db	192
 10858                           
 10859                           ;Config register CONFIG6L @ 0x30000A
 10860                           ;	Write Protection bit
 10861                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10862                           ;	Write Protection bit
 10863                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10864                           ;	Write Protection bit
 10865                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10866                           ;	Write Protection bit
 10867                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10868  30000A                     	org	3145738
 10869  30000A  0F                 	db	15
 10870                           
 10871                           ;Config register CONFIG6H @ 0x30000B
 10872                           ;	Configuration Register Write Protection bit
 10873                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10874                           ;	Boot Block Write Protection bit
 10875                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10876                           ;	Data EEPROM Write Protection bit
 10877                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10878  30000B                     	org	3145739
 10879  30000B  E0                 	db	224
 10880                           
 10881                           ;Config register CONFIG7L @ 0x30000C
 10882                           ;	Table Read Protection bit
 10883                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10884                           ;	Table Read Protection bit
 10885                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10886                           ;	Table Read Protection bit
 10887                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10888                           ;	Table Read Protection bit
 10889                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10890  30000C                     	org	3145740
 10891  30000C  0F                 	db	15
 10892                           
 10893                           ;Config register CONFIG7H @ 0x30000D
 10894                           ;	Boot Block Table Read Protection bit
 10895                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10896  30000D                     	org	3145741
 10897  30000D  40                 	db	64
 10898                           tosu	equ	0xFFF
 10899                           tosh	equ	0xFFE
 10900                           tosl	equ	0xFFD
 10901                           stkptr	equ	0xFFC
 10902                           pclatu	equ	0xFFB
 10903                           pclath	equ	0xFFA
 10904                           pcl	equ	0xFF9
 10905                           tblptru	equ	0xFF8
 10906                           tblptrh	equ	0xFF7
 10907                           tblptrl	equ	0xFF6
 10908                           tablat	equ	0xFF5
 10909                           prodh	equ	0xFF4
 10910                           prodl	equ	0xFF3
 10911                           indf0	equ	0xFEF
 10912                           postinc0	equ	0xFEE
 10913                           postdec0	equ	0xFED
 10914                           preinc0	equ	0xFEC
 10915                           plusw0	equ	0xFEB
 10916                           fsr0h	equ	0xFEA
 10917                           fsr0l	equ	0xFE9
 10918                           wreg	equ	0xFE8
 10919                           indf1	equ	0xFE7
 10920                           postinc1	equ	0xFE6
 10921                           postdec1	equ	0xFE5
 10922                           preinc1	equ	0xFE4
 10923                           plusw1	equ	0xFE3
 10924                           fsr1h	equ	0xFE2
 10925                           fsr1l	equ	0xFE1
 10926                           bsr	equ	0xFE0
 10927                           indf2	equ	0xFDF
 10928                           postinc2	equ	0xFDE
 10929                           postdec2	equ	0xFDD
 10930                           preinc2	equ	0xFDC
 10931                           plusw2	equ	0xFDB
 10932                           fsr2h	equ	0xFDA
 10933                           fsr2l	equ	0xFD9
 10934                           status	equ	0xFD8

Data Sizes:
    Strings     52
    Constant    0
    Data        68
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160    155     159
    BANK1           256     20     204
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1035$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1035$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK1[50]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _efgtoa->___fltol
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _UART_Write_Text->_UART_Write_Chr
    _UART_Init->___lldiv
    _PWM1_Set_Duty->___fltol
    _PWM1_Init->___fltol
    ___xxtofl->_getDistance
    ___fltol->___fldiv
    ___flmul->___flsub
    ___fldiv->___flmul
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _PWM1_Set_Duty->___fltol
    _PWM1_Init->___fltol

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   76953
                                            153 BANK0      2     2      0
                                              0 BANK1     20    20      0
                        _Motor_Start
                          _PWM1_Init
                      _PWM1_Set_Duty
                         _PWM1_Start
                          _UART_Init
                    _UART_Write_Text
                            ___fladd
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                        _getDistance
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             37    15     22   39180
                                            118 BANK0     35    13     22
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   38819
                                            110 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   38424
                                             82 BANK0     28    22      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   27464
                                             20 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                              0 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3953
                                             34 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             67 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1324
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _getDistance                                          4     2      2      24
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2     143
                                              1 COMRAM     2     0      2
                     _UART_Write_Chr
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Chr                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16     8      8     504
                                             13 COMRAM    16     8      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        5     5      0    9461
                                              8 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            9     7      2   12781
                                              8 BANK0      9     7      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1082
                                              4 COMRAM    14    10      4
                        _getDistance (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1065
                                             92 COMRAM     2     2      0
                                              0 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4480
                                             42 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2767
                                             67 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3174
                                             18 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Motor_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Motor_Start
   _PWM1_Init
     ___fladd
       ___xxtofl (ARG)
         _getDistance (ARG)
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _PWM1_Set_Duty
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
   _PWM1_Start
   _UART_Init
     ___lldiv
   _UART_Write_Text
     _UART_Write_Chr
   ___fladd
   ___flge
     ___flmul (ARG)
   ___flmul
   ___flsub
   ___fltol
   ___xxtofl
   _getDistance
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      CC       7       79.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9B      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITBIGSFRhh         34      0       0      20        0.0%
BITBIGSFRlll        21      0       0      29        0.0%
BITBIGSFRllhh        F      0       0      27        0.0%
BITBIGSFRlhhllh      C      0       0      25        0.0%
BITBIGSFRlhhhll      A      0       0      24        0.0%
BITBIGSFRlhhlll      8      0       0      26        0.0%
BITBIGSFRhl          8      0       0      21        0.0%
BITBIGSFRlhhhh       2      0       0      22        0.0%
BITBIGSFRlhhhlh      1      0       0      23        0.0%
BITBIGSFRllhl        1      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C9      30        0.0%
DATA                 0      0     1C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 02 08:31:17 2023

       PWM1_Set_Duty@val 0069             ___fldiv@aexp 005C             ___fldiv@bexp 005B  
           ___fldiv@sign 0054        PWM1_Set_Duty@duty 0068                       l70 4340  
                     l64 430C                       l73 4624                       l69 4338  
                     _Kd 017C                       _Ki 0178                       _Kp 0180  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003                      l110 3B6C  
                    l111 3B74                      l112 3BA8                      l211 418C  
                    l115 460C                      l204 417C                      l108 3B62  
                    l124 45E2                      l118 461E                      l151 2DBE  
                    l304 3660                      l154 2FAA                      l171 4628  
                    l165 3F8E                      l421 403E                      l408 3ED2  
                    l177 4608                      l442 397C                      l291 34FC  
                    l451 4544                      l436 40E8                      l447 39C2  
                    l800 22DC                      l705 1CD8                      l801 22CA  
                    l722 1DF2                      l714 1FA8                      l706 1CC6  
                    l474 38BE                      l731 1EC2                      l707 1C8C  
                    l732 1EB0                      l901 3DD2                      l903 3E0E  
                    l911 2B30                      l808 2394                      l832 3218  
                    l761 25CC                      l770 2612                      l835 3374  
                    l747 43CC                      l772 268A                      l764 2590  
                    l773 2678                      l909 2B28                      l846 330C  
                    l759 276C                      l791 206E                      l839 32B0  
                    l855 42A4                      l929 2D6A                      l961 0BEE  
                    l945 143E                      l795 23D2                      l798 2264  
                    l898 3D90                      l989 102E                      _PR2 000FCB  
                    _RX9 007D5E                      _TX9 007D66                      _abs 4496  
                    _pad 3D4A                      _ref 0174             ___awmod@sign 0006  
                    wreg 000FE8             ___flmul@aexp 003C             ___flmul@bexp 003D  
           ___flmul@sign 0037             ___flmul@temp 0042             ___flmul@prod 003E  
           ___fltol@exp1 005E                     l1030 1534                     l1106 37AE  
                   l1115 31C0                     ?_abs 0013                     l1125 457C  
                   l1133 42F6                     l1109 37B6                     l1053 1AE8  
                   l1118 3104                     l1081 44CC                     l1065 41EE  
                   l1154 3D48                     l1162 4454                     l1066 41F6  
                   l1171 4252                     l1139 450C                     l1059 1A2E  
                   l1084 44D4                     l1076 3AC0                     l3101 1BDC  
                   l1165 462A                     l1181 3C7E                     l3111 1BFA  
                   l3103 1BEA                     l1191 437E                     l3201 1E36  
                   l3121 1C0E                     l3113 1BFE                     l3105 1BEE  
                   l1177 45B2                     l4001 08DA                     l1194 4386  
                   l3211 1E60                     l3203 1E44                     l3131 1C22  
                   l3123 1C12                     l3115 1C02                     l3107 1BF2  
                   l3051 3CCC                     l3043 3C80                     l4003 08E2  
                   l3221 1E92                     l3213 1E70                     l3205 1E46  
                   l3141 1C74                     l3133 1C26                     l3125 1C16  
                   l3117 1C06                     l3109 1BF6                     l3061 1B04  
                   l3301 33DE                     l3053 3D02                     l3045 3C92  
                   l4101 0CB6                     l4021 0978                     l4005 08E6  
                   l3231 1EEC                     l3223 1EA8                     l3207 1E54  
                   l3215 1E72                     l3151 1CB8                     l3143 1C84  
                   l3127 1C1A                     l3119 1C0A                     l3135 1C2A  
                   l3071 1B38                     l3063 1B06                     l3311 3432  
                   l3303 33EA                     l3047 3CA4                     l4111 0D04  
                   l4103 0CBA                     l4023 0982                     l4015 0916  
                   l4007 08EA                     l3241 1F68                     l3233 1F26  
                   l3209 1E5C                     l3217 1E80                     l3153 1CBA  
                   l3145 1C9A                     l3137 1C2E                     l3129 1C1E  
                   l3081 1B6A                     l3065 1B16                     l3073 1B40  
                   l3057 1AEA                     l3401 2488                     l3321 34A6  
                   l3313 3444                     l3305 3408                     l3049 3CAE  
                   l4201 118C                     l4121 0D9C                     l4105 0CCC  
                   l4113 0D0C                     l4033 09D0                     l4017 0944  
                   l4009 08F0                     l3251 1F88                     l3243 1F6C  
                   l3227 1ED2                     l3235 1F28                     l3219 1E84  
                   l3171 1D42                     l3163 1D0A                     l3155 1CC4  
                   l3147 1CA6                     l3139 1C58                     l3091 1BA0  
                   l3083 1B70                     l3075 1B50                     l3067 1B26  
                   l3059 1AF6                     l3411 24CE                     l3403 2490  
                   l3315 3472                     l3307 3410                     l3323 34AC  
                   l3331 34FE                     l4211 1242                     l4203 11E4  
                   l4131 0E80                     l4123 0DF4                     l4115 0D14  
                   l4107 0CDA                     l4051 0A86                     l4035 09FE  
                   l4019 0960                     l4027 09AA                     l3253 1F96  
                   l3245 1F7A                     l3237 1F38                     l3229 1EDE  
                   l3173 1D46                     l3165 1D1A                     l3157 1CE6  
                   l3181 1D66                     l3149 1CAA                     l3093 1BB0  
                   l3085 1B7E                     l3077 1B56                     l3069 1B36  
                   l3421 24F6                     l3413 24D2                     l3405 24A0  
                   l4301 3714                     l3325 34BC                     l3317 3492  
                   l3309 3424                     l3341 3542                     l3333 3502  
                   l3261 441E                     l4221 1292                     l4213 125E  
                   l4205 1218                     l4141 0F1A                     l4133 0EB2  
                   l4125 0E28                     l4117 0D24                     l4109 0CF2  
                   l4061 0B56                     l4053 0ABA                     l4037 0A1A  
                   l4045 0A36                     l3255 1F98                     l3247 1F80  
                   l3239 1F48                     l3183 1D8C                     l3191 1DE2  
                   l3175 1D54                     l3167 1D28                     l3159 1CF6  
                   l3095 1BB2                     l3087 1B80                     l3079 1B68  
                   l3431 2544                     l3407 24B6                     l3511 1FC6  
                   l4311 3792                     l3327 34DC                     l3319 3494  
                   l3351 35AA                     l3343 3562                     l3335 3510  
                   l3263 4430                     l3271 458E                     l4231 12D4  
                   l4223 12A2                     l4215 1270                     l4207 1220  
                   l4151 0FF2                     l4143 0F4E                     l4135 0EC8  
                   l4119 0D38                     l4127 0E2E                     l4071 0BC0  
                   l4055 0AC0                     l4063 0B88                     l4047 0A50  
                   l3249 1F82                     l3193 1E08                     l3185 1DC0  
                   l3177 1D56                     l3169 1D36                     l3089 1B90  
                   l3097 1BBA                     l3441 258E                     l3433 2554  
                   l3425 250A                     l3409 24C6                     l3417 24E6  
                   l3601 22C2                     l3521 200C                     l3513 1FD6  
                   l3505 1FAA                     l3281 45E4                     l3361 3620  
                   l3353 35D8                     l3345 3580                     l3337 3530  
                   l3265 4434                     l3273 45A6                     l4241 1304  
                   l4233 12E2                     l4225 12B4                     l4217 127E  
                   l4161 104A                     l4209 1224                     l4145 0FA4  
                   l4153 0FF6                     l4137 0EFA                     l4129 0E4C  
                   l4073 0BC8                     l4065 0B98                     l4057 0B1A  
                   l4401 168E                     l3195 1E18                     l3187 1DC2  
                   l3179 1D60                     l3099 1BCA                     l3451 25DC  
                   l3443 259A                     l3435 255C                     l3427 2524  
                   l3419 24F6                     l3371 23EE                     l3611 2330  
                   l3531 2038                     l3523 2012                     l3515 1FE6  
                   l3507 1FB6                     l3283 4600                     l4307 374A  
                   l3291 3388                     l3363 3640                     l3355 35F8  
                   l3347 3588                     l3339 3534                     l3259 4412  
                   l3267 457E                     l4251 1366                     l4243 132A  
                   l4235 12EA                     l4227 12BC                     l4219 128E  
                   l4171 10F0                     l4163 10AE                     l4155 1006  
                   l4147 0FAA                     l4139 0F0A                     l4091 0C78  
                   l4083 0C0C                     l4075 0BE2                     l4067 0B9C  
                   l4059 0B4E                     l4331 3C34                     l4323 3BE0  
                   l4403 16C8                     l4411 1736                     l3189 1DD2  
                   l3453 25F2                     l3461 2622                     l3445 25B8  
                   l3437 256C                     l3429 2534                     l3381 2422  
                   l3373 23F0                     l3621 2398                     l3605 22EC  
                   l3613 2334                     l3541 208E                     l3533 2048  
                   l3525 2018                     l3517 1FF6                     l3509 1FC4  
                   l4501 4124                     l4309 3780                     l3293 33A8  
                   l3357 360A                     l3349 359C                     l3269 458A  
                   l3701 3FDE                     l3277 44D6                     l4261 13AC  
                   l4253 1380                     l4245 1346                     l4237 12F2  
                   l4229 12CC                     l4181 112C                     l4165 10BE  
                   l4173 10F8                     l4157 101A                     l4149 0FDE  
                   l4085 0C1E                     l4093 0C7C                     l4069 0BAE  
                   l4077 0BFA                     l4333 3C5C                     l4325 3BEE  
                   l4317 3BAA                     l4421 17DC                     l4413 1758  
                   l4405 16E8                     l4341 1472                     l3199 1E2C  
                   l3463 2630                     l3455 25F8                     l3447 25BA  
                   l3439 2580                     l3391 2454                     l3375 2400  
                   l3383 242A                     l3367 23D4                     l3631 23C2  
                   l3623 23A8                     l3615 234E                     l3607 22F8  
                   l3551 20CE                     l3535 2058                     l3527 2026  
                   l3519 1FFC                     l4511 416C                     l4503 4132  
                   l3295 33AC                     l3287 3376                     l3359 3610  
                   l3711 4018                     l3703 3FE6                     l4271 13F4  
                   l4263 13BC                     l4255 1386                     l4247 134E  
                   l4239 12FE                     l4191 1158                     l4183 1132  
                   l4175 110A                     l4167 10D0                     l4159 1026  
                   l4095 0C84                     l4087 0C3A                     l4327 3C06  
                   l4319 3BD4                     l4431 18A4                     l4423 1800  
                   l4415 1768                     l4351 14AA                     l4343 1484  
                   l3473 269A                     l3481 26E2                     l3465 2634  
                   l3457 2602                     l3449 25CA                     l3393 2456  
                   l3385 243A                     l3377 2410                     l3369 23E0  
                   l3625 23B6                     l3617 2362                     l3609 2306  
                   l3561 2118                     l3553 20DA                     l3545 20A2  
                   l3537 205E                     l3529 2028                     l3801 387E  
                   l4521 3228                     l4601 3F42                     l4513 4176  
                   l4505 413C                     l3297 33BA                     l3289 337A  
                   l3641 3E10                     l3705 3FF4                     l3713 401E  
                   l3721 4040                     l4273 1400                     l4265 13C2  
                   l4257 1398                     l4249 1354                     l4185 113E  
                   l4177 1118                     l4193 115E                     l4169 10E2  
                   l4097 0C96                     l4089 0C70                     l4329 3C22  
                   l4433 18B6                     l4425 1824                     l4417 179A  
                   l4409 16F6                     l4345 148A                     l4337 1440  
                   l3491 274C                     l3483 26FC                     l3475 26A6  
                   l3467 2642                     l3459 2610                     l3395 2466  
                   l3387 2440                     l3379 2420                     l3627 23B8  
                   l3619 237C                     l3571 216A                     l3563 2124  
                   l3555 20F2                     l3547 20AE                     l3539 207E  
                   l3803 388E                     l4531 3266                     l4523 323E  
                   l4515 31C4                     l4603 3F68                     l4507 415A  
                   l4611 3B24                     l4291 367A                     l3299 33DA  
                   l3811 3D4A                     l3651 3E3C                     l3643 3E14  
                   l3715 402E                     l3707 400A                     l3731 40E0  
                   l3723 406E                     l3635 4388                     l4275 1408  
                   l4259 13A4                     l4195 1170                     l4187 114E  
                   l4179 1128                     l4099 0CA8                     l4451 19CA  
                   l4435 18CC                     l4443 1936                     l4427 186C  
                   l4419 17AA                     l4371 14CE                     l4363 14BC  
                   l4355 14B0                     l4347 1496                     l4339 1464  
                   l3493 275A                     l3485 2712                     l3477 26B4  
                   l3469 2670                     l3397 2476                     l3389 2446  
                   l3629 23BE                     l3581 21E8                     l3573 217A  
                   l3565 2134                     l3557 20FE                     l3549 20B8  
                   l3805 389E                     l4541 32EE                     l4533 3298  
                   l4517 31D4                     l4605 4626                     l4509 416A  
                   l4621 3B5A                     l4613 3B28                     l3901 4546  
                   l4293 3696                     l4285 3662                     l3821 3D9C  
                   l3813 3D5A                     l3661 3E6A                     l3653 3E44  
                   l3645 3E22                     l3717 4036                     l3709 4012  
                   l3733 40E6                     l3725 407E                     l3741 38FE  
                   l3637 4398                     l4277 1418                     l4269 13C8  
                   l4197 1182                     l4189 1152                     l4461 1A66  
                   l4453 19FE                     l4445 1964                     l4437 18DA  
                   l4381 159E                     l4349 1498                     l4373 1522  
                   l4701 27C6                     ?_pad 0011                     l3495 2760  
                   l3487 272C                     l3479 26DE                     l3399 2486  
                   l3591 2262                     l3583 221E                     l3575 2196  
                   l3567 2140                     l3559 210A                     l3807 38AE  
                   l4551 3344                     l4543 32FC                     l4535 329A  
                   l4527 3252                     l4519 31E2                     l4623 3B5C  
                   l4615 3B2C                     l4607 3AC2                     l3911 42EC  
                   l4295 36D0                     l4287 3676                     l3823 3DB0  
                   l3815 3D6E                     l3671 3EA4                     l3663 3E72  
                   l3655 3E48                     l3647 3E2A                     l3727 40AC  
                   l3751 396A                     l3743 392C                     l4279 141E  
                   l4199 1186                     l4471 1AA4                     l4463 1A74  
                   l4439 190A                     l4391 15EE                     l4383 15AE  
                   l4375 1542                     l4367 14C2                     l4359 14B6  
                   l4711 28E6                     l4703 27CA                     l3497 2762  
                   l3489 2748                     l3593 2274                     l3585 222C  
                   l3577 21A2                     l3569 2150                     l4553 3354  
                   l4545 331A                     l4537 32A6                     l4529 325A  
                   l4625 3B66                     l4633 3B7E                     l4617 3B42  
                   l4609 3B20                     l4641 42F8                     l3913 42F0  
                   l3905 42A6                     l4297 36D8                     l3833 4496  
                   l3825 3DB4                     l3817 3D7C                     l3921 2AD0  
                   l3681 3ECA                     l3673 3EA6                     l3665 3E80  
                   l3657 3E50                     l3649 3E2E                     l3729 40BC  
                   l3753 39BA                     l3745 393C                     l3737 38C0  
                   l3761 4524                     l3841 3A22                     l4465 1A88  
                   l4449 198C                     l4393 162E                     l4385 15C0  
                   l4377 1544                     l4561 418E                     l4721 29CA  
                   l4713 293E                     l4705 2802                     l3595 2282  
                   l3587 224A                     l3579 21BE                     l4555 3362  
                   l4547 331C                     l4539 32E2                     l4571 2D70  
                   l4619 3B58                     l4491 461A                     l4651 4322  
                   l4643 4300                     l3907 42AA                     l4299 36E0  
                   l3835 44B0                     l3827 3DE2                     l3819 3D88  
                   l3931 2B38                     l3923 2AF0                     l3675 3EAC  
                   l3667 3E86                     l3659 3E62                     l3691 3FAA  
                   l3755 39C0                     l3747 394A                     l3739 38EE  
                   l3763 4534                     l3851 3A74                     l3843 3A4A  
                   l4459 1A42                     l4395 1652                     l4387 15E0  
                   l4379 1568                     l4475 1AB2                     l4563 4196  
                   l4731 2A70                     l4723 29DA                     l4715 2972  
                   l4707 2836                     l3597 2286                     l3589 2254  
                   l3781 3824                     l3773 37E4                     l4557 3364  
                   l4549 3320                     l4581 2DC0                     l4573 2D78  
                   l4493 40EA                     l4629 3B78                     l4653 432A  
                   l4645 4302                     l3909 42BE                     l3829 3DF6  
                   l3941 2B70                     l3933 2B4A                     l3925 2B00  
                   l3917 2A88                     l3669 3E9C                     l3677 3EB2  
                   l3693 3FAE                     l3685 3F90                     l3749 395C  
                   l3845 3A56                     l3837 39C4                     l3861 4208  
                   l4477 1AD6                     l4469 1A96                     l4397 165C  
                   l4565 41A4                     l4661 4276                     l4725 29F6  
                   l4717 29A4                     l4709 288E                     l4639 4620  
                   l3599 2294                     l3791 3854                     l3783 3832  
                   l3775 380E                     l3767 37B8                     l4591 2F5E  
                   l4583 2DD0                     l4575 2D80                     l4495 40FA  
                   l4671 45C6                     l4647 430A                     l3943 2B76  
                   l3951 2C68                     l3935 2B58                     l3927 2B02  
                   l3919 2AA8                     l3679 3EC2                     l3695 3FBC  
                   l3687 3F94                     l3759 450E                     l3855 3AB8  
                   l3839 39E4                     l3863 4342                     l4399 166A  
                   l4567 41D2                     l4663 4292                     l4655 4254  
                   l4727 2A54                     l4719 29BA                     l3793 385E  
                   l3777 3810                     l3769 37D0                     l4593 2F84  
                   l4585 2E16                     l4569 2D6C                     l4497 4110  
                   l4489 460C                     l4673 45CA                     l4649 431E  
                   l3953 2C82                     l3961 2CE4                     l3945 2BF8  
                   l3937 2B5E                     l3929 2B1C                     l3697 3FC4  
                   l3689 3FA2                     l3849 3A62                     l3881 3046  
                   l3873 2FAC                     l4657 4266                     l4729 2A60  
                   l4681 2776                     l3779 3820                     l4587 2EAE  
                   l4579 2D88                     l4499 4118                     l4667 45B4  
                   l3971 2D2A                     l3963 2CF6                     l3955 2CA0  
                   l3947 2BFE                     l3939 2B66                     l3699 3FD6  
                   l3891 3164                     l3875 2FCC                     l3859 41F8  
                   l3867 4342                     l4659 426E                     l4691 2792  
                   l4683 2778                     l4675 276E                     l3789 384A  
                   l4589 2EF4                     l4669 45B8                     l3973 2D32  
                   l3965 2D06                     l3957 2CBA                     l3949 2C04  
                   l3893 3178                     l3885 30B8                     l3877 3024  
                   l3869 4370                     l3981 0840                     l4853 14F4  
                   l4693 27A4                     l4685 277A                     l4677 2772  
                   l3799 3872                     l4599 3ED8                     l4855 36FE  
                   l3967 2D0C                     l3975 2D42                     l3959 2CD4  
                   l3895 31A0                     l3887 30F4                     l3879 3038  
                   l3991 0894                     l3983 0850                     l4695 27A8  
                   l4687 2788                     l4679 2774                     l4857 3B92  
                   l3969 2D1E                     l3897 31B0                     l3889 3128  
                   l3993 089C                     l3985 085E                     l4697 27AC  
                   l4689 278E                     l4859 2DA0                     l3995 08AE  
                   l3987 0866                     l3979 0836                     l4699 27B0  
                   l3997 08BC                     l3989 088A                     l3999 08CE  
                   STR_1 0801                     STR_2 0822                     STR_3 082A  
                   STR_6 0826                     STR_7 082E                     _BRGH 007D62  
                   u3000 1D8C                     u3001 1D88                     u3010 1DD2  
                   u3011 1DCE                     u3100 1EBE                     u3020 1E08  
                   u3101 1EBA                     u3021 1E04                     u3110 1ED2  
                   u3030 1E18                     u3111 1ECE                     u3031 1E14  
                   u3120 1EEC                     u3040 1E44                     u4000 3804  
                   u3200 45A6                     u3121 1EE8                     u3041 1E40  
                   u3201 45A2                     u3130 1F26                     u3050 1E54  
                   u4010 3832                     u3210 4506                     u3131 1F22  
                   u3051 1E50                     u4011 382E                     u3211 4500  
                   u3140 1F38                     u3060 1E70                     u4020 3846  
                   u3300 3510                     u4100 44B0                     u3220 4508  
                   u3141 1F34                     u3061 1E6C                     u4021 3842  
                   u4005 37FA                     u3301 350C                     u4101 44AC  
                   u3150 1F48                     u3070 1E80                     u4030 386E  
                   u3230 3388                     u3310 3542                     u4110 3A04  
                   u3151 1F44                     u3071 1E7C                     u4031 386A  
                   u3231 3384                     u3311 353E                     u3160 1F68  
                   u3080 1E92                     u3400 2466                     u4040 388E  
                   u5000 3780                     u3240 33BA                     u3320 3580  
                   u4120 3A22                     u4200 4370                     u3161 1F64  
                   u3081 1E8E                     u3401 2462                     u4041 388A  
                   u5001 377C                     u3241 33B6                     u3321 357C  
                   u4121 3A1E                     u4201 436C                     u3170 1F7A  
                   u3090 1EA8                     u3410 2476                     u4050 389E  
                   u5010 3792                     u3330 35AA                     u4130 3A4A  
                   u4210 2FF6                     u3171 1F76                     u3091 1EA4  
                   u3411 2472                     u4051 389A                     u5011 378E  
                   u3251 33E4                     u3331 35A6                     u4131 3A46  
                   u4115 39FA                     u3180 1F96                     u3500 2630  
                   u3420 24B6                     u3260 3408                     u3340 35D8  
                   u4060 3D5A                     u4140 3A74                     u4300 31A0  
                   u4220 3024                     u5020 3BD4                     u5100 1568  
                   u3181 1F92                     u3501 262C                     u3421 24B2  
                   u3261 3404                     u3341 35D4                     u4061 3D56  
                   u4141 3A70                     u4301 319C                     u4221 3020  
                   u5021 3BD0                     u5101 1564                     u3510 2642  
                   u3430 24F6                     u4310 4576                     u3270 3432  
                   u3350 3620                     u3190 4454                     u4070 3D7C  
                   u4230 3046                     u5030 3C06                     u5110 15AE  
                   u3511 263E                     u3431 24F2                     u4311 4570  
                   u3271 342E                     u3351 361C                     u3191 4450  
                   u4071 3D78                     u4231 3042                     u4215 2FEC  
                   u5031 3C02                     u5111 15AA                     u2800 1B04  
                   u3520 2670                     u3440 256C                     u3360 23EE  
                   u3600 1FD6                     u4320 4578                     u3280 3472  
                   u4080 3DD2                     u4400 2B4A                     u4160 3AAE  
                   u5040 3C22                     u5200 18B6                     u5120 162E  
                   u2801 1B00                     u3521 266C                     u3441 2568  
                   u3361 23EA                     u3601 1FD2                     u3281 346E  
                   u4081 3DCE                     u4401 2B46                     u4161 3AA8  
                   u5041 3C1E                     u5201 18B2                     u5121 162A  
                   u2810 1B16                     u3530 2686                     u3450 258E  
                   u3370 2400                     u3610 1FE6                     u4330 42BE  
                   u3290 34BC                     u4090 3DE2                     u4410 2B58  
                   u4170 3AB0                     u4250 30B4                     u5050 3C34  
                   u5210 1964                     u5130 1652                     u2811 1B12  
                   u3531 2682                     u3451 258A                     u3371 23FC  
                   u3611 1FE2                     u4331 42BA                     u3291 34B8  
                   u4091 3DDE                     u4411 2B54                     u4155 3A86  
                   u4251 30B0                     u5051 3C30                     u5211 1960  
                   u5131 164E                     u2900 1C70                     u2820 1B26  
                   u3540 269A                     u3460 25B8                     u3380 2410  
                   u3700 2294                     u3620 2026                     u5300 323E  
                   u4340 42EC                     u4420 2C82                     u4260 30D8  
                   u4180 4240                     u4500 085E                     u5060 3C5C  
                   u5220 19CA                     u5140 168E                     u2901 1C6A  
                   u2821 1B22                     u3541 2696                     u3461 25B4  
                   u3381 240C                     u3701 2290                     u3621 2022  
                   u5301 323A                     u4341 42E8                     u4421 2C7E  
                   u4245 305A                     u4501 085A                     u5061 3C58  
                   u5221 19C6                     u5141 168A                     u2910 1C72  
                   u2830 1B68                     u3550 26B4                     u3470 25DC  
                   u3390 2454                     u3710 22C2                     u3630 2038  
                   u5310 3294                     u4430 2CA0                     u4350 2AB8  
                   u4270 30F4                     u4246 3064                     u4190 4252  
                   u4510 08AE                     u5230 1A66                     u5150 1736  
                   u5070 1464                     u2831 1B64                     u3551 26B0  
                   u3471 25D8                     u3391 2450                     u3711 22BE  
                   u3631 2034                     u5311 3290                     u4431 2C9C  
                   u4351 2AB2                     u4271 30F0                     u4247 3074  
                   u4191 424E                     u4511 08AA                     u5231 1A62  
                   u5151 1732                     u5071 1460                     u2920 1C9A  
                   u2840 1B7E                     u3560 26FC                     u3480 25F2  
                   u3720 22D8                     u3640 2048                     u5320 32DE  
                   u5400 3B40                     u5240 461A                     u2760 3C92  
                   u4440 2CBA                     u4360 2ABA                     u3800 3E62  
                   u4280 3148                     u4600 0B88                     u4520 08BC  
                   u5160 1768                     u5080 1534                     u2921 1C96  
                   u2841 1B7A                     u3561 26F8                     u3481 25EE  
                   u3721 22D4                     u3641 2044                     u5321 32DA  
                   u5401 3B3A                     u5241 4616                     u2761 3C8E  
                   u4441 2CB6                     u3801 3E5E                     u4265 30CE  
                   u4601 0B84                     u4521 08B8                     u5161 1764  
                   u5081 1530                     u2930 1CB8                     u2850 1B90  
                   u3570 272C                     u3490 2610                     u3730 22EC  
                   u3650 207E                     u5330 32FC                     u5250 4110  
                   u2770 3CA4                     u4450 2CD4                     u4370 2AD0  
                   u3810 3E80                     u4290 3164                     u4610 0BAE  
                   u4530 08CE                     u5170 17AA                     u5090 1542  
                   u2931 1CB4                     u2851 1B8C                     u3571 2728  
                   u3491 260C                     u3731 22E8                     u3651 207A  
                   u5331 32F8                     u5251 410C                     u2771 3CA0  
                   u4451 2CD0                     u4371 2ACC                     u3811 3E7C  
                   u4291 3160                     u4187 4236                     u4611 0BAA  
                   u4531 08CA                     u5171 17A6                     u5091 153E  
                   u2940 1CD8                     u2860 1BA0                     u3580 275A  
                   u3740 2306                     u3660 208E                     u5340 330C  
                   u5260 4132                     u5420 3B56                     u2780 3CCC  
                   u4460 2CE4                     u4380 2B00                     u3820 3E9C  
                   u3900 406E                     u4700 0CB6                     u4620 0BC0  
                   u4540 0916                     u5180 1800                     u2941 1CD4  
                   u2861 1B9C                     u3581 2756                     u3741 2302  
                   u3661 208A                     u5341 3308                     u5261 412E  
                   u5421 3B50                     u2781 3CC8                     u4461 2CE0  
                   u4381 2AFC                     u3821 3E98                     u3901 406A  
                   u4285 313E                     u4701 0CB2                     u4621 0BBC  
                   u4541 0912                     u5181 17FC                     u2950 1CE6  
                   u2870 1BDC                     u3750 234E                     u3670 2208  
                   u3590 1FC4                     u5350 331A                     u5270 415A  
                   u2790 3D02                     u4470 2CF6                     u4390 2B1C  
                   u3830 3EC2                     u3910 40AC                     u4710 0CCC  
                   u4630 0BE2                     u4550 0944                     u5190 1824  
                   u2951 1CE2                     u2871 1BD8                     u3751 234A  
                   u3591 1FC0                     u5351 3316                     u5271 4156  
                   u5415 3B42                     u2791 3CFE                     u4471 2CF2  
                   u4391 2B18                     u3831 3EBE                     u3911 40A8  
                   u4711 0CC8                     u4631 0BDE                     u4551 0940  
                   u5191 1820                     u2960 1CF6                     u2880 1BEA  
                   u3760 237C                     u3680 2262                     u5360 3354  
                   u5280 31D4                     u5440 431A                     u4480 2D06  
                   u3840 3FA2                     u3920 40E0                     u4800 101A  
                   u4720 0CDA                     u4640 0C08                     u4560 09D0  
                   u2961 1CF2                     u2881 1BE6                     u3761 2378  
                   u3681 225E                     u5361 3350                     u5281 31D0  
                   u5441 4316                     u4481 2D02                     u3841 3F9E  
                   u3921 40DC                     u4801 1016                     u4721 0CD6  
                   u4641 0C04                     u4561 09CC                     u2970 1D28  
                   u2890 1C58                     u3770 23B6                     u3690 2282  
                   u5370 3362                     u5290 31E2                     u5450 4338  
                   u4490 2D1E                     u3850 3FBC                     u3930 38EE  
                   u4810 10BE                     u4730 0D04                     u4650 0C1E  
                   u4570 09FE                     u2971 1D24                     u2891 1C54  
                   u3771 23B2                     u3691 227E                     u3675 21FE  
                   u5371 335E                     u5291 31DE                     u5435 3B58  
                   u5451 4334                     u4491 2D1A                     u3851 3FB8  
                   u3931 38EA                     u4811 10BA                     u4731 0D00  
                   u4651 0C1A                     u4571 09FA                     u5507 2A68  
                   u2980 1D36                     u5460 45E2                     u3780 3E22  
                   u3860 3FD6                     u3940 392C                     u4900 1270  
                   u4820 10D0                     u4740 0E4C                     u4660 0C3A  
                   u4580 0A82                     u5380 41EE                     u2981 1D32  
                   u5461 45DE                     u5517 4304                     u3781 3E1E  
                   u3861 3FD2                     u3941 3928                     u4901 126C  
                   u4821 10CC                     u4741 0E48                     u4661 0C36  
                   u4581 0A7E                     u5381 41EA                     u2990 1D54  
                   u3790 3E3C                     u3870 3FF4                     u3950 394A  
                   u4910 127E                     u4830 10E2                     u4750 0EB2  
                   u4670 0C70                     u4590 0B16                     u2991 1D50  
                   u5527 4324                     u3791 3E38                     u3871 3FF0  
                   u3951 3946                     u4911 127A                     u4831 10DE  
                   u4751 0EAE                     u4671 0C6C                     u4591 0B12  
                   u5471 27BA                     u3880 400A                     u3960 396A  
                   u4920 12B4                     u4840 10F0                     u4760 0EFA  
                   u4680 0C96                     u5480 29A4                     u3881 4006  
                   u3961 3966                     u4921 12B0                     u4841 10EC  
                   u4761 0EF6                     u4681 0C92                     u5481 29A0  
                   u3890 402E                     u3970 39BA                     u4930 12E2  
                   u4850 110A                     u4770 0F0A                     u4690 0CA8  
                   u5490 29CA                     u5395 3AE4                     u3891 402A  
                   u3971 39B6                     u4931 12DE                     u4851 1106  
                   u4771 0F06                     u4691 0CA4                     u5491 29C6  
                   u3980 4524                     u4940 1366                     u4860 1118  
                   u4780 0FA4                     u3981 4520                     u4941 1362  
                   u4861 1114                     u4781 0FA0                     u3990 37D0  
                   u4950 1380                     u4870 1170                     u4790 0FF2  
                   u3991 37CC                     u4951 137C                     u4871 116C  
                   u4791 0FEE                     u4960 1398                     u4880 1242  
                   u4961 1394                     u4881 123E                     u4970 13F4  
                   u4890 125E                     u4971 13F0                     u4891 125A  
                   u4980 3696                     u4981 3692                     u4990 36CC  
                   u4991 36C8                     _SPEN 007D5F                     _TX9D 007D60  
                   _TXEN 007D65                     _SYNC 007D64                     abs@a 0013  
                   _dbuf 0124                     _atoi 3662                     _main 276E  
                   _dtoa 2A88                     _duty 0184                     _prec 00FB  
                   _nout 0120                     pad@i 0018                     pad@p 0015  
                   fsr0h 000FEA                     fsr1h 000FE2                     indf0 000FEF  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     pad@w 001A                     fsr2l 000FD9  
                   _suma 0114            ___fpclassifyf 39C4                     prodh 000FF4  
                   prodl 000FF3                     start 0000          ___fldiv@new_exp 0055  
           ___param_bank 000000  __end_of_UART_Write_Text 45E4                    ??_abs 0015  
                  ??_pad 0017            ___fltol@sign1 005D          __end_of___aodiv 34FE  
                  ?_atoi 0008          __end_of___fladd 1FAA                    ?_main 0001  
                  ?_dtoa 001C          __end_of___aomod 3662          __end_of___fldiv 276E  
        __end_of___awdiv 3ED4          __end_of___flneg 4546                    STR_10 0832  
                  STR_12 0832          __end_of___awmod 4040          __end_of___flmul 23D4  
        __end_of___flsub 43CE          __end_of___fltol 38C0          __end_of___lldiv 418E  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _RCREG 000FAE  
                  _RCSTA 000FAB             vfpfcnvrt@fmt 00B4                    _SPBRG 000FAF  
                  _TXREG 000FAD                    _TXSTA 000FAC              ?_PWM1_Start 0001  
                  _flags 00FD                    _error 0118                    _fputc 3C80  
                  _fputs 4412          __end_of_isdigit 457E                    atoi@n 0010  
                  pad@fp 0011                    atoi@s 0008                    _width 0122  
                  _putch 462A                    dtoa@d 001E                    dtoa@i 003E  
                  dtoa@n 0036                    dtoa@p 0030                    dtoa@s 0034  
                  dtoa@w 0032          __end_of_isspace 42F8          __end_of_isupper 450E  
                  tablat 000FF5                    plusw0 000FEB                    plusw2 000FDB  
                  status 000FD8          __end_of_sprintf 42A6           ?___fpclassifyf 0001  
        __end_of_tolower 4388          __end_of_strncmp 3C80          __initialization 4456  
           __end_of_atoi 37B8             __end_of_main 2A88             __end_of_dtoa 2D6C  
                 ??_atoi 000A                   ??_main 00F9                   ??_dtoa 0026  
          __activetblptr 000002                   _ADCON1 000FC1                   ?_fputc 0001  
                 ?_fputs 000A                   _CCPR1L 000FBE                   _CCPR2L 000FBB  
       ___awdiv@dividend 0001                   ?_putch 0001            vfpfcnvrt@done 00C4  
       __end_of___xxtofl 3376             vfprintf@cfmt 00D4        __end_of_UART_Init 3BAA  
                 ___flge 38C0                   ___fleq 4040        __end_of_PWM1_Init 2FAC  
          ??_Motor_Start 0001                ??___aodiv 0011                ??___fladd 001B  
              ??___aomod 0011                   ___wmul 45E4                ??___fldiv 004C  
              ??___awdiv 0005                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0033         ?_UART_Write_Text 0002                ??___flsub 002B  
              ??___fltol 0064                   _actual 0110                ??___lldiv 0009  
                 _efgtoa 0836                   _floorf 2FAC                   clear_0 447C  
       ___awdiv@quotient 0007          ___awmod@divisor 0003                   isa$std 000001  
        ___awmod@counter 0005                   pad@buf 0013                   dtoa@fp 001C  
                 _strcpy 41F8                   _strlen 457E                   fputc@c 0001  
                 fputs@c 000E                   fputs@i 000F                   fputs@s 000A  
              ??_isdigit 0003          ___fpclassifyf@e 0009          ___fpclassifyf@u 000B  
        ___fpclassifyf@x 0001             __mediumconst 0000                ??_isspace 0003  
                 tblptrh 000FF7                ??_isupper 0003                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 41F8  
              ??_sprintf 005F                ??_tolower 0009                ??_strncmp 0007  
             ___flge@ff1 0044               ___flge@ff2 0048          ??___fpclassifyf 0005  
           ___xxtofl@arg 000F             ___xxtofl@exp 000E             ___xxtofl@val 0005  
             ___fleq@ff1 0001               ___fleq@ff2 0005               __accesstop 0060  
__end_of__initialization 448C               ___flneg@f1 0001            ___rparam_used 000001  
             ___fltol@f1 0060           __pcstackCOMRAM 0001    __end_of_PWM1_Set_Duty 3F90  
           __pidataBANK1 43CE            __end_of_fputc 3D4A            __end_of_fputs 4456  
          __end_of_putch 462C      __end_of_Motor_Start 4626                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001               __pbssBANK0 00FB  
             __pbssBANK1 0100                  ?___flge 0044                  ?___fleq 0001  
                ?___wmul 0001                  ?_efgtoa 0074                  ?_floorf 0060  
                ?_strcpy 0001                  ?_strlen 0001                ?___xxtofl 0005  
           ??_PWM1_Start 0001                  __Hparam 0000                  __Lparam 0000  
                ___aodiv 3376                  ___fladd 1AEA                  ___aomod 34FE  
                ___fldiv 23D4              _Motor_Start 4620                  ___awdiv 3E10  
                ___flneg 450E                  ___awmod 3F90                  ___flmul 1FAA  
                ___flsub 4388                  ___fltol 37B8                  ___lldiv 40EA  
              ?_vfprintf 00CE       __end_of_PWM1_Start 462A             __psmallconst 0800  
                __pcinit 4456                  __ramtop 0800                  __ptext0 276E  
                __ptext1 4254                  __ptext2 418E                  __ptext3 1440  
                __ptext4 3BAA                  __ptext5 0836                  __ptext6 4342  
                __ptext7 44D6                  __ptext8 41F8                  __ptext9 2FAC  
              _T2CONbits 000FCA                  _isdigit 4546               ??___xxtofl 0009  
       ___awmod@dividend 0001                  _isspace 42A6           main@uartConfig 01C4  
         _PWM1_Init$1563 006C                  _isupper 44D6                  efgtoa@c 007A  
                efgtoa@d 0092                  efgtoa@e 00AA                  efgtoa@f 0076  
                efgtoa@g 00A6                  efgtoa@h 009C                  efgtoa@i 00A4  
                efgtoa@l 00A0                  efgtoa@m 008C                  efgtoa@n 00AC  
                efgtoa@p 0096                  efgtoa@t 0086                  efgtoa@u 00AE  
                efgtoa@w 0098                  _strUART 0186                  atoi@neg 000E  
                _sprintf 4254                  _tolower 4342                  _strncmp 3BAA  
   end_of_initialization 448C                  floorf@e 006E                  floorf@m 006A  
                floorf@u 0070                  floorf@x 0060           PWM1_Init@prees 0070  
                fputc@fp 0003            __Lmediumconst 0000                  fputs@fp 000C  
        ___lldiv@divisor 0005          ___lldiv@counter 000D        __end_of_vfpfcnvrt 1AEA  
             efgtoa@mode 009B               efgtoa@sign 0094                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE            ??_getDistance 0003           _UART_Write_Chr 460A  
             ??_vfprintf 005F                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001                _UART_Init 3AC2  
              _PWM1_Init 2D6C                _PORTBbits 000F81                _PORTDbits 000F83  
            ___fladd@grs 0022            ___xxtofl@sign 000D                _TRISBbits 000F93  
              _TRISCbits 000F94                _TRISDbits 000F95              ___fldiv@grs 0057  
            ___fldiv@rem 0050              ___flmul@grs 0038              _CCP1CONbits 000FBD  
            _CCP2CONbits 000FBA                _TXSTAbits 000FAC     UART_Write_Chr@letter 0001  
 __end_of_UART_Write_Chr 4620           __end_of___flge 39C4           __end_of___fleq 40EA  
            vfpfcnvrt@ap 00B6              vfpfcnvrt@ct 00CA              vfpfcnvrt@fp 00B2  
            vfpfcnvrt@ll 00BC           __end_of___wmul 460A               ?_UART_Init 000E  
         __end_of_efgtoa 1440               ?_PWM1_Init 0068           __end_of_floorf 31C2  
             floorf@F526 0100      __end_of_getDistance 4342           __end_of_strcpy 4254  
         __end_of_strlen 45B4      start_initialization 4456              __end_of_abs 44D6  
            __end_of_pad 3E10         getDistance@count 0003       UART_Init@spbrg_val 001A  
  __end_of___fpclassifyf 3AC2              vfprintf@fmt 00D0          ?_UART_Write_Chr 0001  
               ??___flge 004C                 ??___fleq 0009                 ??___wmul 0005  
               ??_efgtoa 007B              __pdataBANK1 0174                 ??_floorf 0064  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 0017  
              ___fladd@b 0013                ___fldiv@a 0048                ___fldiv@b 0044  
              ___flmul@a 002F                ___flmul@b 002B                ___flsub@a 0027  
              ___flsub@b 0023            __pcstackBANK0 0060            __pcstackBANK1 01B8  
       ___aodiv@dividend 0001              _efgtoa$1191 0082              _efgtoa$1192 0084  
            _efgtoa$1184 0080                _main$1560 01B8                _main$1561 01BC  
              _main$1562 01C0                _dtoa$1160 002E                 ?___aodiv 0001  
           ?_Motor_Start 0001                 ?___fladd 0013                 ?___aomod 0001  
               ?___fldiv 0044                 ?___awdiv 0001         ___aodiv@quotient 0013  
               ?___flneg 0001                 ?___awmod 0001                 ?___flmul 002B  
               ?___flsub 0023                 ?___fltol 0060                 ?___lldiv 0001  
              _reg10bits 0108              _getDistance 42F8              ??_UART_Init 0016  
            ??_PWM1_Init 006A                _distancia 011C          UART_Init@config 000E  
            __smallconst 0800                 ?_isdigit 0001                 ?_isspace 0001  
               ?_isupper 0001                _errorAnte 010C                 ?_sprintf 00D6  
               ?_tolower 0007                 ?_strncmp 0001        ??_UART_Write_Text 0004  
         ___wmul@product 0005            PWM1_Init@freq 0068                 _PIR1bits 000F9E  
          _PWM1_Set_Duty 3ED4                _vfpfcnvrt 1440        ___wmul@multiplier 0001  
           _isspace$1273 0007               vfpfcnvrt@c 00CD               vfpfcnvrt@f 00C6  
              copy_data0 446A                 __Hrparam 0000               vfprintf@ap 00D2  
               __Lrparam 0000               vfprintf@fp 00CE           ?_PWM1_Set_Duty 0001  
             ?_vfpfcnvrt 00B2          ___aodiv@divisor 0009          ___aodiv@counter 0011  
     ___fpclassifyf@F465 0104               sprintf@fmt 00D8                 ___xxtofl 31C2  
               __ptext10 39C4                 __ptext11 4388                 __ptext20 4412  
               __ptext12 450E                 __ptext21 3C80                 __ptext13 38C0  
               __ptext30 42F8                 __ptext22 462A                 __ptext14 4040  
               __ptext31 45B4                 __ptext23 4496                 __ptext15 3F90  
               __ptext40 1FAA                 __ptext32 460A                 __ptext24 34FE  
               __ptext16 3E10                 __ptext41 23D4                 __ptext33 3AC2  
               __ptext25 3376                 __ptext17 2A88                 __ptext42 1AEA  
               __ptext34 40EA                 __ptext26 3662                 __ptext18 3D4A  
               __ptext43 4620                 __ptext35 4626                 __ptext27 42A6  
               __ptext19 457E                 __ptext36 3ED4                 __ptext28 4546  
               __ptext37 2D6C                 __ptext29 45E4                 __ptext38 31C2  
               __ptext39 37B8               strcpy@dest 0001      UART_Write_Text@text 0002  
       ??_UART_Write_Chr 0001                 efgtoa@fp 0074                 efgtoa@ne 008A  
               efgtoa@pp 0088                 efgtoa@ou 008E                 isa$xinst 000000  
               _vfprintf 418E         ___aomod@dividend 0001                 isdigit@c 0001  
              sprintf@ap 00EC                 isspace@c 0001         ___lldiv@dividend 0001  
              strcpy@src 0003                 isupper@c 0001                strncmp@_l 0001  
              strncmp@_r 0003          ??_PWM1_Set_Duty 005F              efgtoa@nmode 009A  
           ?_getDistance 0001          ___aomod@divisor 0009              ??_vfpfcnvrt 00B8  
        ___aomod@counter 0011          _UART_Write_Text 45B4                 sprintf@f 00EE  
               tolower@c 0007                 sprintf@s 00D6         ___lldiv@quotient 0009  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
             _PWM1_Start 4626            ___fladd@signs 001F             ___aodiv@sign 0012  
           ___fladd@aexp 0020             ___fladd@bexp 0021             ___aomod@sign 0012  
