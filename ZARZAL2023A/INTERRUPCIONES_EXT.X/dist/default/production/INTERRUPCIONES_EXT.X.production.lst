

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Mar 24 10:35:24 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _PORTD	set	3971
    53  0000                     _TRISBbits	set	3987
    54  0000                     _INTCON3bits	set	4080
    55  0000                     _INTCONbits	set	4082
    56  0000                     _TRISD	set	3989
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  0000AC                     __pcinit:
    62                           	callstack 0
    63  0000AC                     start_initialization:
    64                           	callstack 0
    65  0000AC                     __initialization:
    66                           	callstack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (2 bytes)
    69  0000AC  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    70  0000AE  6A01               	clrf	__pbssCOMRAM& (0+255),c
    71  0000B0                     end_of_initialization:
    72                           	callstack 0
    73  0000B0                     __end_of__initialization:
    74                           	callstack 0
    75  0000B0  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    76  0000B2  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    77  0000B4  0100               	movlb	0
    78  0000B6  EF09  F000         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	bssCOMRAM
    81  000001                     __pbssCOMRAM:
    82                           	callstack 0
    83  000001                     _contador:
    84                           	callstack 0
    85  000001                     	ds	2
    86                           
    87                           	psect	cstackCOMRAM
    88  000003                     __pcstackCOMRAM:
    89                           	callstack 0
    90  000003                     ??_main:
    91                           
    92                           ; 1 bytes @ 0x0
    93  000003                     	ds	2
    94                           
    95 ;;
    96 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    97 ;;
    98 ;; *************** function _main *****************
    99 ;; Defined at:
   100 ;;		line 22 in file "main.c"
   101 ;; Parameters:    Size  Location     Type
   102 ;;		None
   103 ;; Auto vars:     Size  Location     Type
   104 ;;		None
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1    wreg      void 
   107 ;; Registers used:
   108 ;;		wreg, status,2, status,0
   109 ;; Tracked objects:
   110 ;;		On entry : 0/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   114 ;;      Params:         0       0       0       0       0       0       0       0       0
   115 ;;      Locals:         0       0       0       0       0       0       0       0       0
   116 ;;      Temps:          2       0       0       0       0       0       0       0       0
   117 ;;      Totals:         2       0       0       0       0       0       0       0       0
   118 ;;Total ram usage:        2 bytes
   119 ;; Hardware stack levels required when called: 1
   120 ;; This function calls:
   121 ;;		Nothing
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text0
   128  000012                     __ptext0:
   129                           	callstack 0
   130  000012                     _main:
   131                           	callstack 30
   132  000012                     
   133                           ;main.c: 24:     INTCONbits.GIE = 1;
   134  000012  8EF2               	bsf	242,7,c	;volatile
   135                           
   136                           ;main.c: 25:     INTCONbits.PEIE = 1;
   137  000014  8CF2               	bsf	242,6,c	;volatile
   138                           
   139                           ;main.c: 26:     INTCONbits.INT0IE = 1;
   140  000016  88F2               	bsf	242,4,c	;volatile
   141                           
   142                           ;main.c: 27:     INTCON3bits.INT1IE = 1;
   143  000018  86F0               	bsf	240,3,c	;volatile
   144                           
   145                           ;main.c: 30:     TRISBbits.TRISB0= 1;
   146  00001A  8093               	bsf	147,0,c	;volatile
   147  00001C                     
   148                           ;main.c: 33:     TRISD = 0xF0;
   149  00001C  0EF0               	movlw	240
   150  00001E  6E95               	movwf	149,c	;volatile
   151  000020                     l723:
   152                           
   153                           ;main.c: 36:         if(contador>15)
   154  000020  BE02               	btfsc	(_contador+1)^0,7,c
   155  000022  EF1C  F000         	goto	u31
   156  000026  5002               	movf	(_contador+1)^0,w,c
   157  000028  E109               	bnz	u30
   158  00002A  0E10               	movlw	16
   159  00002C  5C01               	subwf	_contador^0,w,c
   160  00002E  A0D8               	btfss	status,0,c
   161  000030  EF1C  F000         	goto	u31
   162  000034  EF1E  F000         	goto	u30
   163  000038                     u31:
   164  000038  EF22  F000         	goto	l727
   165  00003C                     u30:
   166  00003C                     
   167                           ;main.c: 37:             contador=0;
   168  00003C  0E00               	movlw	0
   169  00003E  6E02               	movwf	(_contador+1)^0,c
   170  000040  0E00               	movlw	0
   171  000042  6E01               	movwf	_contador^0,c
   172  000044                     l727:
   173                           
   174                           ;main.c: 38:         if(contador<0)
   175  000044  BE02               	btfsc	(_contador+1)^0,7,c
   176  000046  EF29  F000         	goto	u40
   177  00004A  EF27  F000         	goto	u41
   178  00004E                     u41:
   179  00004E  EF2D  F000         	goto	l731
   180  000052                     u40:
   181  000052                     
   182                           ;main.c: 39:             contador=15;
   183  000052  0E00               	movlw	0
   184  000054  6E02               	movwf	(_contador+1)^0,c
   185  000056  0E0F               	movlw	15
   186  000058  6E01               	movwf	_contador^0,c
   187  00005A                     l731:
   188                           
   189                           ;main.c: 40:         PORTD = contador;
   190  00005A  C001  FF83         	movff	_contador,3971	;volatile
   191  00005E                     
   192                           ;main.c: 41:         _delay((unsigned long)((100)*(20000000UL/4000.0)));
   193  00005E  0E03               	movlw	3
   194  000060  6E04               	movwf	(??_main+1)^0,c
   195  000062  0E8A               	movlw	138
   196  000064  6E03               	movwf	??_main^0,c
   197  000066  0E56               	movlw	86
   198  000068                     u57:
   199  000068  2EE8               	decfsz	wreg,f,c
   200  00006A  D7FE               	bra	u57
   201  00006C  2E03               	decfsz	??_main^0,f,c
   202  00006E  D7FC               	bra	u57
   203  000070  2E04               	decfsz	(??_main+1)^0,f,c
   204  000072  D7FA               	bra	u57
   205  000074  EF10  F000         	goto	l723
   206  000078  EF07  F000         	goto	start
   207  00007C                     __end_of_main:
   208                           	callstack 0
   209                           
   210 ;; *************** function _External *****************
   211 ;; Defined at:
   212 ;;		line 6 in file "main.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;		None
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      void 
   219 ;; Registers used:
   220 ;;		status,2, status,0
   221 ;; Tracked objects:
   222 ;;		On entry : 0/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   226 ;;      Params:         0       0       0       0       0       0       0       0       0
   227 ;;      Locals:         0       0       0       0       0       0       0       0       0
   228 ;;      Temps:          0       0       0       0       0       0       0       0       0
   229 ;;      Totals:         0       0       0       0       0       0       0       0       0
   230 ;;Total ram usage:        0 bytes
   231 ;; Hardware stack levels used: 1
   232 ;; This function calls:
   233 ;;		Nothing
   234 ;; This function is called by:
   235 ;;		Interrupt level 2
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           	psect	intcode
   240  000008                     __pintcode:
   241                           	callstack 0
   242  000008                     _External:
   243                           	callstack 30
   244                           
   245                           ;incstack = 0
   246  000008  8205               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   247  00000A  ED3E  F000         	call	int_func,f	;refresh shadow registers
   248                           
   249                           	psect	intcode_body
   250  00007C                     __pintcode_body:
   251                           	callstack 30
   252  00007C                     int_func:
   253                           	callstack 30
   254  00007C  0006               	pop		; remove dummy address from shadow register refresh
   255  00007E                     
   256                           ;main.c: 8:     if( INTCONbits.INT0IF == 1 ){
   257  00007E  A2F2               	btfss	242,1,c	;volatile
   258  000080  EF44  F000         	goto	i2u1_41
   259  000084  EF46  F000         	goto	i2u1_40
   260  000088                     i2u1_41:
   261  000088  EF49  F000         	goto	i2l713
   262  00008C                     i2u1_40:
   263  00008C                     
   264                           ;main.c: 9:         contador++;
   265  00008C  4A01               	infsnz	_contador^0,f,c
   266  00008E  2A02               	incf	(_contador+1)^0,f,c
   267  000090                     
   268                           ;main.c: 11:         INTCONbits.INT0IF = 0;
   269  000090  92F2               	bcf	242,1,c	;volatile
   270  000092                     i2l713:
   271                           
   272                           ;main.c: 14:     if( INTCON3bits.INT1IF == 1 ){
   273  000092  A0F0               	btfss	240,0,c	;volatile
   274  000094  EF4E  F000         	goto	i2u2_41
   275  000098  EF50  F000         	goto	i2u2_40
   276  00009C                     i2u2_41:
   277  00009C  EF54  F000         	goto	i2l21
   278  0000A0                     i2u2_40:
   279  0000A0                     
   280                           ;main.c: 15:         contador--;
   281  0000A0  0601               	decf	_contador^0,f,c
   282  0000A2  A0D8               	btfss	status,0,c
   283  0000A4  0602               	decf	(_contador+1)^0,f,c
   284  0000A6                     
   285                           ;main.c: 17:         INTCON3bits.INT1IF = 0;
   286  0000A6  90F0               	bcf	240,0,c	;volatile
   287  0000A8                     i2l21:
   288  0000A8  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   289  0000AA  0011               	retfie		f
   290  0000AC                     __end_of_External:
   291                           	callstack 0
   292  0000                     
   293                           	psect	rparam
   294  0000                     
   295                           	psect	temp
   296  000005                     btemp:
   297                           	callstack 0
   298  000005                     	ds	1
   299  0000                     int$flags	set	btemp
   300  0000                     wtemp8	set	btemp+1
   301  0000                     ttemp5	set	btemp+1
   302  0000                     ttemp6	set	btemp+4
   303  0000                     ttemp7	set	btemp+8
   304                           
   305                           	psect	idloc
   306                           
   307                           ;Config register IDLOC0 @ 0x200000
   308                           ;	unspecified, using default values
   309  200000                     	org	2097152
   310  200000  FF                 	db	255
   311                           
   312                           ;Config register IDLOC1 @ 0x200001
   313                           ;	unspecified, using default values
   314  200001                     	org	2097153
   315  200001  FF                 	db	255
   316                           
   317                           ;Config register IDLOC2 @ 0x200002
   318                           ;	unspecified, using default values
   319  200002                     	org	2097154
   320  200002  FF                 	db	255
   321                           
   322                           ;Config register IDLOC3 @ 0x200003
   323                           ;	unspecified, using default values
   324  200003                     	org	2097155
   325  200003  FF                 	db	255
   326                           
   327                           ;Config register IDLOC4 @ 0x200004
   328                           ;	unspecified, using default values
   329  200004                     	org	2097156
   330  200004  FF                 	db	255
   331                           
   332                           ;Config register IDLOC5 @ 0x200005
   333                           ;	unspecified, using default values
   334  200005                     	org	2097157
   335  200005  FF                 	db	255
   336                           
   337                           ;Config register IDLOC6 @ 0x200006
   338                           ;	unspecified, using default values
   339  200006                     	org	2097158
   340  200006  FF                 	db	255
   341                           
   342                           ;Config register IDLOC7 @ 0x200007
   343                           ;	unspecified, using default values
   344  200007                     	org	2097159
   345  200007  FF                 	db	255
   346                           
   347                           	psect	config
   348                           
   349                           ;Config register CONFIG1L @ 0x300000
   350                           ;	PLL Prescaler Selection bits
   351                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   352                           ;	System Clock Postscaler Selection bits
   353                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   354                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   355                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   356  300000                     	org	3145728
   357  300000  00                 	db	0
   358                           
   359                           ;Config register CONFIG1H @ 0x300001
   360                           ;	Oscillator Selection bits
   361                           ;	FOSC = HS, HS oscillator (HS)
   362                           ;	Fail-Safe Clock Monitor Enable bit
   363                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   364                           ;	Internal/External Oscillator Switchover bit
   365                           ;	IESO = OFF, Oscillator Switchover mode disabled
   366  300001                     	org	3145729
   367  300001  0C                 	db	12
   368                           
   369                           ;Config register CONFIG2L @ 0x300002
   370                           ;	Power-up Timer Enable bit
   371                           ;	PWRT = ON, PWRT enabled
   372                           ;	Brown-out Reset Enable bits
   373                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   374                           ;	Brown-out Reset Voltage bits
   375                           ;	BORV = 3, Minimum setting 2.05V
   376                           ;	USB Voltage Regulator Enable bit
   377                           ;	VREGEN = OFF, USB voltage regulator disabled
   378  300002                     	org	3145730
   379  300002  18                 	db	24
   380                           
   381                           ;Config register CONFIG2H @ 0x300003
   382                           ;	Watchdog Timer Enable bit
   383                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   384                           ;	Watchdog Timer Postscale Select bits
   385                           ;	WDTPS = 32768, 1:32768
   386  300003                     	org	3145731
   387  300003  1E                 	db	30
   388                           
   389                           ; Padding undefined space
   390  300004                     	org	3145732
   391  300004  FF                 	db	255
   392                           
   393                           ;Config register CONFIG3H @ 0x300005
   394                           ;	CCP2 MUX bit
   395                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   396                           ;	PORTB A/D Enable bit
   397                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   398                           ;	Low-Power Timer 1 Oscillator Enable bit
   399                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   400                           ;	MCLR Pin Enable bit
   401                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   402  300005                     	org	3145733
   403  300005  81                 	db	129
   404                           
   405                           ;Config register CONFIG4L @ 0x300006
   406                           ;	Stack Full/Underflow Reset Enable bit
   407                           ;	STVREN = ON, Stack full/underflow will cause Reset
   408                           ;	Single-Supply ICSP Enable bit
   409                           ;	LVP = OFF, Single-Supply ICSP disabled
   410                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   411                           ;	ICPRT = OFF, ICPORT disabled
   412                           ;	Extended Instruction Set Enable bit
   413                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   414                           ;	Background Debugger Enable bit
   415                           ;	DEBUG = 0x1, unprogrammed default
   416  300006                     	org	3145734
   417  300006  81                 	db	129
   418                           
   419                           ; Padding undefined space
   420  300007                     	org	3145735
   421  300007  FF                 	db	255
   422                           
   423                           ;Config register CONFIG5L @ 0x300008
   424                           ;	Code Protection bit
   425                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   426                           ;	Code Protection bit
   427                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   428                           ;	Code Protection bit
   429                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   430                           ;	Code Protection bit
   431                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   432  300008                     	org	3145736
   433  300008  0F                 	db	15
   434                           
   435                           ;Config register CONFIG5H @ 0x300009
   436                           ;	Boot Block Code Protection bit
   437                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   438                           ;	Data EEPROM Code Protection bit
   439                           ;	CPD = OFF, Data EEPROM is not code-protected
   440  300009                     	org	3145737
   441  300009  C0                 	db	192
   442                           
   443                           ;Config register CONFIG6L @ 0x30000A
   444                           ;	Write Protection bit
   445                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   446                           ;	Write Protection bit
   447                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   448                           ;	Write Protection bit
   449                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   450                           ;	Write Protection bit
   451                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   452  30000A                     	org	3145738
   453  30000A  0F                 	db	15
   454                           
   455                           ;Config register CONFIG6H @ 0x30000B
   456                           ;	Configuration Register Write Protection bit
   457                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   458                           ;	Boot Block Write Protection bit
   459                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   460                           ;	Data EEPROM Write Protection bit
   461                           ;	WRTD = OFF, Data EEPROM is not write-protected
   462  30000B                     	org	3145739
   463  30000B  E0                 	db	224
   464                           
   465                           ;Config register CONFIG7L @ 0x30000C
   466                           ;	Table Read Protection bit
   467                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   468                           ;	Table Read Protection bit
   469                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   470                           ;	Table Read Protection bit
   471                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   472                           ;	Table Read Protection bit
   473                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   474  30000C                     	org	3145740
   475  30000C  0F                 	db	15
   476                           
   477                           ;Config register CONFIG7H @ 0x30000D
   478                           ;	Boot Block Table Read Protection bit
   479                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   480  30000D                     	org	3145741
   481  30000D  40                 	db	64
   482                           tosu	equ	0xFFF
   483                           tosh	equ	0xFFE
   484                           tosl	equ	0xFFD
   485                           stkptr	equ	0xFFC
   486                           pclatu	equ	0xFFB
   487                           pclath	equ	0xFFA
   488                           pcl	equ	0xFF9
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           prodh	equ	0xFF4
   494                           prodl	equ	0xFF3
   495                           indf0	equ	0xFEF
   496                           postinc0	equ	0xFEE
   497                           postdec0	equ	0xFED
   498                           preinc0	equ	0xFEC
   499                           plusw0	equ	0xFEB
   500                           fsr0h	equ	0xFEA
   501                           fsr0l	equ	0xFE9
   502                           wreg	equ	0xFE8
   503                           indf1	equ	0xFE7
   504                           postinc1	equ	0xFE6
   505                           postdec1	equ	0xFE5
   506                           preinc1	equ	0xFE4
   507                           plusw1	equ	0xFE3
   508                           fsr1h	equ	0xFE2
   509                           fsr1l	equ	0xFE1
   510                           bsr	equ	0xFE0
   511                           indf2	equ	0xFDF
   512                           postinc2	equ	0xFDE
   513                           postdec2	equ	0xFDD
   514                           preinc2	equ	0xFDC
   515                           plusw2	equ	0xFDB
   516                           fsr2h	equ	0xFDA
   517                           fsr2l	equ	0xFD9
   518                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _External in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _External in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _External in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _External in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _External in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _External in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _External in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _External in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _External in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _External                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _External (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2       4       1        4.3%
BITBIGSFRllhh       5A      0       0      23        0.0%
BITBIGSFRllll       23      0       0      26        0.0%
BITBIGSFRlllh        F      0       0      25        0.0%
BITBIGSFRh           D      0       0      21        0.0%
BITBIGSFRllhl        1      0       0      24        0.0%
BITBIGSFRlh          1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4       3        0.0%
DATA                 0      0       4       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Mar 24 10:35:24 2023

                     u30 003C                       u31 0038                       u40 0052  
                     u41 004E                       u57 0068                      l721 001C  
                    l731 005A                      l723 0020                      l733 005E  
                    l725 003C                      l727 0044                      l719 0012  
                    l729 0052                      wreg 000FE8                     i2l21 00A8  
                   _main 0012                     btemp 0005                     start 000E  
           ___param_bank 000000                    ?_main 0003                    i2l711 0090  
                  i2l713 0092                    i2l715 00A0                    i2l707 007E  
                  i2l717 00A6                    i2l709 008C                    _PORTD 000F83  
                  _TRISD 000F95                    ttemp5 0006                    ttemp6 0009  
                  ttemp7 000D                    status 000FD8                    wtemp8 0006  
        __initialization 00AC             __end_of_main 007C         __end_of_External 00AC  
                 ??_main 0003            __activetblptr 000000                   i2u1_40 008C  
                 i2u1_41 0088                   i2u2_40 00A0                   i2u2_41 009C  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 00B0  
          ___rparam_used 000001           __pcstackCOMRAM 0003                ?_External 0003  
             ??_External 0003                  __Hparam 0000                  __Lparam 0000  
                __pcinit 00AC                  __ramtop 0800                  __ptext0 0012  
         __pintcode_body 007C     end_of_initialization 00B0                  int_func 007C  
              _TRISBbits 000F93      start_initialization 00AC              __pbssCOMRAM 0001  
              __pintcode 0008              _INTCON3bits 000FF0                 _External 0008  
               __Hrparam 0000                 __Lrparam 0000                 _contador 0001  
               isa$xinst 000000                 int$flags 0005               _INTCONbits 000FF2  
               intlevel2 0000  
