

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 05 09:07:38 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.40
    56                           ; Generated 17/11/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	idataBANK1
    92  003712                     __pidataBANK1:
    93                           	callstack 0
    94                           
    95                           ;initializer for _strUART
    96  003712  20                 	db	32
    97  003713  00                 	db	0
    98  003714  00                 	db	0
    99  003715  00                 	db	0
   100  003716  00                 	db	0
   101  003717  00                 	db	0
   102  003718  00                 	db	0
   103  003719  00                 	db	0
   104  00371A  00                 	db	0
   105  00371B  00                 	db	0
   106  00371C  00                 	db	0
   107  00371D  00                 	db	0
   108  00371E  00                 	db	0
   109  00371F  00                 	db	0
   110  003720  00                 	db	0
   111  003721  00                 	db	0
   112  003722  00                 	db	0
   113  003723  00                 	db	0
   114  003724  00                 	db	0
   115  003725  00                 	db	0
   116  003726  00                 	db	0
   117  003727  00                 	db	0
   118  003728  00                 	db	0
   119  003729  00                 	db	0
   120  00372A  00                 	db	0
   121  00372B  00                 	db	0
   122  00372C  00                 	db	0
   123  00372D  00                 	db	0
   124  00372E  00                 	db	0
   125  00372F  00                 	db	0
   126  003730  00                 	db	0
   127  003731  00                 	db	0
   128  003732  00                 	db	0
   129  003733  00                 	db	0
   130  003734  00                 	db	0
   131  003735  00                 	db	0
   132  003736  00                 	db	0
   133  003737  00                 	db	0
   134  003738  00                 	db	0
   135  003739  00                 	db	0
   136  00373A  00                 	db	0
   137  00373B  00                 	db	0
   138  00373C  00                 	db	0
   139  00373D  00                 	db	0
   140  00373E  00                 	db	0
   141  00373F  00                 	db	0
   142  003740  00                 	db	0
   143  003741  00                 	db	0
   144  003742  00                 	db	0
   145  003743  00                 	db	0
   146  0000                     _ADRESL	set	4035
   147  0000                     _ADRESH	set	4036
   148  0000                     _ADCON0bits	set	4034
   149  0000                     _RCREG	set	4014
   150  0000                     _TXREG	set	4013
   151  0000                     _ADCON1bits	set	4033
   152  0000                     _TXSTAbits	set	4012
   153  0000                     _TX9D	set	32096
   154  0000                     _BRGH	set	32098
   155  0000                     _SPEN	set	32095
   156  0000                     _SYNC	set	32100
   157  0000                     _TXEN	set	32101
   158  0000                     _RX9	set	32094
   159  0000                     _TX9	set	32102
   160  0000                     _PIR1bits	set	3998
   161  0000                     _RCSTA	set	4011
   162  0000                     _TXSTA	set	4012
   163  0000                     _SPBRG	set	4015
   164  0000                     _ADCON1	set	4033
   165  0000                     _ADCON2bits	set	4032
   166                           
   167                           	psect	smallconst
   168  000800                     __psmallconst:
   169                           	callstack 0
   170  000800  00                 	db	0
   171  000801                     STR_1:
   172  000801  2A                 	db	42
   173  000802  20                 	db	32
   174  000803  25                 	db	37
   175  000804  66                 	db	102	;'f'
   176  000805  20                 	db	32
   177  000806  2F                 	db	47
   178  000807  20                 	db	32
   179  000808  25                 	db	37
   180  000809  66                 	db	102	;'f'
   181  00080A  20                 	db	32
   182  00080B  2F                 	db	47
   183  00080C  20                 	db	32
   184  00080D  25                 	db	37
   185  00080E  66                 	db	102	;'f'
   186  00080F  20                 	db	32
   187  000810  23                 	db	35
   188  000811  0D                 	db	13
   189  000812  0A                 	db	10
   190  000813  00                 	db	0
   191  000814                     STR_2:
   192  000814  49                 	db	73	;'I'
   193  000815  4E                 	db	78	;'N'
   194  000816  46                 	db	70	;'F'
   195  000817  00                 	db	0
   196  000818                     STR_6:
   197  000818  4E                 	db	78	;'N'
   198  000819  41                 	db	65	;'A'
   199  00081A  4E                 	db	78	;'N'
   200  00081B  00                 	db	0
   201  00081C                     STR_3:
   202  00081C  69                 	db	105	;'i'
   203  00081D  6E                 	db	110	;'n'
   204  00081E  66                 	db	102	;'f'
   205  00081F  00                 	db	0
   206  000820                     STR_7:
   207  000820  6E                 	db	110	;'n'
   208  000821  61                 	db	97	;'a'
   209  000822  6E                 	db	110	;'n'
   210  000823  00                 	db	0
   211  000824                     STR_10:
   212  000824  6C                 	db	108	;'l'
   213  000825  66                 	db	102	;'f'
   214  000826  00                 	db	0
   215  000827  00                 	db	0	; dummy byte at the end
   216  0000                     
   217                           ; #config settings
   218                           
   219                           	psect	cinit
   220  003516                     __pcinit:
   221                           	callstack 0
   222  003516                     start_initialization:
   223                           	callstack 0
   224  003516                     __initialization:
   225                           	callstack 0
   226                           
   227                           ; Initialize objects allocated to BANK1 (50 bytes)
   228                           ; load TBLPTR registers with __pidataBANK1
   229  003516  0E12               	movlw	low __pidataBANK1
   230  003518  6EF6               	movwf	tblptrl,c
   231  00351A  0E37               	movlw	high __pidataBANK1
   232  00351C  6EF7               	movwf	tblptrh,c
   233  00351E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   234  003520  6EF8               	movwf	tblptru,c
   235  003522  EE01  F05C         	lfsr	0,__pdataBANK1
   236  003526  EE10 F032          	lfsr	1,50
   237  00352A                     copy_data0:
   238  00352A  0009               	tblrd		*+
   239  00352C  CFF5 FFEE          	movff	tablat,postinc0
   240  003530  50E5               	movf	postdec1,w,c
   241  003532  50E1               	movf	fsr1l,w,c
   242  003534  E1FA               	bnz	copy_data0
   243                           
   244                           ; Clear objects allocated to BANK1 (92 bytes)
   245  003536  EE01  F000         	lfsr	0,__pbssBANK1
   246  00353A  0E5C               	movlw	92
   247  00353C                     clear_0:
   248  00353C  6AEE               	clrf	postinc0,c
   249  00353E  06E8               	decf	wreg,f,c
   250  003540  E1FD               	bnz	clear_0
   251                           
   252                           ; Clear objects allocated to BANK0 (18 bytes)
   253  003542  EE00  F0ED         	lfsr	0,__pbssBANK0
   254  003546  0E12               	movlw	18
   255  003548                     clear_1:
   256  003548  6AEE               	clrf	postinc0,c
   257  00354A  06E8               	decf	wreg,f,c
   258  00354C  E1FD               	bnz	clear_1
   259  00354E                     end_of_initialization:
   260                           	callstack 0
   261  00354E                     __end_of__initialization:
   262                           	callstack 0
   263  00354E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   264  003550  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   265  003552  0E00               	movlw	low (__Lmediumconst shr (0+16))
   266  003554  6EF8               	movwf	tblptru,c
   267  003556  0100               	movlb	0
   268  003558  EF00  F013         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssBANK0
   271  0000ED                     __pbssBANK0:
   272                           	callstack 0
   273  0000ED                     _hum:
   274                           	callstack 0
   275  0000ED                     	ds	4
   276  0000F1                     _temp:
   277                           	callstack 0
   278  0000F1                     	ds	4
   279  0000F5                     _nout:
   280                           	callstack 0
   281  0000F5                     	ds	2
   282  0000F7                     _width:
   283                           	callstack 0
   284  0000F7                     	ds	2
   285  0000F9                     _prec:
   286                           	callstack 0
   287  0000F9                     	ds	2
   288  0000FB                     _flags:
   289                           	callstack 0
   290  0000FB                     	ds	2
   291  0000FD                     _conver:
   292                           	callstack 0
   293  0000FD                     	ds	2
   294                           
   295                           	psect	bssBANK1
   296  000100                     __pbssBANK1:
   297                           	callstack 0
   298  000100                     floorf@F526:
   299                           	callstack 0
   300  000100                     	ds	4
   301  000104                     ___fpclassifyf@F465:
   302                           	callstack 0
   303  000104                     	ds	4
   304  000108                     _pressure:
   305                           	callstack 0
   306  000108                     	ds	4
   307  00010C                     _dbuf:
   308                           	callstack 0
   309  00010C                     	ds	80
   310                           
   311                           	psect	dataBANK1
   312  00015C                     __pdataBANK1:
   313                           	callstack 0
   314  00015C                     _strUART:
   315                           	callstack 0
   316  00015C                     	ds	50
   317                           
   318                           	psect	cstackBANK0
   319  000060                     __pcstackBANK0:
   320                           	callstack 0
   321  000060                     ??_floorf:
   322  000060                     ?_ADC_MAP:
   323                           	callstack 0
   324  000060                     ADC_MAP@conver:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x0
   328  000060                     	ds	2
   329  000062                     ADC_MAP@xi:
   330                           	callstack 0
   331                           
   332                           ; 4 bytes @ 0x2
   333  000062                     	ds	4
   334  000066                     ADC_MAP@xf:
   335                           	callstack 0
   336  000066                     floorf@m:
   337                           	callstack 0
   338                           
   339                           ; 4 bytes @ 0x6
   340  000066                     	ds	4
   341  00006A                     floorf@e:
   342                           	callstack 0
   343  00006A                     ADC_MAP@yi:
   344                           	callstack 0
   345                           
   346                           ; 4 bytes @ 0xA
   347  00006A                     	ds	2
   348  00006C                     floorf@u:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0xC
   352  00006C                     	ds	2
   353  00006E                     ADC_MAP@yf:
   354                           	callstack 0
   355                           
   356                           ; 4 bytes @ 0xE
   357  00006E                     	ds	2
   358  000070                     ?_efgtoa:
   359                           	callstack 0
   360  000070                     efgtoa@fp:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x10
   364  000070                     	ds	2
   365  000072                     efgtoa@f:
   366                           	callstack 0
   367  000072                     _ADC_MAP$1270:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x12
   371  000072                     	ds	4
   372  000076                     efgtoa@c:
   373                           	callstack 0
   374  000076                     ADC_MAP@m:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x16
   378  000076                     	ds	1
   379  000077                     ??_efgtoa:
   380                           
   381                           ; 1 bytes @ 0x17
   382  000077                     	ds	5
   383  00007C                     _efgtoa$942:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x1C
   387  00007C                     	ds	2
   388  00007E                     _efgtoa$950:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x1E
   392  00007E                     	ds	2
   393  000080                     _efgtoa$951:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x20
   397  000080                     	ds	2
   398  000082                     efgtoa@t:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x22
   402  000082                     	ds	2
   403  000084                     efgtoa@pp:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x24
   407  000084                     	ds	2
   408  000086                     efgtoa@ne:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x26
   412  000086                     	ds	2
   413  000088                     efgtoa@m:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x28
   417  000088                     	ds	2
   418  00008A                     efgtoa@ou:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0x2A
   422  00008A                     	ds	4
   423  00008E                     efgtoa@d:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x2E
   427  00008E                     	ds	2
   428  000090                     efgtoa@sign:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x30
   432  000090                     	ds	2
   433  000092                     efgtoa@p:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x32
   437  000092                     	ds	2
   438  000094                     efgtoa@w:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x34
   442  000094                     	ds	2
   443  000096                     efgtoa@nmode:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x36
   447  000096                     	ds	1
   448  000097                     efgtoa@mode:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x37
   452  000097                     	ds	1
   453  000098                     efgtoa@h:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x38
   457  000098                     	ds	4
   458  00009C                     efgtoa@l:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0x3C
   462  00009C                     	ds	4
   463  0000A0                     efgtoa@i:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x40
   467  0000A0                     	ds	2
   468  0000A2                     efgtoa@g:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x42
   472  0000A2                     	ds	4
   473  0000A6                     efgtoa@e:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x46
   477  0000A6                     	ds	2
   478  0000A8                     efgtoa@n:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x48
   482  0000A8                     	ds	2
   483  0000AA                     efgtoa@u:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x4A
   487  0000AA                     	ds	4
   488  0000AE                     ?_vfpfcnvrt:
   489                           	callstack 0
   490  0000AE                     vfpfcnvrt@fp:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x4E
   494  0000AE                     	ds	2
   495  0000B0                     vfpfcnvrt@fmt:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x50
   499  0000B0                     	ds	2
   500  0000B2                     vfpfcnvrt@ap:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x52
   504  0000B2                     	ds	2
   505  0000B4                     ??_vfpfcnvrt:
   506                           
   507                           ; 1 bytes @ 0x54
   508  0000B4                     	ds	4
   509  0000B8                     vfpfcnvrt@f:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x58
   513  0000B8                     	ds	4
   514  0000BC                     vfpfcnvrt@ct:
   515                           	callstack 0
   516                           
   517                           ; 3 bytes @ 0x5C
   518  0000BC                     	ds	3
   519  0000BF                     vfpfcnvrt@c:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x5F
   523  0000BF                     	ds	1
   524  0000C0                     ?_vfprintf:
   525                           	callstack 0
   526  0000C0                     vfprintf@fp:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x60
   530  0000C0                     	ds	2
   531  0000C2                     vfprintf@fmt:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x62
   535  0000C2                     	ds	2
   536  0000C4                     vfprintf@ap:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x64
   540  0000C4                     	ds	2
   541  0000C6                     ?_sprintf:
   542                           	callstack 0
   543  0000C6                     sprintf@s:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x66
   547  0000C6                     	ds	2
   548  0000C8                     sprintf@fmt:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x68
   552  0000C8                     	ds	14
   553  0000D6                     sprintf@ap:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x76
   557  0000D6                     	ds	2
   558  0000D8                     sprintf@f:
   559                           	callstack 0
   560                           
   561                           ; 11 bytes @ 0x78
   562  0000D8                     	ds	11
   563  0000E3                     ??_main:
   564                           
   565                           ; 1 bytes @ 0x83
   566  0000E3                     	ds	2
   567  0000E5                     main@uartConfig:
   568                           	callstack 0
   569                           
   570                           ; 8 bytes @ 0x85
   571  0000E5                     	ds	8
   572                           
   573                           	psect	cstackCOMRAM
   574  000001                     __pcstackCOMRAM:
   575                           	callstack 0
   576  000001                     ?_ADC_Read:
   577                           	callstack 0
   578  000001                     ?_strlen:
   579                           	callstack 0
   580  000001                     ?___fpclassifyf:
   581                           	callstack 0
   582  000001                     ?_isupper:
   583                           	callstack 0
   584  000001                     ?_strncmp:
   585                           	callstack 0
   586  000001                     ?___awdiv:
   587                           	callstack 0
   588  000001                     ?___awmod:
   589                           	callstack 0
   590  000001                     ?___lldiv:
   591                           	callstack 0
   592  000001                     ?___flneg:
   593                           	callstack 0
   594  000001                     ?___fltol:
   595                           	callstack 0
   596  000001                     ?___xxtofl:
   597                           	callstack 0
   598  000001                     UART_Write_Chr@letter:
   599                           	callstack 0
   600  000001                     ___awdiv@dividend:
   601                           	callstack 0
   602  000001                     ___awmod@dividend:
   603                           	callstack 0
   604  000001                     isupper@c:
   605                           	callstack 0
   606  000001                     fputc@c:
   607                           	callstack 0
   608  000001                     strcpy@dest:
   609                           	callstack 0
   610  000001                     strlen@s:
   611                           	callstack 0
   612  000001                     strncmp@_l:
   613                           	callstack 0
   614  000001                     ___lldiv@dividend:
   615                           	callstack 0
   616  000001                     ___fleq@ff1:
   617                           	callstack 0
   618  000001                     ___flneg@f1:
   619                           	callstack 0
   620  000001                     ___fltol@f1:
   621                           	callstack 0
   622  000001                     ___xxtofl@val:
   623                           	callstack 0
   624  000001                     ___fpclassifyf@x:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x0
   628  000001                     	ds	1
   629  000002                     UART_Write_Text@text:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x1
   633  000002                     	ds	1
   634  000003                     ??_ADC_Read:
   635  000003                     ??_isupper:
   636  000003                     ___awdiv@divisor:
   637                           	callstack 0
   638  000003                     ___awmod@divisor:
   639                           	callstack 0
   640  000003                     fputc@fp:
   641                           	callstack 0
   642  000003                     strcpy@src:
   643                           	callstack 0
   644  000003                     strlen@a:
   645                           	callstack 0
   646  000003                     strncmp@_r:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x2
   650  000003                     	ds	1
   651  000004                     
   652                           ; 1 bytes @ 0x3
   653  000004                     	ds	1
   654  000005                     ??_fputc:
   655  000005                     ??___fpclassifyf:
   656  000005                     ??_strcpy:
   657  000005                     ??___fltol:
   658  000005                     ??___xxtofl:
   659  000005                     ADC_Read@channel:
   660                           	callstack 0
   661  000005                     ___awdiv@counter:
   662                           	callstack 0
   663  000005                     ___awmod@counter:
   664                           	callstack 0
   665  000005                     strncmp@n:
   666                           	callstack 0
   667  000005                     ___lldiv@divisor:
   668                           	callstack 0
   669  000005                     ___fleq@ff2:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0x4
   673  000005                     	ds	1
   674  000006                     ___awdiv@sign:
   675                           	callstack 0
   676  000006                     ___awmod@sign:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x5
   680  000006                     	ds	1
   681  000007                     ??_strncmp:
   682  000007                     ?_tolower:
   683                           	callstack 0
   684  000007                     ___awdiv@quotient:
   685                           	callstack 0
   686  000007                     strcpy@s:
   687                           	callstack 0
   688  000007                     tolower@c:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x6
   692  000007                     	ds	1
   693  000008                     strncmp@l:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x7
   697  000008                     	ds	1
   698  000009                     ??_tolower:
   699  000009                     ??___fleq:
   700  000009                     ___fltol@sign1:
   701                           	callstack 0
   702  000009                     ___xxtofl@sign:
   703                           	callstack 0
   704  000009                     ___fpclassifyf@e:
   705                           	callstack 0
   706  000009                     strcpy@d:
   707                           	callstack 0
   708  000009                     ___lldiv@quotient:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x8
   712  000009                     	ds	1
   713  00000A                     ___fltol@exp1:
   714                           	callstack 0
   715  00000A                     ___xxtofl@exp:
   716                           	callstack 0
   717  00000A                     fputs@s:
   718                           	callstack 0
   719  00000A                     strncmp@r:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x9
   723  00000A                     	ds	1
   724  00000B                     ___xxtofl@arg:
   725                           	callstack 0
   726  00000B                     ___fpclassifyf@u:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0xA
   730  00000B                     	ds	1
   731  00000C                     fputs@fp:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0xB
   735  00000C                     	ds	1
   736  00000D                     ___lldiv@counter:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0xC
   740  00000D                     	ds	1
   741  00000E                     fputs@c:
   742                           	callstack 0
   743  00000E                     UART_Init@config:
   744                           	callstack 0
   745                           
   746                           ; 8 bytes @ 0xD
   747  00000E                     	ds	1
   748  00000F                     ?___flmul:
   749                           	callstack 0
   750  00000F                     fputs@i:
   751                           	callstack 0
   752  00000F                     ___flmul@b:
   753                           	callstack 0
   754                           
   755                           ; 4 bytes @ 0xE
   756  00000F                     	ds	2
   757  000011                     ?_pad:
   758                           	callstack 0
   759  000011                     pad@fp:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x10
   763  000011                     	ds	2
   764  000013                     pad@buf:
   765                           	callstack 0
   766  000013                     ___flmul@a:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x12
   770  000013                     	ds	2
   771  000015                     pad@p:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x14
   775  000015                     	ds	1
   776  000016                     ??_UART_Init:
   777                           
   778                           ; 1 bytes @ 0x15
   779  000016                     	ds	1
   780  000017                     ??___flmul:
   781  000017                     ??_pad:
   782                           
   783                           ; 1 bytes @ 0x16
   784  000017                     	ds	1
   785  000018                     pad@i:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x17
   789  000018                     	ds	2
   790  00001A                     pad@w:
   791                           	callstack 0
   792  00001A                     UART_Init@spbrg_val:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x19
   796  00001A                     	ds	1
   797  00001B                     ___flmul@sign:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x1A
   801  00001B                     	ds	1
   802  00001C                     ___flmul@grs:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x1B
   806  00001C                     	ds	4
   807  000020                     ___flmul@aexp:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x1F
   811  000020                     	ds	1
   812  000021                     ___flmul@bexp:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x20
   816  000021                     	ds	1
   817  000022                     ___flmul@prod:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x21
   821  000022                     	ds	4
   822  000026                     ___flmul@temp:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x25
   826  000026                     	ds	2
   827  000028                     ?___fladd:
   828                           	callstack 0
   829  000028                     ___flge@ff1:
   830                           	callstack 0
   831  000028                     ___fladd@b:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x27
   835  000028                     	ds	4
   836  00002C                     ___flge@ff2:
   837                           	callstack 0
   838  00002C                     ___fladd@a:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x2B
   842  00002C                     	ds	4
   843  000030                     ??___fladd:
   844  000030                     ??___flge:
   845                           
   846                           ; 1 bytes @ 0x2F
   847  000030                     	ds	4
   848  000034                     ___fladd@signs:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x33
   852  000034                     	ds	1
   853  000035                     ___fladd@aexp:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x34
   857  000035                     	ds	1
   858  000036                     ___fladd@bexp:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x35
   862  000036                     	ds	1
   863  000037                     ___fladd@grs:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x36
   867  000037                     	ds	1
   868  000038                     ?___flsub:
   869                           	callstack 0
   870  000038                     ___flsub@b:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x37
   874  000038                     	ds	4
   875  00003C                     ___flsub@a:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x3B
   879  00003C                     	ds	4
   880  000040                     ?___fldiv:
   881                           	callstack 0
   882  000040                     ___fldiv@b:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0x3F
   886  000040                     	ds	4
   887  000044                     ___fldiv@a:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x43
   891  000044                     	ds	4
   892  000048                     ??___fldiv:
   893                           
   894                           ; 1 bytes @ 0x47
   895  000048                     	ds	4
   896  00004C                     ___fldiv@rem:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x4B
   900  00004C                     	ds	4
   901  000050                     ___fldiv@sign:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x4F
   905  000050                     	ds	1
   906  000051                     ___fldiv@new_exp:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x50
   910  000051                     	ds	2
   911  000053                     ___fldiv@grs:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x52
   915  000053                     	ds	4
   916  000057                     ___fldiv@bexp:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x56
   920  000057                     	ds	1
   921  000058                     ___fldiv@aexp:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x57
   925  000058                     	ds	1
   926  000059                     ?_floorf:
   927                           	callstack 0
   928  000059                     floorf@x:
   929                           	callstack 0
   930                           
   931                           ; 4 bytes @ 0x58
   932  000059                     	ds	4
   933  00005D                     vfprintf@cfmt:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x5C
   937  00005D                     	ds	2
   938  00005F                     
   939                           ; 1 bytes @ 0x5E
   940 ;;
   941 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   942 ;;
   943 ;; *************** function _main *****************
   944 ;; Defined at:
   945 ;;		line 21 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  uartConfig      8  133[BANK0 ] struct .
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   959 ;;      Params:         0       0       0       0       0       0       0       0       0
   960 ;;      Locals:         0       8       0       0       0       0       0       0       0
   961 ;;      Temps:          0       2       0       0       0       0       0       0       0
   962 ;;      Totals:         0      10       0       0       0       0       0       0       0
   963 ;;Total ram usage:       10 bytes
   964 ;; Hardware stack levels required when called: 9
   965 ;; This function calls:
   966 ;;		_ADC_Init
   967 ;;		_ADC_MAP
   968 ;;		_ADC_Read
   969 ;;		_UART_Init
   970 ;;		_UART_Write_Text
   971 ;;		_sprintf
   972 ;; This function is called by:
   973 ;;		Startup code after reset
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text0
   978  002600                     __ptext0:
   979                           	callstack 0
   980  002600                     _main:
   981                           	callstack 22
   982  002600                     
   983                           ;main.c: 23:     ADCON1 = 12;
   984  002600  0E0C               	movlw	12
   985  002602  6EC1               	movwf	193,c	;volatile
   986  002604                     
   987                           ;main.c: 25:     ADC_Init();
   988  002604  ECC5  F01B         	call	_ADC_Init	;wreg free
   989  002608                     
   990                           ;main.c: 27:     UART_Config uartConfig;;main.c: 29:     uartConfig.baud_rate = 9600;
   991  002608  0E80               	movlw	128
   992  00260A  0100               	movlb	0	; () banked
   993  00260C  6FE5               	movwf	main@uartConfig& (0+255),b
   994  00260E  0E25               	movlw	37
   995  002610  6FE6               	movwf	(main@uartConfig+1)& (0+255),b
   996  002612  0E00               	movlw	0
   997  002614  6FE7               	movwf	(main@uartConfig+2)& (0+255),b
   998  002616  0E00               	movlw	0
   999  002618  6FE8               	movwf	(main@uartConfig+3)& (0+255),b
  1000  00261A                     
  1001                           ; BSR set to: 0
  1002                           ;main.c: 30:     uartConfig.data_bits = 8;
  1003  00261A  0E08               	movlw	8
  1004  00261C  6FE9               	movwf	(main@uartConfig+4)& (0+255),b
  1005  00261E                     
  1006                           ; BSR set to: 0
  1007                           ;main.c: 31:     uartConfig.parity = 0;
  1008  00261E  0E00               	movlw	0
  1009  002620  6FEA               	movwf	(main@uartConfig+5)& (0+255),b
  1010  002622                     
  1011                           ; BSR set to: 0
  1012                           ;main.c: 32:     uartConfig.stop_bits = 1;
  1013  002622  0E01               	movlw	1
  1014  002624  6FEB               	movwf	(main@uartConfig+6)& (0+255),b
  1015  002626                     
  1016                           ; BSR set to: 0
  1017                           ;main.c: 34:     UART_Init(uartConfig);
  1018  002626  EE20  F0E5         	lfsr	2,main@uartConfig
  1019  00262A  EE00  F00E         	lfsr	0,UART_Init@config
  1020  00262E  0E07               	movlw	7
  1021  002630                     u4491:
  1022  002630  CFDB FFEB          	movff	plusw2,plusw0
  1023  002634  06E8               	decf	wreg,f,c
  1024  002636  E2FC               	bc	u4491
  1025  002638  ECFB  F016         	call	_UART_Init	;wreg free
  1026  00263C                     l3739:
  1027                           
  1028                           ;main.c: 38:         conver = ADC_Read(0);
  1029  00263C  0E00               	movlw	0
  1030  00263E  EC16  F01B         	call	_ADC_Read
  1031  002642  C001  F0FD         	movff	?_ADC_Read,_conver
  1032  002646  C002  F0FE         	movff	?_ADC_Read+1,_conver+1
  1033  00264A                     
  1034                           ;main.c: 39:         temp = ADC_MAP(conver, 0.0, 1023.0, 0.0, 150.0);
  1035  00264A  C0FD  F060         	movff	_conver,ADC_MAP@conver
  1036  00264E  C0FE  F061         	movff	_conver+1,ADC_MAP@conver+1
  1037  002652  0E00               	movlw	0
  1038  002654  0100               	movlb	0	; () banked
  1039  002656  6F62               	movwf	ADC_MAP@xi& (0+255),b
  1040  002658  0E00               	movlw	0
  1041  00265A  6F63               	movwf	(ADC_MAP@xi+1)& (0+255),b
  1042  00265C  0E00               	movlw	0
  1043  00265E  6F64               	movwf	(ADC_MAP@xi+2)& (0+255),b
  1044  002660  0E00               	movlw	0
  1045  002662  6F65               	movwf	(ADC_MAP@xi+3)& (0+255),b
  1046  002664  0E00               	movlw	0
  1047  002666  6F66               	movwf	ADC_MAP@xf& (0+255),b
  1048  002668  0EC0               	movlw	192
  1049  00266A  6F67               	movwf	(ADC_MAP@xf+1)& (0+255),b
  1050  00266C  0E7F               	movlw	127
  1051  00266E  6F68               	movwf	(ADC_MAP@xf+2)& (0+255),b
  1052  002670  0E44               	movlw	68
  1053  002672  6F69               	movwf	(ADC_MAP@xf+3)& (0+255),b
  1054  002674  0E00               	movlw	0
  1055  002676  6F6A               	movwf	ADC_MAP@yi& (0+255),b
  1056  002678  0E00               	movlw	0
  1057  00267A  6F6B               	movwf	(ADC_MAP@yi+1)& (0+255),b
  1058  00267C  0E00               	movlw	0
  1059  00267E  6F6C               	movwf	(ADC_MAP@yi+2)& (0+255),b
  1060  002680  0E00               	movlw	0
  1061  002682  6F6D               	movwf	(ADC_MAP@yi+3)& (0+255),b
  1062  002684  0E00               	movlw	0
  1063  002686  6F6E               	movwf	ADC_MAP@yf& (0+255),b
  1064  002688  0E00               	movlw	0
  1065  00268A  6F6F               	movwf	(ADC_MAP@yf+1)& (0+255),b
  1066  00268C  0E16               	movlw	22
  1067  00268E  6F70               	movwf	(ADC_MAP@yf+2)& (0+255),b
  1068  002690  0E43               	movlw	67
  1069  002692  6F71               	movwf	(ADC_MAP@yf+3)& (0+255),b
  1070  002694  ECD4  F014         	call	_ADC_MAP	;wreg free
  1071  002698  C060  F0F1         	movff	?_ADC_MAP,_temp
  1072  00269C  C061  F0F2         	movff	?_ADC_MAP+1,_temp+1
  1073  0026A0  C062  F0F3         	movff	?_ADC_MAP+2,_temp+2
  1074  0026A4  C063  F0F4         	movff	?_ADC_MAP+3,_temp+3
  1075  0026A8                     
  1076                           ;main.c: 41:         conver = ADC_Read(1);
  1077  0026A8  0E01               	movlw	1
  1078  0026AA  EC16  F01B         	call	_ADC_Read
  1079  0026AE  C001  F0FD         	movff	?_ADC_Read,_conver
  1080  0026B2  C002  F0FE         	movff	?_ADC_Read+1,_conver+1
  1081  0026B6                     
  1082                           ;main.c: 42:         hum = ADC_MAP(conver, 0.0, 1023.0, 100.0, 0.0);
  1083  0026B6  C0FD  F060         	movff	_conver,ADC_MAP@conver
  1084  0026BA  C0FE  F061         	movff	_conver+1,ADC_MAP@conver+1
  1085  0026BE  0E00               	movlw	0
  1086  0026C0  0100               	movlb	0	; () banked
  1087  0026C2  6F62               	movwf	ADC_MAP@xi& (0+255),b
  1088  0026C4  0E00               	movlw	0
  1089  0026C6  6F63               	movwf	(ADC_MAP@xi+1)& (0+255),b
  1090  0026C8  0E00               	movlw	0
  1091  0026CA  6F64               	movwf	(ADC_MAP@xi+2)& (0+255),b
  1092  0026CC  0E00               	movlw	0
  1093  0026CE  6F65               	movwf	(ADC_MAP@xi+3)& (0+255),b
  1094  0026D0  0E00               	movlw	0
  1095  0026D2  6F66               	movwf	ADC_MAP@xf& (0+255),b
  1096  0026D4  0EC0               	movlw	192
  1097  0026D6  6F67               	movwf	(ADC_MAP@xf+1)& (0+255),b
  1098  0026D8  0E7F               	movlw	127
  1099  0026DA  6F68               	movwf	(ADC_MAP@xf+2)& (0+255),b
  1100  0026DC  0E44               	movlw	68
  1101  0026DE  6F69               	movwf	(ADC_MAP@xf+3)& (0+255),b
  1102  0026E0  0E00               	movlw	0
  1103  0026E2  6F6A               	movwf	ADC_MAP@yi& (0+255),b
  1104  0026E4  0E00               	movlw	0
  1105  0026E6  6F6B               	movwf	(ADC_MAP@yi+1)& (0+255),b
  1106  0026E8  0EC8               	movlw	200
  1107  0026EA  6F6C               	movwf	(ADC_MAP@yi+2)& (0+255),b
  1108  0026EC  0E42               	movlw	66
  1109  0026EE  6F6D               	movwf	(ADC_MAP@yi+3)& (0+255),b
  1110  0026F0  0E00               	movlw	0
  1111  0026F2  6F6E               	movwf	ADC_MAP@yf& (0+255),b
  1112  0026F4  0E00               	movlw	0
  1113  0026F6  6F6F               	movwf	(ADC_MAP@yf+1)& (0+255),b
  1114  0026F8  0E00               	movlw	0
  1115  0026FA  6F70               	movwf	(ADC_MAP@yf+2)& (0+255),b
  1116  0026FC  0E00               	movlw	0
  1117  0026FE  6F71               	movwf	(ADC_MAP@yf+3)& (0+255),b
  1118  002700  ECD4  F014         	call	_ADC_MAP	;wreg free
  1119  002704  C060  F0ED         	movff	?_ADC_MAP,_hum
  1120  002708  C061  F0EE         	movff	?_ADC_MAP+1,_hum+1
  1121  00270C  C062  F0EF         	movff	?_ADC_MAP+2,_hum+2
  1122  002710  C063  F0F0         	movff	?_ADC_MAP+3,_hum+3
  1123  002714                     
  1124                           ;main.c: 44:         conver = ADC_Read(2);
  1125  002714  0E02               	movlw	2
  1126  002716  EC16  F01B         	call	_ADC_Read
  1127  00271A  C001  F0FD         	movff	?_ADC_Read,_conver
  1128  00271E  C002  F0FE         	movff	?_ADC_Read+1,_conver+1
  1129  002722                     
  1130                           ;main.c: 45:         pressure = ADC_MAP(conver, 0.0, 1023.0, 700.0, 1100.0);
  1131  002722  C0FD  F060         	movff	_conver,ADC_MAP@conver
  1132  002726  C0FE  F061         	movff	_conver+1,ADC_MAP@conver+1
  1133  00272A  0E00               	movlw	0
  1134  00272C  0100               	movlb	0	; () banked
  1135  00272E  6F62               	movwf	ADC_MAP@xi& (0+255),b
  1136  002730  0E00               	movlw	0
  1137  002732  6F63               	movwf	(ADC_MAP@xi+1)& (0+255),b
  1138  002734  0E00               	movlw	0
  1139  002736  6F64               	movwf	(ADC_MAP@xi+2)& (0+255),b
  1140  002738  0E00               	movlw	0
  1141  00273A  6F65               	movwf	(ADC_MAP@xi+3)& (0+255),b
  1142  00273C  0E00               	movlw	0
  1143  00273E  6F66               	movwf	ADC_MAP@xf& (0+255),b
  1144  002740  0EC0               	movlw	192
  1145  002742  6F67               	movwf	(ADC_MAP@xf+1)& (0+255),b
  1146  002744  0E7F               	movlw	127
  1147  002746  6F68               	movwf	(ADC_MAP@xf+2)& (0+255),b
  1148  002748  0E44               	movlw	68
  1149  00274A  6F69               	movwf	(ADC_MAP@xf+3)& (0+255),b
  1150  00274C  0E00               	movlw	0
  1151  00274E  6F6A               	movwf	ADC_MAP@yi& (0+255),b
  1152  002750  0E00               	movlw	0
  1153  002752  6F6B               	movwf	(ADC_MAP@yi+1)& (0+255),b
  1154  002754  0E2F               	movlw	47
  1155  002756  6F6C               	movwf	(ADC_MAP@yi+2)& (0+255),b
  1156  002758  0E44               	movlw	68
  1157  00275A  6F6D               	movwf	(ADC_MAP@yi+3)& (0+255),b
  1158  00275C  0E00               	movlw	0
  1159  00275E  6F6E               	movwf	ADC_MAP@yf& (0+255),b
  1160  002760  0E80               	movlw	128
  1161  002762  6F6F               	movwf	(ADC_MAP@yf+1)& (0+255),b
  1162  002764  0E89               	movlw	137
  1163  002766  6F70               	movwf	(ADC_MAP@yf+2)& (0+255),b
  1164  002768  0E44               	movlw	68
  1165  00276A  6F71               	movwf	(ADC_MAP@yf+3)& (0+255),b
  1166  00276C  ECD4  F014         	call	_ADC_MAP	;wreg free
  1167  002770  C060  F108         	movff	?_ADC_MAP,_pressure
  1168  002774  C061  F109         	movff	?_ADC_MAP+1,_pressure+1
  1169  002778  C062  F10A         	movff	?_ADC_MAP+2,_pressure+2
  1170  00277C  C063  F10B         	movff	?_ADC_MAP+3,_pressure+3
  1171  002780                     
  1172                           ;main.c: 47:         sprintf(strUART,"* %f / %f / %f #\r\n",temp, hum, pressure);
  1173  002780  0E5C               	movlw	low _strUART
  1174  002782  0100               	movlb	0	; () banked
  1175  002784  6FC6               	movwf	sprintf@s& (0+255),b
  1176  002786  0E01               	movlw	high _strUART
  1177  002788  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1178  00278A  0E01               	movlw	low STR_1
  1179  00278C  6FC8               	movwf	sprintf@fmt& (0+255),b
  1180  00278E  0E08               	movlw	high STR_1
  1181  002790  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1182  002792  C0F1  F0CA         	movff	_temp,?_sprintf+4
  1183  002796  C0F2  F0CB         	movff	_temp+1,?_sprintf+5
  1184  00279A  C0F3  F0CC         	movff	_temp+2,?_sprintf+6
  1185  00279E  C0F4  F0CD         	movff	_temp+3,?_sprintf+7
  1186  0027A2  C0ED  F0CE         	movff	_hum,?_sprintf+8
  1187  0027A6  C0EE  F0CF         	movff	_hum+1,?_sprintf+9
  1188  0027AA  C0EF  F0D0         	movff	_hum+2,?_sprintf+10
  1189  0027AE  C0F0  F0D1         	movff	_hum+3,?_sprintf+11
  1190  0027B2  C108  F0D2         	movff	_pressure,?_sprintf+12
  1191  0027B6  C109  F0D3         	movff	_pressure+1,?_sprintf+13
  1192  0027BA  C10A  F0D4         	movff	_pressure+2,?_sprintf+14
  1193  0027BE  C10B  F0D5         	movff	_pressure+3,?_sprintf+15
  1194  0027C2  EC62  F01A         	call	_sprintf	;wreg free
  1195  0027C6                     
  1196                           ;main.c: 48:         UART_Write_Text(strUART);
  1197  0027C6  0E5C               	movlw	low _strUART
  1198  0027C8  6E02               	movwf	UART_Write_Text@text^0,c
  1199  0027CA  0E01               	movlw	high _strUART
  1200  0027CC  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  1201  0027CE  ECA2  F01B         	call	_UART_Write_Text	;wreg free
  1202  0027D2                     
  1203                           ;main.c: 50:         _delay((unsigned long)((500)*(20000000UL/4000.0)));
  1204  0027D2  0E0D               	movlw	13
  1205  0027D4  0100               	movlb	0	; () banked
  1206  0027D6  6FE4               	movwf	(??_main+1)& (0+255),b
  1207  0027D8  0EAF               	movlw	175
  1208  0027DA  6FE3               	movwf	??_main& (0+255),b
  1209  0027DC  0EB6               	movlw	182
  1210  0027DE                     u4507:
  1211  0027DE  2EE8               	decfsz	wreg,f,c
  1212  0027E0  D7FE               	bra	u4507
  1213  0027E2  2FE3               	decfsz	??_main& (0+255),f,b
  1214  0027E4  D7FC               	bra	u4507
  1215  0027E6  2FE4               	decfsz	(??_main+1)& (0+255),f,b
  1216  0027E8  D7FA               	bra	u4507
  1217  0027EA  F000               	nop	
  1218  0027EC  EF1E  F013         	goto	l3739
  1219  0027F0  EF07  F000         	goto	start
  1220  0027F4                     __end_of_main:
  1221                           	callstack 0
  1222                           
  1223 ;; *************** function _sprintf *****************
  1224 ;; Defined at:
  1225 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  s               2  102[BANK0 ] PTR unsigned char 
  1228 ;;		 -> strUART(50), 
  1229 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  1230 ;;		 -> STR_1(19), 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  f              11  120[BANK0 ] struct _IO_FILE
  1233 ;;  ap              2  118[BANK0 ] PTR void [1]
  1234 ;;		 -> ?_sprintf(2), 
  1235 ;;  ret             2    0        int 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  2  102[BANK0 ] int 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1245 ;;      Params:         0      16       0       0       0       0       0       0       0
  1246 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1248 ;;      Totals:         0      29       0       0       0       0       0       0       0
  1249 ;;Total ram usage:       29 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; Hardware stack levels required when called: 8
  1252 ;; This function calls:
  1253 ;;		_vfprintf
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text1
  1260  0034C4                     __ptext1:
  1261                           	callstack 0
  1262  0034C4                     _sprintf:
  1263                           	callstack 22
  1264  0034C4  0ECA               	movlw	low (?_sprintf+4)
  1265  0034C6  0100               	movlb	0	; () banked
  1266  0034C8  6FD6               	movwf	sprintf@ap& (0+255),b
  1267  0034CA  0E00               	movlw	high (?_sprintf+4)
  1268  0034CC  6FD7               	movwf	(sprintf@ap+1)& (0+255),b
  1269  0034CE  C0C6  F0D8         	movff	sprintf@s,sprintf@f
  1270  0034D2  C0C7  F0D9         	movff	sprintf@s+1,sprintf@f+1
  1271  0034D6                     
  1272                           ; BSR set to: 0
  1273  0034D6  0E00               	movlw	0
  1274  0034D8  6FDC               	movwf	(sprintf@f+4)& (0+255),b
  1275  0034DA  0E00               	movlw	0
  1276  0034DC  6FDB               	movwf	(sprintf@f+3)& (0+255),b
  1277  0034DE                     
  1278                           ; BSR set to: 0
  1279  0034DE  0E00               	movlw	0
  1280  0034E0  6FE2               	movwf	(sprintf@f+10)& (0+255),b
  1281  0034E2  0E00               	movlw	0
  1282  0034E4  6FE1               	movwf	(sprintf@f+9)& (0+255),b
  1283  0034E6                     
  1284                           ; BSR set to: 0
  1285  0034E6  0ED8               	movlw	low sprintf@f
  1286  0034E8  6FC0               	movwf	vfprintf@fp& (0+255),b
  1287  0034EA  0E00               	movlw	high sprintf@f
  1288  0034EC  6FC1               	movwf	(vfprintf@fp+1)& (0+255),b
  1289  0034EE  C0C8  F0C2         	movff	sprintf@fmt,vfprintf@fmt
  1290  0034F2  C0C9  F0C3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1291  0034F6  0ED6               	movlw	low sprintf@ap
  1292  0034F8  6FC4               	movwf	vfprintf@ap& (0+255),b
  1293  0034FA  0E00               	movlw	high sprintf@ap
  1294  0034FC  6FC5               	movwf	(vfprintf@ap+1)& (0+255),b
  1295  0034FE  EC03  F01A         	call	_vfprintf	;wreg free
  1296  003502  0100               	movlb	0	; () banked
  1297  003504  51DB               	movf	(sprintf@f+3)& (0+255),w,b
  1298  003506  25C6               	addwf	sprintf@s& (0+255),w,b
  1299  003508  6ED9               	movwf	fsr2l,c
  1300  00350A  51DC               	movf	(sprintf@f+4)& (0+255),w,b
  1301  00350C  21C7               	addwfc	(sprintf@s+1)& (0+255),w,b
  1302  00350E  6EDA               	movwf	fsr2h,c
  1303  003510  0E00               	movlw	0
  1304  003512  6EDF               	movwf	indf2,c
  1305  003514                     
  1306                           ; BSR set to: 0
  1307  003514  0012               	return		;funcret
  1308  003516                     __end_of_sprintf:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _vfprintf *****************
  1312 ;; Defined at:
  1313 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  fp              2   96[BANK0 ] PTR struct _IO_FILE
  1316 ;;		 -> sprintf@f(11), 
  1317 ;;  fmt             2   98[BANK0 ] PTR const unsigned char 
  1318 ;;		 -> STR_1(19), 
  1319 ;;  ap              2  100[BANK0 ] PTR PTR void 
  1320 ;;		 -> sprintf@ap(2), 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  1323 ;;		 -> STR_1(19), 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  2   96[BANK0 ] int 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1333 ;;      Params:         0       6       0       0       0       0       0       0       0
  1334 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1336 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1337 ;;Total ram usage:        8 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; Hardware stack levels required when called: 7
  1340 ;; This function calls:
  1341 ;;		_vfpfcnvrt
  1342 ;; This function is called by:
  1343 ;;		_sprintf
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text2
  1348  003406                     __ptext2:
  1349                           	callstack 0
  1350  003406                     _vfprintf:
  1351                           	callstack 22
  1352  003406                     
  1353                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1354  003406  C0C2  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  1355  00340A  C0C3  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1356  00340E                     
  1357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1358  00340E  0E00               	movlw	0
  1359  003410  0100               	movlb	0	; () banked
  1360  003412  6FF6               	movwf	(_nout+1)& (0+255),b
  1361  003414  0E00               	movlw	0
  1362  003416  6FF5               	movwf	_nout& (0+255),b
  1363                           
  1364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1365  003418  EF21  F01A         	goto	l3649
  1366  00341C                     l3647:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1370  00341C  C0C0  F0AE         	movff	vfprintf@fp,vfpfcnvrt@fp
  1371  003420  C0C1  F0AF         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1372  003424  0E5D               	movlw	low vfprintf@cfmt
  1373  003426  6FB0               	movwf	vfpfcnvrt@fmt& (0+255),b
  1374  003428  0E00               	movlw	high vfprintf@cfmt
  1375  00342A  6FB1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1376  00342C  C0C4  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  1377  003430  C0C5  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1378  003434  EC5B  F010         	call	_vfpfcnvrt	;wreg free
  1379  003438  0100               	movlb	0	; () banked
  1380  00343A  51AE               	movf	?_vfpfcnvrt& (0+255),w,b
  1381  00343C  27F5               	addwf	_nout& (0+255),f,b
  1382  00343E  51AF               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1383  003440  23F6               	addwfc	(_nout+1)& (0+255),f,b
  1384  003442                     l3649:
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1388  003442  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1389  003446  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1390  00344A                     	if	0	;tblptru may be non-zero
  1391  00344A                     	endif
  1392  00344A                     	if	0	;tblptru may be non-zero
  1393  00344A                     	endif
  1394  00344A  0008               	tblrd		*
  1395  00344C  50F5               	movf	tablat,w,c
  1396  00344E  0900               	iorlw	0
  1397  003450  A4D8               	btfss	status,2,c
  1398  003452  EF2D  F01A         	goto	u4411
  1399  003456  EF2F  F01A         	goto	u4410
  1400  00345A                     u4411:
  1401  00345A  EF0E  F01A         	goto	l3647
  1402  00345E                     u4410:
  1403  00345E                     
  1404                           ; BSR set to: 0
  1405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1406  00345E  C0F5  F0C0         	movff	_nout,?_vfprintf
  1407  003462  C0F6  F0C1         	movff	_nout+1,?_vfprintf+1
  1408  003466                     
  1409                           ; BSR set to: 0
  1410  003466  0012               	return		;funcret
  1411  003468                     __end_of_vfprintf:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _vfpfcnvrt *****************
  1415 ;; Defined at:
  1416 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
  1419 ;;		 -> sprintf@f(11), 
  1420 ;;  fmt             2   80[BANK0 ] PTR PTR unsigned char 
  1421 ;;		 -> vfprintf@cfmt(2), 
  1422 ;;  ap              2   82[BANK0 ] PTR PTR void 
  1423 ;;		 -> sprintf@ap(2), 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  llu             8    0        unsigned long long 
  1426 ;;  ll              8    0        long long 
  1427 ;;  f               4   88[BANK0 ] long long 
  1428 ;;  ct              3   92[BANK0 ] unsigned char [3]
  1429 ;;  vp              3    0        PTR void 
  1430 ;;  cp              3    0        PTR unsigned char 
  1431 ;;  i               2    0        int 
  1432 ;;  done            2    0        int 
  1433 ;;  c               1   95[BANK0 ] unsigned char 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  2   78[BANK0 ] int 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1443 ;;      Params:         0       6       0       0       0       0       0       0       0
  1444 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1445 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1446 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1447 ;;Total ram usage:       18 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 6
  1450 ;; This function calls:
  1451 ;;		_efgtoa
  1452 ;;		_fputc
  1453 ;;		_isupper
  1454 ;;		_strncmp
  1455 ;;		_tolower
  1456 ;; This function is called by:
  1457 ;;		_vfprintf
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text3
  1462  0020B6                     __ptext3:
  1463                           	callstack 0
  1464  0020B6                     _vfpfcnvrt:
  1465                           	callstack 22
  1466  0020B6                     
  1467                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1468  0020B6  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1469  0020BA  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1470  0020BE  CFDE FFF6          	movff	postinc2,tblptrl
  1471  0020C2  CFDD FFF7          	movff	postdec2,tblptrh
  1472  0020C6                     	if	0	;tblptru may be non-zero
  1473  0020C6                     	endif
  1474  0020C6                     	if	0	;tblptru may be non-zero
  1475  0020C6                     	endif
  1476  0020C6  0008               	tblrd		*
  1477  0020C8  50F5               	movf	tablat,w,c
  1478  0020CA  0A25               	xorlw	37
  1479  0020CC  A4D8               	btfss	status,2,c
  1480  0020CE  EF6B  F010         	goto	u4201
  1481  0020D2  EF6D  F010         	goto	u4200
  1482  0020D6                     u4201:
  1483  0020D6  EFD9  F011         	goto	l3563
  1484  0020DA                     u4200:
  1485  0020DA                     
  1486                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1487  0020DA  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1488  0020DE  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1489  0020E2  2ADE               	incf	postinc2,f,c
  1490  0020E4  0E00               	movlw	0
  1491  0020E6  22DD               	addwfc	postdec2,f,c
  1492  0020E8                     
  1493                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1494  0020E8  0E00               	movlw	0
  1495  0020EA  0100               	movlb	0	; () banked
  1496  0020EC  6FF8               	movwf	(_width+1)& (0+255),b
  1497  0020EE  0E00               	movlw	0
  1498  0020F0  6FF7               	movwf	_width& (0+255),b
  1499  0020F2  C0F7  F0FB         	movff	_width,_flags
  1500  0020F6  C0F8  F0FC         	movff	_width+1,_flags+1
  1501  0020FA                     
  1502                           ; BSR set to: 0
  1503                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1504  0020FA  69F9               	setf	_prec& (0+255),b
  1505  0020FC  69FA               	setf	(_prec+1)& (0+255),b
  1506  0020FE                     
  1507                           ; BSR set to: 0
  1508                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1509  0020FE  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1510  002102  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1511  002106  CFDE FFF6          	movff	postinc2,tblptrl
  1512  00210A  CFDD FFF7          	movff	postdec2,tblptrh
  1513  00210E                     	if	0	;tblptru may be non-zero
  1514  00210E                     	endif
  1515  00210E                     	if	0	;tblptru may be non-zero
  1516  00210E                     	endif
  1517  00210E  0008               	tblrd		*
  1518  002110  50F5               	movf	tablat,w,c
  1519  002112  6E07               	movwf	tolower@c^0,c
  1520  002114  6A08               	clrf	(tolower@c+1)^0,c
  1521  002116  ECAE  F01A         	call	_tolower	;wreg free
  1522  00211A  5007               	movf	?_tolower^0,w,c
  1523  00211C  0100               	movlb	0	; () banked
  1524  00211E  6FBC               	movwf	vfpfcnvrt@ct& (0+255),b
  1525  002120                     
  1526                           ; BSR set to: 0
  1527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1528  002120  51BC               	movf	vfpfcnvrt@ct& (0+255),w,b
  1529  002122  B4D8               	btfsc	status,2,c
  1530  002124  EF96  F010         	goto	u4211
  1531  002128  EF98  F010         	goto	u4210
  1532  00212C                     u4211:
  1533  00212C  EFD2  F010         	goto	l3519
  1534  002130                     u4210:
  1535  002130                     
  1536                           ; BSR set to: 0
  1537                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1538  002130  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1539  002134  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1540  002138  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  1541  00213C  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  1542  002140  0E01               	movlw	1
  1543  002142  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  1544  002144  0E00               	movlw	0
  1545  002146  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1546  002148  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1547  00214C  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1548  002150                     	if	0	;tblptru may be non-zero
  1549  002150                     	endif
  1550  002150                     	if	0	;tblptru may be non-zero
  1551  002150                     	endif
  1552  002150  0008               	tblrd		*
  1553  002152  50F5               	movf	tablat,w,c
  1554  002154  6E07               	movwf	tolower@c^0,c
  1555  002156  6A08               	clrf	(tolower@c+1)^0,c
  1556  002158  ECAE  F01A         	call	_tolower	;wreg free
  1557  00215C  5007               	movf	?_tolower^0,w,c
  1558  00215E  0100               	movlb	0	; () banked
  1559  002160  6FBD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1560  002162                     
  1561                           ; BSR set to: 0
  1562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1563  002162  51BD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1564  002164  B4D8               	btfsc	status,2,c
  1565  002166  EFB7  F010         	goto	u4221
  1566  00216A  EFB9  F010         	goto	u4220
  1567  00216E                     u4221:
  1568  00216E  EFD2  F010         	goto	l3519
  1569  002172                     u4220:
  1570  002172                     
  1571                           ; BSR set to: 0
  1572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1573  002172  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1574  002176  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1575  00217A  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  1576  00217E  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  1577  002182  0E02               	movlw	2
  1578  002184  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  1579  002186  0E00               	movlw	0
  1580  002188  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1581  00218A  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1582  00218E  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1583  002192                     	if	0	;tblptru may be non-zero
  1584  002192                     	endif
  1585  002192                     	if	0	;tblptru may be non-zero
  1586  002192                     	endif
  1587  002192  0008               	tblrd		*
  1588  002194  50F5               	movf	tablat,w,c
  1589  002196  6E07               	movwf	tolower@c^0,c
  1590  002198  6A08               	clrf	(tolower@c+1)^0,c
  1591  00219A  ECAE  F01A         	call	_tolower	;wreg free
  1592  00219E  5007               	movf	?_tolower^0,w,c
  1593  0021A0  0100               	movlb	0	; () banked
  1594  0021A2  6FBE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1595  0021A4                     l3519:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1599  0021A4  0E66               	movlw	102
  1600  0021A6  19BC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1601  0021A8  A4D8               	btfss	status,2,c
  1602  0021AA  EFD9  F010         	goto	u4231
  1603  0021AE  EFDB  F010         	goto	u4230
  1604  0021B2                     u4231:
  1605  0021B2  EF1B  F011         	goto	l3531
  1606  0021B6                     u4230:
  1607  0021B6                     
  1608                           ; BSR set to: 0
  1609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1610  0021B6  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1611  0021BA  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1612  0021BE  CFDE FFF6          	movff	postinc2,tblptrl
  1613  0021C2  CFDD FFF7          	movff	postdec2,tblptrh
  1614  0021C6                     	if	0	;tblptru may be non-zero
  1615  0021C6                     	endif
  1616  0021C6                     	if	0	;tblptru may be non-zero
  1617  0021C6                     	endif
  1618  0021C6  0008               	tblrd		*
  1619  0021C8  CFF5 F0BF          	movff	tablat,vfpfcnvrt@c
  1620  0021CC                     
  1621                           ; BSR set to: 0
  1622                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1623  0021CC  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1624  0021D0  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1625  0021D4  2ADE               	incf	postinc2,f,c
  1626  0021D6  0E00               	movlw	0
  1627  0021D8  22DD               	addwfc	postdec2,f,c
  1628  0021DA                     
  1629                           ; BSR set to: 0
  1630                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1631  0021DA  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1632  0021DE  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1633  0021E2  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  1634  0021E6  0E04               	movlw	4
  1635  0021E8  26DE               	addwf	postinc2,f,c
  1636  0021EA  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  1637  0021EE  0E00               	movlw	0
  1638  0021F0  22DD               	addwfc	postdec2,f,c
  1639  0021F2  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1640  0021F6  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1641  0021FA  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  1642  0021FE  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  1643  002202  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  1644  002206  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  1645  00220A                     l3527:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1649  00220A  C0AE  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
  1650  00220E  C0AF  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1651  002212  C0B8  F072         	movff	vfpfcnvrt@f,efgtoa@f
  1652  002216  C0B9  F073         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1653  00221A  C0BA  F074         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1654  00221E  C0BB  F075         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1655  002222  C0BF  F076         	movff	vfpfcnvrt@c,efgtoa@c
  1656  002226  EC14  F004         	call	_efgtoa	;wreg free
  1657  00222A  C070  F0AE         	movff	?_efgtoa,?_vfpfcnvrt
  1658  00222E  C071  F0AF         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1659  002232  EFF4  F011         	goto	l932
  1660  002236                     l3531:
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1664  002236  0EBC               	movlw	low vfpfcnvrt@ct
  1665  002238  6E01               	movwf	strncmp@_l^0,c
  1666  00223A  0E00               	movlw	high vfpfcnvrt@ct
  1667  00223C  6E02               	movwf	(strncmp@_l+1)^0,c
  1668  00223E  0E24               	movlw	low STR_10
  1669  002240  6E03               	movwf	strncmp@_r^0,c
  1670  002242  0E08               	movlw	high STR_10
  1671  002244  6E04               	movwf	(strncmp@_r+1)^0,c
  1672  002246  0E00               	movlw	0
  1673  002248  6E06               	movwf	(strncmp@n+1)^0,c
  1674  00224A  0E02               	movlw	2
  1675  00224C  6E05               	movwf	strncmp@n^0,c
  1676  00224E  EC6F  F017         	call	_strncmp	;wreg free
  1677  002252  5001               	movf	?_strncmp^0,w,c
  1678  002254  1002               	iorwf	(?_strncmp+1)^0,w,c
  1679  002256  A4D8               	btfss	status,2,c
  1680  002258  EF30  F011         	goto	u4241
  1681  00225C  EF32  F011         	goto	u4240
  1682  002260                     u4241:
  1683  002260  EFA1  F011         	goto	l3547
  1684  002264                     u4240:
  1685  002264                     
  1686                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  1687  002264  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1688  002268  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1689  00226C  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  1690  002270  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  1691  002274  0E01               	movlw	1
  1692  002276  0100               	movlb	0	; () banked
  1693  002278  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  1694  00227A  0E00               	movlw	0
  1695  00227C  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1696  00227E  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1697  002282  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1698  002286                     	if	0	;tblptru may be non-zero
  1699  002286                     	endif
  1700  002286                     	if	0	;tblptru may be non-zero
  1701  002286                     	endif
  1702  002286  0008               	tblrd		*
  1703  002288  CFF5 F0BF          	movff	tablat,vfpfcnvrt@c
  1704  00228C                     
  1705                           ; BSR set to: 0
  1706  00228C  0EBF               	movlw	191
  1707  00228E  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  1708  002290  0EFF               	movlw	255
  1709  002292  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1710  002294  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1711  002298  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1712  00229C  CFDE FFF6          	movff	postinc2,tblptrl
  1713  0022A0  CFDD FFF7          	movff	postdec2,tblptrh
  1714  0022A4                     	if	0	;tblptru may be non-zero
  1715  0022A4                     	endif
  1716  0022A4                     	if	0	;tblptru may be non-zero
  1717  0022A4                     	endif
  1718  0022A4  0008               	tblrd		*
  1719  0022A6  50F5               	movf	tablat,w,c
  1720  0022A8  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1721  0022AA  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1722  0022AC  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  1723  0022AE  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1724  0022B0  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1725  0022B2  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1726  0022B4  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1727  0022B6  E107               	bnz	u4251
  1728  0022B8  0E1A               	movlw	26
  1729  0022BA  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1730  0022BC  B0D8               	btfsc	status,0,c
  1731  0022BE  EF63  F011         	goto	u4251
  1732  0022C2  EF65  F011         	goto	u4250
  1733  0022C6                     u4251:
  1734  0022C6  EF7F  F011         	goto	l3541
  1735  0022CA                     u4250:
  1736  0022CA                     
  1737                           ; BSR set to: 0
  1738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1739  0022CA  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1740  0022CE  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1741  0022D2  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  1742  0022D6  0E04               	movlw	4
  1743  0022D8  26DE               	addwf	postinc2,f,c
  1744  0022DA  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  1745  0022DE  0E00               	movlw	0
  1746  0022E0  22DD               	addwfc	postdec2,f,c
  1747  0022E2  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1748  0022E6  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1749  0022EA  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  1750  0022EE  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  1751  0022F2  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  1752  0022F6  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1755  0022FA  EF97  F011         	goto	l937
  1756  0022FE                     l3541:
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1760  0022FE  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1761  002302  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1762  002306  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  1763  00230A  0E04               	movlw	4
  1764  00230C  26DE               	addwf	postinc2,f,c
  1765  00230E  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  1766  002312  0E00               	movlw	0
  1767  002314  22DD               	addwfc	postdec2,f,c
  1768  002316  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1769  00231A  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1770  00231E  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  1771  002322  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  1772  002326  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  1773  00232A  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  1774  00232E                     l937:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1778  00232E  0E02               	movlw	2
  1779  002330  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1780  002334  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1781  002338  26DE               	addwf	postinc2,f,c
  1782  00233A  0E00               	movlw	0
  1783  00233C  22DD               	addwfc	postdec2,f,c
  1784  00233E  EF05  F011         	goto	l3527
  1785  002342                     l3547:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1788  002342  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1789  002346  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1790  00234A  CFDE FFF6          	movff	postinc2,tblptrl
  1791  00234E  CFDD FFF7          	movff	postdec2,tblptrh
  1792  002352                     	if	0	;tblptru may be non-zero
  1793  002352                     	endif
  1794  002352                     	if	0	;tblptru may be non-zero
  1795  002352                     	endif
  1796  002352  0008               	tblrd		*
  1797  002354  50F5               	movf	tablat,w,c
  1798  002356  0A25               	xorlw	37
  1799  002358  A4D8               	btfss	status,2,c
  1800  00235A  EFB1  F011         	goto	u4261
  1801  00235E  EFB3  F011         	goto	u4260
  1802  002362                     u4261:
  1803  002362  EFCB  F011         	goto	l3557
  1804  002366                     u4260:
  1805  002366                     
  1806                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1807  002366  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1808  00236A  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1809  00236E  2ADE               	incf	postinc2,f,c
  1810  002370  0E00               	movlw	0
  1811  002372  22DD               	addwfc	postdec2,f,c
  1812  002374                     
  1813                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1814  002374  0E00               	movlw	0
  1815  002376  6E02               	movwf	(fputc@c+1)^0,c
  1816  002378  0E25               	movlw	37
  1817  00237A  6E01               	movwf	fputc@c^0,c
  1818  00237C  C0AE  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1819  002380  C0AF  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1820  002384  ECDA  F017         	call	_fputc	;wreg free
  1821  002388                     l3553:
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1824  002388  0E00               	movlw	0
  1825  00238A  0100               	movlb	0	; () banked
  1826  00238C  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1827  00238E  0E01               	movlw	1
  1828  002390  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  1829  002392  EFF4  F011         	goto	l932
  1830  002396                     l3557:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1833  002396  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1834  00239A  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1835  00239E  2ADE               	incf	postinc2,f,c
  1836  0023A0  0E00               	movlw	0
  1837  0023A2  22DD               	addwfc	postdec2,f,c
  1838  0023A4                     
  1839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1840  0023A4  0E00               	movlw	0
  1841  0023A6  0100               	movlb	0	; () banked
  1842  0023A8  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1843  0023AA  0E00               	movlw	0
  1844  0023AC  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  1845  0023AE  EFF4  F011         	goto	l932
  1846  0023B2                     l3563:
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1849  0023B2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1850  0023B6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1851  0023BA  CFDE FFF6          	movff	postinc2,tblptrl
  1852  0023BE  CFDD FFF7          	movff	postdec2,tblptrh
  1853  0023C2                     	if	0	;tblptru may be non-zero
  1854  0023C2                     	endif
  1855  0023C2                     	if	0	;tblptru may be non-zero
  1856  0023C2                     	endif
  1857  0023C2  0008               	tblrd		*
  1858  0023C4  50F5               	movf	tablat,w,c
  1859  0023C6  6E01               	movwf	fputc@c^0,c
  1860  0023C8  6A02               	clrf	(fputc@c+1)^0,c
  1861  0023CA  C0AE  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1862  0023CE  C0AF  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1863  0023D2  ECDA  F017         	call	_fputc	;wreg free
  1864  0023D6                     
  1865                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1866  0023D6  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1867  0023DA  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1868  0023DE  2ADE               	incf	postinc2,f,c
  1869  0023E0  0E00               	movlw	0
  1870  0023E2  22DD               	addwfc	postdec2,f,c
  1871  0023E4  EFC4  F011         	goto	l3553
  1872  0023E8                     l932:
  1873  0023E8  0012               	return		;funcret
  1874  0023EA                     __end_of_vfpfcnvrt:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function _strncmp *****************
  1878 ;; Defined at:
  1879 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1882 ;;		 -> vfpfcnvrt@ct(3), 
  1883 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1884 ;;		 -> STR_12(3), 
  1885 ;;  n               2    4[COMRAM] unsigned int 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1888 ;;		 -> STR_12(3), 
  1889 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1890 ;;		 -> vfpfcnvrt@ct(3), 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  2    0[COMRAM] int 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1900 ;;      Params:         6       0       0       0       0       0       0       0       0
  1901 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1902 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1903 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1904 ;;Total ram usage:       11 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 1
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_vfpfcnvrt
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text4
  1915  002EDE                     __ptext4:
  1916                           	callstack 0
  1917  002EDE                     _strncmp:
  1918                           	callstack 26
  1919  002EDE  C001  F008         	movff	strncmp@_l,strncmp@l
  1920  002EE2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1921  002EE6  C003  F00A         	movff	strncmp@_r,strncmp@r
  1922  002EEA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1923  002EEE  0605               	decf	strncmp@n^0,f,c
  1924  002EF0  A0D8               	btfss	status,0,c
  1925  002EF2  0606               	decf	(strncmp@n+1)^0,f,c
  1926  002EF4  2805               	incf	strncmp@n^0,w,c
  1927  002EF6  E106               	bnz	u4151
  1928  002EF8  2806               	incf	(strncmp@n+1)^0,w,c
  1929  002EFA  A4D8               	btfss	status,2,c
  1930  002EFC  EF82  F017         	goto	u4151
  1931  002F00  EF84  F017         	goto	u4150
  1932  002F04                     u4151:
  1933  002F04  EF91  F017         	goto	l3489
  1934  002F08                     u4150:
  1935  002F08  0E00               	movlw	0
  1936  002F0A  6E02               	movwf	(?_strncmp+1)^0,c
  1937  002F0C  0E00               	movlw	0
  1938  002F0E  6E01               	movwf	?_strncmp^0,c
  1939  002F10  EFD9  F017         	goto	l1013
  1940  002F14                     l3487:
  1941  002F14  4A08               	infsnz	strncmp@l^0,f,c
  1942  002F16  2A09               	incf	(strncmp@l+1)^0,f,c
  1943  002F18  4A0A               	infsnz	strncmp@r^0,f,c
  1944  002F1A  2A0B               	incf	(strncmp@r+1)^0,f,c
  1945  002F1C  0605               	decf	strncmp@n^0,f,c
  1946  002F1E  A0D8               	btfss	status,0,c
  1947  002F20  0606               	decf	(strncmp@n+1)^0,f,c
  1948  002F22                     l3489:
  1949  002F22  C008  FFD9         	movff	strncmp@l,fsr2l
  1950  002F26  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1951  002F2A  50DF               	movf	indf2,w,c
  1952  002F2C  B4D8               	btfsc	status,2,c
  1953  002F2E  EF9B  F017         	goto	u4161
  1954  002F32  EF9D  F017         	goto	u4160
  1955  002F36                     u4161:
  1956  002F36  EFC8  F017         	goto	l3497
  1957  002F3A                     u4160:
  1958  002F3A  C00A  FFF6         	movff	strncmp@r,tblptrl
  1959  002F3E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1960  002F42                     	if	0	;tblptru may be non-zero
  1961  002F42                     	endif
  1962  002F42                     	if	0	;tblptru may be non-zero
  1963  002F42                     	endif
  1964  002F42  0008               	tblrd		*
  1965  002F44  50F5               	movf	tablat,w,c
  1966  002F46  0900               	iorlw	0
  1967  002F48  B4D8               	btfsc	status,2,c
  1968  002F4A  EFA9  F017         	goto	u4171
  1969  002F4E  EFAB  F017         	goto	u4170
  1970  002F52                     u4171:
  1971  002F52  EFC8  F017         	goto	l3497
  1972  002F56                     u4170:
  1973  002F56  5005               	movf	strncmp@n^0,w,c
  1974  002F58  1006               	iorwf	(strncmp@n+1)^0,w,c
  1975  002F5A  B4D8               	btfsc	status,2,c
  1976  002F5C  EFB2  F017         	goto	u4181
  1977  002F60  EFB4  F017         	goto	u4180
  1978  002F64                     u4181:
  1979  002F64  EFC8  F017         	goto	l3497
  1980  002F68                     u4180:
  1981  002F68  C008  FFD9         	movff	strncmp@l,fsr2l
  1982  002F6C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1983  002F70  50DF               	movf	indf2,w,c
  1984  002F72  6E07               	movwf	??_strncmp^0,c
  1985  002F74  C00A  FFF6         	movff	strncmp@r,tblptrl
  1986  002F78  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1987  002F7C                     	if	0	;tblptru may be non-zero
  1988  002F7C                     	endif
  1989  002F7C                     	if	0	;tblptru may be non-zero
  1990  002F7C                     	endif
  1991  002F7C  0008               	tblrd		*
  1992  002F7E  50F5               	movf	tablat,w,c
  1993  002F80  1807               	xorwf	??_strncmp^0,w,c
  1994  002F82  B4D8               	btfsc	status,2,c
  1995  002F84  EFC6  F017         	goto	u4191
  1996  002F88  EFC8  F017         	goto	u4190
  1997  002F8C                     u4191:
  1998  002F8C  EF8A  F017         	goto	l3487
  1999  002F90                     u4190:
  2000  002F90                     l3497:
  2001  002F90  C008  FFD9         	movff	strncmp@l,fsr2l
  2002  002F94  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2003  002F98  50DF               	movf	indf2,w,c
  2004  002F9A  6E07               	movwf	??_strncmp^0,c
  2005  002F9C  C00A  FFF6         	movff	strncmp@r,tblptrl
  2006  002FA0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2007  002FA4                     	if	0	;tblptru may be non-zero
  2008  002FA4                     	endif
  2009  002FA4                     	if	0	;tblptru may be non-zero
  2010  002FA4                     	endif
  2011  002FA4  0008               	tblrd		*
  2012  002FA6  50F5               	movf	tablat,w,c
  2013  002FA8  5C07               	subwf	??_strncmp^0,w,c
  2014  002FAA  6E01               	movwf	?_strncmp^0,c
  2015  002FAC  6A02               	clrf	(?_strncmp+1)^0,c
  2016  002FAE  A0D8               	btfss	status,0,c
  2017  002FB0  0602               	decf	(?_strncmp+1)^0,f,c
  2018  002FB2                     l1013:
  2019  002FB2  0012               	return		;funcret
  2020  002FB4                     __end_of_strncmp:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _efgtoa *****************
  2024 ;; Defined at:
  2025 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2028 ;;		 -> sprintf@f(11), 
  2029 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
  2030 ;;  c               1   22[BANK0 ] unsigned char 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  u               4   74[BANK0 ] unsigned char 
  2033 ;;  g               4   66[BANK0 ] unsigned char 
  2034 ;;  l               4   60[BANK0 ] unsigned char 
  2035 ;;  h               4   56[BANK0 ] unsigned char 
  2036 ;;  ou              4   42[BANK0 ] unsigned char 
  2037 ;;  n               2   72[BANK0 ] int 
  2038 ;;  e               2   70[BANK0 ] int 
  2039 ;;  i               2   64[BANK0 ] int 
  2040 ;;  w               2   52[BANK0 ] int 
  2041 ;;  p               2   50[BANK0 ] int 
  2042 ;;  sign            2   48[BANK0 ] int 
  2043 ;;  d               2   46[BANK0 ] int 
  2044 ;;  m               2   40[BANK0 ] int 
  2045 ;;  ne              2   38[BANK0 ] int 
  2046 ;;  pp              2   36[BANK0 ] int 
  2047 ;;  t               2   34[BANK0 ] int 
  2048 ;;  mode            1   55[BANK0 ] unsigned char 
  2049 ;;  nmode           1   54[BANK0 ] unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  2   16[BANK0 ] int 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2059 ;;      Params:         0       7       0       0       0       0       0       0       0
  2060 ;;      Locals:         0      50       0       0       0       0       0       0       0
  2061 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2062 ;;      Totals:         0      62       0       0       0       0       0       0       0
  2063 ;;Total ram usage:       62 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 5
  2066 ;; This function calls:
  2067 ;;		___awdiv
  2068 ;;		___awmod
  2069 ;;		___fladd
  2070 ;;		___fldiv
  2071 ;;		___fleq
  2072 ;;		___flge
  2073 ;;		___flmul
  2074 ;;		___flneg
  2075 ;;		___flsub
  2076 ;;		___fltol
  2077 ;;		___fpclassifyf
  2078 ;;		_floorf
  2079 ;;		_isupper
  2080 ;;		_pad
  2081 ;;		_strcpy
  2082 ;;		_tolower
  2083 ;; This function is called by:
  2084 ;;		_vfpfcnvrt
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text5
  2089  000828                     __ptext5:
  2090                           	callstack 0
  2091  000828                     _efgtoa:
  2092                           	callstack 22
  2093  000828                     
  2094                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2095  000828  0E00               	movlw	0
  2096  00082A  0100               	movlb	0	; () banked
  2097  00082C  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  2098  00082E  0E00               	movlw	0
  2099  000830  6F90               	movwf	efgtoa@sign& (0+255),b
  2100  000832                     
  2101                           ; BSR set to: 0
  2102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2103  000832  C072  F0A2         	movff	efgtoa@f,efgtoa@g
  2104  000836  C073  F0A3         	movff	efgtoa@f+1,efgtoa@g+1
  2105  00083A  C074  F0A4         	movff	efgtoa@f+2,efgtoa@g+2
  2106  00083E  C075  F0A5         	movff	efgtoa@f+3,efgtoa@g+3
  2107  000842                     
  2108                           ; BSR set to: 0
  2109                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2110  000842  BFA5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2111  000844  EF28  F004         	goto	u3670
  2112  000848  EF26  F004         	goto	u3671
  2113  00084C                     u3671:
  2114  00084C  EF3E  F004         	goto	l3185
  2115  000850                     u3670:
  2116  000850                     
  2117                           ; BSR set to: 0
  2118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2119  000850  0E00               	movlw	0
  2120  000852  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  2121  000854  0E01               	movlw	1
  2122  000856  6F90               	movwf	efgtoa@sign& (0+255),b
  2123  000858                     
  2124                           ; BSR set to: 0
  2125                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2126  000858  C0A2  F001         	movff	efgtoa@g,___flneg@f1
  2127  00085C  C0A3  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2128  000860  C0A4  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2129  000864  C0A5  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2130  000868  EC52  F01B         	call	___flneg	;wreg free
  2131  00086C  C001  F0A2         	movff	?___flneg,efgtoa@g
  2132  000870  C002  F0A3         	movff	?___flneg+1,efgtoa@g+1
  2133  000874  C003  F0A4         	movff	?___flneg+2,efgtoa@g+2
  2134  000878  C004  F0A5         	movff	?___flneg+3,efgtoa@g+3
  2135  00087C                     l3185:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2138  00087C  0E00               	movlw	0
  2139  00087E  0100               	movlb	0	; () banked
  2140  000880  6FA9               	movwf	(efgtoa@n+1)& (0+255),b
  2141  000882  0E00               	movlw	0
  2142  000884  6FA8               	movwf	efgtoa@n& (0+255),b
  2143  000886                     
  2144                           ; BSR set to: 0
  2145                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2146  000886  C0F7  F094         	movff	_width,efgtoa@w
  2147  00088A  C0F8  F095         	movff	_width+1,efgtoa@w+1
  2148  00088E                     
  2149                           ; BSR set to: 0
  2150                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2151  00088E  5190               	movf	efgtoa@sign& (0+255),w,b
  2152  000890  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2153  000892  A4D8               	btfss	status,2,c
  2154  000894  EF4E  F004         	goto	u3681
  2155  000898  EF50  F004         	goto	u3680
  2156  00089C                     u3681:
  2157  00089C  EF57  F004         	goto	l3193
  2158  0008A0                     u3680:
  2159  0008A0                     
  2160                           ; BSR set to: 0
  2161  0008A0  A5FB               	btfss	_flags& (0+255),2,b
  2162  0008A2  EF55  F004         	goto	u3691
  2163  0008A6  EF57  F004         	goto	u3690
  2164  0008AA                     u3691:
  2165  0008AA  EF71  F004         	goto	l3205
  2166  0008AE                     u3690:
  2167  0008AE                     l3193:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2171  0008AE  5190               	movf	efgtoa@sign& (0+255),w,b
  2172  0008B0  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2173  0008B2  A4D8               	btfss	status,2,c
  2174  0008B4  EF5E  F004         	goto	u3701
  2175  0008B8  EF60  F004         	goto	u3700
  2176  0008BC                     u3701:
  2177  0008BC  EF66  F004         	goto	l3197
  2178  0008C0                     u3700:
  2179  0008C0                     
  2180                           ; BSR set to: 0
  2181  0008C0  0E00               	movlw	0
  2182  0008C2  6F7D               	movwf	(_efgtoa$942+1)& (0+255),b
  2183  0008C4  0E2B               	movlw	43
  2184  0008C6  6F7C               	movwf	_efgtoa$942& (0+255),b
  2185  0008C8  EF6A  F004         	goto	l3199
  2186  0008CC                     l3197:
  2187                           
  2188                           ; BSR set to: 0
  2189  0008CC  0E00               	movlw	0
  2190  0008CE  6F7D               	movwf	(_efgtoa$942+1)& (0+255),b
  2191  0008D0  0E2D               	movlw	45
  2192  0008D2  6F7C               	movwf	_efgtoa$942& (0+255),b
  2193  0008D4                     l3199:
  2194                           
  2195                           ; BSR set to: 0
  2196  0008D4  C07C  F10C         	movff	_efgtoa$942,_dbuf
  2197  0008D8                     
  2198                           ; BSR set to: 0
  2199                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2200  0008D8  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  2201  0008DA  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  2202  0008DC                     
  2203                           ; BSR set to: 0
  2204                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2205  0008DC  0794               	decf	efgtoa@w& (0+255),f,b
  2206  0008DE  A0D8               	btfss	status,0,c
  2207  0008E0  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  2208  0008E2                     l3205:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2212  0008E2  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  2213  0008E6  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2214  0008EA  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2215  0008EE  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2216  0008F2  EC7C  F016         	call	___fpclassifyf	;wreg free
  2217  0008F6  0401               	decf	?___fpclassifyf^0,w,c
  2218  0008F8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2219  0008FA  A4D8               	btfss	status,2,c
  2220  0008FC  EF82  F004         	goto	u3711
  2221  000900  EF84  F004         	goto	u3710
  2222  000904                     u3711:
  2223  000904  EFCE  F004         	goto	l3223
  2224  000908                     u3710:
  2225  000908  0EBF               	movlw	191
  2226  00090A  0100               	movlb	0	; () banked
  2227  00090C  6F77               	movwf	??_efgtoa& (0+255),b
  2228  00090E  0EFF               	movlw	255
  2229  000910  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2230  000912  5176               	movf	efgtoa@c& (0+255),w,b
  2231  000914  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  2232  000916  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  2233  000918  5177               	movf	??_efgtoa& (0+255),w,b
  2234  00091A  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2235  00091C  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2236  00091E  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2237  000920  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2238  000922  E107               	bnz	u3721
  2239  000924  0E1A               	movlw	26
  2240  000926  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2241  000928  B0D8               	btfsc	status,0,c
  2242  00092A  EF99  F004         	goto	u3721
  2243  00092E  EF9B  F004         	goto	u3720
  2244  000932                     u3721:
  2245  000932  EFA9  F004         	goto	l3215
  2246  000936                     u3720:
  2247  000936                     
  2248                           ; BSR set to: 0
  2249                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2250  000936  0E0C               	movlw	low _dbuf
  2251  000938  25A8               	addwf	efgtoa@n& (0+255),w,b
  2252  00093A  6E01               	movwf	strcpy@dest^0,c
  2253  00093C  0E01               	movlw	high _dbuf
  2254  00093E  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2255  000940  6E02               	movwf	(strcpy@dest+1)^0,c
  2256  000942  0E14               	movlw	low STR_2
  2257  000944  6E03               	movwf	strcpy@src^0,c
  2258  000946  0E08               	movlw	high STR_2
  2259  000948  6E04               	movwf	(strcpy@src+1)^0,c
  2260  00094A  EC34  F01A         	call	_strcpy	;wreg free
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2263  00094E  EFB5  F004         	goto	l3217
  2264  000952                     l3215:
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2268  000952  0E0C               	movlw	low _dbuf
  2269  000954  25A8               	addwf	efgtoa@n& (0+255),w,b
  2270  000956  6E01               	movwf	strcpy@dest^0,c
  2271  000958  0E01               	movlw	high _dbuf
  2272  00095A  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2273  00095C  6E02               	movwf	(strcpy@dest+1)^0,c
  2274  00095E  0E1C               	movlw	low STR_3
  2275  000960  6E03               	movwf	strcpy@src^0,c
  2276  000962  0E08               	movlw	high STR_3
  2277  000964  6E04               	movwf	(strcpy@src+1)^0,c
  2278  000966  EC34  F01A         	call	_strcpy	;wreg free
  2279  00096A                     l3217:
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2282  00096A  0100               	movlb	0	; () banked
  2283  00096C  0EFD               	movlw	253
  2284  00096E  2794               	addwf	efgtoa@w& (0+255),f,b
  2285  000970  0EFF               	movlw	255
  2286  000972  2395               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2287  000974                     l3219:
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2290  000974  C070  F011         	movff	efgtoa@fp,pad@fp
  2291  000978  C071  F012         	movff	efgtoa@fp+1,pad@fp+1
  2292  00097C  0E0C               	movlw	low _dbuf
  2293  00097E  6E13               	movwf	pad@buf^0,c
  2294  000980  0E01               	movlw	high _dbuf
  2295  000982  6E14               	movwf	(pad@buf+1)^0,c
  2296  000984  C094  F015         	movff	efgtoa@w,pad@p
  2297  000988  C095  F016         	movff	efgtoa@w+1,pad@p+1
  2298  00098C  EC3F  F018         	call	_pad	;wreg free
  2299  000990  C011  F070         	movff	?_pad,?_efgtoa
  2300  000994  C012  F071         	movff	?_pad+1,?_efgtoa+1
  2301  000998  EF18  F00A         	goto	l854
  2302  00099C                     l3223:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2305  00099C  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  2306  0009A0  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2307  0009A4  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2308  0009A8  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2309  0009AC  EC7C  F016         	call	___fpclassifyf	;wreg free
  2310  0009B0  5001               	movf	?___fpclassifyf^0,w,c
  2311  0009B2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2312  0009B4  A4D8               	btfss	status,2,c
  2313  0009B6  EFDF  F004         	goto	u3731
  2314  0009BA  EFE1  F004         	goto	u3730
  2315  0009BE                     u3731:
  2316  0009BE  EF14  F005         	goto	l3241
  2317  0009C2                     u3730:
  2318  0009C2  0EBF               	movlw	191
  2319  0009C4  0100               	movlb	0	; () banked
  2320  0009C6  6F77               	movwf	??_efgtoa& (0+255),b
  2321  0009C8  0EFF               	movlw	255
  2322  0009CA  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2323  0009CC  5176               	movf	efgtoa@c& (0+255),w,b
  2324  0009CE  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  2325  0009D0  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  2326  0009D2  5177               	movf	??_efgtoa& (0+255),w,b
  2327  0009D4  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2328  0009D6  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2329  0009D8  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2330  0009DA  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2331  0009DC  E107               	bnz	u3741
  2332  0009DE  0E1A               	movlw	26
  2333  0009E0  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2334  0009E2  B0D8               	btfsc	status,0,c
  2335  0009E4  EFF6  F004         	goto	u3741
  2336  0009E8  EFF8  F004         	goto	u3740
  2337  0009EC                     u3741:
  2338  0009EC  EF06  F005         	goto	l3233
  2339  0009F0                     u3740:
  2340  0009F0                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2343  0009F0  0E0C               	movlw	low _dbuf
  2344  0009F2  25A8               	addwf	efgtoa@n& (0+255),w,b
  2345  0009F4  6E01               	movwf	strcpy@dest^0,c
  2346  0009F6  0E01               	movlw	high _dbuf
  2347  0009F8  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2348  0009FA  6E02               	movwf	(strcpy@dest+1)^0,c
  2349  0009FC  0E18               	movlw	low STR_6
  2350  0009FE  6E03               	movwf	strcpy@src^0,c
  2351  000A00  0E08               	movlw	high STR_6
  2352  000A02  6E04               	movwf	(strcpy@src+1)^0,c
  2353  000A04  EC34  F01A         	call	_strcpy	;wreg free
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2356  000A08  EFB5  F004         	goto	l3217
  2357  000A0C                     l3233:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2361  000A0C  0E0C               	movlw	low _dbuf
  2362  000A0E  25A8               	addwf	efgtoa@n& (0+255),w,b
  2363  000A10  6E01               	movwf	strcpy@dest^0,c
  2364  000A12  0E01               	movlw	high _dbuf
  2365  000A14  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2366  000A16  6E02               	movwf	(strcpy@dest+1)^0,c
  2367  000A18  0E20               	movlw	low STR_7
  2368  000A1A  6E03               	movwf	strcpy@src^0,c
  2369  000A1C  0E08               	movlw	high STR_7
  2370  000A1E  6E04               	movwf	(strcpy@src+1)^0,c
  2371  000A20  EC34  F01A         	call	_strcpy	;wreg free
  2372  000A24  EFB5  F004         	goto	l3217
  2373  000A28                     l3241:
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2376  000A28  0E00               	movlw	0
  2377  000A2A  0100               	movlb	0	; () banked
  2378  000A2C  6FAA               	movwf	efgtoa@u& (0+255),b
  2379  000A2E  0E00               	movlw	0
  2380  000A30  6FAB               	movwf	(efgtoa@u+1)& (0+255),b
  2381  000A32  0E80               	movlw	128
  2382  000A34  6FAC               	movwf	(efgtoa@u+2)& (0+255),b
  2383  000A36  0E3F               	movlw	63
  2384  000A38  6FAD               	movwf	(efgtoa@u+3)& (0+255),b
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2387  000A3A  0E00               	movlw	0
  2388  000A3C  6FA7               	movwf	(efgtoa@e+1)& (0+255),b
  2389  000A3E  0E00               	movlw	0
  2390  000A40  6FA6               	movwf	efgtoa@e& (0+255),b
  2391  000A42                     
  2392                           ; BSR set to: 0
  2393                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2394  000A42  C0A2  F001         	movff	efgtoa@g,___fleq@ff1
  2395  000A46  C0A3  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2396  000A4A  C0A4  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2397  000A4E  C0A5  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2398  000A52  0E00               	movlw	0
  2399  000A54  6E05               	movwf	___fleq@ff2^0,c
  2400  000A56  0E00               	movlw	0
  2401  000A58  6E06               	movwf	(___fleq@ff2+1)^0,c
  2402  000A5A  0E00               	movlw	0
  2403  000A5C  6E07               	movwf	(___fleq@ff2+2)^0,c
  2404  000A5E  0E00               	movlw	0
  2405  000A60  6E08               	movwf	(___fleq@ff2+3)^0,c
  2406  000A62  EC5C  F019         	call	___fleq	;wreg free
  2407  000A66  B0D8               	btfsc	status,0,c
  2408  000A68  EF38  F005         	goto	u3751
  2409  000A6C  EF3A  F005         	goto	u3750
  2410  000A70                     u3751:
  2411  000A70  EFBD  F005         	goto	l3259
  2412  000A74                     u3750:
  2413  000A74  EF59  F005         	goto	l3251
  2414  000A78                     l3247:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2417  000A78  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  2418  000A7C  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  2419  000A80  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  2420  000A84  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  2421  000A88  0E00               	movlw	0
  2422  000A8A  6E13               	movwf	___flmul@a^0,c
  2423  000A8C  0E00               	movlw	0
  2424  000A8E  6E14               	movwf	(___flmul@a+1)^0,c
  2425  000A90  0E20               	movlw	32
  2426  000A92  6E15               	movwf	(___flmul@a+2)^0,c
  2427  000A94  0E41               	movlw	65
  2428  000A96  6E16               	movwf	(___flmul@a+3)^0,c
  2429  000A98  EC79  F00C         	call	___flmul	;wreg free
  2430  000A9C  C00F  F0AA         	movff	?___flmul,efgtoa@u
  2431  000AA0  C010  F0AB         	movff	?___flmul+1,efgtoa@u+1
  2432  000AA4  C011  F0AC         	movff	?___flmul+2,efgtoa@u+2
  2433  000AA8  C012  F0AD         	movff	?___flmul+3,efgtoa@u+3
  2434  000AAC                     
  2435                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2436  000AAC  0100               	movlb	0	; () banked
  2437  000AAE  4BA6               	infsnz	efgtoa@e& (0+255),f,b
  2438  000AB0  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  2439  000AB2                     l3251:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2442  000AB2  C0A2  F028         	movff	efgtoa@g,___flge@ff1
  2443  000AB6  C0A3  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2444  000ABA  C0A4  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2445  000ABE  C0A5  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2446  000AC2  0E00               	movlw	0
  2447  000AC4  6E13               	movwf	___flmul@a^0,c
  2448  000AC6  0E00               	movlw	0
  2449  000AC8  6E14               	movwf	(___flmul@a+1)^0,c
  2450  000ACA  0E20               	movlw	32
  2451  000ACC  6E15               	movwf	(___flmul@a+2)^0,c
  2452  000ACE  0E41               	movlw	65
  2453  000AD0  6E16               	movwf	(___flmul@a+3)^0,c
  2454  000AD2  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  2455  000AD6  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  2456  000ADA  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  2457  000ADE  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  2458  000AE2  EC79  F00C         	call	___flmul	;wreg free
  2459  000AE6  C00F  F02C         	movff	?___flmul,___flge@ff2
  2460  000AEA  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2461  000AEE  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2462  000AF2  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2463  000AF6  ECFA  F015         	call	___flge	;wreg free
  2464  000AFA  B0D8               	btfsc	status,0,c
  2465  000AFC  EF82  F005         	goto	u3761
  2466  000B00  EF84  F005         	goto	u3760
  2467  000B04                     u3761:
  2468  000B04  EF3C  F005         	goto	l3247
  2469  000B08                     u3760:
  2470  000B08  EFA4  F005         	goto	l3257
  2471  000B0C                     l3253:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2474  000B0C  C0AA  F040         	movff	efgtoa@u,___fldiv@b
  2475  000B10  C0AB  F041         	movff	efgtoa@u+1,___fldiv@b+1
  2476  000B14  C0AC  F042         	movff	efgtoa@u+2,___fldiv@b+2
  2477  000B18  C0AD  F043         	movff	efgtoa@u+3,___fldiv@b+3
  2478  000B1C  0E00               	movlw	0
  2479  000B1E  6E44               	movwf	___fldiv@a^0,c
  2480  000B20  0E00               	movlw	0
  2481  000B22  6E45               	movwf	(___fldiv@a+1)^0,c
  2482  000B24  0E20               	movlw	32
  2483  000B26  6E46               	movwf	(___fldiv@a+2)^0,c
  2484  000B28  0E41               	movlw	65
  2485  000B2A  6E47               	movwf	(___fldiv@a+3)^0,c
  2486  000B2C  EC8E  F00E         	call	___fldiv	;wreg free
  2487  000B30  C040  F0AA         	movff	?___fldiv,efgtoa@u
  2488  000B34  C041  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  2489  000B38  C042  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  2490  000B3C  C043  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  2491  000B40                     
  2492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2493  000B40  0100               	movlb	0	; () banked
  2494  000B42  07A6               	decf	efgtoa@e& (0+255),f,b
  2495  000B44  A0D8               	btfss	status,0,c
  2496  000B46  07A7               	decf	(efgtoa@e+1)& (0+255),f,b
  2497  000B48                     l3257:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2500  000B48  C0A2  F028         	movff	efgtoa@g,___flge@ff1
  2501  000B4C  C0A3  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2502  000B50  C0A4  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2503  000B54  C0A5  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2504  000B58  C0AA  F02C         	movff	efgtoa@u,___flge@ff2
  2505  000B5C  C0AB  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2506  000B60  C0AC  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2507  000B64  C0AD  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2508  000B68  ECFA  F015         	call	___flge	;wreg free
  2509  000B6C  A0D8               	btfss	status,0,c
  2510  000B6E  EFBB  F005         	goto	u3771
  2511  000B72  EFBD  F005         	goto	u3770
  2512  000B76                     u3771:
  2513  000B76  EF86  F005         	goto	l3253
  2514  000B7A                     u3770:
  2515  000B7A                     l3259:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2518  000B7A  C076  F007         	movff	efgtoa@c,tolower@c
  2519  000B7E  6A08               	clrf	(tolower@c+1)^0,c
  2520  000B80  ECAE  F01A         	call	_tolower	;wreg free
  2521  000B84  5007               	movf	?_tolower^0,w,c
  2522  000B86  0100               	movlb	0	; () banked
  2523  000B88  6F97               	movwf	efgtoa@mode& (0+255),b
  2524  000B8A                     
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2527  000B8A  C097  F096         	movff	efgtoa@mode,efgtoa@nmode
  2528  000B8E                     
  2529                           ; BSR set to: 0
  2530                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2531  000B8E  0E67               	movlw	103
  2532  000B90  1997               	xorwf	efgtoa@mode& (0+255),w,b
  2533  000B92  A4D8               	btfss	status,2,c
  2534  000B94  EFCE  F005         	goto	u3781
  2535  000B98  EFD0  F005         	goto	u3780
  2536  000B9C                     u3781:
  2537  000B9C  EFF6  F005         	goto	l3273
  2538  000BA0                     u3780:
  2539  000BA0                     
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2542  000BA0  51F9               	movf	_prec& (0+255),w,b
  2543  000BA2  11FA               	iorwf	(_prec+1)& (0+255),w,b
  2544  000BA4  A4D8               	btfss	status,2,c
  2545  000BA6  EFD7  F005         	goto	u3791
  2546  000BAA  EFD9  F005         	goto	u3790
  2547  000BAE                     u3791:
  2548  000BAE  EFDD  F005         	goto	l3269
  2549  000BB2                     u3790:
  2550  000BB2                     
  2551                           ; BSR set to: 0
  2552                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2553  000BB2  0E00               	movlw	0
  2554  000BB4  6FFA               	movwf	(_prec+1)& (0+255),b
  2555  000BB6  0E01               	movlw	1
  2556  000BB8  6FF9               	movwf	_prec& (0+255),b
  2557  000BBA                     l3269:
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2561  000BBA  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  2562  000BBC  EFEA  F005         	goto	u3800
  2563  000BC0  51FA               	movf	(_prec+1)& (0+255),w,b
  2564  000BC2  E106               	bnz	u3801
  2565  000BC4  05F9               	decf	_prec& (0+255),w,b
  2566  000BC6  B0D8               	btfsc	status,0,c
  2567  000BC8  EFE8  F005         	goto	u3801
  2568  000BCC  EFEA  F005         	goto	u3800
  2569  000BD0                     u3801:
  2570  000BD0  EFF0  F005         	goto	l870
  2571  000BD4                     u3800:
  2572  000BD4                     l3271:
  2573                           
  2574                           ; BSR set to: 0
  2575  000BD4  0E00               	movlw	0
  2576  000BD6  6F93               	movwf	(efgtoa@p+1)& (0+255),b
  2577  000BD8  0E06               	movlw	6
  2578  000BDA  6F92               	movwf	efgtoa@p& (0+255),b
  2579  000BDC  EFFF  F005         	goto	l3279
  2580  000BE0                     l870:
  2581                           
  2582                           ; BSR set to: 0
  2583  000BE0  C0F9  F092         	movff	_prec,efgtoa@p
  2584  000BE4  C0FA  F093         	movff	_prec+1,efgtoa@p+1
  2585  000BE8  EFFF  F005         	goto	l3279
  2586  000BEC                     l3273:
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2590  000BEC  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  2591  000BEE  EFFB  F005         	goto	u3811
  2592  000BF2  EFFD  F005         	goto	u3810
  2593  000BF6                     u3811:
  2594  000BF6  EFEA  F005         	goto	l3271
  2595  000BFA                     u3810:
  2596  000BFA  EFF0  F005         	goto	l870
  2597  000BFE                     l3279:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2601  000BFE  0E67               	movlw	103
  2602  000C00  1997               	xorwf	efgtoa@mode& (0+255),w,b
  2603  000C02  A4D8               	btfss	status,2,c
  2604  000C04  EF06  F006         	goto	u3821
  2605  000C08  EF08  F006         	goto	u3820
  2606  000C0C                     u3821:
  2607  000C0C  EF37  F006         	goto	l3289
  2608  000C10                     u3820:
  2609  000C10                     
  2610                           ; BSR set to: 0
  2611                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2612  000C10  AFA7               	btfss	(efgtoa@e+1)& (0+255),7,b
  2613  000C12  EF16  F006         	goto	u3830
  2614  000C16  0EFC               	movlw	252
  2615  000C18  5DA6               	subwf	efgtoa@e& (0+255),w,b
  2616  000C1A  0EFF               	movlw	255
  2617  000C1C  59A7               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2618  000C1E  A0D8               	btfss	status,0,c
  2619  000C20  EF14  F006         	goto	u3831
  2620  000C24  EF16  F006         	goto	u3830
  2621  000C28                     u3831:
  2622  000C28  EF35  F006         	goto	l3287
  2623  000C2C                     u3830:
  2624  000C2C                     
  2625                           ; BSR set to: 0
  2626  000C2C  0EFF               	movlw	255
  2627  000C2E  6F77               	movwf	??_efgtoa& (0+255),b
  2628  000C30  0EFF               	movlw	255
  2629  000C32  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2630  000C34  C092  F079         	movff	efgtoa@p,??_efgtoa+2
  2631  000C38  C093  F07A         	movff	efgtoa@p+1,??_efgtoa+3
  2632  000C3C  5177               	movf	??_efgtoa& (0+255),w,b
  2633  000C3E  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2634  000C40  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2635  000C42  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2636  000C44  51A6               	movf	efgtoa@e& (0+255),w,b
  2637  000C46  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2638  000C48  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2639  000C4A  0A80               	xorlw	128
  2640  000C4C  6F7B               	movwf	(??_efgtoa+4)& (0+255),b
  2641  000C4E  51A7               	movf	(efgtoa@e+1)& (0+255),w,b
  2642  000C50  0A80               	xorlw	128
  2643  000C52  597B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2644  000C54  A0D8               	btfss	status,0,c
  2645  000C56  EF2F  F006         	goto	u3841
  2646  000C5A  EF31  F006         	goto	u3840
  2647  000C5E                     u3841:
  2648  000C5E  EF35  F006         	goto	l3287
  2649  000C62                     u3840:
  2650  000C62                     
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2653  000C62  0E66               	movlw	102
  2654  000C64  6F96               	movwf	efgtoa@nmode& (0+255),b
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2657  000C66  EF37  F006         	goto	l3289
  2658  000C6A                     l3287:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2662  000C6A  0E65               	movlw	101
  2663  000C6C  6F96               	movwf	efgtoa@nmode& (0+255),b
  2664  000C6E                     l3289:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2668  000C6E  C092  F088         	movff	efgtoa@p,efgtoa@m
  2669  000C72  C093  F089         	movff	efgtoa@p+1,efgtoa@m+1
  2670  000C76                     
  2671                           ; BSR set to: 0
  2672                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2673  000C76  0E67               	movlw	103
  2674  000C78  1997               	xorwf	efgtoa@mode& (0+255),w,b
  2675  000C7A  A4D8               	btfss	status,2,c
  2676  000C7C  EF42  F006         	goto	u3851
  2677  000C80  EF44  F006         	goto	u3850
  2678  000C84                     u3851:
  2679  000C84  EF54  F006         	goto	l3297
  2680  000C88                     u3850:
  2681  000C88                     
  2682                           ; BSR set to: 0
  2683  000C88  0E66               	movlw	102
  2684  000C8A  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  2685  000C8C  A4D8               	btfss	status,2,c
  2686  000C8E  EF4B  F006         	goto	u3861
  2687  000C92  EF4D  F006         	goto	u3860
  2688  000C96                     u3861:
  2689  000C96  EF56  F006         	goto	l3299
  2690  000C9A                     u3860:
  2691  000C9A                     
  2692                           ; BSR set to: 0
  2693  000C9A  BFA7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2694  000C9C  EF54  F006         	goto	u3870
  2695  000CA0  EF52  F006         	goto	u3871
  2696  000CA4                     u3871:
  2697  000CA4  EF56  F006         	goto	l3299
  2698  000CA8                     u3870:
  2699  000CA8                     l3297:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2703  000CA8  4B88               	infsnz	efgtoa@m& (0+255),f,b
  2704  000CAA  2B89               	incf	(efgtoa@m+1)& (0+255),f,b
  2705  000CAC                     l3299:
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2709  000CAC  0E66               	movlw	102
  2710  000CAE  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  2711  000CB0  A4D8               	btfss	status,2,c
  2712  000CB2  EF5D  F006         	goto	u3881
  2713  000CB6  EF5F  F006         	goto	u3880
  2714  000CBA                     u3881:
  2715  000CBA  EF7F  F006         	goto	l3309
  2716  000CBE                     u3880:
  2717  000CBE                     
  2718                           ; BSR set to: 0
  2719                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2720  000CBE  BFA7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2721  000CC0  EF66  F006         	goto	u3890
  2722  000CC4  EF64  F006         	goto	u3891
  2723  000CC8                     u3891:
  2724  000CC8  EF72  F006         	goto	l3305
  2725  000CCC                     u3890:
  2726  000CCC                     
  2727                           ; BSR set to: 0
  2728                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2729  000CCC  0E00               	movlw	0
  2730  000CCE  6FAA               	movwf	efgtoa@u& (0+255),b
  2731  000CD0  0E00               	movlw	0
  2732  000CD2  6FAB               	movwf	(efgtoa@u+1)& (0+255),b
  2733  000CD4  0E80               	movlw	128
  2734  000CD6  6FAC               	movwf	(efgtoa@u+2)& (0+255),b
  2735  000CD8  0E3F               	movlw	63
  2736  000CDA  6FAD               	movwf	(efgtoa@u+3)& (0+255),b
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2739  000CDC  0E00               	movlw	0
  2740  000CDE  6FA7               	movwf	(efgtoa@e+1)& (0+255),b
  2741  000CE0  0E00               	movlw	0
  2742  000CE2  6FA6               	movwf	efgtoa@e& (0+255),b
  2743  000CE4                     l3305:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2747  000CE4  0E67               	movlw	103
  2748  000CE6  1997               	xorwf	efgtoa@mode& (0+255),w,b
  2749  000CE8  B4D8               	btfsc	status,2,c
  2750  000CEA  EF79  F006         	goto	u3901
  2751  000CEE  EF7B  F006         	goto	u3900
  2752  000CF2                     u3901:
  2753  000CF2  EF7F  F006         	goto	l3309
  2754  000CF6                     u3900:
  2755  000CF6                     
  2756                           ; BSR set to: 0
  2757                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2758  000CF6  51A6               	movf	efgtoa@e& (0+255),w,b
  2759  000CF8  2788               	addwf	efgtoa@m& (0+255),f,b
  2760  000CFA  51A7               	movf	(efgtoa@e+1)& (0+255),w,b
  2761  000CFC  2389               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2762  000CFE                     l3309:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2766  000CFE  0E00               	movlw	0
  2767  000D00  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  2768  000D02  0E00               	movlw	0
  2769  000D04  6FA0               	movwf	efgtoa@i& (0+255),b
  2770  000D06                     
  2771                           ; BSR set to: 0
  2772                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2773  000D06  C0A2  F098         	movff	efgtoa@g,efgtoa@h
  2774  000D0A  C0A3  F099         	movff	efgtoa@g+1,efgtoa@h+1
  2775  000D0E  C0A4  F09A         	movff	efgtoa@g+2,efgtoa@h+2
  2776  000D12  C0A5  F09B         	movff	efgtoa@g+3,efgtoa@h+3
  2777  000D16                     
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  2780  000D16  C0AA  F08A         	movff	efgtoa@u,efgtoa@ou
  2781  000D1A  C0AB  F08B         	movff	efgtoa@u+1,efgtoa@ou+1
  2782  000D1E  C0AC  F08C         	movff	efgtoa@u+2,efgtoa@ou+2
  2783  000D22  C0AD  F08D         	movff	efgtoa@u+3,efgtoa@ou+3
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2786  000D26  EF10  F007         	goto	l3323
  2787  000D2A                     l3315:
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  2791  000D2A  C098  F040         	movff	efgtoa@h,___fldiv@b
  2792  000D2E  C099  F041         	movff	efgtoa@h+1,___fldiv@b+1
  2793  000D32  C09A  F042         	movff	efgtoa@h+2,___fldiv@b+2
  2794  000D36  C09B  F043         	movff	efgtoa@h+3,___fldiv@b+3
  2795  000D3A  C0AA  F044         	movff	efgtoa@u,___fldiv@a
  2796  000D3E  C0AB  F045         	movff	efgtoa@u+1,___fldiv@a+1
  2797  000D42  C0AC  F046         	movff	efgtoa@u+2,___fldiv@a+2
  2798  000D46  C0AD  F047         	movff	efgtoa@u+3,___fldiv@a+3
  2799  000D4A  EC8E  F00E         	call	___fldiv	;wreg free
  2800  000D4E  C040  F059         	movff	?___fldiv,floorf@x
  2801  000D52  C041  F05A         	movff	?___fldiv+1,floorf@x+1
  2802  000D56  C042  F05B         	movff	?___fldiv+2,floorf@x+2
  2803  000D5A  C043  F05C         	movff	?___fldiv+3,floorf@x+3
  2804  000D5E  ECF5  F011         	call	_floorf	;wreg free
  2805  000D62  C059  F09C         	movff	?_floorf,efgtoa@l
  2806  000D66  C05A  F09D         	movff	?_floorf+1,efgtoa@l+1
  2807  000D6A  C05B  F09E         	movff	?_floorf+2,efgtoa@l+2
  2808  000D6E  C05C  F09F         	movff	?_floorf+3,efgtoa@l+3
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  2811  000D72  C09C  F001         	movff	efgtoa@l,___fltol@f1
  2812  000D76  C09D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2813  000D7A  C09E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2814  000D7E  C09F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2815  000D82  EC77  F015         	call	___fltol	;wreg free
  2816  000D86  C001  F08E         	movff	?___fltol,efgtoa@d
  2817  000D8A  C002  F08F         	movff	?___fltol+1,efgtoa@d+1
  2818  000D8E                     
  2819                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  2820  000D8E  C098  F038         	movff	efgtoa@h,___flsub@b
  2821  000D92  C099  F039         	movff	efgtoa@h+1,___flsub@b+1
  2822  000D96  C09A  F03A         	movff	efgtoa@h+2,___flsub@b+2
  2823  000D9A  C09B  F03B         	movff	efgtoa@h+3,___flsub@b+3
  2824  000D9E  C0AA  F013         	movff	efgtoa@u,___flmul@a
  2825  000DA2  C0AB  F014         	movff	efgtoa@u+1,___flmul@a+1
  2826  000DA6  C0AC  F015         	movff	efgtoa@u+2,___flmul@a+2
  2827  000DAA  C0AD  F016         	movff	efgtoa@u+3,___flmul@a+3
  2828  000DAE  C09C  F00F         	movff	efgtoa@l,___flmul@b
  2829  000DB2  C09D  F010         	movff	efgtoa@l+1,___flmul@b+1
  2830  000DB6  C09E  F011         	movff	efgtoa@l+2,___flmul@b+2
  2831  000DBA  C09F  F012         	movff	efgtoa@l+3,___flmul@b+3
  2832  000DBE  EC79  F00C         	call	___flmul	;wreg free
  2833  000DC2  C00F  F03C         	movff	?___flmul,___flsub@a
  2834  000DC6  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  2835  000DCA  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  2836  000DCE  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  2837  000DD2  ECD1  F01A         	call	___flsub	;wreg free
  2838  000DD6  C038  F098         	movff	?___flsub,efgtoa@h
  2839  000DDA  C039  F099         	movff	?___flsub+1,efgtoa@h+1
  2840  000DDE  C03A  F09A         	movff	?___flsub+2,efgtoa@h+2
  2841  000DE2  C03B  F09B         	movff	?___flsub+3,efgtoa@h+3
  2842  000DE6                     
  2843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  2844  000DE6  C0AA  F040         	movff	efgtoa@u,___fldiv@b
  2845  000DEA  C0AB  F041         	movff	efgtoa@u+1,___fldiv@b+1
  2846  000DEE  C0AC  F042         	movff	efgtoa@u+2,___fldiv@b+2
  2847  000DF2  C0AD  F043         	movff	efgtoa@u+3,___fldiv@b+3
  2848  000DF6  0E00               	movlw	0
  2849  000DF8  6E44               	movwf	___fldiv@a^0,c
  2850  000DFA  0E00               	movlw	0
  2851  000DFC  6E45               	movwf	(___fldiv@a+1)^0,c
  2852  000DFE  0E20               	movlw	32
  2853  000E00  6E46               	movwf	(___fldiv@a+2)^0,c
  2854  000E02  0E41               	movlw	65
  2855  000E04  6E47               	movwf	(___fldiv@a+3)^0,c
  2856  000E06  EC8E  F00E         	call	___fldiv	;wreg free
  2857  000E0A  C040  F0AA         	movff	?___fldiv,efgtoa@u
  2858  000E0E  C041  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  2859  000E12  C042  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  2860  000E16  C043  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  2861  000E1A                     
  2862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  2863  000E1A  0100               	movlb	0	; () banked
  2864  000E1C  4BA0               	infsnz	efgtoa@i& (0+255),f,b
  2865  000E1E  2BA1               	incf	(efgtoa@i+1)& (0+255),f,b
  2866  000E20                     l3323:
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2870  000E20  5188               	movf	efgtoa@m& (0+255),w,b
  2871  000E22  5DA0               	subwf	efgtoa@i& (0+255),w,b
  2872  000E24  51A1               	movf	(efgtoa@i+1)& (0+255),w,b
  2873  000E26  0A80               	xorlw	128
  2874  000E28  6F77               	movwf	??_efgtoa& (0+255),b
  2875  000E2A  5189               	movf	(efgtoa@m+1)& (0+255),w,b
  2876  000E2C  0A80               	xorlw	128
  2877  000E2E  5977               	subwfb	??_efgtoa& (0+255),w,b
  2878  000E30  A0D8               	btfss	status,0,c
  2879  000E32  EF1D  F007         	goto	u3911
  2880  000E36  EF1F  F007         	goto	u3910
  2881  000E3A                     u3911:
  2882  000E3A  EF95  F006         	goto	l3315
  2883  000E3E                     u3910:
  2884  000E3E                     
  2885                           ; BSR set to: 0
  2886                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  2887  000E3E  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  2888  000E42  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  2889  000E46  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  2890  000E4A  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  2891  000E4E  0E00               	movlw	0
  2892  000E50  6E13               	movwf	___flmul@a^0,c
  2893  000E52  0E00               	movlw	0
  2894  000E54  6E14               	movwf	(___flmul@a+1)^0,c
  2895  000E56  0EA0               	movlw	160
  2896  000E58  6E15               	movwf	(___flmul@a+2)^0,c
  2897  000E5A  0E40               	movlw	64
  2898  000E5C  6E16               	movwf	(___flmul@a+3)^0,c
  2899  000E5E  EC79  F00C         	call	___flmul	;wreg free
  2900  000E62  C00F  F09C         	movff	?___flmul,efgtoa@l
  2901  000E66  C010  F09D         	movff	?___flmul+1,efgtoa@l+1
  2902  000E6A  C011  F09E         	movff	?___flmul+2,efgtoa@l+2
  2903  000E6E  C012  F09F         	movff	?___flmul+3,efgtoa@l+3
  2904  000E72                     
  2905                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  2906  000E72  C098  F028         	movff	efgtoa@h,___flge@ff1
  2907  000E76  C099  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2908  000E7A  C09A  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2909  000E7E  C09B  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2910  000E82  C09C  F02C         	movff	efgtoa@l,___flge@ff2
  2911  000E86  C09D  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2912  000E8A  C09E  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2913  000E8E  C09F  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2914  000E92  ECFA  F015         	call	___flge	;wreg free
  2915  000E96  B0D8               	btfsc	status,0,c
  2916  000E98  EF50  F007         	goto	u3921
  2917  000E9C  EF52  F007         	goto	u3920
  2918  000EA0                     u3921:
  2919  000EA0  EF5D  F007         	goto	l3331
  2920  000EA4                     u3920:
  2921  000EA4                     
  2922                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  2923  000EA4  0E00               	movlw	0
  2924  000EA6  0100               	movlb	0	; () banked
  2925  000EA8  6F9C               	movwf	efgtoa@l& (0+255),b
  2926  000EAA  0E00               	movlw	0
  2927  000EAC  6F9D               	movwf	(efgtoa@l+1)& (0+255),b
  2928  000EAE  0E00               	movlw	0
  2929  000EB0  6F9E               	movwf	(efgtoa@l+2)& (0+255),b
  2930  000EB2  0E00               	movlw	0
  2931  000EB4  6F9F               	movwf	(efgtoa@l+3)& (0+255),b
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  2934  000EB6  EF86  F007         	goto	l3337
  2935  000EBA                     l3331:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  2938  000EBA  C098  F001         	movff	efgtoa@h,___fleq@ff1
  2939  000EBE  C099  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2940  000EC2  C09A  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2941  000EC6  C09B  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2942  000ECA  C09C  F005         	movff	efgtoa@l,___fleq@ff2
  2943  000ECE  C09D  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2944  000ED2  C09E  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2945  000ED6  C09F  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2946  000EDA  EC5C  F019         	call	___fleq	;wreg free
  2947  000EDE  A0D8               	btfss	status,0,c
  2948  000EE0  EF74  F007         	goto	u3931
  2949  000EE4  EF76  F007         	goto	u3930
  2950  000EE8                     u3931:
  2951  000EE8  EF86  F007         	goto	l3337
  2952  000EEC                     u3930:
  2953  000EEC  0100               	movlb	0	; () banked
  2954  000EEE  B18E               	btfsc	efgtoa@d& (0+255),0,b
  2955  000EF0  EF7C  F007         	goto	u3941
  2956  000EF4  EF7E  F007         	goto	u3940
  2957  000EF8                     u3941:
  2958  000EF8  EF86  F007         	goto	l3337
  2959  000EFC                     u3940:
  2960  000EFC                     
  2961                           ; BSR set to: 0
  2962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  2963  000EFC  0E00               	movlw	0
  2964  000EFE  6F9C               	movwf	efgtoa@l& (0+255),b
  2965  000F00  0E00               	movlw	0
  2966  000F02  6F9D               	movwf	(efgtoa@l+1)& (0+255),b
  2967  000F04  0E00               	movlw	0
  2968  000F06  6F9E               	movwf	(efgtoa@l+2)& (0+255),b
  2969  000F08  0E00               	movlw	0
  2970  000F0A  6F9F               	movwf	(efgtoa@l+3)& (0+255),b
  2971  000F0C                     l3337:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  2974  000F0C  C0A2  F028         	movff	efgtoa@g,___fladd@b
  2975  000F10  C0A3  F029         	movff	efgtoa@g+1,___fladd@b+1
  2976  000F14  C0A4  F02A         	movff	efgtoa@g+2,___fladd@b+2
  2977  000F18  C0A5  F02B         	movff	efgtoa@g+3,___fladd@b+3
  2978  000F1C  C09C  F02C         	movff	efgtoa@l,___fladd@a
  2979  000F20  C09D  F02D         	movff	efgtoa@l+1,___fladd@a+1
  2980  000F24  C09E  F02E         	movff	efgtoa@l+2,___fladd@a+2
  2981  000F28  C09F  F02F         	movff	efgtoa@l+3,___fladd@a+3
  2982  000F2C  EC19  F00A         	call	___fladd	;wreg free
  2983  000F30  C028  F098         	movff	?___fladd,efgtoa@h
  2984  000F34  C029  F099         	movff	?___fladd+1,efgtoa@h+1
  2985  000F38  C02A  F09A         	movff	?___fladd+2,efgtoa@h+2
  2986  000F3C  C02B  F09B         	movff	?___fladd+3,efgtoa@h+3
  2987  000F40                     
  2988                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  2989  000F40  C098  F028         	movff	efgtoa@h,___flge@ff1
  2990  000F44  C099  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2991  000F48  C09A  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2992  000F4C  C09B  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2993  000F50  0E00               	movlw	0
  2994  000F52  6E13               	movwf	___flmul@a^0,c
  2995  000F54  0E00               	movlw	0
  2996  000F56  6E14               	movwf	(___flmul@a+1)^0,c
  2997  000F58  0E20               	movlw	32
  2998  000F5A  6E15               	movwf	(___flmul@a+2)^0,c
  2999  000F5C  0E41               	movlw	65
  3000  000F5E  6E16               	movwf	(___flmul@a+3)^0,c
  3001  000F60  C08A  F00F         	movff	efgtoa@ou,___flmul@b
  3002  000F64  C08B  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3003  000F68  C08C  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3004  000F6C  C08D  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3005  000F70  EC79  F00C         	call	___flmul	;wreg free
  3006  000F74  C00F  F02C         	movff	?___flmul,___flge@ff2
  3007  000F78  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3008  000F7C  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3009  000F80  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3010  000F84  ECFA  F015         	call	___flge	;wreg free
  3011  000F88  A0D8               	btfss	status,0,c
  3012  000F8A  EFC9  F007         	goto	u3951
  3013  000F8E  EFCB  F007         	goto	u3950
  3014  000F92                     u3951:
  3015  000F92  EFF4  F007         	goto	l3349
  3016  000F96                     u3950:
  3017  000F96                     
  3018                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3019  000F96  0100               	movlb	0	; () banked
  3020  000F98  4BA6               	infsnz	efgtoa@e& (0+255),f,b
  3021  000F9A  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  3022  000F9C                     
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3025  000F9C  C08A  F00F         	movff	efgtoa@ou,___flmul@b
  3026  000FA0  C08B  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3027  000FA4  C08C  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3028  000FA8  C08D  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3029  000FAC  0E00               	movlw	0
  3030  000FAE  6E13               	movwf	___flmul@a^0,c
  3031  000FB0  0E00               	movlw	0
  3032  000FB2  6E14               	movwf	(___flmul@a+1)^0,c
  3033  000FB4  0E20               	movlw	32
  3034  000FB6  6E15               	movwf	(___flmul@a+2)^0,c
  3035  000FB8  0E41               	movlw	65
  3036  000FBA  6E16               	movwf	(___flmul@a+3)^0,c
  3037  000FBC  EC79  F00C         	call	___flmul	;wreg free
  3038  000FC0  C00F  F08A         	movff	?___flmul,efgtoa@ou
  3039  000FC4  C010  F08B         	movff	?___flmul+1,efgtoa@ou+1
  3040  000FC8  C011  F08C         	movff	?___flmul+2,efgtoa@ou+2
  3041  000FCC  C012  F08D         	movff	?___flmul+3,efgtoa@ou+3
  3042  000FD0                     
  3043                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3044  000FD0  0E66               	movlw	102
  3045  000FD2  0100               	movlb	0	; () banked
  3046  000FD4  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3047  000FD6  A4D8               	btfss	status,2,c
  3048  000FD8  EFF0  F007         	goto	u3961
  3049  000FDC  EFF2  F007         	goto	u3960
  3050  000FE0                     u3961:
  3051  000FE0  EFF4  F007         	goto	l3349
  3052  000FE4                     u3960:
  3053  000FE4                     
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3056  000FE4  4B88               	infsnz	efgtoa@m& (0+255),f,b
  3057  000FE6  2B89               	incf	(efgtoa@m+1)& (0+255),f,b
  3058  000FE8                     l3349:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3061  000FE8  C08A  F0AA         	movff	efgtoa@ou,efgtoa@u
  3062  000FEC  C08B  F0AB         	movff	efgtoa@ou+1,efgtoa@u+1
  3063  000FF0  C08C  F0AC         	movff	efgtoa@ou+2,efgtoa@u+2
  3064  000FF4  C08D  F0AD         	movff	efgtoa@ou+3,efgtoa@u+3
  3065  000FF8                     
  3066                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3067  000FF8  0E65               	movlw	101
  3068  000FFA  0100               	movlb	0	; () banked
  3069  000FFC  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3070  000FFE  B4D8               	btfsc	status,2,c
  3071  001000  EF04  F008         	goto	u3971
  3072  001004  EF06  F008         	goto	u3970
  3073  001008                     u3971:
  3074  001008  EF0C  F008         	goto	l3355
  3075  00100C                     u3970:
  3076  00100C                     
  3077                           ; BSR set to: 0
  3078  00100C  C0A6  F086         	movff	efgtoa@e,efgtoa@ne
  3079  001010  C0A7  F087         	movff	efgtoa@e+1,efgtoa@ne+1
  3080  001014  EF10  F008         	goto	l898
  3081  001018                     l3355:
  3082                           
  3083                           ; BSR set to: 0
  3084  001018  0E00               	movlw	0
  3085  00101A  6F87               	movwf	(efgtoa@ne+1)& (0+255),b
  3086  00101C  0E00               	movlw	0
  3087  00101E  6F86               	movwf	efgtoa@ne& (0+255),b
  3088  001020                     l898:
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3092  001020  0E00               	movlw	0
  3093  001022  6F85               	movwf	(efgtoa@pp+1)& (0+255),b
  3094  001024  0E00               	movlw	0
  3095  001026  6F84               	movwf	efgtoa@pp& (0+255),b
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3098  001028  0E00               	movlw	0
  3099  00102A  6F83               	movwf	(efgtoa@t+1)& (0+255),b
  3100  00102C  0E00               	movlw	0
  3101  00102E  6F82               	movwf	efgtoa@t& (0+255),b
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3104  001030  0E00               	movlw	0
  3105  001032  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  3106  001034  0E00               	movlw	0
  3107  001036  6FA0               	movwf	efgtoa@i& (0+255),b
  3108                           
  3109                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3110  001038  EF0B  F009         	goto	l3405
  3111  00103C                     l3357:
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3115  00103C  C098  F040         	movff	efgtoa@h,___fldiv@b
  3116  001040  C099  F041         	movff	efgtoa@h+1,___fldiv@b+1
  3117  001044  C09A  F042         	movff	efgtoa@h+2,___fldiv@b+2
  3118  001048  C09B  F043         	movff	efgtoa@h+3,___fldiv@b+3
  3119  00104C  C0AA  F044         	movff	efgtoa@u,___fldiv@a
  3120  001050  C0AB  F045         	movff	efgtoa@u+1,___fldiv@a+1
  3121  001054  C0AC  F046         	movff	efgtoa@u+2,___fldiv@a+2
  3122  001058  C0AD  F047         	movff	efgtoa@u+3,___fldiv@a+3
  3123  00105C  EC8E  F00E         	call	___fldiv	;wreg free
  3124  001060  C040  F059         	movff	?___fldiv,floorf@x
  3125  001064  C041  F05A         	movff	?___fldiv+1,floorf@x+1
  3126  001068  C042  F05B         	movff	?___fldiv+2,floorf@x+2
  3127  00106C  C043  F05C         	movff	?___fldiv+3,floorf@x+3
  3128  001070  ECF5  F011         	call	_floorf	;wreg free
  3129  001074  C059  F09C         	movff	?_floorf,efgtoa@l
  3130  001078  C05A  F09D         	movff	?_floorf+1,efgtoa@l+1
  3131  00107C  C05B  F09E         	movff	?_floorf+2,efgtoa@l+2
  3132  001080  C05C  F09F         	movff	?_floorf+3,efgtoa@l+3
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3135  001084  C09C  F001         	movff	efgtoa@l,___fltol@f1
  3136  001088  C09D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3137  00108C  C09E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3138  001090  C09F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3139  001094  EC77  F015         	call	___fltol	;wreg free
  3140  001098  C001  F08E         	movff	?___fltol,efgtoa@d
  3141  00109C  C002  F08F         	movff	?___fltol+1,efgtoa@d+1
  3142  0010A0                     
  3143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3144  0010A0  0100               	movlb	0	; () banked
  3145  0010A2  B9FB               	btfsc	_flags& (0+255),4,b
  3146  0010A4  EF56  F008         	goto	u3981
  3147  0010A8  EF58  F008         	goto	u3980
  3148  0010AC                     u3981:
  3149  0010AC  EF75  F008         	goto	l3369
  3150  0010B0                     u3980:
  3151  0010B0                     
  3152                           ; BSR set to: 0
  3153  0010B0  518E               	movf	efgtoa@d& (0+255),w,b
  3154  0010B2  118F               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3155  0010B4  A4D8               	btfss	status,2,c
  3156  0010B6  EF5F  F008         	goto	u3991
  3157  0010BA  EF61  F008         	goto	u3990
  3158  0010BE                     u3991:
  3159  0010BE  EF75  F008         	goto	l3369
  3160  0010C2                     u3990:
  3161  0010C2                     
  3162                           ; BSR set to: 0
  3163  0010C2  0E67               	movlw	103
  3164  0010C4  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3165  0010C6  A4D8               	btfss	status,2,c
  3166  0010C8  EF68  F008         	goto	u4001
  3167  0010CC  EF6A  F008         	goto	u4000
  3168  0010D0                     u4001:
  3169  0010D0  EF75  F008         	goto	l3369
  3170  0010D4                     u4000:
  3171  0010D4                     
  3172                           ; BSR set to: 0
  3173  0010D4  BF87               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3174  0010D6  EF71  F008         	goto	u4010
  3175  0010DA  EF6F  F008         	goto	u4011
  3176  0010DE                     u4011:
  3177  0010DE  EF75  F008         	goto	l3369
  3178  0010E2                     u4010:
  3179  0010E2                     
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3182  0010E2  4B82               	infsnz	efgtoa@t& (0+255),f,b
  3183  0010E4  2B83               	incf	(efgtoa@t+1)& (0+255),f,b
  3184                           
  3185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3186  0010E6  EFBF  F008         	goto	l3397
  3187  0010EA                     l3369:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3191  0010EA  5184               	movf	efgtoa@pp& (0+255),w,b
  3192  0010EC  1185               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3193  0010EE  A4D8               	btfss	status,2,c
  3194  0010F0  EF7C  F008         	goto	u4021
  3195  0010F4  EF7E  F008         	goto	u4020
  3196  0010F8                     u4021:
  3197  0010F8  EFA8  F008         	goto	l3389
  3198  0010FC                     u4020:
  3199  0010FC                     
  3200                           ; BSR set to: 0
  3201  0010FC  BF87               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3202  0010FE  EF85  F008         	goto	u4030
  3203  001102  EF83  F008         	goto	u4031
  3204  001106                     u4031:
  3205  001106  EFA8  F008         	goto	l3389
  3206  00110A                     u4030:
  3207  00110A                     
  3208                           ; BSR set to: 0
  3209                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3210  00110A  0E0C               	movlw	low _dbuf
  3211  00110C  25A8               	addwf	efgtoa@n& (0+255),w,b
  3212  00110E  6ED9               	movwf	fsr2l,c
  3213  001110  0E01               	movlw	high _dbuf
  3214  001112  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3215  001114  6EDA               	movwf	fsr2h,c
  3216  001116  0E2E               	movlw	46
  3217  001118  6EDF               	movwf	indf2,c
  3218  00111A                     
  3219                           ; BSR set to: 0
  3220  00111A  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  3221  00111C  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  3222  00111E                     
  3223                           ; BSR set to: 0
  3224                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3225  00111E  0794               	decf	efgtoa@w& (0+255),f,b
  3226  001120  A0D8               	btfss	status,0,c
  3227  001122  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3228  001124                     
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3231  001124  0E00               	movlw	0
  3232  001126  6F85               	movwf	(efgtoa@pp+1)& (0+255),b
  3233  001128  0E01               	movlw	1
  3234  00112A  6F84               	movwf	efgtoa@pp& (0+255),b
  3235  00112C  EFA8  F008         	goto	l3389
  3236  001130                     l3381:
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3240  001130  0E0C               	movlw	low _dbuf
  3241  001132  25A8               	addwf	efgtoa@n& (0+255),w,b
  3242  001134  6ED9               	movwf	fsr2l,c
  3243  001136  0E01               	movlw	high _dbuf
  3244  001138  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3245  00113A  6EDA               	movwf	fsr2h,c
  3246  00113C  0E30               	movlw	48
  3247  00113E  6EDF               	movwf	indf2,c
  3248  001140                     
  3249                           ; BSR set to: 0
  3250  001140  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  3251  001142  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  3252  001144                     
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3255  001144  0794               	decf	efgtoa@w& (0+255),f,b
  3256  001146  A0D8               	btfss	status,0,c
  3257  001148  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3258  00114A                     
  3259                           ; BSR set to: 0
  3260                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3261  00114A  0782               	decf	efgtoa@t& (0+255),f,b
  3262  00114C  A0D8               	btfss	status,0,c
  3263  00114E  0783               	decf	(efgtoa@t+1)& (0+255),f,b
  3264  001150                     l3389:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3268  001150  5182               	movf	efgtoa@t& (0+255),w,b
  3269  001152  1183               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3270  001154  A4D8               	btfss	status,2,c
  3271  001156  EFAF  F008         	goto	u4041
  3272  00115A  EFB1  F008         	goto	u4040
  3273  00115E                     u4041:
  3274  00115E  EF98  F008         	goto	l3381
  3275  001162                     u4040:
  3276  001162                     
  3277                           ; BSR set to: 0
  3278                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3279  001162  0E0C               	movlw	low _dbuf
  3280  001164  25A8               	addwf	efgtoa@n& (0+255),w,b
  3281  001166  6ED9               	movwf	fsr2l,c
  3282  001168  0E01               	movlw	high _dbuf
  3283  00116A  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3284  00116C  6EDA               	movwf	fsr2h,c
  3285  00116E  518E               	movf	efgtoa@d& (0+255),w,b
  3286  001170  0F30               	addlw	48
  3287  001172  6EDF               	movwf	indf2,c
  3288  001174                     
  3289                           ; BSR set to: 0
  3290  001174  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  3291  001176  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  3292  001178                     
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3295  001178  0794               	decf	efgtoa@w& (0+255),f,b
  3296  00117A  A0D8               	btfss	status,0,c
  3297  00117C  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3298  00117E                     l3397:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3302  00117E  C098  F038         	movff	efgtoa@h,___flsub@b
  3303  001182  C099  F039         	movff	efgtoa@h+1,___flsub@b+1
  3304  001186  C09A  F03A         	movff	efgtoa@h+2,___flsub@b+2
  3305  00118A  C09B  F03B         	movff	efgtoa@h+3,___flsub@b+3
  3306  00118E  C0AA  F013         	movff	efgtoa@u,___flmul@a
  3307  001192  C0AB  F014         	movff	efgtoa@u+1,___flmul@a+1
  3308  001196  C0AC  F015         	movff	efgtoa@u+2,___flmul@a+2
  3309  00119A  C0AD  F016         	movff	efgtoa@u+3,___flmul@a+3
  3310  00119E  C09C  F00F         	movff	efgtoa@l,___flmul@b
  3311  0011A2  C09D  F010         	movff	efgtoa@l+1,___flmul@b+1
  3312  0011A6  C09E  F011         	movff	efgtoa@l+2,___flmul@b+2
  3313  0011AA  C09F  F012         	movff	efgtoa@l+3,___flmul@b+3
  3314  0011AE  EC79  F00C         	call	___flmul	;wreg free
  3315  0011B2  C00F  F03C         	movff	?___flmul,___flsub@a
  3316  0011B6  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  3317  0011BA  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  3318  0011BE  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  3319  0011C2  ECD1  F01A         	call	___flsub	;wreg free
  3320  0011C6  C038  F098         	movff	?___flsub,efgtoa@h
  3321  0011CA  C039  F099         	movff	?___flsub+1,efgtoa@h+1
  3322  0011CE  C03A  F09A         	movff	?___flsub+2,efgtoa@h+2
  3323  0011D2  C03B  F09B         	movff	?___flsub+3,efgtoa@h+3
  3324  0011D6                     
  3325                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3326  0011D6  C0AA  F040         	movff	efgtoa@u,___fldiv@b
  3327  0011DA  C0AB  F041         	movff	efgtoa@u+1,___fldiv@b+1
  3328  0011DE  C0AC  F042         	movff	efgtoa@u+2,___fldiv@b+2
  3329  0011E2  C0AD  F043         	movff	efgtoa@u+3,___fldiv@b+3
  3330  0011E6  0E00               	movlw	0
  3331  0011E8  6E44               	movwf	___fldiv@a^0,c
  3332  0011EA  0E00               	movlw	0
  3333  0011EC  6E45               	movwf	(___fldiv@a+1)^0,c
  3334  0011EE  0E20               	movlw	32
  3335  0011F0  6E46               	movwf	(___fldiv@a+2)^0,c
  3336  0011F2  0E41               	movlw	65
  3337  0011F4  6E47               	movwf	(___fldiv@a+3)^0,c
  3338  0011F6  EC8E  F00E         	call	___fldiv	;wreg free
  3339  0011FA  C040  F0AA         	movff	?___fldiv,efgtoa@u
  3340  0011FE  C041  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  3341  001202  C042  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  3342  001206  C043  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  3343  00120A                     
  3344                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3345  00120A  0100               	movlb	0	; () banked
  3346  00120C  0786               	decf	efgtoa@ne& (0+255),f,b
  3347  00120E  A0D8               	btfss	status,0,c
  3348  001210  0787               	decf	(efgtoa@ne+1)& (0+255),f,b
  3349  001212                     
  3350                           ; BSR set to: 0
  3351                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3352  001212  4BA0               	infsnz	efgtoa@i& (0+255),f,b
  3353  001214  2BA1               	incf	(efgtoa@i+1)& (0+255),f,b
  3354  001216                     l3405:
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3358  001216  5188               	movf	efgtoa@m& (0+255),w,b
  3359  001218  5DA0               	subwf	efgtoa@i& (0+255),w,b
  3360  00121A  51A1               	movf	(efgtoa@i+1)& (0+255),w,b
  3361  00121C  0A80               	xorlw	128
  3362  00121E  6F77               	movwf	??_efgtoa& (0+255),b
  3363  001220  5189               	movf	(efgtoa@m+1)& (0+255),w,b
  3364  001222  0A80               	xorlw	128
  3365  001224  5977               	subwfb	??_efgtoa& (0+255),w,b
  3366  001226  B0D8               	btfsc	status,0,c
  3367  001228  EF18  F009         	goto	u4051
  3368  00122C  EF1A  F009         	goto	u4050
  3369  001230                     u4051:
  3370  001230  EF28  F009         	goto	l3409
  3371  001234                     u4050:
  3372  001234                     
  3373                           ; BSR set to: 0
  3374  001234  BFA9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3375  001236  EF26  F009         	goto	u4061
  3376  00123A  51A9               	movf	(efgtoa@n+1)& (0+255),w,b
  3377  00123C  E109               	bnz	u4060
  3378  00123E  0E4B               	movlw	75
  3379  001240  5DA8               	subwf	efgtoa@n& (0+255),w,b
  3380  001242  A0D8               	btfss	status,0,c
  3381  001244  EF26  F009         	goto	u4061
  3382  001248  EF28  F009         	goto	u4060
  3383  00124C                     u4061:
  3384  00124C  EF1E  F008         	goto	l3357
  3385  001250                     u4060:
  3386  001250                     l3409:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3390  001250  5184               	movf	efgtoa@pp& (0+255),w,b
  3391  001252  1185               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3392  001254  A4D8               	btfss	status,2,c
  3393  001256  EF2F  F009         	goto	u4071
  3394  00125A  EF31  F009         	goto	u4070
  3395  00125E                     u4071:
  3396  00125E  EF42  F009         	goto	l3417
  3397  001262                     u4070:
  3398  001262                     
  3399                           ; BSR set to: 0
  3400  001262  A9FB               	btfss	_flags& (0+255),4,b
  3401  001264  EF36  F009         	goto	u4081
  3402  001268  EF38  F009         	goto	u4080
  3403  00126C                     u4081:
  3404  00126C  EF42  F009         	goto	l3417
  3405  001270                     u4080:
  3406  001270                     
  3407                           ; BSR set to: 0
  3408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3409  001270  0E0C               	movlw	low _dbuf
  3410  001272  25A8               	addwf	efgtoa@n& (0+255),w,b
  3411  001274  6ED9               	movwf	fsr2l,c
  3412  001276  0E01               	movlw	high _dbuf
  3413  001278  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3414  00127A  6EDA               	movwf	fsr2h,c
  3415  00127C  0E2E               	movlw	46
  3416  00127E  6EDF               	movwf	indf2,c
  3417  001280                     
  3418                           ; BSR set to: 0
  3419  001280  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  3420  001282  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  3421  001284                     l3417:
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3425  001284  0E0C               	movlw	low _dbuf
  3426  001286  25A8               	addwf	efgtoa@n& (0+255),w,b
  3427  001288  6ED9               	movwf	fsr2l,c
  3428  00128A  0E01               	movlw	high _dbuf
  3429  00128C  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3430  00128E  6EDA               	movwf	fsr2h,c
  3431  001290  0E00               	movlw	0
  3432  001292  6EDF               	movwf	indf2,c
  3433  001294                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3436  001294  0E65               	movlw	101
  3437  001296  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3438  001298  A4D8               	btfss	status,2,c
  3439  00129A  EF51  F009         	goto	u4091
  3440  00129E  EF53  F009         	goto	u4090
  3441  0012A2                     u4091:
  3442  0012A2  EFBA  F004         	goto	l3219
  3443  0012A6                     u4090:
  3444  0012A6                     
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3447  0012A6  0E00               	movlw	0
  3448  0012A8  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  3449  0012AA  0E4F               	movlw	79
  3450  0012AC  6FA0               	movwf	efgtoa@i& (0+255),b
  3451  0012AE                     
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3454  0012AE  0E0C               	movlw	low _dbuf
  3455  0012B0  25A0               	addwf	efgtoa@i& (0+255),w,b
  3456  0012B2  6ED9               	movwf	fsr2l,c
  3457  0012B4  0E01               	movlw	high _dbuf
  3458  0012B6  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3459  0012B8  6EDA               	movwf	fsr2h,c
  3460  0012BA  0E00               	movlw	0
  3461  0012BC  6EDF               	movwf	indf2,c
  3462  0012BE                     
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3465  0012BE  0E00               	movlw	0
  3466  0012C0  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  3467  0012C2  0E00               	movlw	0
  3468  0012C4  6F90               	movwf	efgtoa@sign& (0+255),b
  3469  0012C6                     
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3472  0012C6  BFA7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3473  0012C8  EF6A  F009         	goto	u4100
  3474  0012CC  EF68  F009         	goto	u4101
  3475  0012D0                     u4101:
  3476  0012D0  EF72  F009         	goto	l3433
  3477  0012D4                     u4100:
  3478  0012D4                     
  3479                           ; BSR set to: 0
  3480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3481  0012D4  0E00               	movlw	0
  3482  0012D6  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  3483  0012D8  0E01               	movlw	1
  3484  0012DA  6F90               	movwf	efgtoa@sign& (0+255),b
  3485  0012DC                     
  3486                           ; BSR set to: 0
  3487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3488  0012DC  6DA6               	negf	efgtoa@e& (0+255),b
  3489  0012DE  1FA7               	comf	(efgtoa@e+1)& (0+255),f,b
  3490  0012E0  B0D8               	btfsc	status,0,c
  3491  0012E2  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  3492  0012E4                     l3433:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3496  0012E4  0E00               	movlw	0
  3497  0012E6  6F93               	movwf	(efgtoa@p+1)& (0+255),b
  3498  0012E8  0E02               	movlw	2
  3499  0012EA  6F92               	movwf	efgtoa@p& (0+255),b
  3500                           
  3501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3502  0012EC  EFA3  F009         	goto	l3445
  3503  0012F0                     l3435:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3507  0012F0  07A0               	decf	efgtoa@i& (0+255),f,b
  3508  0012F2  A0D8               	btfss	status,0,c
  3509  0012F4  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  3510  0012F6                     
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3513  0012F6  0E0C               	movlw	low _dbuf
  3514  0012F8  25A0               	addwf	efgtoa@i& (0+255),w,b
  3515  0012FA  6ED9               	movwf	fsr2l,c
  3516  0012FC  0E01               	movlw	high _dbuf
  3517  0012FE  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3518  001300  6EDA               	movwf	fsr2h,c
  3519  001302  C0A6  F001         	movff	efgtoa@e,___awmod@dividend
  3520  001306  C0A7  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3521  00130A  0E00               	movlw	0
  3522  00130C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3523  00130E  0E0A               	movlw	10
  3524  001310  6E03               	movwf	___awmod@divisor^0,c
  3525  001312  EC04  F019         	call	___awmod	;wreg free
  3526  001316  5001               	movf	?___awmod^0,w,c
  3527  001318  0F30               	addlw	48
  3528  00131A  6EDF               	movwf	indf2,c
  3529  00131C                     
  3530                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3531  00131C  C0A6  F001         	movff	efgtoa@e,___awdiv@dividend
  3532  001320  C0A7  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3533  001324  0E00               	movlw	0
  3534  001326  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3535  001328  0E0A               	movlw	10
  3536  00132A  6E03               	movwf	___awdiv@divisor^0,c
  3537  00132C  ECA2  F018         	call	___awdiv	;wreg free
  3538  001330  C001  F0A6         	movff	?___awdiv,efgtoa@e
  3539  001334  C002  F0A7         	movff	?___awdiv+1,efgtoa@e+1
  3540  001338                     
  3541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3542  001338  0100               	movlb	0	; () banked
  3543  00133A  0792               	decf	efgtoa@p& (0+255),f,b
  3544  00133C  A0D8               	btfss	status,0,c
  3545  00133E  0793               	decf	(efgtoa@p+1)& (0+255),f,b
  3546  001340                     
  3547                           ; BSR set to: 0
  3548                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3549  001340  0794               	decf	efgtoa@w& (0+255),f,b
  3550  001342  A0D8               	btfss	status,0,c
  3551  001344  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3552  001346                     l3445:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3556  001346  51A6               	movf	efgtoa@e& (0+255),w,b
  3557  001348  11A7               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3558  00134A  A4D8               	btfss	status,2,c
  3559  00134C  EFAA  F009         	goto	u4111
  3560  001350  EFAC  F009         	goto	u4110
  3561  001354                     u4111:
  3562  001354  EF78  F009         	goto	l3435
  3563  001358                     u4110:
  3564  001358                     
  3565                           ; BSR set to: 0
  3566  001358  BF93               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3567  00135A  EFB9  F009         	goto	u4120
  3568  00135E  5193               	movf	(efgtoa@p+1)& (0+255),w,b
  3569  001360  E106               	bnz	u4121
  3570  001362  0592               	decf	efgtoa@p& (0+255),w,b
  3571  001364  B0D8               	btfsc	status,0,c
  3572  001366  EFB7  F009         	goto	u4121
  3573  00136A  EFB9  F009         	goto	u4120
  3574  00136E                     u4121:
  3575  00136E  EF78  F009         	goto	l3435
  3576  001372                     u4120:
  3577  001372                     
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  3580  001372  07A0               	decf	efgtoa@i& (0+255),f,b
  3581  001374  A0D8               	btfss	status,0,c
  3582  001376  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  3583  001378                     
  3584                           ; BSR set to: 0
  3585                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3586  001378  5190               	movf	efgtoa@sign& (0+255),w,b
  3587  00137A  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3588  00137C  A4D8               	btfss	status,2,c
  3589  00137E  EFC3  F009         	goto	u4131
  3590  001382  EFC5  F009         	goto	u4130
  3591  001386                     u4131:
  3592  001386  EFCB  F009         	goto	l3455
  3593  00138A                     u4130:
  3594  00138A                     
  3595                           ; BSR set to: 0
  3596  00138A  0E00               	movlw	0
  3597  00138C  6F7F               	movwf	(_efgtoa$950+1)& (0+255),b
  3598  00138E  0E2B               	movlw	43
  3599  001390  6F7E               	movwf	_efgtoa$950& (0+255),b
  3600  001392  EFCF  F009         	goto	l3457
  3601  001396                     l3455:
  3602                           
  3603                           ; BSR set to: 0
  3604  001396  0E00               	movlw	0
  3605  001398  6F7F               	movwf	(_efgtoa$950+1)& (0+255),b
  3606  00139A  0E2D               	movlw	45
  3607  00139C  6F7E               	movwf	_efgtoa$950& (0+255),b
  3608  00139E                     l3457:
  3609                           
  3610                           ; BSR set to: 0
  3611  00139E  0E0C               	movlw	low _dbuf
  3612  0013A0  25A0               	addwf	efgtoa@i& (0+255),w,b
  3613  0013A2  6ED9               	movwf	fsr2l,c
  3614  0013A4  0E01               	movlw	high _dbuf
  3615  0013A6  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3616  0013A8  6EDA               	movwf	fsr2h,c
  3617  0013AA  C07E  FFDF         	movff	_efgtoa$950,indf2
  3618  0013AE                     
  3619                           ; BSR set to: 0
  3620                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  3621  0013AE  0794               	decf	efgtoa@w& (0+255),f,b
  3622  0013B0  A0D8               	btfss	status,0,c
  3623  0013B2  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3624  0013B4                     
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  3627  0013B4  07A0               	decf	efgtoa@i& (0+255),f,b
  3628  0013B6  A0D8               	btfss	status,0,c
  3629  0013B8  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  3630  0013BA                     
  3631                           ; BSR set to: 0
  3632  0013BA  0EBF               	movlw	191
  3633  0013BC  6F77               	movwf	??_efgtoa& (0+255),b
  3634  0013BE  0EFF               	movlw	255
  3635  0013C0  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  3636  0013C2  5176               	movf	efgtoa@c& (0+255),w,b
  3637  0013C4  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  3638  0013C6  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  3639  0013C8  5177               	movf	??_efgtoa& (0+255),w,b
  3640  0013CA  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  3641  0013CC  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  3642  0013CE  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3643  0013D0  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  3644  0013D2  E109               	bnz	u4140
  3645  0013D4  0E1A               	movlw	26
  3646  0013D6  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  3647  0013D8  A0D8               	btfss	status,0,c
  3648  0013DA  EFF1  F009         	goto	u4141
  3649  0013DE  EFF3  F009         	goto	u4140
  3650  0013E2                     u4141:
  3651  0013E2  EFF9  F009         	goto	l3469
  3652  0013E6                     u4140:
  3653  0013E6                     
  3654                           ; BSR set to: 0
  3655  0013E6  0E00               	movlw	0
  3656  0013E8  6F81               	movwf	(_efgtoa$951+1)& (0+255),b
  3657  0013EA  0E65               	movlw	101
  3658  0013EC  6F80               	movwf	_efgtoa$951& (0+255),b
  3659  0013EE  EFFD  F009         	goto	l3471
  3660  0013F2                     l3469:
  3661                           
  3662                           ; BSR set to: 0
  3663  0013F2  0E00               	movlw	0
  3664  0013F4  6F81               	movwf	(_efgtoa$951+1)& (0+255),b
  3665  0013F6  0E45               	movlw	69
  3666  0013F8  6F80               	movwf	_efgtoa$951& (0+255),b
  3667  0013FA                     l3471:
  3668                           
  3669                           ; BSR set to: 0
  3670  0013FA  0E0C               	movlw	low _dbuf
  3671  0013FC  25A0               	addwf	efgtoa@i& (0+255),w,b
  3672  0013FE  6ED9               	movwf	fsr2l,c
  3673  001400  0E01               	movlw	high _dbuf
  3674  001402  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3675  001404  6EDA               	movwf	fsr2h,c
  3676  001406  C080  FFDF         	movff	_efgtoa$951,indf2
  3677  00140A                     
  3678                           ; BSR set to: 0
  3679                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  3680  00140A  0794               	decf	efgtoa@w& (0+255),f,b
  3681  00140C  A0D8               	btfss	status,0,c
  3682  00140E  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3683  001410                     
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3686  001410  0E0C               	movlw	low _dbuf
  3687  001412  25A8               	addwf	efgtoa@n& (0+255),w,b
  3688  001414  6E01               	movwf	strcpy@dest^0,c
  3689  001416  0E01               	movlw	high _dbuf
  3690  001418  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3691  00141A  6E02               	movwf	(strcpy@dest+1)^0,c
  3692  00141C  0E0C               	movlw	low _dbuf
  3693  00141E  25A0               	addwf	efgtoa@i& (0+255),w,b
  3694  001420  6E03               	movwf	strcpy@src^0,c
  3695  001422  0E01               	movlw	high _dbuf
  3696  001424  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3697  001426  6E04               	movwf	(strcpy@src+1)^0,c
  3698  001428  EC34  F01A         	call	_strcpy	;wreg free
  3699  00142C  EFBA  F004         	goto	l3219
  3700  001430                     l854:
  3701  001430  0012               	return		;funcret
  3702  001432                     __end_of_efgtoa:
  3703                           	callstack 0
  3704                           
  3705 ;; *************** function _tolower *****************
  3706 ;; Defined at:
  3707 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  c               2    6[COMRAM] int 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  2    6[COMRAM] int 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3721 ;;      Params:         2       0       0       0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3723 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3724 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3725 ;;Total ram usage:        6 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; Hardware stack levels required when called: 2
  3728 ;; This function calls:
  3729 ;;		_isupper
  3730 ;; This function is called by:
  3731 ;;		_efgtoa
  3732 ;;		_vfpfcnvrt
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text6
  3737  00355C                     __ptext6:
  3738                           	callstack 0
  3739  00355C                     _tolower:
  3740                           	callstack 25
  3741  00355C  0EBF               	movlw	191
  3742  00355E  6E09               	movwf	??_tolower^0,c
  3743  003560  0EFF               	movlw	255
  3744  003562  6E0A               	movwf	(??_tolower+1)^0,c
  3745  003564  C007  F00B         	movff	tolower@c,??_tolower+2
  3746  003568  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3747  00356C  5009               	movf	??_tolower^0,w,c
  3748  00356E  260B               	addwf	(??_tolower+2)^0,f,c
  3749  003570  500A               	movf	(??_tolower+1)^0,w,c
  3750  003572  220C               	addwfc	(??_tolower+3)^0,f,c
  3751  003574  500C               	movf	(??_tolower+3)^0,w,c
  3752  003576  E107               	bnz	u3561
  3753  003578  0E1A               	movlw	26
  3754  00357A  5C0B               	subwf	(??_tolower+2)^0,w,c
  3755  00357C  B0D8               	btfsc	status,0,c
  3756  00357E  EFC3  F01A         	goto	u3561
  3757  003582  EFC5  F01A         	goto	u3560
  3758  003586                     u3561:
  3759  003586  EFCC  F01A         	goto	l1023
  3760  00358A                     u3560:
  3761  00358A  0E20               	movlw	32
  3762  00358C  1007               	iorwf	tolower@c^0,w,c
  3763  00358E  6E07               	movwf	?_tolower^0,c
  3764  003590  5008               	movf	(tolower@c+1)^0,w,c
  3765  003592  6E08               	movwf	(?_tolower+1)^0,c
  3766  003594  EFD0  F01A         	goto	l1026
  3767  003598                     l1023:
  3768  003598  C007  F007         	movff	tolower@c,?_tolower
  3769  00359C  C008  F008         	movff	tolower@c+1,?_tolower+1
  3770  0035A0                     l1026:
  3771  0035A0  0012               	return		;funcret
  3772  0035A2                     __end_of_tolower:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function _isupper *****************
  3776 ;; Defined at:
  3777 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  c               2    0[COMRAM] int 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  2    0[COMRAM] int 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3791 ;;      Params:         2       0       0       0       0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3793 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3794 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3795 ;;Total ram usage:        6 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 1
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_efgtoa
  3802 ;;		_vfpfcnvrt
  3803 ;;		_tolower
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           	psect	text7
  3808  00366C                     __ptext7:
  3809                           	callstack 0
  3810  00366C                     _isupper:
  3811                           	callstack 25
  3812  00366C  0EBF               	movlw	191
  3813  00366E  6E03               	movwf	??_isupper^0,c
  3814  003670  0EFF               	movlw	255
  3815  003672  6E04               	movwf	(??_isupper+1)^0,c
  3816  003674  C001  F005         	movff	isupper@c,??_isupper+2
  3817  003678  C002  F006         	movff	isupper@c+1,??_isupper+3
  3818  00367C  5003               	movf	??_isupper^0,w,c
  3819  00367E  2605               	addwf	(??_isupper+2)^0,f,c
  3820  003680  5004               	movf	(??_isupper+1)^0,w,c
  3821  003682  2206               	addwfc	(??_isupper+3)^0,f,c
  3822  003684  5006               	movf	(??_isupper+3)^0,w,c
  3823  003686  E10A               	bnz	u2710
  3824  003688  0E1A               	movlw	26
  3825  00368A  5C05               	subwf	(??_isupper+2)^0,w,c
  3826  00368C  A0D8               	btfss	status,0,c
  3827  00368E  EF4B  F01B         	goto	u2711
  3828  003692  EF4E  F01B         	goto	u2710
  3829  003696                     u2711:
  3830  003696  0E01               	movlw	1
  3831  003698  EF4F  F01B         	goto	u2720
  3832  00369C                     u2710:
  3833  00369C  0E00               	movlw	0
  3834  00369E                     u2720:
  3835  00369E  6E01               	movwf	?_isupper^0,c
  3836  0036A0  6A02               	clrf	(?_isupper+1)^0,c
  3837  0036A2  0012               	return		;funcret
  3838  0036A4                     __end_of_isupper:
  3839                           	callstack 0
  3840                           
  3841 ;; *************** function _strcpy *****************
  3842 ;; Defined at:
  3843 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3846 ;;		 -> dbuf(80), 
  3847 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3848 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3849 ;;		 -> dbuf(80), 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  d               2    8[COMRAM] PTR unsigned char 
  3852 ;;		 -> dbuf(80), 
  3853 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3854 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3855 ;;		 -> dbuf(80), 
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  2    0[COMRAM] PTR unsigned char 
  3858 ;; Registers used:
  3859 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3865 ;;      Params:         4       0       0       0       0       0       0       0       0
  3866 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3867 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3868 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3869 ;;Total ram usage:       10 bytes
  3870 ;; Hardware stack levels used: 1
  3871 ;; Hardware stack levels required when called: 1
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_efgtoa
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text8
  3880  003468                     __ptext8:
  3881                           	callstack 0
  3882  003468                     _strcpy:
  3883                           	callstack 25
  3884  003468  C003  F007         	movff	strcpy@src,strcpy@s
  3885  00346C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3886  003470  C001  F009         	movff	strcpy@dest,strcpy@d
  3887  003474  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3888  003478                     l3135:
  3889  003478  5007               	movf	strcpy@s^0,w,c
  3890  00347A  6E05               	movwf	??_strcpy^0,c
  3891  00347C  5008               	movf	(strcpy@s+1)^0,w,c
  3892  00347E  6E06               	movwf	(??_strcpy+1)^0,c
  3893  003480  4A07               	infsnz	strcpy@s^0,f,c
  3894  003482  2A08               	incf	(strcpy@s+1)^0,f,c
  3895  003484  C005  FFF6         	movff	??_strcpy,tblptrl
  3896  003488  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3897  00348C  6AF8               	clrf	tblptru,c
  3898  00348E  C009  FFD9         	movff	strcpy@d,fsr2l
  3899  003492  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3900  003496  4A09               	infsnz	strcpy@d^0,f,c
  3901  003498  2A0A               	incf	(strcpy@d+1)^0,f,c
  3902  00349A  0E07               	movlw	(high __ramtop+-1)
  3903  00349C  64F7               	cpfsgt	tblptrh,c
  3904  00349E  D003               	bra	u3547
  3905  0034A0  0008               	tblrd		*
  3906  0034A2  50F5               	movf	tablat,w,c
  3907  0034A4  D005               	bra	u3540
  3908  0034A6                     u3547:
  3909  0034A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  3910  0034AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  3911  0034AE  50EF               	movf	indf0,w,c
  3912  0034B0                     u3540:
  3913  0034B0  6EDF               	movwf	indf2,c
  3914  0034B2  50DF               	movf	indf2,w,c
  3915  0034B4  A4D8               	btfss	status,2,c
  3916  0034B6  EF5F  F01A         	goto	u3551
  3917  0034BA  EF61  F01A         	goto	u3550
  3918  0034BE                     u3551:
  3919  0034BE  EF3C  F01A         	goto	l3135
  3920  0034C2                     u3550:
  3921  0034C2  0012               	return		;funcret
  3922  0034C4                     __end_of_strcpy:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _pad *****************
  3926 ;; Defined at:
  3927 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3930 ;;		 -> sprintf@f(11), 
  3931 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3932 ;;		 -> dbuf(80), 
  3933 ;;  p               2   20[COMRAM] int 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  w               2   25[COMRAM] int 
  3936 ;;  i               2   23[COMRAM] int 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  2   16[COMRAM] int 
  3939 ;; Registers used:
  3940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3946 ;;      Params:         6       0       0       0       0       0       0       0       0
  3947 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3948 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3949 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3950 ;;Total ram usage:       11 bytes
  3951 ;; Hardware stack levels used: 1
  3952 ;; Hardware stack levels required when called: 4
  3953 ;; This function calls:
  3954 ;;		_fputc
  3955 ;;		_fputs
  3956 ;;		_strlen
  3957 ;; This function is called by:
  3958 ;;		_efgtoa
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text9
  3963  00307E                     __ptext9:
  3964                           	callstack 0
  3965  00307E                     _pad:
  3966                           	callstack 22
  3967  00307E                     
  3968                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3969  00307E  0100               	movlb	0	; () banked
  3970  003080  A1FB               	btfss	_flags& (0+255),0,b
  3971  003082  EF45  F018         	goto	u3431
  3972  003086  EF47  F018         	goto	u3430
  3973  00308A                     u3431:
  3974  00308A  EF51  F018         	goto	l3093
  3975  00308E                     u3430:
  3976  00308E                     
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3979  00308E  C013  F00A         	movff	pad@buf,fputs@s
  3980  003092  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3981  003096  C011  F00C         	movff	pad@fp,fputs@fp
  3982  00309A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3983  00309E  ECF4  F01A         	call	_fputs	;wreg free
  3984  0030A2                     l3093:
  3985                           
  3986                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3987  0030A2  BE16               	btfsc	(pad@p+1)^0,7,c
  3988  0030A4  EF56  F018         	goto	u3441
  3989  0030A8  EF58  F018         	goto	u3440
  3990  0030AC                     u3441:
  3991  0030AC  EF5E  F018         	goto	l3097
  3992  0030B0                     u3440:
  3993  0030B0  C015  F01A         	movff	pad@p,pad@w
  3994  0030B4  C016  F01B         	movff	pad@p+1,pad@w+1
  3995  0030B8  EF62  F018         	goto	l833
  3996  0030BC                     l3097:
  3997  0030BC  0E00               	movlw	0
  3998  0030BE  6E1B               	movwf	(pad@w+1)^0,c
  3999  0030C0  0E00               	movlw	0
  4000  0030C2  6E1A               	movwf	pad@w^0,c
  4001  0030C4                     l833:
  4002                           
  4003                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4004  0030C4  0E00               	movlw	0
  4005  0030C6  6E19               	movwf	(pad@i+1)^0,c
  4006  0030C8  0E00               	movlw	0
  4007  0030CA  6E18               	movwf	pad@i^0,c
  4008                           
  4009                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4010  0030CC  EF74  F018         	goto	l3103
  4011  0030D0                     l3099:
  4012                           
  4013                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4014  0030D0  0E00               	movlw	0
  4015  0030D2  6E02               	movwf	(fputc@c+1)^0,c
  4016  0030D4  0E20               	movlw	32
  4017  0030D6  6E01               	movwf	fputc@c^0,c
  4018  0030D8  C011  F003         	movff	pad@fp,fputc@fp
  4019  0030DC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4020  0030E0  ECDA  F017         	call	_fputc	;wreg free
  4021  0030E4                     
  4022                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4023  0030E4  4A18               	infsnz	pad@i^0,f,c
  4024  0030E6  2A19               	incf	(pad@i+1)^0,f,c
  4025  0030E8                     l3103:
  4026                           
  4027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4028  0030E8  501A               	movf	pad@w^0,w,c
  4029  0030EA  5C18               	subwf	pad@i^0,w,c
  4030  0030EC  5019               	movf	(pad@i+1)^0,w,c
  4031  0030EE  0A80               	xorlw	128
  4032  0030F0  6E17               	movwf	??_pad^0,c
  4033  0030F2  501B               	movf	(pad@w+1)^0,w,c
  4034  0030F4  0A80               	xorlw	128
  4035  0030F6  5817               	subwfb	??_pad^0,w,c
  4036  0030F8  A0D8               	btfss	status,0,c
  4037  0030FA  EF81  F018         	goto	u3451
  4038  0030FE  EF83  F018         	goto	u3450
  4039  003102                     u3451:
  4040  003102  EF68  F018         	goto	l3099
  4041  003106                     u3450:
  4042  003106                     
  4043                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4044  003106  0100               	movlb	0	; () banked
  4045  003108  B1FB               	btfsc	_flags& (0+255),0,b
  4046  00310A  EF89  F018         	goto	u3461
  4047  00310E  EF8B  F018         	goto	u3460
  4048  003112                     u3461:
  4049  003112  EF95  F018         	goto	l3107
  4050  003116                     u3460:
  4051  003116                     
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4054  003116  C013  F00A         	movff	pad@buf,fputs@s
  4055  00311A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4056  00311E  C011  F00C         	movff	pad@fp,fputs@fp
  4057  003122  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4058  003126  ECF4  F01A         	call	_fputs	;wreg free
  4059  00312A                     l3107:
  4060                           
  4061                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4062  00312A  C013  F001         	movff	pad@buf,strlen@s
  4063  00312E  C014  F002         	movff	pad@buf+1,strlen@s+1
  4064  003132  EC6E  F01B         	call	_strlen	;wreg free
  4065  003136  501A               	movf	pad@w^0,w,c
  4066  003138  2401               	addwf	?_strlen^0,w,c
  4067  00313A  6E11               	movwf	?_pad^0,c
  4068  00313C  501B               	movf	(pad@w+1)^0,w,c
  4069  00313E  2002               	addwfc	(?_strlen+1)^0,w,c
  4070  003140  6E12               	movwf	(?_pad+1)^0,c
  4071  003142  0012               	return		;funcret
  4072  003144                     __end_of_pad:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _strlen *****************
  4076 ;; Defined at:
  4077 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4080 ;;		 -> dbuf(80), 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4083 ;;		 -> dbuf(80), 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  2    0[COMRAM] unsigned int 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4093 ;;      Params:         2       0       0       0       0       0       0       0       0
  4094 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4096 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4097 ;;Total ram usage:        4 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_pad
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text10
  4108  0036DC                     __ptext10:
  4109                           	callstack 0
  4110  0036DC                     _strlen:
  4111                           	callstack 24
  4112  0036DC  C001  F003         	movff	strlen@s,strlen@a
  4113  0036E0  C002  F004         	movff	strlen@s+1,strlen@a+1
  4114  0036E4  EF76  F01B         	goto	l2635
  4115  0036E8                     l2633:
  4116  0036E8  4A01               	infsnz	strlen@s^0,f,c
  4117  0036EA  2A02               	incf	(strlen@s+1)^0,f,c
  4118  0036EC                     l2635:
  4119  0036EC  C001  FFD9         	movff	strlen@s,fsr2l
  4120  0036F0  C002  FFDA         	movff	strlen@s+1,fsr2h
  4121  0036F4  50DF               	movf	indf2,w,c
  4122  0036F6  A4D8               	btfss	status,2,c
  4123  0036F8  EF80  F01B         	goto	u2701
  4124  0036FC  EF82  F01B         	goto	u2700
  4125  003700                     u2701:
  4126  003700  EF74  F01B         	goto	l2633
  4127  003704                     u2700:
  4128  003704  5003               	movf	strlen@a^0,w,c
  4129  003706  5C01               	subwf	strlen@s^0,w,c
  4130  003708  6E01               	movwf	?_strlen^0,c
  4131  00370A  5004               	movf	(strlen@a+1)^0,w,c
  4132  00370C  5802               	subwfb	(strlen@s+1)^0,w,c
  4133  00370E  6E02               	movwf	(?_strlen+1)^0,c
  4134  003710  0012               	return		;funcret
  4135  003712                     __end_of_strlen:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function _fputs *****************
  4139 ;; Defined at:
  4140 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4143 ;;		 -> dbuf(80), 
  4144 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4145 ;;		 -> sprintf@f(11), 
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  i               2   14[COMRAM] int 
  4148 ;;  c               1   13[COMRAM] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  2    9[COMRAM] int 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4158 ;;      Params:         4       0       0       0       0       0       0       0       0
  4159 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4161 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4162 ;;Total ram usage:        7 bytes
  4163 ;; Hardware stack levels used: 1
  4164 ;; Hardware stack levels required when called: 3
  4165 ;; This function calls:
  4166 ;;		_fputc
  4167 ;; This function is called by:
  4168 ;;		_pad
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text11
  4173  0035E8                     __ptext11:
  4174                           	callstack 0
  4175  0035E8                     _fputs:
  4176                           	callstack 22
  4177  0035E8  0E00               	movlw	0
  4178  0035EA  6E10               	movwf	(fputs@i+1)^0,c
  4179  0035EC  0E00               	movlw	0
  4180  0035EE  6E0F               	movwf	fputs@i^0,c
  4181  0035F0  EF05  F01B         	goto	l2629
  4182  0035F4                     l2625:
  4183  0035F4  C00E  F001         	movff	fputs@c,fputc@c
  4184  0035F8  6A02               	clrf	(fputc@c+1)^0,c
  4185  0035FA  C00C  F003         	movff	fputs@fp,fputc@fp
  4186  0035FE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4187  003602  ECDA  F017         	call	_fputc	;wreg free
  4188  003606  4A0F               	infsnz	fputs@i^0,f,c
  4189  003608  2A10               	incf	(fputs@i+1)^0,f,c
  4190  00360A                     l2629:
  4191  00360A  500F               	movf	fputs@i^0,w,c
  4192  00360C  240A               	addwf	fputs@s^0,w,c
  4193  00360E  6ED9               	movwf	fsr2l,c
  4194  003610  5010               	movf	(fputs@i+1)^0,w,c
  4195  003612  200B               	addwfc	(fputs@s+1)^0,w,c
  4196  003614  6EDA               	movwf	fsr2h,c
  4197  003616  50DF               	movf	indf2,w,c
  4198  003618  6E0E               	movwf	fputs@c^0,c
  4199  00361A  500E               	movf	fputs@c^0,w,c
  4200  00361C  A4D8               	btfss	status,2,c
  4201  00361E  EF13  F01B         	goto	u2691
  4202  003622  EF15  F01B         	goto	u2690
  4203  003626                     u2691:
  4204  003626  EFFA  F01A         	goto	l2625
  4205  00362A                     u2690:
  4206  00362A  0012               	return		;funcret
  4207  00362C                     __end_of_fputs:
  4208                           	callstack 0
  4209                           
  4210 ;; *************** function _fputc *****************
  4211 ;; Defined at:
  4212 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  c               2    0[COMRAM] int 
  4215 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4216 ;;		 -> sprintf@f(11), 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;		None
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  2    0[COMRAM] int 
  4221 ;; Registers used:
  4222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4228 ;;      Params:         4       0       0       0       0       0       0       0       0
  4229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4230 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4231 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4232 ;;Total ram usage:        9 bytes
  4233 ;; Hardware stack levels used: 1
  4234 ;; Hardware stack levels required when called: 2
  4235 ;; This function calls:
  4236 ;;		_putch
  4237 ;; This function is called by:
  4238 ;;		_pad
  4239 ;;		_vfpfcnvrt
  4240 ;;		_fputs
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           	psect	text12
  4245  002FB4                     __ptext12:
  4246                           	callstack 0
  4247  002FB4                     _fputc:
  4248                           	callstack 25
  4249  002FB4  5003               	movf	fputc@fp^0,w,c
  4250  002FB6  1004               	iorwf	(fputc@fp+1)^0,w,c
  4251  002FB8  B4D8               	btfsc	status,2,c
  4252  002FBA  EFE1  F017         	goto	u2261
  4253  002FBE  EFE3  F017         	goto	u2260
  4254  002FC2                     u2261:
  4255  002FC2  EFEC  F017         	goto	l2411
  4256  002FC6                     u2260:
  4257  002FC6  5003               	movf	fputc@fp^0,w,c
  4258  002FC8  1004               	iorwf	(fputc@fp+1)^0,w,c
  4259  002FCA  A4D8               	btfss	status,2,c
  4260  002FCC  EFEA  F017         	goto	u2271
  4261  002FD0  EFEC  F017         	goto	u2270
  4262  002FD4                     u2271:
  4263  002FD4  EFF1  F017         	goto	l2413
  4264  002FD8                     u2270:
  4265  002FD8                     l2411:
  4266  002FD8  5001               	movf	fputc@c^0,w,c
  4267  002FDA  ECD3  F01B         	call	_putch
  4268  002FDE  EF3E  F018         	goto	l986
  4269  002FE2                     l2413:
  4270  002FE2  EE20 F009          	lfsr	2,9
  4271  002FE6  5003               	movf	fputc@fp^0,w,c
  4272  002FE8  26D9               	addwf	fsr2l,f,c
  4273  002FEA  5004               	movf	(fputc@fp+1)^0,w,c
  4274  002FEC  22DA               	addwfc	fsr2h,f,c
  4275  002FEE  50DE               	movf	postinc2,w,c
  4276  002FF0  10DE               	iorwf	postinc2,w,c
  4277  002FF2  B4D8               	btfsc	status,2,c
  4278  002FF4  EFFE  F017         	goto	u2281
  4279  002FF8  EF00  F018         	goto	u2280
  4280  002FFC                     u2281:
  4281  002FFC  EF1B  F018         	goto	l2417
  4282  003000                     u2280:
  4283  003000  EE20 F009          	lfsr	2,9
  4284  003004  5003               	movf	fputc@fp^0,w,c
  4285  003006  26D9               	addwf	fsr2l,f,c
  4286  003008  5004               	movf	(fputc@fp+1)^0,w,c
  4287  00300A  22DA               	addwfc	fsr2h,f,c
  4288  00300C  EE10 F003          	lfsr	1,3
  4289  003010  5003               	movf	fputc@fp^0,w,c
  4290  003012  26E1               	addwf	fsr1l,f,c
  4291  003014  5004               	movf	(fputc@fp+1)^0,w,c
  4292  003016  22E2               	addwfc	fsr1h,f,c
  4293  003018  50DE               	movf	postinc2,w,c
  4294  00301A  5CE6               	subwf	postinc1,w,c
  4295  00301C  50E6               	movf	postinc1,w,c
  4296  00301E  0A80               	xorlw	128
  4297  003020  6E09               	movwf	(??_fputc+4)^0,c
  4298  003022  50DE               	movf	postinc2,w,c
  4299  003024  0A80               	xorlw	128
  4300  003026  5809               	subwfb	(??_fputc+4)^0,w,c
  4301  003028  B0D8               	btfsc	status,0,c
  4302  00302A  EF19  F018         	goto	u2291
  4303  00302E  EF1B  F018         	goto	u2290
  4304  003032                     u2291:
  4305  003032  EF3E  F018         	goto	l986
  4306  003036                     u2290:
  4307  003036                     l2417:
  4308  003036  EE20 F003          	lfsr	2,3
  4309  00303A  5003               	movf	fputc@fp^0,w,c
  4310  00303C  26D9               	addwf	fsr2l,f,c
  4311  00303E  5004               	movf	(fputc@fp+1)^0,w,c
  4312  003040  22DA               	addwfc	fsr2h,f,c
  4313  003042  CFDE F005          	movff	postinc2,??_fputc
  4314  003046  CFDD F006          	movff	postdec2,??_fputc+1
  4315  00304A  C003  FFD9         	movff	fputc@fp,fsr2l
  4316  00304E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4317  003052  CFDE F007          	movff	postinc2,??_fputc+2
  4318  003056  CFDD F008          	movff	postdec2,??_fputc+3
  4319  00305A  5005               	movf	??_fputc^0,w,c
  4320  00305C  2407               	addwf	(??_fputc+2)^0,w,c
  4321  00305E  6ED9               	movwf	fsr2l,c
  4322  003060  5006               	movf	(??_fputc+1)^0,w,c
  4323  003062  2008               	addwfc	(??_fputc+3)^0,w,c
  4324  003064  6EDA               	movwf	fsr2h,c
  4325  003066  C001  FFDF         	movff	fputc@c,indf2
  4326  00306A  EE20 F003          	lfsr	2,3
  4327  00306E  5003               	movf	fputc@fp^0,w,c
  4328  003070  26D9               	addwf	fsr2l,f,c
  4329  003072  5004               	movf	(fputc@fp+1)^0,w,c
  4330  003074  22DA               	addwfc	fsr2h,f,c
  4331  003076  2ADE               	incf	postinc2,f,c
  4332  003078  0E00               	movlw	0
  4333  00307A  22DD               	addwfc	postdec2,f,c
  4334  00307C                     l986:
  4335  00307C  0012               	return		;funcret
  4336  00307E                     __end_of_fputc:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _putch *****************
  4340 ;; Defined at:
  4341 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  c               1    wreg     unsigned char 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  c               1    0[COMRAM] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4358 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4359 ;;Total ram usage:        0 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 1
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_fputc
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text13
  4370  0037A6                     __ptext13:
  4371                           	callstack 0
  4372  0037A6                     _putch:
  4373                           	callstack 25
  4374  0037A6  0012               	return		;funcret
  4375  0037A8                     __end_of_putch:
  4376                           	callstack 0
  4377                           
  4378 ;; *************** function _floorf *****************
  4379 ;; Defined at:
  4380 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  x               4   88[COMRAM] float 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  u               4   12[BANK0 ] struct .
  4385 ;;  m               4    6[BANK0 ] unsigned long 
  4386 ;;  e               2   10[BANK0 ] int 
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  4   88[COMRAM] float 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4396 ;;      Params:         4       0       0       0       0       0       0       0       0
  4397 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4398 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4399 ;;      Totals:         4      16       0       0       0       0       0       0       0
  4400 ;;Total ram usage:       20 bytes
  4401 ;; Hardware stack levels used: 1
  4402 ;; Hardware stack levels required when called: 1
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_efgtoa
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text14
  4411  0023EA                     __ptext14:
  4412                           	callstack 0
  4413  0023EA                     _floorf:
  4414                           	callstack 25
  4415  0023EA  C100  F06C         	movff	floorf@F526,floorf@u
  4416  0023EE  C101  F06D         	movff	floorf@F526+1,floorf@u+1
  4417  0023F2  C102  F06E         	movff	floorf@F526+2,floorf@u+2
  4418  0023F6  C103  F06F         	movff	floorf@F526+3,floorf@u+3
  4419  0023FA  C059  F06C         	movff	floorf@x,floorf@u
  4420  0023FE  C05A  F06D         	movff	floorf@x+1,floorf@u+1
  4421  002402  C05B  F06E         	movff	floorf@x+2,floorf@u+2
  4422  002406  C05C  F06F         	movff	floorf@x+3,floorf@u+3
  4423  00240A  0E81               	movlw	129
  4424  00240C  0100               	movlb	0	; () banked
  4425  00240E  6F60               	movwf	??_floorf& (0+255),b
  4426  002410  0EFF               	movlw	255
  4427  002412  6F61               	movwf	(??_floorf+1)& (0+255),b
  4428  002414  C06C  F062         	movff	floorf@u,??_floorf+2
  4429  002418  C06D  F063         	movff	floorf@u+1,??_floorf+3
  4430  00241C  C06E  F064         	movff	floorf@u+2,??_floorf+4
  4431  002420  C06F  F065         	movff	floorf@u+3,??_floorf+5
  4432  002424  0E18               	movlw	24
  4433  002426  EF1A  F012         	goto	u3570
  4434  00242A                     u3575:
  4435  00242A  90D8               	bcf	status,0,c
  4436  00242C  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  4437  00242E  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4438  002430  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4439  002432  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4440  002434                     u3570:
  4441  002434  2EE8               	decfsz	wreg,f,c
  4442  002436  EF15  F012         	goto	u3575
  4443  00243A  5162               	movf	(??_floorf+2)& (0+255),w,b
  4444  00243C  2560               	addwf	??_floorf& (0+255),w,b
  4445  00243E  6F6A               	movwf	floorf@e& (0+255),b
  4446  002440  0E00               	movlw	0
  4447  002442  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  4448  002444  6F6B               	movwf	(floorf@e+1)& (0+255),b
  4449  002446  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4450  002448  EF2F  F012         	goto	u3581
  4451  00244C  516B               	movf	(floorf@e+1)& (0+255),w,b
  4452  00244E  E109               	bnz	u3580
  4453  002450  0E17               	movlw	23
  4454  002452  5D6A               	subwf	floorf@e& (0+255),w,b
  4455  002454  A0D8               	btfss	status,0,c
  4456  002456  EF2F  F012         	goto	u3581
  4457  00245A  EF31  F012         	goto	u3580
  4458  00245E                     u3581:
  4459  00245E  EF3B  F012         	goto	l3153
  4460  002462                     u3580:
  4461  002462                     l3151:
  4462                           
  4463                           ; BSR set to: 0
  4464  002462  C059  F059         	movff	floorf@x,?_floorf
  4465  002466  C05A  F05A         	movff	floorf@x+1,?_floorf+1
  4466  00246A  C05B  F05B         	movff	floorf@x+2,?_floorf+2
  4467  00246E  C05C  F05C         	movff	floorf@x+3,?_floorf+3
  4468  002472  EFFF  F012         	goto	l961
  4469  002476                     l3153:
  4470                           
  4471                           ; BSR set to: 0
  4472  002476  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4473  002478  EF40  F012         	goto	u3591
  4474  00247C  EF42  F012         	goto	u3590
  4475  002480                     u3591:
  4476  002480  EFB3  F012         	goto	l3163
  4477  002484                     u3590:
  4478  002484                     
  4479                           ; BSR set to: 0
  4480  002484  C06A  F060         	movff	floorf@e,??_floorf
  4481  002488  0EFF               	movlw	255
  4482  00248A  6F61               	movwf	(??_floorf+1)& (0+255),b
  4483  00248C  0EFF               	movlw	255
  4484  00248E  6F62               	movwf	(??_floorf+2)& (0+255),b
  4485  002490  0E7F               	movlw	127
  4486  002492  6F63               	movwf	(??_floorf+3)& (0+255),b
  4487  002494  0E00               	movlw	0
  4488  002496  6F64               	movwf	(??_floorf+4)& (0+255),b
  4489  002498                     u3605:
  4490  002498  6760               	tstfsz	??_floorf& (0+255),b
  4491  00249A  EF51  F012         	goto	u3606
  4492  00249E  EF59  F012         	goto	u3607
  4493  0024A2                     u3606:
  4494  0024A2  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  4495  0024A4  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4496  0024A6  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4497  0024A8  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4498  0024AA  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4499  0024AC  2F60               	decfsz	??_floorf& (0+255),f,b
  4500  0024AE  EF4C  F012         	goto	u3605
  4501  0024B2                     u3607:
  4502  0024B2  C061  F066         	movff	??_floorf+1,floorf@m
  4503  0024B6  C062  F067         	movff	??_floorf+2,floorf@m+1
  4504  0024BA  C063  F068         	movff	??_floorf+3,floorf@m+2
  4505  0024BE  C064  F069         	movff	??_floorf+4,floorf@m+3
  4506  0024C2  0100               	movlb	0	; () banked
  4507  0024C4  5166               	movf	floorf@m& (0+255),w,b
  4508  0024C6  156C               	andwf	floorf@u& (0+255),w,b
  4509  0024C8  6F60               	movwf	??_floorf& (0+255),b
  4510  0024CA  5167               	movf	(floorf@m+1)& (0+255),w,b
  4511  0024CC  156D               	andwf	(floorf@u+1)& (0+255),w,b
  4512  0024CE  6F61               	movwf	(??_floorf+1)& (0+255),b
  4513  0024D0  5168               	movf	(floorf@m+2)& (0+255),w,b
  4514  0024D2  156E               	andwf	(floorf@u+2)& (0+255),w,b
  4515  0024D4  6F62               	movwf	(??_floorf+2)& (0+255),b
  4516  0024D6  5169               	movf	(floorf@m+3)& (0+255),w,b
  4517  0024D8  156F               	andwf	(floorf@u+3)& (0+255),w,b
  4518  0024DA  6F63               	movwf	(??_floorf+3)& (0+255),b
  4519  0024DC  5160               	movf	??_floorf& (0+255),w,b
  4520  0024DE  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4521  0024E0  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4522  0024E2  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4523  0024E4  A4D8               	btfss	status,2,c
  4524  0024E6  EF77  F012         	goto	u3611
  4525  0024EA  EF79  F012         	goto	u3610
  4526  0024EE                     u3611:
  4527  0024EE  EF7B  F012         	goto	l3159
  4528  0024F2                     u3610:
  4529  0024F2  EF31  F012         	goto	l3151
  4530  0024F6                     l3159:
  4531                           
  4532                           ; BSR set to: 0
  4533  0024F6  C06C  F060         	movff	floorf@u,??_floorf
  4534  0024FA  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4535  0024FE  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4536  002502  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4537  002506  0E20               	movlw	32
  4538  002508  EF8B  F012         	goto	u3620
  4539  00250C                     u3625:
  4540  00250C  90D8               	bcf	status,0,c
  4541  00250E  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4542  002510  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4543  002512  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4544  002514  3360               	rrcf	??_floorf& (0+255),f,b
  4545  002516                     u3620:
  4546  002516  2EE8               	decfsz	wreg,f,c
  4547  002518  EF86  F012         	goto	u3625
  4548  00251C  5160               	movf	??_floorf& (0+255),w,b
  4549  00251E  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4550  002520  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4551  002522  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4552  002524  B4D8               	btfsc	status,2,c
  4553  002526  EF97  F012         	goto	u3631
  4554  00252A  EF99  F012         	goto	u3630
  4555  00252E                     u3631:
  4556  00252E  EFA1  F012         	goto	l964
  4557  002532                     u3630:
  4558  002532                     
  4559                           ; BSR set to: 0
  4560  002532  5166               	movf	floorf@m& (0+255),w,b
  4561  002534  276C               	addwf	floorf@u& (0+255),f,b
  4562  002536  5167               	movf	(floorf@m+1)& (0+255),w,b
  4563  002538  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  4564  00253A  5168               	movf	(floorf@m+2)& (0+255),w,b
  4565  00253C  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  4566  00253E  5169               	movf	(floorf@m+3)& (0+255),w,b
  4567  002540  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  4568  002542                     l964:
  4569                           
  4570                           ; BSR set to: 0
  4571  002542  1D66               	comf	floorf@m& (0+255),w,b
  4572  002544  6F60               	movwf	??_floorf& (0+255),b
  4573  002546  1D67               	comf	(floorf@m+1)& (0+255),w,b
  4574  002548  6F61               	movwf	(??_floorf+1)& (0+255),b
  4575  00254A  1D68               	comf	(floorf@m+2)& (0+255),w,b
  4576  00254C  6F62               	movwf	(??_floorf+2)& (0+255),b
  4577  00254E  1D69               	comf	(floorf@m+3)& (0+255),w,b
  4578  002550  6F63               	movwf	(??_floorf+3)& (0+255),b
  4579  002552  5160               	movf	??_floorf& (0+255),w,b
  4580  002554  176C               	andwf	floorf@u& (0+255),f,b
  4581  002556  5161               	movf	(??_floorf+1)& (0+255),w,b
  4582  002558  176D               	andwf	(floorf@u+1)& (0+255),f,b
  4583  00255A  5162               	movf	(??_floorf+2)& (0+255),w,b
  4584  00255C  176E               	andwf	(floorf@u+2)& (0+255),f,b
  4585  00255E  5163               	movf	(??_floorf+3)& (0+255),w,b
  4586  002560  176F               	andwf	(floorf@u+3)& (0+255),f,b
  4587  002562  EFF7  F012         	goto	l3171
  4588  002566                     l3163:
  4589                           
  4590                           ; BSR set to: 0
  4591  002566  C06C  F060         	movff	floorf@u,??_floorf
  4592  00256A  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4593  00256E  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4594  002572  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4595  002576  0E20               	movlw	32
  4596  002578  EFC3  F012         	goto	u3640
  4597  00257C                     u3645:
  4598  00257C  90D8               	bcf	status,0,c
  4599  00257E  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4600  002580  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4601  002582  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4602  002584  3360               	rrcf	??_floorf& (0+255),f,b
  4603  002586                     u3640:
  4604  002586  2EE8               	decfsz	wreg,f,c
  4605  002588  EFBE  F012         	goto	u3645
  4606  00258C  5160               	movf	??_floorf& (0+255),w,b
  4607  00258E  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4608  002590  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4609  002592  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4610  002594  A4D8               	btfss	status,2,c
  4611  002596  EFCF  F012         	goto	u3651
  4612  00259A  EFD1  F012         	goto	u3650
  4613  00259E                     u3651:
  4614  00259E  EFDB  F012         	goto	l3167
  4615  0025A2                     u3650:
  4616  0025A2                     
  4617                           ; BSR set to: 0
  4618  0025A2  0E00               	movlw	0
  4619  0025A4  6F6C               	movwf	floorf@u& (0+255),b
  4620  0025A6  0E00               	movlw	0
  4621  0025A8  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4622  0025AA  0E00               	movlw	0
  4623  0025AC  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4624  0025AE  0E00               	movlw	0
  4625  0025B0  6F6F               	movwf	(floorf@u+3)& (0+255),b
  4626  0025B2  EFF7  F012         	goto	l3171
  4627  0025B6                     l3167:
  4628                           
  4629                           ; BSR set to: 0
  4630  0025B6  90D8               	bcf	status,0,c
  4631  0025B8  356C               	rlcf	floorf@u& (0+255),w,b
  4632  0025BA  6F60               	movwf	??_floorf& (0+255),b
  4633  0025BC  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  4634  0025BE  6F61               	movwf	(??_floorf+1)& (0+255),b
  4635  0025C0  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  4636  0025C2  6F62               	movwf	(??_floorf+2)& (0+255),b
  4637  0025C4  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  4638  0025C6  6F63               	movwf	(??_floorf+3)& (0+255),b
  4639  0025C8  5160               	movf	??_floorf& (0+255),w,b
  4640  0025CA  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4641  0025CC  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4642  0025CE  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4643  0025D0  B4D8               	btfsc	status,2,c
  4644  0025D2  EFED  F012         	goto	u3661
  4645  0025D6  EFEF  F012         	goto	u3660
  4646  0025DA                     u3661:
  4647  0025DA  EFF7  F012         	goto	l3171
  4648  0025DE                     u3660:
  4649  0025DE                     
  4650                           ; BSR set to: 0
  4651  0025DE  0E00               	movlw	0
  4652  0025E0  6F6C               	movwf	floorf@u& (0+255),b
  4653  0025E2  0E00               	movlw	0
  4654  0025E4  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4655  0025E6  0E80               	movlw	128
  4656  0025E8  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4657  0025EA  0EBF               	movlw	191
  4658  0025EC  6F6F               	movwf	(floorf@u+3)& (0+255),b
  4659  0025EE                     l3171:
  4660                           
  4661                           ; BSR set to: 0
  4662  0025EE  C06C  F059         	movff	floorf@u,?_floorf
  4663  0025F2  C06D  F05A         	movff	floorf@u+1,?_floorf+1
  4664  0025F6  C06E  F05B         	movff	floorf@u+2,?_floorf+2
  4665  0025FA  C06F  F05C         	movff	floorf@u+3,?_floorf+3
  4666  0025FE                     l961:
  4667                           
  4668                           ; BSR set to: 0
  4669  0025FE  0012               	return		;funcret
  4670  002600                     __end_of_floorf:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function ___fpclassifyf *****************
  4674 ;; Defined at:
  4675 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  x               4    0[COMRAM] float 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  u               4   10[COMRAM] struct .
  4680 ;;  e               2    8[COMRAM] int 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  2    0[COMRAM] int 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4690 ;;      Params:         4       0       0       0       0       0       0       0       0
  4691 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4692 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4693 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4694 ;;Total ram usage:       14 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 1
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_efgtoa
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text15
  4705  002CF8                     __ptext15:
  4706                           	callstack 0
  4707  002CF8                     ___fpclassifyf:
  4708                           	callstack 25
  4709  002CF8  C104  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4710  002CFC  C105  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4711  002D00  C106  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4712  002D04  C107  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4713  002D08  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4714  002D0C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4715  002D10  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4716  002D14  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4717  002D18  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4718  002D1C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4719  002D20  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4720  002D24  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4721  002D28  0E18               	movlw	24
  4722  002D2A  EF9C  F016         	goto	u3470
  4723  002D2E                     u3475:
  4724  002D2E  90D8               	bcf	status,0,c
  4725  002D30  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4726  002D32  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4727  002D34  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4728  002D36  3205               	rrcf	??___fpclassifyf^0,f,c
  4729  002D38                     u3470:
  4730  002D38  2EE8               	decfsz	wreg,f,c
  4731  002D3A  EF97  F016         	goto	u3475
  4732  002D3E  5005               	movf	??___fpclassifyf^0,w,c
  4733  002D40  6E09               	movwf	___fpclassifyf@e^0,c
  4734  002D42  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4735  002D44  5009               	movf	___fpclassifyf@e^0,w,c
  4736  002D46  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4737  002D48  A4D8               	btfss	status,2,c
  4738  002D4A  EFA9  F016         	goto	u3481
  4739  002D4E  EFAB  F016         	goto	u3480
  4740  002D52                     u3481:
  4741  002D52  EFCB  F016         	goto	l3123
  4742  002D56                     u3480:
  4743  002D56  90D8               	bcf	status,0,c
  4744  002D58  340B               	rlcf	___fpclassifyf@u^0,w,c
  4745  002D5A  6E05               	movwf	??___fpclassifyf^0,c
  4746  002D5C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4747  002D5E  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4748  002D60  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4749  002D62  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4750  002D64  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4751  002D66  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4752  002D68  5005               	movf	??___fpclassifyf^0,w,c
  4753  002D6A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4754  002D6C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4755  002D6E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4756  002D70  A4D8               	btfss	status,2,c
  4757  002D72  EFBD  F016         	goto	u3491
  4758  002D76  EFBF  F016         	goto	u3490
  4759  002D7A                     u3491:
  4760  002D7A  EFC5  F016         	goto	l3119
  4761  002D7E                     u3490:
  4762  002D7E  0E00               	movlw	0
  4763  002D80  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4764  002D82  0E02               	movlw	2
  4765  002D84  6E01               	movwf	?___fpclassifyf^0,c
  4766  002D86  EFFA  F016         	goto	l954
  4767  002D8A                     l3119:
  4768  002D8A  0E00               	movlw	0
  4769  002D8C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4770  002D8E  0E03               	movlw	3
  4771  002D90  6E01               	movwf	?___fpclassifyf^0,c
  4772  002D92  EFFA  F016         	goto	l954
  4773  002D96                     l3123:
  4774  002D96  2809               	incf	___fpclassifyf@e^0,w,c
  4775  002D98  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4776  002D9A  A4D8               	btfss	status,2,c
  4777  002D9C  EFD2  F016         	goto	u3501
  4778  002DA0  EFD4  F016         	goto	u3500
  4779  002DA4                     u3501:
  4780  002DA4  EFF6  F016         	goto	l3129
  4781  002DA8                     u3500:
  4782  002DA8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4783  002DAC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4784  002DB0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4785  002DB4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4786  002DB8  0E09               	movlw	9
  4787  002DBA                     u3515:
  4788  002DBA  90D8               	bcf	status,0,c
  4789  002DBC  3605               	rlcf	??___fpclassifyf^0,f,c
  4790  002DBE  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4791  002DC0  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4792  002DC2  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4793  002DC4  2EE8               	decfsz	wreg,f,c
  4794  002DC6  EFDD  F016         	goto	u3515
  4795  002DCA  5005               	movf	??___fpclassifyf^0,w,c
  4796  002DCC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4797  002DCE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4798  002DD0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4799  002DD2  B4D8               	btfsc	status,2,c
  4800  002DD4  EFEE  F016         	goto	u3521
  4801  002DD8  EFF1  F016         	goto	u3520
  4802  002DDC                     u3521:
  4803  002DDC  0E01               	movlw	1
  4804  002DDE  EFF2  F016         	goto	u3530
  4805  002DE2                     u3520:
  4806  002DE2  0E00               	movlw	0
  4807  002DE4                     u3530:
  4808  002DE4  6E01               	movwf	?___fpclassifyf^0,c
  4809  002DE6  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4810  002DE8  EFFA  F016         	goto	l954
  4811  002DEC                     l3129:
  4812  002DEC  0E00               	movlw	0
  4813  002DEE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4814  002DF0  0E04               	movlw	4
  4815  002DF2  6E01               	movwf	?___fpclassifyf^0,c
  4816  002DF4                     l954:
  4817  002DF4  0012               	return		;funcret
  4818  002DF6                     __end_of___fpclassifyf:
  4819                           	callstack 0
  4820                           
  4821 ;; *************** function ___fltol *****************
  4822 ;; Defined at:
  4823 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  f1              4    0[COMRAM] int 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  exp1            1    9[COMRAM] unsigned char 
  4828 ;;  sign1           1    8[COMRAM] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  4    0[COMRAM] long 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4838 ;;      Params:         4       0       0       0       0       0       0       0       0
  4839 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4840 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4841 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4842 ;;Total ram usage:       10 bytes
  4843 ;; Hardware stack levels used: 1
  4844 ;; Hardware stack levels required when called: 1
  4845 ;; This function calls:
  4846 ;;		Nothing
  4847 ;; This function is called by:
  4848 ;;		_efgtoa
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text16
  4853  002AEE                     __ptext16:
  4854                           	callstack 0
  4855  002AEE                     ___fltol:
  4856                           	callstack 25
  4857  002AEE  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4858  002AF0  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4859  002AF2  6E0A               	movwf	___fltol@exp1^0,c
  4860  002AF4  500A               	movf	___fltol@exp1^0,w,c
  4861  002AF6  A4D8               	btfss	status,2,c
  4862  002AF8  EF80  F015         	goto	u3361
  4863  002AFC  EF82  F015         	goto	u3360
  4864  002B00                     u3361:
  4865  002B00  EF8C  F015         	goto	l3051
  4866  002B04                     u3360:
  4867  002B04                     l3047:
  4868  002B04  0E00               	movlw	0
  4869  002B06  6E01               	movwf	?___fltol^0,c
  4870  002B08  0E00               	movlw	0
  4871  002B0A  6E02               	movwf	(?___fltol+1)^0,c
  4872  002B0C  0E00               	movlw	0
  4873  002B0E  6E03               	movwf	(?___fltol+2)^0,c
  4874  002B10  0E00               	movlw	0
  4875  002B12  6E04               	movwf	(?___fltol+3)^0,c
  4876  002B14  EFF9  F015         	goto	l415
  4877  002B18                     l3051:
  4878  002B18  C001  F005         	movff	___fltol@f1,??___fltol
  4879  002B1C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4880  002B20  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4881  002B24  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4882  002B28  0E20               	movlw	32
  4883  002B2A  EF9C  F015         	goto	u3370
  4884  002B2E                     u3375:
  4885  002B2E  90D8               	bcf	status,0,c
  4886  002B30  3208               	rrcf	(??___fltol+3)^0,f,c
  4887  002B32  3207               	rrcf	(??___fltol+2)^0,f,c
  4888  002B34  3206               	rrcf	(??___fltol+1)^0,f,c
  4889  002B36  3205               	rrcf	??___fltol^0,f,c
  4890  002B38                     u3370:
  4891  002B38  2EE8               	decfsz	wreg,f,c
  4892  002B3A  EF97  F015         	goto	u3375
  4893  002B3E  5005               	movf	??___fltol^0,w,c
  4894  002B40  6E09               	movwf	___fltol@sign1^0,c
  4895  002B42  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4896  002B44  0EFF               	movlw	255
  4897  002B46  1601               	andwf	___fltol@f1^0,f,c
  4898  002B48  0EFF               	movlw	255
  4899  002B4A  1602               	andwf	(___fltol@f1+1)^0,f,c
  4900  002B4C  0EFF               	movlw	255
  4901  002B4E  1603               	andwf	(___fltol@f1+2)^0,f,c
  4902  002B50  0E00               	movlw	0
  4903  002B52  1604               	andwf	(___fltol@f1+3)^0,f,c
  4904  002B54  0E96               	movlw	150
  4905  002B56  5E0A               	subwf	___fltol@exp1^0,f,c
  4906  002B58  BE0A               	btfsc	___fltol@exp1^0,7,c
  4907  002B5A  EFB3  F015         	goto	u3380
  4908  002B5E  EFB1  F015         	goto	u3381
  4909  002B62                     u3381:
  4910  002B62  EFC9  F015         	goto	l3071
  4911  002B66                     u3380:
  4912  002B66  500A               	movf	___fltol@exp1^0,w,c
  4913  002B68  0A80               	xorlw	128
  4914  002B6A  0F97               	addlw	151
  4915  002B6C  B0D8               	btfsc	status,0,c
  4916  002B6E  EFBB  F015         	goto	u3391
  4917  002B72  EFBD  F015         	goto	u3390
  4918  002B76                     u3391:
  4919  002B76  EFBF  F015         	goto	l3067
  4920  002B7A                     u3390:
  4921  002B7A  EF82  F015         	goto	l3047
  4922  002B7E                     l3067:
  4923  002B7E  90D8               	bcf	status,0,c
  4924  002B80  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4925  002B82  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4926  002B84  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4927  002B86  3201               	rrcf	___fltol@f1^0,f,c
  4928  002B88  3E0A               	incfsz	___fltol@exp1^0,f,c
  4929  002B8A  EFBF  F015         	goto	l3067
  4930  002B8E  EFE1  F015         	goto	l3081
  4931  002B92                     l3071:
  4932  002B92  0E1F               	movlw	31
  4933  002B94  640A               	cpfsgt	___fltol@exp1^0,c
  4934  002B96  EFCF  F015         	goto	u3401
  4935  002B9A  EFD1  F015         	goto	u3400
  4936  002B9E                     u3401:
  4937  002B9E  EFD9  F015         	goto	l3079
  4938  002BA2                     u3400:
  4939  002BA2  EF82  F015         	goto	l3047
  4940  002BA6                     l3077:
  4941  002BA6  90D8               	bcf	status,0,c
  4942  002BA8  3601               	rlcf	___fltol@f1^0,f,c
  4943  002BAA  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4944  002BAC  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4945  002BAE  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4946  002BB0  060A               	decf	___fltol@exp1^0,f,c
  4947  002BB2                     l3079:
  4948  002BB2  500A               	movf	___fltol@exp1^0,w,c
  4949  002BB4  A4D8               	btfss	status,2,c
  4950  002BB6  EFDF  F015         	goto	u3411
  4951  002BBA  EFE1  F015         	goto	u3410
  4952  002BBE                     u3411:
  4953  002BBE  EFD3  F015         	goto	l3077
  4954  002BC2                     u3410:
  4955  002BC2                     l3081:
  4956  002BC2  5009               	movf	___fltol@sign1^0,w,c
  4957  002BC4  B4D8               	btfsc	status,2,c
  4958  002BC6  EFE7  F015         	goto	u3421
  4959  002BCA  EFE9  F015         	goto	u3420
  4960  002BCE                     u3421:
  4961  002BCE  EFF1  F015         	goto	l3085
  4962  002BD2                     u3420:
  4963  002BD2  1E04               	comf	(___fltol@f1+3)^0,f,c
  4964  002BD4  1E03               	comf	(___fltol@f1+2)^0,f,c
  4965  002BD6  1E02               	comf	(___fltol@f1+1)^0,f,c
  4966  002BD8  6C01               	negf	___fltol@f1^0,c
  4967  002BDA  0E00               	movlw	0
  4968  002BDC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4969  002BDE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4970  002BE0  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4971  002BE2                     l3085:
  4972  002BE2  C001  F001         	movff	___fltol@f1,?___fltol
  4973  002BE6  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4974  002BEA  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4975  002BEE  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4976  002BF2                     l415:
  4977  002BF2  0012               	return		;funcret
  4978  002BF4                     __end_of___fltol:
  4979                           	callstack 0
  4980                           
  4981 ;; *************** function ___flneg *****************
  4982 ;; Defined at:
  4983 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  f1              4    0[COMRAM] long 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;		None
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  4    0[COMRAM] long 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4997 ;;      Params:         4       0       0       0       0       0       0       0       0
  4998 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5000 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5001 ;;Total ram usage:        4 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; Hardware stack levels required when called: 1
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_efgtoa
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text17
  5012  0036A4                     __ptext17:
  5013                           	callstack 0
  5014  0036A4                     ___flneg:
  5015                           	callstack 25
  5016  0036A4  5001               	movf	___flneg@f1^0,w,c
  5017  0036A6  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5018  0036A8  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5019  0036AA  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5020  0036AC  B4D8               	btfsc	status,2,c
  5021  0036AE  EF5B  F01B         	goto	u3351
  5022  0036B2  EF5D  F01B         	goto	u3350
  5023  0036B6                     u3351:
  5024  0036B6  EF65  F01B         	goto	l3041
  5025  0036BA                     u3350:
  5026  0036BA  0E00               	movlw	0
  5027  0036BC  1A01               	xorwf	___flneg@f1^0,f,c
  5028  0036BE  0E00               	movlw	0
  5029  0036C0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5030  0036C2  0E00               	movlw	0
  5031  0036C4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5032  0036C6  0E80               	movlw	128
  5033  0036C8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5034  0036CA                     l3041:
  5035  0036CA  C001  F001         	movff	___flneg@f1,?___flneg
  5036  0036CE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5037  0036D2  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5038  0036D6  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5039  0036DA  0012               	return		;funcret
  5040  0036DC                     __end_of___flneg:
  5041                           	callstack 0
  5042                           
  5043 ;; *************** function ___flge *****************
  5044 ;; Defined at:
  5045 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  ff1             4   39[COMRAM] long 
  5048 ;;  ff2             4   43[COMRAM] long 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;		None
  5051 ;; Return value:  Size  Location     Type
  5052 ;;		None               void
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5060 ;;      Params:         8       0       0       0       0       0       0       0       0
  5061 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5062 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5063 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5064 ;;Total ram usage:       12 bytes
  5065 ;; Hardware stack levels used: 1
  5066 ;; Hardware stack levels required when called: 1
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_efgtoa
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text18
  5075  002BF4                     __ptext18:
  5076                           	callstack 0
  5077  002BF4                     ___flge:
  5078                           	callstack 25
  5079  002BF4  0E00               	movlw	0
  5080  002BF6  1428               	andwf	___flge@ff1^0,w,c
  5081  002BF8  6E30               	movwf	??___flge^0,c
  5082  002BFA  0E00               	movlw	0
  5083  002BFC  1429               	andwf	(___flge@ff1+1)^0,w,c
  5084  002BFE  6E31               	movwf	(??___flge+1)^0,c
  5085  002C00  0E80               	movlw	128
  5086  002C02  142A               	andwf	(___flge@ff1+2)^0,w,c
  5087  002C04  6E32               	movwf	(??___flge+2)^0,c
  5088  002C06  0E7F               	movlw	127
  5089  002C08  142B               	andwf	(___flge@ff1+3)^0,w,c
  5090  002C0A  6E33               	movwf	(??___flge+3)^0,c
  5091  002C0C  5030               	movf	??___flge^0,w,c
  5092  002C0E  1031               	iorwf	(??___flge+1)^0,w,c
  5093  002C10  1032               	iorwf	(??___flge+2)^0,w,c
  5094  002C12  1033               	iorwf	(??___flge+3)^0,w,c
  5095  002C14  A4D8               	btfss	status,2,c
  5096  002C16  EF0F  F016         	goto	u3301
  5097  002C1A  EF11  F016         	goto	u3300
  5098  002C1E                     u3301:
  5099  002C1E  EF19  F016         	goto	l3019
  5100  002C22                     u3300:
  5101  002C22  0E00               	movlw	0
  5102  002C24  6E28               	movwf	___flge@ff1^0,c
  5103  002C26  0E00               	movlw	0
  5104  002C28  6E29               	movwf	(___flge@ff1+1)^0,c
  5105  002C2A  0E00               	movlw	0
  5106  002C2C  6E2A               	movwf	(___flge@ff1+2)^0,c
  5107  002C2E  0E00               	movlw	0
  5108  002C30  6E2B               	movwf	(___flge@ff1+3)^0,c
  5109  002C32                     l3019:
  5110  002C32  0E00               	movlw	0
  5111  002C34  142C               	andwf	___flge@ff2^0,w,c
  5112  002C36  6E30               	movwf	??___flge^0,c
  5113  002C38  0E00               	movlw	0
  5114  002C3A  142D               	andwf	(___flge@ff2+1)^0,w,c
  5115  002C3C  6E31               	movwf	(??___flge+1)^0,c
  5116  002C3E  0E80               	movlw	128
  5117  002C40  142E               	andwf	(___flge@ff2+2)^0,w,c
  5118  002C42  6E32               	movwf	(??___flge+2)^0,c
  5119  002C44  0E7F               	movlw	127
  5120  002C46  142F               	andwf	(___flge@ff2+3)^0,w,c
  5121  002C48  6E33               	movwf	(??___flge+3)^0,c
  5122  002C4A  5030               	movf	??___flge^0,w,c
  5123  002C4C  1031               	iorwf	(??___flge+1)^0,w,c
  5124  002C4E  1032               	iorwf	(??___flge+2)^0,w,c
  5125  002C50  1033               	iorwf	(??___flge+3)^0,w,c
  5126  002C52  A4D8               	btfss	status,2,c
  5127  002C54  EF2E  F016         	goto	u3311
  5128  002C58  EF30  F016         	goto	u3310
  5129  002C5C                     u3311:
  5130  002C5C  EF38  F016         	goto	l3023
  5131  002C60                     u3310:
  5132  002C60  0E00               	movlw	0
  5133  002C62  6E2C               	movwf	___flge@ff2^0,c
  5134  002C64  0E00               	movlw	0
  5135  002C66  6E2D               	movwf	(___flge@ff2+1)^0,c
  5136  002C68  0E00               	movlw	0
  5137  002C6A  6E2E               	movwf	(___flge@ff2+2)^0,c
  5138  002C6C  0E00               	movlw	0
  5139  002C6E  6E2F               	movwf	(___flge@ff2+3)^0,c
  5140  002C70                     l3023:
  5141  002C70  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5142  002C72  EF3D  F016         	goto	u3321
  5143  002C76  EF3F  F016         	goto	u3320
  5144  002C7A                     u3321:
  5145  002C7A  EF48  F016         	goto	l3027
  5146  002C7E                     u3320:
  5147  002C7E  6C28               	negf	___flge@ff1^0,c
  5148  002C80  1E29               	comf	(___flge@ff1+1)^0,f,c
  5149  002C82  B0D8               	btfsc	status,0,c
  5150  002C84  2A29               	incf	(___flge@ff1+1)^0,f,c
  5151  002C86  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5152  002C88  B0D8               	btfsc	status,0,c
  5153  002C8A  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5154  002C8C  0E80               	movlw	128
  5155  002C8E  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5156  002C90                     l3027:
  5157  002C90  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5158  002C92  EF4D  F016         	goto	u3331
  5159  002C96  EF4F  F016         	goto	u3330
  5160  002C9A                     u3331:
  5161  002C9A  EF58  F016         	goto	l383
  5162  002C9E                     u3330:
  5163  002C9E  6C2C               	negf	___flge@ff2^0,c
  5164  002CA0  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5165  002CA2  B0D8               	btfsc	status,0,c
  5166  002CA4  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5167  002CA6  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5168  002CA8  B0D8               	btfsc	status,0,c
  5169  002CAA  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5170  002CAC  0E80               	movlw	128
  5171  002CAE  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5172  002CB0                     l383:
  5173  002CB0  0E00               	movlw	0
  5174  002CB2  1A28               	xorwf	___flge@ff1^0,f,c
  5175  002CB4  0E00               	movlw	0
  5176  002CB6  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5177  002CB8  0E00               	movlw	0
  5178  002CBA  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5179  002CBC  0E80               	movlw	128
  5180  002CBE  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5181  002CC0  0E00               	movlw	0
  5182  002CC2  1A2C               	xorwf	___flge@ff2^0,f,c
  5183  002CC4  0E00               	movlw	0
  5184  002CC6  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5185  002CC8  0E00               	movlw	0
  5186  002CCA  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5187  002CCC  0E80               	movlw	128
  5188  002CCE  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5189  002CD0  502C               	movf	___flge@ff2^0,w,c
  5190  002CD2  5C28               	subwf	___flge@ff1^0,w,c
  5191  002CD4  502D               	movf	(___flge@ff2+1)^0,w,c
  5192  002CD6  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5193  002CD8  502E               	movf	(___flge@ff2+2)^0,w,c
  5194  002CDA  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5195  002CDC  502F               	movf	(___flge@ff2+3)^0,w,c
  5196  002CDE  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5197  002CE0  B0D8               	btfsc	status,0,c
  5198  002CE2  EF75  F016         	goto	u3341
  5199  002CE6  EF77  F016         	goto	u3340
  5200  002CEA                     u3341:
  5201  002CEA  EF7A  F016         	goto	l3033
  5202  002CEE                     u3340:
  5203  002CEE  90D8               	bcf	status,0,c
  5204  002CF0  EF7B  F016         	goto	l388
  5205  002CF4                     l3033:
  5206  002CF4  80D8               	bsf	status,0,c
  5207  002CF6                     l388:
  5208  002CF6  0012               	return		;funcret
  5209  002CF8                     __end_of___flge:
  5210                           	callstack 0
  5211                           
  5212 ;; *************** function ___fleq *****************
  5213 ;; Defined at:
  5214 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  ff1             4    0[COMRAM] long 
  5217 ;;  ff2             4    4[COMRAM] long 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;		None               void
  5222 ;; Registers used:
  5223 ;;		wreg, status,2, status,0
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5229 ;;      Params:         8       0       0       0       0       0       0       0       0
  5230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5231 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5232 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5233 ;;Total ram usage:       12 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; Hardware stack levels required when called: 1
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_efgtoa
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text19
  5244  0032B8                     __ptext19:
  5245                           	callstack 0
  5246  0032B8                     ___fleq:
  5247                           	callstack 25
  5248  0032B8  0E00               	movlw	0
  5249  0032BA  1401               	andwf	___fleq@ff1^0,w,c
  5250  0032BC  6E09               	movwf	??___fleq^0,c
  5251  0032BE  0E00               	movlw	0
  5252  0032C0  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5253  0032C2  6E0A               	movwf	(??___fleq+1)^0,c
  5254  0032C4  0E80               	movlw	128
  5255  0032C6  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5256  0032C8  6E0B               	movwf	(??___fleq+2)^0,c
  5257  0032CA  0E7F               	movlw	127
  5258  0032CC  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5259  0032CE  6E0C               	movwf	(??___fleq+3)^0,c
  5260  0032D0  5009               	movf	??___fleq^0,w,c
  5261  0032D2  100A               	iorwf	(??___fleq+1)^0,w,c
  5262  0032D4  100B               	iorwf	(??___fleq+2)^0,w,c
  5263  0032D6  100C               	iorwf	(??___fleq+3)^0,w,c
  5264  0032D8  A4D8               	btfss	status,2,c
  5265  0032DA  EF71  F019         	goto	u3271
  5266  0032DE  EF73  F019         	goto	u3270
  5267  0032E2                     u3271:
  5268  0032E2  EF7B  F019         	goto	l3003
  5269  0032E6                     u3270:
  5270  0032E6  0E00               	movlw	0
  5271  0032E8  6E01               	movwf	___fleq@ff1^0,c
  5272  0032EA  0E00               	movlw	0
  5273  0032EC  6E02               	movwf	(___fleq@ff1+1)^0,c
  5274  0032EE  0E00               	movlw	0
  5275  0032F0  6E03               	movwf	(___fleq@ff1+2)^0,c
  5276  0032F2  0E00               	movlw	0
  5277  0032F4  6E04               	movwf	(___fleq@ff1+3)^0,c
  5278  0032F6                     l3003:
  5279  0032F6  0E00               	movlw	0
  5280  0032F8  1405               	andwf	___fleq@ff2^0,w,c
  5281  0032FA  6E09               	movwf	??___fleq^0,c
  5282  0032FC  0E00               	movlw	0
  5283  0032FE  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5284  003300  6E0A               	movwf	(??___fleq+1)^0,c
  5285  003302  0E80               	movlw	128
  5286  003304  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5287  003306  6E0B               	movwf	(??___fleq+2)^0,c
  5288  003308  0E7F               	movlw	127
  5289  00330A  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5290  00330C  6E0C               	movwf	(??___fleq+3)^0,c
  5291  00330E  5009               	movf	??___fleq^0,w,c
  5292  003310  100A               	iorwf	(??___fleq+1)^0,w,c
  5293  003312  100B               	iorwf	(??___fleq+2)^0,w,c
  5294  003314  100C               	iorwf	(??___fleq+3)^0,w,c
  5295  003316  A4D8               	btfss	status,2,c
  5296  003318  EF90  F019         	goto	u3281
  5297  00331C  EF92  F019         	goto	u3280
  5298  003320                     u3281:
  5299  003320  EF9A  F019         	goto	l3007
  5300  003324                     u3280:
  5301  003324  0E00               	movlw	0
  5302  003326  6E05               	movwf	___fleq@ff2^0,c
  5303  003328  0E00               	movlw	0
  5304  00332A  6E06               	movwf	(___fleq@ff2+1)^0,c
  5305  00332C  0E00               	movlw	0
  5306  00332E  6E07               	movwf	(___fleq@ff2+2)^0,c
  5307  003330  0E00               	movlw	0
  5308  003332  6E08               	movwf	(___fleq@ff2+3)^0,c
  5309  003334                     l3007:
  5310  003334  5005               	movf	___fleq@ff2^0,w,c
  5311  003336  1801               	xorwf	___fleq@ff1^0,w,c
  5312  003338  E10F               	bnz	u3290
  5313  00333A  5006               	movf	(___fleq@ff2+1)^0,w,c
  5314  00333C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5315  00333E  E10C               	bnz	u3290
  5316  003340  5007               	movf	(___fleq@ff2+2)^0,w,c
  5317  003342  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5318  003344  E109               	bnz	u3290
  5319  003346  5008               	movf	(___fleq@ff2+3)^0,w,c
  5320  003348  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5321  00334A  B4D8               	btfsc	status,2,c
  5322  00334C  EFAA  F019         	goto	u3291
  5323  003350  EFAC  F019         	goto	u3290
  5324  003354                     u3291:
  5325  003354  EFAF  F019         	goto	l3011
  5326  003358                     u3290:
  5327  003358  90D8               	bcf	status,0,c
  5328  00335A  EFB0  F019         	goto	l377
  5329  00335E                     l3011:
  5330  00335E  80D8               	bsf	status,0,c
  5331  003360                     l377:
  5332  003360  0012               	return		;funcret
  5333  003362                     __end_of___fleq:
  5334                           	callstack 0
  5335                           
  5336 ;; *************** function ___awmod *****************
  5337 ;; Defined at:
  5338 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  dividend        2    0[COMRAM] int 
  5341 ;;  divisor         2    2[COMRAM] int 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  sign            1    5[COMRAM] unsigned char 
  5344 ;;  counter         1    4[COMRAM] unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  2    0[COMRAM] int 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5354 ;;      Params:         4       0       0       0       0       0       0       0       0
  5355 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5357 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5358 ;;Total ram usage:        6 bytes
  5359 ;; Hardware stack levels used: 1
  5360 ;; Hardware stack levels required when called: 1
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_efgtoa
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text20
  5369  003208                     __ptext20:
  5370                           	callstack 0
  5371  003208                     ___awmod:
  5372                           	callstack 25
  5373  003208  0E00               	movlw	0
  5374  00320A  6E06               	movwf	___awmod@sign^0,c
  5375  00320C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5376  00320E  EF0D  F019         	goto	u3210
  5377  003212  EF0B  F019         	goto	u3211
  5378  003216                     u3211:
  5379  003216  EF13  F019         	goto	l2971
  5380  00321A                     u3210:
  5381  00321A  6C01               	negf	___awmod@dividend^0,c
  5382  00321C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5383  00321E  B0D8               	btfsc	status,0,c
  5384  003220  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5385  003222  0E01               	movlw	1
  5386  003224  6E06               	movwf	___awmod@sign^0,c
  5387  003226                     l2971:
  5388  003226  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5389  003228  EF1A  F019         	goto	u3220
  5390  00322C  EF18  F019         	goto	u3221
  5391  003230                     u3221:
  5392  003230  EF1E  F019         	goto	l2975
  5393  003234                     u3220:
  5394  003234  6C03               	negf	___awmod@divisor^0,c
  5395  003236  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5396  003238  B0D8               	btfsc	status,0,c
  5397  00323A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5398  00323C                     l2975:
  5399  00323C  5003               	movf	___awmod@divisor^0,w,c
  5400  00323E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5401  003240  B4D8               	btfsc	status,2,c
  5402  003242  EF25  F019         	goto	u3231
  5403  003246  EF27  F019         	goto	u3230
  5404  00324A                     u3231:
  5405  00324A  EF4B  F019         	goto	l2991
  5406  00324E                     u3230:
  5407  00324E  0E01               	movlw	1
  5408  003250  6E05               	movwf	___awmod@counter^0,c
  5409  003252  EF2F  F019         	goto	l2981
  5410  003256                     l2979:
  5411  003256  90D8               	bcf	status,0,c
  5412  003258  3603               	rlcf	___awmod@divisor^0,f,c
  5413  00325A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5414  00325C  2A05               	incf	___awmod@counter^0,f,c
  5415  00325E                     l2981:
  5416  00325E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5417  003260  EF34  F019         	goto	u3241
  5418  003264  EF36  F019         	goto	u3240
  5419  003268                     u3241:
  5420  003268  EF2B  F019         	goto	l2979
  5421  00326C                     u3240:
  5422  00326C                     l2983:
  5423  00326C  5003               	movf	___awmod@divisor^0,w,c
  5424  00326E  5C01               	subwf	___awmod@dividend^0,w,c
  5425  003270  5004               	movf	(___awmod@divisor+1)^0,w,c
  5426  003272  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5427  003274  A0D8               	btfss	status,0,c
  5428  003276  EF3F  F019         	goto	u3251
  5429  00327A  EF41  F019         	goto	u3250
  5430  00327E                     u3251:
  5431  00327E  EF45  F019         	goto	l2987
  5432  003282                     u3250:
  5433  003282  5003               	movf	___awmod@divisor^0,w,c
  5434  003284  5E01               	subwf	___awmod@dividend^0,f,c
  5435  003286  5004               	movf	(___awmod@divisor+1)^0,w,c
  5436  003288  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5437  00328A                     l2987:
  5438  00328A  90D8               	bcf	status,0,c
  5439  00328C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5440  00328E  3203               	rrcf	___awmod@divisor^0,f,c
  5441  003290  2E05               	decfsz	___awmod@counter^0,f,c
  5442  003292  EF36  F019         	goto	l2983
  5443  003296                     l2991:
  5444  003296  5006               	movf	___awmod@sign^0,w,c
  5445  003298  B4D8               	btfsc	status,2,c
  5446  00329A  EF51  F019         	goto	u3261
  5447  00329E  EF53  F019         	goto	u3260
  5448  0032A2                     u3261:
  5449  0032A2  EF57  F019         	goto	l2995
  5450  0032A6                     u3260:
  5451  0032A6  6C01               	negf	___awmod@dividend^0,c
  5452  0032A8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5453  0032AA  B0D8               	btfsc	status,0,c
  5454  0032AC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5455  0032AE                     l2995:
  5456  0032AE  C001  F001         	movff	___awmod@dividend,?___awmod
  5457  0032B2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5458  0032B6  0012               	return		;funcret
  5459  0032B8                     __end_of___awmod:
  5460                           	callstack 0
  5461                           
  5462 ;; *************** function ___awdiv *****************
  5463 ;; Defined at:
  5464 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  dividend        2    0[COMRAM] int 
  5467 ;;  divisor         2    2[COMRAM] int 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  quotient        2    6[COMRAM] int 
  5470 ;;  sign            1    5[COMRAM] unsigned char 
  5471 ;;  counter         1    4[COMRAM] unsigned char 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  2    0[COMRAM] int 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5481 ;;      Params:         4       0       0       0       0       0       0       0       0
  5482 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5484 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5485 ;;Total ram usage:        8 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 1
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_efgtoa
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text21
  5496  003144                     __ptext21:
  5497                           	callstack 0
  5498  003144                     ___awdiv:
  5499                           	callstack 25
  5500  003144  0E00               	movlw	0
  5501  003146  6E06               	movwf	___awdiv@sign^0,c
  5502  003148  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5503  00314A  EFAB  F018         	goto	u3150
  5504  00314E  EFA9  F018         	goto	u3151
  5505  003152                     u3151:
  5506  003152  EFB1  F018         	goto	l2927
  5507  003156                     u3150:
  5508  003156  6C03               	negf	___awdiv@divisor^0,c
  5509  003158  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5510  00315A  B0D8               	btfsc	status,0,c
  5511  00315C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5512  00315E  0E01               	movlw	1
  5513  003160  6E06               	movwf	___awdiv@sign^0,c
  5514  003162                     l2927:
  5515  003162  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5516  003164  EFB8  F018         	goto	u3160
  5517  003168  EFB6  F018         	goto	u3161
  5518  00316C                     u3161:
  5519  00316C  EFBE  F018         	goto	l2933
  5520  003170                     u3160:
  5521  003170  6C01               	negf	___awdiv@dividend^0,c
  5522  003172  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5523  003174  B0D8               	btfsc	status,0,c
  5524  003176  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5525  003178  0E01               	movlw	1
  5526  00317A  1A06               	xorwf	___awdiv@sign^0,f,c
  5527  00317C                     l2933:
  5528  00317C  0E00               	movlw	0
  5529  00317E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5530  003180  0E00               	movlw	0
  5531  003182  6E07               	movwf	___awdiv@quotient^0,c
  5532  003184  5003               	movf	___awdiv@divisor^0,w,c
  5533  003186  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5534  003188  B4D8               	btfsc	status,2,c
  5535  00318A  EFC9  F018         	goto	u3171
  5536  00318E  EFCB  F018         	goto	u3170
  5537  003192                     u3171:
  5538  003192  EFF3  F018         	goto	l2955
  5539  003196                     u3170:
  5540  003196  0E01               	movlw	1
  5541  003198  6E05               	movwf	___awdiv@counter^0,c
  5542  00319A  EFD3  F018         	goto	l2941
  5543  00319E                     l2939:
  5544  00319E  90D8               	bcf	status,0,c
  5545  0031A0  3603               	rlcf	___awdiv@divisor^0,f,c
  5546  0031A2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5547  0031A4  2A05               	incf	___awdiv@counter^0,f,c
  5548  0031A6                     l2941:
  5549  0031A6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5550  0031A8  EFD8  F018         	goto	u3181
  5551  0031AC  EFDA  F018         	goto	u3180
  5552  0031B0                     u3181:
  5553  0031B0  EFCF  F018         	goto	l2939
  5554  0031B4                     u3180:
  5555  0031B4                     l2943:
  5556  0031B4  90D8               	bcf	status,0,c
  5557  0031B6  3607               	rlcf	___awdiv@quotient^0,f,c
  5558  0031B8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5559  0031BA  5003               	movf	___awdiv@divisor^0,w,c
  5560  0031BC  5C01               	subwf	___awdiv@dividend^0,w,c
  5561  0031BE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5562  0031C0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5563  0031C2  A0D8               	btfss	status,0,c
  5564  0031C4  EFE6  F018         	goto	u3191
  5565  0031C8  EFE8  F018         	goto	u3190
  5566  0031CC                     u3191:
  5567  0031CC  EFED  F018         	goto	l2951
  5568  0031D0                     u3190:
  5569  0031D0  5003               	movf	___awdiv@divisor^0,w,c
  5570  0031D2  5E01               	subwf	___awdiv@dividend^0,f,c
  5571  0031D4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5572  0031D6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5573  0031D8  8007               	bsf	___awdiv@quotient^0,0,c
  5574  0031DA                     l2951:
  5575  0031DA  90D8               	bcf	status,0,c
  5576  0031DC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5577  0031DE  3203               	rrcf	___awdiv@divisor^0,f,c
  5578  0031E0  2E05               	decfsz	___awdiv@counter^0,f,c
  5579  0031E2  EFDA  F018         	goto	l2943
  5580  0031E6                     l2955:
  5581  0031E6  5006               	movf	___awdiv@sign^0,w,c
  5582  0031E8  B4D8               	btfsc	status,2,c
  5583  0031EA  EFF9  F018         	goto	u3201
  5584  0031EE  EFFB  F018         	goto	u3200
  5585  0031F2                     u3201:
  5586  0031F2  EFFF  F018         	goto	l2959
  5587  0031F6                     u3200:
  5588  0031F6  6C07               	negf	___awdiv@quotient^0,c
  5589  0031F8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5590  0031FA  B0D8               	btfsc	status,0,c
  5591  0031FC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5592  0031FE                     l2959:
  5593  0031FE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5594  003202  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5595  003206  0012               	return		;funcret
  5596  003208                     __end_of___awdiv:
  5597                           	callstack 0
  5598                           
  5599 ;; *************** function _UART_Write_Text *****************
  5600 ;; Defined at:
  5601 ;;		line 44 in file "UART_LIB.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  text            2    1[COMRAM] PTR unsigned char 
  5604 ;;		 -> strUART(50), 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5616 ;;      Params:         2       0       0       0       0       0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5619 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5620 ;;Total ram usage:        2 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; Hardware stack levels required when called: 2
  5623 ;; This function calls:
  5624 ;;		_UART_Write_Chr
  5625 ;; This function is called by:
  5626 ;;		_main
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text22
  5631  003744                     __ptext22:
  5632                           	callstack 0
  5633  003744                     _UART_Write_Text:
  5634                           	callstack 28
  5635  003744                     
  5636                           ;UART_LIB.c: 45:     while(*text){
  5637  003744  EFAD  F01B         	goto	l3723
  5638  003748                     l3719:
  5639                           
  5640                           ;UART_LIB.c: 46:         UART_Write_Chr(*text);
  5641  003748  C002  FFD9         	movff	UART_Write_Text@text,fsr2l
  5642  00374C  C003  FFDA         	movff	UART_Write_Text@text+1,fsr2h
  5643  003750  50DF               	movf	indf2,w,c
  5644  003752  ECBA  F01B         	call	_UART_Write_Chr
  5645  003756                     
  5646                           ;UART_LIB.c: 47:         text++;
  5647  003756  4A02               	infsnz	UART_Write_Text@text^0,f,c
  5648  003758  2A03               	incf	(UART_Write_Text@text+1)^0,f,c
  5649  00375A                     l3723:
  5650                           
  5651                           ;UART_LIB.c: 45:     while(*text){
  5652  00375A  C002  FFD9         	movff	UART_Write_Text@text,fsr2l
  5653  00375E  C003  FFDA         	movff	UART_Write_Text@text+1,fsr2h
  5654  003762  50DF               	movf	indf2,w,c
  5655  003764  A4D8               	btfss	status,2,c
  5656  003766  EFB7  F01B         	goto	u4481
  5657  00376A  EFB9  F01B         	goto	u4480
  5658  00376E                     u4481:
  5659  00376E  EFA4  F01B         	goto	l3719
  5660  003772                     u4480:
  5661  003772  0012               	return		;funcret
  5662  003774                     __end_of_UART_Write_Text:
  5663                           	callstack 0
  5664                           
  5665 ;; *************** function _UART_Write_Chr *****************
  5666 ;; Defined at:
  5667 ;;		line 40 in file "UART_LIB.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  letter          1    wreg     unsigned char 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;  letter          1    0[COMRAM] unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      void 
  5674 ;; Registers used:
  5675 ;;		wreg
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5681 ;;      Params:         0       0       0       0       0       0       0       0       0
  5682 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5684 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5685 ;;Total ram usage:        1 bytes
  5686 ;; Hardware stack levels used: 1
  5687 ;; Hardware stack levels required when called: 1
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_UART_Write_Text
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text23
  5696  003774                     __ptext23:
  5697                           	callstack 0
  5698  003774                     _UART_Write_Chr:
  5699                           	callstack 28
  5700                           
  5701                           ;incstack = 0
  5702                           ;UART_Write_Chr@letter stored from wreg
  5703  003774  6E01               	movwf	UART_Write_Chr@letter^0,c
  5704  003776                     l78:
  5705  003776  A2AC               	btfss	172,1,c	;volatile
  5706  003778  EFC0  F01B         	goto	u4271
  5707  00377C  EFC2  F01B         	goto	u4270
  5708  003780                     u4271:
  5709  003780  EFBB  F01B         	goto	l78
  5710  003784                     u4270:
  5711  003784                     
  5712                           ;UART_LIB.c: 42:     TXREG = letter;
  5713  003784  C001  FFAD         	movff	UART_Write_Chr@letter,4013	;volatile
  5714  003788  0012               	return		;funcret
  5715  00378A                     __end_of_UART_Write_Chr:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function _UART_Init *****************
  5719 ;; Defined at:
  5720 ;;		line 5 in file "UART_LIB.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  config          8   13[COMRAM] struct .
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  spbrg_val       4   25[COMRAM] unsigned long 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2, status,0, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5734 ;;      Params:         8       0       0       0       0       0       0       0       0
  5735 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5736 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5737 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5738 ;;Total ram usage:       16 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 2
  5741 ;; This function calls:
  5742 ;;		___lldiv
  5743 ;; This function is called by:
  5744 ;;		_main
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text24
  5749  002DF6                     __ptext24:
  5750                           	callstack 0
  5751  002DF6                     _UART_Init:
  5752                           	callstack 28
  5753  002DF6                     
  5754                           ;UART_LIB.c: 7:     unsigned long spbrg_val = (20000000UL / (16 * config.baud_rate)) - 1
      +                          ;
  5755  002DF6  0E00               	movlw	0
  5756  002DF8  6E01               	movwf	___lldiv@dividend^0,c
  5757  002DFA  0E2D               	movlw	45
  5758  002DFC  6E02               	movwf	(___lldiv@dividend+1)^0,c
  5759  002DFE  0E31               	movlw	49
  5760  002E00  6E03               	movwf	(___lldiv@dividend+2)^0,c
  5761  002E02  0E01               	movlw	1
  5762  002E04  6E04               	movwf	(___lldiv@dividend+3)^0,c
  5763  002E06  C00E  F016         	movff	UART_Init@config,??_UART_Init
  5764  002E0A  C00F  F017         	movff	UART_Init@config+1,??_UART_Init+1
  5765  002E0E  C010  F018         	movff	UART_Init@config+2,??_UART_Init+2
  5766  002E12  C011  F019         	movff	UART_Init@config+3,??_UART_Init+3
  5767  002E16  0E04               	movlw	4
  5768  002E18                     u4425:
  5769  002E18  90D8               	bcf	status,0,c
  5770  002E1A  3616               	rlcf	??_UART_Init^0,f,c
  5771  002E1C  3617               	rlcf	(??_UART_Init+1)^0,f,c
  5772  002E1E  3618               	rlcf	(??_UART_Init+2)^0,f,c
  5773  002E20  3619               	rlcf	(??_UART_Init+3)^0,f,c
  5774  002E22  2EE8               	decfsz	wreg,f,c
  5775  002E24  EF0C  F017         	goto	u4425
  5776  002E28  C016  F005         	movff	??_UART_Init,___lldiv@divisor
  5777  002E2C  C017  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
  5778  002E30  C018  F007         	movff	??_UART_Init+2,___lldiv@divisor+2
  5779  002E34  C019  F008         	movff	??_UART_Init+3,___lldiv@divisor+3
  5780  002E38  ECB1  F019         	call	___lldiv	;wreg free
  5781  002E3C  0EFF               	movlw	255
  5782  002E3E  2401               	addwf	?___lldiv^0,w,c
  5783  002E40  6E1A               	movwf	UART_Init@spbrg_val^0,c
  5784  002E42  0EFF               	movlw	255
  5785  002E44  2002               	addwfc	(?___lldiv+1)^0,w,c
  5786  002E46  6E1B               	movwf	(UART_Init@spbrg_val+1)^0,c
  5787  002E48  0EFF               	movlw	255
  5788  002E4A  2003               	addwfc	(?___lldiv+2)^0,w,c
  5789  002E4C  6E1C               	movwf	(UART_Init@spbrg_val+2)^0,c
  5790  002E4E  0EFF               	movlw	255
  5791  002E50  2004               	addwfc	(?___lldiv+3)^0,w,c
  5792  002E52  6E1D               	movwf	(UART_Init@spbrg_val+3)^0,c
  5793  002E54                     
  5794                           ;UART_LIB.c: 8:     SPBRG = (unsigned char)(spbrg_val);
  5795  002E54  C01A  FFAF         	movff	UART_Init@spbrg_val,4015	;volatile
  5796  002E58                     
  5797                           ;UART_LIB.c: 11:     TXSTA = 0x24;
  5798  002E58  0E24               	movlw	36
  5799  002E5A  6EAC               	movwf	172,c	;volatile
  5800  002E5C                     
  5801                           ;UART_LIB.c: 12:     RCSTA = 0x90;
  5802  002E5C  0E90               	movlw	144
  5803  002E5E  6EAB               	movwf	171,c	;volatile
  5804  002E60                     
  5805                           ;UART_LIB.c: 15:     TX9 = config.data_bits == 9 ? 1 : 0;
  5806  002E60  0E09               	movlw	9
  5807  002E62  1812               	xorwf	(UART_Init@config+4)^0,w,c
  5808  002E64  B4D8               	btfsc	status,2,c
  5809  002E66  EF37  F017         	goto	u4431
  5810  002E6A  EF3A  F017         	goto	u4430
  5811  002E6E                     u4431:
  5812  002E6E  8CAC               	bsf	4012,6,c	;volatile
  5813  002E70  EF3B  F017         	goto	u4445
  5814  002E74                     u4430:
  5815  002E74  9CAC               	bcf	4012,6,c	;volatile
  5816  002E76                     u4445:
  5817  002E76                     
  5818                           ;UART_LIB.c: 16:     RX9 = config.data_bits == 9 ? 1 : 0;
  5819  002E76  0E09               	movlw	9
  5820  002E78  1812               	xorwf	(UART_Init@config+4)^0,w,c
  5821  002E7A  B4D8               	btfsc	status,2,c
  5822  002E7C  EF42  F017         	goto	u4451
  5823  002E80  EF45  F017         	goto	u4450
  5824  002E84                     u4451:
  5825  002E84  8CAB               	bsf	4011,6,c	;volatile
  5826  002E86  EF46  F017         	goto	u4465
  5827  002E8A                     u4450:
  5828  002E8A  9CAB               	bcf	4011,6,c	;volatile
  5829  002E8C                     u4465:
  5830  002E8C                     
  5831                           ;UART_LIB.c: 17:     TXEN = 1;
  5832  002E8C  8AAC               	bsf	4012,5,c	;volatile
  5833  002E8E                     
  5834                           ;UART_LIB.c: 18:     SYNC = 0;
  5835  002E8E  98AC               	bcf	4012,4,c	;volatile
  5836  002E90                     
  5837                           ;UART_LIB.c: 19:     SPEN = 1;
  5838  002E90  8EAB               	bsf	4011,7,c	;volatile
  5839                           
  5840                           ;UART_LIB.c: 22:     switch (config.parity) {
  5841  002E92  EF59  F017         	goto	l3683
  5842  002E96                     l71:
  5843                           
  5844                           ;UART_LIB.c: 24:             BRGH = 1;
  5845  002E96  84AC               	bsf	4012,2,c	;volatile
  5846                           
  5847                           ;UART_LIB.c: 25:             TX9D = 0;
  5848  002E98  90AC               	bcf	4012,0,c	;volatile
  5849  002E9A                     l3675:
  5850                           
  5851                           ;UART_LIB.c: 26:             RCSTA |= 0x02;
  5852  002E9A  82AB               	bsf	171,1,c	;volatile
  5853                           
  5854                           ;UART_LIB.c: 27:             break;
  5855  002E9C  EF6E  F017         	goto	l75
  5856  002EA0                     l73:
  5857                           
  5858                           ;UART_LIB.c: 29:             BRGH = 1;
  5859  002EA0  84AC               	bsf	4012,2,c	;volatile
  5860                           
  5861                           ;UART_LIB.c: 30:             TX9D = 1;
  5862  002EA2  80AC               	bsf	4012,0,c	;volatile
  5863  002EA4  EF4D  F017         	goto	l3675
  5864  002EA8                     l74:
  5865                           
  5866                           ;UART_LIB.c: 34:             BRGH = 1;
  5867  002EA8  84AC               	bsf	4012,2,c	;volatile
  5868                           
  5869                           ;UART_LIB.c: 35:             TX9D = 0;
  5870  002EAA  90AC               	bcf	4012,0,c	;volatile
  5871  002EAC                     
  5872                           ;UART_LIB.c: 36:             RCSTA &= ~0x02;
  5873  002EAC  92AB               	bcf	171,1,c	;volatile
  5874                           
  5875                           ;UART_LIB.c: 37:             break;
  5876  002EAE  EF6E  F017         	goto	l75
  5877  002EB2                     l3683:
  5878  002EB2  5013               	movf	(UART_Init@config+5)^0,w,c
  5879  002EB4  6E16               	movwf	??_UART_Init^0,c
  5880  002EB6  6A17               	clrf	(??_UART_Init+1)^0,c
  5881                           
  5882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5883                           ; Switch size 1, requested type "simple"
  5884                           ; Number of cases is 1, Range of values is 0 to 0
  5885                           ; switch strategies available:
  5886                           ; Name         Instructions Cycles
  5887                           ; simple_byte            4     3 (average)
  5888                           ;	Chosen strategy is simple_byte
  5889  002EB8  5017               	movf	(??_UART_Init+1)^0,w,c
  5890  002EBA  0A00               	xorlw	0	; case 0
  5891  002EBC  B4D8               	btfsc	status,2,c
  5892  002EBE  EF63  F017         	goto	l3777
  5893  002EC2  EF54  F017         	goto	l74
  5894  002EC6                     l3777:
  5895                           
  5896                           ; Switch size 1, requested type "simple"
  5897                           ; Number of cases is 2, Range of values is 1 to 2
  5898                           ; switch strategies available:
  5899                           ; Name         Instructions Cycles
  5900                           ; simple_byte            7     4 (average)
  5901                           ;	Chosen strategy is simple_byte
  5902  002EC6  5016               	movf	??_UART_Init^0,w,c
  5903  002EC8  0A01               	xorlw	1	; case 1
  5904  002ECA  B4D8               	btfsc	status,2,c
  5905  002ECC  EF4B  F017         	goto	l71
  5906  002ED0  0A03               	xorlw	3	; case 2
  5907  002ED2  B4D8               	btfsc	status,2,c
  5908  002ED4  EF50  F017         	goto	l73
  5909  002ED8  EF54  F017         	goto	l74
  5910  002EDC                     l75:
  5911  002EDC  0012               	return		;funcret
  5912  002EDE                     __end_of_UART_Init:
  5913                           	callstack 0
  5914                           
  5915 ;; *************** function ___lldiv *****************
  5916 ;; Defined at:
  5917 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  dividend        4    0[COMRAM] unsigned long 
  5920 ;;  divisor         4    4[COMRAM] unsigned long 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  quotient        4    8[COMRAM] unsigned long 
  5923 ;;  counter         1   12[COMRAM] unsigned char 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  4    0[COMRAM] unsigned long 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5933 ;;      Params:         8       0       0       0       0       0       0       0       0
  5934 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5936 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5937 ;;Total ram usage:       13 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; Hardware stack levels required when called: 1
  5940 ;; This function calls:
  5941 ;;		Nothing
  5942 ;; This function is called by:
  5943 ;;		_UART_Init
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text25
  5948  003362                     __ptext25:
  5949                           	callstack 0
  5950  003362                     ___lldiv:
  5951                           	callstack 28
  5952  003362  0E00               	movlw	0
  5953  003364  6E09               	movwf	___lldiv@quotient^0,c
  5954  003366  0E00               	movlw	0
  5955  003368  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5956  00336A  0E00               	movlw	0
  5957  00336C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5958  00336E  0E00               	movlw	0
  5959  003370  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5960  003372  5005               	movf	___lldiv@divisor^0,w,c
  5961  003374  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5962  003376  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5963  003378  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5964  00337A  B4D8               	btfsc	status,2,c
  5965  00337C  EFC2  F019         	goto	u4281
  5966  003380  EFC4  F019         	goto	u4280
  5967  003384                     u4281:
  5968  003384  EFFA  F019         	goto	l145
  5969  003388                     u4280:
  5970  003388  0E01               	movlw	1
  5971  00338A  6E0D               	movwf	___lldiv@counter^0,c
  5972  00338C  EFCE  F019         	goto	l3583
  5973  003390                     l3581:
  5974  003390  90D8               	bcf	status,0,c
  5975  003392  3605               	rlcf	___lldiv@divisor^0,f,c
  5976  003394  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5977  003396  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5978  003398  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5979  00339A  2A0D               	incf	___lldiv@counter^0,f,c
  5980  00339C                     l3583:
  5981  00339C  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5982  00339E  EFD3  F019         	goto	u4291
  5983  0033A2  EFD5  F019         	goto	u4290
  5984  0033A6                     u4291:
  5985  0033A6  EFC8  F019         	goto	l3581
  5986  0033AA                     u4290:
  5987  0033AA                     l3585:
  5988  0033AA  90D8               	bcf	status,0,c
  5989  0033AC  3609               	rlcf	___lldiv@quotient^0,f,c
  5990  0033AE  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5991  0033B0  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5992  0033B2  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5993  0033B4  5005               	movf	___lldiv@divisor^0,w,c
  5994  0033B6  5C01               	subwf	___lldiv@dividend^0,w,c
  5995  0033B8  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5996  0033BA  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5997  0033BC  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5998  0033BE  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5999  0033C0  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6000  0033C2  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6001  0033C4  A0D8               	btfss	status,0,c
  6002  0033C6  EFE7  F019         	goto	u4301
  6003  0033CA  EFE9  F019         	goto	u4300
  6004  0033CE                     u4301:
  6005  0033CE  EFF2  F019         	goto	l3593
  6006  0033D2                     u4300:
  6007  0033D2  5005               	movf	___lldiv@divisor^0,w,c
  6008  0033D4  5E01               	subwf	___lldiv@dividend^0,f,c
  6009  0033D6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6010  0033D8  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6011  0033DA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6012  0033DC  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6013  0033DE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6014  0033E0  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6015  0033E2  8009               	bsf	___lldiv@quotient^0,0,c
  6016  0033E4                     l3593:
  6017  0033E4  90D8               	bcf	status,0,c
  6018  0033E6  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6019  0033E8  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6020  0033EA  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6021  0033EC  3205               	rrcf	___lldiv@divisor^0,f,c
  6022  0033EE  2E0D               	decfsz	___lldiv@counter^0,f,c
  6023  0033F0  EFD5  F019         	goto	l3585
  6024  0033F4                     l145:
  6025  0033F4  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6026  0033F8  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6027  0033FC  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6028  003400  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6029  003404  0012               	return		;funcret
  6030  003406                     __end_of___lldiv:
  6031                           	callstack 0
  6032                           
  6033 ;; *************** function _ADC_Read *****************
  6034 ;; Defined at:
  6035 ;;		line 11 in file "ADC_LIB.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  channel         1    wreg     unsigned char 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  channel         1    4[COMRAM] unsigned char 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  2    0[COMRAM] int 
  6042 ;; Registers used:
  6043 ;;		wreg, status,2, status,0
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6049 ;;      Params:         2       0       0       0       0       0       0       0       0
  6050 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6051 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6052 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6053 ;;Total ram usage:        5 bytes
  6054 ;; Hardware stack levels used: 1
  6055 ;; Hardware stack levels required when called: 1
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_main
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text26
  6064  00362C                     __ptext26:
  6065                           	callstack 0
  6066  00362C                     _ADC_Read:
  6067                           	callstack 29
  6068                           
  6069                           ;incstack = 0
  6070                           ;ADC_Read@channel stored from wreg
  6071  00362C  6E05               	movwf	ADC_Read@channel^0,c
  6072  00362E                     
  6073                           ;ADC_LIB.c: 12:     ADCON0bits.CHS = channel & 0x0F;
  6074  00362E  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  6075  003632  0E0F               	movlw	15
  6076  003634  1603               	andwf	??_ADC_Read^0,f,c
  6077  003636  4603               	rlncf	??_ADC_Read^0,f,c
  6078  003638  4603               	rlncf	??_ADC_Read^0,f,c
  6079  00363A  50C2               	movf	194,w,c	;volatile
  6080  00363C  1803               	xorwf	??_ADC_Read^0,w,c
  6081  00363E  0BC3               	andlw	-61
  6082  003640  1803               	xorwf	??_ADC_Read^0,w,c
  6083  003642  6EC2               	movwf	194,c	;volatile
  6084  003644                     
  6085                           ;ADC_LIB.c: 13:     ADCON0bits.GODONE = 1;
  6086  003644  82C2               	bsf	194,1,c	;volatile
  6087  003646                     l109:
  6088  003646  B2C2               	btfsc	194,1,c	;volatile
  6089  003648  EF28  F01B         	goto	u4471
  6090  00364C  EF2A  F01B         	goto	u4470
  6091  003650                     u4471:
  6092  003650  EF23  F01B         	goto	l109
  6093  003654                     u4470:
  6094  003654                     
  6095                           ;ADC_LIB.c: 15:     return ( (ADRESH<<8) | (ADRESL<<0));
  6096  003654  50C3               	movf	195,w,c	;volatile
  6097  003656  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  6098  00365A  6A04               	clrf	(??_ADC_Read+1)^0,c
  6099  00365C  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  6100  003660  6A03               	clrf	??_ADC_Read^0,c
  6101  003662  1003               	iorwf	??_ADC_Read^0,w,c
  6102  003664  6E01               	movwf	?_ADC_Read^0,c
  6103  003666  5004               	movf	(??_ADC_Read+1)^0,w,c
  6104  003668  6E02               	movwf	(?_ADC_Read+1)^0,c
  6105  00366A  0012               	return		;funcret
  6106  00366C                     __end_of_ADC_Read:
  6107                           	callstack 0
  6108                           
  6109 ;; *************** function _ADC_MAP *****************
  6110 ;; Defined at:
  6111 ;;		line 18 in file "ADC_LIB.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  conver          2    0[BANK0 ] int 
  6114 ;;  xi              4    2[BANK0 ] float 
  6115 ;;  xf              4    6[BANK0 ] float 
  6116 ;;  yi              4   10[BANK0 ] float 
  6117 ;;  yf              4   14[BANK0 ] float 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  m               4   22[BANK0 ] float 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  4    0[BANK0 ] float 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6129 ;;      Params:         0      18       0       0       0       0       0       0       0
  6130 ;;      Locals:         0       8       0       0       0       0       0       0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6132 ;;      Totals:         0      26       0       0       0       0       0       0       0
  6133 ;;Total ram usage:       26 bytes
  6134 ;; Hardware stack levels used: 1
  6135 ;; Hardware stack levels required when called: 3
  6136 ;; This function calls:
  6137 ;;		___fladd
  6138 ;;		___fldiv
  6139 ;;		___flmul
  6140 ;;		___flsub
  6141 ;;		___xxtofl
  6142 ;; This function is called by:
  6143 ;;		_main
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text27
  6148  0029A8                     __ptext27:
  6149                           	callstack 0
  6150  0029A8                     _ADC_MAP:
  6151                           	callstack 27
  6152  0029A8                     
  6153                           ;ADC_LIB.c: 19:     float m;;ADC_LIB.c: 20:     m = (yf-yi)/(xf-xi);
  6154  0029A8  C06A  F03C         	movff	ADC_MAP@yi,___flsub@a
  6155  0029AC  C06B  F03D         	movff	ADC_MAP@yi+1,___flsub@a+1
  6156  0029B0  C06C  F03E         	movff	ADC_MAP@yi+2,___flsub@a+2
  6157  0029B4  C06D  F03F         	movff	ADC_MAP@yi+3,___flsub@a+3
  6158  0029B8  C06E  F038         	movff	ADC_MAP@yf,___flsub@b
  6159  0029BC  C06F  F039         	movff	ADC_MAP@yf+1,___flsub@b+1
  6160  0029C0  C070  F03A         	movff	ADC_MAP@yf+2,___flsub@b+2
  6161  0029C4  C071  F03B         	movff	ADC_MAP@yf+3,___flsub@b+3
  6162  0029C8  ECD1  F01A         	call	___flsub	;wreg free
  6163  0029CC  C038  F040         	movff	?___flsub,___fldiv@b
  6164  0029D0  C039  F041         	movff	?___flsub+1,___fldiv@b+1
  6165  0029D4  C03A  F042         	movff	?___flsub+2,___fldiv@b+2
  6166  0029D8  C03B  F043         	movff	?___flsub+3,___fldiv@b+3
  6167  0029DC  C062  F03C         	movff	ADC_MAP@xi,___flsub@a
  6168  0029E0  C063  F03D         	movff	ADC_MAP@xi+1,___flsub@a+1
  6169  0029E4  C064  F03E         	movff	ADC_MAP@xi+2,___flsub@a+2
  6170  0029E8  C065  F03F         	movff	ADC_MAP@xi+3,___flsub@a+3
  6171  0029EC  C066  F038         	movff	ADC_MAP@xf,___flsub@b
  6172  0029F0  C067  F039         	movff	ADC_MAP@xf+1,___flsub@b+1
  6173  0029F4  C068  F03A         	movff	ADC_MAP@xf+2,___flsub@b+2
  6174  0029F8  C069  F03B         	movff	ADC_MAP@xf+3,___flsub@b+3
  6175  0029FC  ECD1  F01A         	call	___flsub	;wreg free
  6176  002A00  C038  F044         	movff	?___flsub,___fldiv@a
  6177  002A04  C039  F045         	movff	?___flsub+1,___fldiv@a+1
  6178  002A08  C03A  F046         	movff	?___flsub+2,___fldiv@a+2
  6179  002A0C  C03B  F047         	movff	?___flsub+3,___fldiv@a+3
  6180  002A10  EC8E  F00E         	call	___fldiv	;wreg free
  6181  002A14  C040  F076         	movff	?___fldiv,ADC_MAP@m
  6182  002A18  C041  F077         	movff	?___fldiv+1,ADC_MAP@m+1
  6183  002A1C  C042  F078         	movff	?___fldiv+2,ADC_MAP@m+2
  6184  002A20  C043  F079         	movff	?___fldiv+3,ADC_MAP@m+3
  6185  002A24                     
  6186                           ;ADC_LIB.c: 21:     return (m*conver-m*xi+yi);
  6187  002A24  C062  F013         	movff	ADC_MAP@xi,___flmul@a
  6188  002A28  C063  F014         	movff	ADC_MAP@xi+1,___flmul@a+1
  6189  002A2C  C064  F015         	movff	ADC_MAP@xi+2,___flmul@a+2
  6190  002A30  C065  F016         	movff	ADC_MAP@xi+3,___flmul@a+3
  6191  002A34  C076  F00F         	movff	ADC_MAP@m,___flmul@b
  6192  002A38  C077  F010         	movff	ADC_MAP@m+1,___flmul@b+1
  6193  002A3C  C078  F011         	movff	ADC_MAP@m+2,___flmul@b+2
  6194  002A40  C079  F012         	movff	ADC_MAP@m+3,___flmul@b+3
  6195  002A44  EC79  F00C         	call	___flmul	;wreg free
  6196  002A48  C00F  F03C         	movff	?___flmul,___flsub@a
  6197  002A4C  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  6198  002A50  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  6199  002A54  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  6200  002A58  C076  F013         	movff	ADC_MAP@m,___flmul@a
  6201  002A5C  C077  F014         	movff	ADC_MAP@m+1,___flmul@a+1
  6202  002A60  C078  F015         	movff	ADC_MAP@m+2,___flmul@a+2
  6203  002A64  C079  F016         	movff	ADC_MAP@m+3,___flmul@a+3
  6204  002A68  C060  F001         	movff	ADC_MAP@conver,___xxtofl@val
  6205  002A6C  C061  F002         	movff	ADC_MAP@conver+1,___xxtofl@val+1
  6206  002A70  0E00               	movlw	0
  6207  002A72  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6208  002A74  0EFF               	movlw	-1
  6209  002A76  6E03               	movwf	(___xxtofl@val+2)^0,c
  6210  002A78  6E04               	movwf	(___xxtofl@val+3)^0,c
  6211  002A7A  0E01               	movlw	1
  6212  002A7C  ECFA  F013         	call	___xxtofl
  6213  002A80  C001  F00F         	movff	?___xxtofl,___flmul@b
  6214  002A84  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6215  002A88  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6216  002A8C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6217  002A90  EC79  F00C         	call	___flmul	;wreg free
  6218  002A94  C00F  F038         	movff	?___flmul,___flsub@b
  6219  002A98  C010  F039         	movff	?___flmul+1,___flsub@b+1
  6220  002A9C  C011  F03A         	movff	?___flmul+2,___flsub@b+2
  6221  002AA0  C012  F03B         	movff	?___flmul+3,___flsub@b+3
  6222  002AA4  ECD1  F01A         	call	___flsub	;wreg free
  6223  002AA8  C038  F072         	movff	?___flsub,_ADC_MAP$1270
  6224  002AAC  C039  F073         	movff	?___flsub+1,_ADC_MAP$1270+1
  6225  002AB0  C03A  F074         	movff	?___flsub+2,_ADC_MAP$1270+2
  6226  002AB4  C03B  F075         	movff	?___flsub+3,_ADC_MAP$1270+3
  6227  002AB8                     
  6228                           ;ADC_LIB.c: 21:     return (m*conver-m*xi+yi);
  6229  002AB8  C072  F028         	movff	_ADC_MAP$1270,___fladd@b
  6230  002ABC  C073  F029         	movff	_ADC_MAP$1270+1,___fladd@b+1
  6231  002AC0  C074  F02A         	movff	_ADC_MAP$1270+2,___fladd@b+2
  6232  002AC4  C075  F02B         	movff	_ADC_MAP$1270+3,___fladd@b+3
  6233  002AC8  C06A  F02C         	movff	ADC_MAP@yi,___fladd@a
  6234  002ACC  C06B  F02D         	movff	ADC_MAP@yi+1,___fladd@a+1
  6235  002AD0  C06C  F02E         	movff	ADC_MAP@yi+2,___fladd@a+2
  6236  002AD4  C06D  F02F         	movff	ADC_MAP@yi+3,___fladd@a+3
  6237  002AD8  EC19  F00A         	call	___fladd	;wreg free
  6238  002ADC  C028  F060         	movff	?___fladd,?_ADC_MAP
  6239  002AE0  C029  F061         	movff	?___fladd+1,?_ADC_MAP+1
  6240  002AE4  C02A  F062         	movff	?___fladd+2,?_ADC_MAP+2
  6241  002AE8  C02B  F063         	movff	?___fladd+3,?_ADC_MAP+3
  6242  002AEC  0012               	return		;funcret
  6243  002AEE                     __end_of_ADC_MAP:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function ___xxtofl *****************
  6247 ;; Defined at:
  6248 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  sign            1    wreg     unsigned char 
  6251 ;;  val             4    0[COMRAM] long 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  sign            1    8[COMRAM] unsigned char 
  6254 ;;  arg             4   10[COMRAM] unsigned long 
  6255 ;;  exp             1    9[COMRAM] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  4    0[COMRAM] unsigned char 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6265 ;;      Params:         4       0       0       0       0       0       0       0       0
  6266 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6267 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6268 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6269 ;;Total ram usage:       14 bytes
  6270 ;; Hardware stack levels used: 1
  6271 ;; Hardware stack levels required when called: 1
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_ADC_MAP
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text28
  6280  0027F4                     __ptext28:
  6281                           	callstack 0
  6282  0027F4                     ___xxtofl:
  6283                           	callstack 28
  6284                           
  6285                           ;incstack = 0
  6286                           ;___xxtofl@sign stored from wreg
  6287  0027F4  6E09               	movwf	___xxtofl@sign^0,c
  6288  0027F6  5009               	movf	___xxtofl@sign^0,w,c
  6289  0027F8  B4D8               	btfsc	status,2,c
  6290  0027FA  EF01  F014         	goto	u4311
  6291  0027FE  EF03  F014         	goto	u4310
  6292  002802                     u4311:
  6293  002802  EF25  F014         	goto	l773
  6294  002806                     u4310:
  6295  002806  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6296  002808  EF0A  F014         	goto	u4320
  6297  00280C  EF08  F014         	goto	u4321
  6298  002810                     u4321:
  6299  002810  EF25  F014         	goto	l773
  6300  002814                     u4320:
  6301  002814  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6302  002818  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6303  00281C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6304  002820  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6305  002824  1E05               	comf	??___xxtofl^0,f,c
  6306  002826  1E06               	comf	(??___xxtofl+1)^0,f,c
  6307  002828  1E07               	comf	(??___xxtofl+2)^0,f,c
  6308  00282A  1E08               	comf	(??___xxtofl+3)^0,f,c
  6309  00282C  2A05               	incf	??___xxtofl^0,f,c
  6310  00282E  0E00               	movlw	0
  6311  002830  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6312  002832  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6313  002834  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6314  002836  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6315  00283A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6316  00283E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6317  002842  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6318  002846  EF2D  F014         	goto	l3603
  6319  00284A                     l773:
  6320  00284A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6321  00284E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6322  002852  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6323  002856  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6324  00285A                     l3603:
  6325  00285A  5001               	movf	___xxtofl@val^0,w,c
  6326  00285C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6327  00285E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6328  002860  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6329  002862  A4D8               	btfss	status,2,c
  6330  002864  EF36  F014         	goto	u4331
  6331  002868  EF38  F014         	goto	u4330
  6332  00286C                     u4331:
  6333  00286C  EF42  F014         	goto	l3609
  6334  002870                     u4330:
  6335  002870  0E00               	movlw	0
  6336  002872  6E01               	movwf	?___xxtofl^0,c
  6337  002874  0E00               	movlw	0
  6338  002876  6E02               	movwf	(?___xxtofl+1)^0,c
  6339  002878  0E00               	movlw	0
  6340  00287A  6E03               	movwf	(?___xxtofl+2)^0,c
  6341  00287C  0E00               	movlw	0
  6342  00287E  6E04               	movwf	(?___xxtofl+3)^0,c
  6343  002880  EFD3  F014         	goto	l776
  6344  002884                     l3609:
  6345  002884  0E96               	movlw	150
  6346  002886  6E0A               	movwf	___xxtofl@exp^0,c
  6347  002888  EF4C  F014         	goto	l3613
  6348  00288C                     l3611:
  6349  00288C  2A0A               	incf	___xxtofl@exp^0,f,c
  6350  00288E  90D8               	bcf	status,0,c
  6351  002890  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6352  002892  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6353  002894  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6354  002896  320B               	rrcf	___xxtofl@arg^0,f,c
  6355  002898                     l3613:
  6356  002898  0E00               	movlw	0
  6357  00289A  140B               	andwf	___xxtofl@arg^0,w,c
  6358  00289C  6E05               	movwf	??___xxtofl^0,c
  6359  00289E  0E00               	movlw	0
  6360  0028A0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6361  0028A2  6E06               	movwf	(??___xxtofl+1)^0,c
  6362  0028A4  0E00               	movlw	0
  6363  0028A6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6364  0028A8  6E07               	movwf	(??___xxtofl+2)^0,c
  6365  0028AA  0EFE               	movlw	254
  6366  0028AC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6367  0028AE  6E08               	movwf	(??___xxtofl+3)^0,c
  6368  0028B0  5005               	movf	??___xxtofl^0,w,c
  6369  0028B2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6370  0028B4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6371  0028B6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6372  0028B8  A4D8               	btfss	status,2,c
  6373  0028BA  EF61  F014         	goto	u4341
  6374  0028BE  EF63  F014         	goto	u4340
  6375  0028C2                     u4341:
  6376  0028C2  EF46  F014         	goto	l3611
  6377  0028C6                     u4340:
  6378  0028C6  EF71  F014         	goto	l780
  6379  0028CA                     l3615:
  6380  0028CA  2A0A               	incf	___xxtofl@exp^0,f,c
  6381  0028CC  0E01               	movlw	1
  6382  0028CE  260B               	addwf	___xxtofl@arg^0,f,c
  6383  0028D0  0E00               	movlw	0
  6384  0028D2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6385  0028D4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6386  0028D6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6387  0028D8  90D8               	bcf	status,0,c
  6388  0028DA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6389  0028DC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6390  0028DE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6391  0028E0  320B               	rrcf	___xxtofl@arg^0,f,c
  6392  0028E2                     l780:
  6393  0028E2  0E00               	movlw	0
  6394  0028E4  140B               	andwf	___xxtofl@arg^0,w,c
  6395  0028E6  6E05               	movwf	??___xxtofl^0,c
  6396  0028E8  0E00               	movlw	0
  6397  0028EA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6398  0028EC  6E06               	movwf	(??___xxtofl+1)^0,c
  6399  0028EE  0E00               	movlw	0
  6400  0028F0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6401  0028F2  6E07               	movwf	(??___xxtofl+2)^0,c
  6402  0028F4  0EFF               	movlw	255
  6403  0028F6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6404  0028F8  6E08               	movwf	(??___xxtofl+3)^0,c
  6405  0028FA  5005               	movf	??___xxtofl^0,w,c
  6406  0028FC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6407  0028FE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6408  002900  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6409  002902  A4D8               	btfss	status,2,c
  6410  002904  EF86  F014         	goto	u4351
  6411  002908  EF88  F014         	goto	u4350
  6412  00290C                     u4351:
  6413  00290C  EF65  F014         	goto	l3615
  6414  002910                     u4350:
  6415  002910  EF90  F014         	goto	l3623
  6416  002914                     l3621:
  6417  002914  060A               	decf	___xxtofl@exp^0,f,c
  6418  002916  90D8               	bcf	status,0,c
  6419  002918  360B               	rlcf	___xxtofl@arg^0,f,c
  6420  00291A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6421  00291C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6422  00291E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6423  002920                     l3623:
  6424  002920  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6425  002922  EF95  F014         	goto	u4361
  6426  002926  EF97  F014         	goto	u4360
  6427  00292A                     u4361:
  6428  00292A  EF9F  F014         	goto	l787
  6429  00292E                     u4360:
  6430  00292E  0E02               	movlw	2
  6431  002930  600A               	cpfslt	___xxtofl@exp^0,c
  6432  002932  EF9D  F014         	goto	u4371
  6433  002936  EF9F  F014         	goto	u4370
  6434  00293A                     u4371:
  6435  00293A  EF8A  F014         	goto	l3621
  6436  00293E                     u4370:
  6437  00293E                     l787:
  6438  00293E  B00A               	btfsc	___xxtofl@exp^0,0,c
  6439  002940  EFA4  F014         	goto	u4381
  6440  002944  EFA6  F014         	goto	u4380
  6441  002948                     u4381:
  6442  002948  EFA7  F014         	goto	l3629
  6443  00294C                     u4380:
  6444  00294C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6445  00294E                     l3629:
  6446  00294E  90D8               	bcf	status,0,c
  6447  002950  320A               	rrcf	___xxtofl@exp^0,f,c
  6448  002952  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6449  002956  6A06               	clrf	(??___xxtofl+1)^0,c
  6450  002958  6A07               	clrf	(??___xxtofl+2)^0,c
  6451  00295A  6A08               	clrf	(??___xxtofl+3)^0,c
  6452  00295C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6453  002960  6A07               	clrf	(??___xxtofl+2)^0,c
  6454  002962  6A06               	clrf	(??___xxtofl+1)^0,c
  6455  002964  6A05               	clrf	??___xxtofl^0,c
  6456  002966  5005               	movf	??___xxtofl^0,w,c
  6457  002968  120B               	iorwf	___xxtofl@arg^0,f,c
  6458  00296A  5006               	movf	(??___xxtofl+1)^0,w,c
  6459  00296C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6460  00296E  5007               	movf	(??___xxtofl+2)^0,w,c
  6461  002970  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6462  002972  5008               	movf	(??___xxtofl+3)^0,w,c
  6463  002974  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6464  002976  5009               	movf	___xxtofl@sign^0,w,c
  6465  002978  B4D8               	btfsc	status,2,c
  6466  00297A  EFC1  F014         	goto	u4391
  6467  00297E  EFC3  F014         	goto	u4390
  6468  002982                     u4391:
  6469  002982  EFCB  F014         	goto	l3639
  6470  002986                     u4390:
  6471  002986  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6472  002988  EFCA  F014         	goto	u4400
  6473  00298C  EFC8  F014         	goto	u4401
  6474  002990                     u4401:
  6475  002990  EFCB  F014         	goto	l3639
  6476  002994                     u4400:
  6477  002994  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6478  002996                     l3639:
  6479  002996  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6480  00299A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6481  00299E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6482  0029A2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6483  0029A6                     l776:
  6484  0029A6  0012               	return		;funcret
  6485  0029A8                     __end_of___xxtofl:
  6486                           	callstack 0
  6487                           
  6488 ;; *************** function ___flsub *****************
  6489 ;; Defined at:
  6490 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  b               4   55[COMRAM] unsigned char 
  6493 ;;  a               4   59[COMRAM] unsigned char 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  4   55[COMRAM] unsigned char 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6505 ;;      Params:         8       0       0       0       0       0       0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6508 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6509 ;;Total ram usage:        8 bytes
  6510 ;; Hardware stack levels used: 1
  6511 ;; Hardware stack levels required when called: 2
  6512 ;; This function calls:
  6513 ;;		___fladd
  6514 ;; This function is called by:
  6515 ;;		_ADC_MAP
  6516 ;;		_efgtoa
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text29
  6521  0035A2                     __ptext29:
  6522                           	callstack 0
  6523  0035A2                     ___flsub:
  6524                           	callstack 24
  6525  0035A2  0E00               	movlw	0
  6526  0035A4  1A3C               	xorwf	___flsub@a^0,f,c
  6527  0035A6  0E00               	movlw	0
  6528  0035A8  1A3D               	xorwf	(___flsub@a+1)^0,f,c
  6529  0035AA  0E00               	movlw	0
  6530  0035AC  1A3E               	xorwf	(___flsub@a+2)^0,f,c
  6531  0035AE  0E80               	movlw	128
  6532  0035B0  1A3F               	xorwf	(___flsub@a+3)^0,f,c
  6533  0035B2  C038  F028         	movff	___flsub@b,___fladd@b
  6534  0035B6  C039  F029         	movff	___flsub@b+1,___fladd@b+1
  6535  0035BA  C03A  F02A         	movff	___flsub@b+2,___fladd@b+2
  6536  0035BE  C03B  F02B         	movff	___flsub@b+3,___fladd@b+3
  6537  0035C2  C03C  F02C         	movff	___flsub@a,___fladd@a
  6538  0035C6  C03D  F02D         	movff	___flsub@a+1,___fladd@a+1
  6539  0035CA  C03E  F02E         	movff	___flsub@a+2,___fladd@a+2
  6540  0035CE  C03F  F02F         	movff	___flsub@a+3,___fladd@a+3
  6541  0035D2  EC19  F00A         	call	___fladd	;wreg free
  6542  0035D6  C028  F038         	movff	?___fladd,?___flsub
  6543  0035DA  C029  F039         	movff	?___fladd+1,?___flsub+1
  6544  0035DE  C02A  F03A         	movff	?___fladd+2,?___flsub+2
  6545  0035E2  C02B  F03B         	movff	?___fladd+3,?___flsub+3
  6546  0035E6  0012               	return		;funcret
  6547  0035E8                     __end_of___flsub:
  6548                           	callstack 0
  6549                           
  6550 ;; *************** function ___fladd *****************
  6551 ;; Defined at:
  6552 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  b               4   39[COMRAM] unsigned char 
  6555 ;;  a               4   43[COMRAM] unsigned char 
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;  grs             1   54[COMRAM] unsigned char 
  6558 ;;  bexp            1   53[COMRAM] unsigned char 
  6559 ;;  aexp            1   52[COMRAM] unsigned char 
  6560 ;;  signs           1   51[COMRAM] unsigned char 
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  4   39[COMRAM] unsigned char 
  6563 ;; Registers used:
  6564 ;;		wreg, status,2, status,0
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6570 ;;      Params:         8       0       0       0       0       0       0       0       0
  6571 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6572 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6573 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6574 ;;Total ram usage:       16 bytes
  6575 ;; Hardware stack levels used: 1
  6576 ;; Hardware stack levels required when called: 1
  6577 ;; This function calls:
  6578 ;;		Nothing
  6579 ;; This function is called by:
  6580 ;;		_ADC_MAP
  6581 ;;		___flsub
  6582 ;;		_efgtoa
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text30
  6587  001432                     __ptext30:
  6588                           	callstack 0
  6589  001432                     ___fladd:
  6590                           	callstack 24
  6591  001432  502B               	movf	(___fladd@b+3)^0,w,c
  6592  001434  0B80               	andlw	128
  6593  001436  6E34               	movwf	___fladd@signs^0,c
  6594  001438  502B               	movf	(___fladd@b+3)^0,w,c
  6595  00143A  242B               	addwf	(___fladd@b+3)^0,w,c
  6596  00143C  6E36               	movwf	___fladd@bexp^0,c
  6597  00143E  AE2A               	btfss	(___fladd@b+2)^0,7,c
  6598  001440  EF24  F00A         	goto	u2301
  6599  001444  EF26  F00A         	goto	u2300
  6600  001448                     u2301:
  6601  001448  EF27  F00A         	goto	l2427
  6602  00144C                     u2300:
  6603  00144C  8036               	bsf	___fladd@bexp^0,0,c
  6604  00144E                     l2427:
  6605  00144E  5036               	movf	___fladd@bexp^0,w,c
  6606  001450  B4D8               	btfsc	status,2,c
  6607  001452  EF2D  F00A         	goto	u2311
  6608  001456  EF2F  F00A         	goto	u2310
  6609  00145A                     u2311:
  6610  00145A  EF44  F00A         	goto	l2437
  6611  00145E                     u2310:
  6612  00145E  2836               	incf	___fladd@bexp^0,w,c
  6613  001460  A4D8               	btfss	status,2,c
  6614  001462  EF35  F00A         	goto	u2321
  6615  001466  EF37  F00A         	goto	u2320
  6616  00146A                     u2321:
  6617  00146A  EF3F  F00A         	goto	l2433
  6618  00146E                     u2320:
  6619  00146E  0E00               	movlw	0
  6620  001470  6E28               	movwf	___fladd@b^0,c
  6621  001472  0E00               	movlw	0
  6622  001474  6E29               	movwf	(___fladd@b+1)^0,c
  6623  001476  0E00               	movlw	0
  6624  001478  6E2A               	movwf	(___fladd@b+2)^0,c
  6625  00147A  0E00               	movlw	0
  6626  00147C  6E2B               	movwf	(___fladd@b+3)^0,c
  6627  00147E                     l2433:
  6628  00147E  8E2A               	bsf	(___fladd@b+2)^0,7,c
  6629  001480  0E00               	movlw	0
  6630  001482  6E2B               	movwf	(___fladd@b+3)^0,c
  6631  001484  EF4C  F00A         	goto	l2439
  6632  001488                     l2437:
  6633  001488  0E00               	movlw	0
  6634  00148A  6E28               	movwf	___fladd@b^0,c
  6635  00148C  0E00               	movlw	0
  6636  00148E  6E29               	movwf	(___fladd@b+1)^0,c
  6637  001490  0E00               	movlw	0
  6638  001492  6E2A               	movwf	(___fladd@b+2)^0,c
  6639  001494  0E00               	movlw	0
  6640  001496  6E2B               	movwf	(___fladd@b+3)^0,c
  6641  001498                     l2439:
  6642  001498  502F               	movf	(___fladd@a+3)^0,w,c
  6643  00149A  0B80               	andlw	128
  6644  00149C  6E35               	movwf	___fladd@aexp^0,c
  6645  00149E  5034               	movf	___fladd@signs^0,w,c
  6646  0014A0  1835               	xorwf	___fladd@aexp^0,w,c
  6647  0014A2  B4D8               	btfsc	status,2,c
  6648  0014A4  EF56  F00A         	goto	u2331
  6649  0014A8  EF58  F00A         	goto	u2330
  6650  0014AC                     u2331:
  6651  0014AC  EF59  F00A         	goto	l2445
  6652  0014B0                     u2330:
  6653  0014B0  8C34               	bsf	___fladd@signs^0,6,c
  6654  0014B2                     l2445:
  6655  0014B2  502F               	movf	(___fladd@a+3)^0,w,c
  6656  0014B4  242F               	addwf	(___fladd@a+3)^0,w,c
  6657  0014B6  6E35               	movwf	___fladd@aexp^0,c
  6658  0014B8  AE2E               	btfss	(___fladd@a+2)^0,7,c
  6659  0014BA  EF61  F00A         	goto	u2341
  6660  0014BE  EF63  F00A         	goto	u2340
  6661  0014C2                     u2341:
  6662  0014C2  EF64  F00A         	goto	l2451
  6663  0014C6                     u2340:
  6664  0014C6  8035               	bsf	___fladd@aexp^0,0,c
  6665  0014C8                     l2451:
  6666  0014C8  5035               	movf	___fladd@aexp^0,w,c
  6667  0014CA  B4D8               	btfsc	status,2,c
  6668  0014CC  EF6A  F00A         	goto	u2351
  6669  0014D0  EF6C  F00A         	goto	u2350
  6670  0014D4                     u2351:
  6671  0014D4  EF81  F00A         	goto	l2461
  6672  0014D8                     u2350:
  6673  0014D8  2835               	incf	___fladd@aexp^0,w,c
  6674  0014DA  A4D8               	btfss	status,2,c
  6675  0014DC  EF72  F00A         	goto	u2361
  6676  0014E0  EF74  F00A         	goto	u2360
  6677  0014E4                     u2361:
  6678  0014E4  EF7C  F00A         	goto	l2457
  6679  0014E8                     u2360:
  6680  0014E8  0E00               	movlw	0
  6681  0014EA  6E2C               	movwf	___fladd@a^0,c
  6682  0014EC  0E00               	movlw	0
  6683  0014EE  6E2D               	movwf	(___fladd@a+1)^0,c
  6684  0014F0  0E00               	movlw	0
  6685  0014F2  6E2E               	movwf	(___fladd@a+2)^0,c
  6686  0014F4  0E00               	movlw	0
  6687  0014F6  6E2F               	movwf	(___fladd@a+3)^0,c
  6688  0014F8                     l2457:
  6689  0014F8  8E2E               	bsf	(___fladd@a+2)^0,7,c
  6690  0014FA  0E00               	movlw	0
  6691  0014FC  6E2F               	movwf	(___fladd@a+3)^0,c
  6692  0014FE  EF89  F00A         	goto	l2463
  6693  001502                     l2461:
  6694  001502  0E00               	movlw	0
  6695  001504  6E2C               	movwf	___fladd@a^0,c
  6696  001506  0E00               	movlw	0
  6697  001508  6E2D               	movwf	(___fladd@a+1)^0,c
  6698  00150A  0E00               	movlw	0
  6699  00150C  6E2E               	movwf	(___fladd@a+2)^0,c
  6700  00150E  0E00               	movlw	0
  6701  001510  6E2F               	movwf	(___fladd@a+3)^0,c
  6702  001512                     l2463:
  6703  001512  5036               	movf	___fladd@bexp^0,w,c
  6704  001514  5C35               	subwf	___fladd@aexp^0,w,c
  6705  001516  B0D8               	btfsc	status,0,c
  6706  001518  EF90  F00A         	goto	u2371
  6707  00151C  EF92  F00A         	goto	u2370
  6708  001520                     u2371:
  6709  001520  EFB9  F00A         	goto	l2499
  6710  001524                     u2370:
  6711  001524  AC34               	btfss	___fladd@signs^0,6,c
  6712  001526  EF97  F00A         	goto	u2381
  6713  00152A  EF99  F00A         	goto	u2380
  6714  00152E                     u2381:
  6715  00152E  EF9B  F00A         	goto	l2469
  6716  001532                     u2380:
  6717  001532  0E80               	movlw	128
  6718  001534  1A34               	xorwf	___fladd@signs^0,f,c
  6719  001536                     l2469:
  6720  001536  C036  F037         	movff	___fladd@bexp,___fladd@grs
  6721  00153A  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  6722  00153E  C037  F035         	movff	___fladd@grs,___fladd@aexp
  6723  001542  C028  F037         	movff	___fladd@b,___fladd@grs
  6724  001546  C02C  F028         	movff	___fladd@a,___fladd@b
  6725  00154A  C037  F02C         	movff	___fladd@grs,___fladd@a
  6726  00154E  C029  F037         	movff	___fladd@b+1,___fladd@grs
  6727  001552  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  6728  001556  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  6729  00155A  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  6730  00155E  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  6731  001562  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  6732  001566  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  6733  00156A  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  6734  00156E  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  6735  001572                     l2499:
  6736  001572  0E00               	movlw	0
  6737  001574  6E37               	movwf	___fladd@grs^0,c
  6738  001576  5036               	movf	___fladd@bexp^0,w,c
  6739  001578  C035  F030         	movff	___fladd@aexp,??___fladd
  6740  00157C  6A31               	clrf	(??___fladd+1)^0,c
  6741  00157E  5E30               	subwf	??___fladd^0,f,c
  6742  001580  0E00               	movlw	0
  6743  001582  5A31               	subwfb	(??___fladd+1)^0,f,c
  6744  001584  BE31               	btfsc	(??___fladd+1)^0,7,c
  6745  001586  EFCE  F00A         	goto	u2391
  6746  00158A  5031               	movf	(??___fladd+1)^0,w,c
  6747  00158C  E109               	bnz	u2390
  6748  00158E  0E1A               	movlw	26
  6749  001590  5C30               	subwf	??___fladd^0,w,c
  6750  001592  A0D8               	btfss	status,0,c
  6751  001594  EFCE  F00A         	goto	u2391
  6752  001598  EFD0  F00A         	goto	u2390
  6753  00159C                     u2391:
  6754  00159C  EF07  F00B         	goto	l647
  6755  0015A0                     u2390:
  6756  0015A0  5028               	movf	___fladd@b^0,w,c
  6757  0015A2  1029               	iorwf	(___fladd@b+1)^0,w,c
  6758  0015A4  102A               	iorwf	(___fladd@b+2)^0,w,c
  6759  0015A6  102B               	iorwf	(___fladd@b+3)^0,w,c
  6760  0015A8  A4D8               	btfss	status,2,c
  6761  0015AA  EFD9  F00A         	goto	u2401
  6762  0015AE  EFDC  F00A         	goto	u2400
  6763  0015B2                     u2401:
  6764  0015B2  0E01               	movlw	1
  6765  0015B4  EFDD  F00A         	goto	u2410
  6766  0015B8                     u2400:
  6767  0015B8  0E00               	movlw	0
  6768  0015BA                     u2410:
  6769  0015BA  6E37               	movwf	___fladd@grs^0,c
  6770  0015BC  0E00               	movlw	0
  6771  0015BE  6E28               	movwf	___fladd@b^0,c
  6772  0015C0  0E00               	movlw	0
  6773  0015C2  6E29               	movwf	(___fladd@b+1)^0,c
  6774  0015C4  0E00               	movlw	0
  6775  0015C6  6E2A               	movwf	(___fladd@b+2)^0,c
  6776  0015C8  0E00               	movlw	0
  6777  0015CA  6E2B               	movwf	(___fladd@b+3)^0,c
  6778  0015CC  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  6779  0015D0  EF10  F00B         	goto	l646
  6780  0015D4                     l648:
  6781  0015D4  A037               	btfss	___fladd@grs^0,0,c
  6782  0015D6  EFEF  F00A         	goto	u2421
  6783  0015DA  EFF1  F00A         	goto	u2420
  6784  0015DE                     u2421:
  6785  0015DE  EFF7  F00A         	goto	l2511
  6786  0015E2                     u2420:
  6787  0015E2  90D8               	bcf	status,0,c
  6788  0015E4  3037               	rrcf	___fladd@grs^0,w,c
  6789  0015E6  0901               	iorlw	1
  6790  0015E8  6E37               	movwf	___fladd@grs^0,c
  6791  0015EA  EFF9  F00A         	goto	l2513
  6792  0015EE                     l2511:
  6793  0015EE  90D8               	bcf	status,0,c
  6794  0015F0  3237               	rrcf	___fladd@grs^0,f,c
  6795  0015F2                     l2513:
  6796  0015F2  A028               	btfss	___fladd@b^0,0,c
  6797  0015F4  EFFE  F00A         	goto	u2431
  6798  0015F8  EF00  F00B         	goto	u2430
  6799  0015FC                     u2431:
  6800  0015FC  EF01  F00B         	goto	l2517
  6801  001600                     u2430:
  6802  001600  8E37               	bsf	___fladd@grs^0,7,c
  6803  001602                     l2517:
  6804  001602  342B               	rlcf	(___fladd@b+3)^0,w,c
  6805  001604  322B               	rrcf	(___fladd@b+3)^0,f,c
  6806  001606  322A               	rrcf	(___fladd@b+2)^0,f,c
  6807  001608  3229               	rrcf	(___fladd@b+1)^0,f,c
  6808  00160A  3228               	rrcf	___fladd@b^0,f,c
  6809  00160C  2A36               	incf	___fladd@bexp^0,f,c
  6810  00160E                     l647:
  6811  00160E  5035               	movf	___fladd@aexp^0,w,c
  6812  001610  5C36               	subwf	___fladd@bexp^0,w,c
  6813  001612  A0D8               	btfss	status,0,c
  6814  001614  EF0E  F00B         	goto	u2441
  6815  001618  EF10  F00B         	goto	u2440
  6816  00161C                     u2441:
  6817  00161C  EFEA  F00A         	goto	l648
  6818  001620                     u2440:
  6819  001620                     l646:
  6820  001620  BC34               	btfsc	___fladd@signs^0,6,c
  6821  001622  EF15  F00B         	goto	u2451
  6822  001626  EF17  F00B         	goto	u2450
  6823  00162A                     u2451:
  6824  00162A  EF57  F00B         	goto	l2545
  6825  00162E                     u2450:
  6826  00162E  5036               	movf	___fladd@bexp^0,w,c
  6827  001630  A4D8               	btfss	status,2,c
  6828  001632  EF1D  F00B         	goto	u2461
  6829  001636  EF1F  F00B         	goto	u2460
  6830  00163A                     u2461:
  6831  00163A  EF29  F00B         	goto	l2527
  6832  00163E                     u2460:
  6833  00163E  0E00               	movlw	0
  6834  001640  6E28               	movwf	?___fladd^0,c
  6835  001642  0E00               	movlw	0
  6836  001644  6E29               	movwf	(?___fladd+1)^0,c
  6837  001646  0E00               	movlw	0
  6838  001648  6E2A               	movwf	(?___fladd+2)^0,c
  6839  00164A  0E00               	movlw	0
  6840  00164C  6E2B               	movwf	(?___fladd+3)^0,c
  6841  00164E  EF78  F00C         	goto	l655
  6842  001652                     l2527:
  6843  001652  502C               	movf	___fladd@a^0,w,c
  6844  001654  2628               	addwf	___fladd@b^0,f,c
  6845  001656  502D               	movf	(___fladd@a+1)^0,w,c
  6846  001658  2229               	addwfc	(___fladd@b+1)^0,f,c
  6847  00165A  502E               	movf	(___fladd@a+2)^0,w,c
  6848  00165C  222A               	addwfc	(___fladd@b+2)^0,f,c
  6849  00165E  502F               	movf	(___fladd@a+3)^0,w,c
  6850  001660  222B               	addwfc	(___fladd@b+3)^0,f,c
  6851  001662  A02B               	btfss	(___fladd@b+3)^0,0,c
  6852  001664  EF36  F00B         	goto	u2471
  6853  001668  EF38  F00B         	goto	u2470
  6854  00166C                     u2471:
  6855  00166C  EFE4  F00B         	goto	l2581
  6856  001670                     u2470:
  6857  001670  A037               	btfss	___fladd@grs^0,0,c
  6858  001672  EF3D  F00B         	goto	u2481
  6859  001676  EF3F  F00B         	goto	u2480
  6860  00167A                     u2481:
  6861  00167A  EF45  F00B         	goto	l2535
  6862  00167E                     u2480:
  6863  00167E  90D8               	bcf	status,0,c
  6864  001680  3037               	rrcf	___fladd@grs^0,w,c
  6865  001682  0901               	iorlw	1
  6866  001684  6E37               	movwf	___fladd@grs^0,c
  6867  001686  EF47  F00B         	goto	l2537
  6868  00168A                     l2535:
  6869  00168A  90D8               	bcf	status,0,c
  6870  00168C  3237               	rrcf	___fladd@grs^0,f,c
  6871  00168E                     l2537:
  6872  00168E  A028               	btfss	___fladd@b^0,0,c
  6873  001690  EF4C  F00B         	goto	u2491
  6874  001694  EF4E  F00B         	goto	u2490
  6875  001698                     u2491:
  6876  001698  EF4F  F00B         	goto	l2541
  6877  00169C                     u2490:
  6878  00169C  8E37               	bsf	___fladd@grs^0,7,c
  6879  00169E                     l2541:
  6880  00169E  342B               	rlcf	(___fladd@b+3)^0,w,c
  6881  0016A0  322B               	rrcf	(___fladd@b+3)^0,f,c
  6882  0016A2  322A               	rrcf	(___fladd@b+2)^0,f,c
  6883  0016A4  3229               	rrcf	(___fladd@b+1)^0,f,c
  6884  0016A6  3228               	rrcf	___fladd@b^0,f,c
  6885  0016A8  2A36               	incf	___fladd@bexp^0,f,c
  6886  0016AA  EFE4  F00B         	goto	l2581
  6887  0016AE                     l2545:
  6888  0016AE  502C               	movf	___fladd@a^0,w,c
  6889  0016B0  5C28               	subwf	___fladd@b^0,w,c
  6890  0016B2  502D               	movf	(___fladd@a+1)^0,w,c
  6891  0016B4  5829               	subwfb	(___fladd@b+1)^0,w,c
  6892  0016B6  502E               	movf	(___fladd@a+2)^0,w,c
  6893  0016B8  582A               	subwfb	(___fladd@b+2)^0,w,c
  6894  0016BA  502B               	movf	(___fladd@b+3)^0,w,c
  6895  0016BC  0A80               	xorlw	128
  6896  0016BE  6E30               	movwf	??___fladd^0,c
  6897  0016C0  502F               	movf	(___fladd@a+3)^0,w,c
  6898  0016C2  0A80               	xorlw	128
  6899  0016C4  5830               	subwfb	??___fladd^0,w,c
  6900  0016C6  B0D8               	btfsc	status,0,c
  6901  0016C8  EF68  F00B         	goto	u2501
  6902  0016CC  EF6A  F00B         	goto	u2500
  6903  0016D0                     u2501:
  6904  0016D0  EF95  F00B         	goto	l2555
  6905  0016D4                     u2500:
  6906  0016D4  5028               	movf	___fladd@b^0,w,c
  6907  0016D6  5C2C               	subwf	___fladd@a^0,w,c
  6908  0016D8  6E30               	movwf	??___fladd^0,c
  6909  0016DA  5029               	movf	(___fladd@b+1)^0,w,c
  6910  0016DC  582D               	subwfb	(___fladd@a+1)^0,w,c
  6911  0016DE  6E31               	movwf	(??___fladd+1)^0,c
  6912  0016E0  502A               	movf	(___fladd@b+2)^0,w,c
  6913  0016E2  582E               	subwfb	(___fladd@a+2)^0,w,c
  6914  0016E4  6E32               	movwf	(??___fladd+2)^0,c
  6915  0016E6  502B               	movf	(___fladd@b+3)^0,w,c
  6916  0016E8  582F               	subwfb	(___fladd@a+3)^0,w,c
  6917  0016EA  6E33               	movwf	(??___fladd+3)^0,c
  6918  0016EC  0EFF               	movlw	255
  6919  0016EE  2430               	addwf	??___fladd^0,w,c
  6920  0016F0  6E28               	movwf	___fladd@b^0,c
  6921  0016F2  0EFF               	movlw	255
  6922  0016F4  2031               	addwfc	(??___fladd+1)^0,w,c
  6923  0016F6  6E29               	movwf	(___fladd@b+1)^0,c
  6924  0016F8  0EFF               	movlw	255
  6925  0016FA  2032               	addwfc	(??___fladd+2)^0,w,c
  6926  0016FC  6E2A               	movwf	(___fladd@b+2)^0,c
  6927  0016FE  0EFF               	movlw	255
  6928  001700  2033               	addwfc	(??___fladd+3)^0,w,c
  6929  001702  6E2B               	movwf	(___fladd@b+3)^0,c
  6930  001704  0E80               	movlw	128
  6931  001706  1A34               	xorwf	___fladd@signs^0,f,c
  6932  001708  6C37               	negf	___fladd@grs^0,c
  6933  00170A  5037               	movf	___fladd@grs^0,w,c
  6934  00170C  A4D8               	btfss	status,2,c
  6935  00170E  EF8B  F00B         	goto	u2511
  6936  001712  EF8D  F00B         	goto	u2510
  6937  001716                     u2511:
  6938  001716  EF9D  F00B         	goto	l663
  6939  00171A                     u2510:
  6940  00171A  0E01               	movlw	1
  6941  00171C  2628               	addwf	___fladd@b^0,f,c
  6942  00171E  0E00               	movlw	0
  6943  001720  2229               	addwfc	(___fladd@b+1)^0,f,c
  6944  001722  222A               	addwfc	(___fladd@b+2)^0,f,c
  6945  001724  222B               	addwfc	(___fladd@b+3)^0,f,c
  6946  001726  EF9D  F00B         	goto	l663
  6947  00172A                     l2555:
  6948  00172A  502C               	movf	___fladd@a^0,w,c
  6949  00172C  5E28               	subwf	___fladd@b^0,f,c
  6950  00172E  502D               	movf	(___fladd@a+1)^0,w,c
  6951  001730  5A29               	subwfb	(___fladd@b+1)^0,f,c
  6952  001732  502E               	movf	(___fladd@a+2)^0,w,c
  6953  001734  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  6954  001736  502F               	movf	(___fladd@a+3)^0,w,c
  6955  001738  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  6956  00173A                     l663:
  6957  00173A  5028               	movf	___fladd@b^0,w,c
  6958  00173C  1029               	iorwf	(___fladd@b+1)^0,w,c
  6959  00173E  102A               	iorwf	(___fladd@b+2)^0,w,c
  6960  001740  102B               	iorwf	(___fladd@b+3)^0,w,c
  6961  001742  A4D8               	btfss	status,2,c
  6962  001744  EFA6  F00B         	goto	u2521
  6963  001748  EFA8  F00B         	goto	u2520
  6964  00174C                     u2521:
  6965  00174C  EFDD  F00B         	goto	l2579
  6966  001750                     u2520:
  6967  001750  5037               	movf	___fladd@grs^0,w,c
  6968  001752  A4D8               	btfss	status,2,c
  6969  001754  EFAE  F00B         	goto	u2531
  6970  001758  EFB0  F00B         	goto	u2530
  6971  00175C                     u2531:
  6972  00175C  EFDD  F00B         	goto	l2579
  6973  001760                     u2530:
  6974  001760  0E00               	movlw	0
  6975  001762  6E28               	movwf	?___fladd^0,c
  6976  001764  0E00               	movlw	0
  6977  001766  6E29               	movwf	(?___fladd+1)^0,c
  6978  001768  0E00               	movlw	0
  6979  00176A  6E2A               	movwf	(?___fladd+2)^0,c
  6980  00176C  0E00               	movlw	0
  6981  00176E  6E2B               	movwf	(?___fladd+3)^0,c
  6982  001770  EF78  F00C         	goto	l655
  6983  001774                     l2563:
  6984  001774  90D8               	bcf	status,0,c
  6985  001776  3628               	rlcf	___fladd@b^0,f,c
  6986  001778  3629               	rlcf	(___fladd@b+1)^0,f,c
  6987  00177A  362A               	rlcf	(___fladd@b+2)^0,f,c
  6988  00177C  362B               	rlcf	(___fladd@b+3)^0,f,c
  6989  00177E  AE37               	btfss	___fladd@grs^0,7,c
  6990  001780  EFC4  F00B         	goto	u2541
  6991  001784  EFC6  F00B         	goto	u2540
  6992  001788                     u2541:
  6993  001788  EFC7  F00B         	goto	l2569
  6994  00178C                     u2540:
  6995  00178C  8028               	bsf	___fladd@b^0,0,c
  6996  00178E                     l2569:
  6997  00178E  A037               	btfss	___fladd@grs^0,0,c
  6998  001790  EFCC  F00B         	goto	u2551
  6999  001794  EFCE  F00B         	goto	u2550
  7000  001798                     u2551:
  7001  001798  EFD2  F00B         	goto	l2573
  7002  00179C                     u2550:
  7003  00179C  80D8               	bsf	status,0,c
  7004  00179E  3637               	rlcf	___fladd@grs^0,f,c
  7005  0017A0  EFD4  F00B         	goto	l2575
  7006  0017A4                     l2573:
  7007  0017A4  90D8               	bcf	status,0,c
  7008  0017A6  3637               	rlcf	___fladd@grs^0,f,c
  7009  0017A8                     l2575:
  7010  0017A8  5036               	movf	___fladd@bexp^0,w,c
  7011  0017AA  B4D8               	btfsc	status,2,c
  7012  0017AC  EFDA  F00B         	goto	u2561
  7013  0017B0  EFDC  F00B         	goto	u2560
  7014  0017B4                     u2561:
  7015  0017B4  EFDD  F00B         	goto	l2579
  7016  0017B8                     u2560:
  7017  0017B8  0636               	decf	___fladd@bexp^0,f,c
  7018  0017BA                     l2579:
  7019  0017BA  AE2A               	btfss	(___fladd@b+2)^0,7,c
  7020  0017BC  EFE2  F00B         	goto	u2571
  7021  0017C0  EFE4  F00B         	goto	u2570
  7022  0017C4                     u2571:
  7023  0017C4  EFBA  F00B         	goto	l2563
  7024  0017C8                     u2570:
  7025  0017C8                     l2581:
  7026  0017C8  0E00               	movlw	0
  7027  0017CA  6E35               	movwf	___fladd@aexp^0,c
  7028  0017CC  AE37               	btfss	___fladd@grs^0,7,c
  7029  0017CE  EFEB  F00B         	goto	u2581
  7030  0017D2  EFED  F00B         	goto	u2580
  7031  0017D6                     u2581:
  7032  0017D6  EF05  F00C         	goto	l672
  7033  0017DA                     u2580:
  7034  0017DA  C037  F030         	movff	___fladd@grs,??___fladd
  7035  0017DE  0E7F               	movlw	127
  7036  0017E0  1630               	andwf	??___fladd^0,f,c
  7037  0017E2  B4D8               	btfsc	status,2,c
  7038  0017E4  EFF6  F00B         	goto	u2591
  7039  0017E8  EFF8  F00B         	goto	u2590
  7040  0017EC                     u2591:
  7041  0017EC  EFFC  F00B         	goto	l673
  7042  0017F0                     u2590:
  7043  0017F0                     l2587:
  7044  0017F0  0E01               	movlw	1
  7045  0017F2  6E35               	movwf	___fladd@aexp^0,c
  7046  0017F4  EF05  F00C         	goto	l672
  7047  0017F8                     l673:
  7048  0017F8  A028               	btfss	___fladd@b^0,0,c
  7049  0017FA  EF01  F00C         	goto	u2601
  7050  0017FE  EF03  F00C         	goto	u2600
  7051  001802                     u2601:
  7052  001802  EF05  F00C         	goto	l672
  7053  001806                     u2600:
  7054  001806  EFF8  F00B         	goto	l2587
  7055  00180A                     l672:
  7056  00180A  5035               	movf	___fladd@aexp^0,w,c
  7057  00180C  B4D8               	btfsc	status,2,c
  7058  00180E  EF0B  F00C         	goto	u2611
  7059  001812  EF0D  F00C         	goto	u2610
  7060  001816                     u2611:
  7061  001816  EF38  F00C         	goto	l2599
  7062  00181A                     u2610:
  7063  00181A  0E01               	movlw	1
  7064  00181C  2628               	addwf	___fladd@b^0,f,c
  7065  00181E  0E00               	movlw	0
  7066  001820  2229               	addwfc	(___fladd@b+1)^0,f,c
  7067  001822  222A               	addwfc	(___fladd@b+2)^0,f,c
  7068  001824  222B               	addwfc	(___fladd@b+3)^0,f,c
  7069  001826  A02B               	btfss	(___fladd@b+3)^0,0,c
  7070  001828  EF18  F00C         	goto	u2621
  7071  00182C  EF1A  F00C         	goto	u2620
  7072  001830                     u2621:
  7073  001830  EF38  F00C         	goto	l2599
  7074  001834                     u2620:
  7075  001834  C028  F030         	movff	___fladd@b,??___fladd
  7076  001838  C029  F031         	movff	___fladd@b+1,??___fladd+1
  7077  00183C  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  7078  001840  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  7079  001844  3433               	rlcf	(??___fladd+3)^0,w,c
  7080  001846  3233               	rrcf	(??___fladd+3)^0,f,c
  7081  001848  3232               	rrcf	(??___fladd+2)^0,f,c
  7082  00184A  3231               	rrcf	(??___fladd+1)^0,f,c
  7083  00184C  3230               	rrcf	??___fladd^0,f,c
  7084  00184E  C030  F028         	movff	??___fladd,___fladd@b
  7085  001852  C031  F029         	movff	??___fladd+1,___fladd@b+1
  7086  001856  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  7087  00185A  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  7088  00185E  2836               	incf	___fladd@bexp^0,w,c
  7089  001860  B4D8               	btfsc	status,2,c
  7090  001862  EF35  F00C         	goto	u2631
  7091  001866  EF37  F00C         	goto	u2630
  7092  00186A                     u2631:
  7093  00186A  EF38  F00C         	goto	l2599
  7094  00186E                     u2630:
  7095  00186E  2A36               	incf	___fladd@bexp^0,f,c
  7096  001870                     l2599:
  7097  001870  2836               	incf	___fladd@bexp^0,w,c
  7098  001872  B4D8               	btfsc	status,2,c
  7099  001874  EF3E  F00C         	goto	u2641
  7100  001878  EF40  F00C         	goto	u2640
  7101  00187C                     u2641:
  7102  00187C  EF48  F00C         	goto	l2603
  7103  001880                     u2640:
  7104  001880  5036               	movf	___fladd@bexp^0,w,c
  7105  001882  A4D8               	btfss	status,2,c
  7106  001884  EF46  F00C         	goto	u2651
  7107  001888  EF48  F00C         	goto	u2650
  7108  00188C                     u2651:
  7109  00188C  EF5A  F00C         	goto	l2607
  7110  001890                     u2650:
  7111  001890                     l2603:
  7112  001890  0E00               	movlw	0
  7113  001892  6E28               	movwf	___fladd@b^0,c
  7114  001894  0E00               	movlw	0
  7115  001896  6E29               	movwf	(___fladd@b+1)^0,c
  7116  001898  0E00               	movlw	0
  7117  00189A  6E2A               	movwf	(___fladd@b+2)^0,c
  7118  00189C  0E00               	movlw	0
  7119  00189E  6E2B               	movwf	(___fladd@b+3)^0,c
  7120  0018A0  5036               	movf	___fladd@bexp^0,w,c
  7121  0018A2  A4D8               	btfss	status,2,c
  7122  0018A4  EF56  F00C         	goto	u2661
  7123  0018A8  EF58  F00C         	goto	u2660
  7124  0018AC                     u2661:
  7125  0018AC  EF5A  F00C         	goto	l2607
  7126  0018B0                     u2660:
  7127  0018B0  0E00               	movlw	0
  7128  0018B2  6E34               	movwf	___fladd@signs^0,c
  7129  0018B4                     l2607:
  7130  0018B4  A036               	btfss	___fladd@bexp^0,0,c
  7131  0018B6  EF5F  F00C         	goto	u2671
  7132  0018BA  EF61  F00C         	goto	u2670
  7133  0018BE                     u2671:
  7134  0018BE  EF64  F00C         	goto	l2611
  7135  0018C2                     u2670:
  7136  0018C2  8E2A               	bsf	(___fladd@b+2)^0,7,c
  7137  0018C4  EF65  F00C         	goto	l2613
  7138  0018C8                     l2611:
  7139  0018C8  9E2A               	bcf	(___fladd@b+2)^0,7,c
  7140  0018CA                     l2613:
  7141  0018CA  90D8               	bcf	status,0,c
  7142  0018CC  3036               	rrcf	___fladd@bexp^0,w,c
  7143  0018CE  6E2B               	movwf	(___fladd@b+3)^0,c
  7144  0018D0  AE34               	btfss	___fladd@signs^0,7,c
  7145  0018D2  EF6D  F00C         	goto	u2681
  7146  0018D6  EF6F  F00C         	goto	u2680
  7147  0018DA                     u2681:
  7148  0018DA  EF70  F00C         	goto	l2619
  7149  0018DE                     u2680:
  7150  0018DE  8E2B               	bsf	(___fladd@b+3)^0,7,c
  7151  0018E0                     l2619:
  7152  0018E0  C028  F028         	movff	___fladd@b,?___fladd
  7153  0018E4  C029  F029         	movff	___fladd@b+1,?___fladd+1
  7154  0018E8  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  7155  0018EC  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  7156  0018F0                     l655:
  7157  0018F0  0012               	return		;funcret
  7158  0018F2                     __end_of___fladd:
  7159                           	callstack 0
  7160                           
  7161 ;; *************** function ___flmul *****************
  7162 ;; Defined at:
  7163 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  b               4   14[COMRAM] unsigned char 
  7166 ;;  a               4   18[COMRAM] unsigned char 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  prod            4   33[COMRAM] struct .
  7169 ;;  grs             4   27[COMRAM] unsigned long 
  7170 ;;  temp            2   37[COMRAM] struct .
  7171 ;;  bexp            1   32[COMRAM] unsigned char 
  7172 ;;  aexp            1   31[COMRAM] unsigned char 
  7173 ;;  sign            1   26[COMRAM] unsigned char 
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  4   14[COMRAM] unsigned char 
  7176 ;; Registers used:
  7177 ;;		wreg, status,2, status,0, prodl, prodh
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7183 ;;      Params:         8       0       0       0       0       0       0       0       0
  7184 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7185 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7186 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7187 ;;Total ram usage:       25 bytes
  7188 ;; Hardware stack levels used: 1
  7189 ;; Hardware stack levels required when called: 1
  7190 ;; This function calls:
  7191 ;;		Nothing
  7192 ;; This function is called by:
  7193 ;;		_ADC_MAP
  7194 ;;		_efgtoa
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text31
  7199  0018F2                     __ptext31:
  7200                           	callstack 0
  7201  0018F2                     ___flmul:
  7202                           	callstack 25
  7203  0018F2  5012               	movf	(___flmul@b+3)^0,w,c
  7204  0018F4  0B80               	andlw	128
  7205  0018F6  6E1B               	movwf	___flmul@sign^0,c
  7206  0018F8  5012               	movf	(___flmul@b+3)^0,w,c
  7207  0018FA  2412               	addwf	(___flmul@b+3)^0,w,c
  7208  0018FC  6E21               	movwf	___flmul@bexp^0,c
  7209  0018FE  AE11               	btfss	(___flmul@b+2)^0,7,c
  7210  001900  EF84  F00C         	goto	u2961
  7211  001904  EF86  F00C         	goto	u2960
  7212  001908                     u2961:
  7213  001908  EF87  F00C         	goto	l2789
  7214  00190C                     u2960:
  7215  00190C  8021               	bsf	___flmul@bexp^0,0,c
  7216  00190E                     l2789:
  7217  00190E  5021               	movf	___flmul@bexp^0,w,c
  7218  001910  B4D8               	btfsc	status,2,c
  7219  001912  EF8D  F00C         	goto	u2971
  7220  001916  EF8F  F00C         	goto	u2970
  7221  00191A                     u2971:
  7222  00191A  EFA2  F00C         	goto	l2797
  7223  00191E                     u2970:
  7224  00191E  2821               	incf	___flmul@bexp^0,w,c
  7225  001920  A4D8               	btfss	status,2,c
  7226  001922  EF95  F00C         	goto	u2981
  7227  001926  EF97  F00C         	goto	u2980
  7228  00192A                     u2981:
  7229  00192A  EF9F  F00C         	goto	l2795
  7230  00192E                     u2980:
  7231  00192E  0E00               	movlw	0
  7232  001930  6E0F               	movwf	___flmul@b^0,c
  7233  001932  0E00               	movlw	0
  7234  001934  6E10               	movwf	(___flmul@b+1)^0,c
  7235  001936  0E00               	movlw	0
  7236  001938  6E11               	movwf	(___flmul@b+2)^0,c
  7237  00193A  0E00               	movlw	0
  7238  00193C  6E12               	movwf	(___flmul@b+3)^0,c
  7239  00193E                     l2795:
  7240  00193E  8E11               	bsf	(___flmul@b+2)^0,7,c
  7241  001940  EFAA  F00C         	goto	l2799
  7242  001944                     l2797:
  7243  001944  0E00               	movlw	0
  7244  001946  6E0F               	movwf	___flmul@b^0,c
  7245  001948  0E00               	movlw	0
  7246  00194A  6E10               	movwf	(___flmul@b+1)^0,c
  7247  00194C  0E00               	movlw	0
  7248  00194E  6E11               	movwf	(___flmul@b+2)^0,c
  7249  001950  0E00               	movlw	0
  7250  001952  6E12               	movwf	(___flmul@b+3)^0,c
  7251  001954                     l2799:
  7252  001954  5016               	movf	(___flmul@a+3)^0,w,c
  7253  001956  0B80               	andlw	128
  7254  001958  1A1B               	xorwf	___flmul@sign^0,f,c
  7255  00195A  5016               	movf	(___flmul@a+3)^0,w,c
  7256  00195C  2416               	addwf	(___flmul@a+3)^0,w,c
  7257  00195E  6E20               	movwf	___flmul@aexp^0,c
  7258  001960  AE15               	btfss	(___flmul@a+2)^0,7,c
  7259  001962  EFB5  F00C         	goto	u2991
  7260  001966  EFB7  F00C         	goto	u2990
  7261  00196A                     u2991:
  7262  00196A  EFB8  F00C         	goto	l2807
  7263  00196E                     u2990:
  7264  00196E  8020               	bsf	___flmul@aexp^0,0,c
  7265  001970                     l2807:
  7266  001970  5020               	movf	___flmul@aexp^0,w,c
  7267  001972  B4D8               	btfsc	status,2,c
  7268  001974  EFBE  F00C         	goto	u3001
  7269  001978  EFC0  F00C         	goto	u3000
  7270  00197C                     u3001:
  7271  00197C  EFD3  F00C         	goto	l2815
  7272  001980                     u3000:
  7273  001980  2820               	incf	___flmul@aexp^0,w,c
  7274  001982  A4D8               	btfss	status,2,c
  7275  001984  EFC6  F00C         	goto	u3011
  7276  001988  EFC8  F00C         	goto	u3010
  7277  00198C                     u3011:
  7278  00198C  EFD0  F00C         	goto	l2813
  7279  001990                     u3010:
  7280  001990  0E00               	movlw	0
  7281  001992  6E13               	movwf	___flmul@a^0,c
  7282  001994  0E00               	movlw	0
  7283  001996  6E14               	movwf	(___flmul@a+1)^0,c
  7284  001998  0E00               	movlw	0
  7285  00199A  6E15               	movwf	(___flmul@a+2)^0,c
  7286  00199C  0E00               	movlw	0
  7287  00199E  6E16               	movwf	(___flmul@a+3)^0,c
  7288  0019A0                     l2813:
  7289  0019A0  8E15               	bsf	(___flmul@a+2)^0,7,c
  7290  0019A2  EFDB  F00C         	goto	l732
  7291  0019A6                     l2815:
  7292  0019A6  0E00               	movlw	0
  7293  0019A8  6E13               	movwf	___flmul@a^0,c
  7294  0019AA  0E00               	movlw	0
  7295  0019AC  6E14               	movwf	(___flmul@a+1)^0,c
  7296  0019AE  0E00               	movlw	0
  7297  0019B0  6E15               	movwf	(___flmul@a+2)^0,c
  7298  0019B2  0E00               	movlw	0
  7299  0019B4  6E16               	movwf	(___flmul@a+3)^0,c
  7300  0019B6                     l732:
  7301  0019B6  5020               	movf	___flmul@aexp^0,w,c
  7302  0019B8  B4D8               	btfsc	status,2,c
  7303  0019BA  EFE1  F00C         	goto	u3021
  7304  0019BE  EFE3  F00C         	goto	u3020
  7305  0019C2                     u3021:
  7306  0019C2  EFEB  F00C         	goto	l2819
  7307  0019C6                     u3020:
  7308  0019C6  5021               	movf	___flmul@bexp^0,w,c
  7309  0019C8  A4D8               	btfss	status,2,c
  7310  0019CA  EFE9  F00C         	goto	u3031
  7311  0019CE  EFEB  F00C         	goto	u3030
  7312  0019D2                     u3031:
  7313  0019D2  EFF5  F00C         	goto	l2823
  7314  0019D6                     u3030:
  7315  0019D6                     l2819:
  7316  0019D6  0E00               	movlw	0
  7317  0019D8  6E0F               	movwf	?___flmul^0,c
  7318  0019DA  0E00               	movlw	0
  7319  0019DC  6E10               	movwf	(?___flmul+1)^0,c
  7320  0019DE  0E00               	movlw	0
  7321  0019E0  6E11               	movwf	(?___flmul+2)^0,c
  7322  0019E2  0E00               	movlw	0
  7323  0019E4  6E12               	movwf	(?___flmul+3)^0,c
  7324  0019E6  EF8D  F00E         	goto	l736
  7325  0019EA                     l2823:
  7326  0019EA  5015               	movf	(___flmul@a+2)^0,w,c
  7327  0019EC  020F               	mulwf	___flmul@b^0,c
  7328  0019EE  CFF3 F026          	movff	prodl,___flmul@temp
  7329  0019F2  CFF4 F027          	movff	prodh,___flmul@temp+1
  7330  0019F6  5026               	movf	___flmul@temp^0,w,c
  7331  0019F8  6E1C               	movwf	___flmul@grs^0,c
  7332  0019FA  6A1D               	clrf	(___flmul@grs+1)^0,c
  7333  0019FC  6A1E               	clrf	(___flmul@grs+2)^0,c
  7334  0019FE  6A1F               	clrf	(___flmul@grs+3)^0,c
  7335  001A00  5027               	movf	(___flmul@temp+1)^0,w,c
  7336  001A02  6E22               	movwf	___flmul@prod^0,c
  7337  001A04  6A23               	clrf	(___flmul@prod+1)^0,c
  7338  001A06  6A24               	clrf	(___flmul@prod+2)^0,c
  7339  001A08  6A25               	clrf	(___flmul@prod+3)^0,c
  7340  001A0A  5014               	movf	(___flmul@a+1)^0,w,c
  7341  001A0C  0210               	mulwf	(___flmul@b+1)^0,c
  7342  001A0E  CFF3 F026          	movff	prodl,___flmul@temp
  7343  001A12  CFF4 F027          	movff	prodh,___flmul@temp+1
  7344  001A16  5026               	movf	___flmul@temp^0,w,c
  7345  001A18  261C               	addwf	___flmul@grs^0,f,c
  7346  001A1A  0E00               	movlw	0
  7347  001A1C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7348  001A1E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7349  001A20  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7350  001A22  5027               	movf	(___flmul@temp+1)^0,w,c
  7351  001A24  2622               	addwf	___flmul@prod^0,f,c
  7352  001A26  0E00               	movlw	0
  7353  001A28  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7354  001A2A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7355  001A2C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7356  001A2E  5013               	movf	___flmul@a^0,w,c
  7357  001A30  0211               	mulwf	(___flmul@b+2)^0,c
  7358  001A32  CFF3 F026          	movff	prodl,___flmul@temp
  7359  001A36  CFF4 F027          	movff	prodh,___flmul@temp+1
  7360  001A3A  5026               	movf	___flmul@temp^0,w,c
  7361  001A3C  261C               	addwf	___flmul@grs^0,f,c
  7362  001A3E  0E00               	movlw	0
  7363  001A40  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7364  001A42  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7365  001A44  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7366  001A46  5027               	movf	(___flmul@temp+1)^0,w,c
  7367  001A48  2622               	addwf	___flmul@prod^0,f,c
  7368  001A4A  0E00               	movlw	0
  7369  001A4C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7370  001A4E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7371  001A50  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7372  001A52  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7373  001A56  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7374  001A5A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7375  001A5E  6A1C               	clrf	___flmul@grs^0,c
  7376  001A60  5013               	movf	___flmul@a^0,w,c
  7377  001A62  0210               	mulwf	(___flmul@b+1)^0,c
  7378  001A64  CFF3 F026          	movff	prodl,___flmul@temp
  7379  001A68  CFF4 F027          	movff	prodh,___flmul@temp+1
  7380  001A6C  5026               	movf	___flmul@temp^0,w,c
  7381  001A6E  261C               	addwf	___flmul@grs^0,f,c
  7382  001A70  5027               	movf	(___flmul@temp+1)^0,w,c
  7383  001A72  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7384  001A74  0E00               	movlw	0
  7385  001A76  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7386  001A78  0E00               	movlw	0
  7387  001A7A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7388  001A7C  5014               	movf	(___flmul@a+1)^0,w,c
  7389  001A7E  020F               	mulwf	___flmul@b^0,c
  7390  001A80  CFF3 F026          	movff	prodl,___flmul@temp
  7391  001A84  CFF4 F027          	movff	prodh,___flmul@temp+1
  7392  001A88  5026               	movf	___flmul@temp^0,w,c
  7393  001A8A  261C               	addwf	___flmul@grs^0,f,c
  7394  001A8C  5027               	movf	(___flmul@temp+1)^0,w,c
  7395  001A8E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7396  001A90  0E00               	movlw	0
  7397  001A92  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7398  001A94  0E00               	movlw	0
  7399  001A96  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7400  001A98  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7401  001A9C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7402  001AA0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7403  001AA4  6A1C               	clrf	___flmul@grs^0,c
  7404  001AA6  5013               	movf	___flmul@a^0,w,c
  7405  001AA8  020F               	mulwf	___flmul@b^0,c
  7406  001AAA  CFF3 F026          	movff	prodl,___flmul@temp
  7407  001AAE  CFF4 F027          	movff	prodh,___flmul@temp+1
  7408  001AB2  5026               	movf	___flmul@temp^0,w,c
  7409  001AB4  261C               	addwf	___flmul@grs^0,f,c
  7410  001AB6  5027               	movf	(___flmul@temp+1)^0,w,c
  7411  001AB8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  7412  001ABA  0E00               	movlw	0
  7413  001ABC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  7414  001ABE  0E00               	movlw	0
  7415  001AC0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  7416  001AC2  5015               	movf	(___flmul@a+2)^0,w,c
  7417  001AC4  0210               	mulwf	(___flmul@b+1)^0,c
  7418  001AC6  CFF3 F026          	movff	prodl,___flmul@temp
  7419  001ACA  CFF4 F027          	movff	prodh,___flmul@temp+1
  7420  001ACE  5026               	movf	___flmul@temp^0,w,c
  7421  001AD0  2622               	addwf	___flmul@prod^0,f,c
  7422  001AD2  5027               	movf	(___flmul@temp+1)^0,w,c
  7423  001AD4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7424  001AD6  0E00               	movlw	0
  7425  001AD8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7426  001ADA  0E00               	movlw	0
  7427  001ADC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7428  001ADE  5014               	movf	(___flmul@a+1)^0,w,c
  7429  001AE0  0211               	mulwf	(___flmul@b+2)^0,c
  7430  001AE2  CFF3 F026          	movff	prodl,___flmul@temp
  7431  001AE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  7432  001AEA  5026               	movf	___flmul@temp^0,w,c
  7433  001AEC  2622               	addwf	___flmul@prod^0,f,c
  7434  001AEE  5027               	movf	(___flmul@temp+1)^0,w,c
  7435  001AF0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7436  001AF2  0E00               	movlw	0
  7437  001AF4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7438  001AF6  0E00               	movlw	0
  7439  001AF8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7440  001AFA  5015               	movf	(___flmul@a+2)^0,w,c
  7441  001AFC  0211               	mulwf	(___flmul@b+2)^0,c
  7442  001AFE  CFF3 F026          	movff	prodl,___flmul@temp
  7443  001B02  CFF4 F027          	movff	prodh,___flmul@temp+1
  7444  001B06  5026               	movf	___flmul@temp^0,w,c
  7445  001B08  6E17               	movwf	??___flmul^0,c
  7446  001B0A  5027               	movf	(___flmul@temp+1)^0,w,c
  7447  001B0C  6E18               	movwf	(??___flmul+1)^0,c
  7448  001B0E  6A19               	clrf	(??___flmul+2)^0,c
  7449  001B10  6A1A               	clrf	(??___flmul+3)^0,c
  7450  001B12  C019  F01A         	movff	??___flmul+2,??___flmul+3
  7451  001B16  C018  F019         	movff	??___flmul+1,??___flmul+2
  7452  001B1A  C017  F018         	movff	??___flmul,??___flmul+1
  7453  001B1E  6A17               	clrf	??___flmul^0,c
  7454  001B20  5017               	movf	??___flmul^0,w,c
  7455  001B22  2622               	addwf	___flmul@prod^0,f,c
  7456  001B24  5018               	movf	(??___flmul+1)^0,w,c
  7457  001B26  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7458  001B28  5019               	movf	(??___flmul+2)^0,w,c
  7459  001B2A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7460  001B2C  501A               	movf	(??___flmul+3)^0,w,c
  7461  001B2E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7462  001B30  C01C  F017         	movff	___flmul@grs,??___flmul
  7463  001B34  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  7464  001B38  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  7465  001B3C  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  7466  001B40  0E19               	movlw	25
  7467  001B42  EFA8  F00D         	goto	u3040
  7468  001B46                     u3045:
  7469  001B46  90D8               	bcf	status,0,c
  7470  001B48  321A               	rrcf	(??___flmul+3)^0,f,c
  7471  001B4A  3219               	rrcf	(??___flmul+2)^0,f,c
  7472  001B4C  3218               	rrcf	(??___flmul+1)^0,f,c
  7473  001B4E  3217               	rrcf	??___flmul^0,f,c
  7474  001B50                     u3040:
  7475  001B50  2EE8               	decfsz	wreg,f,c
  7476  001B52  EFA3  F00D         	goto	u3045
  7477  001B56  5017               	movf	??___flmul^0,w,c
  7478  001B58  2622               	addwf	___flmul@prod^0,f,c
  7479  001B5A  5018               	movf	(??___flmul+1)^0,w,c
  7480  001B5C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7481  001B5E  5019               	movf	(??___flmul+2)^0,w,c
  7482  001B60  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7483  001B62  501A               	movf	(??___flmul+3)^0,w,c
  7484  001B64  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7485  001B66  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  7486  001B6A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  7487  001B6E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  7488  001B72  6A1C               	clrf	___flmul@grs^0,c
  7489  001B74  5020               	movf	___flmul@aexp^0,w,c
  7490  001B76  C021  F017         	movff	___flmul@bexp,??___flmul
  7491  001B7A  6A18               	clrf	(??___flmul+1)^0,c
  7492  001B7C  2617               	addwf	??___flmul^0,f,c
  7493  001B7E  0E00               	movlw	0
  7494  001B80  2218               	addwfc	(??___flmul+1)^0,f,c
  7495  001B82  0E82               	movlw	130
  7496  001B84  2417               	addwf	??___flmul^0,w,c
  7497  001B86  6E26               	movwf	___flmul@temp^0,c
  7498  001B88  0EFF               	movlw	255
  7499  001B8A  2018               	addwfc	(??___flmul+1)^0,w,c
  7500  001B8C  6E27               	movwf	(___flmul@temp+1)^0,c
  7501  001B8E  EFDE  F00D         	goto	l2871
  7502  001B92                     l2865:
  7503  001B92  90D8               	bcf	status,0,c
  7504  001B94  3622               	rlcf	___flmul@prod^0,f,c
  7505  001B96  3623               	rlcf	(___flmul@prod+1)^0,f,c
  7506  001B98  3624               	rlcf	(___flmul@prod+2)^0,f,c
  7507  001B9A  3625               	rlcf	(___flmul@prod+3)^0,f,c
  7508  001B9C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  7509  001B9E  EFD3  F00D         	goto	u3051
  7510  001BA2  EFD5  F00D         	goto	u3050
  7511  001BA6                     u3051:
  7512  001BA6  EFD6  F00D         	goto	l739
  7513  001BAA                     u3050:
  7514  001BAA  8022               	bsf	___flmul@prod^0,0,c
  7515  001BAC                     l739:
  7516  001BAC  90D8               	bcf	status,0,c
  7517  001BAE  361C               	rlcf	___flmul@grs^0,f,c
  7518  001BB0  361D               	rlcf	(___flmul@grs+1)^0,f,c
  7519  001BB2  361E               	rlcf	(___flmul@grs+2)^0,f,c
  7520  001BB4  361F               	rlcf	(___flmul@grs+3)^0,f,c
  7521  001BB6  0626               	decf	___flmul@temp^0,f,c
  7522  001BB8  A0D8               	btfss	status,0,c
  7523  001BBA  0627               	decf	(___flmul@temp+1)^0,f,c
  7524  001BBC                     l2871:
  7525  001BBC  AE24               	btfss	(___flmul@prod+2)^0,7,c
  7526  001BBE  EFE3  F00D         	goto	u3061
  7527  001BC2  EFE5  F00D         	goto	u3060
  7528  001BC6                     u3061:
  7529  001BC6  EFC9  F00D         	goto	l2865
  7530  001BCA                     u3060:
  7531  001BCA  0E00               	movlw	0
  7532  001BCC  6E20               	movwf	___flmul@aexp^0,c
  7533  001BCE  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  7534  001BD0  EFEC  F00D         	goto	u3071
  7535  001BD4  EFEE  F00D         	goto	u3070
  7536  001BD8                     u3071:
  7537  001BD8  EF12  F00E         	goto	l741
  7538  001BDC                     u3070:
  7539  001BDC  0EFF               	movlw	255
  7540  001BDE  141C               	andwf	___flmul@grs^0,w,c
  7541  001BE0  6E17               	movwf	??___flmul^0,c
  7542  001BE2  0EFF               	movlw	255
  7543  001BE4  141D               	andwf	(___flmul@grs+1)^0,w,c
  7544  001BE6  6E18               	movwf	(??___flmul+1)^0,c
  7545  001BE8  0EFF               	movlw	255
  7546  001BEA  141E               	andwf	(___flmul@grs+2)^0,w,c
  7547  001BEC  6E19               	movwf	(??___flmul+2)^0,c
  7548  001BEE  0E7F               	movlw	127
  7549  001BF0  141F               	andwf	(___flmul@grs+3)^0,w,c
  7550  001BF2  6E1A               	movwf	(??___flmul+3)^0,c
  7551  001BF4  5017               	movf	??___flmul^0,w,c
  7552  001BF6  1018               	iorwf	(??___flmul+1)^0,w,c
  7553  001BF8  1019               	iorwf	(??___flmul+2)^0,w,c
  7554  001BFA  101A               	iorwf	(??___flmul+3)^0,w,c
  7555  001BFC  B4D8               	btfsc	status,2,c
  7556  001BFE  EF03  F00E         	goto	u3081
  7557  001C02  EF05  F00E         	goto	u3080
  7558  001C06                     u3081:
  7559  001C06  EF09  F00E         	goto	l742
  7560  001C0A                     u3080:
  7561  001C0A                     l2879:
  7562  001C0A  0E01               	movlw	1
  7563  001C0C  6E20               	movwf	___flmul@aexp^0,c
  7564  001C0E  EF12  F00E         	goto	l741
  7565  001C12                     l742:
  7566  001C12  A022               	btfss	___flmul@prod^0,0,c
  7567  001C14  EF0E  F00E         	goto	u3091
  7568  001C18  EF10  F00E         	goto	u3090
  7569  001C1C                     u3091:
  7570  001C1C  EF12  F00E         	goto	l741
  7571  001C20                     u3090:
  7572  001C20  EF05  F00E         	goto	l2879
  7573  001C24                     l741:
  7574  001C24  5020               	movf	___flmul@aexp^0,w,c
  7575  001C26  B4D8               	btfsc	status,2,c
  7576  001C28  EF18  F00E         	goto	u3101
  7577  001C2C  EF1A  F00E         	goto	u3100
  7578  001C30                     u3101:
  7579  001C30  EF3E  F00E         	goto	l2891
  7580  001C34                     u3100:
  7581  001C34  0E01               	movlw	1
  7582  001C36  2622               	addwf	___flmul@prod^0,f,c
  7583  001C38  0E00               	movlw	0
  7584  001C3A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  7585  001C3C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  7586  001C3E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  7587  001C40  A025               	btfss	(___flmul@prod+3)^0,0,c
  7588  001C42  EF25  F00E         	goto	u3111
  7589  001C46  EF27  F00E         	goto	u3110
  7590  001C4A                     u3111:
  7591  001C4A  EF3E  F00E         	goto	l2891
  7592  001C4E                     u3110:
  7593  001C4E  C022  F017         	movff	___flmul@prod,??___flmul
  7594  001C52  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  7595  001C56  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  7596  001C5A  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  7597  001C5E  341A               	rlcf	(??___flmul+3)^0,w,c
  7598  001C60  321A               	rrcf	(??___flmul+3)^0,f,c
  7599  001C62  3219               	rrcf	(??___flmul+2)^0,f,c
  7600  001C64  3218               	rrcf	(??___flmul+1)^0,f,c
  7601  001C66  3217               	rrcf	??___flmul^0,f,c
  7602  001C68  C017  F022         	movff	??___flmul,___flmul@prod
  7603  001C6C  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  7604  001C70  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  7605  001C74  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  7606  001C78  4A26               	infsnz	___flmul@temp^0,f,c
  7607  001C7A  2A27               	incf	(___flmul@temp+1)^0,f,c
  7608  001C7C                     l2891:
  7609  001C7C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  7610  001C7E  EF49  F00E         	goto	u3121
  7611  001C82  5027               	movf	(___flmul@temp+1)^0,w,c
  7612  001C84  E108               	bnz	u3120
  7613  001C86  2826               	incf	___flmul@temp^0,w,c
  7614  001C88  A0D8               	btfss	status,0,c
  7615  001C8A  EF49  F00E         	goto	u3121
  7616  001C8E  EF4B  F00E         	goto	u3120
  7617  001C92                     u3121:
  7618  001C92  EF55  F00E         	goto	l2895
  7619  001C96                     u3120:
  7620  001C96  0E00               	movlw	0
  7621  001C98  6E22               	movwf	___flmul@prod^0,c
  7622  001C9A  0E00               	movlw	0
  7623  001C9C  6E23               	movwf	(___flmul@prod+1)^0,c
  7624  001C9E  0E80               	movlw	128
  7625  001CA0  6E24               	movwf	(___flmul@prod+2)^0,c
  7626  001CA2  0E7F               	movlw	127
  7627  001CA4  6E25               	movwf	(___flmul@prod+3)^0,c
  7628  001CA6  EF83  F00E         	goto	l2907
  7629  001CAA                     l2895:
  7630  001CAA  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  7631  001CAC  EF62  F00E         	goto	u3130
  7632  001CB0  5027               	movf	(___flmul@temp+1)^0,w,c
  7633  001CB2  E106               	bnz	u3131
  7634  001CB4  0426               	decf	___flmul@temp^0,w,c
  7635  001CB6  B0D8               	btfsc	status,0,c
  7636  001CB8  EF60  F00E         	goto	u3131
  7637  001CBC  EF62  F00E         	goto	u3130
  7638  001CC0                     u3131:
  7639  001CC0  EF6E  F00E         	goto	l749
  7640  001CC4                     u3130:
  7641  001CC4  0E00               	movlw	0
  7642  001CC6  6E22               	movwf	___flmul@prod^0,c
  7643  001CC8  0E00               	movlw	0
  7644  001CCA  6E23               	movwf	(___flmul@prod+1)^0,c
  7645  001CCC  0E00               	movlw	0
  7646  001CCE  6E24               	movwf	(___flmul@prod+2)^0,c
  7647  001CD0  0E00               	movlw	0
  7648  001CD2  6E25               	movwf	(___flmul@prod+3)^0,c
  7649  001CD4  0E00               	movlw	0
  7650  001CD6  6E1B               	movwf	___flmul@sign^0,c
  7651  001CD8  EF83  F00E         	goto	l2907
  7652  001CDC                     l749:
  7653  001CDC  C026  F021         	movff	___flmul@temp,___flmul@bexp
  7654  001CE0  0EFF               	movlw	255
  7655  001CE2  1622               	andwf	___flmul@prod^0,f,c
  7656  001CE4  0EFF               	movlw	255
  7657  001CE6  1623               	andwf	(___flmul@prod+1)^0,f,c
  7658  001CE8  0E7F               	movlw	127
  7659  001CEA  1624               	andwf	(___flmul@prod+2)^0,f,c
  7660  001CEC  0E00               	movlw	0
  7661  001CEE  1625               	andwf	(___flmul@prod+3)^0,f,c
  7662  001CF0  A021               	btfss	___flmul@bexp^0,0,c
  7663  001CF2  EF7D  F00E         	goto	u3141
  7664  001CF6  EF7F  F00E         	goto	u3140
  7665  001CFA                     u3141:
  7666  001CFA  EF80  F00E         	goto	l2905
  7667  001CFE                     u3140:
  7668  001CFE  8E24               	bsf	(___flmul@prod+2)^0,7,c
  7669  001D00                     l2905:
  7670  001D00  90D8               	bcf	status,0,c
  7671  001D02  3021               	rrcf	___flmul@bexp^0,w,c
  7672  001D04  6E25               	movwf	(___flmul@prod+3)^0,c
  7673  001D06                     l2907:
  7674  001D06  501B               	movf	___flmul@sign^0,w,c
  7675  001D08  1225               	iorwf	(___flmul@prod+3)^0,f,c
  7676  001D0A  C022  F00F         	movff	___flmul@prod,?___flmul
  7677  001D0E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  7678  001D12  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  7679  001D16  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  7680  001D1A                     l736:
  7681  001D1A  0012               	return		;funcret
  7682  001D1C                     __end_of___flmul:
  7683                           	callstack 0
  7684                           
  7685 ;; *************** function ___fldiv *****************
  7686 ;; Defined at:
  7687 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  b               4   63[COMRAM] unsigned char 
  7690 ;;  a               4   67[COMRAM] unsigned char 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;  grs             4   82[COMRAM] unsigned long 
  7693 ;;  rem             4   75[COMRAM] unsigned long 
  7694 ;;  new_exp         2   80[COMRAM] short 
  7695 ;;  aexp            1   87[COMRAM] unsigned char 
  7696 ;;  bexp            1   86[COMRAM] unsigned char 
  7697 ;;  sign            1   79[COMRAM] unsigned char 
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  4   63[COMRAM] unsigned char 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2, status,0
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7707 ;;      Params:         8       0       0       0       0       0       0       0       0
  7708 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7709 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7710 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7711 ;;Total ram usage:       25 bytes
  7712 ;; Hardware stack levels used: 1
  7713 ;; Hardware stack levels required when called: 1
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_ADC_MAP
  7718 ;;		_efgtoa
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           	psect	text32
  7723  001D1C                     __ptext32:
  7724                           	callstack 0
  7725  001D1C                     ___fldiv:
  7726                           	callstack 25
  7727  001D1C  5043               	movf	(___fldiv@b+3)^0,w,c
  7728  001D1E  0B80               	andlw	128
  7729  001D20  6E50               	movwf	___fldiv@sign^0,c
  7730  001D22  5043               	movf	(___fldiv@b+3)^0,w,c
  7731  001D24  2443               	addwf	(___fldiv@b+3)^0,w,c
  7732  001D26  6E57               	movwf	___fldiv@bexp^0,c
  7733  001D28  AE42               	btfss	(___fldiv@b+2)^0,7,c
  7734  001D2A  EF99  F00E         	goto	u2731
  7735  001D2E  EF9B  F00E         	goto	u2730
  7736  001D32                     u2731:
  7737  001D32  EF9C  F00E         	goto	l2651
  7738  001D36                     u2730:
  7739  001D36  8057               	bsf	___fldiv@bexp^0,0,c
  7740  001D38                     l2651:
  7741  001D38  5057               	movf	___fldiv@bexp^0,w,c
  7742  001D3A  B4D8               	btfsc	status,2,c
  7743  001D3C  EFA2  F00E         	goto	u2741
  7744  001D40  EFA4  F00E         	goto	u2740
  7745  001D44                     u2741:
  7746  001D44  EFB9  F00E         	goto	l2661
  7747  001D48                     u2740:
  7748  001D48  2857               	incf	___fldiv@bexp^0,w,c
  7749  001D4A  A4D8               	btfss	status,2,c
  7750  001D4C  EFAA  F00E         	goto	u2751
  7751  001D50  EFAC  F00E         	goto	u2750
  7752  001D54                     u2751:
  7753  001D54  EFB4  F00E         	goto	l2657
  7754  001D58                     u2750:
  7755  001D58  0E00               	movlw	0
  7756  001D5A  6E40               	movwf	___fldiv@b^0,c
  7757  001D5C  0E00               	movlw	0
  7758  001D5E  6E41               	movwf	(___fldiv@b+1)^0,c
  7759  001D60  0E00               	movlw	0
  7760  001D62  6E42               	movwf	(___fldiv@b+2)^0,c
  7761  001D64  0E00               	movlw	0
  7762  001D66  6E43               	movwf	(___fldiv@b+3)^0,c
  7763  001D68                     l2657:
  7764  001D68  8E42               	bsf	(___fldiv@b+2)^0,7,c
  7765  001D6A  0E00               	movlw	0
  7766  001D6C  6E43               	movwf	(___fldiv@b+3)^0,c
  7767  001D6E  EFC1  F00E         	goto	l2663
  7768  001D72                     l2661:
  7769  001D72  0E00               	movlw	0
  7770  001D74  6E40               	movwf	___fldiv@b^0,c
  7771  001D76  0E00               	movlw	0
  7772  001D78  6E41               	movwf	(___fldiv@b+1)^0,c
  7773  001D7A  0E00               	movlw	0
  7774  001D7C  6E42               	movwf	(___fldiv@b+2)^0,c
  7775  001D7E  0E00               	movlw	0
  7776  001D80  6E43               	movwf	(___fldiv@b+3)^0,c
  7777  001D82                     l2663:
  7778  001D82  5047               	movf	(___fldiv@a+3)^0,w,c
  7779  001D84  0B80               	andlw	128
  7780  001D86  1A50               	xorwf	___fldiv@sign^0,f,c
  7781  001D88  5047               	movf	(___fldiv@a+3)^0,w,c
  7782  001D8A  2447               	addwf	(___fldiv@a+3)^0,w,c
  7783  001D8C  6E58               	movwf	___fldiv@aexp^0,c
  7784  001D8E  AE46               	btfss	(___fldiv@a+2)^0,7,c
  7785  001D90  EFCC  F00E         	goto	u2761
  7786  001D94  EFCE  F00E         	goto	u2760
  7787  001D98                     u2761:
  7788  001D98  EFCF  F00E         	goto	l2671
  7789  001D9C                     u2760:
  7790  001D9C  8058               	bsf	___fldiv@aexp^0,0,c
  7791  001D9E                     l2671:
  7792  001D9E  5058               	movf	___fldiv@aexp^0,w,c
  7793  001DA0  B4D8               	btfsc	status,2,c
  7794  001DA2  EFD5  F00E         	goto	u2771
  7795  001DA6  EFD7  F00E         	goto	u2770
  7796  001DAA                     u2771:
  7797  001DAA  EFEC  F00E         	goto	l2681
  7798  001DAE                     u2770:
  7799  001DAE  2858               	incf	___fldiv@aexp^0,w,c
  7800  001DB0  A4D8               	btfss	status,2,c
  7801  001DB2  EFDD  F00E         	goto	u2781
  7802  001DB6  EFDF  F00E         	goto	u2780
  7803  001DBA                     u2781:
  7804  001DBA  EFE7  F00E         	goto	l2677
  7805  001DBE                     u2780:
  7806  001DBE  0E00               	movlw	0
  7807  001DC0  6E44               	movwf	___fldiv@a^0,c
  7808  001DC2  0E00               	movlw	0
  7809  001DC4  6E45               	movwf	(___fldiv@a+1)^0,c
  7810  001DC6  0E00               	movlw	0
  7811  001DC8  6E46               	movwf	(___fldiv@a+2)^0,c
  7812  001DCA  0E00               	movlw	0
  7813  001DCC  6E47               	movwf	(___fldiv@a+3)^0,c
  7814  001DCE                     l2677:
  7815  001DCE  8E46               	bsf	(___fldiv@a+2)^0,7,c
  7816  001DD0  0E00               	movlw	0
  7817  001DD2  6E47               	movwf	(___fldiv@a+3)^0,c
  7818  001DD4  EFF4  F00E         	goto	l2683
  7819  001DD8                     l2681:
  7820  001DD8  0E00               	movlw	0
  7821  001DDA  6E44               	movwf	___fldiv@a^0,c
  7822  001DDC  0E00               	movlw	0
  7823  001DDE  6E45               	movwf	(___fldiv@a+1)^0,c
  7824  001DE0  0E00               	movlw	0
  7825  001DE2  6E46               	movwf	(___fldiv@a+2)^0,c
  7826  001DE4  0E00               	movlw	0
  7827  001DE6  6E47               	movwf	(___fldiv@a+3)^0,c
  7828  001DE8                     l2683:
  7829  001DE8  5044               	movf	___fldiv@a^0,w,c
  7830  001DEA  1045               	iorwf	(___fldiv@a+1)^0,w,c
  7831  001DEC  1046               	iorwf	(___fldiv@a+2)^0,w,c
  7832  001DEE  1047               	iorwf	(___fldiv@a+3)^0,w,c
  7833  001DF0  A4D8               	btfss	status,2,c
  7834  001DF2  EFFD  F00E         	goto	u2791
  7835  001DF6  EFFF  F00E         	goto	u2790
  7836  001DFA                     u2791:
  7837  001DFA  EF17  F00F         	goto	l2695
  7838  001DFE                     u2790:
  7839  001DFE  0E00               	movlw	0
  7840  001E00  6E40               	movwf	___fldiv@b^0,c
  7841  001E02  0E00               	movlw	0
  7842  001E04  6E41               	movwf	(___fldiv@b+1)^0,c
  7843  001E06  0E00               	movlw	0
  7844  001E08  6E42               	movwf	(___fldiv@b+2)^0,c
  7845  001E0A  0E00               	movlw	0
  7846  001E0C  6E43               	movwf	(___fldiv@b+3)^0,c
  7847  001E0E  0E80               	movlw	128
  7848  001E10  1242               	iorwf	(___fldiv@b+2)^0,f,c
  7849  001E12  0E7F               	movlw	127
  7850  001E14  1243               	iorwf	(___fldiv@b+3)^0,f,c
  7851  001E16                     l2689:
  7852  001E16  5050               	movf	___fldiv@sign^0,w,c
  7853  001E18  1243               	iorwf	(___fldiv@b+3)^0,f,c
  7854  001E1A  C040  F040         	movff	___fldiv@b,?___fldiv
  7855  001E1E  C041  F041         	movff	___fldiv@b+1,?___fldiv+1
  7856  001E22  C042  F042         	movff	___fldiv@b+2,?___fldiv+2
  7857  001E26  C043  F043         	movff	___fldiv@b+3,?___fldiv+3
  7858  001E2A  EF5A  F010         	goto	l700
  7859  001E2E                     l2695:
  7860  001E2E  5057               	movf	___fldiv@bexp^0,w,c
  7861  001E30  A4D8               	btfss	status,2,c
  7862  001E32  EF1D  F00F         	goto	u2801
  7863  001E36  EF1F  F00F         	goto	u2800
  7864  001E3A                     u2801:
  7865  001E3A  EF29  F00F         	goto	l2703
  7866  001E3E                     u2800:
  7867  001E3E  0E00               	movlw	0
  7868  001E40  6E40               	movwf	?___fldiv^0,c
  7869  001E42  0E00               	movlw	0
  7870  001E44  6E41               	movwf	(?___fldiv+1)^0,c
  7871  001E46  0E00               	movlw	0
  7872  001E48  6E42               	movwf	(?___fldiv+2)^0,c
  7873  001E4A  0E00               	movlw	0
  7874  001E4C  6E43               	movwf	(?___fldiv+3)^0,c
  7875  001E4E  EF5A  F010         	goto	l700
  7876  001E52                     l2703:
  7877  001E52  5058               	movf	___fldiv@aexp^0,w,c
  7878  001E54  C057  F048         	movff	___fldiv@bexp,??___fldiv
  7879  001E58  6A49               	clrf	(??___fldiv+1)^0,c
  7880  001E5A  5E48               	subwf	??___fldiv^0,f,c
  7881  001E5C  0E00               	movlw	0
  7882  001E5E  5A49               	subwfb	(??___fldiv+1)^0,f,c
  7883  001E60  0E7F               	movlw	127
  7884  001E62  2448               	addwf	??___fldiv^0,w,c
  7885  001E64  6E51               	movwf	___fldiv@new_exp^0,c
  7886  001E66  0E00               	movlw	0
  7887  001E68  2049               	addwfc	(??___fldiv+1)^0,w,c
  7888  001E6A  6E52               	movwf	(___fldiv@new_exp+1)^0,c
  7889  001E6C  C040  F04C         	movff	___fldiv@b,___fldiv@rem
  7890  001E70  C041  F04D         	movff	___fldiv@b+1,___fldiv@rem+1
  7891  001E74  C042  F04E         	movff	___fldiv@b+2,___fldiv@rem+2
  7892  001E78  C043  F04F         	movff	___fldiv@b+3,___fldiv@rem+3
  7893  001E7C  0E00               	movlw	0
  7894  001E7E  6E40               	movwf	___fldiv@b^0,c
  7895  001E80  0E00               	movlw	0
  7896  001E82  6E41               	movwf	(___fldiv@b+1)^0,c
  7897  001E84  0E00               	movlw	0
  7898  001E86  6E42               	movwf	(___fldiv@b+2)^0,c
  7899  001E88  0E00               	movlw	0
  7900  001E8A  6E43               	movwf	(___fldiv@b+3)^0,c
  7901  001E8C  0E00               	movlw	0
  7902  001E8E  6E53               	movwf	___fldiv@grs^0,c
  7903  001E90  0E00               	movlw	0
  7904  001E92  6E54               	movwf	(___fldiv@grs+1)^0,c
  7905  001E94  0E00               	movlw	0
  7906  001E96  6E55               	movwf	(___fldiv@grs+2)^0,c
  7907  001E98  0E00               	movlw	0
  7908  001E9A  6E56               	movwf	(___fldiv@grs+3)^0,c
  7909  001E9C  0E00               	movlw	0
  7910  001E9E  6E58               	movwf	___fldiv@aexp^0,c
  7911  001EA0  EF8A  F00F         	goto	l702
  7912  001EA4                     l2713:
  7913  001EA4  5058               	movf	___fldiv@aexp^0,w,c
  7914  001EA6  B4D8               	btfsc	status,2,c
  7915  001EA8  EF58  F00F         	goto	u2811
  7916  001EAC  EF5A  F00F         	goto	u2810
  7917  001EB0                     u2811:
  7918  001EB0  EF71  F00F         	goto	l2721
  7919  001EB4                     u2810:
  7920  001EB4  90D8               	bcf	status,0,c
  7921  001EB6  364C               	rlcf	___fldiv@rem^0,f,c
  7922  001EB8  364D               	rlcf	(___fldiv@rem+1)^0,f,c
  7923  001EBA  364E               	rlcf	(___fldiv@rem+2)^0,f,c
  7924  001EBC  364F               	rlcf	(___fldiv@rem+3)^0,f,c
  7925  001EBE  90D8               	bcf	status,0,c
  7926  001EC0  3640               	rlcf	___fldiv@b^0,f,c
  7927  001EC2  3641               	rlcf	(___fldiv@b+1)^0,f,c
  7928  001EC4  3642               	rlcf	(___fldiv@b+2)^0,f,c
  7929  001EC6  3643               	rlcf	(___fldiv@b+3)^0,f,c
  7930  001EC8  AE56               	btfss	(___fldiv@grs+3)^0,7,c
  7931  001ECA  EF69  F00F         	goto	u2821
  7932  001ECE  EF6B  F00F         	goto	u2820
  7933  001ED2                     u2821:
  7934  001ED2  EF6C  F00F         	goto	l705
  7935  001ED6                     u2820:
  7936  001ED6  8040               	bsf	___fldiv@b^0,0,c
  7937  001ED8                     l705:
  7938  001ED8  90D8               	bcf	status,0,c
  7939  001EDA  3653               	rlcf	___fldiv@grs^0,f,c
  7940  001EDC  3654               	rlcf	(___fldiv@grs+1)^0,f,c
  7941  001EDE  3655               	rlcf	(___fldiv@grs+2)^0,f,c
  7942  001EE0  3656               	rlcf	(___fldiv@grs+3)^0,f,c
  7943  001EE2                     l2721:
  7944  001EE2  5044               	movf	___fldiv@a^0,w,c
  7945  001EE4  5C4C               	subwf	___fldiv@rem^0,w,c
  7946  001EE6  5045               	movf	(___fldiv@a+1)^0,w,c
  7947  001EE8  584D               	subwfb	(___fldiv@rem+1)^0,w,c
  7948  001EEA  5046               	movf	(___fldiv@a+2)^0,w,c
  7949  001EEC  584E               	subwfb	(___fldiv@rem+2)^0,w,c
  7950  001EEE  5047               	movf	(___fldiv@a+3)^0,w,c
  7951  001EF0  584F               	subwfb	(___fldiv@rem+3)^0,w,c
  7952  001EF2  A0D8               	btfss	status,0,c
  7953  001EF4  EF7E  F00F         	goto	u2831
  7954  001EF8  EF80  F00F         	goto	u2830
  7955  001EFC                     u2831:
  7956  001EFC  EF89  F00F         	goto	l2727
  7957  001F00                     u2830:
  7958  001F00  8C56               	bsf	(___fldiv@grs+3)^0,6,c
  7959  001F02  5044               	movf	___fldiv@a^0,w,c
  7960  001F04  5E4C               	subwf	___fldiv@rem^0,f,c
  7961  001F06  5045               	movf	(___fldiv@a+1)^0,w,c
  7962  001F08  5A4D               	subwfb	(___fldiv@rem+1)^0,f,c
  7963  001F0A  5046               	movf	(___fldiv@a+2)^0,w,c
  7964  001F0C  5A4E               	subwfb	(___fldiv@rem+2)^0,f,c
  7965  001F0E  5047               	movf	(___fldiv@a+3)^0,w,c
  7966  001F10  5A4F               	subwfb	(___fldiv@rem+3)^0,f,c
  7967  001F12                     l2727:
  7968  001F12  2A58               	incf	___fldiv@aexp^0,f,c
  7969  001F14                     l702:
  7970  001F14  0E19               	movlw	25
  7971  001F16  6458               	cpfsgt	___fldiv@aexp^0,c
  7972  001F18  EF90  F00F         	goto	u2841
  7973  001F1C  EF92  F00F         	goto	u2840
  7974  001F20                     u2841:
  7975  001F20  EF52  F00F         	goto	l2713
  7976  001F24                     u2840:
  7977  001F24  504C               	movf	___fldiv@rem^0,w,c
  7978  001F26  104D               	iorwf	(___fldiv@rem+1)^0,w,c
  7979  001F28  104E               	iorwf	(___fldiv@rem+2)^0,w,c
  7980  001F2A  104F               	iorwf	(___fldiv@rem+3)^0,w,c
  7981  001F2C  B4D8               	btfsc	status,2,c
  7982  001F2E  EF9B  F00F         	goto	u2851
  7983  001F32  EF9D  F00F         	goto	u2850
  7984  001F36                     u2851:
  7985  001F36  EFB5  F00F         	goto	l2739
  7986  001F3A                     u2850:
  7987  001F3A  8053               	bsf	___fldiv@grs^0,0,c
  7988  001F3C  EFB5  F00F         	goto	l2739
  7989  001F40                     l2733:
  7990  001F40  90D8               	bcf	status,0,c
  7991  001F42  3640               	rlcf	___fldiv@b^0,f,c
  7992  001F44  3641               	rlcf	(___fldiv@b+1)^0,f,c
  7993  001F46  3642               	rlcf	(___fldiv@b+2)^0,f,c
  7994  001F48  3643               	rlcf	(___fldiv@b+3)^0,f,c
  7995  001F4A  AE56               	btfss	(___fldiv@grs+3)^0,7,c
  7996  001F4C  EFAA  F00F         	goto	u2861
  7997  001F50  EFAC  F00F         	goto	u2860
  7998  001F54                     u2861:
  7999  001F54  EFAD  F00F         	goto	l711
  8000  001F58                     u2860:
  8001  001F58  8040               	bsf	___fldiv@b^0,0,c
  8002  001F5A                     l711:
  8003  001F5A  90D8               	bcf	status,0,c
  8004  001F5C  3653               	rlcf	___fldiv@grs^0,f,c
  8005  001F5E  3654               	rlcf	(___fldiv@grs+1)^0,f,c
  8006  001F60  3655               	rlcf	(___fldiv@grs+2)^0,f,c
  8007  001F62  3656               	rlcf	(___fldiv@grs+3)^0,f,c
  8008  001F64  0651               	decf	___fldiv@new_exp^0,f,c
  8009  001F66  A0D8               	btfss	status,0,c
  8010  001F68  0652               	decf	(___fldiv@new_exp+1)^0,f,c
  8011  001F6A                     l2739:
  8012  001F6A  AE42               	btfss	(___fldiv@b+2)^0,7,c
  8013  001F6C  EFBA  F00F         	goto	u2871
  8014  001F70  EFBC  F00F         	goto	u2870
  8015  001F74                     u2871:
  8016  001F74  EFA0  F00F         	goto	l2733
  8017  001F78                     u2870:
  8018  001F78  0E00               	movlw	0
  8019  001F7A  6E58               	movwf	___fldiv@aexp^0,c
  8020  001F7C  AE56               	btfss	(___fldiv@grs+3)^0,7,c
  8021  001F7E  EFC3  F00F         	goto	u2881
  8022  001F82  EFC5  F00F         	goto	u2880
  8023  001F86                     u2881:
  8024  001F86  EFE9  F00F         	goto	l713
  8025  001F8A                     u2880:
  8026  001F8A  0EFF               	movlw	255
  8027  001F8C  1453               	andwf	___fldiv@grs^0,w,c
  8028  001F8E  6E48               	movwf	??___fldiv^0,c
  8029  001F90  0EFF               	movlw	255
  8030  001F92  1454               	andwf	(___fldiv@grs+1)^0,w,c
  8031  001F94  6E49               	movwf	(??___fldiv+1)^0,c
  8032  001F96  0EFF               	movlw	255
  8033  001F98  1455               	andwf	(___fldiv@grs+2)^0,w,c
  8034  001F9A  6E4A               	movwf	(??___fldiv+2)^0,c
  8035  001F9C  0E7F               	movlw	127
  8036  001F9E  1456               	andwf	(___fldiv@grs+3)^0,w,c
  8037  001FA0  6E4B               	movwf	(??___fldiv+3)^0,c
  8038  001FA2  5048               	movf	??___fldiv^0,w,c
  8039  001FA4  1049               	iorwf	(??___fldiv+1)^0,w,c
  8040  001FA6  104A               	iorwf	(??___fldiv+2)^0,w,c
  8041  001FA8  104B               	iorwf	(??___fldiv+3)^0,w,c
  8042  001FAA  B4D8               	btfsc	status,2,c
  8043  001FAC  EFDA  F00F         	goto	u2891
  8044  001FB0  EFDC  F00F         	goto	u2890
  8045  001FB4                     u2891:
  8046  001FB4  EFE0  F00F         	goto	l714
  8047  001FB8                     u2890:
  8048  001FB8                     l2747:
  8049  001FB8  0E01               	movlw	1
  8050  001FBA  6E58               	movwf	___fldiv@aexp^0,c
  8051  001FBC  EFE9  F00F         	goto	l713
  8052  001FC0                     l714:
  8053  001FC0  A040               	btfss	___fldiv@b^0,0,c
  8054  001FC2  EFE5  F00F         	goto	u2901
  8055  001FC6  EFE7  F00F         	goto	u2900
  8056  001FCA                     u2901:
  8057  001FCA  EFE9  F00F         	goto	l713
  8058  001FCE                     u2900:
  8059  001FCE  EFDC  F00F         	goto	l2747
  8060  001FD2                     l713:
  8061  001FD2  5058               	movf	___fldiv@aexp^0,w,c
  8062  001FD4  B4D8               	btfsc	status,2,c
  8063  001FD6  EFEF  F00F         	goto	u2911
  8064  001FDA  EFF1  F00F         	goto	u2910
  8065  001FDE                     u2911:
  8066  001FDE  EF15  F010         	goto	l2759
  8067  001FE2                     u2910:
  8068  001FE2  0E01               	movlw	1
  8069  001FE4  2640               	addwf	___fldiv@b^0,f,c
  8070  001FE6  0E00               	movlw	0
  8071  001FE8  2241               	addwfc	(___fldiv@b+1)^0,f,c
  8072  001FEA  2242               	addwfc	(___fldiv@b+2)^0,f,c
  8073  001FEC  2243               	addwfc	(___fldiv@b+3)^0,f,c
  8074  001FEE  A043               	btfss	(___fldiv@b+3)^0,0,c
  8075  001FF0  EFFC  F00F         	goto	u2921
  8076  001FF4  EFFE  F00F         	goto	u2920
  8077  001FF8                     u2921:
  8078  001FF8  EF15  F010         	goto	l2759
  8079  001FFC                     u2920:
  8080  001FFC  C040  F048         	movff	___fldiv@b,??___fldiv
  8081  002000  C041  F049         	movff	___fldiv@b+1,??___fldiv+1
  8082  002004  C042  F04A         	movff	___fldiv@b+2,??___fldiv+2
  8083  002008  C043  F04B         	movff	___fldiv@b+3,??___fldiv+3
  8084  00200C  344B               	rlcf	(??___fldiv+3)^0,w,c
  8085  00200E  324B               	rrcf	(??___fldiv+3)^0,f,c
  8086  002010  324A               	rrcf	(??___fldiv+2)^0,f,c
  8087  002012  3249               	rrcf	(??___fldiv+1)^0,f,c
  8088  002014  3248               	rrcf	??___fldiv^0,f,c
  8089  002016  C048  F040         	movff	??___fldiv,___fldiv@b
  8090  00201A  C049  F041         	movff	??___fldiv+1,___fldiv@b+1
  8091  00201E  C04A  F042         	movff	??___fldiv+2,___fldiv@b+2
  8092  002022  C04B  F043         	movff	??___fldiv+3,___fldiv@b+3
  8093  002026  4A51               	infsnz	___fldiv@new_exp^0,f,c
  8094  002028  2A52               	incf	(___fldiv@new_exp+1)^0,f,c
  8095  00202A                     l2759:
  8096  00202A  BE52               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8097  00202C  EF20  F010         	goto	u2931
  8098  002030  5052               	movf	(___fldiv@new_exp+1)^0,w,c
  8099  002032  E108               	bnz	u2930
  8100  002034  2851               	incf	___fldiv@new_exp^0,w,c
  8101  002036  A0D8               	btfss	status,0,c
  8102  002038  EF20  F010         	goto	u2931
  8103  00203C  EF22  F010         	goto	u2930
  8104  002040                     u2931:
  8105  002040  EF2D  F010         	goto	l2763
  8106  002044                     u2930:
  8107  002044  0E00               	movlw	0
  8108  002046  6E52               	movwf	(___fldiv@new_exp+1)^0,c
  8109  002048  6851               	setf	___fldiv@new_exp^0,c
  8110  00204A  0E00               	movlw	0
  8111  00204C  6E40               	movwf	___fldiv@b^0,c
  8112  00204E  0E00               	movlw	0
  8113  002050  6E41               	movwf	(___fldiv@b+1)^0,c
  8114  002052  0E00               	movlw	0
  8115  002054  6E42               	movwf	(___fldiv@b+2)^0,c
  8116  002056  0E00               	movlw	0
  8117  002058  6E43               	movwf	(___fldiv@b+3)^0,c
  8118  00205A                     l2763:
  8119  00205A  BE52               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8120  00205C  EF3A  F010         	goto	u2940
  8121  002060  5052               	movf	(___fldiv@new_exp+1)^0,w,c
  8122  002062  E106               	bnz	u2941
  8123  002064  0451               	decf	___fldiv@new_exp^0,w,c
  8124  002066  B0D8               	btfsc	status,0,c
  8125  002068  EF38  F010         	goto	u2941
  8126  00206C  EF3A  F010         	goto	u2940
  8127  002070                     u2941:
  8128  002070  EF48  F010         	goto	l2767
  8129  002074                     u2940:
  8130  002074  0E00               	movlw	0
  8131  002076  6E52               	movwf	(___fldiv@new_exp+1)^0,c
  8132  002078  0E00               	movlw	0
  8133  00207A  6E51               	movwf	___fldiv@new_exp^0,c
  8134  00207C  0E00               	movlw	0
  8135  00207E  6E40               	movwf	___fldiv@b^0,c
  8136  002080  0E00               	movlw	0
  8137  002082  6E41               	movwf	(___fldiv@b+1)^0,c
  8138  002084  0E00               	movlw	0
  8139  002086  6E42               	movwf	(___fldiv@b+2)^0,c
  8140  002088  0E00               	movlw	0
  8141  00208A  6E43               	movwf	(___fldiv@b+3)^0,c
  8142  00208C  0E00               	movlw	0
  8143  00208E  6E50               	movwf	___fldiv@sign^0,c
  8144  002090                     l2767:
  8145  002090  C051  F057         	movff	___fldiv@new_exp,___fldiv@bexp
  8146  002094  A057               	btfss	___fldiv@bexp^0,0,c
  8147  002096  EF4F  F010         	goto	u2951
  8148  00209A  EF51  F010         	goto	u2950
  8149  00209E                     u2951:
  8150  00209E  EF54  F010         	goto	l2773
  8151  0020A2                     u2950:
  8152  0020A2  8E42               	bsf	(___fldiv@b+2)^0,7,c
  8153  0020A4  EF55  F010         	goto	l2775
  8154  0020A8                     l2773:
  8155  0020A8  9E42               	bcf	(___fldiv@b+2)^0,7,c
  8156  0020AA                     l2775:
  8157  0020AA  90D8               	bcf	status,0,c
  8158  0020AC  3057               	rrcf	___fldiv@bexp^0,w,c
  8159  0020AE  6E43               	movwf	(___fldiv@b+3)^0,c
  8160  0020B0  EF0B  F00F         	goto	l2689
  8161  0020B4                     l700:
  8162  0020B4  0012               	return		;funcret
  8163  0020B6                     __end_of___fldiv:
  8164                           	callstack 0
  8165                           
  8166 ;; *************** function _ADC_Init *****************
  8167 ;; Defined at:
  8168 ;;		line 4 in file "ADC_LIB.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;		None
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  1    wreg      void 
  8175 ;; Registers used:
  8176 ;;		wreg, status,2
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8182 ;;      Params:         0       0       0       0       0       0       0       0       0
  8183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8186 ;;Total ram usage:        0 bytes
  8187 ;; Hardware stack levels used: 1
  8188 ;; Hardware stack levels required when called: 1
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_main
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text33
  8197  00378A                     __ptext33:
  8198                           	callstack 0
  8199  00378A                     _ADC_Init:
  8200                           	callstack 29
  8201  00378A                     
  8202                           ;ADC_LIB.c: 5:     ADCON1bits.VCFG = 0b00;
  8203  00378A  0ECF               	movlw	-49
  8204  00378C  16C1               	andwf	193,f,c	;volatile
  8205  00378E                     
  8206                           ;ADC_LIB.c: 6:     ADCON2bits.ADFM = 1;
  8207  00378E  8EC0               	bsf	192,7,c	;volatile
  8208                           
  8209                           ;ADC_LIB.c: 7:     ADCON2bits.ADCS = 6;
  8210  003790  50C0               	movf	192,w,c	;volatile
  8211  003792  0BF8               	andlw	-8
  8212  003794  0906               	iorlw	6
  8213  003796  6EC0               	movwf	192,c	;volatile
  8214                           
  8215                           ;ADC_LIB.c: 8:     ADCON2bits.ACQT = 7;
  8216  003798  0E38               	movlw	56
  8217  00379A  12C0               	iorwf	192,f,c	;volatile
  8218  00379C                     
  8219                           ;ADC_LIB.c: 9:     ADCON0bits.ADON = 1;
  8220  00379C  80C2               	bsf	194,0,c	;volatile
  8221  00379E  0012               	return		;funcret
  8222  0037A0                     __end_of_ADC_Init:
  8223                           	callstack 0
  8224                           
  8225 ;; *************** function _appLedRxData *****************
  8226 ;; Defined at:
  8227 ;;		line 15 in file "main.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;		None
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;		None
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1    wreg      void 
  8234 ;; Registers used:
  8235 ;;		None
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8241 ;;      Params:         0       0       0       0       0       0       0       0       0
  8242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8244 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8245 ;;Total ram usage:        0 bytes
  8246 ;; Hardware stack levels used: 1
  8247 ;; This function calls:
  8248 ;;		Nothing
  8249 ;; This function is called by:
  8250 ;;		Interrupt level 2
  8251 ;; This function uses a non-reentrant model
  8252 ;;
  8253                           
  8254                           	psect	intcode
  8255  000008                     __pintcode:
  8256                           	callstack 0
  8257  000008                     _appLedRxData:
  8258                           	callstack 22
  8259                           
  8260                           ;incstack = 0
  8261  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8262  00000A  EDD0  F01B         	call	int_func,f	;refresh shadow registers
  8263                           
  8264                           	psect	intcode_body
  8265  0037A0                     __pintcode_body:
  8266                           	callstack 22
  8267  0037A0                     int_func:
  8268                           	callstack 22
  8269  0037A0  0006               	pop		; remove dummy address from shadow register refresh
  8270  0037A2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8271  0037A4  0011               	retfie		f
  8272  0037A6                     __end_of_appLedRxData:
  8273                           	callstack 0
  8274                           
  8275                           	psect	rparam
  8276  0000                     
  8277                           	psect	temp
  8278  00005F                     btemp:
  8279                           	callstack 0
  8280  00005F                     	ds	1
  8281  0000                     int$flags	set	btemp
  8282  0000                     wtemp8	set	btemp+1
  8283  0000                     ttemp5	set	btemp+1
  8284  0000                     ttemp6	set	btemp+4
  8285  0000                     ttemp7	set	btemp+8
  8286                           
  8287                           	psect	idloc
  8288                           
  8289                           ;Config register IDLOC0 @ 0x200000
  8290                           ;	unspecified, using default values
  8291  200000                     	org	2097152
  8292  200000  FF                 	db	255
  8293                           
  8294                           ;Config register IDLOC1 @ 0x200001
  8295                           ;	unspecified, using default values
  8296  200001                     	org	2097153
  8297  200001  FF                 	db	255
  8298                           
  8299                           ;Config register IDLOC2 @ 0x200002
  8300                           ;	unspecified, using default values
  8301  200002                     	org	2097154
  8302  200002  FF                 	db	255
  8303                           
  8304                           ;Config register IDLOC3 @ 0x200003
  8305                           ;	unspecified, using default values
  8306  200003                     	org	2097155
  8307  200003  FF                 	db	255
  8308                           
  8309                           ;Config register IDLOC4 @ 0x200004
  8310                           ;	unspecified, using default values
  8311  200004                     	org	2097156
  8312  200004  FF                 	db	255
  8313                           
  8314                           ;Config register IDLOC5 @ 0x200005
  8315                           ;	unspecified, using default values
  8316  200005                     	org	2097157
  8317  200005  FF                 	db	255
  8318                           
  8319                           ;Config register IDLOC6 @ 0x200006
  8320                           ;	unspecified, using default values
  8321  200006                     	org	2097158
  8322  200006  FF                 	db	255
  8323                           
  8324                           ;Config register IDLOC7 @ 0x200007
  8325                           ;	unspecified, using default values
  8326  200007                     	org	2097159
  8327  200007  FF                 	db	255
  8328                           
  8329                           	psect	config
  8330                           
  8331                           ;Config register CONFIG1L @ 0x300000
  8332                           ;	PLL Prescaler Selection bits
  8333                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8334                           ;	System Clock Postscaler Selection bits
  8335                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8336                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8337                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8338  300000                     	org	3145728
  8339  300000  00                 	db	0
  8340                           
  8341                           ;Config register CONFIG1H @ 0x300001
  8342                           ;	Oscillator Selection bits
  8343                           ;	FOSC = HS, HS oscillator (HS)
  8344                           ;	Fail-Safe Clock Monitor Enable bit
  8345                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8346                           ;	Internal/External Oscillator Switchover bit
  8347                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8348  300001                     	org	3145729
  8349  300001  0C                 	db	12
  8350                           
  8351                           ;Config register CONFIG2L @ 0x300002
  8352                           ;	Power-up Timer Enable bit
  8353                           ;	PWRT = ON, PWRT enabled
  8354                           ;	Brown-out Reset Enable bits
  8355                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8356                           ;	Brown-out Reset Voltage bits
  8357                           ;	BORV = 3, Minimum setting 2.05V
  8358                           ;	USB Voltage Regulator Enable bit
  8359                           ;	VREGEN = OFF, USB voltage regulator disabled
  8360  300002                     	org	3145730
  8361  300002  18                 	db	24
  8362                           
  8363                           ;Config register CONFIG2H @ 0x300003
  8364                           ;	Watchdog Timer Enable bit
  8365                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8366                           ;	Watchdog Timer Postscale Select bits
  8367                           ;	WDTPS = 32768, 1:32768
  8368  300003                     	org	3145731
  8369  300003  1E                 	db	30
  8370                           
  8371                           ; Padding undefined space
  8372  300004                     	org	3145732
  8373  300004  FF                 	db	255
  8374                           
  8375                           ;Config register CONFIG3H @ 0x300005
  8376                           ;	CCP2 MUX bit
  8377                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8378                           ;	PORTB A/D Enable bit
  8379                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8380                           ;	Low-Power Timer 1 Oscillator Enable bit
  8381                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8382                           ;	MCLR Pin Enable bit
  8383                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8384  300005                     	org	3145733
  8385  300005  81                 	db	129
  8386                           
  8387                           ;Config register CONFIG4L @ 0x300006
  8388                           ;	Stack Full/Underflow Reset Enable bit
  8389                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8390                           ;	Single-Supply ICSP Enable bit
  8391                           ;	LVP = OFF, Single-Supply ICSP disabled
  8392                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8393                           ;	ICPRT = OFF, ICPORT disabled
  8394                           ;	Extended Instruction Set Enable bit
  8395                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8396                           ;	Background Debugger Enable bit
  8397                           ;	DEBUG = 0x1, unprogrammed default
  8398  300006                     	org	3145734
  8399  300006  81                 	db	129
  8400                           
  8401                           ; Padding undefined space
  8402  300007                     	org	3145735
  8403  300007  FF                 	db	255
  8404                           
  8405                           ;Config register CONFIG5L @ 0x300008
  8406                           ;	Code Protection bit
  8407                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8408                           ;	Code Protection bit
  8409                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8410                           ;	Code Protection bit
  8411                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8412                           ;	Code Protection bit
  8413                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8414  300008                     	org	3145736
  8415  300008  0F                 	db	15
  8416                           
  8417                           ;Config register CONFIG5H @ 0x300009
  8418                           ;	Boot Block Code Protection bit
  8419                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8420                           ;	Data EEPROM Code Protection bit
  8421                           ;	CPD = OFF, Data EEPROM is not code-protected
  8422  300009                     	org	3145737
  8423  300009  C0                 	db	192
  8424                           
  8425                           ;Config register CONFIG6L @ 0x30000A
  8426                           ;	Write Protection bit
  8427                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8428                           ;	Write Protection bit
  8429                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8430                           ;	Write Protection bit
  8431                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8432                           ;	Write Protection bit
  8433                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8434  30000A                     	org	3145738
  8435  30000A  0F                 	db	15
  8436                           
  8437                           ;Config register CONFIG6H @ 0x30000B
  8438                           ;	Configuration Register Write Protection bit
  8439                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8440                           ;	Boot Block Write Protection bit
  8441                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8442                           ;	Data EEPROM Write Protection bit
  8443                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8444  30000B                     	org	3145739
  8445  30000B  E0                 	db	224
  8446                           
  8447                           ;Config register CONFIG7L @ 0x30000C
  8448                           ;	Table Read Protection bit
  8449                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8450                           ;	Table Read Protection bit
  8451                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8452                           ;	Table Read Protection bit
  8453                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8454                           ;	Table Read Protection bit
  8455                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8456  30000C                     	org	3145740
  8457  30000C  0F                 	db	15
  8458                           
  8459                           ;Config register CONFIG7H @ 0x30000D
  8460                           ;	Boot Block Table Read Protection bit
  8461                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8462  30000D                     	org	3145741
  8463  30000D  40                 	db	64
  8464                           tosu	equ	0xFFF
  8465                           tosh	equ	0xFFE
  8466                           tosl	equ	0xFFD
  8467                           stkptr	equ	0xFFC
  8468                           pclatu	equ	0xFFB
  8469                           pclath	equ	0xFFA
  8470                           pcl	equ	0xFF9
  8471                           tblptru	equ	0xFF8
  8472                           tblptrh	equ	0xFF7
  8473                           tblptrl	equ	0xFF6
  8474                           tablat	equ	0xFF5
  8475                           prodh	equ	0xFF4
  8476                           prodl	equ	0xFF3
  8477                           indf0	equ	0xFEF
  8478                           postinc0	equ	0xFEE
  8479                           postdec0	equ	0xFED
  8480                           preinc0	equ	0xFEC
  8481                           plusw0	equ	0xFEB
  8482                           fsr0h	equ	0xFEA
  8483                           fsr0l	equ	0xFE9
  8484                           wreg	equ	0xFE8
  8485                           indf1	equ	0xFE7
  8486                           postinc1	equ	0xFE6
  8487                           postdec1	equ	0xFE5
  8488                           preinc1	equ	0xFE4
  8489                           plusw1	equ	0xFE3
  8490                           fsr1h	equ	0xFE2
  8491                           fsr1l	equ	0xFE1
  8492                           bsr	equ	0xFE0
  8493                           indf2	equ	0xFDF
  8494                           postinc2	equ	0xFDE
  8495                           postdec2	equ	0xFDD
  8496                           preinc2	equ	0xFDC
  8497                           plusw2	equ	0xFDB
  8498                           fsr2h	equ	0xFDA
  8499                           fsr2l	equ	0xFD9
  8500                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    0
    Data        50
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    141     159
    BANK1           256      0     142
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S818$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S818$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK1[50]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flge->___flmul
    _UART_Write_Text->_UART_Write_Chr
    _UART_Init->___lldiv
    _ADC_MAP->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flsub

Critical Paths under _appLedRxData in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _appLedRxData in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _appLedRxData in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _appLedRxData in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _appLedRxData in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _appLedRxData in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _appLedRxData in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _appLedRxData in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _appLedRxData in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   41270
                                            131 BANK0     10    10      0
                           _ADC_Init
                            _ADC_MAP
                           _ADC_Read
                          _UART_Init
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    15     16   27564
                                            102 BANK0     29    13     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27209
                                             92 COMRAM     2     2      0
                                             96 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   26848
                                             78 BANK0     18    12      6
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   23208
                                             16 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             88 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2     143
                                              1 COMRAM     2     0      2
                     _UART_Write_Chr
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Chr                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16     8      8     504
                                             13 COMRAM    16     8      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_MAP                                             26     8     18   12942
                                              0 BANK0     26     8     18
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3497
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             63 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _appLedRxData                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_MAP
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _ADC_Read
   _UART_Init
     ___lldiv
   _UART_Write_Text
     _UART_Write_Chr
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isupper
         _strncmp
         _tolower

 _appLedRxData (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8E       7       55.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8D      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllll       3E      0       0      23        0.0%
BITBIGSFRhh         3B      0       0      20        0.0%
BITBIGSFRlh         10      0       0      21        0.0%
BITBIGSFRlllh        C      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18B      24        0.0%
DATA                 0      0     18B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 05 09:07:38 2023

           ___fldiv@aexp 0058             ___fldiv@bexp 0057             ___fldiv@sign 0050  
                     l71 2E96                       l73 2EA0                       l81 3788  
                     l74 2EA8                       l75 2EDC                       l78 3776  
                     l87 3772             ___awdiv@sign 0006                      l112 366A  
                    l106 379E                      l115 2AEC                      l109 3646  
                    l152 3404                      l145 33F4                      l415 2BF2  
                    l362 32B6                      l700 20B4                      l349 3206  
                    l702 1F14                      l711 1F5A                      l383 2CB0  
                    l392 36DA                      l713 1FD2                      l705 1ED8  
                    l377 3360                      l714 1FC0                      l732 19B6  
                    l388 2CF6                      l741 1C24                      l742 1C12  
                    l646 1620                      l663 173A                      l655 18F0  
                    l647 160E                      l736 1D1A                      l672 180A  
                    l648 15D4                      l673 17F8                      l833 30C4  
                    l739 1BAC                      l780 28E2                      l836 3106  
                    l932 23E8                      l749 1CDC                      l773 284A  
                    l838 3142                      l870 0BE0                      l854 1430  
                    l943 345E                      l688 35E6                      l776 29A6  
                    l944 3466                      l961 25FE                      l937 232E  
                    l954 2DF4                      l787 293E                      l971 36A2  
                    l964 2542                      l796 3514                      l986 307C  
                    l994 362A                      l898 1020                      l997 37A6  
                    _RX9 007D5E                      _TX9 007D66          __end_of_ADC_MAP 2AEE  
                    _pad 307E                      _hum 00ED             ___awmod@sign 0006  
                    wreg 000FE8             ___flmul@aexp 0020             ___flmul@bexp 0021  
           ___flmul@sign 001B             ___flmul@temp 0026             ___flmul@prod 0022  
           ___fltol@exp1 000A                     l1003 34C2                     l1013 2FB2  
                   l1023 3598                     l1009 3710                     l1026 35A0  
                   l3001 32E6                     l3011 335E                     l3003 32F6  
                   l3005 3324                     l3021 2C60                     l3101 30E4  
                   l3007 3334                     l3031 2CEE                     l3023 2C70  
                   l3015 2BF4                     l3111 2CF8                     l3103 30E8  
                   l3009 3358                     l3033 2CF4                     l3025 2C7E  
                   l3017 2C22                     l3041 36CA                     l3113 2D18  
                   l3105 3116                     l3201 08D8                     l3027 2C90  
                   l3019 2C32                     l3051 2B18                     l3115 2D56  
                   l3123 2D96                     l2411 2FD8                     l3107 312A  
                   l3211 0908                     l3203 08DC                     l2501 1576  
                   l2421 1432                     l3029 2C9E                     l3037 36A4  
                   l3061 2B66                     l3053 2B42                     l3045 2AEE  
                   l3125 2DA8                     l3117 2D7E                     l2413 2FE2  
                   l3133 3468                     l3141 355C                     l3301 0CBE  
                   l3213 0936                     l3205 08E2                     l2511 15EE  
                   l2503 15A0                     l2431 146E                     l2423 143E  
                   l3039 36BA                     l3071 2B92                     l3055 2B44  
                   l3047 2B04                     l3119 2D8A                     l3151 2462  
                   l2415 3000                     l2407 2FB4                     l3135 3478  
                   l3143 358A                     l3311 0D06                     l3303 0CCC  
                   l3231 09F0                     l3215 0952                     l3223 099C  
                   l2601 1880                     l2521 162E                     l2513 15F2  
                   l2505 15BC                     l2441 149E                     l2433 147E  
                   l2425 144C                     l3081 2BC2                     l3057 2B54  
                   l3129 2DEC                     l3161 2532                     l3153 2476  
                   l2417 3036                     l2409 2FC6                     l3137 355C  
                   l3401 120A                     l3321 0E1A                     l3313 0D16  
                   l3305 0CE4                     l3233 0A0C                     l3241 0A28  
                   l3217 096A                     l2611 18C8                     l2603 1890  
                   l2531 1670                     l2523 163E                     l2515 1600  
                   l2507 15CC                     l2451 14C8                     l2443 14B0  
                   l2435 1480                     l2427 144E                     l3083 2BD2  
                   l3067 2B7E                     l3059 2B58                     l3171 25EE  
                   l3155 2484                     l3163 2566                     l3147 23EA  
                   l3091 308E                     l3411 1262                     l3403 1212  
                   l3331 0EBA                     l3315 0D2A                     l3323 0E20  
                   l3307 0CF6                     l3251 0AB2                     l3243 0A42  
                   l3219 0974                     l2613 18CA                     l2605 18B0  
                   l2541 169E                     l2533 167E                     l2517 1602  
                   l2509 15E2                     l2453 14D8                     l2461 1502  
                   l2445 14B2                     l2429 145E                     l2437 1488  
                   l3085 2BE2                     l3077 2BA6                     l3069 2B88  
                   l3165 25A2                     l3149 240A                     l3093 30A2  
                   l3421 12A6                     l3413 1270                     l3405 1216  
                   l3341 0F96                     l3333 0EEC                     l3325 0E3E  
                   l3317 0D8E                     l3309 0CFE                     l3261 0B8A  
                   l3253 0B0C                     l3229 09C2                     l3181 0850  
                   l3501 20B6                     l2711 1E9C                     l2703 1E52  
                   l2615 18D0                     l2607 18B4                     l2551 170A  
                   l2543 16A8                     l2535 168A                     l2527 1652  
                   l2519 160C                     l2471 153A                     l2463 1512  
                   l2455 14E8                     l2447 14B8                     l2439 1498  
                   l3079 2BB2                     l3167 25B6                     l3159 24F6  
                   l2623 35E8                     l2631 36DC                     l3095 30B0  
                   l3431 12DC                     l3423 12AE                     l3415 1280  
                   l3407 1234                     l3351 0FF8                     l3343 0F9C  
                   l3335 0EFC                     l3327 0E72                     l3319 0DE6  
                   l3271 0BD4                     l3263 0B8E                     l3255 0B40  
                   l3247 0A78                     l3191 08A0                     l3183 0858  
                   l3175 0828                     l3511 2120                     l3503 20DA  
                   l2721 1EE2                     l2713 1EA4                     l2705 1E6C  
                   l2801 195A                     l2617 18DE                     l2609 18C2  
                   l2553 171A                     l2537 168E                     l2529 1662  
                   l2545 16AE                     l2481 154E                     l2473 153E  
                   l2465 1524                     l2457 14F8                     l2449 14C6  
                   l3601 2814                     l3169 25DE                     l2625 35F4  
                   l2633 36E8                     l3097 30BC                     l3089 307E  
                   l2641 366C                     l3441 1338                     l3433 12E4  
                   l3425 12BE                     l3417 1284                     l3409 1250  
                   l3361 10B0                     l3353 100C                     l3345 0FD0  
                   l3337 0F0C                     l3329 0EA4                     l3281 0C10  
                   l3265 0BA0                     l3273 0BEC                     l3257 0B48  
                   l3249 0AAC                     l3193 08AE                     l3185 087C  
                   l3177 0832                     l3521 21B6                     l3513 2130  
                   l3505 20E8                     l2731 1F3A                     l2723 1F00  
                   l2715 1EB4                     l2707 1E7C                     l2651 1D38  
                   l2811 1990                     l2803 1960                     l2619 18E0  
                   l2571 179C                     l2563 1774                     l2547 16D4  
                   l2555 172A                     l2539 169C                     l2491 1562  
                   l2483 1552                     l2475 1542                     l2467 1532  
                   l2459 14FA                     l3611 288C                     l3603 285A  
                   l2627 3606                     l2635 36EC                     l3099 30D0  
                   l3451 1378                     l3443 1340                     l3435 12F0  
                   l3427 12C6                     l3419 1294                     l3371 10FC  
                   l3363 10C2                     l3355 1018                     l3347 0FE4  
                   l3339 0F40                     l3291 0C76                     l3283 0C2C  
                   l3267 0BB2                     l3259 0B7A                     l3195 08C0  
                   l3187 0886                     l3179 0842                     l3523 21CC  
                   l3531 2236                     l3515 2162                     l3507 20FA  
                   l2741 1F78                     l2733 1F40                     l2725 1F02  
                   l2717 1EC8                     l2709 1E8C                     l2653 1D48  
                   l2661 1D72                     l2645 1D1C                     l2901 1CF0  
                   l2813 19A0                     l2805 196E                     l2573 17A4  
                   l2565 177E                     l2557 1750                     l2549 1708  
                   l2581 17C8                     l2493 1566                     l2485 1556  
                   l2477 1546                     l2469 1536                     l3621 2914  
                   l3613 2898                     l3605 2870                     l3701 2AB8  
                   l2629 360A                     l2637 3704                     l3461 13B4  
                   l3453 138A                     l3437 12F6                     l3445 1346  
                   l3429 12D4                     l3381 1130                     l3373 110A  
                   l3365 10D4                     l3357 103C                     l3349 0FE8  
                   l3293 0C88                     l3285 0C62                     l3269 0BBA  
                   l3197 08CC                     l3189 088E                     l3541 22FE  
                   l3533 2264                     l3525 21DA                     l3517 2172  
                   l3509 20FE                     l2751 1FE2                     l2743 1F7C  
                   l2735 1F4A                     l2727 1F12                     l2719 1ED6  
                   l2671 1D9E                     l2663 1D82                     l2655 1D58  
                   l2647 1D28                     l2903 1CFE                     l2831 1A22  
                   l2823 19EA                     l2815 19A6                     l2807 1970  
                   l2591 181A                     l2583 17CC                     l2575 17A8  
                   l2567 178C                     l2559 1760                     l2495 156A  
                   l2487 155A                     l2479 154A                     l3631 2952  
                   l3623 2920                     l3615 28CA                     l3471 13FA  
                   l3455 1396                     l3447 1358                     l3439 131C  
                   l3391 1162                     l3383 1140                     l3375 111A  
                   l3367 10E2                     l3359 10A0                     l3295 0C9A  
                   l3287 0C6A                     l3279 0BFE                     l3199 08D4  
                   l3551 2374                     l3527 220A                     l3519 21A4  
                   l3711 34E6                     l2761 2044                     l2753 1FEE  
                   l2745 1F8A                     l2737 1F58                     l2729 1F24  
                   l2673 1DAE                     l2681 1DD8                     l2665 1D88  
                   l2657 1D68                     l2649 1D36                     l2905 1D00  
                   l2841 1A6C                     l2833 1A3A                     l2825 19F6  
                   l2817 19C6                     l2809 1980                     l2593 1826  
                   l2585 17DA                     l2577 17B8                     l2569 178E  
                   l2497 156E                     l2489 155E                     l2913 35A2  
                   l3633 2976                     l3625 292E                     l3617 28CC  
                   l3609 2884                     l3721 3756                     l2921 3148  
                   l3473 140A                     l3465 13BA                     l3457 139E  
                   l3449 1372                     l3393 1174                     l3385 1144  
                   l3377 111E                     l3369 10EA                     l3297 0CA8  
                   l3289 0C6E                     l3481 2EDE                     l3553 2388  
                   l3537 228C                     l3713 3502                     l3705 34C4  
                   l3651 378A                     l2771 20A2                     l2763 205A  
                   l2755 1FFC                     l2747 1FB8                     l2739 1F6A  
                   l2691 1E1A                     l2683 1DE8                     l2675 1DBE  
                   l2667 1D8E                     l2659 1D6A                     l2907 1D06  
                   l2851 1AC2                     l2843 1A7C                     l2835 1A46  
                   l2827 1A00                     l2819 19D6                     l2595 1834  
                   l2587 17F0                     l2579 17BA                     l2499 1572  
                   l2915 35B2                     l3635 2986                     l3627 294C  
                   l3619 28D8                     l3571 3776                     l3723 375A  
                   l2931 3178                     l2923 3156                     l3475 1410  
                   l3467 13E6                     l3459 13AE                     l3395 1178  
                   l3387 114A                     l3379 1124                     l3299 0CAC  
                   l3491 2F3A                     l3483 2F08                     l3539 22CA  
                   l3547 2342                     l3563 23B2                     l3643 3406  
                   l3707 34D6                     l3731 261A                     l3653 378E  
                   l2773 20A8                     l2765 2074                     l2757 2026  
                   l2685 1DFE                     l2677 1DCE                     l2669 1D9C  
                   l2909 1D0A                     l2861 1B66                     l2853 1ADE  
                   l2845 1A88                     l2837 1A52                     l2829 1A16  
                   l2597 186E                     l3637 2994                     l3629 294E  
                   l3581 3390                     l3661 2E58                     l3573 3784  
                   l3717 3744                     l2941 31A6                     l2933 317C  
                   l2925 315E                     l3469 13F2                     l3389 1150  
                   l3397 117E                     l3493 2F56                     l3565 23D6  
                   l3549 2366                     l3557 2396                     l3645 340E  
                   l3709 34DE                     l3741 264A                     l3733 261E  
                   l3725 2600                     ?_pad 0011                     l3655 379C  
                   l2775 20AA                     l2767 2090                     l2759 202A  
                   l2687 1E0E                     l2695 1E2E                     l2679 1DD0  
                   l2871 1BBC                     l2863 1B74                     l2855 1AEA  
                   l2847 1A98                     l2839 1A60                     l2791 191E  
                   l2783 18F2                     l2599 1870                     l3639 2996  
                   l3591 33E2                     l3583 339C                     l3575 3362  
                   l3671 2E8E                     l3663 2E5C                     l3719 3748  
                   l2951 31DA                     l2943 31B4                     l2935 3184  
                   l2927 3162                     l2919 3144                     l3399 11D6  
                   l3495 2F68                     l3487 2F14                     l3559 23A4  
                   l3647 341C                     l3751 2780                     l3743 26A8  
                   l3735 2622                     l3727 2604                     l2769 2094  
                   l2697 1E3E                     l2689 1E16                     l2873 1BCA  
                   l2865 1B92                     l2857 1B06                     l2849 1AB2  
                   l2793 192E                     l2785 18FE                     l3593 33E4  
                   l3585 33AA                     l3577 3372                     l3673 2E90  
                   l3665 2E60                     l3657 2DF6                     l2953 31E0  
                   l2945 31BA                     l2937 3196                     l2929 3170  
                   l3497 2F90                     l3489 2F22                     l3649 3442  
                   l3753 27C6                     l3745 26B6                     l3737 2626  
                   l3729 2608                     l2699 1E3E                     l2883 1C34  
                   l2891 1C7C                     l2875 1BCE                     l2867 1B9C  
                   l2859 1B30                     l2795 193E                     l2787 190C  
                   l3691 3644                     l3595 33EE                     l3587 33B4  
                   l3579 3388                     l3675 2E9A                     l3683 2EB2  
                   l3667 2E76                     l3659 2E54                     l2947 31D0  
                   l2939 319E                     l2955 31E6                     l2971 3226  
                   l2963 3208                     l3755 27D2                     l3747 2714  
                   l3739 263C                     l2893 1C96                     l2885 1C40  
                   l2877 1BDC                     l2869 1BAA                     l2797 1944  
                   l2789 190E                     l3597 27F6                     l3693 3654  
                   l3589 33D2                     l3669 2E8C                     l2957 31F6  
                   l2949 31D8                     l2981 325E                     l2973 3234  
                   l2965 320C                     l3749 2722                     l2895 1CAA  
                   l2887 1C4E                     l2879 1C0A                     l2799 1954  
                   l3599 2806                     l3679 2EAC                     l2959 31FE  
                   l2983 326C                     l2991 3296                     l2975 323C  
                   l2967 321A                     l2897 1CC4                     l2889 1C78  
                   l3697 29A8                     l3689 362E                     l3777 2EC6  
                   l2993 32A6                     l2985 3282                     l2977 324E  
                   l2969 3222                     l2899 1CE0                     l3699 2A24  
                   l2995 32AE                     l2987 328A                     l2979 3256  
                   l2989 3290                     l2999 32B8                     STR_1 0801  
                   STR_2 0814                     STR_3 081C                     STR_6 0818  
                   STR_7 0820                     _BRGH 007D62                     u3000 1980  
                   u3001 197C                     u3010 1990                     u3011 198C  
                   u3100 1C34                     u3020 19C6                     u2300 144C  
                   u3101 1C30                     u3021 19C2                     u2301 1448  
                   u3110 1C4E                     u3030 19D6                     u2310 145E  
                   u3111 1C4A                     u3031 19D2                     u2311 145A  
                   u3120 1C96                     u3040 1B50                     u2400 15B8  
                   u2320 146E                     u3200 31F6                     u4000 10D4  
                   u3121 1C92                     u2401 15B2                     u2321 146A  
                   u3201 31F2                     u4001 10D0                     u3130 1CC4  
                   u3050 1BAA                     u2410 15BA                     u2330 14B0  
                   u3210 321A                     u4010 10E2                     u3131 1CC0  
                   u3051 1BA6                     u2331 14AC                     u3211 3216  
                   u4011 10DE                     u3140 1CFE                     u3060 1BCA  
                   u2500 16D4                     u2420 15E2                     u2340 14C6  
                   u3220 3234                     u3300 2C22                     u2260 2FC6  
                   u4100 12D4                     u4020 10FC                     u3141 1CFA  
                   u3061 1BC6                     u3045 1B46                     u2501 16D0  
                   u2421 15DE                     u2341 14C2                     u3221 3230  
                   u3301 2C1E                     u2261 2FC2                     u4101 12D0  
                   u4021 10F8                     u3070 1BDC                     u2510 171A  
                   u2430 1600                     u2350 14D8                     u3150 3156  
                   u3230 324E                     u3310 2C60                     u2270 2FD8  
                   u4110 1358                     u4030 110A                     u3071 1BD8  
                   u2511 1716                     u2431 15FC                     u2351 14D4  
                   u3151 3152                     u3231 324A                     u3311 2C5C  
                   u2271 2FD4                     u4111 1354                     u4031 1106  
                   u3080 1C0A                     u2600 1806                     u2520 1750  
                   u2440 1620                     u2360 14E8                     u3160 3170  
                   u3240 326C                     u3320 2C7E                     u3400 2BA2  
                   u2280 3000                     u4120 1372                     u4040 1162  
                   u4200 20DA                     u3081 1C06                     u2601 1802  
                   u2521 174C                     u2441 161C                     u2361 14E4  
                   u3161 316C                     u3241 3268                     u3321 2C7A  
                   u3401 2B9E                     u2281 2FFC                     u4121 136E  
                   u4041 115E                     u4201 20D6                     u3090 1C20  
                   u2610 181A                     u2530 1760                     u2450 162E  
                   u2370 1524                     u3170 3196                     u3250 3282  
                   u3330 2C9E                     u3410 2BC2                     u2290 3036  
                   u4130 138A                     u4050 1234                     u4210 2130  
                   u3091 1C1C                     u2611 1816                     u2531 175C  
                   u2451 162A                     u2371 1520                     u3171 3192  
                   u3251 327E                     u3331 2C9A                     u3411 2BBE  
                   u2291 3032                     u4131 1386                     u4051 1230  
                   u4211 212C                     u2620 1834                     u2540 178C  
                   u2460 163E                     u2380 1532                     u4300 33D2  
                   u3180 31B4                     u3260 32A6                     u3340 2CEE  
                   u3420 2BD2                     u3500 2DA8                     u2700 3704  
                   u4140 13E6                     u4060 1250                     u4220 2172  
                   u2621 1830                     u2541 1788                     u2461 163A  
                   u2381 152E                     u4301 33CE                     u3181 31B0  
                   u3261 32A2                     u3341 2CEA                     u3421 2BCE  
                   u3501 2DA4                     u2701 3700                     u4141 13E2  
                   u4061 124C                     u4221 216E                     u2630 186E  
                   u2550 179C                     u2470 1670                     u2390 15A0  
                   u4310 2806                     u3190 31D0                     u3270 32E6  
                   u3350 36BA                     u3430 308E                     u2710 369C  
                   u4070 1262                     u4150 2F08                     u4230 21B6  
                   u2631 186A                     u2551 1798                     u2471 166C  
                   u2391 159C                     u4311 2802                     u3191 31CC  
                   u3271 32E2                     u3351 36B6                     u3431 308A  
                   u2711 3696                     u4071 125E                     u4151 2F04  
                   u4231 21B2                     u2800 1E3E                     u2640 1880  
                   u2560 17B8                     u2480 167E                     u4400 2994  
                   u4320 2814                     u3280 3324                     u3360 2B04  
                   u3520 2DE2                     u3440 30B0                     u2720 369E  
                   u4080 1270                     u4160 2F3A                     u4240 2264  
                   u2801 1E3A                     u2641 187C                     u2561 17B4  
                   u2481 167A                     u4401 2990                     u4321 2810  
                   u3281 3320                     u3361 2B00                     u3521 2DDC  
                   u3441 30AC                     u4081 126C                     u4161 2F36  
                   u4241 2260                     u2810 1EB4                     u2730 1D36  
                   u2650 1890                     u2570 17C8                     u2490 169C  
                   u4330 2870                     u3290 3358                     u3370 2B38  
                   u3530 2DE4                     u3610 24F2                     u3450 3106  
                   u4090 12A6                     u4170 2F56                     u4250 22CA  
                   u4410 345E                     u2811 1EB0                     u2731 1D32  
                   u2651 188C                     u2571 17C4                     u2491 1698  
                   u4331 286C                     u3291 3354                     u3515 2DBA  
                   u3611 24EE                     u3451 3102                     u4091 12A2  
                   u4171 2F52                     u4251 22C6                     u4411 345A  
                   u2900 1FCE                     u2820 1ED6                     u2740 1D48  
                   u2660 18B0                     u2580 17DA                     u4340 28C6  
                   u3380 2B66                     u3620 2516                     u3460 3116  
                   u3540 34B0                     u3700 08C0                     u4180 2F68  
                   u4260 2366                     u2901 1FCA                     u2821 1ED2  
                   u2741 1D44                     u2661 18AC                     u2581 17D6  
                   u4341 28C2                     u3381 2B62                     u3605 2498  
                   u3461 3112                     u3701 08BC                     u4181 2F64  
                   u4261 2362                     u2910 1FE2                     u2830 1F00  
                   u2750 1D58                     u2670 18C2                     u2590 17F0  
                   u4350 2910                     u4430 2E74                     u4270 3784  
                   u3390 2B7A                     u3470 2D38                     u3630 2532  
                   u3606 24A2                     u3550 34C2                     u3710 0908  
                   u4190 2F90                     u2911 1FDE                     u2831 1EFC  
                   u2751 1D54                     u2671 18BE                     u2591 17EC  
                   u4351 290C                     u4431 2E6E                     u4271 3780  
                   u3391 2B76                     u3375 2B2E                     u3631 252E  
                   u3607 24B2                     u3551 34BE                     u3711 0904  
                   u4191 2F8C                     u2920 1FFC                     u2840 1F24  
                   u2760 1D9C                     u2680 18DE                     u4360 292E  
                   u4280 3388                     u3480 2D56                     u3640 2586  
                   u3560 358A                     u3800 0BD4                     u3720 0936  
                   u2921 1FF8                     u2841 1F20                     u2761 1D98  
                   u2681 18DA                     u4361 292A                     u4281 3384  
                   u4425 2E18                     u3481 2D52                     u3625 250C  
                   u3561 3586                     u3801 0BD0                     u3721 0932  
                   u2930 2044                     u2850 1F3A                     u2770 1DAE  
                   u4370 293E                     u4290 33AA                     u4450 2E8A  
                   u3490 2D7E                     u3650 25A2                     u3570 2434  
                   u2690 362A                     u3810 0BFA                     u3730 09C2  
                   u2931 2040                     u2851 1F36                     u2771 1DAA  
                   u4371 293A                     u4291 33A6                     u4451 2E84  
                   u3491 2D7A                     u3475 2D2E                     u3651 259E  
                   u2691 3626                     u3547 34A6                     u3811 0BF6  
                   u3731 09BE                     u4507 27DE                     u2940 2074  
                   u2860 1F58                     u2780 1DBE                     u4380 294C  
                   u3660 25DE                     u3580 2462                     u3900 0CF6  
                   u3820 0C10                     u3740 09F0                     u2941 2070  
                   u2861 1F54                     u2781 1DBA                     u4381 2948  
                   u4445 2E76                     u3661 25DA                     u3645 257C  
                   u3581 245E                     u3901 0CF2                     u3821 0C0C  
                   u3741 09EC                     u2950 20A2                     u2870 1F78  
                   u2790 1DFE                     u4390 2986                     u4470 3654  
                   u3590 2484                     u3910 0E3E                     u3830 0C2C  
                   u3750 0A74                     u3670 0850                     u2951 209E  
                   u2871 1F74                     u2791 1DFA                     u4391 2982  
                   u4471 3650                     u3591 2480                     u3575 242A  
                   u3911 0E3A                     u3831 0C28                     u3751 0A70  
                   u3671 084C                     u2880 1F8A                     u2960 190C  
                   u4480 3772                     u3920 0EA4                     u3840 0C62  
                   u3760 0B08                     u3680 08A0                     u2881 1F86  
                   u2961 1908                     u4465 2E8C                     u4481 376E  
                   u3921 0EA0                     u3841 0C5E                     u3761 0B04  
                   u3681 089C                     u2890 1FB8                     u2970 191E  
                   u3930 0EEC                     u3850 0C88                     u3770 0B7A  
                   u3690 08AE                     u2891 1FB4                     u2971 191A  
                   u3931 0EE8                     u3851 0C84                     u3771 0B76  
                   u3691 08AA                     u4491 2630                     u2980 192E  
                   u3940 0EFC                     u3860 0C9A                     u3780 0BA0  
                   u2981 192A                     u3941 0EF8                     u3861 0C96  
                   u3781 0B9C                     u2990 196E                     u3950 0F96  
                   u3870 0CA8                     u3790 0BB2                     i2l31 37A2  
                   u2991 196A                     u3951 0F92                     u3871 0CA4  
                   u3791 0BAE                     u3960 0FE4                     u3880 0CBE  
                   u3961 0FE0                     u3881 0CBA                     u3970 100C  
                   u3890 0CCC                     u3971 1008                     u3891 0CC8  
                   u3980 10B0                     u3981 10AC                     u3990 10C2  
                   u3991 10BE                     _SPEN 007D5F                     _TX9D 007D60  
                   _TXEN 007D65                     _SYNC 007D64             _ADC_MAP$1270 0072  
                   _dbuf 010C                     _main 2600                     _prec 00F9  
                   _temp 00F1                     _nout 00F5                     pad@i 0018  
                   pad@p 0015                     fsr0h 000FEA                     fsr1h 000FE2  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     btemp 005F         __end_of_ADC_Init 37A0  
       __end_of_ADC_Read 366C            ___fpclassifyf 2CF8                     prodh 000FF4  
                   prodl 000FF3                     start 000E          ___fldiv@new_exp 0051  
   __end_of_appLedRxData 37A6             ___param_bank 000000  __end_of_UART_Write_Text 3774  
                  ??_pad 0017            ___fltol@sign1 0009          __end_of___fladd 18F2  
                  ?_main 0001          __end_of___fldiv 20B6          __end_of___awdiv 3208  
        __end_of___flneg 36DC                    STR_10 0824                    STR_12 0824  
        __end_of___awmod 32B8          __end_of___flmul 1D1C          __end_of___flsub 35E8  
        __end_of___fltol 2BF4          __end_of___lldiv 3406          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _RCREG 000FAE                    _RCSTA 000FAB  
           vfpfcnvrt@fmt 00B0                    _SPBRG 000FAF                    _TXREG 000FAD  
                  _TXSTA 000FAC                    _flags 00FB                    _fputc 2FB4  
                  _fputs 35E8                    pad@fp 0011                    _width 00F7  
                  _putch 37A6          __end_of_isupper 36A4                    tablat 000FF5  
                  plusw0 000FEB                    plusw2 000FDB                    ttemp5 0060  
                  ttemp6 0063                    ttemp7 0067                    status 000FD8  
                  wtemp8 0060          __end_of_sprintf 3516           ?___fpclassifyf 0001  
        __end_of_tolower 35A2          __end_of_strncmp 2FB4          __initialization 3516  
           __end_of_main 27F4                ??_ADC_MAP 0059                   ??_main 00E3  
          __activetblptr 000002                ADC_MAP@xf 0066                ADC_MAP@yf 006E  
              ADC_MAP@xi 0062                ADC_MAP@yi 006A                   _ADCON1 000FC1  
                 ?_fputc 0001                   ?_fputs 000A                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0001                   ?_putch 0001  
       __end_of___xxtofl 29A8             vfprintf@cfmt 005D        __end_of_UART_Init 2EDE  
                 ___flge 2BF4                   ___fleq 32B8                ??___fladd 0030  
              ??___fldiv 0048                ??___awdiv 0005                ??___flneg 0005  
              ??___awmod 0005                ??___flmul 0017         ?_UART_Write_Text 0002  
              ??___flsub 0040                ??___fltol 0005                ??___lldiv 0009  
                 _efgtoa 0828                   _conver 00FD          ADC_Read@channel 0005  
                 _floorf 23EA                   clear_0 353C                   clear_1 3548  
       ___awdiv@quotient 0007          ___awmod@divisor 0003                   isa$std 000001  
        ___awmod@counter 0005                   pad@buf 0013                   _strcpy 3468  
                 _strlen 36DC                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A          ___fpclassifyf@e 0009  
              ?_ADC_Init 0001          ___fpclassifyf@u 000B                ?_ADC_Read 0001  
        ___fpclassifyf@x 0001             __mediumconst 0000                   tblptrh 000FF7  
              ??_isupper 0003                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 3468                ??_sprintf 005F  
              ??_tolower 0009                ??_strncmp 0007               ___flge@ff1 0028  
             ___flge@ff2 002C          ??___fpclassifyf 0005             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001               ___fleq@ff1 0001  
             ___fleq@ff2 0005               __accesstop 0060  __end_of__initialization 354E  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0001  
         __pcstackCOMRAM 0001             __pidataBANK1 3712            __end_of_fputc 307E  
          __end_of_fputs 362C            __end_of_putch 37A8               ??_ADC_Init 0001  
             ??_ADC_Read 0003             _appLedRxData 0008                  ??_fputc 0005  
                ??_fputs 000E                  ??_putch 0001               __pbssBANK0 00ED  
             __pbssBANK1 0100               _efgtoa$950 007E               _efgtoa$942 007C  
             _efgtoa$951 0080                  ?___flge 0028                  ?___fleq 0001  
                ?_efgtoa 0070                  ?_floorf 0059                  _ADC_MAP 29A8  
                ?_strcpy 0001                  ?_strlen 0001                ?___xxtofl 0001  
                __Hparam 0000                  __Lparam 0000                  ___fladd 1432  
                ___fldiv 1D1C                  ___awdiv 3144                  ___flneg 36A4  
                ___awmod 3208                  ___flmul 18F2                  ___flsub 35A2  
                ___fltol 2AEE                  ___lldiv 3362                ?_vfprintf 00C0  
           __psmallconst 0800                  __pcinit 3516                  __ramtop 0800  
                __ptext0 2600                  __ptext1 34C4                  __ptext2 3406  
                __ptext3 20B6                  __ptext4 2EDE                  __ptext5 0828  
                __ptext6 355C                  __ptext7 366C                  __ptext8 3468  
                __ptext9 307E               ??___xxtofl 0005         ___awmod@dividend 0001  
         main@uartConfig 00E5                  _isupper 366C                  efgtoa@c 0076  
                efgtoa@d 008E                  efgtoa@e 00A6                  efgtoa@f 0072  
                efgtoa@g 00A2                  efgtoa@h 0098                  efgtoa@i 00A0  
                efgtoa@l 009C                  efgtoa@m 0088                  efgtoa@n 00A8  
                efgtoa@p 0092                  efgtoa@t 0082                  efgtoa@u 00AA  
                efgtoa@w 0094                  _strUART 015C                  _sprintf 34C4  
                _tolower 355C                  _strncmp 2EDE           __pintcode_body 37A0  
   end_of_initialization 354E                  floorf@e 006A                  floorf@m 0066  
                floorf@u 006C                  floorf@x 0059                  fputc@fp 0003  
          __Lmediumconst 0000                  int_func 37A0                  fputs@fp 000C  
        ___lldiv@divisor 0005          ___lldiv@counter 000D        __end_of_vfpfcnvrt 23EA  
             efgtoa@mode 0097               efgtoa@sign 0090                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE           _UART_Write_Chr 3774               ??_vfprintf 005D  
                strcpy@d 0009                  strlen@a 0003                  strcpy@s 0007  
                strlen@s 0001                _UART_Init 2DF6              ___fladd@grs 0037  
          ___xxtofl@sign 0009              ___fldiv@grs 0053              ___fldiv@rem 004C  
            ___flmul@grs 001C                _TXSTAbits 000FAC     UART_Write_Chr@letter 0001  
 __end_of_UART_Write_Chr 378A           __end_of___flge 2CF8           __end_of___fleq 3362  
            vfpfcnvrt@ap 00B2              vfpfcnvrt@ct 00BC              vfpfcnvrt@fp 00AE  
             ?_UART_Init 000E           __end_of_efgtoa 1432           __end_of_floorf 2600  
             floorf@F526 0100            ADC_MAP@conver 0060           __end_of_strcpy 34C4  
         __end_of_strlen 3712      start_initialization 3516              __end_of_pad 3144  
               ADC_MAP@m 0076       UART_Init@spbrg_val 001A    __end_of___fpclassifyf 2DF6  
            vfprintf@fmt 00C2          ?_UART_Write_Chr 0001                 ??___flge 0030  
               ??___fleq 0009                 ??_efgtoa 0077              __pdataBANK1 015C  
               ??_floorf 0060                 ?_ADC_MAP 0060                 ??_strcpy 0005  
               ??_strlen 0003                ___fladd@a 002C                ___fladd@b 0028  
              ___fldiv@a 0044                ___fldiv@b 0040                ___flmul@a 0013  
              ___flmul@b 000F                ___flsub@a 003C                ___flsub@b 0038  
          __pcstackBANK0 0060                __pintcode 0008                 ?___fladd 0028  
               ?___fldiv 0040                 ?___awdiv 0001                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 000F                 ?___flsub 0038  
               ?___fltol 0001                 ?___lldiv 0001              ??_UART_Init 0016  
        UART_Init@config 000E              __smallconst 0800                 _ADC_Init 378A  
               _ADC_Read 362C                 ?_isupper 0001                 ?_sprintf 00C6  
               ?_tolower 0007                 ?_strncmp 0001        ??_UART_Write_Text 0004  
               _PIR1bits 000F9E                _vfpfcnvrt 20B6               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0               vfpfcnvrt@c 00BF  
             vfpfcnvrt@f 00B8                copy_data0 352A                 __Hrparam 0000  
             vfprintf@ap 00C4                 __Lrparam 0000               vfprintf@fp 00C0  
             ?_vfpfcnvrt 00AE       ___fpclassifyf@F465 0104               sprintf@fmt 00C8  
               ___xxtofl 27F4            ?_appLedRxData 0001                 __ptext10 36DC  
               __ptext11 35E8                 __ptext20 3208                 __ptext12 2FB4  
               __ptext21 3144                 __ptext13 37A6                 __ptext30 1432  
               __ptext22 3744                 __ptext14 23EA                 __ptext31 18F2  
               __ptext23 3774                 __ptext15 2CF8                 __ptext32 1D1C  
               __ptext24 2DF6                 __ptext16 2AEE                 __ptext33 378A  
               __ptext25 3362                 __ptext17 36A4                 __ptext26 362C  
               __ptext18 2BF4                 __ptext27 29A8                 __ptext19 32B8  
               __ptext28 27F4                 __ptext29 35A2               strcpy@dest 0001  
    UART_Write_Text@text 0002         ??_UART_Write_Chr 0001                 efgtoa@fp 0070  
               efgtoa@ne 0086                 efgtoa@pp 0084                 efgtoa@ou 008A  
               isa$xinst 000000                 int$flags 005F                 _pressure 0108  
               _vfprintf 3406           ??_appLedRxData 0001                 intlevel2 0000  
              sprintf@ap 00D6         ___lldiv@dividend 0001                strcpy@src 0003  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
            efgtoa@nmode 0096              ??_vfpfcnvrt 00B4          _UART_Write_Text 3744  
               sprintf@f 00D8                 tolower@c 0007                 sprintf@s 00C6  
       ___lldiv@quotient 0009                 strncmp@l 0008                 strncmp@n 0005  
               strncmp@r 000A            ___fladd@signs 0034             ___fladd@aexp 0035  
           ___fladd@bexp 0036  
