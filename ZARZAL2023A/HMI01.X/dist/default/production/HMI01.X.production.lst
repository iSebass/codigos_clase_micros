

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 05 08:21:45 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _RCREG	set	4014
    54  0000                     _TXREG	set	4013
    55  0000                     _TXSTAbits	set	4012
    56  0000                     _TX9D	set	32096
    57  0000                     _BRGH	set	32098
    58  0000                     _SPEN	set	32095
    59  0000                     _SYNC	set	32100
    60  0000                     _TXEN	set	32101
    61  0000                     _RX9	set	32094
    62  0000                     _TX9	set	32102
    63  0000                     _PIR1bits	set	3998
    64  0000                     _RCSTA	set	4011
    65  0000                     _TXSTA	set	4012
    66  0000                     _SPBRG	set	4015
    67                           
    68                           ; #config settings
    69                           
    70                           	psect	cinit
    71  0001D8                     __pcinit:
    72                           	callstack 0
    73  0001D8                     start_initialization:
    74                           	callstack 0
    75  0001D8                     __initialization:
    76                           	callstack 0
    77  0001D8                     end_of_initialization:
    78                           	callstack 0
    79  0001D8                     __end_of__initialization:
    80                           	callstack 0
    81  0001D8  9026               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    82  0001DA  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    83  0001DC  0E00               	movlw	low (__Lmediumconst shr (0+16))
    84  0001DE  6EF8               	movwf	tblptru,c
    85  0001E0  0100               	movlb	0
    86  0001E2  EFCF  F000         	goto	_main	;jump to C main() function
    87                           
    88                           	psect	cstackCOMRAM
    89  000001                     __pcstackCOMRAM:
    90                           	callstack 0
    91  000001                     ?___lldiv:
    92                           	callstack 0
    93  000001                     ___lldiv@dividend:
    94                           	callstack 0
    95                           
    96                           ; 4 bytes @ 0x0
    97  000001                     	ds	4
    98  000005                     ___lldiv@divisor:
    99                           	callstack 0
   100                           
   101                           ; 4 bytes @ 0x4
   102  000005                     	ds	4
   103  000009                     ___lldiv@quotient:
   104                           	callstack 0
   105                           
   106                           ; 4 bytes @ 0x8
   107  000009                     	ds	4
   108  00000D                     ___lldiv@counter:
   109                           	callstack 0
   110                           
   111                           ; 1 bytes @ 0xC
   112  00000D                     	ds	1
   113  00000E                     UART_Init@config:
   114                           	callstack 0
   115                           
   116                           ; 8 bytes @ 0xD
   117  00000E                     	ds	8
   118  000016                     ??_UART_Init:
   119                           
   120                           ; 1 bytes @ 0x15
   121  000016                     	ds	4
   122  00001A                     UART_Init@spbrg_val:
   123                           	callstack 0
   124                           
   125                           ; 4 bytes @ 0x19
   126  00001A                     	ds	4
   127  00001E                     main@uartConfig:
   128                           	callstack 0
   129                           
   130                           ; 8 bytes @ 0x1D
   131  00001E                     	ds	8
   132                           
   133 ;;
   134 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   135 ;;
   136 ;; *************** function _main *****************
   137 ;; Defined at:
   138 ;;		line 14 in file "main.c"
   139 ;; Parameters:    Size  Location     Type
   140 ;;		None
   141 ;; Auto vars:     Size  Location     Type
   142 ;;  uartConfig      8   29[COMRAM] struct .
   143 ;; Return value:  Size  Location     Type
   144 ;;                  1    wreg      void 
   145 ;; Registers used:
   146 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   147 ;; Tracked objects:
   148 ;;		On entry : 0/0
   149 ;;		On exit  : 0/0
   150 ;;		Unchanged: 0/0
   151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   152 ;;      Params:         0       0       0       0       0       0       0       0       0
   153 ;;      Locals:         8       0       0       0       0       0       0       0       0
   154 ;;      Temps:          0       0       0       0       0       0       0       0       0
   155 ;;      Totals:         8       0       0       0       0       0       0       0       0
   156 ;;Total ram usage:        8 bytes
   157 ;; Hardware stack levels required when called: 3
   158 ;; This function calls:
   159 ;;		_UART_Init
   160 ;; This function is called by:
   161 ;;		Startup code after reset
   162 ;; This function uses a non-reentrant model
   163 ;;
   164                           
   165                           	psect	text0
   166  00019E                     __ptext0:
   167                           	callstack 0
   168  00019E                     _main:
   169                           	callstack 28
   170  00019E                     
   171                           ;main.c: 16:     UART_Config uartConfig;;main.c: 18:     uartConfig.baud_rate = 9600;
   172  00019E  0E80               	movlw	128
   173  0001A0  6E1E               	movwf	main@uartConfig^0,c
   174  0001A2  0E25               	movlw	37
   175  0001A4  6E1F               	movwf	(main@uartConfig+1)^0,c
   176  0001A6  0E00               	movlw	0
   177  0001A8  6E20               	movwf	(main@uartConfig+2)^0,c
   178  0001AA  0E00               	movlw	0
   179  0001AC  6E21               	movwf	(main@uartConfig+3)^0,c
   180                           
   181                           ;main.c: 19:     uartConfig.data_bits = 8;
   182  0001AE  0E08               	movlw	8
   183  0001B0  6E22               	movwf	(main@uartConfig+4)^0,c
   184                           
   185                           ;main.c: 20:     uartConfig.parity = 0;
   186  0001B2  0E00               	movlw	0
   187  0001B4  6E23               	movwf	(main@uartConfig+5)^0,c
   188                           
   189                           ;main.c: 21:     uartConfig.stop_bits = 1;
   190  0001B6  0E01               	movlw	1
   191  0001B8  6E24               	movwf	(main@uartConfig+6)^0,c
   192  0001BA                     
   193                           ;main.c: 23:     UART_Init(uartConfig);
   194  0001BA  EE20  F01E         	lfsr	2,main@uartConfig
   195  0001BE  EE00  F00E         	lfsr	0,UART_Init@config
   196  0001C2  0E07               	movlw	7
   197  0001C4                     u211:
   198  0001C4  CFDB FFEB          	movff	plusw2,plusw0
   199  0001C8  06E8               	decf	wreg,f,c
   200  0001CA  E2FC               	bc	u211
   201  0001CC  EC09  F000         	call	_UART_Init	;wreg free
   202  0001D0                     l12:
   203  0001D0  EFE8  F000         	goto	l12
   204  0001D4  EF07  F000         	goto	start
   205  0001D8                     __end_of_main:
   206                           	callstack 0
   207                           
   208 ;; *************** function _UART_Init *****************
   209 ;; Defined at:
   210 ;;		line 5 in file "UART_LIB.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;  config          8   13[COMRAM] struct .
   213 ;; Auto vars:     Size  Location     Type
   214 ;;  spbrg_val       4   25[COMRAM] unsigned long 
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, status,2, status,0, cstack
   219 ;; Tracked objects:
   220 ;;		On entry : 0/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   224 ;;      Params:         8       0       0       0       0       0       0       0       0
   225 ;;      Locals:         4       0       0       0       0       0       0       0       0
   226 ;;      Temps:          4       0       0       0       0       0       0       0       0
   227 ;;      Totals:        16       0       0       0       0       0       0       0       0
   228 ;;Total ram usage:       16 bytes
   229 ;; Hardware stack levels used: 1
   230 ;; Hardware stack levels required when called: 2
   231 ;; This function calls:
   232 ;;		___lldiv
   233 ;; This function is called by:
   234 ;;		_main
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	text1
   239  000012                     __ptext1:
   240                           	callstack 0
   241  000012                     _UART_Init:
   242                           	callstack 28
   243  000012                     
   244                           ;UART_LIB.c: 7:     unsigned long spbrg_val = (20000000UL / (16 * config.baud_rate)) - 1
      +                          ;
   245  000012  0E00               	movlw	0
   246  000014  6E01               	movwf	___lldiv@dividend^0,c
   247  000016  0E2D               	movlw	45
   248  000018  6E02               	movwf	(___lldiv@dividend+1)^0,c
   249  00001A  0E31               	movlw	49
   250  00001C  6E03               	movwf	(___lldiv@dividend+2)^0,c
   251  00001E  0E01               	movlw	1
   252  000020  6E04               	movwf	(___lldiv@dividend+3)^0,c
   253  000022  C00E  F016         	movff	UART_Init@config,??_UART_Init
   254  000026  C00F  F017         	movff	UART_Init@config+1,??_UART_Init+1
   255  00002A  C010  F018         	movff	UART_Init@config+2,??_UART_Init+2
   256  00002E  C011  F019         	movff	UART_Init@config+3,??_UART_Init+3
   257  000032  0E04               	movlw	4
   258  000034                     u165:
   259  000034  90D8               	bcf	status,0,c
   260  000036  3616               	rlcf	??_UART_Init^0,f,c
   261  000038  3617               	rlcf	(??_UART_Init+1)^0,f,c
   262  00003A  3618               	rlcf	(??_UART_Init+2)^0,f,c
   263  00003C  3619               	rlcf	(??_UART_Init+3)^0,f,c
   264  00003E  2EE8               	decfsz	wreg,f,c
   265  000040  EF1A  F000         	goto	u165
   266  000044  C016  F005         	movff	??_UART_Init,___lldiv@divisor
   267  000048  C017  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
   268  00004C  C018  F007         	movff	??_UART_Init+2,___lldiv@divisor+2
   269  000050  C019  F008         	movff	??_UART_Init+3,___lldiv@divisor+3
   270  000054  EC7D  F000         	call	___lldiv	;wreg free
   271  000058  0EFF               	movlw	255
   272  00005A  2401               	addwf	?___lldiv^0,w,c
   273  00005C  6E1A               	movwf	UART_Init@spbrg_val^0,c
   274  00005E  0EFF               	movlw	255
   275  000060  2002               	addwfc	(?___lldiv+1)^0,w,c
   276  000062  6E1B               	movwf	(UART_Init@spbrg_val+1)^0,c
   277  000064  0EFF               	movlw	255
   278  000066  2003               	addwfc	(?___lldiv+2)^0,w,c
   279  000068  6E1C               	movwf	(UART_Init@spbrg_val+2)^0,c
   280  00006A  0EFF               	movlw	255
   281  00006C  2004               	addwfc	(?___lldiv+3)^0,w,c
   282  00006E  6E1D               	movwf	(UART_Init@spbrg_val+3)^0,c
   283  000070                     
   284                           ;UART_LIB.c: 8:     SPBRG = (unsigned char)(spbrg_val);
   285  000070  C01A  FFAF         	movff	UART_Init@spbrg_val,4015	;volatile
   286  000074                     
   287                           ;UART_LIB.c: 11:     TXSTA = 0x24;
   288  000074  0E24               	movlw	36
   289  000076  6EAC               	movwf	172,c	;volatile
   290  000078                     
   291                           ;UART_LIB.c: 12:     RCSTA = 0x90;
   292  000078  0E90               	movlw	144
   293  00007A  6EAB               	movwf	171,c	;volatile
   294  00007C                     
   295                           ;UART_LIB.c: 15:     TX9 = config.data_bits == 9 ? 1 : 0;
   296  00007C  0E09               	movlw	9
   297  00007E  1812               	xorwf	(UART_Init@config+4)^0,w,c
   298  000080  B4D8               	btfsc	status,2,c
   299  000082  EF45  F000         	goto	u171
   300  000086  EF48  F000         	goto	u170
   301  00008A                     u171:
   302  00008A  8CAC               	bsf	4012,6,c	;volatile
   303  00008C  EF49  F000         	goto	u185
   304  000090                     u170:
   305  000090  9CAC               	bcf	4012,6,c	;volatile
   306  000092                     u185:
   307  000092                     
   308                           ;UART_LIB.c: 16:     RX9 = config.data_bits == 9 ? 1 : 0;
   309  000092  0E09               	movlw	9
   310  000094  1812               	xorwf	(UART_Init@config+4)^0,w,c
   311  000096  B4D8               	btfsc	status,2,c
   312  000098  EF50  F000         	goto	u191
   313  00009C  EF53  F000         	goto	u190
   314  0000A0                     u191:
   315  0000A0  8CAB               	bsf	4011,6,c	;volatile
   316  0000A2  EF54  F000         	goto	u205
   317  0000A6                     u190:
   318  0000A6  9CAB               	bcf	4011,6,c	;volatile
   319  0000A8                     u205:
   320  0000A8                     
   321                           ;UART_LIB.c: 17:     TXEN = 1;
   322  0000A8  8AAC               	bsf	4012,5,c	;volatile
   323  0000AA                     
   324                           ;UART_LIB.c: 18:     SYNC = 0;
   325  0000AA  98AC               	bcf	4012,4,c	;volatile
   326  0000AC                     
   327                           ;UART_LIB.c: 19:     SPEN = 1;
   328  0000AC  8EAB               	bsf	4011,7,c	;volatile
   329                           
   330                           ;UART_LIB.c: 22:     switch (config.parity) {
   331  0000AE  EF67  F000         	goto	l873
   332  0000B2                     l47:
   333                           
   334                           ;UART_LIB.c: 24:             BRGH = 1;
   335  0000B2  84AC               	bsf	4012,2,c	;volatile
   336                           
   337                           ;UART_LIB.c: 25:             TX9D = 0;
   338  0000B4  90AC               	bcf	4012,0,c	;volatile
   339  0000B6                     l865:
   340                           
   341                           ;UART_LIB.c: 26:             RCSTA |= 0x02;
   342  0000B6  82AB               	bsf	171,1,c	;volatile
   343                           
   344                           ;UART_LIB.c: 27:             break;
   345  0000B8  EF7C  F000         	goto	l51
   346  0000BC                     l49:
   347                           
   348                           ;UART_LIB.c: 29:             BRGH = 1;
   349  0000BC  84AC               	bsf	4012,2,c	;volatile
   350                           
   351                           ;UART_LIB.c: 30:             TX9D = 1;
   352  0000BE  80AC               	bsf	4012,0,c	;volatile
   353  0000C0  EF5B  F000         	goto	l865
   354  0000C4                     l50:
   355                           
   356                           ;UART_LIB.c: 34:             BRGH = 1;
   357  0000C4  84AC               	bsf	4012,2,c	;volatile
   358                           
   359                           ;UART_LIB.c: 35:             TX9D = 0;
   360  0000C6  90AC               	bcf	4012,0,c	;volatile
   361  0000C8                     
   362                           ;UART_LIB.c: 36:             RCSTA &= ~0x02;
   363  0000C8  92AB               	bcf	171,1,c	;volatile
   364                           
   365                           ;UART_LIB.c: 37:             break;
   366  0000CA  EF7C  F000         	goto	l51
   367  0000CE                     l873:
   368  0000CE  5013               	movf	(UART_Init@config+5)^0,w,c
   369  0000D0  6E16               	movwf	??_UART_Init^0,c
   370  0000D2  6A17               	clrf	(??_UART_Init+1)^0,c
   371                           
   372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   373                           ; Switch size 1, requested type "simple"
   374                           ; Number of cases is 1, Range of values is 0 to 0
   375                           ; switch strategies available:
   376                           ; Name         Instructions Cycles
   377                           ; simple_byte            4     3 (average)
   378                           ;	Chosen strategy is simple_byte
   379  0000D4  5017               	movf	(??_UART_Init+1)^0,w,c
   380  0000D6  0A00               	xorlw	0	; case 0
   381  0000D8  B4D8               	btfsc	status,2,c
   382  0000DA  EF71  F000         	goto	l887
   383  0000DE  EF62  F000         	goto	l50
   384  0000E2                     l887:
   385                           
   386                           ; Switch size 1, requested type "simple"
   387                           ; Number of cases is 2, Range of values is 1 to 2
   388                           ; switch strategies available:
   389                           ; Name         Instructions Cycles
   390                           ; simple_byte            7     4 (average)
   391                           ;	Chosen strategy is simple_byte
   392  0000E2  5016               	movf	??_UART_Init^0,w,c
   393  0000E4  0A01               	xorlw	1	; case 1
   394  0000E6  B4D8               	btfsc	status,2,c
   395  0000E8  EF59  F000         	goto	l47
   396  0000EC  0A03               	xorlw	3	; case 2
   397  0000EE  B4D8               	btfsc	status,2,c
   398  0000F0  EF5E  F000         	goto	l49
   399  0000F4  EF62  F000         	goto	l50
   400  0000F8                     l51:
   401  0000F8  0012               	return		;funcret
   402  0000FA                     __end_of_UART_Init:
   403                           	callstack 0
   404                           
   405 ;; *************** function ___lldiv *****************
   406 ;; Defined at:
   407 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;  dividend        4    0[COMRAM] unsigned long 
   410 ;;  divisor         4    4[COMRAM] unsigned long 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  quotient        4    8[COMRAM] unsigned long 
   413 ;;  counter         1   12[COMRAM] unsigned char 
   414 ;; Return value:  Size  Location     Type
   415 ;;                  4    0[COMRAM] unsigned long 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   423 ;;      Params:         8       0       0       0       0       0       0       0       0
   424 ;;      Locals:         5       0       0       0       0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0       0       0
   426 ;;      Totals:        13       0       0       0       0       0       0       0       0
   427 ;;Total ram usage:       13 bytes
   428 ;; Hardware stack levels used: 1
   429 ;; Hardware stack levels required when called: 1
   430 ;; This function calls:
   431 ;;		Nothing
   432 ;; This function is called by:
   433 ;;		_UART_Init
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text2
   438  0000FA                     __ptext2:
   439                           	callstack 0
   440  0000FA                     ___lldiv:
   441                           	callstack 28
   442  0000FA  0E00               	movlw	0
   443  0000FC  6E09               	movwf	___lldiv@quotient^0,c
   444  0000FE  0E00               	movlw	0
   445  000100  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   446  000102  0E00               	movlw	0
   447  000104  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   448  000106  0E00               	movlw	0
   449  000108  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   450  00010A  5005               	movf	___lldiv@divisor^0,w,c
   451  00010C  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   452  00010E  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   453  000110  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   454  000112  B4D8               	btfsc	status,2,c
   455  000114  EF8E  F000         	goto	u131
   456  000118  EF90  F000         	goto	u130
   457  00011C                     u131:
   458  00011C  EFC6  F000         	goto	l99
   459  000120                     u130:
   460  000120  0E01               	movlw	1
   461  000122  6E0D               	movwf	___lldiv@counter^0,c
   462  000124  EF9A  F000         	goto	l833
   463  000128                     l831:
   464  000128  90D8               	bcf	status,0,c
   465  00012A  3605               	rlcf	___lldiv@divisor^0,f,c
   466  00012C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   467  00012E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   468  000130  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   469  000132  2A0D               	incf	___lldiv@counter^0,f,c
   470  000134                     l833:
   471  000134  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   472  000136  EF9F  F000         	goto	u141
   473  00013A  EFA1  F000         	goto	u140
   474  00013E                     u141:
   475  00013E  EF94  F000         	goto	l831
   476  000142                     u140:
   477  000142                     l835:
   478  000142  90D8               	bcf	status,0,c
   479  000144  3609               	rlcf	___lldiv@quotient^0,f,c
   480  000146  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   481  000148  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   482  00014A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   483  00014C  5005               	movf	___lldiv@divisor^0,w,c
   484  00014E  5C01               	subwf	___lldiv@dividend^0,w,c
   485  000150  5006               	movf	(___lldiv@divisor+1)^0,w,c
   486  000152  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   487  000154  5007               	movf	(___lldiv@divisor+2)^0,w,c
   488  000156  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   489  000158  5008               	movf	(___lldiv@divisor+3)^0,w,c
   490  00015A  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   491  00015C  A0D8               	btfss	status,0,c
   492  00015E  EFB3  F000         	goto	u151
   493  000162  EFB5  F000         	goto	u150
   494  000166                     u151:
   495  000166  EFBE  F000         	goto	l843
   496  00016A                     u150:
   497  00016A  5005               	movf	___lldiv@divisor^0,w,c
   498  00016C  5E01               	subwf	___lldiv@dividend^0,f,c
   499  00016E  5006               	movf	(___lldiv@divisor+1)^0,w,c
   500  000170  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   501  000172  5007               	movf	(___lldiv@divisor+2)^0,w,c
   502  000174  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   503  000176  5008               	movf	(___lldiv@divisor+3)^0,w,c
   504  000178  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
   505  00017A  8009               	bsf	___lldiv@quotient^0,0,c
   506  00017C                     l843:
   507  00017C  90D8               	bcf	status,0,c
   508  00017E  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
   509  000180  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
   510  000182  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
   511  000184  3205               	rrcf	___lldiv@divisor^0,f,c
   512  000186  2E0D               	decfsz	___lldiv@counter^0,f,c
   513  000188  EFA1  F000         	goto	l835
   514  00018C                     l99:
   515  00018C  C009  F001         	movff	___lldiv@quotient,?___lldiv
   516  000190  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   517  000194  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   518  000198  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   519  00019C  0012               	return		;funcret
   520  00019E                     __end_of___lldiv:
   521                           	callstack 0
   522                           
   523 ;; *************** function _appLedRxData *****************
   524 ;; Defined at:
   525 ;;		line 8 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		None
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   539 ;;      Params:         0       0       0       0       0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		Interrupt level 2
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	intcode
   553  000008                     __pintcode:
   554                           	callstack 0
   555  000008                     _appLedRxData:
   556                           	callstack 28
   557                           
   558                           ;incstack = 0
   559  000008  8226               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   560  00000A  EDF3  F000         	call	int_func,f	;refresh shadow registers
   561                           
   562                           	psect	intcode_body
   563  0001E6                     __pintcode_body:
   564                           	callstack 28
   565  0001E6                     int_func:
   566                           	callstack 28
   567  0001E6  0006               	pop		; remove dummy address from shadow register refresh
   568  0001E8  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   569  0001EA  0011               	retfie		f
   570  0001EC                     __end_of_appLedRxData:
   571                           	callstack 0
   572  0000                     
   573                           	psect	rparam
   574  0000                     
   575                           	psect	temp
   576  000026                     btemp:
   577                           	callstack 0
   578  000026                     	ds	1
   579  0000                     int$flags	set	btemp
   580  0000                     wtemp8	set	btemp+1
   581  0000                     ttemp5	set	btemp+1
   582  0000                     ttemp6	set	btemp+4
   583  0000                     ttemp7	set	btemp+8
   584                           
   585                           	psect	idloc
   586                           
   587                           ;Config register IDLOC0 @ 0x200000
   588                           ;	unspecified, using default values
   589  200000                     	org	2097152
   590  200000  FF                 	db	255
   591                           
   592                           ;Config register IDLOC1 @ 0x200001
   593                           ;	unspecified, using default values
   594  200001                     	org	2097153
   595  200001  FF                 	db	255
   596                           
   597                           ;Config register IDLOC2 @ 0x200002
   598                           ;	unspecified, using default values
   599  200002                     	org	2097154
   600  200002  FF                 	db	255
   601                           
   602                           ;Config register IDLOC3 @ 0x200003
   603                           ;	unspecified, using default values
   604  200003                     	org	2097155
   605  200003  FF                 	db	255
   606                           
   607                           ;Config register IDLOC4 @ 0x200004
   608                           ;	unspecified, using default values
   609  200004                     	org	2097156
   610  200004  FF                 	db	255
   611                           
   612                           ;Config register IDLOC5 @ 0x200005
   613                           ;	unspecified, using default values
   614  200005                     	org	2097157
   615  200005  FF                 	db	255
   616                           
   617                           ;Config register IDLOC6 @ 0x200006
   618                           ;	unspecified, using default values
   619  200006                     	org	2097158
   620  200006  FF                 	db	255
   621                           
   622                           ;Config register IDLOC7 @ 0x200007
   623                           ;	unspecified, using default values
   624  200007                     	org	2097159
   625  200007  FF                 	db	255
   626                           
   627                           	psect	config
   628                           
   629                           ;Config register CONFIG1L @ 0x300000
   630                           ;	PLL Prescaler Selection bits
   631                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   632                           ;	System Clock Postscaler Selection bits
   633                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   634                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   635                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   636  300000                     	org	3145728
   637  300000  00                 	db	0
   638                           
   639                           ;Config register CONFIG1H @ 0x300001
   640                           ;	Oscillator Selection bits
   641                           ;	FOSC = HS, HS oscillator (HS)
   642                           ;	Fail-Safe Clock Monitor Enable bit
   643                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   644                           ;	Internal/External Oscillator Switchover bit
   645                           ;	IESO = OFF, Oscillator Switchover mode disabled
   646  300001                     	org	3145729
   647  300001  0C                 	db	12
   648                           
   649                           ;Config register CONFIG2L @ 0x300002
   650                           ;	Power-up Timer Enable bit
   651                           ;	PWRT = ON, PWRT enabled
   652                           ;	Brown-out Reset Enable bits
   653                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   654                           ;	Brown-out Reset Voltage bits
   655                           ;	BORV = 3, Minimum setting 2.05V
   656                           ;	USB Voltage Regulator Enable bit
   657                           ;	VREGEN = OFF, USB voltage regulator disabled
   658  300002                     	org	3145730
   659  300002  18                 	db	24
   660                           
   661                           ;Config register CONFIG2H @ 0x300003
   662                           ;	Watchdog Timer Enable bit
   663                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   664                           ;	Watchdog Timer Postscale Select bits
   665                           ;	WDTPS = 32768, 1:32768
   666  300003                     	org	3145731
   667  300003  1E                 	db	30
   668                           
   669                           ; Padding undefined space
   670  300004                     	org	3145732
   671  300004  FF                 	db	255
   672                           
   673                           ;Config register CONFIG3H @ 0x300005
   674                           ;	CCP2 MUX bit
   675                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   676                           ;	PORTB A/D Enable bit
   677                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   678                           ;	Low-Power Timer 1 Oscillator Enable bit
   679                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   680                           ;	MCLR Pin Enable bit
   681                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   682  300005                     	org	3145733
   683  300005  81                 	db	129
   684                           
   685                           ;Config register CONFIG4L @ 0x300006
   686                           ;	Stack Full/Underflow Reset Enable bit
   687                           ;	STVREN = ON, Stack full/underflow will cause Reset
   688                           ;	Single-Supply ICSP Enable bit
   689                           ;	LVP = OFF, Single-Supply ICSP disabled
   690                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   691                           ;	ICPRT = OFF, ICPORT disabled
   692                           ;	Extended Instruction Set Enable bit
   693                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   694                           ;	Background Debugger Enable bit
   695                           ;	DEBUG = 0x1, unprogrammed default
   696  300006                     	org	3145734
   697  300006  81                 	db	129
   698                           
   699                           ; Padding undefined space
   700  300007                     	org	3145735
   701  300007  FF                 	db	255
   702                           
   703                           ;Config register CONFIG5L @ 0x300008
   704                           ;	Code Protection bit
   705                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   706                           ;	Code Protection bit
   707                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   708                           ;	Code Protection bit
   709                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   710                           ;	Code Protection bit
   711                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   712  300008                     	org	3145736
   713  300008  0F                 	db	15
   714                           
   715                           ;Config register CONFIG5H @ 0x300009
   716                           ;	Boot Block Code Protection bit
   717                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   718                           ;	Data EEPROM Code Protection bit
   719                           ;	CPD = OFF, Data EEPROM is not code-protected
   720  300009                     	org	3145737
   721  300009  C0                 	db	192
   722                           
   723                           ;Config register CONFIG6L @ 0x30000A
   724                           ;	Write Protection bit
   725                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   726                           ;	Write Protection bit
   727                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   728                           ;	Write Protection bit
   729                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   730                           ;	Write Protection bit
   731                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   732  30000A                     	org	3145738
   733  30000A  0F                 	db	15
   734                           
   735                           ;Config register CONFIG6H @ 0x30000B
   736                           ;	Configuration Register Write Protection bit
   737                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   738                           ;	Boot Block Write Protection bit
   739                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   740                           ;	Data EEPROM Write Protection bit
   741                           ;	WRTD = OFF, Data EEPROM is not write-protected
   742  30000B                     	org	3145739
   743  30000B  E0                 	db	224
   744                           
   745                           ;Config register CONFIG7L @ 0x30000C
   746                           ;	Table Read Protection bit
   747                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   748                           ;	Table Read Protection bit
   749                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   750                           ;	Table Read Protection bit
   751                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   752                           ;	Table Read Protection bit
   753                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   754  30000C                     	org	3145740
   755  30000C  0F                 	db	15
   756                           
   757                           ;Config register CONFIG7H @ 0x30000D
   758                           ;	Boot Block Table Read Protection bit
   759                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   760  30000D                     	org	3145741
   761  30000D  40                 	db	64
   762                           tosu	equ	0xFFF
   763                           tosh	equ	0xFFE
   764                           tosl	equ	0xFFD
   765                           stkptr	equ	0xFFC
   766                           pclatu	equ	0xFFB
   767                           pclath	equ	0xFFA
   768                           pcl	equ	0xFF9
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           prodh	equ	0xFF4
   774                           prodl	equ	0xFF3
   775                           indf0	equ	0xFEF
   776                           postinc0	equ	0xFEE
   777                           postdec0	equ	0xFED
   778                           preinc0	equ	0xFEC
   779                           plusw0	equ	0xFEB
   780                           fsr0h	equ	0xFEA
   781                           fsr0l	equ	0xFE9
   782                           wreg	equ	0xFE8
   783                           indf1	equ	0xFE7
   784                           postinc1	equ	0xFE6
   785                           postdec1	equ	0xFE5
   786                           preinc1	equ	0xFE4
   787                           plusw1	equ	0xFE3
   788                           fsr1h	equ	0xFE2
   789                           fsr1l	equ	0xFE1
   790                           bsr	equ	0xFE0
   791                           indf2	equ	0xFDF
   792                           postinc2	equ	0xFDE
   793                           postdec2	equ	0xFDD
   794                           preinc2	equ	0xFDC
   795                           plusw2	equ	0xFDB
   796                           fsr2h	equ	0xFDA
   797                           fsr2l	equ	0xFD9
   798                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      37
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Init->___lldiv

Critical Paths under _appLedRxData in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _appLedRxData in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _appLedRxData in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _appLedRxData in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _appLedRxData in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _appLedRxData in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _appLedRxData in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _appLedRxData in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _appLedRxData in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     599
                                             29 COMRAM     8     8      0
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16     8      8     504
                                             13 COMRAM    16     8      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _appLedRxData                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___lldiv

 _appLedRxData (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     25      25       1       39.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh          50      0       0      20        0.0%
BITBIGSFRllh         C      0       0      21        0.0%
BITBIGSFRlll        3E      0       0      22        0.0%
ABS                  0      0       0      23        0.0%
BIGRAM             7FF      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 05 08:21:45 2023

                     l12 01D0                       l13 01D0                       l50 00C4  
                     l51 00F8                       l47 00B2                       l49 00BC  
                     l99 018C                      l106 019C                      l831 0128  
                    l841 017A                      l833 0134                      l825 00FA  
                    l843 017C                      l835 0142                      l827 010A  
                    l851 0074                      l845 0186                      l837 014C  
                    l829 0120                      l861 00AA                      l853 0078  
                    l839 016A                      l863 00AC                      l855 007C  
                    l847 0012                      l865 00B6                      l873 00CE  
                    l857 0092                      l849 0070                      l881 01BA  
                    l859 00A8                      l869 00C8                      l887 00E2  
                    l879 019E                      u130 0120                      u131 011C  
                    u211 01C4                      u140 0142                      u141 013E  
                    u205 00A8                      u150 016A                      u151 0166  
                    u170 0090                      u171 008A                      u165 0034  
                    u190 00A6                      u191 00A0                      u185 0092  
                    i2l7 01E8                      _RX9 007D5E                      _TX9 007D66  
                    wreg 000FE8                     _BRGH 007D62                     _SPEN 007D5F  
                   _TX9D 007D60                     _TXEN 007D65                     _SYNC 007D64  
                   _main 019E                     btemp 0026                     start 000E  
   __end_of_appLedRxData 01EC             ___param_bank 000000                    ?_main 0001  
        __end_of___lldiv 019E                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _TXREG 000FAD                    _TXSTA 000FAC  
                  plusw0 000FEB                    plusw2 000FDB                    ttemp5 0027  
                  ttemp6 002A                    ttemp7 002E                    status 000FD8  
                  wtemp8 0027          __initialization 01D8             __end_of_main 01D8  
                 ??_main 001E            __activetblptr 000002        __end_of_UART_Init 00FA  
              ??___lldiv 0009                   isa$std 000001                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 01D8            ___rparam_used 000001  
         __pcstackCOMRAM 0001             _appLedRxData 0008                  __Hparam 0000  
                __Lparam 0000                  ___lldiv 00FA                  __pcinit 01D8  
                __ramtop 0800                  __ptext0 019E                  __ptext1 0012  
                __ptext2 00FA           main@uartConfig 001E           __pintcode_body 01E6  
   end_of_initialization 01D8            __Lmediumconst 0000                  int_func 01E6  
        ___lldiv@divisor 0005          ___lldiv@counter 000D                _UART_Init 0012  
              _TXSTAbits 000FAC               ?_UART_Init 000E      start_initialization 01D8  
     UART_Init@spbrg_val 001A                __pintcode 0008                 ?___lldiv 0001  
            ??_UART_Init 0016          UART_Init@config 000E                 _PIR1bits 000F9E  
               __Hrparam 0000                 __Lrparam 0000            ?_appLedRxData 0001  
               isa$xinst 000000                 int$flags 0026           ??_appLedRxData 0001  
               intlevel2 0000         ___lldiv@dividend 0001         ___lldiv@quotient 0009  
