

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 05 10:51:46 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.40
    60                           ; Generated 17/11/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95                           	psect	idataBANK1
    96  003AE0                     __pidataBANK1:
    97                           	callstack 0
    98                           
    99                           ;initializer for _strUART
   100  003AE0  20                 	db	32
   101  003AE1  00                 	db	0
   102  003AE2  00                 	db	0
   103  003AE3  00                 	db	0
   104  003AE4  00                 	db	0
   105  003AE5  00                 	db	0
   106  003AE6  00                 	db	0
   107  003AE7  00                 	db	0
   108  003AE8  00                 	db	0
   109  003AE9  00                 	db	0
   110  003AEA  00                 	db	0
   111  003AEB  00                 	db	0
   112  003AEC  00                 	db	0
   113  003AED  00                 	db	0
   114  003AEE  00                 	db	0
   115  003AEF  00                 	db	0
   116  003AF0  00                 	db	0
   117  003AF1  00                 	db	0
   118  003AF2  00                 	db	0
   119  003AF3  00                 	db	0
   120  003AF4  00                 	db	0
   121  003AF5  00                 	db	0
   122  003AF6  00                 	db	0
   123  003AF7  00                 	db	0
   124  003AF8  00                 	db	0
   125  003AF9  00                 	db	0
   126  003AFA  00                 	db	0
   127  003AFB  00                 	db	0
   128  003AFC  00                 	db	0
   129  003AFD  00                 	db	0
   130  003AFE  00                 	db	0
   131  003AFF  00                 	db	0
   132  003B00  00                 	db	0
   133  003B01  00                 	db	0
   134  003B02  00                 	db	0
   135  003B03  00                 	db	0
   136  003B04  00                 	db	0
   137  003B05  00                 	db	0
   138  003B06  00                 	db	0
   139  003B07  00                 	db	0
   140  003B08  00                 	db	0
   141  003B09  00                 	db	0
   142  003B0A  00                 	db	0
   143  003B0B  00                 	db	0
   144  003B0C  00                 	db	0
   145  003B0D  00                 	db	0
   146  003B0E  00                 	db	0
   147  003B0F  00                 	db	0
   148  003B10  00                 	db	0
   149  003B11  00                 	db	0
   150  0000                     _ADRESL	set	4035
   151  0000                     _ADRESH	set	4036
   152  0000                     _ADCON0bits	set	4034
   153  0000                     _RCREG	set	4014
   154  0000                     _TXREG	set	4013
   155  0000                     _ADCON1bits	set	4033
   156  0000                     _TXSTAbits	set	4012
   157  0000                     _TX9D	set	32096
   158  0000                     _BRGH	set	32098
   159  0000                     _SPEN	set	32095
   160  0000                     _SYNC	set	32100
   161  0000                     _TXEN	set	32101
   162  0000                     _RX9	set	32094
   163  0000                     _TX9	set	32102
   164  0000                     _PIR1bits	set	3998
   165  0000                     _RCSTA	set	4011
   166  0000                     _TXSTA	set	4012
   167  0000                     _SPBRG	set	4015
   168  0000                     _ADCON1	set	4033
   169  0000                     _ADCON2bits	set	4032
   170                           
   171                           	psect	smallconst
   172  000800                     __psmallconst:
   173                           	callstack 0
   174  000800  00                 	db	0
   175  000801                     STR_1:
   176  000801  2A                 	db	42
   177  000802  25                 	db	37
   178  000803  35                 	db	53	;'5'
   179  000804  2E                 	db	46
   180  000805  31                 	db	49	;'1'
   181  000806  66                 	db	102	;'f'
   182  000807  2F                 	db	47
   183  000808  25                 	db	37
   184  000809  35                 	db	53	;'5'
   185  00080A  2E                 	db	46
   186  00080B  31                 	db	49	;'1'
   187  00080C  66                 	db	102	;'f'
   188  00080D  2F                 	db	47
   189  00080E  25                 	db	37
   190  00080F  36                 	db	54	;'6'
   191  000810  2E                 	db	46
   192  000811  31                 	db	49	;'1'
   193  000812  66                 	db	102	;'f'
   194  000813  23                 	db	35
   195  000814  0D                 	db	13
   196  000815  0A                 	db	10
   197  000816  00                 	db	0
   198  000817                     STR_2:
   199  000817  49                 	db	73	;'I'
   200  000818  4E                 	db	78	;'N'
   201  000819  46                 	db	70	;'F'
   202  00081A  00                 	db	0
   203  00081B                     STR_6:
   204  00081B  4E                 	db	78	;'N'
   205  00081C  41                 	db	65	;'A'
   206  00081D  4E                 	db	78	;'N'
   207  00081E  00                 	db	0
   208  00081F                     STR_3:
   209  00081F  69                 	db	105	;'i'
   210  000820  6E                 	db	110	;'n'
   211  000821  66                 	db	102	;'f'
   212  000822  00                 	db	0
   213  000823                     STR_7:
   214  000823  6E                 	db	110	;'n'
   215  000824  61                 	db	97	;'a'
   216  000825  6E                 	db	110	;'n'
   217  000826  00                 	db	0
   218  000827                     STR_10:
   219  000827  6C                 	db	108	;'l'
   220  000828  66                 	db	102	;'f'
   221  000829  00                 	db	0
   222  00082A  00                 	db	0	; dummy byte at the end
   223  0000                     
   224                           ; #config settings
   225                           
   226                           	psect	cinit
   227  0038AC                     __pcinit:
   228                           	callstack 0
   229  0038AC                     start_initialization:
   230                           	callstack 0
   231  0038AC                     __initialization:
   232                           	callstack 0
   233                           
   234                           ; Initialize objects allocated to BANK1 (50 bytes)
   235                           ; load TBLPTR registers with __pidataBANK1
   236  0038AC  0EE0               	movlw	low __pidataBANK1
   237  0038AE  6EF6               	movwf	tblptrl,c
   238  0038B0  0E3A               	movlw	high __pidataBANK1
   239  0038B2  6EF7               	movwf	tblptrh,c
   240  0038B4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   241  0038B6  6EF8               	movwf	tblptru,c
   242  0038B8  EE01  F05C         	lfsr	0,__pdataBANK1
   243  0038BC  EE10 F032          	lfsr	1,50
   244  0038C0                     copy_data0:
   245  0038C0  0009               	tblrd		*+
   246  0038C2  CFF5 FFEE          	movff	tablat,postinc0
   247  0038C6  50E5               	movf	postdec1,w,c
   248  0038C8  50E1               	movf	fsr1l,w,c
   249  0038CA  E1FA               	bnz	copy_data0
   250                           
   251                           ; Clear objects allocated to BANK1 (92 bytes)
   252  0038CC  EE01  F000         	lfsr	0,__pbssBANK1
   253  0038D0  0E5C               	movlw	92
   254  0038D2                     clear_0:
   255  0038D2  6AEE               	clrf	postinc0,c
   256  0038D4  06E8               	decf	wreg,f,c
   257  0038D6  E1FD               	bnz	clear_0
   258                           
   259                           ; Clear objects allocated to BANK0 (18 bytes)
   260  0038D8  EE00  F0ED         	lfsr	0,__pbssBANK0
   261  0038DC  0E12               	movlw	18
   262  0038DE                     clear_1:
   263  0038DE  6AEE               	clrf	postinc0,c
   264  0038E0  06E8               	decf	wreg,f,c
   265  0038E2  E1FD               	bnz	clear_1
   266  0038E4                     end_of_initialization:
   267                           	callstack 0
   268  0038E4                     __end_of__initialization:
   269                           	callstack 0
   270  0038E4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   271  0038E6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   272  0038E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   273  0038EA  6EF8               	movwf	tblptru,c
   274  0038EC  0100               	movlb	0
   275  0038EE  EFF7  F013         	goto	_main	;jump to C main() function
   276                           
   277                           	psect	bssBANK0
   278  0000ED                     __pbssBANK0:
   279                           	callstack 0
   280  0000ED                     _hum:
   281                           	callstack 0
   282  0000ED                     	ds	4
   283  0000F1                     _temp:
   284                           	callstack 0
   285  0000F1                     	ds	4
   286  0000F5                     _nout:
   287                           	callstack 0
   288  0000F5                     	ds	2
   289  0000F7                     _width:
   290                           	callstack 0
   291  0000F7                     	ds	2
   292  0000F9                     _prec:
   293                           	callstack 0
   294  0000F9                     	ds	2
   295  0000FB                     _flags:
   296                           	callstack 0
   297  0000FB                     	ds	2
   298  0000FD                     _conver:
   299                           	callstack 0
   300  0000FD                     	ds	2
   301                           
   302                           	psect	bssBANK1
   303  000100                     __pbssBANK1:
   304                           	callstack 0
   305  000100                     floorf@F526:
   306                           	callstack 0
   307  000100                     	ds	4
   308  000104                     ___fpclassifyf@F465:
   309                           	callstack 0
   310  000104                     	ds	4
   311  000108                     _pressure:
   312                           	callstack 0
   313  000108                     	ds	4
   314  00010C                     _dbuf:
   315                           	callstack 0
   316  00010C                     	ds	80
   317                           
   318                           	psect	dataBANK1
   319  00015C                     __pdataBANK1:
   320                           	callstack 0
   321  00015C                     _strUART:
   322                           	callstack 0
   323  00015C                     	ds	50
   324                           
   325                           	psect	cstackBANK0
   326  000060                     __pcstackBANK0:
   327                           	callstack 0
   328  000060                     ??_floorf:
   329  000060                     ?_ADC_MAP:
   330                           	callstack 0
   331  000060                     ADC_MAP@conver:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x0
   335  000060                     	ds	2
   336  000062                     ADC_MAP@xi:
   337                           	callstack 0
   338                           
   339                           ; 4 bytes @ 0x2
   340  000062                     	ds	4
   341  000066                     ADC_MAP@xf:
   342                           	callstack 0
   343  000066                     floorf@m:
   344                           	callstack 0
   345                           
   346                           ; 4 bytes @ 0x6
   347  000066                     	ds	4
   348  00006A                     floorf@e:
   349                           	callstack 0
   350  00006A                     ADC_MAP@yi:
   351                           	callstack 0
   352                           
   353                           ; 4 bytes @ 0xA
   354  00006A                     	ds	2
   355  00006C                     floorf@u:
   356                           	callstack 0
   357                           
   358                           ; 4 bytes @ 0xC
   359  00006C                     	ds	2
   360  00006E                     ADC_MAP@yf:
   361                           	callstack 0
   362                           
   363                           ; 4 bytes @ 0xE
   364  00006E                     	ds	2
   365  000070                     ?_efgtoa:
   366                           	callstack 0
   367  000070                     efgtoa@fp:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x10
   371  000070                     	ds	2
   372  000072                     efgtoa@f:
   373                           	callstack 0
   374  000072                     _ADC_MAP$1315:
   375                           	callstack 0
   376                           
   377                           ; 4 bytes @ 0x12
   378  000072                     	ds	4
   379  000076                     efgtoa@c:
   380                           	callstack 0
   381  000076                     ADC_MAP@m:
   382                           	callstack 0
   383                           
   384                           ; 4 bytes @ 0x16
   385  000076                     	ds	1
   386  000077                     ??_efgtoa:
   387                           
   388                           ; 1 bytes @ 0x17
   389  000077                     	ds	5
   390  00007C                     _efgtoa$952:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x1C
   394  00007C                     	ds	2
   395  00007E                     _efgtoa$960:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x1E
   399  00007E                     	ds	2
   400  000080                     _efgtoa$961:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x20
   404  000080                     	ds	2
   405  000082                     efgtoa@t:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x22
   409  000082                     	ds	2
   410  000084                     efgtoa@pp:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x24
   414  000084                     	ds	2
   415  000086                     efgtoa@ne:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x26
   419  000086                     	ds	2
   420  000088                     efgtoa@m:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x28
   424  000088                     	ds	2
   425  00008A                     efgtoa@ou:
   426                           	callstack 0
   427                           
   428                           ; 4 bytes @ 0x2A
   429  00008A                     	ds	4
   430  00008E                     efgtoa@d:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x2E
   434  00008E                     	ds	2
   435  000090                     efgtoa@sign:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x30
   439  000090                     	ds	2
   440  000092                     efgtoa@p:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x32
   444  000092                     	ds	2
   445  000094                     efgtoa@w:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x34
   449  000094                     	ds	2
   450  000096                     efgtoa@nmode:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x36
   454  000096                     	ds	1
   455  000097                     efgtoa@mode:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x37
   459  000097                     	ds	1
   460  000098                     efgtoa@h:
   461                           	callstack 0
   462                           
   463                           ; 4 bytes @ 0x38
   464  000098                     	ds	4
   465  00009C                     efgtoa@l:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x3C
   469  00009C                     	ds	4
   470  0000A0                     efgtoa@i:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x40
   474  0000A0                     	ds	2
   475  0000A2                     efgtoa@g:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x42
   479  0000A2                     	ds	4
   480  0000A6                     efgtoa@e:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x46
   484  0000A6                     	ds	2
   485  0000A8                     efgtoa@n:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x48
   489  0000A8                     	ds	2
   490  0000AA                     efgtoa@u:
   491                           	callstack 0
   492                           
   493                           ; 4 bytes @ 0x4A
   494  0000AA                     	ds	4
   495  0000AE                     ?_vfpfcnvrt:
   496                           	callstack 0
   497  0000AE                     vfpfcnvrt@fp:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x4E
   501  0000AE                     	ds	2
   502  0000B0                     vfpfcnvrt@fmt:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x50
   506  0000B0                     	ds	2
   507  0000B2                     vfpfcnvrt@ap:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x52
   511  0000B2                     	ds	2
   512  0000B4                     ??_vfpfcnvrt:
   513                           
   514                           ; 1 bytes @ 0x54
   515  0000B4                     	ds	4
   516  0000B8                     vfpfcnvrt@f:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x58
   520  0000B8                     	ds	4
   521  0000BC                     vfpfcnvrt@ct:
   522                           	callstack 0
   523                           
   524                           ; 3 bytes @ 0x5C
   525  0000BC                     	ds	3
   526  0000BF                     vfpfcnvrt@c:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x5F
   530  0000BF                     	ds	1
   531  0000C0                     ?_vfprintf:
   532                           	callstack 0
   533  0000C0                     vfprintf@fp:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x60
   537  0000C0                     	ds	2
   538  0000C2                     vfprintf@fmt:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x62
   542  0000C2                     	ds	2
   543  0000C4                     vfprintf@ap:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x64
   547  0000C4                     	ds	2
   548  0000C6                     ?_sprintf:
   549                           	callstack 0
   550  0000C6                     sprintf@s:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x66
   554  0000C6                     	ds	2
   555  0000C8                     sprintf@fmt:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x68
   559  0000C8                     	ds	14
   560  0000D6                     sprintf@ap:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x76
   564  0000D6                     	ds	2
   565  0000D8                     sprintf@f:
   566                           	callstack 0
   567                           
   568                           ; 11 bytes @ 0x78
   569  0000D8                     	ds	11
   570  0000E3                     ??_main:
   571                           
   572                           ; 1 bytes @ 0x83
   573  0000E3                     	ds	2
   574  0000E5                     main@uartConfig:
   575                           	callstack 0
   576                           
   577                           ; 8 bytes @ 0x85
   578  0000E5                     	ds	8
   579                           
   580                           	psect	cstackCOMRAM
   581  000001                     __pcstackCOMRAM:
   582                           	callstack 0
   583  000001                     ?_ADC_Read:
   584                           	callstack 0
   585  000001                     ?_strlen:
   586                           	callstack 0
   587  000001                     ?___fpclassifyf:
   588                           	callstack 0
   589  000001                     ?_isupper:
   590                           	callstack 0
   591  000001                     ?_isdigit:
   592                           	callstack 0
   593  000001                     ?_strncmp:
   594                           	callstack 0
   595  000001                     ?_isspace:
   596                           	callstack 0
   597  000001                     ?___wmul:
   598                           	callstack 0
   599  000001                     ?___awdiv:
   600                           	callstack 0
   601  000001                     ?___awmod:
   602                           	callstack 0
   603  000001                     ?___lldiv:
   604                           	callstack 0
   605  000001                     ?___flneg:
   606                           	callstack 0
   607  000001                     ?___fltol:
   608                           	callstack 0
   609  000001                     ?___xxtofl:
   610                           	callstack 0
   611  000001                     UART_Write_Chr@letter:
   612                           	callstack 0
   613  000001                     ___wmul@multiplier:
   614                           	callstack 0
   615  000001                     ___awdiv@dividend:
   616                           	callstack 0
   617  000001                     ___awmod@dividend:
   618                           	callstack 0
   619  000001                     isdigit@c:
   620                           	callstack 0
   621  000001                     isspace@c:
   622                           	callstack 0
   623  000001                     isupper@c:
   624                           	callstack 0
   625  000001                     fputc@c:
   626                           	callstack 0
   627  000001                     strcpy@dest:
   628                           	callstack 0
   629  000001                     strlen@s:
   630                           	callstack 0
   631  000001                     strncmp@_l:
   632                           	callstack 0
   633  000001                     ___lldiv@dividend:
   634                           	callstack 0
   635  000001                     ___fleq@ff1:
   636                           	callstack 0
   637  000001                     ___flneg@f1:
   638                           	callstack 0
   639  000001                     ___fltol@f1:
   640                           	callstack 0
   641  000001                     ___xxtofl@val:
   642                           	callstack 0
   643  000001                     ___fpclassifyf@x:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x0
   647  000001                     	ds	1
   648  000002                     UART_Write_Text@text:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x1
   652  000002                     	ds	1
   653  000003                     ??_ADC_Read:
   654  000003                     ??_isupper:
   655  000003                     ??_isdigit:
   656  000003                     ??_isspace:
   657  000003                     ___wmul@multiplicand:
   658                           	callstack 0
   659  000003                     ___awdiv@divisor:
   660                           	callstack 0
   661  000003                     ___awmod@divisor:
   662                           	callstack 0
   663  000003                     fputc@fp:
   664                           	callstack 0
   665  000003                     strcpy@src:
   666                           	callstack 0
   667  000003                     strlen@a:
   668                           	callstack 0
   669  000003                     strncmp@_r:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x2
   673  000003                     	ds	1
   674  000004                     
   675                           ; 1 bytes @ 0x3
   676  000004                     	ds	1
   677  000005                     ??_fputc:
   678  000005                     ??___fpclassifyf:
   679  000005                     ??_strcpy:
   680  000005                     ??___fltol:
   681  000005                     ??___xxtofl:
   682  000005                     ADC_Read@channel:
   683                           	callstack 0
   684  000005                     ___awdiv@counter:
   685                           	callstack 0
   686  000005                     ___awmod@counter:
   687                           	callstack 0
   688  000005                     ___wmul@product:
   689                           	callstack 0
   690  000005                     strncmp@n:
   691                           	callstack 0
   692  000005                     ___lldiv@divisor:
   693                           	callstack 0
   694  000005                     ___fleq@ff2:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x4
   698  000005                     	ds	1
   699  000006                     ___awdiv@sign:
   700                           	callstack 0
   701  000006                     ___awmod@sign:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x5
   705  000006                     	ds	1
   706  000007                     ??_strncmp:
   707  000007                     ?_tolower:
   708                           	callstack 0
   709  000007                     _isspace$1039:
   710                           	callstack 0
   711  000007                     ___awdiv@quotient:
   712                           	callstack 0
   713  000007                     strcpy@s:
   714                           	callstack 0
   715  000007                     tolower@c:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x6
   719  000007                     	ds	1
   720  000008                     ?_atoi:
   721                           	callstack 0
   722  000008                     atoi@s:
   723                           	callstack 0
   724  000008                     strncmp@l:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x7
   728  000008                     	ds	1
   729  000009                     ??_tolower:
   730  000009                     ??___fleq:
   731  000009                     ___fltol@sign1:
   732                           	callstack 0
   733  000009                     ___xxtofl@sign:
   734                           	callstack 0
   735  000009                     ___fpclassifyf@e:
   736                           	callstack 0
   737  000009                     strcpy@d:
   738                           	callstack 0
   739  000009                     ___lldiv@quotient:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x8
   743  000009                     	ds	1
   744  00000A                     ??_atoi:
   745  00000A                     ___fltol@exp1:
   746                           	callstack 0
   747  00000A                     ___xxtofl@exp:
   748                           	callstack 0
   749  00000A                     fputs@s:
   750                           	callstack 0
   751  00000A                     strncmp@r:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x9
   755  00000A                     	ds	1
   756  00000B                     ___xxtofl@arg:
   757                           	callstack 0
   758  00000B                     ___fpclassifyf@u:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0xA
   762  00000B                     	ds	1
   763  00000C                     fputs@fp:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0xB
   767  00000C                     	ds	1
   768  00000D                     ___lldiv@counter:
   769                           	callstack 0
   770                           
   771                           ; 1 bytes @ 0xC
   772  00000D                     	ds	1
   773  00000E                     fputs@c:
   774                           	callstack 0
   775  00000E                     atoi@neg:
   776                           	callstack 0
   777  00000E                     UART_Init@config:
   778                           	callstack 0
   779                           
   780                           ; 8 bytes @ 0xD
   781  00000E                     	ds	1
   782  00000F                     ?___flmul:
   783                           	callstack 0
   784  00000F                     fputs@i:
   785                           	callstack 0
   786  00000F                     ___flmul@b:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0xE
   790  00000F                     	ds	1
   791  000010                     atoi@n:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0xF
   795  000010                     	ds	1
   796  000011                     ?_pad:
   797                           	callstack 0
   798  000011                     pad@fp:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x10
   802  000011                     	ds	2
   803  000013                     pad@buf:
   804                           	callstack 0
   805  000013                     ___flmul@a:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x12
   809  000013                     	ds	2
   810  000015                     pad@p:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x14
   814  000015                     	ds	1
   815  000016                     ??_UART_Init:
   816                           
   817                           ; 1 bytes @ 0x15
   818  000016                     	ds	1
   819  000017                     ??___flmul:
   820  000017                     ??_pad:
   821                           
   822                           ; 1 bytes @ 0x16
   823  000017                     	ds	1
   824  000018                     pad@i:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x17
   828  000018                     	ds	2
   829  00001A                     pad@w:
   830                           	callstack 0
   831  00001A                     UART_Init@spbrg_val:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x19
   835  00001A                     	ds	1
   836  00001B                     ___flmul@sign:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x1A
   840  00001B                     	ds	1
   841  00001C                     ___flmul@grs:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x1B
   845  00001C                     	ds	4
   846  000020                     ___flmul@aexp:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x1F
   850  000020                     	ds	1
   851  000021                     ___flmul@bexp:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x20
   855  000021                     	ds	1
   856  000022                     ___flmul@prod:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x21
   860  000022                     	ds	4
   861  000026                     ___flmul@temp:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x25
   865  000026                     	ds	2
   866  000028                     ?___fladd:
   867                           	callstack 0
   868  000028                     ___flge@ff1:
   869                           	callstack 0
   870  000028                     ___fladd@b:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x27
   874  000028                     	ds	4
   875  00002C                     ___flge@ff2:
   876                           	callstack 0
   877  00002C                     ___fladd@a:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x2B
   881  00002C                     	ds	4
   882  000030                     ??___fladd:
   883  000030                     ??___flge:
   884                           
   885                           ; 1 bytes @ 0x2F
   886  000030                     	ds	4
   887  000034                     ___fladd@signs:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x33
   891  000034                     	ds	1
   892  000035                     ___fladd@aexp:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x34
   896  000035                     	ds	1
   897  000036                     ___fladd@bexp:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x35
   901  000036                     	ds	1
   902  000037                     ___fladd@grs:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x36
   906  000037                     	ds	1
   907  000038                     ?___flsub:
   908                           	callstack 0
   909  000038                     ___flsub@b:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x37
   913  000038                     	ds	4
   914  00003C                     ___flsub@a:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x3B
   918  00003C                     	ds	4
   919  000040                     ?___fldiv:
   920                           	callstack 0
   921  000040                     ___fldiv@b:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x3F
   925  000040                     	ds	4
   926  000044                     ___fldiv@a:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x43
   930  000044                     	ds	4
   931  000048                     ??___fldiv:
   932                           
   933                           ; 1 bytes @ 0x47
   934  000048                     	ds	4
   935  00004C                     ___fldiv@rem:
   936                           	callstack 0
   937                           
   938                           ; 4 bytes @ 0x4B
   939  00004C                     	ds	4
   940  000050                     ___fldiv@sign:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x4F
   944  000050                     	ds	1
   945  000051                     ___fldiv@new_exp:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x50
   949  000051                     	ds	2
   950  000053                     ___fldiv@grs:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x52
   954  000053                     	ds	4
   955  000057                     ___fldiv@bexp:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x56
   959  000057                     	ds	1
   960  000058                     ___fldiv@aexp:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0x57
   964  000058                     	ds	1
   965  000059                     ?_floorf:
   966                           	callstack 0
   967  000059                     floorf@x:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x58
   971  000059                     	ds	4
   972  00005D                     vfprintf@cfmt:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x5C
   976  00005D                     	ds	2
   977  00005F                     
   978                           ; 1 bytes @ 0x5E
   979 ;;
   980 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   981 ;;
   982 ;; *************** function _main *****************
   983 ;; Defined at:
   984 ;;		line 21 in file "main.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  uartConfig      8  133[BANK0 ] struct .
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   998 ;;      Params:         0       0       0       0       0       0       0       0       0
   999 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1000 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1001 ;;      Totals:         0      10       0       0       0       0       0       0       0
  1002 ;;Total ram usage:       10 bytes
  1003 ;; Hardware stack levels required when called: 9
  1004 ;; This function calls:
  1005 ;;		_ADC_Init
  1006 ;;		_ADC_MAP
  1007 ;;		_ADC_Read
  1008 ;;		_UART_Init
  1009 ;;		_UART_Write_Text
  1010 ;;		_sprintf
  1011 ;; This function is called by:
  1012 ;;		Startup code after reset
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text0
  1017  0027EE                     __ptext0:
  1018                           	callstack 0
  1019  0027EE                     _main:
  1020                           	callstack 22
  1021  0027EE                     
  1022                           ;main.c: 23:     ADCON1 = 12;
  1023  0027EE  0E0C               	movlw	12
  1024  0027F0  6EC1               	movwf	193,c	;volatile
  1025  0027F2                     
  1026                           ;main.c: 25:     ADC_Init();
  1027  0027F2  ECBF  F01D         	call	_ADC_Init	;wreg free
  1028  0027F6                     
  1029                           ;main.c: 27:     UART_Config uartConfig;;main.c: 29:     uartConfig.baud_rate = 9600;
  1030  0027F6  0E80               	movlw	128
  1031  0027F8  0100               	movlb	0	; () banked
  1032  0027FA  6FE5               	movwf	main@uartConfig& (0+255),b
  1033  0027FC  0E25               	movlw	37
  1034  0027FE  6FE6               	movwf	(main@uartConfig+1)& (0+255),b
  1035  002800  0E00               	movlw	0
  1036  002802  6FE7               	movwf	(main@uartConfig+2)& (0+255),b
  1037  002804  0E00               	movlw	0
  1038  002806  6FE8               	movwf	(main@uartConfig+3)& (0+255),b
  1039  002808                     
  1040                           ; BSR set to: 0
  1041                           ;main.c: 30:     uartConfig.data_bits = 8;
  1042  002808  0E08               	movlw	8
  1043  00280A  6FE9               	movwf	(main@uartConfig+4)& (0+255),b
  1044  00280C                     
  1045                           ; BSR set to: 0
  1046                           ;main.c: 31:     uartConfig.parity = 0;
  1047  00280C  0E00               	movlw	0
  1048  00280E  6FEA               	movwf	(main@uartConfig+5)& (0+255),b
  1049  002810                     
  1050                           ; BSR set to: 0
  1051                           ;main.c: 32:     uartConfig.stop_bits = 1;
  1052  002810  0E01               	movlw	1
  1053  002812  6FEB               	movwf	(main@uartConfig+6)& (0+255),b
  1054  002814                     
  1055                           ; BSR set to: 0
  1056                           ;main.c: 34:     UART_Init(uartConfig);
  1057  002814  EE20  F0E5         	lfsr	2,main@uartConfig
  1058  002818  EE00  F00E         	lfsr	0,UART_Init@config
  1059  00281C  0E07               	movlw	7
  1060  00281E                     u4771:
  1061  00281E  CFDB FFEB          	movff	plusw2,plusw0
  1062  002822  06E8               	decf	wreg,f,c
  1063  002824  E2FC               	bc	u4771
  1064  002826  EC9D  F018         	call	_UART_Init	;wreg free
  1065  00282A                     l3994:
  1066                           
  1067                           ;main.c: 38:         conver = ADC_Read(0);
  1068  00282A  0E00               	movlw	0
  1069  00282C  ECE1  F01C         	call	_ADC_Read
  1070  002830  C001  F0FD         	movff	?_ADC_Read,_conver
  1071  002834  C002  F0FE         	movff	?_ADC_Read+1,_conver+1
  1072  002838                     
  1073                           ;main.c: 39:         temp = ADC_MAP(conver, 0.0, 1023.0, 0.0, 150.0);
  1074  002838  C0FD  F060         	movff	_conver,ADC_MAP@conver
  1075  00283C  C0FE  F061         	movff	_conver+1,ADC_MAP@conver+1
  1076  002840  0E00               	movlw	0
  1077  002842  0100               	movlb	0	; () banked
  1078  002844  6F62               	movwf	ADC_MAP@xi& (0+255),b
  1079  002846  0E00               	movlw	0
  1080  002848  6F63               	movwf	(ADC_MAP@xi+1)& (0+255),b
  1081  00284A  0E00               	movlw	0
  1082  00284C  6F64               	movwf	(ADC_MAP@xi+2)& (0+255),b
  1083  00284E  0E00               	movlw	0
  1084  002850  6F65               	movwf	(ADC_MAP@xi+3)& (0+255),b
  1085  002852  0E00               	movlw	0
  1086  002854  6F66               	movwf	ADC_MAP@xf& (0+255),b
  1087  002856  0EC0               	movlw	192
  1088  002858  6F67               	movwf	(ADC_MAP@xf+1)& (0+255),b
  1089  00285A  0E7F               	movlw	127
  1090  00285C  6F68               	movwf	(ADC_MAP@xf+2)& (0+255),b
  1091  00285E  0E44               	movlw	68
  1092  002860  6F69               	movwf	(ADC_MAP@xf+3)& (0+255),b
  1093  002862  0E00               	movlw	0
  1094  002864  6F6A               	movwf	ADC_MAP@yi& (0+255),b
  1095  002866  0E00               	movlw	0
  1096  002868  6F6B               	movwf	(ADC_MAP@yi+1)& (0+255),b
  1097  00286A  0E00               	movlw	0
  1098  00286C  6F6C               	movwf	(ADC_MAP@yi+2)& (0+255),b
  1099  00286E  0E00               	movlw	0
  1100  002870  6F6D               	movwf	(ADC_MAP@yi+3)& (0+255),b
  1101  002872  0E00               	movlw	0
  1102  002874  6F6E               	movwf	ADC_MAP@yf& (0+255),b
  1103  002876  0E00               	movlw	0
  1104  002878  6F6F               	movwf	(ADC_MAP@yf+1)& (0+255),b
  1105  00287A  0E16               	movlw	22
  1106  00287C  6F70               	movwf	(ADC_MAP@yf+2)& (0+255),b
  1107  00287E  0E43               	movlw	67
  1108  002880  6F71               	movwf	(ADC_MAP@yf+3)& (0+255),b
  1109  002882  EC76  F016         	call	_ADC_MAP	;wreg free
  1110  002886  C060  F0F1         	movff	?_ADC_MAP,_temp
  1111  00288A  C061  F0F2         	movff	?_ADC_MAP+1,_temp+1
  1112  00288E  C062  F0F3         	movff	?_ADC_MAP+2,_temp+2
  1113  002892  C063  F0F4         	movff	?_ADC_MAP+3,_temp+3
  1114  002896                     
  1115                           ;main.c: 41:         conver = ADC_Read(1);
  1116  002896  0E01               	movlw	1
  1117  002898  ECE1  F01C         	call	_ADC_Read
  1118  00289C  C001  F0FD         	movff	?_ADC_Read,_conver
  1119  0028A0  C002  F0FE         	movff	?_ADC_Read+1,_conver+1
  1120  0028A4                     
  1121                           ;main.c: 42:         hum = ADC_MAP(conver, 0.0, 1023.0, 100.0, 0.0);
  1122  0028A4  C0FD  F060         	movff	_conver,ADC_MAP@conver
  1123  0028A8  C0FE  F061         	movff	_conver+1,ADC_MAP@conver+1
  1124  0028AC  0E00               	movlw	0
  1125  0028AE  0100               	movlb	0	; () banked
  1126  0028B0  6F62               	movwf	ADC_MAP@xi& (0+255),b
  1127  0028B2  0E00               	movlw	0
  1128  0028B4  6F63               	movwf	(ADC_MAP@xi+1)& (0+255),b
  1129  0028B6  0E00               	movlw	0
  1130  0028B8  6F64               	movwf	(ADC_MAP@xi+2)& (0+255),b
  1131  0028BA  0E00               	movlw	0
  1132  0028BC  6F65               	movwf	(ADC_MAP@xi+3)& (0+255),b
  1133  0028BE  0E00               	movlw	0
  1134  0028C0  6F66               	movwf	ADC_MAP@xf& (0+255),b
  1135  0028C2  0EC0               	movlw	192
  1136  0028C4  6F67               	movwf	(ADC_MAP@xf+1)& (0+255),b
  1137  0028C6  0E7F               	movlw	127
  1138  0028C8  6F68               	movwf	(ADC_MAP@xf+2)& (0+255),b
  1139  0028CA  0E44               	movlw	68
  1140  0028CC  6F69               	movwf	(ADC_MAP@xf+3)& (0+255),b
  1141  0028CE  0E00               	movlw	0
  1142  0028D0  6F6A               	movwf	ADC_MAP@yi& (0+255),b
  1143  0028D2  0E00               	movlw	0
  1144  0028D4  6F6B               	movwf	(ADC_MAP@yi+1)& (0+255),b
  1145  0028D6  0EC8               	movlw	200
  1146  0028D8  6F6C               	movwf	(ADC_MAP@yi+2)& (0+255),b
  1147  0028DA  0E42               	movlw	66
  1148  0028DC  6F6D               	movwf	(ADC_MAP@yi+3)& (0+255),b
  1149  0028DE  0E00               	movlw	0
  1150  0028E0  6F6E               	movwf	ADC_MAP@yf& (0+255),b
  1151  0028E2  0E00               	movlw	0
  1152  0028E4  6F6F               	movwf	(ADC_MAP@yf+1)& (0+255),b
  1153  0028E6  0E00               	movlw	0
  1154  0028E8  6F70               	movwf	(ADC_MAP@yf+2)& (0+255),b
  1155  0028EA  0E00               	movlw	0
  1156  0028EC  6F71               	movwf	(ADC_MAP@yf+3)& (0+255),b
  1157  0028EE  EC76  F016         	call	_ADC_MAP	;wreg free
  1158  0028F2  C060  F0ED         	movff	?_ADC_MAP,_hum
  1159  0028F6  C061  F0EE         	movff	?_ADC_MAP+1,_hum+1
  1160  0028FA  C062  F0EF         	movff	?_ADC_MAP+2,_hum+2
  1161  0028FE  C063  F0F0         	movff	?_ADC_MAP+3,_hum+3
  1162  002902                     
  1163                           ;main.c: 44:         conver = ADC_Read(2);
  1164  002902  0E02               	movlw	2
  1165  002904  ECE1  F01C         	call	_ADC_Read
  1166  002908  C001  F0FD         	movff	?_ADC_Read,_conver
  1167  00290C  C002  F0FE         	movff	?_ADC_Read+1,_conver+1
  1168  002910                     
  1169                           ;main.c: 45:         pressure = ADC_MAP(conver, 0.0, 1023.0, 700.0, 1100.0);
  1170  002910  C0FD  F060         	movff	_conver,ADC_MAP@conver
  1171  002914  C0FE  F061         	movff	_conver+1,ADC_MAP@conver+1
  1172  002918  0E00               	movlw	0
  1173  00291A  0100               	movlb	0	; () banked
  1174  00291C  6F62               	movwf	ADC_MAP@xi& (0+255),b
  1175  00291E  0E00               	movlw	0
  1176  002920  6F63               	movwf	(ADC_MAP@xi+1)& (0+255),b
  1177  002922  0E00               	movlw	0
  1178  002924  6F64               	movwf	(ADC_MAP@xi+2)& (0+255),b
  1179  002926  0E00               	movlw	0
  1180  002928  6F65               	movwf	(ADC_MAP@xi+3)& (0+255),b
  1181  00292A  0E00               	movlw	0
  1182  00292C  6F66               	movwf	ADC_MAP@xf& (0+255),b
  1183  00292E  0EC0               	movlw	192
  1184  002930  6F67               	movwf	(ADC_MAP@xf+1)& (0+255),b
  1185  002932  0E7F               	movlw	127
  1186  002934  6F68               	movwf	(ADC_MAP@xf+2)& (0+255),b
  1187  002936  0E44               	movlw	68
  1188  002938  6F69               	movwf	(ADC_MAP@xf+3)& (0+255),b
  1189  00293A  0E00               	movlw	0
  1190  00293C  6F6A               	movwf	ADC_MAP@yi& (0+255),b
  1191  00293E  0E00               	movlw	0
  1192  002940  6F6B               	movwf	(ADC_MAP@yi+1)& (0+255),b
  1193  002942  0E2F               	movlw	47
  1194  002944  6F6C               	movwf	(ADC_MAP@yi+2)& (0+255),b
  1195  002946  0E44               	movlw	68
  1196  002948  6F6D               	movwf	(ADC_MAP@yi+3)& (0+255),b
  1197  00294A  0E00               	movlw	0
  1198  00294C  6F6E               	movwf	ADC_MAP@yf& (0+255),b
  1199  00294E  0E80               	movlw	128
  1200  002950  6F6F               	movwf	(ADC_MAP@yf+1)& (0+255),b
  1201  002952  0E89               	movlw	137
  1202  002954  6F70               	movwf	(ADC_MAP@yf+2)& (0+255),b
  1203  002956  0E44               	movlw	68
  1204  002958  6F71               	movwf	(ADC_MAP@yf+3)& (0+255),b
  1205  00295A  EC76  F016         	call	_ADC_MAP	;wreg free
  1206  00295E  C060  F108         	movff	?_ADC_MAP,_pressure
  1207  002962  C061  F109         	movff	?_ADC_MAP+1,_pressure+1
  1208  002966  C062  F10A         	movff	?_ADC_MAP+2,_pressure+2
  1209  00296A  C063  F10B         	movff	?_ADC_MAP+3,_pressure+3
  1210  00296E                     
  1211                           ;main.c: 47:         sprintf(strUART,"*%5.1f/%5.1f/%6.1f#\r\n",temp, hum, pressure);
  1212  00296E  0E5C               	movlw	low _strUART
  1213  002970  0100               	movlb	0	; () banked
  1214  002972  6FC6               	movwf	sprintf@s& (0+255),b
  1215  002974  0E01               	movlw	high _strUART
  1216  002976  6FC7               	movwf	(sprintf@s+1)& (0+255),b
  1217  002978  0E01               	movlw	low STR_1
  1218  00297A  6FC8               	movwf	sprintf@fmt& (0+255),b
  1219  00297C  0E08               	movlw	high STR_1
  1220  00297E  6FC9               	movwf	(sprintf@fmt+1)& (0+255),b
  1221  002980  C0F1  F0CA         	movff	_temp,?_sprintf+4
  1222  002984  C0F2  F0CB         	movff	_temp+1,?_sprintf+5
  1223  002988  C0F3  F0CC         	movff	_temp+2,?_sprintf+6
  1224  00298C  C0F4  F0CD         	movff	_temp+3,?_sprintf+7
  1225  002990  C0ED  F0CE         	movff	_hum,?_sprintf+8
  1226  002994  C0EE  F0CF         	movff	_hum+1,?_sprintf+9
  1227  002998  C0EF  F0D0         	movff	_hum+2,?_sprintf+10
  1228  00299C  C0F0  F0D1         	movff	_hum+3,?_sprintf+11
  1229  0029A0  C108  F0D2         	movff	_pressure,?_sprintf+12
  1230  0029A4  C109  F0D3         	movff	_pressure+1,?_sprintf+13
  1231  0029A8  C10A  F0D4         	movff	_pressure+2,?_sprintf+14
  1232  0029AC  C10B  F0D5         	movff	_pressure+3,?_sprintf+15
  1233  0029B0  EC04  F01C         	call	_sprintf	;wreg free
  1234  0029B4                     
  1235                           ;main.c: 48:         UART_Write_Text(strUART);
  1236  0029B4  0E5C               	movlw	low _strUART
  1237  0029B6  6E02               	movwf	UART_Write_Text@text^0,c
  1238  0029B8  0E01               	movlw	high _strUART
  1239  0029BA  6E03               	movwf	(UART_Write_Text@text+1)^0,c
  1240  0029BC  EC89  F01D         	call	_UART_Write_Text	;wreg free
  1241  0029C0                     
  1242                           ;main.c: 50:         _delay((unsigned long)((100)*(20000000UL/4000.0)));
  1243  0029C0  0E03               	movlw	3
  1244  0029C2  0100               	movlb	0	; () banked
  1245  0029C4  6FE4               	movwf	(??_main+1)& (0+255),b
  1246  0029C6  0E8A               	movlw	138
  1247  0029C8  6FE3               	movwf	??_main& (0+255),b
  1248  0029CA  0E55               	movlw	85
  1249  0029CC                     u4787:
  1250  0029CC  2EE8               	decfsz	wreg,f,c
  1251  0029CE  D7FE               	bra	u4787
  1252  0029D0  2FE3               	decfsz	??_main& (0+255),f,b
  1253  0029D2  D7FC               	bra	u4787
  1254  0029D4  2FE4               	decfsz	(??_main+1)& (0+255),f,b
  1255  0029D6  D7FA               	bra	u4787
  1256  0029D8  D000               	nop2	
  1257  0029DA  EF15  F014         	goto	l3994
  1258  0029DE  EF07  F000         	goto	start
  1259  0029E2                     __end_of_main:
  1260                           	callstack 0
  1261                           
  1262 ;; *************** function _sprintf *****************
  1263 ;; Defined at:
  1264 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  s               2  102[BANK0 ] PTR unsigned char 
  1267 ;;		 -> strUART(50), 
  1268 ;;  fmt             2  104[BANK0 ] PTR const unsigned char 
  1269 ;;		 -> STR_1(22), 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  f              11  120[BANK0 ] struct _IO_FILE
  1272 ;;  ap              2  118[BANK0 ] PTR void [1]
  1273 ;;		 -> ?_sprintf(2), 
  1274 ;;  ret             2    0        int 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  2  102[BANK0 ] int 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1284 ;;      Params:         0      16       0       0       0       0       0       0       0
  1285 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1287 ;;      Totals:         0      29       0       0       0       0       0       0       0
  1288 ;;Total ram usage:       29 bytes
  1289 ;; Hardware stack levels used: 1
  1290 ;; Hardware stack levels required when called: 8
  1291 ;; This function calls:
  1292 ;;		_vfprintf
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text1
  1299  003808                     __ptext1:
  1300                           	callstack 0
  1301  003808                     _sprintf:
  1302                           	callstack 22
  1303  003808  0ECA               	movlw	low (?_sprintf+4)
  1304  00380A  0100               	movlb	0	; () banked
  1305  00380C  6FD6               	movwf	sprintf@ap& (0+255),b
  1306  00380E  0E00               	movlw	high (?_sprintf+4)
  1307  003810  6FD7               	movwf	(sprintf@ap+1)& (0+255),b
  1308  003812  C0C6  F0D8         	movff	sprintf@s,sprintf@f
  1309  003816  C0C7  F0D9         	movff	sprintf@s+1,sprintf@f+1
  1310  00381A                     
  1311                           ; BSR set to: 0
  1312  00381A  0E00               	movlw	0
  1313  00381C  6FDC               	movwf	(sprintf@f+4)& (0+255),b
  1314  00381E  0E00               	movlw	0
  1315  003820  6FDB               	movwf	(sprintf@f+3)& (0+255),b
  1316  003822                     
  1317                           ; BSR set to: 0
  1318  003822  0E00               	movlw	0
  1319  003824  6FE2               	movwf	(sprintf@f+10)& (0+255),b
  1320  003826  0E00               	movlw	0
  1321  003828  6FE1               	movwf	(sprintf@f+9)& (0+255),b
  1322  00382A                     
  1323                           ; BSR set to: 0
  1324  00382A  0ED8               	movlw	low sprintf@f
  1325  00382C  6FC0               	movwf	vfprintf@fp& (0+255),b
  1326  00382E  0E00               	movlw	high sprintf@f
  1327  003830  6FC1               	movwf	(vfprintf@fp+1)& (0+255),b
  1328  003832  C0C8  F0C2         	movff	sprintf@fmt,vfprintf@fmt
  1329  003836  C0C9  F0C3         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1330  00383A  0ED6               	movlw	low sprintf@ap
  1331  00383C  6FC4               	movwf	vfprintf@ap& (0+255),b
  1332  00383E  0E00               	movlw	high sprintf@ap
  1333  003840  6FC5               	movwf	(vfprintf@ap+1)& (0+255),b
  1334  003842  ECA5  F01B         	call	_vfprintf	;wreg free
  1335  003846  0100               	movlb	0	; () banked
  1336  003848  51DB               	movf	(sprintf@f+3)& (0+255),w,b
  1337  00384A  25C6               	addwf	sprintf@s& (0+255),w,b
  1338  00384C  6ED9               	movwf	fsr2l,c
  1339  00384E  51DC               	movf	(sprintf@f+4)& (0+255),w,b
  1340  003850  21C7               	addwfc	(sprintf@s+1)& (0+255),w,b
  1341  003852  6EDA               	movwf	fsr2h,c
  1342  003854  0E00               	movlw	0
  1343  003856  6EDF               	movwf	indf2,c
  1344  003858                     
  1345                           ; BSR set to: 0
  1346  003858  0012               	return		;funcret
  1347  00385A                     __end_of_sprintf:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _vfprintf *****************
  1351 ;; Defined at:
  1352 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  fp              2   96[BANK0 ] PTR struct _IO_FILE
  1355 ;;		 -> sprintf@f(11), 
  1356 ;;  fmt             2   98[BANK0 ] PTR const unsigned char 
  1357 ;;		 -> STR_1(22), 
  1358 ;;  ap              2  100[BANK0 ] PTR PTR void 
  1359 ;;		 -> sprintf@ap(2), 
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  1362 ;;		 -> STR_1(22), 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  2   96[BANK0 ] int 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1372 ;;      Params:         0       6       0       0       0       0       0       0       0
  1373 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1375 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1376 ;;Total ram usage:        8 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; Hardware stack levels required when called: 7
  1379 ;; This function calls:
  1380 ;;		_vfpfcnvrt
  1381 ;; This function is called by:
  1382 ;;		_sprintf
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text2
  1387  00374A                     __ptext2:
  1388                           	callstack 0
  1389  00374A                     _vfprintf:
  1390                           	callstack 22
  1391  00374A                     
  1392                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1393  00374A  C0C2  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  1394  00374E  C0C3  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1395  003752                     
  1396                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1397  003752  0E00               	movlw	0
  1398  003754  0100               	movlb	0	; () banked
  1399  003756  6FF6               	movwf	(_nout+1)& (0+255),b
  1400  003758  0E00               	movlw	0
  1401  00375A  6FF5               	movwf	_nout& (0+255),b
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1404  00375C  EFC3  F01B         	goto	l3904
  1405  003760                     l3902:
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1409  003760  C0C0  F0AE         	movff	vfprintf@fp,vfpfcnvrt@fp
  1410  003764  C0C1  F0AF         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1411  003768  0E5D               	movlw	low vfprintf@cfmt
  1412  00376A  6FB0               	movwf	vfpfcnvrt@fmt& (0+255),b
  1413  00376C  0E00               	movlw	high vfprintf@cfmt
  1414  00376E  6FB1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1415  003770  C0C4  F0B2         	movff	vfprintf@ap,vfpfcnvrt@ap
  1416  003774  C0C5  F0B3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1417  003778  EC1B  F00A         	call	_vfpfcnvrt	;wreg free
  1418  00377C  0100               	movlb	0	; () banked
  1419  00377E  51AE               	movf	?_vfpfcnvrt& (0+255),w,b
  1420  003780  27F5               	addwf	_nout& (0+255),f,b
  1421  003782  51AF               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1422  003784  23F6               	addwfc	(_nout+1)& (0+255),f,b
  1423  003786                     l3904:
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1427  003786  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1428  00378A  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1429  00378E                     	if	0	;tblptru may be non-zero
  1430  00378E                     	endif
  1431  00378E                     	if	0	;tblptru may be non-zero
  1432  00378E                     	endif
  1433  00378E  0008               	tblrd		*
  1434  003790  50F5               	movf	tablat,w,c
  1435  003792  0900               	iorlw	0
  1436  003794  A4D8               	btfss	status,2,c
  1437  003796  EFCF  F01B         	goto	u4691
  1438  00379A  EFD1  F01B         	goto	u4690
  1439  00379E                     u4691:
  1440  00379E  EFB0  F01B         	goto	l3902
  1441  0037A2                     u4690:
  1442  0037A2                     
  1443                           ; BSR set to: 0
  1444                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1445  0037A2  C0F5  F0C0         	movff	_nout,?_vfprintf
  1446  0037A6  C0F6  F0C1         	movff	_nout+1,?_vfprintf+1
  1447  0037AA                     
  1448                           ; BSR set to: 0
  1449  0037AA  0012               	return		;funcret
  1450  0037AC                     __end_of_vfprintf:
  1451                           	callstack 0
  1452                           
  1453 ;; *************** function _vfpfcnvrt *****************
  1454 ;; Defined at:
  1455 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
  1458 ;;		 -> sprintf@f(11), 
  1459 ;;  fmt             2   80[BANK0 ] PTR PTR unsigned char 
  1460 ;;		 -> vfprintf@cfmt(2), 
  1461 ;;  ap              2   82[BANK0 ] PTR PTR void 
  1462 ;;		 -> sprintf@ap(2), 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  llu             8    0        unsigned long long 
  1465 ;;  ll              8    0        long long 
  1466 ;;  f               4   88[BANK0 ] long long 
  1467 ;;  ct              3   92[BANK0 ] unsigned char [3]
  1468 ;;  vp              3    0        PTR void 
  1469 ;;  cp              3    0        PTR unsigned char 
  1470 ;;  i               2    0        int 
  1471 ;;  done            2    0        int 
  1472 ;;  c               1   95[BANK0 ] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  2   78[BANK0 ] int 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1482 ;;      Params:         0       6       0       0       0       0       0       0       0
  1483 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1484 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1485 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1486 ;;Total ram usage:       18 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 6
  1489 ;; This function calls:
  1490 ;;		_atoi
  1491 ;;		_efgtoa
  1492 ;;		_fputc
  1493 ;;		_isdigit
  1494 ;;		_isupper
  1495 ;;		_strncmp
  1496 ;;		_tolower
  1497 ;; This function is called by:
  1498 ;;		_vfprintf
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text3
  1503  001436                     __ptext3:
  1504                           	callstack 0
  1505  001436                     _vfpfcnvrt:
  1506                           	callstack 22
  1507  001436                     
  1508                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1509  001436  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1510  00143A  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1511  00143E  CFDE FFF6          	movff	postinc2,tblptrl
  1512  001442  CFDD FFF7          	movff	postdec2,tblptrh
  1513  001446                     	if	0	;tblptru may be non-zero
  1514  001446                     	endif
  1515  001446                     	if	0	;tblptru may be non-zero
  1516  001446                     	endif
  1517  001446  0008               	tblrd		*
  1518  001448  50F5               	movf	tablat,w,c
  1519  00144A  0A25               	xorlw	37
  1520  00144C  A4D8               	btfss	status,2,c
  1521  00144E  EF2B  F00A         	goto	u4421
  1522  001452  EF2D  F00A         	goto	u4420
  1523  001456                     u4421:
  1524  001456  EF8E  F00C         	goto	l3818
  1525  00145A                     u4420:
  1526  00145A                     
  1527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1528  00145A  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1529  00145E  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1530  001462  2ADE               	incf	postinc2,f,c
  1531  001464  0E00               	movlw	0
  1532  001466  22DD               	addwfc	postdec2,f,c
  1533  001468                     
  1534                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1535  001468  0E00               	movlw	0
  1536  00146A  0100               	movlb	0	; () banked
  1537  00146C  6FF8               	movwf	(_width+1)& (0+255),b
  1538  00146E  0E00               	movlw	0
  1539  001470  6FF7               	movwf	_width& (0+255),b
  1540  001472  C0F7  F0FB         	movff	_width,_flags
  1541  001476  C0F8  F0FC         	movff	_width+1,_flags+1
  1542  00147A                     
  1543                           ; BSR set to: 0
  1544                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1545  00147A  69F9               	setf	_prec& (0+255),b
  1546  00147C  69FA               	setf	(_prec+1)& (0+255),b
  1547  00147E                     
  1548                           ; BSR set to: 0
  1549                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1550  00147E  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1551  001482  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1552  001486  CFDE FFF6          	movff	postinc2,tblptrl
  1553  00148A  CFDD FFF7          	movff	postdec2,tblptrh
  1554  00148E                     	if	0	;tblptru may be non-zero
  1555  00148E                     	endif
  1556  00148E                     	if	0	;tblptru may be non-zero
  1557  00148E                     	endif
  1558  00148E  0008               	tblrd		*
  1559  001490  50F5               	movf	tablat,w,c
  1560  001492  0A2A               	xorlw	42
  1561  001494  A4D8               	btfss	status,2,c
  1562  001496  EF4F  F00A         	goto	u4431
  1563  00149A  EF51  F00A         	goto	u4430
  1564  00149E                     u4431:
  1565  00149E  EF7A  F00A         	goto	l3738
  1566  0014A2                     u4430:
  1567  0014A2                     
  1568                           ; BSR set to: 0
  1569                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1570  0014A2  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1571  0014A6  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1572  0014AA  2ADE               	incf	postinc2,f,c
  1573  0014AC  0E00               	movlw	0
  1574  0014AE  22DD               	addwfc	postdec2,f,c
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1577  0014B0  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1578  0014B4  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1579  0014B8  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  1580  0014BC  0E02               	movlw	2
  1581  0014BE  26DE               	addwf	postinc2,f,c
  1582  0014C0  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  1583  0014C4  0E00               	movlw	0
  1584  0014C6  22DD               	addwfc	postdec2,f,c
  1585  0014C8  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1586  0014CC  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1587  0014D0  CFDE F0F7          	movff	postinc2,_width
  1588  0014D4  CFDD F0F8          	movff	postdec2,_width+1
  1589  0014D8                     
  1590                           ; BSR set to: 0
  1591                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1592  0014D8  BFF8               	btfsc	(_width+1)& (0+255),7,b
  1593  0014DA  EF73  F00A         	goto	u4440
  1594  0014DE  EF71  F00A         	goto	u4441
  1595  0014E2                     u4441:
  1596  0014E2  EFB1  F00A         	goto	l3746
  1597  0014E6                     u4440:
  1598  0014E6                     
  1599                           ; BSR set to: 0
  1600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1601  0014E6  81FB               	bsf	_flags& (0+255),0,b
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1604  0014E8  6DF7               	negf	_width& (0+255),b
  1605  0014EA  1FF8               	comf	(_width+1)& (0+255),f,b
  1606  0014EC  B0D8               	btfsc	status,0,c
  1607  0014EE  2BF8               	incf	(_width+1)& (0+255),f,b
  1608  0014F0  EFB1  F00A         	goto	l3746
  1609  0014F4                     l3738:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1613  0014F4  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1614  0014F8  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1615  0014FC  CFDE F008          	movff	postinc2,atoi@s
  1616  001500  CFDD F009          	movff	postdec2,atoi@s+1
  1617  001504  ECCB  F015         	call	_atoi	;wreg free
  1618  001508  C008  F0F7         	movff	?_atoi,_width
  1619  00150C  C009  F0F8         	movff	?_atoi+1,_width+1
  1620                           
  1621                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1622  001510  EF91  F00A         	goto	l3744
  1623  001514                     l3740:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1627  001514  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1628  001518  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1629  00151C  2ADE               	incf	postinc2,f,c
  1630  00151E  0E00               	movlw	0
  1631  001520  22DD               	addwfc	postdec2,f,c
  1632  001522                     l3744:
  1633  001522  0ED0               	movlw	208
  1634  001524  0100               	movlb	0	; () banked
  1635  001526  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  1636  001528  0EFF               	movlw	255
  1637  00152A  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1638  00152C  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1639  001530  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1640  001534  CFDE FFF6          	movff	postinc2,tblptrl
  1641  001538  CFDD FFF7          	movff	postdec2,tblptrh
  1642  00153C                     	if	0	;tblptru may be non-zero
  1643  00153C                     	endif
  1644  00153C                     	if	0	;tblptru may be non-zero
  1645  00153C                     	endif
  1646  00153C  0008               	tblrd		*
  1647  00153E  50F5               	movf	tablat,w,c
  1648  001540  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1649  001542  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1650  001544  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  1651  001546  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1652  001548  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1653  00154A  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1654  00154C  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1655  00154E  E109               	bnz	u4450
  1656  001550  0E0A               	movlw	10
  1657  001552  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1658  001554  A0D8               	btfss	status,0,c
  1659  001556  EFAF  F00A         	goto	u4451
  1660  00155A  EFB1  F00A         	goto	u4450
  1661  00155E                     u4451:
  1662  00155E  EF8A  F00A         	goto	l3740
  1663  001562                     u4450:
  1664  001562                     l3746:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1668  001562  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1669  001566  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1670  00156A  CFDE FFF6          	movff	postinc2,tblptrl
  1671  00156E  CFDD FFF7          	movff	postdec2,tblptrh
  1672  001572                     	if	0	;tblptru may be non-zero
  1673  001572                     	endif
  1674  001572                     	if	0	;tblptru may be non-zero
  1675  001572                     	endif
  1676  001572  0008               	tblrd		*
  1677  001574  50F5               	movf	tablat,w,c
  1678  001576  0A2E               	xorlw	46
  1679  001578  A4D8               	btfss	status,2,c
  1680  00157A  EFC1  F00A         	goto	u4461
  1681  00157E  EFC3  F00A         	goto	u4460
  1682  001582                     u4461:
  1683  001582  EF34  F00B         	goto	l3764
  1684  001586                     u4460:
  1685  001586                     
  1686                           ; BSR set to: 0
  1687                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1688  001586  0E00               	movlw	0
  1689  001588  6FFA               	movwf	(_prec+1)& (0+255),b
  1690  00158A  0E00               	movlw	0
  1691  00158C  6FF9               	movwf	_prec& (0+255),b
  1692  00158E                     
  1693                           ; BSR set to: 0
  1694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1695  00158E  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1696  001592  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1697  001596  2ADE               	incf	postinc2,f,c
  1698  001598  0E00               	movlw	0
  1699  00159A  22DD               	addwfc	postdec2,f,c
  1700  00159C                     
  1701                           ; BSR set to: 0
  1702                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1703  00159C  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1704  0015A0  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1705  0015A4  CFDE FFF6          	movff	postinc2,tblptrl
  1706  0015A8  CFDD FFF7          	movff	postdec2,tblptrh
  1707  0015AC                     	if	0	;tblptru may be non-zero
  1708  0015AC                     	endif
  1709  0015AC                     	if	0	;tblptru may be non-zero
  1710  0015AC                     	endif
  1711  0015AC  0008               	tblrd		*
  1712  0015AE  50F5               	movf	tablat,w,c
  1713  0015B0  0A2A               	xorlw	42
  1714  0015B2  A4D8               	btfss	status,2,c
  1715  0015B4  EFDE  F00A         	goto	u4471
  1716  0015B8  EFE0  F00A         	goto	u4470
  1717  0015BC                     u4471:
  1718  0015BC  EFFD  F00A         	goto	l3756
  1719  0015C0                     u4470:
  1720  0015C0                     
  1721                           ; BSR set to: 0
  1722                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1723  0015C0  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1724  0015C4  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1725  0015C8  2ADE               	incf	postinc2,f,c
  1726  0015CA  0E00               	movlw	0
  1727  0015CC  22DD               	addwfc	postdec2,f,c
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1730  0015CE  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1731  0015D2  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1732  0015D6  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  1733  0015DA  0E02               	movlw	2
  1734  0015DC  26DE               	addwf	postinc2,f,c
  1735  0015DE  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  1736  0015E2  0E00               	movlw	0
  1737  0015E4  22DD               	addwfc	postdec2,f,c
  1738  0015E6  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1739  0015EA  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1740  0015EE  CFDE F0F9          	movff	postinc2,_prec
  1741  0015F2  CFDD F0FA          	movff	postdec2,_prec+1
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1744  0015F6  EF34  F00B         	goto	l3764
  1745  0015FA                     l3756:
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1749  0015FA  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1750  0015FE  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1751  001602  CFDE F008          	movff	postinc2,atoi@s
  1752  001606  CFDD F009          	movff	postdec2,atoi@s+1
  1753  00160A  ECCB  F015         	call	_atoi	;wreg free
  1754  00160E  C008  F0F9         	movff	?_atoi,_prec
  1755  001612  C009  F0FA         	movff	?_atoi+1,_prec+1
  1756                           
  1757                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1758  001616  EF14  F00B         	goto	l3762
  1759  00161A                     l3758:
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1763  00161A  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1764  00161E  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1765  001622  2ADE               	incf	postinc2,f,c
  1766  001624  0E00               	movlw	0
  1767  001626  22DD               	addwfc	postdec2,f,c
  1768  001628                     l3762:
  1769  001628  0ED0               	movlw	208
  1770  00162A  0100               	movlb	0	; () banked
  1771  00162C  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  1772  00162E  0EFF               	movlw	255
  1773  001630  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1774  001632  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1775  001636  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1776  00163A  CFDE FFF6          	movff	postinc2,tblptrl
  1777  00163E  CFDD FFF7          	movff	postdec2,tblptrh
  1778  001642                     	if	0	;tblptru may be non-zero
  1779  001642                     	endif
  1780  001642                     	if	0	;tblptru may be non-zero
  1781  001642                     	endif
  1782  001642  0008               	tblrd		*
  1783  001644  50F5               	movf	tablat,w,c
  1784  001646  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1785  001648  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1786  00164A  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  1787  00164C  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1788  00164E  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1789  001650  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1790  001652  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1791  001654  E109               	bnz	u4480
  1792  001656  0E0A               	movlw	10
  1793  001658  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1794  00165A  A0D8               	btfss	status,0,c
  1795  00165C  EF32  F00B         	goto	u4481
  1796  001660  EF34  F00B         	goto	u4480
  1797  001664                     u4481:
  1798  001664  EF0D  F00B         	goto	l3758
  1799  001668                     u4480:
  1800  001668                     l3764:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1804  001668  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1805  00166C  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1806  001670  CFDE FFF6          	movff	postinc2,tblptrl
  1807  001674  CFDD FFF7          	movff	postdec2,tblptrh
  1808  001678                     	if	0	;tblptru may be non-zero
  1809  001678                     	endif
  1810  001678                     	if	0	;tblptru may be non-zero
  1811  001678                     	endif
  1812  001678  0008               	tblrd		*
  1813  00167A  50F5               	movf	tablat,w,c
  1814  00167C  6E07               	movwf	tolower@c^0,c
  1815  00167E  6A08               	clrf	(tolower@c+1)^0,c
  1816  001680  EC79  F01C         	call	_tolower	;wreg free
  1817  001684  5007               	movf	?_tolower^0,w,c
  1818  001686  0100               	movlb	0	; () banked
  1819  001688  6FBC               	movwf	vfpfcnvrt@ct& (0+255),b
  1820  00168A                     
  1821                           ; BSR set to: 0
  1822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1823  00168A  51BC               	movf	vfpfcnvrt@ct& (0+255),w,b
  1824  00168C  B4D8               	btfsc	status,2,c
  1825  00168E  EF4B  F00B         	goto	u4491
  1826  001692  EF4D  F00B         	goto	u4490
  1827  001696                     u4491:
  1828  001696  EF87  F00B         	goto	l3774
  1829  00169A                     u4490:
  1830  00169A                     
  1831                           ; BSR set to: 0
  1832                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1833  00169A  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1834  00169E  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1835  0016A2  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  1836  0016A6  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  1837  0016AA  0E01               	movlw	1
  1838  0016AC  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  1839  0016AE  0E00               	movlw	0
  1840  0016B0  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1841  0016B2  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1842  0016B6  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1843  0016BA                     	if	0	;tblptru may be non-zero
  1844  0016BA                     	endif
  1845  0016BA                     	if	0	;tblptru may be non-zero
  1846  0016BA                     	endif
  1847  0016BA  0008               	tblrd		*
  1848  0016BC  50F5               	movf	tablat,w,c
  1849  0016BE  6E07               	movwf	tolower@c^0,c
  1850  0016C0  6A08               	clrf	(tolower@c+1)^0,c
  1851  0016C2  EC79  F01C         	call	_tolower	;wreg free
  1852  0016C6  5007               	movf	?_tolower^0,w,c
  1853  0016C8  0100               	movlb	0	; () banked
  1854  0016CA  6FBD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1855  0016CC                     
  1856                           ; BSR set to: 0
  1857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1858  0016CC  51BD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1859  0016CE  B4D8               	btfsc	status,2,c
  1860  0016D0  EF6C  F00B         	goto	u4501
  1861  0016D4  EF6E  F00B         	goto	u4500
  1862  0016D8                     u4501:
  1863  0016D8  EF87  F00B         	goto	l3774
  1864  0016DC                     u4500:
  1865  0016DC                     
  1866                           ; BSR set to: 0
  1867                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1868  0016DC  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1869  0016E0  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1870  0016E4  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  1871  0016E8  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  1872  0016EC  0E02               	movlw	2
  1873  0016EE  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  1874  0016F0  0E00               	movlw	0
  1875  0016F2  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1876  0016F4  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1877  0016F8  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1878  0016FC                     	if	0	;tblptru may be non-zero
  1879  0016FC                     	endif
  1880  0016FC                     	if	0	;tblptru may be non-zero
  1881  0016FC                     	endif
  1882  0016FC  0008               	tblrd		*
  1883  0016FE  50F5               	movf	tablat,w,c
  1884  001700  6E07               	movwf	tolower@c^0,c
  1885  001702  6A08               	clrf	(tolower@c+1)^0,c
  1886  001704  EC79  F01C         	call	_tolower	;wreg free
  1887  001708  5007               	movf	?_tolower^0,w,c
  1888  00170A  0100               	movlb	0	; () banked
  1889  00170C  6FBE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1890  00170E                     l3774:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1894  00170E  0E66               	movlw	102
  1895  001710  19BC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1896  001712  A4D8               	btfss	status,2,c
  1897  001714  EF8E  F00B         	goto	u4511
  1898  001718  EF90  F00B         	goto	u4510
  1899  00171C                     u4511:
  1900  00171C  EFD0  F00B         	goto	l3786
  1901  001720                     u4510:
  1902  001720                     
  1903                           ; BSR set to: 0
  1904                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1905  001720  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1906  001724  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1907  001728  CFDE FFF6          	movff	postinc2,tblptrl
  1908  00172C  CFDD FFF7          	movff	postdec2,tblptrh
  1909  001730                     	if	0	;tblptru may be non-zero
  1910  001730                     	endif
  1911  001730                     	if	0	;tblptru may be non-zero
  1912  001730                     	endif
  1913  001730  0008               	tblrd		*
  1914  001732  CFF5 F0BF          	movff	tablat,vfpfcnvrt@c
  1915  001736                     
  1916                           ; BSR set to: 0
  1917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1918  001736  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1919  00173A  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1920  00173E  2ADE               	incf	postinc2,f,c
  1921  001740  0E00               	movlw	0
  1922  001742  22DD               	addwfc	postdec2,f,c
  1923  001744                     
  1924                           ; BSR set to: 0
  1925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1926  001744  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1927  001748  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1928  00174C  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  1929  001750  0E04               	movlw	4
  1930  001752  26DE               	addwf	postinc2,f,c
  1931  001754  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  1932  001758  0E00               	movlw	0
  1933  00175A  22DD               	addwfc	postdec2,f,c
  1934  00175C  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1935  001760  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1936  001764  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  1937  001768  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  1938  00176C  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  1939  001770  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  1940  001774                     l3782:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1944  001774  C0AE  F070         	movff	vfpfcnvrt@fp,efgtoa@fp
  1945  001778  C0AF  F071         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1946  00177C  C0B8  F072         	movff	vfpfcnvrt@f,efgtoa@f
  1947  001780  C0B9  F073         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1948  001784  C0BA  F074         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1949  001788  C0BB  F075         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1950  00178C  C0BF  F076         	movff	vfpfcnvrt@c,efgtoa@c
  1951  001790  EC16  F004         	call	_efgtoa	;wreg free
  1952  001794  C070  F0AE         	movff	?_efgtoa,?_vfpfcnvrt
  1953  001798  C071  F0AF         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1954  00179C  EFA9  F00C         	goto	l952
  1955  0017A0                     l3786:
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1959  0017A0  0EBC               	movlw	low vfpfcnvrt@ct
  1960  0017A2  6E01               	movwf	strncmp@_l^0,c
  1961  0017A4  0E00               	movlw	high vfpfcnvrt@ct
  1962  0017A6  6E02               	movwf	(strncmp@_l+1)^0,c
  1963  0017A8  0E27               	movlw	low STR_10
  1964  0017AA  6E03               	movwf	strncmp@_r^0,c
  1965  0017AC  0E08               	movlw	high STR_10
  1966  0017AE  6E04               	movwf	(strncmp@_r+1)^0,c
  1967  0017B0  0E00               	movlw	0
  1968  0017B2  6E06               	movwf	(strncmp@n+1)^0,c
  1969  0017B4  0E02               	movlw	2
  1970  0017B6  6E05               	movwf	strncmp@n^0,c
  1971  0017B8  EC11  F019         	call	_strncmp	;wreg free
  1972  0017BC  5001               	movf	?_strncmp^0,w,c
  1973  0017BE  1002               	iorwf	(?_strncmp+1)^0,w,c
  1974  0017C0  A4D8               	btfss	status,2,c
  1975  0017C2  EFE5  F00B         	goto	u4521
  1976  0017C6  EFE7  F00B         	goto	u4520
  1977  0017CA                     u4521:
  1978  0017CA  EF56  F00C         	goto	l3802
  1979  0017CE                     u4520:
  1980  0017CE                     
  1981                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  1982  0017CE  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1983  0017D2  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1984  0017D6  CFDE F0B4          	movff	postinc2,??_vfpfcnvrt
  1985  0017DA  CFDD F0B5          	movff	postdec2,??_vfpfcnvrt+1
  1986  0017DE  0E01               	movlw	1
  1987  0017E0  0100               	movlb	0	; () banked
  1988  0017E2  27B4               	addwf	??_vfpfcnvrt& (0+255),f,b
  1989  0017E4  0E00               	movlw	0
  1990  0017E6  23B5               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1991  0017E8  C0B4  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1992  0017EC  C0B5  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1993  0017F0                     	if	0	;tblptru may be non-zero
  1994  0017F0                     	endif
  1995  0017F0                     	if	0	;tblptru may be non-zero
  1996  0017F0                     	endif
  1997  0017F0  0008               	tblrd		*
  1998  0017F2  CFF5 F0BF          	movff	tablat,vfpfcnvrt@c
  1999  0017F6                     
  2000                           ; BSR set to: 0
  2001  0017F6  0EBF               	movlw	191
  2002  0017F8  6FB4               	movwf	??_vfpfcnvrt& (0+255),b
  2003  0017FA  0EFF               	movlw	255
  2004  0017FC  6FB5               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2005  0017FE  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2006  001802  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2007  001806  CFDE FFF6          	movff	postinc2,tblptrl
  2008  00180A  CFDD FFF7          	movff	postdec2,tblptrh
  2009  00180E                     	if	0	;tblptru may be non-zero
  2010  00180E                     	endif
  2011  00180E                     	if	0	;tblptru may be non-zero
  2012  00180E                     	endif
  2013  00180E  0008               	tblrd		*
  2014  001810  50F5               	movf	tablat,w,c
  2015  001812  6FB6               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2016  001814  6BB7               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2017  001816  51B4               	movf	??_vfpfcnvrt& (0+255),w,b
  2018  001818  27B6               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2019  00181A  51B5               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2020  00181C  23B7               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2021  00181E  51B7               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2022  001820  E107               	bnz	u4531
  2023  001822  0E1A               	movlw	26
  2024  001824  5DB6               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2025  001826  B0D8               	btfsc	status,0,c
  2026  001828  EF18  F00C         	goto	u4531
  2027  00182C  EF1A  F00C         	goto	u4530
  2028  001830                     u4531:
  2029  001830  EF34  F00C         	goto	l3796
  2030  001834                     u4530:
  2031  001834                     
  2032                           ; BSR set to: 0
  2033                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2034  001834  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2035  001838  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2036  00183C  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  2037  001840  0E04               	movlw	4
  2038  001842  26DE               	addwf	postinc2,f,c
  2039  001844  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  2040  001848  0E00               	movlw	0
  2041  00184A  22DD               	addwfc	postdec2,f,c
  2042  00184C  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2043  001850  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2044  001854  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  2045  001858  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  2046  00185C  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  2047  001860  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2050  001864  EF4C  F00C         	goto	l957
  2051  001868                     l3796:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2055  001868  C0B2  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2056  00186C  C0B3  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2057  001870  CFDF F0B4          	movff	indf2,??_vfpfcnvrt
  2058  001874  0E04               	movlw	4
  2059  001876  26DE               	addwf	postinc2,f,c
  2060  001878  CFDF F0B5          	movff	indf2,??_vfpfcnvrt+1
  2061  00187C  0E00               	movlw	0
  2062  00187E  22DD               	addwfc	postdec2,f,c
  2063  001880  C0B4  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2064  001884  C0B5  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2065  001888  CFDE F0B8          	movff	postinc2,vfpfcnvrt@f
  2066  00188C  CFDE F0B9          	movff	postinc2,vfpfcnvrt@f+1
  2067  001890  CFDE F0BA          	movff	postinc2,vfpfcnvrt@f+2
  2068  001894  CFDE F0BB          	movff	postinc2,vfpfcnvrt@f+3
  2069  001898                     l957:
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2073  001898  0E02               	movlw	2
  2074  00189A  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2075  00189E  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2076  0018A2  26DE               	addwf	postinc2,f,c
  2077  0018A4  0E00               	movlw	0
  2078  0018A6  22DD               	addwfc	postdec2,f,c
  2079  0018A8  EFBA  F00B         	goto	l3782
  2080  0018AC                     l3802:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2083  0018AC  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2084  0018B0  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2085  0018B4  CFDE FFF6          	movff	postinc2,tblptrl
  2086  0018B8  CFDD FFF7          	movff	postdec2,tblptrh
  2087  0018BC                     	if	0	;tblptru may be non-zero
  2088  0018BC                     	endif
  2089  0018BC                     	if	0	;tblptru may be non-zero
  2090  0018BC                     	endif
  2091  0018BC  0008               	tblrd		*
  2092  0018BE  50F5               	movf	tablat,w,c
  2093  0018C0  0A25               	xorlw	37
  2094  0018C2  A4D8               	btfss	status,2,c
  2095  0018C4  EF66  F00C         	goto	u4541
  2096  0018C8  EF68  F00C         	goto	u4540
  2097  0018CC                     u4541:
  2098  0018CC  EF80  F00C         	goto	l3812
  2099  0018D0                     u4540:
  2100  0018D0                     
  2101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2102  0018D0  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2103  0018D4  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2104  0018D8  2ADE               	incf	postinc2,f,c
  2105  0018DA  0E00               	movlw	0
  2106  0018DC  22DD               	addwfc	postdec2,f,c
  2107  0018DE                     
  2108                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2109  0018DE  0E00               	movlw	0
  2110  0018E0  6E02               	movwf	(fputc@c+1)^0,c
  2111  0018E2  0E25               	movlw	37
  2112  0018E4  6E01               	movwf	fputc@c^0,c
  2113  0018E6  C0AE  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2114  0018EA  C0AF  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2115  0018EE  EC7C  F019         	call	_fputc	;wreg free
  2116  0018F2                     l3808:
  2117                           
  2118                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2119  0018F2  0E00               	movlw	0
  2120  0018F4  0100               	movlb	0	; () banked
  2121  0018F6  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2122  0018F8  0E01               	movlw	1
  2123  0018FA  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  2124  0018FC  EFA9  F00C         	goto	l952
  2125  001900                     l3812:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2128  001900  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2129  001904  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2130  001908  2ADE               	incf	postinc2,f,c
  2131  00190A  0E00               	movlw	0
  2132  00190C  22DD               	addwfc	postdec2,f,c
  2133  00190E                     
  2134                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2135  00190E  0E00               	movlw	0
  2136  001910  0100               	movlb	0	; () banked
  2137  001912  6FAF               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2138  001914  0E00               	movlw	0
  2139  001916  6FAE               	movwf	?_vfpfcnvrt& (0+255),b
  2140  001918  EFA9  F00C         	goto	l952
  2141  00191C                     l3818:
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2144  00191C  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2145  001920  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2146  001924  CFDE FFF6          	movff	postinc2,tblptrl
  2147  001928  CFDD FFF7          	movff	postdec2,tblptrh
  2148  00192C                     	if	0	;tblptru may be non-zero
  2149  00192C                     	endif
  2150  00192C                     	if	0	;tblptru may be non-zero
  2151  00192C                     	endif
  2152  00192C  0008               	tblrd		*
  2153  00192E  50F5               	movf	tablat,w,c
  2154  001930  6E01               	movwf	fputc@c^0,c
  2155  001932  6A02               	clrf	(fputc@c+1)^0,c
  2156  001934  C0AE  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2157  001938  C0AF  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2158  00193C  EC7C  F019         	call	_fputc	;wreg free
  2159  001940                     
  2160                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2161  001940  C0B0  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162  001944  C0B1  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163  001948  2ADE               	incf	postinc2,f,c
  2164  00194A  0E00               	movlw	0
  2165  00194C  22DD               	addwfc	postdec2,f,c
  2166  00194E  EF79  F00C         	goto	l3808
  2167  001952                     l952:
  2168  001952  0012               	return		;funcret
  2169  001954                     __end_of_vfpfcnvrt:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function _strncmp *****************
  2173 ;; Defined at:
  2174 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2177 ;;		 -> vfpfcnvrt@ct(3), 
  2178 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2179 ;;		 -> STR_12(3), 
  2180 ;;  n               2    4[COMRAM] unsigned int 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2183 ;;		 -> STR_12(3), 
  2184 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2185 ;;		 -> vfpfcnvrt@ct(3), 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2    0[COMRAM] int 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2195 ;;      Params:         6       0       0       0       0       0       0       0       0
  2196 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2197 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2198 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2199 ;;Total ram usage:       11 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_vfpfcnvrt
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text4
  2210  003222                     __ptext4:
  2211                           	callstack 0
  2212  003222                     _strncmp:
  2213                           	callstack 26
  2214  003222  C001  F008         	movff	strncmp@_l,strncmp@l
  2215  003226  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2216  00322A  C003  F00A         	movff	strncmp@_r,strncmp@r
  2217  00322E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2218  003232  0605               	decf	strncmp@n^0,f,c
  2219  003234  A0D8               	btfss	status,0,c
  2220  003236  0606               	decf	(strncmp@n+1)^0,f,c
  2221  003238  2805               	incf	strncmp@n^0,w,c
  2222  00323A  E106               	bnz	u4371
  2223  00323C  2806               	incf	(strncmp@n+1)^0,w,c
  2224  00323E  A4D8               	btfss	status,2,c
  2225  003240  EF24  F019         	goto	u4371
  2226  003244  EF26  F019         	goto	u4370
  2227  003248                     u4371:
  2228  003248  EF33  F019         	goto	l3710
  2229  00324C                     u4370:
  2230  00324C  0E00               	movlw	0
  2231  00324E  6E02               	movwf	(?_strncmp+1)^0,c
  2232  003250  0E00               	movlw	0
  2233  003252  6E01               	movwf	?_strncmp^0,c
  2234  003254  EF7B  F019         	goto	l1072
  2235  003258                     l3708:
  2236  003258  4A08               	infsnz	strncmp@l^0,f,c
  2237  00325A  2A09               	incf	(strncmp@l+1)^0,f,c
  2238  00325C  4A0A               	infsnz	strncmp@r^0,f,c
  2239  00325E  2A0B               	incf	(strncmp@r+1)^0,f,c
  2240  003260  0605               	decf	strncmp@n^0,f,c
  2241  003262  A0D8               	btfss	status,0,c
  2242  003264  0606               	decf	(strncmp@n+1)^0,f,c
  2243  003266                     l3710:
  2244  003266  C008  FFD9         	movff	strncmp@l,fsr2l
  2245  00326A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2246  00326E  50DF               	movf	indf2,w,c
  2247  003270  B4D8               	btfsc	status,2,c
  2248  003272  EF3D  F019         	goto	u4381
  2249  003276  EF3F  F019         	goto	u4380
  2250  00327A                     u4381:
  2251  00327A  EF6A  F019         	goto	l3718
  2252  00327E                     u4380:
  2253  00327E  C00A  FFF6         	movff	strncmp@r,tblptrl
  2254  003282  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2255  003286                     	if	0	;tblptru may be non-zero
  2256  003286                     	endif
  2257  003286                     	if	0	;tblptru may be non-zero
  2258  003286                     	endif
  2259  003286  0008               	tblrd		*
  2260  003288  50F5               	movf	tablat,w,c
  2261  00328A  0900               	iorlw	0
  2262  00328C  B4D8               	btfsc	status,2,c
  2263  00328E  EF4B  F019         	goto	u4391
  2264  003292  EF4D  F019         	goto	u4390
  2265  003296                     u4391:
  2266  003296  EF6A  F019         	goto	l3718
  2267  00329A                     u4390:
  2268  00329A  5005               	movf	strncmp@n^0,w,c
  2269  00329C  1006               	iorwf	(strncmp@n+1)^0,w,c
  2270  00329E  B4D8               	btfsc	status,2,c
  2271  0032A0  EF54  F019         	goto	u4401
  2272  0032A4  EF56  F019         	goto	u4400
  2273  0032A8                     u4401:
  2274  0032A8  EF6A  F019         	goto	l3718
  2275  0032AC                     u4400:
  2276  0032AC  C008  FFD9         	movff	strncmp@l,fsr2l
  2277  0032B0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2278  0032B4  50DF               	movf	indf2,w,c
  2279  0032B6  6E07               	movwf	??_strncmp^0,c
  2280  0032B8  C00A  FFF6         	movff	strncmp@r,tblptrl
  2281  0032BC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2282  0032C0                     	if	0	;tblptru may be non-zero
  2283  0032C0                     	endif
  2284  0032C0                     	if	0	;tblptru may be non-zero
  2285  0032C0                     	endif
  2286  0032C0  0008               	tblrd		*
  2287  0032C2  50F5               	movf	tablat,w,c
  2288  0032C4  1807               	xorwf	??_strncmp^0,w,c
  2289  0032C6  B4D8               	btfsc	status,2,c
  2290  0032C8  EF68  F019         	goto	u4411
  2291  0032CC  EF6A  F019         	goto	u4410
  2292  0032D0                     u4411:
  2293  0032D0  EF2C  F019         	goto	l3708
  2294  0032D4                     u4410:
  2295  0032D4                     l3718:
  2296  0032D4  C008  FFD9         	movff	strncmp@l,fsr2l
  2297  0032D8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2298  0032DC  50DF               	movf	indf2,w,c
  2299  0032DE  6E07               	movwf	??_strncmp^0,c
  2300  0032E0  C00A  FFF6         	movff	strncmp@r,tblptrl
  2301  0032E4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2302  0032E8                     	if	0	;tblptru may be non-zero
  2303  0032E8                     	endif
  2304  0032E8                     	if	0	;tblptru may be non-zero
  2305  0032E8                     	endif
  2306  0032E8  0008               	tblrd		*
  2307  0032EA  50F5               	movf	tablat,w,c
  2308  0032EC  5C07               	subwf	??_strncmp^0,w,c
  2309  0032EE  6E01               	movwf	?_strncmp^0,c
  2310  0032F0  6A02               	clrf	(?_strncmp+1)^0,c
  2311  0032F2  A0D8               	btfss	status,0,c
  2312  0032F4  0602               	decf	(?_strncmp+1)^0,f,c
  2313  0032F6                     l1072:
  2314  0032F6  0012               	return		;funcret
  2315  0032F8                     __end_of_strncmp:
  2316                           	callstack 0
  2317                           
  2318 ;; *************** function _efgtoa *****************
  2319 ;; Defined at:
  2320 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2323 ;;		 -> sprintf@f(11), 
  2324 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
  2325 ;;  c               1   22[BANK0 ] unsigned char 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  u               4   74[BANK0 ] unsigned char 
  2328 ;;  g               4   66[BANK0 ] unsigned char 
  2329 ;;  l               4   60[BANK0 ] unsigned char 
  2330 ;;  h               4   56[BANK0 ] unsigned char 
  2331 ;;  ou              4   42[BANK0 ] unsigned char 
  2332 ;;  n               2   72[BANK0 ] int 
  2333 ;;  e               2   70[BANK0 ] int 
  2334 ;;  i               2   64[BANK0 ] int 
  2335 ;;  w               2   52[BANK0 ] int 
  2336 ;;  p               2   50[BANK0 ] int 
  2337 ;;  sign            2   48[BANK0 ] int 
  2338 ;;  d               2   46[BANK0 ] int 
  2339 ;;  m               2   40[BANK0 ] int 
  2340 ;;  ne              2   38[BANK0 ] int 
  2341 ;;  pp              2   36[BANK0 ] int 
  2342 ;;  t               2   34[BANK0 ] int 
  2343 ;;  mode            1   55[BANK0 ] unsigned char 
  2344 ;;  nmode           1   54[BANK0 ] unsigned char 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  2   16[BANK0 ] int 
  2347 ;; Registers used:
  2348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2354 ;;      Params:         0       7       0       0       0       0       0       0       0
  2355 ;;      Locals:         0      50       0       0       0       0       0       0       0
  2356 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2357 ;;      Totals:         0      62       0       0       0       0       0       0       0
  2358 ;;Total ram usage:       62 bytes
  2359 ;; Hardware stack levels used: 1
  2360 ;; Hardware stack levels required when called: 5
  2361 ;; This function calls:
  2362 ;;		___awdiv
  2363 ;;		___awmod
  2364 ;;		___fladd
  2365 ;;		___fldiv
  2366 ;;		___fleq
  2367 ;;		___flge
  2368 ;;		___flmul
  2369 ;;		___flneg
  2370 ;;		___flsub
  2371 ;;		___fltol
  2372 ;;		___fpclassifyf
  2373 ;;		_floorf
  2374 ;;		_isupper
  2375 ;;		_pad
  2376 ;;		_strcpy
  2377 ;;		_tolower
  2378 ;; This function is called by:
  2379 ;;		_vfpfcnvrt
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text5
  2384  00082C                     __ptext5:
  2385                           	callstack 0
  2386  00082C                     _efgtoa:
  2387                           	callstack 22
  2388  00082C                     
  2389                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2390  00082C  0E00               	movlw	0
  2391  00082E  0100               	movlb	0	; () banked
  2392  000830  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  2393  000832  0E00               	movlw	0
  2394  000834  6F90               	movwf	efgtoa@sign& (0+255),b
  2395  000836                     
  2396                           ; BSR set to: 0
  2397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2398  000836  C072  F0A2         	movff	efgtoa@f,efgtoa@g
  2399  00083A  C073  F0A3         	movff	efgtoa@f+1,efgtoa@g+1
  2400  00083E  C074  F0A4         	movff	efgtoa@f+2,efgtoa@g+2
  2401  000842  C075  F0A5         	movff	efgtoa@f+3,efgtoa@g+3
  2402  000846                     
  2403                           ; BSR set to: 0
  2404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2405  000846  BFA5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2406  000848  EF2A  F004         	goto	u3850
  2407  00084C  EF28  F004         	goto	u3851
  2408  000850                     u3851:
  2409  000850  EF40  F004         	goto	l3374
  2410  000854                     u3850:
  2411  000854                     
  2412                           ; BSR set to: 0
  2413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2414  000854  0E00               	movlw	0
  2415  000856  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  2416  000858  0E01               	movlw	1
  2417  00085A  6F90               	movwf	efgtoa@sign& (0+255),b
  2418  00085C                     
  2419                           ; BSR set to: 0
  2420                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2421  00085C  C0A2  F001         	movff	efgtoa@g,___flneg@f1
  2422  000860  C0A3  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2423  000864  C0A4  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2424  000868  C0A5  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2425  00086C  EC1D  F01D         	call	___flneg	;wreg free
  2426  000870  C001  F0A2         	movff	?___flneg,efgtoa@g
  2427  000874  C002  F0A3         	movff	?___flneg+1,efgtoa@g+1
  2428  000878  C003  F0A4         	movff	?___flneg+2,efgtoa@g+2
  2429  00087C  C004  F0A5         	movff	?___flneg+3,efgtoa@g+3
  2430  000880                     l3374:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2433  000880  0E00               	movlw	0
  2434  000882  0100               	movlb	0	; () banked
  2435  000884  6FA9               	movwf	(efgtoa@n+1)& (0+255),b
  2436  000886  0E00               	movlw	0
  2437  000888  6FA8               	movwf	efgtoa@n& (0+255),b
  2438  00088A                     
  2439                           ; BSR set to: 0
  2440                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2441  00088A  C0F7  F094         	movff	_width,efgtoa@w
  2442  00088E  C0F8  F095         	movff	_width+1,efgtoa@w+1
  2443  000892                     
  2444                           ; BSR set to: 0
  2445                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2446  000892  5190               	movf	efgtoa@sign& (0+255),w,b
  2447  000894  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2448  000896  A4D8               	btfss	status,2,c
  2449  000898  EF50  F004         	goto	u3861
  2450  00089C  EF52  F004         	goto	u3860
  2451  0008A0                     u3861:
  2452  0008A0  EF59  F004         	goto	l3382
  2453  0008A4                     u3860:
  2454  0008A4                     
  2455                           ; BSR set to: 0
  2456  0008A4  A5FB               	btfss	_flags& (0+255),2,b
  2457  0008A6  EF57  F004         	goto	u3871
  2458  0008AA  EF59  F004         	goto	u3870
  2459  0008AE                     u3871:
  2460  0008AE  EF73  F004         	goto	l3394
  2461  0008B2                     u3870:
  2462  0008B2                     l3382:
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2466  0008B2  5190               	movf	efgtoa@sign& (0+255),w,b
  2467  0008B4  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2468  0008B6  A4D8               	btfss	status,2,c
  2469  0008B8  EF60  F004         	goto	u3881
  2470  0008BC  EF62  F004         	goto	u3880
  2471  0008C0                     u3881:
  2472  0008C0  EF68  F004         	goto	l3386
  2473  0008C4                     u3880:
  2474  0008C4                     
  2475                           ; BSR set to: 0
  2476  0008C4  0E00               	movlw	0
  2477  0008C6  6F7D               	movwf	(_efgtoa$952+1)& (0+255),b
  2478  0008C8  0E2B               	movlw	43
  2479  0008CA  6F7C               	movwf	_efgtoa$952& (0+255),b
  2480  0008CC  EF6C  F004         	goto	l3388
  2481  0008D0                     l3386:
  2482                           
  2483                           ; BSR set to: 0
  2484  0008D0  0E00               	movlw	0
  2485  0008D2  6F7D               	movwf	(_efgtoa$952+1)& (0+255),b
  2486  0008D4  0E2D               	movlw	45
  2487  0008D6  6F7C               	movwf	_efgtoa$952& (0+255),b
  2488  0008D8                     l3388:
  2489                           
  2490                           ; BSR set to: 0
  2491  0008D8  C07C  F10C         	movff	_efgtoa$952,_dbuf
  2492  0008DC                     
  2493                           ; BSR set to: 0
  2494                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2495  0008DC  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  2496  0008DE  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  2497  0008E0                     
  2498                           ; BSR set to: 0
  2499                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2500  0008E0  0794               	decf	efgtoa@w& (0+255),f,b
  2501  0008E2  A0D8               	btfss	status,0,c
  2502  0008E4  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  2503  0008E6                     l3394:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2507  0008E6  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  2508  0008EA  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2509  0008EE  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2510  0008F2  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2511  0008F6  EC1E  F018         	call	___fpclassifyf	;wreg free
  2512  0008FA  0401               	decf	?___fpclassifyf^0,w,c
  2513  0008FC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2514  0008FE  A4D8               	btfss	status,2,c
  2515  000900  EF84  F004         	goto	u3891
  2516  000904  EF86  F004         	goto	u3890
  2517  000908                     u3891:
  2518  000908  EFD0  F004         	goto	l3412
  2519  00090C                     u3890:
  2520  00090C  0EBF               	movlw	191
  2521  00090E  0100               	movlb	0	; () banked
  2522  000910  6F77               	movwf	??_efgtoa& (0+255),b
  2523  000912  0EFF               	movlw	255
  2524  000914  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2525  000916  5176               	movf	efgtoa@c& (0+255),w,b
  2526  000918  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  2527  00091A  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  2528  00091C  5177               	movf	??_efgtoa& (0+255),w,b
  2529  00091E  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2530  000920  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2531  000922  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2532  000924  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2533  000926  E107               	bnz	u3901
  2534  000928  0E1A               	movlw	26
  2535  00092A  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2536  00092C  B0D8               	btfsc	status,0,c
  2537  00092E  EF9B  F004         	goto	u3901
  2538  000932  EF9D  F004         	goto	u3900
  2539  000936                     u3901:
  2540  000936  EFAB  F004         	goto	l3404
  2541  00093A                     u3900:
  2542  00093A                     
  2543                           ; BSR set to: 0
  2544                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2545  00093A  0E0C               	movlw	low _dbuf
  2546  00093C  25A8               	addwf	efgtoa@n& (0+255),w,b
  2547  00093E  6E01               	movwf	strcpy@dest^0,c
  2548  000940  0E01               	movlw	high _dbuf
  2549  000942  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2550  000944  6E02               	movwf	(strcpy@dest+1)^0,c
  2551  000946  0E17               	movlw	low STR_2
  2552  000948  6E03               	movwf	strcpy@src^0,c
  2553  00094A  0E08               	movlw	high STR_2
  2554  00094C  6E04               	movwf	(strcpy@src+1)^0,c
  2555  00094E  ECD6  F01B         	call	_strcpy	;wreg free
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2558  000952  EFB7  F004         	goto	l3406
  2559  000956                     l3404:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2563  000956  0E0C               	movlw	low _dbuf
  2564  000958  25A8               	addwf	efgtoa@n& (0+255),w,b
  2565  00095A  6E01               	movwf	strcpy@dest^0,c
  2566  00095C  0E01               	movlw	high _dbuf
  2567  00095E  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2568  000960  6E02               	movwf	(strcpy@dest+1)^0,c
  2569  000962  0E1F               	movlw	low STR_3
  2570  000964  6E03               	movwf	strcpy@src^0,c
  2571  000966  0E08               	movlw	high STR_3
  2572  000968  6E04               	movwf	(strcpy@src+1)^0,c
  2573  00096A  ECD6  F01B         	call	_strcpy	;wreg free
  2574  00096E                     l3406:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2577  00096E  0100               	movlb	0	; () banked
  2578  000970  0EFD               	movlw	253
  2579  000972  2794               	addwf	efgtoa@w& (0+255),f,b
  2580  000974  0EFF               	movlw	255
  2581  000976  2395               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2582  000978                     l3408:
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2585  000978  C070  F011         	movff	efgtoa@fp,pad@fp
  2586  00097C  C071  F012         	movff	efgtoa@fp+1,pad@fp+1
  2587  000980  0E0C               	movlw	low _dbuf
  2588  000982  6E13               	movwf	pad@buf^0,c
  2589  000984  0E01               	movlw	high _dbuf
  2590  000986  6E14               	movwf	(pad@buf+1)^0,c
  2591  000988  C094  F015         	movff	efgtoa@w,pad@p
  2592  00098C  C095  F016         	movff	efgtoa@w+1,pad@p+1
  2593  000990  ECE1  F019         	call	_pad	;wreg free
  2594  000994  C011  F070         	movff	?_pad,?_efgtoa
  2595  000998  C012  F071         	movff	?_pad+1,?_efgtoa+1
  2596  00099C  EF1A  F00A         	goto	l858
  2597  0009A0                     l3412:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2600  0009A0  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  2601  0009A4  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2602  0009A8  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2603  0009AC  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2604  0009B0  EC1E  F018         	call	___fpclassifyf	;wreg free
  2605  0009B4  5001               	movf	?___fpclassifyf^0,w,c
  2606  0009B6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2607  0009B8  A4D8               	btfss	status,2,c
  2608  0009BA  EFE1  F004         	goto	u3911
  2609  0009BE  EFE3  F004         	goto	u3910
  2610  0009C2                     u3911:
  2611  0009C2  EF16  F005         	goto	l3430
  2612  0009C6                     u3910:
  2613  0009C6  0EBF               	movlw	191
  2614  0009C8  0100               	movlb	0	; () banked
  2615  0009CA  6F77               	movwf	??_efgtoa& (0+255),b
  2616  0009CC  0EFF               	movlw	255
  2617  0009CE  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2618  0009D0  5176               	movf	efgtoa@c& (0+255),w,b
  2619  0009D2  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  2620  0009D4  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  2621  0009D6  5177               	movf	??_efgtoa& (0+255),w,b
  2622  0009D8  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2623  0009DA  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2624  0009DC  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2625  0009DE  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2626  0009E0  E107               	bnz	u3921
  2627  0009E2  0E1A               	movlw	26
  2628  0009E4  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2629  0009E6  B0D8               	btfsc	status,0,c
  2630  0009E8  EFF8  F004         	goto	u3921
  2631  0009EC  EFFA  F004         	goto	u3920
  2632  0009F0                     u3921:
  2633  0009F0  EF08  F005         	goto	l3422
  2634  0009F4                     u3920:
  2635  0009F4                     
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2638  0009F4  0E0C               	movlw	low _dbuf
  2639  0009F6  25A8               	addwf	efgtoa@n& (0+255),w,b
  2640  0009F8  6E01               	movwf	strcpy@dest^0,c
  2641  0009FA  0E01               	movlw	high _dbuf
  2642  0009FC  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2643  0009FE  6E02               	movwf	(strcpy@dest+1)^0,c
  2644  000A00  0E1B               	movlw	low STR_6
  2645  000A02  6E03               	movwf	strcpy@src^0,c
  2646  000A04  0E08               	movlw	high STR_6
  2647  000A06  6E04               	movwf	(strcpy@src+1)^0,c
  2648  000A08  ECD6  F01B         	call	_strcpy	;wreg free
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2651  000A0C  EFB7  F004         	goto	l3406
  2652  000A10                     l3422:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2656  000A10  0E0C               	movlw	low _dbuf
  2657  000A12  25A8               	addwf	efgtoa@n& (0+255),w,b
  2658  000A14  6E01               	movwf	strcpy@dest^0,c
  2659  000A16  0E01               	movlw	high _dbuf
  2660  000A18  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2661  000A1A  6E02               	movwf	(strcpy@dest+1)^0,c
  2662  000A1C  0E23               	movlw	low STR_7
  2663  000A1E  6E03               	movwf	strcpy@src^0,c
  2664  000A20  0E08               	movlw	high STR_7
  2665  000A22  6E04               	movwf	(strcpy@src+1)^0,c
  2666  000A24  ECD6  F01B         	call	_strcpy	;wreg free
  2667  000A28  EFB7  F004         	goto	l3406
  2668  000A2C                     l3430:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2671  000A2C  0E00               	movlw	0
  2672  000A2E  0100               	movlb	0	; () banked
  2673  000A30  6FAA               	movwf	efgtoa@u& (0+255),b
  2674  000A32  0E00               	movlw	0
  2675  000A34  6FAB               	movwf	(efgtoa@u+1)& (0+255),b
  2676  000A36  0E80               	movlw	128
  2677  000A38  6FAC               	movwf	(efgtoa@u+2)& (0+255),b
  2678  000A3A  0E3F               	movlw	63
  2679  000A3C  6FAD               	movwf	(efgtoa@u+3)& (0+255),b
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2682  000A3E  0E00               	movlw	0
  2683  000A40  6FA7               	movwf	(efgtoa@e+1)& (0+255),b
  2684  000A42  0E00               	movlw	0
  2685  000A44  6FA6               	movwf	efgtoa@e& (0+255),b
  2686  000A46                     
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2689  000A46  C0A2  F001         	movff	efgtoa@g,___fleq@ff1
  2690  000A4A  C0A3  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2691  000A4E  C0A4  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2692  000A52  C0A5  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2693  000A56  0E00               	movlw	0
  2694  000A58  6E05               	movwf	___fleq@ff2^0,c
  2695  000A5A  0E00               	movlw	0
  2696  000A5C  6E06               	movwf	(___fleq@ff2+1)^0,c
  2697  000A5E  0E00               	movlw	0
  2698  000A60  6E07               	movwf	(___fleq@ff2+2)^0,c
  2699  000A62  0E00               	movlw	0
  2700  000A64  6E08               	movwf	(___fleq@ff2+3)^0,c
  2701  000A66  ECFE  F01A         	call	___fleq	;wreg free
  2702  000A6A  B0D8               	btfsc	status,0,c
  2703  000A6C  EF3A  F005         	goto	u3931
  2704  000A70  EF3C  F005         	goto	u3930
  2705  000A74                     u3931:
  2706  000A74  EFBF  F005         	goto	l3448
  2707  000A78                     u3930:
  2708  000A78  EF5B  F005         	goto	l3440
  2709  000A7C                     l3436:
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2712  000A7C  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  2713  000A80  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  2714  000A84  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  2715  000A88  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  2716  000A8C  0E00               	movlw	0
  2717  000A8E  6E13               	movwf	___flmul@a^0,c
  2718  000A90  0E00               	movlw	0
  2719  000A92  6E14               	movwf	(___flmul@a+1)^0,c
  2720  000A94  0E20               	movlw	32
  2721  000A96  6E15               	movwf	(___flmul@a+2)^0,c
  2722  000A98  0E41               	movlw	65
  2723  000A9A  6E16               	movwf	(___flmul@a+3)^0,c
  2724  000A9C  EC0A  F00F         	call	___flmul	;wreg free
  2725  000AA0  C00F  F0AA         	movff	?___flmul,efgtoa@u
  2726  000AA4  C010  F0AB         	movff	?___flmul+1,efgtoa@u+1
  2727  000AA8  C011  F0AC         	movff	?___flmul+2,efgtoa@u+2
  2728  000AAC  C012  F0AD         	movff	?___flmul+3,efgtoa@u+3
  2729  000AB0                     
  2730                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2731  000AB0  0100               	movlb	0	; () banked
  2732  000AB2  4BA6               	infsnz	efgtoa@e& (0+255),f,b
  2733  000AB4  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  2734  000AB6                     l3440:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2737  000AB6  C0A2  F028         	movff	efgtoa@g,___flge@ff1
  2738  000ABA  C0A3  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2739  000ABE  C0A4  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2740  000AC2  C0A5  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2741  000AC6  0E00               	movlw	0
  2742  000AC8  6E13               	movwf	___flmul@a^0,c
  2743  000ACA  0E00               	movlw	0
  2744  000ACC  6E14               	movwf	(___flmul@a+1)^0,c
  2745  000ACE  0E20               	movlw	32
  2746  000AD0  6E15               	movwf	(___flmul@a+2)^0,c
  2747  000AD2  0E41               	movlw	65
  2748  000AD4  6E16               	movwf	(___flmul@a+3)^0,c
  2749  000AD6  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  2750  000ADA  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  2751  000ADE  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  2752  000AE2  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  2753  000AE6  EC0A  F00F         	call	___flmul	;wreg free
  2754  000AEA  C00F  F02C         	movff	?___flmul,___flge@ff2
  2755  000AEE  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2756  000AF2  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2757  000AF6  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2758  000AFA  EC9C  F017         	call	___flge	;wreg free
  2759  000AFE  B0D8               	btfsc	status,0,c
  2760  000B00  EF84  F005         	goto	u3941
  2761  000B04  EF86  F005         	goto	u3940
  2762  000B08                     u3941:
  2763  000B08  EF3E  F005         	goto	l3436
  2764  000B0C                     u3940:
  2765  000B0C  EFA6  F005         	goto	l3446
  2766  000B10                     l3442:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2769  000B10  C0AA  F040         	movff	efgtoa@u,___fldiv@b
  2770  000B14  C0AB  F041         	movff	efgtoa@u+1,___fldiv@b+1
  2771  000B18  C0AC  F042         	movff	efgtoa@u+2,___fldiv@b+2
  2772  000B1C  C0AD  F043         	movff	efgtoa@u+3,___fldiv@b+3
  2773  000B20  0E00               	movlw	0
  2774  000B22  6E44               	movwf	___fldiv@a^0,c
  2775  000B24  0E00               	movlw	0
  2776  000B26  6E45               	movwf	(___fldiv@a+1)^0,c
  2777  000B28  0E20               	movlw	32
  2778  000B2A  6E46               	movwf	(___fldiv@a+2)^0,c
  2779  000B2C  0E41               	movlw	65
  2780  000B2E  6E47               	movwf	(___fldiv@a+3)^0,c
  2781  000B30  EC1F  F011         	call	___fldiv	;wreg free
  2782  000B34  C040  F0AA         	movff	?___fldiv,efgtoa@u
  2783  000B38  C041  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  2784  000B3C  C042  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  2785  000B40  C043  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  2786  000B44                     
  2787                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2788  000B44  0100               	movlb	0	; () banked
  2789  000B46  07A6               	decf	efgtoa@e& (0+255),f,b
  2790  000B48  A0D8               	btfss	status,0,c
  2791  000B4A  07A7               	decf	(efgtoa@e+1)& (0+255),f,b
  2792  000B4C                     l3446:
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2795  000B4C  C0A2  F028         	movff	efgtoa@g,___flge@ff1
  2796  000B50  C0A3  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2797  000B54  C0A4  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2798  000B58  C0A5  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2799  000B5C  C0AA  F02C         	movff	efgtoa@u,___flge@ff2
  2800  000B60  C0AB  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2801  000B64  C0AC  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2802  000B68  C0AD  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2803  000B6C  EC9C  F017         	call	___flge	;wreg free
  2804  000B70  A0D8               	btfss	status,0,c
  2805  000B72  EFBD  F005         	goto	u3951
  2806  000B76  EFBF  F005         	goto	u3950
  2807  000B7A                     u3951:
  2808  000B7A  EF88  F005         	goto	l3442
  2809  000B7E                     u3950:
  2810  000B7E                     l3448:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2813  000B7E  C076  F007         	movff	efgtoa@c,tolower@c
  2814  000B82  6A08               	clrf	(tolower@c+1)^0,c
  2815  000B84  EC79  F01C         	call	_tolower	;wreg free
  2816  000B88  5007               	movf	?_tolower^0,w,c
  2817  000B8A  0100               	movlb	0	; () banked
  2818  000B8C  6F97               	movwf	efgtoa@mode& (0+255),b
  2819  000B8E                     
  2820                           ; BSR set to: 0
  2821                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2822  000B8E  C097  F096         	movff	efgtoa@mode,efgtoa@nmode
  2823  000B92                     
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2826  000B92  0E67               	movlw	103
  2827  000B94  1997               	xorwf	efgtoa@mode& (0+255),w,b
  2828  000B96  A4D8               	btfss	status,2,c
  2829  000B98  EFD0  F005         	goto	u3961
  2830  000B9C  EFD2  F005         	goto	u3960
  2831  000BA0                     u3961:
  2832  000BA0  EFF8  F005         	goto	l3462
  2833  000BA4                     u3960:
  2834  000BA4                     
  2835                           ; BSR set to: 0
  2836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2837  000BA4  51F9               	movf	_prec& (0+255),w,b
  2838  000BA6  11FA               	iorwf	(_prec+1)& (0+255),w,b
  2839  000BA8  A4D8               	btfss	status,2,c
  2840  000BAA  EFD9  F005         	goto	u3971
  2841  000BAE  EFDB  F005         	goto	u3970
  2842  000BB2                     u3971:
  2843  000BB2  EFDF  F005         	goto	l3458
  2844  000BB6                     u3970:
  2845  000BB6                     
  2846                           ; BSR set to: 0
  2847                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2848  000BB6  0E00               	movlw	0
  2849  000BB8  6FFA               	movwf	(_prec+1)& (0+255),b
  2850  000BBA  0E01               	movlw	1
  2851  000BBC  6FF9               	movwf	_prec& (0+255),b
  2852  000BBE                     l3458:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2856  000BBE  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  2857  000BC0  EFEC  F005         	goto	u3980
  2858  000BC4  51FA               	movf	(_prec+1)& (0+255),w,b
  2859  000BC6  E106               	bnz	u3981
  2860  000BC8  05F9               	decf	_prec& (0+255),w,b
  2861  000BCA  B0D8               	btfsc	status,0,c
  2862  000BCC  EFEA  F005         	goto	u3981
  2863  000BD0  EFEC  F005         	goto	u3980
  2864  000BD4                     u3981:
  2865  000BD4  EFF2  F005         	goto	l874
  2866  000BD8                     u3980:
  2867  000BD8                     l3460:
  2868                           
  2869                           ; BSR set to: 0
  2870  000BD8  0E00               	movlw	0
  2871  000BDA  6F93               	movwf	(efgtoa@p+1)& (0+255),b
  2872  000BDC  0E06               	movlw	6
  2873  000BDE  6F92               	movwf	efgtoa@p& (0+255),b
  2874  000BE0  EF01  F006         	goto	l3468
  2875  000BE4                     l874:
  2876                           
  2877                           ; BSR set to: 0
  2878  000BE4  C0F9  F092         	movff	_prec,efgtoa@p
  2879  000BE8  C0FA  F093         	movff	_prec+1,efgtoa@p+1
  2880  000BEC  EF01  F006         	goto	l3468
  2881  000BF0                     l3462:
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2885  000BF0  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  2886  000BF2  EFFD  F005         	goto	u3991
  2887  000BF6  EFFF  F005         	goto	u3990
  2888  000BFA                     u3991:
  2889  000BFA  EFEC  F005         	goto	l3460
  2890  000BFE                     u3990:
  2891  000BFE  EFF2  F005         	goto	l874
  2892  000C02                     l3468:
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2896  000C02  0E67               	movlw	103
  2897  000C04  1997               	xorwf	efgtoa@mode& (0+255),w,b
  2898  000C06  A4D8               	btfss	status,2,c
  2899  000C08  EF08  F006         	goto	u4001
  2900  000C0C  EF0A  F006         	goto	u4000
  2901  000C10                     u4001:
  2902  000C10  EF39  F006         	goto	l3478
  2903  000C14                     u4000:
  2904  000C14                     
  2905                           ; BSR set to: 0
  2906                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2907  000C14  AFA7               	btfss	(efgtoa@e+1)& (0+255),7,b
  2908  000C16  EF18  F006         	goto	u4010
  2909  000C1A  0EFC               	movlw	252
  2910  000C1C  5DA6               	subwf	efgtoa@e& (0+255),w,b
  2911  000C1E  0EFF               	movlw	255
  2912  000C20  59A7               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2913  000C22  A0D8               	btfss	status,0,c
  2914  000C24  EF16  F006         	goto	u4011
  2915  000C28  EF18  F006         	goto	u4010
  2916  000C2C                     u4011:
  2917  000C2C  EF37  F006         	goto	l3476
  2918  000C30                     u4010:
  2919  000C30                     
  2920                           ; BSR set to: 0
  2921  000C30  0EFF               	movlw	255
  2922  000C32  6F77               	movwf	??_efgtoa& (0+255),b
  2923  000C34  0EFF               	movlw	255
  2924  000C36  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  2925  000C38  C092  F079         	movff	efgtoa@p,??_efgtoa+2
  2926  000C3C  C093  F07A         	movff	efgtoa@p+1,??_efgtoa+3
  2927  000C40  5177               	movf	??_efgtoa& (0+255),w,b
  2928  000C42  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  2929  000C44  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  2930  000C46  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2931  000C48  51A6               	movf	efgtoa@e& (0+255),w,b
  2932  000C4A  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  2933  000C4C  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  2934  000C4E  0A80               	xorlw	128
  2935  000C50  6F7B               	movwf	(??_efgtoa+4)& (0+255),b
  2936  000C52  51A7               	movf	(efgtoa@e+1)& (0+255),w,b
  2937  000C54  0A80               	xorlw	128
  2938  000C56  597B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2939  000C58  A0D8               	btfss	status,0,c
  2940  000C5A  EF31  F006         	goto	u4021
  2941  000C5E  EF33  F006         	goto	u4020
  2942  000C62                     u4021:
  2943  000C62  EF37  F006         	goto	l3476
  2944  000C66                     u4020:
  2945  000C66                     
  2946                           ; BSR set to: 0
  2947                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2948  000C66  0E66               	movlw	102
  2949  000C68  6F96               	movwf	efgtoa@nmode& (0+255),b
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2952  000C6A  EF39  F006         	goto	l3478
  2953  000C6E                     l3476:
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2957  000C6E  0E65               	movlw	101
  2958  000C70  6F96               	movwf	efgtoa@nmode& (0+255),b
  2959  000C72                     l3478:
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2963  000C72  C092  F088         	movff	efgtoa@p,efgtoa@m
  2964  000C76  C093  F089         	movff	efgtoa@p+1,efgtoa@m+1
  2965  000C7A                     
  2966                           ; BSR set to: 0
  2967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2968  000C7A  0E67               	movlw	103
  2969  000C7C  1997               	xorwf	efgtoa@mode& (0+255),w,b
  2970  000C7E  A4D8               	btfss	status,2,c
  2971  000C80  EF44  F006         	goto	u4031
  2972  000C84  EF46  F006         	goto	u4030
  2973  000C88                     u4031:
  2974  000C88  EF56  F006         	goto	l3486
  2975  000C8C                     u4030:
  2976  000C8C                     
  2977                           ; BSR set to: 0
  2978  000C8C  0E66               	movlw	102
  2979  000C8E  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  2980  000C90  A4D8               	btfss	status,2,c
  2981  000C92  EF4D  F006         	goto	u4041
  2982  000C96  EF4F  F006         	goto	u4040
  2983  000C9A                     u4041:
  2984  000C9A  EF58  F006         	goto	l3488
  2985  000C9E                     u4040:
  2986  000C9E                     
  2987                           ; BSR set to: 0
  2988  000C9E  BFA7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2989  000CA0  EF56  F006         	goto	u4050
  2990  000CA4  EF54  F006         	goto	u4051
  2991  000CA8                     u4051:
  2992  000CA8  EF58  F006         	goto	l3488
  2993  000CAC                     u4050:
  2994  000CAC                     l3486:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2998  000CAC  4B88               	infsnz	efgtoa@m& (0+255),f,b
  2999  000CAE  2B89               	incf	(efgtoa@m+1)& (0+255),f,b
  3000  000CB0                     l3488:
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3004  000CB0  0E66               	movlw	102
  3005  000CB2  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3006  000CB4  A4D8               	btfss	status,2,c
  3007  000CB6  EF5F  F006         	goto	u4061
  3008  000CBA  EF61  F006         	goto	u4060
  3009  000CBE                     u4061:
  3010  000CBE  EF81  F006         	goto	l3498
  3011  000CC2                     u4060:
  3012  000CC2                     
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3015  000CC2  BFA7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3016  000CC4  EF68  F006         	goto	u4070
  3017  000CC8  EF66  F006         	goto	u4071
  3018  000CCC                     u4071:
  3019  000CCC  EF74  F006         	goto	l3494
  3020  000CD0                     u4070:
  3021  000CD0                     
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3024  000CD0  0E00               	movlw	0
  3025  000CD2  6FAA               	movwf	efgtoa@u& (0+255),b
  3026  000CD4  0E00               	movlw	0
  3027  000CD6  6FAB               	movwf	(efgtoa@u+1)& (0+255),b
  3028  000CD8  0E80               	movlw	128
  3029  000CDA  6FAC               	movwf	(efgtoa@u+2)& (0+255),b
  3030  000CDC  0E3F               	movlw	63
  3031  000CDE  6FAD               	movwf	(efgtoa@u+3)& (0+255),b
  3032                           
  3033                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3034  000CE0  0E00               	movlw	0
  3035  000CE2  6FA7               	movwf	(efgtoa@e+1)& (0+255),b
  3036  000CE4  0E00               	movlw	0
  3037  000CE6  6FA6               	movwf	efgtoa@e& (0+255),b
  3038  000CE8                     l3494:
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3042  000CE8  0E67               	movlw	103
  3043  000CEA  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3044  000CEC  B4D8               	btfsc	status,2,c
  3045  000CEE  EF7B  F006         	goto	u4081
  3046  000CF2  EF7D  F006         	goto	u4080
  3047  000CF6                     u4081:
  3048  000CF6  EF81  F006         	goto	l3498
  3049  000CFA                     u4080:
  3050  000CFA                     
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3053  000CFA  51A6               	movf	efgtoa@e& (0+255),w,b
  3054  000CFC  2788               	addwf	efgtoa@m& (0+255),f,b
  3055  000CFE  51A7               	movf	(efgtoa@e+1)& (0+255),w,b
  3056  000D00  2389               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3057  000D02                     l3498:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3061  000D02  0E00               	movlw	0
  3062  000D04  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  3063  000D06  0E00               	movlw	0
  3064  000D08  6FA0               	movwf	efgtoa@i& (0+255),b
  3065  000D0A                     
  3066                           ; BSR set to: 0
  3067                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3068  000D0A  C0A2  F098         	movff	efgtoa@g,efgtoa@h
  3069  000D0E  C0A3  F099         	movff	efgtoa@g+1,efgtoa@h+1
  3070  000D12  C0A4  F09A         	movff	efgtoa@g+2,efgtoa@h+2
  3071  000D16  C0A5  F09B         	movff	efgtoa@g+3,efgtoa@h+3
  3072  000D1A                     
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3075  000D1A  C0AA  F08A         	movff	efgtoa@u,efgtoa@ou
  3076  000D1E  C0AB  F08B         	movff	efgtoa@u+1,efgtoa@ou+1
  3077  000D22  C0AC  F08C         	movff	efgtoa@u+2,efgtoa@ou+2
  3078  000D26  C0AD  F08D         	movff	efgtoa@u+3,efgtoa@ou+3
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3081  000D2A  EF12  F007         	goto	l3512
  3082  000D2E                     l3504:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3086  000D2E  C098  F040         	movff	efgtoa@h,___fldiv@b
  3087  000D32  C099  F041         	movff	efgtoa@h+1,___fldiv@b+1
  3088  000D36  C09A  F042         	movff	efgtoa@h+2,___fldiv@b+2
  3089  000D3A  C09B  F043         	movff	efgtoa@h+3,___fldiv@b+3
  3090  000D3E  C0AA  F044         	movff	efgtoa@u,___fldiv@a
  3091  000D42  C0AB  F045         	movff	efgtoa@u+1,___fldiv@a+1
  3092  000D46  C0AC  F046         	movff	efgtoa@u+2,___fldiv@a+2
  3093  000D4A  C0AD  F047         	movff	efgtoa@u+3,___fldiv@a+3
  3094  000D4E  EC1F  F011         	call	___fldiv	;wreg free
  3095  000D52  C040  F059         	movff	?___fldiv,floorf@x
  3096  000D56  C041  F05A         	movff	?___fldiv+1,floorf@x+1
  3097  000D5A  C042  F05B         	movff	?___fldiv+2,floorf@x+2
  3098  000D5E  C043  F05C         	movff	?___fldiv+3,floorf@x+3
  3099  000D62  ECEC  F012         	call	_floorf	;wreg free
  3100  000D66  C059  F09C         	movff	?_floorf,efgtoa@l
  3101  000D6A  C05A  F09D         	movff	?_floorf+1,efgtoa@l+1
  3102  000D6E  C05B  F09E         	movff	?_floorf+2,efgtoa@l+2
  3103  000D72  C05C  F09F         	movff	?_floorf+3,efgtoa@l+3
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3106  000D76  C09C  F001         	movff	efgtoa@l,___fltol@f1
  3107  000D7A  C09D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3108  000D7E  C09E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3109  000D82  C09F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3110  000D86  EC19  F017         	call	___fltol	;wreg free
  3111  000D8A  C001  F08E         	movff	?___fltol,efgtoa@d
  3112  000D8E  C002  F08F         	movff	?___fltol+1,efgtoa@d+1
  3113  000D92                     
  3114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3115  000D92  C098  F038         	movff	efgtoa@h,___flsub@b
  3116  000D96  C099  F039         	movff	efgtoa@h+1,___flsub@b+1
  3117  000D9A  C09A  F03A         	movff	efgtoa@h+2,___flsub@b+2
  3118  000D9E  C09B  F03B         	movff	efgtoa@h+3,___flsub@b+3
  3119  000DA2  C0AA  F013         	movff	efgtoa@u,___flmul@a
  3120  000DA6  C0AB  F014         	movff	efgtoa@u+1,___flmul@a+1
  3121  000DAA  C0AC  F015         	movff	efgtoa@u+2,___flmul@a+2
  3122  000DAE  C0AD  F016         	movff	efgtoa@u+3,___flmul@a+3
  3123  000DB2  C09C  F00F         	movff	efgtoa@l,___flmul@b
  3124  000DB6  C09D  F010         	movff	efgtoa@l+1,___flmul@b+1
  3125  000DBA  C09E  F011         	movff	efgtoa@l+2,___flmul@b+2
  3126  000DBE  C09F  F012         	movff	efgtoa@l+3,___flmul@b+3
  3127  000DC2  EC0A  F00F         	call	___flmul	;wreg free
  3128  000DC6  C00F  F03C         	movff	?___flmul,___flsub@a
  3129  000DCA  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  3130  000DCE  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  3131  000DD2  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  3132  000DD6  EC9C  F01C         	call	___flsub	;wreg free
  3133  000DDA  C038  F098         	movff	?___flsub,efgtoa@h
  3134  000DDE  C039  F099         	movff	?___flsub+1,efgtoa@h+1
  3135  000DE2  C03A  F09A         	movff	?___flsub+2,efgtoa@h+2
  3136  000DE6  C03B  F09B         	movff	?___flsub+3,efgtoa@h+3
  3137  000DEA                     
  3138                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3139  000DEA  C0AA  F040         	movff	efgtoa@u,___fldiv@b
  3140  000DEE  C0AB  F041         	movff	efgtoa@u+1,___fldiv@b+1
  3141  000DF2  C0AC  F042         	movff	efgtoa@u+2,___fldiv@b+2
  3142  000DF6  C0AD  F043         	movff	efgtoa@u+3,___fldiv@b+3
  3143  000DFA  0E00               	movlw	0
  3144  000DFC  6E44               	movwf	___fldiv@a^0,c
  3145  000DFE  0E00               	movlw	0
  3146  000E00  6E45               	movwf	(___fldiv@a+1)^0,c
  3147  000E02  0E20               	movlw	32
  3148  000E04  6E46               	movwf	(___fldiv@a+2)^0,c
  3149  000E06  0E41               	movlw	65
  3150  000E08  6E47               	movwf	(___fldiv@a+3)^0,c
  3151  000E0A  EC1F  F011         	call	___fldiv	;wreg free
  3152  000E0E  C040  F0AA         	movff	?___fldiv,efgtoa@u
  3153  000E12  C041  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  3154  000E16  C042  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  3155  000E1A  C043  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  3156  000E1E                     
  3157                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3158  000E1E  0100               	movlb	0	; () banked
  3159  000E20  4BA0               	infsnz	efgtoa@i& (0+255),f,b
  3160  000E22  2BA1               	incf	(efgtoa@i+1)& (0+255),f,b
  3161  000E24                     l3512:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3165  000E24  5188               	movf	efgtoa@m& (0+255),w,b
  3166  000E26  5DA0               	subwf	efgtoa@i& (0+255),w,b
  3167  000E28  51A1               	movf	(efgtoa@i+1)& (0+255),w,b
  3168  000E2A  0A80               	xorlw	128
  3169  000E2C  6F77               	movwf	??_efgtoa& (0+255),b
  3170  000E2E  5189               	movf	(efgtoa@m+1)& (0+255),w,b
  3171  000E30  0A80               	xorlw	128
  3172  000E32  5977               	subwfb	??_efgtoa& (0+255),w,b
  3173  000E34  A0D8               	btfss	status,0,c
  3174  000E36  EF1F  F007         	goto	u4091
  3175  000E3A  EF21  F007         	goto	u4090
  3176  000E3E                     u4091:
  3177  000E3E  EF97  F006         	goto	l3504
  3178  000E42                     u4090:
  3179  000E42                     
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3182  000E42  C0AA  F00F         	movff	efgtoa@u,___flmul@b
  3183  000E46  C0AB  F010         	movff	efgtoa@u+1,___flmul@b+1
  3184  000E4A  C0AC  F011         	movff	efgtoa@u+2,___flmul@b+2
  3185  000E4E  C0AD  F012         	movff	efgtoa@u+3,___flmul@b+3
  3186  000E52  0E00               	movlw	0
  3187  000E54  6E13               	movwf	___flmul@a^0,c
  3188  000E56  0E00               	movlw	0
  3189  000E58  6E14               	movwf	(___flmul@a+1)^0,c
  3190  000E5A  0EA0               	movlw	160
  3191  000E5C  6E15               	movwf	(___flmul@a+2)^0,c
  3192  000E5E  0E40               	movlw	64
  3193  000E60  6E16               	movwf	(___flmul@a+3)^0,c
  3194  000E62  EC0A  F00F         	call	___flmul	;wreg free
  3195  000E66  C00F  F09C         	movff	?___flmul,efgtoa@l
  3196  000E6A  C010  F09D         	movff	?___flmul+1,efgtoa@l+1
  3197  000E6E  C011  F09E         	movff	?___flmul+2,efgtoa@l+2
  3198  000E72  C012  F09F         	movff	?___flmul+3,efgtoa@l+3
  3199  000E76                     
  3200                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3201  000E76  C098  F028         	movff	efgtoa@h,___flge@ff1
  3202  000E7A  C099  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3203  000E7E  C09A  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3204  000E82  C09B  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3205  000E86  C09C  F02C         	movff	efgtoa@l,___flge@ff2
  3206  000E8A  C09D  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3207  000E8E  C09E  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3208  000E92  C09F  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3209  000E96  EC9C  F017         	call	___flge	;wreg free
  3210  000E9A  B0D8               	btfsc	status,0,c
  3211  000E9C  EF52  F007         	goto	u4101
  3212  000EA0  EF54  F007         	goto	u4100
  3213  000EA4                     u4101:
  3214  000EA4  EF5F  F007         	goto	l3520
  3215  000EA8                     u4100:
  3216  000EA8                     
  3217                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3218  000EA8  0E00               	movlw	0
  3219  000EAA  0100               	movlb	0	; () banked
  3220  000EAC  6F9C               	movwf	efgtoa@l& (0+255),b
  3221  000EAE  0E00               	movlw	0
  3222  000EB0  6F9D               	movwf	(efgtoa@l+1)& (0+255),b
  3223  000EB2  0E00               	movlw	0
  3224  000EB4  6F9E               	movwf	(efgtoa@l+2)& (0+255),b
  3225  000EB6  0E00               	movlw	0
  3226  000EB8  6F9F               	movwf	(efgtoa@l+3)& (0+255),b
  3227                           
  3228                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  3229  000EBA  EF88  F007         	goto	l3526
  3230  000EBE                     l3520:
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3233  000EBE  C098  F001         	movff	efgtoa@h,___fleq@ff1
  3234  000EC2  C099  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3235  000EC6  C09A  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3236  000ECA  C09B  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3237  000ECE  C09C  F005         	movff	efgtoa@l,___fleq@ff2
  3238  000ED2  C09D  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3239  000ED6  C09E  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3240  000EDA  C09F  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3241  000EDE  ECFE  F01A         	call	___fleq	;wreg free
  3242  000EE2  A0D8               	btfss	status,0,c
  3243  000EE4  EF76  F007         	goto	u4111
  3244  000EE8  EF78  F007         	goto	u4110
  3245  000EEC                     u4111:
  3246  000EEC  EF88  F007         	goto	l3526
  3247  000EF0                     u4110:
  3248  000EF0  0100               	movlb	0	; () banked
  3249  000EF2  B18E               	btfsc	efgtoa@d& (0+255),0,b
  3250  000EF4  EF7E  F007         	goto	u4121
  3251  000EF8  EF80  F007         	goto	u4120
  3252  000EFC                     u4121:
  3253  000EFC  EF88  F007         	goto	l3526
  3254  000F00                     u4120:
  3255  000F00                     
  3256                           ; BSR set to: 0
  3257                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3258  000F00  0E00               	movlw	0
  3259  000F02  6F9C               	movwf	efgtoa@l& (0+255),b
  3260  000F04  0E00               	movlw	0
  3261  000F06  6F9D               	movwf	(efgtoa@l+1)& (0+255),b
  3262  000F08  0E00               	movlw	0
  3263  000F0A  6F9E               	movwf	(efgtoa@l+2)& (0+255),b
  3264  000F0C  0E00               	movlw	0
  3265  000F0E  6F9F               	movwf	(efgtoa@l+3)& (0+255),b
  3266  000F10                     l3526:
  3267                           
  3268                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3269  000F10  C0A2  F028         	movff	efgtoa@g,___fladd@b
  3270  000F14  C0A3  F029         	movff	efgtoa@g+1,___fladd@b+1
  3271  000F18  C0A4  F02A         	movff	efgtoa@g+2,___fladd@b+2
  3272  000F1C  C0A5  F02B         	movff	efgtoa@g+3,___fladd@b+3
  3273  000F20  C09C  F02C         	movff	efgtoa@l,___fladd@a
  3274  000F24  C09D  F02D         	movff	efgtoa@l+1,___fladd@a+1
  3275  000F28  C09E  F02E         	movff	efgtoa@l+2,___fladd@a+2
  3276  000F2C  C09F  F02F         	movff	efgtoa@l+3,___fladd@a+3
  3277  000F30  ECAA  F00C         	call	___fladd	;wreg free
  3278  000F34  C028  F098         	movff	?___fladd,efgtoa@h
  3279  000F38  C029  F099         	movff	?___fladd+1,efgtoa@h+1
  3280  000F3C  C02A  F09A         	movff	?___fladd+2,efgtoa@h+2
  3281  000F40  C02B  F09B         	movff	?___fladd+3,efgtoa@h+3
  3282  000F44                     
  3283                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3284  000F44  C098  F028         	movff	efgtoa@h,___flge@ff1
  3285  000F48  C099  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3286  000F4C  C09A  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3287  000F50  C09B  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3288  000F54  0E00               	movlw	0
  3289  000F56  6E13               	movwf	___flmul@a^0,c
  3290  000F58  0E00               	movlw	0
  3291  000F5A  6E14               	movwf	(___flmul@a+1)^0,c
  3292  000F5C  0E20               	movlw	32
  3293  000F5E  6E15               	movwf	(___flmul@a+2)^0,c
  3294  000F60  0E41               	movlw	65
  3295  000F62  6E16               	movwf	(___flmul@a+3)^0,c
  3296  000F64  C08A  F00F         	movff	efgtoa@ou,___flmul@b
  3297  000F68  C08B  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3298  000F6C  C08C  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3299  000F70  C08D  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3300  000F74  EC0A  F00F         	call	___flmul	;wreg free
  3301  000F78  C00F  F02C         	movff	?___flmul,___flge@ff2
  3302  000F7C  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3303  000F80  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3304  000F84  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3305  000F88  EC9C  F017         	call	___flge	;wreg free
  3306  000F8C  A0D8               	btfss	status,0,c
  3307  000F8E  EFCB  F007         	goto	u4131
  3308  000F92  EFCD  F007         	goto	u4130
  3309  000F96                     u4131:
  3310  000F96  EFF6  F007         	goto	l3538
  3311  000F9A                     u4130:
  3312  000F9A                     
  3313                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3314  000F9A  0100               	movlb	0	; () banked
  3315  000F9C  4BA6               	infsnz	efgtoa@e& (0+255),f,b
  3316  000F9E  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  3317  000FA0                     
  3318                           ; BSR set to: 0
  3319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3320  000FA0  C08A  F00F         	movff	efgtoa@ou,___flmul@b
  3321  000FA4  C08B  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3322  000FA8  C08C  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3323  000FAC  C08D  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3324  000FB0  0E00               	movlw	0
  3325  000FB2  6E13               	movwf	___flmul@a^0,c
  3326  000FB4  0E00               	movlw	0
  3327  000FB6  6E14               	movwf	(___flmul@a+1)^0,c
  3328  000FB8  0E20               	movlw	32
  3329  000FBA  6E15               	movwf	(___flmul@a+2)^0,c
  3330  000FBC  0E41               	movlw	65
  3331  000FBE  6E16               	movwf	(___flmul@a+3)^0,c
  3332  000FC0  EC0A  F00F         	call	___flmul	;wreg free
  3333  000FC4  C00F  F08A         	movff	?___flmul,efgtoa@ou
  3334  000FC8  C010  F08B         	movff	?___flmul+1,efgtoa@ou+1
  3335  000FCC  C011  F08C         	movff	?___flmul+2,efgtoa@ou+2
  3336  000FD0  C012  F08D         	movff	?___flmul+3,efgtoa@ou+3
  3337  000FD4                     
  3338                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3339  000FD4  0E66               	movlw	102
  3340  000FD6  0100               	movlb	0	; () banked
  3341  000FD8  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3342  000FDA  A4D8               	btfss	status,2,c
  3343  000FDC  EFF2  F007         	goto	u4141
  3344  000FE0  EFF4  F007         	goto	u4140
  3345  000FE4                     u4141:
  3346  000FE4  EFF6  F007         	goto	l3538
  3347  000FE8                     u4140:
  3348  000FE8                     
  3349                           ; BSR set to: 0
  3350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3351  000FE8  4B88               	infsnz	efgtoa@m& (0+255),f,b
  3352  000FEA  2B89               	incf	(efgtoa@m+1)& (0+255),f,b
  3353  000FEC                     l3538:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3356  000FEC  C08A  F0AA         	movff	efgtoa@ou,efgtoa@u
  3357  000FF0  C08B  F0AB         	movff	efgtoa@ou+1,efgtoa@u+1
  3358  000FF4  C08C  F0AC         	movff	efgtoa@ou+2,efgtoa@u+2
  3359  000FF8  C08D  F0AD         	movff	efgtoa@ou+3,efgtoa@u+3
  3360  000FFC                     
  3361                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3362  000FFC  0E65               	movlw	101
  3363  000FFE  0100               	movlb	0	; () banked
  3364  001000  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3365  001002  B4D8               	btfsc	status,2,c
  3366  001004  EF06  F008         	goto	u4151
  3367  001008  EF08  F008         	goto	u4150
  3368  00100C                     u4151:
  3369  00100C  EF0E  F008         	goto	l3544
  3370  001010                     u4150:
  3371  001010                     
  3372                           ; BSR set to: 0
  3373  001010  C0A6  F086         	movff	efgtoa@e,efgtoa@ne
  3374  001014  C0A7  F087         	movff	efgtoa@e+1,efgtoa@ne+1
  3375  001018  EF12  F008         	goto	l902
  3376  00101C                     l3544:
  3377                           
  3378                           ; BSR set to: 0
  3379  00101C  0E00               	movlw	0
  3380  00101E  6F87               	movwf	(efgtoa@ne+1)& (0+255),b
  3381  001020  0E00               	movlw	0
  3382  001022  6F86               	movwf	efgtoa@ne& (0+255),b
  3383  001024                     l902:
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3387  001024  0E00               	movlw	0
  3388  001026  6F85               	movwf	(efgtoa@pp+1)& (0+255),b
  3389  001028  0E00               	movlw	0
  3390  00102A  6F84               	movwf	efgtoa@pp& (0+255),b
  3391                           
  3392                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3393  00102C  0E00               	movlw	0
  3394  00102E  6F83               	movwf	(efgtoa@t+1)& (0+255),b
  3395  001030  0E00               	movlw	0
  3396  001032  6F82               	movwf	efgtoa@t& (0+255),b
  3397                           
  3398                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3399  001034  0E00               	movlw	0
  3400  001036  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  3401  001038  0E00               	movlw	0
  3402  00103A  6FA0               	movwf	efgtoa@i& (0+255),b
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3405  00103C  EF0D  F009         	goto	l3594
  3406  001040                     l3546:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3410  001040  C098  F040         	movff	efgtoa@h,___fldiv@b
  3411  001044  C099  F041         	movff	efgtoa@h+1,___fldiv@b+1
  3412  001048  C09A  F042         	movff	efgtoa@h+2,___fldiv@b+2
  3413  00104C  C09B  F043         	movff	efgtoa@h+3,___fldiv@b+3
  3414  001050  C0AA  F044         	movff	efgtoa@u,___fldiv@a
  3415  001054  C0AB  F045         	movff	efgtoa@u+1,___fldiv@a+1
  3416  001058  C0AC  F046         	movff	efgtoa@u+2,___fldiv@a+2
  3417  00105C  C0AD  F047         	movff	efgtoa@u+3,___fldiv@a+3
  3418  001060  EC1F  F011         	call	___fldiv	;wreg free
  3419  001064  C040  F059         	movff	?___fldiv,floorf@x
  3420  001068  C041  F05A         	movff	?___fldiv+1,floorf@x+1
  3421  00106C  C042  F05B         	movff	?___fldiv+2,floorf@x+2
  3422  001070  C043  F05C         	movff	?___fldiv+3,floorf@x+3
  3423  001074  ECEC  F012         	call	_floorf	;wreg free
  3424  001078  C059  F09C         	movff	?_floorf,efgtoa@l
  3425  00107C  C05A  F09D         	movff	?_floorf+1,efgtoa@l+1
  3426  001080  C05B  F09E         	movff	?_floorf+2,efgtoa@l+2
  3427  001084  C05C  F09F         	movff	?_floorf+3,efgtoa@l+3
  3428                           
  3429                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3430  001088  C09C  F001         	movff	efgtoa@l,___fltol@f1
  3431  00108C  C09D  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3432  001090  C09E  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3433  001094  C09F  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3434  001098  EC19  F017         	call	___fltol	;wreg free
  3435  00109C  C001  F08E         	movff	?___fltol,efgtoa@d
  3436  0010A0  C002  F08F         	movff	?___fltol+1,efgtoa@d+1
  3437  0010A4                     
  3438                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3439  0010A4  0100               	movlb	0	; () banked
  3440  0010A6  B9FB               	btfsc	_flags& (0+255),4,b
  3441  0010A8  EF58  F008         	goto	u4161
  3442  0010AC  EF5A  F008         	goto	u4160
  3443  0010B0                     u4161:
  3444  0010B0  EF77  F008         	goto	l3558
  3445  0010B4                     u4160:
  3446  0010B4                     
  3447                           ; BSR set to: 0
  3448  0010B4  518E               	movf	efgtoa@d& (0+255),w,b
  3449  0010B6  118F               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3450  0010B8  A4D8               	btfss	status,2,c
  3451  0010BA  EF61  F008         	goto	u4171
  3452  0010BE  EF63  F008         	goto	u4170
  3453  0010C2                     u4171:
  3454  0010C2  EF77  F008         	goto	l3558
  3455  0010C6                     u4170:
  3456  0010C6                     
  3457                           ; BSR set to: 0
  3458  0010C6  0E67               	movlw	103
  3459  0010C8  1997               	xorwf	efgtoa@mode& (0+255),w,b
  3460  0010CA  A4D8               	btfss	status,2,c
  3461  0010CC  EF6A  F008         	goto	u4181
  3462  0010D0  EF6C  F008         	goto	u4180
  3463  0010D4                     u4181:
  3464  0010D4  EF77  F008         	goto	l3558
  3465  0010D8                     u4180:
  3466  0010D8                     
  3467                           ; BSR set to: 0
  3468  0010D8  BF87               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3469  0010DA  EF73  F008         	goto	u4190
  3470  0010DE  EF71  F008         	goto	u4191
  3471  0010E2                     u4191:
  3472  0010E2  EF77  F008         	goto	l3558
  3473  0010E6                     u4190:
  3474  0010E6                     
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3477  0010E6  4B82               	infsnz	efgtoa@t& (0+255),f,b
  3478  0010E8  2B83               	incf	(efgtoa@t+1)& (0+255),f,b
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3481  0010EA  EFC1  F008         	goto	l3586
  3482  0010EE                     l3558:
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3486  0010EE  5184               	movf	efgtoa@pp& (0+255),w,b
  3487  0010F0  1185               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3488  0010F2  A4D8               	btfss	status,2,c
  3489  0010F4  EF7E  F008         	goto	u4201
  3490  0010F8  EF80  F008         	goto	u4200
  3491  0010FC                     u4201:
  3492  0010FC  EFAA  F008         	goto	l3578
  3493  001100                     u4200:
  3494  001100                     
  3495                           ; BSR set to: 0
  3496  001100  BF87               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3497  001102  EF87  F008         	goto	u4210
  3498  001106  EF85  F008         	goto	u4211
  3499  00110A                     u4211:
  3500  00110A  EFAA  F008         	goto	l3578
  3501  00110E                     u4210:
  3502  00110E                     
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3505  00110E  0E0C               	movlw	low _dbuf
  3506  001110  25A8               	addwf	efgtoa@n& (0+255),w,b
  3507  001112  6ED9               	movwf	fsr2l,c
  3508  001114  0E01               	movlw	high _dbuf
  3509  001116  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3510  001118  6EDA               	movwf	fsr2h,c
  3511  00111A  0E2E               	movlw	46
  3512  00111C  6EDF               	movwf	indf2,c
  3513  00111E                     
  3514                           ; BSR set to: 0
  3515  00111E  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  3516  001120  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  3517  001122                     
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3520  001122  0794               	decf	efgtoa@w& (0+255),f,b
  3521  001124  A0D8               	btfss	status,0,c
  3522  001126  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3523  001128                     
  3524                           ; BSR set to: 0
  3525                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3526  001128  0E00               	movlw	0
  3527  00112A  6F85               	movwf	(efgtoa@pp+1)& (0+255),b
  3528  00112C  0E01               	movlw	1
  3529  00112E  6F84               	movwf	efgtoa@pp& (0+255),b
  3530  001130  EFAA  F008         	goto	l3578
  3531  001134                     l3570:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3535  001134  0E0C               	movlw	low _dbuf
  3536  001136  25A8               	addwf	efgtoa@n& (0+255),w,b
  3537  001138  6ED9               	movwf	fsr2l,c
  3538  00113A  0E01               	movlw	high _dbuf
  3539  00113C  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3540  00113E  6EDA               	movwf	fsr2h,c
  3541  001140  0E30               	movlw	48
  3542  001142  6EDF               	movwf	indf2,c
  3543  001144                     
  3544                           ; BSR set to: 0
  3545  001144  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  3546  001146  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  3547  001148                     
  3548                           ; BSR set to: 0
  3549                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3550  001148  0794               	decf	efgtoa@w& (0+255),f,b
  3551  00114A  A0D8               	btfss	status,0,c
  3552  00114C  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3553  00114E                     
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3556  00114E  0782               	decf	efgtoa@t& (0+255),f,b
  3557  001150  A0D8               	btfss	status,0,c
  3558  001152  0783               	decf	(efgtoa@t+1)& (0+255),f,b
  3559  001154                     l3578:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3563  001154  5182               	movf	efgtoa@t& (0+255),w,b
  3564  001156  1183               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3565  001158  A4D8               	btfss	status,2,c
  3566  00115A  EFB1  F008         	goto	u4221
  3567  00115E  EFB3  F008         	goto	u4220
  3568  001162                     u4221:
  3569  001162  EF9A  F008         	goto	l3570
  3570  001166                     u4220:
  3571  001166                     
  3572                           ; BSR set to: 0
  3573                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3574  001166  0E0C               	movlw	low _dbuf
  3575  001168  25A8               	addwf	efgtoa@n& (0+255),w,b
  3576  00116A  6ED9               	movwf	fsr2l,c
  3577  00116C  0E01               	movlw	high _dbuf
  3578  00116E  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3579  001170  6EDA               	movwf	fsr2h,c
  3580  001172  518E               	movf	efgtoa@d& (0+255),w,b
  3581  001174  0F30               	addlw	48
  3582  001176  6EDF               	movwf	indf2,c
  3583  001178                     
  3584                           ; BSR set to: 0
  3585  001178  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  3586  00117A  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  3587  00117C                     
  3588                           ; BSR set to: 0
  3589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3590  00117C  0794               	decf	efgtoa@w& (0+255),f,b
  3591  00117E  A0D8               	btfss	status,0,c
  3592  001180  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3593  001182                     l3586:
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3597  001182  C098  F038         	movff	efgtoa@h,___flsub@b
  3598  001186  C099  F039         	movff	efgtoa@h+1,___flsub@b+1
  3599  00118A  C09A  F03A         	movff	efgtoa@h+2,___flsub@b+2
  3600  00118E  C09B  F03B         	movff	efgtoa@h+3,___flsub@b+3
  3601  001192  C0AA  F013         	movff	efgtoa@u,___flmul@a
  3602  001196  C0AB  F014         	movff	efgtoa@u+1,___flmul@a+1
  3603  00119A  C0AC  F015         	movff	efgtoa@u+2,___flmul@a+2
  3604  00119E  C0AD  F016         	movff	efgtoa@u+3,___flmul@a+3
  3605  0011A2  C09C  F00F         	movff	efgtoa@l,___flmul@b
  3606  0011A6  C09D  F010         	movff	efgtoa@l+1,___flmul@b+1
  3607  0011AA  C09E  F011         	movff	efgtoa@l+2,___flmul@b+2
  3608  0011AE  C09F  F012         	movff	efgtoa@l+3,___flmul@b+3
  3609  0011B2  EC0A  F00F         	call	___flmul	;wreg free
  3610  0011B6  C00F  F03C         	movff	?___flmul,___flsub@a
  3611  0011BA  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  3612  0011BE  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  3613  0011C2  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  3614  0011C6  EC9C  F01C         	call	___flsub	;wreg free
  3615  0011CA  C038  F098         	movff	?___flsub,efgtoa@h
  3616  0011CE  C039  F099         	movff	?___flsub+1,efgtoa@h+1
  3617  0011D2  C03A  F09A         	movff	?___flsub+2,efgtoa@h+2
  3618  0011D6  C03B  F09B         	movff	?___flsub+3,efgtoa@h+3
  3619  0011DA                     
  3620                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3621  0011DA  C0AA  F040         	movff	efgtoa@u,___fldiv@b
  3622  0011DE  C0AB  F041         	movff	efgtoa@u+1,___fldiv@b+1
  3623  0011E2  C0AC  F042         	movff	efgtoa@u+2,___fldiv@b+2
  3624  0011E6  C0AD  F043         	movff	efgtoa@u+3,___fldiv@b+3
  3625  0011EA  0E00               	movlw	0
  3626  0011EC  6E44               	movwf	___fldiv@a^0,c
  3627  0011EE  0E00               	movlw	0
  3628  0011F0  6E45               	movwf	(___fldiv@a+1)^0,c
  3629  0011F2  0E20               	movlw	32
  3630  0011F4  6E46               	movwf	(___fldiv@a+2)^0,c
  3631  0011F6  0E41               	movlw	65
  3632  0011F8  6E47               	movwf	(___fldiv@a+3)^0,c
  3633  0011FA  EC1F  F011         	call	___fldiv	;wreg free
  3634  0011FE  C040  F0AA         	movff	?___fldiv,efgtoa@u
  3635  001202  C041  F0AB         	movff	?___fldiv+1,efgtoa@u+1
  3636  001206  C042  F0AC         	movff	?___fldiv+2,efgtoa@u+2
  3637  00120A  C043  F0AD         	movff	?___fldiv+3,efgtoa@u+3
  3638  00120E                     
  3639                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3640  00120E  0100               	movlb	0	; () banked
  3641  001210  0786               	decf	efgtoa@ne& (0+255),f,b
  3642  001212  A0D8               	btfss	status,0,c
  3643  001214  0787               	decf	(efgtoa@ne+1)& (0+255),f,b
  3644  001216                     
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3647  001216  4BA0               	infsnz	efgtoa@i& (0+255),f,b
  3648  001218  2BA1               	incf	(efgtoa@i+1)& (0+255),f,b
  3649  00121A                     l3594:
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3653  00121A  5188               	movf	efgtoa@m& (0+255),w,b
  3654  00121C  5DA0               	subwf	efgtoa@i& (0+255),w,b
  3655  00121E  51A1               	movf	(efgtoa@i+1)& (0+255),w,b
  3656  001220  0A80               	xorlw	128
  3657  001222  6F77               	movwf	??_efgtoa& (0+255),b
  3658  001224  5189               	movf	(efgtoa@m+1)& (0+255),w,b
  3659  001226  0A80               	xorlw	128
  3660  001228  5977               	subwfb	??_efgtoa& (0+255),w,b
  3661  00122A  B0D8               	btfsc	status,0,c
  3662  00122C  EF1A  F009         	goto	u4231
  3663  001230  EF1C  F009         	goto	u4230
  3664  001234                     u4231:
  3665  001234  EF2A  F009         	goto	l3598
  3666  001238                     u4230:
  3667  001238                     
  3668                           ; BSR set to: 0
  3669  001238  BFA9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3670  00123A  EF28  F009         	goto	u4241
  3671  00123E  51A9               	movf	(efgtoa@n+1)& (0+255),w,b
  3672  001240  E109               	bnz	u4240
  3673  001242  0E4B               	movlw	75
  3674  001244  5DA8               	subwf	efgtoa@n& (0+255),w,b
  3675  001246  A0D8               	btfss	status,0,c
  3676  001248  EF28  F009         	goto	u4241
  3677  00124C  EF2A  F009         	goto	u4240
  3678  001250                     u4241:
  3679  001250  EF20  F008         	goto	l3546
  3680  001254                     u4240:
  3681  001254                     l3598:
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3685  001254  5184               	movf	efgtoa@pp& (0+255),w,b
  3686  001256  1185               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3687  001258  A4D8               	btfss	status,2,c
  3688  00125A  EF31  F009         	goto	u4251
  3689  00125E  EF33  F009         	goto	u4250
  3690  001262                     u4251:
  3691  001262  EF44  F009         	goto	l3606
  3692  001266                     u4250:
  3693  001266                     
  3694                           ; BSR set to: 0
  3695  001266  A9FB               	btfss	_flags& (0+255),4,b
  3696  001268  EF38  F009         	goto	u4261
  3697  00126C  EF3A  F009         	goto	u4260
  3698  001270                     u4261:
  3699  001270  EF44  F009         	goto	l3606
  3700  001274                     u4260:
  3701  001274                     
  3702                           ; BSR set to: 0
  3703                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3704  001274  0E0C               	movlw	low _dbuf
  3705  001276  25A8               	addwf	efgtoa@n& (0+255),w,b
  3706  001278  6ED9               	movwf	fsr2l,c
  3707  00127A  0E01               	movlw	high _dbuf
  3708  00127C  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3709  00127E  6EDA               	movwf	fsr2h,c
  3710  001280  0E2E               	movlw	46
  3711  001282  6EDF               	movwf	indf2,c
  3712  001284                     
  3713                           ; BSR set to: 0
  3714  001284  4BA8               	infsnz	efgtoa@n& (0+255),f,b
  3715  001286  2BA9               	incf	(efgtoa@n+1)& (0+255),f,b
  3716  001288                     l3606:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3720  001288  0E0C               	movlw	low _dbuf
  3721  00128A  25A8               	addwf	efgtoa@n& (0+255),w,b
  3722  00128C  6ED9               	movwf	fsr2l,c
  3723  00128E  0E01               	movlw	high _dbuf
  3724  001290  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3725  001292  6EDA               	movwf	fsr2h,c
  3726  001294  0E00               	movlw	0
  3727  001296  6EDF               	movwf	indf2,c
  3728  001298                     
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3731  001298  0E65               	movlw	101
  3732  00129A  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3733  00129C  A4D8               	btfss	status,2,c
  3734  00129E  EF53  F009         	goto	u4271
  3735  0012A2  EF55  F009         	goto	u4270
  3736  0012A6                     u4271:
  3737  0012A6  EFBC  F004         	goto	l3408
  3738  0012AA                     u4270:
  3739  0012AA                     
  3740                           ; BSR set to: 0
  3741                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3742  0012AA  0E00               	movlw	0
  3743  0012AC  6FA1               	movwf	(efgtoa@i+1)& (0+255),b
  3744  0012AE  0E4F               	movlw	79
  3745  0012B0  6FA0               	movwf	efgtoa@i& (0+255),b
  3746  0012B2                     
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3749  0012B2  0E0C               	movlw	low _dbuf
  3750  0012B4  25A0               	addwf	efgtoa@i& (0+255),w,b
  3751  0012B6  6ED9               	movwf	fsr2l,c
  3752  0012B8  0E01               	movlw	high _dbuf
  3753  0012BA  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3754  0012BC  6EDA               	movwf	fsr2h,c
  3755  0012BE  0E00               	movlw	0
  3756  0012C0  6EDF               	movwf	indf2,c
  3757  0012C2                     
  3758                           ; BSR set to: 0
  3759                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3760  0012C2  0E00               	movlw	0
  3761  0012C4  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  3762  0012C6  0E00               	movlw	0
  3763  0012C8  6F90               	movwf	efgtoa@sign& (0+255),b
  3764  0012CA                     
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3767  0012CA  BFA7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3768  0012CC  EF6C  F009         	goto	u4280
  3769  0012D0  EF6A  F009         	goto	u4281
  3770  0012D4                     u4281:
  3771  0012D4  EF74  F009         	goto	l3622
  3772  0012D8                     u4280:
  3773  0012D8                     
  3774                           ; BSR set to: 0
  3775                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3776  0012D8  0E00               	movlw	0
  3777  0012DA  6F91               	movwf	(efgtoa@sign+1)& (0+255),b
  3778  0012DC  0E01               	movlw	1
  3779  0012DE  6F90               	movwf	efgtoa@sign& (0+255),b
  3780  0012E0                     
  3781                           ; BSR set to: 0
  3782                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3783  0012E0  6DA6               	negf	efgtoa@e& (0+255),b
  3784  0012E2  1FA7               	comf	(efgtoa@e+1)& (0+255),f,b
  3785  0012E4  B0D8               	btfsc	status,0,c
  3786  0012E6  2BA7               	incf	(efgtoa@e+1)& (0+255),f,b
  3787  0012E8                     l3622:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3791  0012E8  0E00               	movlw	0
  3792  0012EA  6F93               	movwf	(efgtoa@p+1)& (0+255),b
  3793  0012EC  0E02               	movlw	2
  3794  0012EE  6F92               	movwf	efgtoa@p& (0+255),b
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3797  0012F0  EFA5  F009         	goto	l3634
  3798  0012F4                     l3624:
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3802  0012F4  07A0               	decf	efgtoa@i& (0+255),f,b
  3803  0012F6  A0D8               	btfss	status,0,c
  3804  0012F8  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  3805  0012FA                     
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3808  0012FA  0E0C               	movlw	low _dbuf
  3809  0012FC  25A0               	addwf	efgtoa@i& (0+255),w,b
  3810  0012FE  6ED9               	movwf	fsr2l,c
  3811  001300  0E01               	movlw	high _dbuf
  3812  001302  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3813  001304  6EDA               	movwf	fsr2h,c
  3814  001306  C0A6  F001         	movff	efgtoa@e,___awmod@dividend
  3815  00130A  C0A7  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3816  00130E  0E00               	movlw	0
  3817  001310  6E04               	movwf	(___awmod@divisor+1)^0,c
  3818  001312  0E0A               	movlw	10
  3819  001314  6E03               	movwf	___awmod@divisor^0,c
  3820  001316  ECA6  F01A         	call	___awmod	;wreg free
  3821  00131A  5001               	movf	?___awmod^0,w,c
  3822  00131C  0F30               	addlw	48
  3823  00131E  6EDF               	movwf	indf2,c
  3824  001320                     
  3825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3826  001320  C0A6  F001         	movff	efgtoa@e,___awdiv@dividend
  3827  001324  C0A7  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3828  001328  0E00               	movlw	0
  3829  00132A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3830  00132C  0E0A               	movlw	10
  3831  00132E  6E03               	movwf	___awdiv@divisor^0,c
  3832  001330  EC44  F01A         	call	___awdiv	;wreg free
  3833  001334  C001  F0A6         	movff	?___awdiv,efgtoa@e
  3834  001338  C002  F0A7         	movff	?___awdiv+1,efgtoa@e+1
  3835  00133C                     
  3836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3837  00133C  0100               	movlb	0	; () banked
  3838  00133E  0792               	decf	efgtoa@p& (0+255),f,b
  3839  001340  A0D8               	btfss	status,0,c
  3840  001342  0793               	decf	(efgtoa@p+1)& (0+255),f,b
  3841  001344                     
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3844  001344  0794               	decf	efgtoa@w& (0+255),f,b
  3845  001346  A0D8               	btfss	status,0,c
  3846  001348  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3847  00134A                     l3634:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3851  00134A  51A6               	movf	efgtoa@e& (0+255),w,b
  3852  00134C  11A7               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3853  00134E  A4D8               	btfss	status,2,c
  3854  001350  EFAC  F009         	goto	u4291
  3855  001354  EFAE  F009         	goto	u4290
  3856  001358                     u4291:
  3857  001358  EF7A  F009         	goto	l3624
  3858  00135C                     u4290:
  3859  00135C                     
  3860                           ; BSR set to: 0
  3861  00135C  BF93               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3862  00135E  EFBB  F009         	goto	u4300
  3863  001362  5193               	movf	(efgtoa@p+1)& (0+255),w,b
  3864  001364  E106               	bnz	u4301
  3865  001366  0592               	decf	efgtoa@p& (0+255),w,b
  3866  001368  B0D8               	btfsc	status,0,c
  3867  00136A  EFB9  F009         	goto	u4301
  3868  00136E  EFBB  F009         	goto	u4300
  3869  001372                     u4301:
  3870  001372  EF7A  F009         	goto	l3624
  3871  001376                     u4300:
  3872  001376                     
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  3875  001376  07A0               	decf	efgtoa@i& (0+255),f,b
  3876  001378  A0D8               	btfss	status,0,c
  3877  00137A  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  3878  00137C                     
  3879                           ; BSR set to: 0
  3880                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3881  00137C  5190               	movf	efgtoa@sign& (0+255),w,b
  3882  00137E  1191               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3883  001380  A4D8               	btfss	status,2,c
  3884  001382  EFC5  F009         	goto	u4311
  3885  001386  EFC7  F009         	goto	u4310
  3886  00138A                     u4311:
  3887  00138A  EFCD  F009         	goto	l3644
  3888  00138E                     u4310:
  3889  00138E                     
  3890                           ; BSR set to: 0
  3891  00138E  0E00               	movlw	0
  3892  001390  6F7F               	movwf	(_efgtoa$960+1)& (0+255),b
  3893  001392  0E2B               	movlw	43
  3894  001394  6F7E               	movwf	_efgtoa$960& (0+255),b
  3895  001396  EFD1  F009         	goto	l3646
  3896  00139A                     l3644:
  3897                           
  3898                           ; BSR set to: 0
  3899  00139A  0E00               	movlw	0
  3900  00139C  6F7F               	movwf	(_efgtoa$960+1)& (0+255),b
  3901  00139E  0E2D               	movlw	45
  3902  0013A0  6F7E               	movwf	_efgtoa$960& (0+255),b
  3903  0013A2                     l3646:
  3904                           
  3905                           ; BSR set to: 0
  3906  0013A2  0E0C               	movlw	low _dbuf
  3907  0013A4  25A0               	addwf	efgtoa@i& (0+255),w,b
  3908  0013A6  6ED9               	movwf	fsr2l,c
  3909  0013A8  0E01               	movlw	high _dbuf
  3910  0013AA  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3911  0013AC  6EDA               	movwf	fsr2h,c
  3912  0013AE  C07E  FFDF         	movff	_efgtoa$960,indf2
  3913  0013B2                     
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  3916  0013B2  0794               	decf	efgtoa@w& (0+255),f,b
  3917  0013B4  A0D8               	btfss	status,0,c
  3918  0013B6  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3919  0013B8                     
  3920                           ; BSR set to: 0
  3921                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  3922  0013B8  07A0               	decf	efgtoa@i& (0+255),f,b
  3923  0013BA  A0D8               	btfss	status,0,c
  3924  0013BC  07A1               	decf	(efgtoa@i+1)& (0+255),f,b
  3925  0013BE                     
  3926                           ; BSR set to: 0
  3927  0013BE  0EBF               	movlw	191
  3928  0013C0  6F77               	movwf	??_efgtoa& (0+255),b
  3929  0013C2  0EFF               	movlw	255
  3930  0013C4  6F78               	movwf	(??_efgtoa+1)& (0+255),b
  3931  0013C6  5176               	movf	efgtoa@c& (0+255),w,b
  3932  0013C8  6F79               	movwf	(??_efgtoa+2)& (0+255),b
  3933  0013CA  6B7A               	clrf	(??_efgtoa+3)& (0+255),b
  3934  0013CC  5177               	movf	??_efgtoa& (0+255),w,b
  3935  0013CE  2779               	addwf	(??_efgtoa+2)& (0+255),f,b
  3936  0013D0  5178               	movf	(??_efgtoa+1)& (0+255),w,b
  3937  0013D2  237A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3938  0013D4  517A               	movf	(??_efgtoa+3)& (0+255),w,b
  3939  0013D6  E109               	bnz	u4320
  3940  0013D8  0E1A               	movlw	26
  3941  0013DA  5D79               	subwf	(??_efgtoa+2)& (0+255),w,b
  3942  0013DC  A0D8               	btfss	status,0,c
  3943  0013DE  EFF3  F009         	goto	u4321
  3944  0013E2  EFF5  F009         	goto	u4320
  3945  0013E6                     u4321:
  3946  0013E6  EFFB  F009         	goto	l3658
  3947  0013EA                     u4320:
  3948  0013EA                     
  3949                           ; BSR set to: 0
  3950  0013EA  0E00               	movlw	0
  3951  0013EC  6F81               	movwf	(_efgtoa$961+1)& (0+255),b
  3952  0013EE  0E65               	movlw	101
  3953  0013F0  6F80               	movwf	_efgtoa$961& (0+255),b
  3954  0013F2  EFFF  F009         	goto	l3660
  3955  0013F6                     l3658:
  3956                           
  3957                           ; BSR set to: 0
  3958  0013F6  0E00               	movlw	0
  3959  0013F8  6F81               	movwf	(_efgtoa$961+1)& (0+255),b
  3960  0013FA  0E45               	movlw	69
  3961  0013FC  6F80               	movwf	_efgtoa$961& (0+255),b
  3962  0013FE                     l3660:
  3963                           
  3964                           ; BSR set to: 0
  3965  0013FE  0E0C               	movlw	low _dbuf
  3966  001400  25A0               	addwf	efgtoa@i& (0+255),w,b
  3967  001402  6ED9               	movwf	fsr2l,c
  3968  001404  0E01               	movlw	high _dbuf
  3969  001406  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3970  001408  6EDA               	movwf	fsr2h,c
  3971  00140A  C080  FFDF         	movff	_efgtoa$961,indf2
  3972  00140E                     
  3973                           ; BSR set to: 0
  3974                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  3975  00140E  0794               	decf	efgtoa@w& (0+255),f,b
  3976  001410  A0D8               	btfss	status,0,c
  3977  001412  0795               	decf	(efgtoa@w+1)& (0+255),f,b
  3978  001414                     
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3981  001414  0E0C               	movlw	low _dbuf
  3982  001416  25A8               	addwf	efgtoa@n& (0+255),w,b
  3983  001418  6E01               	movwf	strcpy@dest^0,c
  3984  00141A  0E01               	movlw	high _dbuf
  3985  00141C  21A9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3986  00141E  6E02               	movwf	(strcpy@dest+1)^0,c
  3987  001420  0E0C               	movlw	low _dbuf
  3988  001422  25A0               	addwf	efgtoa@i& (0+255),w,b
  3989  001424  6E03               	movwf	strcpy@src^0,c
  3990  001426  0E01               	movlw	high _dbuf
  3991  001428  21A1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3992  00142A  6E04               	movwf	(strcpy@src+1)^0,c
  3993  00142C  ECD6  F01B         	call	_strcpy	;wreg free
  3994  001430  EFBC  F004         	goto	l3408
  3995  001434                     l858:
  3996  001434  0012               	return		;funcret
  3997  001436                     __end_of_efgtoa:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _tolower *****************
  4001 ;; Defined at:
  4002 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  c               2    6[COMRAM] int 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  2    6[COMRAM] int 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4016 ;;      Params:         2       0       0       0       0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4018 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4019 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4020 ;;Total ram usage:        6 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 2
  4023 ;; This function calls:
  4024 ;;		_isupper
  4025 ;; This function is called by:
  4026 ;;		_efgtoa
  4027 ;;		_vfpfcnvrt
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text6
  4032  0038F2                     __ptext6:
  4033                           	callstack 0
  4034  0038F2                     _tolower:
  4035                           	callstack 25
  4036  0038F2  0EBF               	movlw	191
  4037  0038F4  6E09               	movwf	??_tolower^0,c
  4038  0038F6  0EFF               	movlw	255
  4039  0038F8  6E0A               	movwf	(??_tolower+1)^0,c
  4040  0038FA  C007  F00B         	movff	tolower@c,??_tolower+2
  4041  0038FE  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4042  003902  5009               	movf	??_tolower^0,w,c
  4043  003904  260B               	addwf	(??_tolower+2)^0,f,c
  4044  003906  500A               	movf	(??_tolower+1)^0,w,c
  4045  003908  220C               	addwfc	(??_tolower+3)^0,f,c
  4046  00390A  500C               	movf	(??_tolower+3)^0,w,c
  4047  00390C  E107               	bnz	u3701
  4048  00390E  0E1A               	movlw	26
  4049  003910  5C0B               	subwf	(??_tolower+2)^0,w,c
  4050  003912  B0D8               	btfsc	status,0,c
  4051  003914  EF8E  F01C         	goto	u3701
  4052  003918  EF90  F01C         	goto	u3700
  4053  00391C                     u3701:
  4054  00391C  EF97  F01C         	goto	l1082
  4055  003920                     u3700:
  4056  003920  0E20               	movlw	32
  4057  003922  1007               	iorwf	tolower@c^0,w,c
  4058  003924  6E07               	movwf	?_tolower^0,c
  4059  003926  5008               	movf	(tolower@c+1)^0,w,c
  4060  003928  6E08               	movwf	(?_tolower+1)^0,c
  4061  00392A  EF9B  F01C         	goto	l1085
  4062  00392E                     l1082:
  4063  00392E  C007  F007         	movff	tolower@c,?_tolower
  4064  003932  C008  F008         	movff	tolower@c+1,?_tolower+1
  4065  003936                     l1085:
  4066  003936  0012               	return		;funcret
  4067  003938                     __end_of_tolower:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _isupper *****************
  4071 ;; Defined at:
  4072 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  c               2    0[COMRAM] int 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  2    0[COMRAM] int 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4086 ;;      Params:         2       0       0       0       0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4088 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4089 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4090 ;;Total ram usage:        6 bytes
  4091 ;; Hardware stack levels used: 1
  4092 ;; Hardware stack levels required when called: 1
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_efgtoa
  4097 ;;		_vfpfcnvrt
  4098 ;;		_tolower
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text7
  4103  003A02                     __ptext7:
  4104                           	callstack 0
  4105  003A02                     _isupper:
  4106                           	callstack 25
  4107  003A02  0EBF               	movlw	191
  4108  003A04  6E03               	movwf	??_isupper^0,c
  4109  003A06  0EFF               	movlw	255
  4110  003A08  6E04               	movwf	(??_isupper+1)^0,c
  4111  003A0A  C001  F005         	movff	isupper@c,??_isupper+2
  4112  003A0E  C002  F006         	movff	isupper@c+1,??_isupper+3
  4113  003A12  5003               	movf	??_isupper^0,w,c
  4114  003A14  2605               	addwf	(??_isupper+2)^0,f,c
  4115  003A16  5004               	movf	(??_isupper+1)^0,w,c
  4116  003A18  2206               	addwfc	(??_isupper+3)^0,f,c
  4117  003A1A  5006               	movf	(??_isupper+3)^0,w,c
  4118  003A1C  E10A               	bnz	u2850
  4119  003A1E  0E1A               	movlw	26
  4120  003A20  5C05               	subwf	(??_isupper+2)^0,w,c
  4121  003A22  A0D8               	btfss	status,0,c
  4122  003A24  EF16  F01D         	goto	u2851
  4123  003A28  EF19  F01D         	goto	u2850
  4124  003A2C                     u2851:
  4125  003A2C  0E01               	movlw	1
  4126  003A2E  EF1A  F01D         	goto	u2860
  4127  003A32                     u2850:
  4128  003A32  0E00               	movlw	0
  4129  003A34                     u2860:
  4130  003A34  6E01               	movwf	?_isupper^0,c
  4131  003A36  6A02               	clrf	(?_isupper+1)^0,c
  4132  003A38  0012               	return		;funcret
  4133  003A3A                     __end_of_isupper:
  4134                           	callstack 0
  4135                           
  4136 ;; *************** function _strcpy *****************
  4137 ;; Defined at:
  4138 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4141 ;;		 -> dbuf(80), 
  4142 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4143 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4144 ;;		 -> dbuf(80), 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  d               2    8[COMRAM] PTR unsigned char 
  4147 ;;		 -> dbuf(80), 
  4148 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4149 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4150 ;;		 -> dbuf(80), 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  2    0[COMRAM] PTR unsigned char 
  4153 ;; Registers used:
  4154 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4160 ;;      Params:         4       0       0       0       0       0       0       0       0
  4161 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4162 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4163 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4164 ;;Total ram usage:       10 bytes
  4165 ;; Hardware stack levels used: 1
  4166 ;; Hardware stack levels required when called: 1
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_efgtoa
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text8
  4175  0037AC                     __ptext8:
  4176                           	callstack 0
  4177  0037AC                     _strcpy:
  4178                           	callstack 25
  4179  0037AC  C003  F007         	movff	strcpy@src,strcpy@s
  4180  0037B0  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4181  0037B4  C001  F009         	movff	strcpy@dest,strcpy@d
  4182  0037B8  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4183  0037BC                     l3308:
  4184  0037BC  5007               	movf	strcpy@s^0,w,c
  4185  0037BE  6E05               	movwf	??_strcpy^0,c
  4186  0037C0  5008               	movf	(strcpy@s+1)^0,w,c
  4187  0037C2  6E06               	movwf	(??_strcpy+1)^0,c
  4188  0037C4  4A07               	infsnz	strcpy@s^0,f,c
  4189  0037C6  2A08               	incf	(strcpy@s+1)^0,f,c
  4190  0037C8  C005  FFF6         	movff	??_strcpy,tblptrl
  4191  0037CC  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4192  0037D0  6AF8               	clrf	tblptru,c
  4193  0037D2  C009  FFD9         	movff	strcpy@d,fsr2l
  4194  0037D6  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4195  0037DA  4A09               	infsnz	strcpy@d^0,f,c
  4196  0037DC  2A0A               	incf	(strcpy@d+1)^0,f,c
  4197  0037DE  0E07               	movlw	(high __ramtop+-1)
  4198  0037E0  64F7               	cpfsgt	tblptrh,c
  4199  0037E2  D003               	bra	u3687
  4200  0037E4  0008               	tblrd		*
  4201  0037E6  50F5               	movf	tablat,w,c
  4202  0037E8  D005               	bra	u3680
  4203  0037EA                     u3687:
  4204  0037EA  CFF6 FFE9          	movff	tblptrl,fsr0l
  4205  0037EE  CFF7 FFEA          	movff	tblptrh,fsr0h
  4206  0037F2  50EF               	movf	indf0,w,c
  4207  0037F4                     u3680:
  4208  0037F4  6EDF               	movwf	indf2,c
  4209  0037F6  50DF               	movf	indf2,w,c
  4210  0037F8  A4D8               	btfss	status,2,c
  4211  0037FA  EF01  F01C         	goto	u3691
  4212  0037FE  EF03  F01C         	goto	u3690
  4213  003802                     u3691:
  4214  003802  EFDE  F01B         	goto	l3308
  4215  003806                     u3690:
  4216  003806  0012               	return		;funcret
  4217  003808                     __end_of_strcpy:
  4218                           	callstack 0
  4219                           
  4220 ;; *************** function _pad *****************
  4221 ;; Defined at:
  4222 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4225 ;;		 -> sprintf@f(11), 
  4226 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4227 ;;		 -> dbuf(80), 
  4228 ;;  p               2   20[COMRAM] int 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  w               2   25[COMRAM] int 
  4231 ;;  i               2   23[COMRAM] int 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  2   16[COMRAM] int 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4241 ;;      Params:         6       0       0       0       0       0       0       0       0
  4242 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4243 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4244 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4245 ;;Total ram usage:       11 bytes
  4246 ;; Hardware stack levels used: 1
  4247 ;; Hardware stack levels required when called: 4
  4248 ;; This function calls:
  4249 ;;		_fputc
  4250 ;;		_fputs
  4251 ;;		_strlen
  4252 ;; This function is called by:
  4253 ;;		_efgtoa
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text9
  4258  0033C2                     __ptext9:
  4259                           	callstack 0
  4260  0033C2                     _pad:
  4261                           	callstack 22
  4262  0033C2                     
  4263                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4264  0033C2  0100               	movlb	0	; () banked
  4265  0033C4  A1FB               	btfss	_flags& (0+255),0,b
  4266  0033C6  EFE7  F019         	goto	u3571
  4267  0033CA  EFE9  F019         	goto	u3570
  4268  0033CE                     u3571:
  4269  0033CE  EFF3  F019         	goto	l3266
  4270  0033D2                     u3570:
  4271  0033D2                     
  4272                           ; BSR set to: 0
  4273                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4274  0033D2  C013  F00A         	movff	pad@buf,fputs@s
  4275  0033D6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4276  0033DA  C011  F00C         	movff	pad@fp,fputs@fp
  4277  0033DE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4278  0033E2  ECBF  F01C         	call	_fputs	;wreg free
  4279  0033E6                     l3266:
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4282  0033E6  BE16               	btfsc	(pad@p+1)^0,7,c
  4283  0033E8  EFF8  F019         	goto	u3581
  4284  0033EC  EFFA  F019         	goto	u3580
  4285  0033F0                     u3581:
  4286  0033F0  EF00  F01A         	goto	l3270
  4287  0033F4                     u3580:
  4288  0033F4  C015  F01A         	movff	pad@p,pad@w
  4289  0033F8  C016  F01B         	movff	pad@p+1,pad@w+1
  4290  0033FC  EF04  F01A         	goto	l837
  4291  003400                     l3270:
  4292  003400  0E00               	movlw	0
  4293  003402  6E1B               	movwf	(pad@w+1)^0,c
  4294  003404  0E00               	movlw	0
  4295  003406  6E1A               	movwf	pad@w^0,c
  4296  003408                     l837:
  4297                           
  4298                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4299  003408  0E00               	movlw	0
  4300  00340A  6E19               	movwf	(pad@i+1)^0,c
  4301  00340C  0E00               	movlw	0
  4302  00340E  6E18               	movwf	pad@i^0,c
  4303                           
  4304                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4305  003410  EF16  F01A         	goto	l3276
  4306  003414                     l3272:
  4307                           
  4308                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4309  003414  0E00               	movlw	0
  4310  003416  6E02               	movwf	(fputc@c+1)^0,c
  4311  003418  0E20               	movlw	32
  4312  00341A  6E01               	movwf	fputc@c^0,c
  4313  00341C  C011  F003         	movff	pad@fp,fputc@fp
  4314  003420  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4315  003424  EC7C  F019         	call	_fputc	;wreg free
  4316  003428                     
  4317                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4318  003428  4A18               	infsnz	pad@i^0,f,c
  4319  00342A  2A19               	incf	(pad@i+1)^0,f,c
  4320  00342C                     l3276:
  4321                           
  4322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4323  00342C  501A               	movf	pad@w^0,w,c
  4324  00342E  5C18               	subwf	pad@i^0,w,c
  4325  003430  5019               	movf	(pad@i+1)^0,w,c
  4326  003432  0A80               	xorlw	128
  4327  003434  6E17               	movwf	??_pad^0,c
  4328  003436  501B               	movf	(pad@w+1)^0,w,c
  4329  003438  0A80               	xorlw	128
  4330  00343A  5817               	subwfb	??_pad^0,w,c
  4331  00343C  A0D8               	btfss	status,0,c
  4332  00343E  EF23  F01A         	goto	u3591
  4333  003442  EF25  F01A         	goto	u3590
  4334  003446                     u3591:
  4335  003446  EF0A  F01A         	goto	l3272
  4336  00344A                     u3590:
  4337  00344A                     
  4338                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4339  00344A  0100               	movlb	0	; () banked
  4340  00344C  B1FB               	btfsc	_flags& (0+255),0,b
  4341  00344E  EF2B  F01A         	goto	u3601
  4342  003452  EF2D  F01A         	goto	u3600
  4343  003456                     u3601:
  4344  003456  EF37  F01A         	goto	l3280
  4345  00345A                     u3600:
  4346  00345A                     
  4347                           ; BSR set to: 0
  4348                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4349  00345A  C013  F00A         	movff	pad@buf,fputs@s
  4350  00345E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4351  003462  C011  F00C         	movff	pad@fp,fputs@fp
  4352  003466  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4353  00346A  ECBF  F01C         	call	_fputs	;wreg free
  4354  00346E                     l3280:
  4355                           
  4356                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4357  00346E  C013  F001         	movff	pad@buf,strlen@s
  4358  003472  C014  F002         	movff	pad@buf+1,strlen@s+1
  4359  003476  EC55  F01D         	call	_strlen	;wreg free
  4360  00347A  501A               	movf	pad@w^0,w,c
  4361  00347C  2401               	addwf	?_strlen^0,w,c
  4362  00347E  6E11               	movwf	?_pad^0,c
  4363  003480  501B               	movf	(pad@w+1)^0,w,c
  4364  003482  2002               	addwfc	(?_strlen+1)^0,w,c
  4365  003484  6E12               	movwf	(?_pad+1)^0,c
  4366  003486  0012               	return		;funcret
  4367  003488                     __end_of_pad:
  4368                           	callstack 0
  4369                           
  4370 ;; *************** function _strlen *****************
  4371 ;; Defined at:
  4372 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4375 ;;		 -> dbuf(80), 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4378 ;;		 -> dbuf(80), 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  2    0[COMRAM] unsigned int 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4388 ;;      Params:         2       0       0       0       0       0       0       0       0
  4389 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4391 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4392 ;;Total ram usage:        4 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_pad
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text10
  4403  003AAA                     __ptext10:
  4404                           	callstack 0
  4405  003AAA                     _strlen:
  4406                           	callstack 24
  4407  003AAA  C001  F003         	movff	strlen@s,strlen@a
  4408  003AAE  C002  F004         	movff	strlen@s+1,strlen@a+1
  4409  003AB2  EF5D  F01D         	goto	l2802
  4410  003AB6                     l2800:
  4411  003AB6  4A01               	infsnz	strlen@s^0,f,c
  4412  003AB8  2A02               	incf	(strlen@s+1)^0,f,c
  4413  003ABA                     l2802:
  4414  003ABA  C001  FFD9         	movff	strlen@s,fsr2l
  4415  003ABE  C002  FFDA         	movff	strlen@s+1,fsr2h
  4416  003AC2  50DF               	movf	indf2,w,c
  4417  003AC4  A4D8               	btfss	status,2,c
  4418  003AC6  EF67  F01D         	goto	u2841
  4419  003ACA  EF69  F01D         	goto	u2840
  4420  003ACE                     u2841:
  4421  003ACE  EF5B  F01D         	goto	l2800
  4422  003AD2                     u2840:
  4423  003AD2  5003               	movf	strlen@a^0,w,c
  4424  003AD4  5C01               	subwf	strlen@s^0,w,c
  4425  003AD6  6E01               	movwf	?_strlen^0,c
  4426  003AD8  5004               	movf	(strlen@a+1)^0,w,c
  4427  003ADA  5802               	subwfb	(strlen@s+1)^0,w,c
  4428  003ADC  6E02               	movwf	(?_strlen+1)^0,c
  4429  003ADE  0012               	return		;funcret
  4430  003AE0                     __end_of_strlen:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function _fputs *****************
  4434 ;; Defined at:
  4435 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4438 ;;		 -> dbuf(80), 
  4439 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4440 ;;		 -> sprintf@f(11), 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  i               2   14[COMRAM] int 
  4443 ;;  c               1   13[COMRAM] unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  2    9[COMRAM] int 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4453 ;;      Params:         4       0       0       0       0       0       0       0       0
  4454 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4456 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4457 ;;Total ram usage:        7 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; Hardware stack levels required when called: 3
  4460 ;; This function calls:
  4461 ;;		_fputc
  4462 ;; This function is called by:
  4463 ;;		_pad
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text11
  4468  00397E                     __ptext11:
  4469                           	callstack 0
  4470  00397E                     _fputs:
  4471                           	callstack 22
  4472  00397E  0E00               	movlw	0
  4473  003980  6E10               	movwf	(fputs@i+1)^0,c
  4474  003982  0E00               	movlw	0
  4475  003984  6E0F               	movwf	fputs@i^0,c
  4476  003986  EFD0  F01C         	goto	l2796
  4477  00398A                     l2792:
  4478  00398A  C00E  F001         	movff	fputs@c,fputc@c
  4479  00398E  6A02               	clrf	(fputc@c+1)^0,c
  4480  003990  C00C  F003         	movff	fputs@fp,fputc@fp
  4481  003994  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4482  003998  EC7C  F019         	call	_fputc	;wreg free
  4483  00399C  4A0F               	infsnz	fputs@i^0,f,c
  4484  00399E  2A10               	incf	(fputs@i+1)^0,f,c
  4485  0039A0                     l2796:
  4486  0039A0  500F               	movf	fputs@i^0,w,c
  4487  0039A2  240A               	addwf	fputs@s^0,w,c
  4488  0039A4  6ED9               	movwf	fsr2l,c
  4489  0039A6  5010               	movf	(fputs@i+1)^0,w,c
  4490  0039A8  200B               	addwfc	(fputs@s+1)^0,w,c
  4491  0039AA  6EDA               	movwf	fsr2h,c
  4492  0039AC  50DF               	movf	indf2,w,c
  4493  0039AE  6E0E               	movwf	fputs@c^0,c
  4494  0039B0  500E               	movf	fputs@c^0,w,c
  4495  0039B2  A4D8               	btfss	status,2,c
  4496  0039B4  EFDE  F01C         	goto	u2831
  4497  0039B8  EFE0  F01C         	goto	u2830
  4498  0039BC                     u2831:
  4499  0039BC  EFC5  F01C         	goto	l2792
  4500  0039C0                     u2830:
  4501  0039C0  0012               	return		;funcret
  4502  0039C2                     __end_of_fputs:
  4503                           	callstack 0
  4504                           
  4505 ;; *************** function _fputc *****************
  4506 ;; Defined at:
  4507 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  c               2    0[COMRAM] int 
  4510 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4511 ;;		 -> sprintf@f(11), 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  2    0[COMRAM] int 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4523 ;;      Params:         4       0       0       0       0       0       0       0       0
  4524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4525 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4526 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4527 ;;Total ram usage:        9 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; Hardware stack levels required when called: 2
  4530 ;; This function calls:
  4531 ;;		_putch
  4532 ;; This function is called by:
  4533 ;;		_pad
  4534 ;;		_vfpfcnvrt
  4535 ;;		_fputs
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text12
  4540  0032F8                     __ptext12:
  4541                           	callstack 0
  4542  0032F8                     _fputc:
  4543                           	callstack 25
  4544  0032F8  5003               	movf	fputc@fp^0,w,c
  4545  0032FA  1004               	iorwf	(fputc@fp+1)^0,w,c
  4546  0032FC  B4D8               	btfsc	status,2,c
  4547  0032FE  EF83  F019         	goto	u2401
  4548  003302  EF85  F019         	goto	u2400
  4549  003306                     u2401:
  4550  003306  EF8E  F019         	goto	l2578
  4551  00330A                     u2400:
  4552  00330A  5003               	movf	fputc@fp^0,w,c
  4553  00330C  1004               	iorwf	(fputc@fp+1)^0,w,c
  4554  00330E  A4D8               	btfss	status,2,c
  4555  003310  EF8C  F019         	goto	u2411
  4556  003314  EF8E  F019         	goto	u2410
  4557  003318                     u2411:
  4558  003318  EF93  F019         	goto	l2580
  4559  00331C                     u2410:
  4560  00331C                     l2578:
  4561  00331C  5001               	movf	fputc@c^0,w,c
  4562  00331E  ECCD  F01D         	call	_putch
  4563  003322  EFE0  F019         	goto	l1045
  4564  003326                     l2580:
  4565  003326  EE20 F009          	lfsr	2,9
  4566  00332A  5003               	movf	fputc@fp^0,w,c
  4567  00332C  26D9               	addwf	fsr2l,f,c
  4568  00332E  5004               	movf	(fputc@fp+1)^0,w,c
  4569  003330  22DA               	addwfc	fsr2h,f,c
  4570  003332  50DE               	movf	postinc2,w,c
  4571  003334  10DE               	iorwf	postinc2,w,c
  4572  003336  B4D8               	btfsc	status,2,c
  4573  003338  EFA0  F019         	goto	u2421
  4574  00333C  EFA2  F019         	goto	u2420
  4575  003340                     u2421:
  4576  003340  EFBD  F019         	goto	l2584
  4577  003344                     u2420:
  4578  003344  EE20 F009          	lfsr	2,9
  4579  003348  5003               	movf	fputc@fp^0,w,c
  4580  00334A  26D9               	addwf	fsr2l,f,c
  4581  00334C  5004               	movf	(fputc@fp+1)^0,w,c
  4582  00334E  22DA               	addwfc	fsr2h,f,c
  4583  003350  EE10 F003          	lfsr	1,3
  4584  003354  5003               	movf	fputc@fp^0,w,c
  4585  003356  26E1               	addwf	fsr1l,f,c
  4586  003358  5004               	movf	(fputc@fp+1)^0,w,c
  4587  00335A  22E2               	addwfc	fsr1h,f,c
  4588  00335C  50DE               	movf	postinc2,w,c
  4589  00335E  5CE6               	subwf	postinc1,w,c
  4590  003360  50E6               	movf	postinc1,w,c
  4591  003362  0A80               	xorlw	128
  4592  003364  6E09               	movwf	(??_fputc+4)^0,c
  4593  003366  50DE               	movf	postinc2,w,c
  4594  003368  0A80               	xorlw	128
  4595  00336A  5809               	subwfb	(??_fputc+4)^0,w,c
  4596  00336C  B0D8               	btfsc	status,0,c
  4597  00336E  EFBB  F019         	goto	u2431
  4598  003372  EFBD  F019         	goto	u2430
  4599  003376                     u2431:
  4600  003376  EFE0  F019         	goto	l1045
  4601  00337A                     u2430:
  4602  00337A                     l2584:
  4603  00337A  EE20 F003          	lfsr	2,3
  4604  00337E  5003               	movf	fputc@fp^0,w,c
  4605  003380  26D9               	addwf	fsr2l,f,c
  4606  003382  5004               	movf	(fputc@fp+1)^0,w,c
  4607  003384  22DA               	addwfc	fsr2h,f,c
  4608  003386  CFDE F005          	movff	postinc2,??_fputc
  4609  00338A  CFDD F006          	movff	postdec2,??_fputc+1
  4610  00338E  C003  FFD9         	movff	fputc@fp,fsr2l
  4611  003392  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4612  003396  CFDE F007          	movff	postinc2,??_fputc+2
  4613  00339A  CFDD F008          	movff	postdec2,??_fputc+3
  4614  00339E  5005               	movf	??_fputc^0,w,c
  4615  0033A0  2407               	addwf	(??_fputc+2)^0,w,c
  4616  0033A2  6ED9               	movwf	fsr2l,c
  4617  0033A4  5006               	movf	(??_fputc+1)^0,w,c
  4618  0033A6  2008               	addwfc	(??_fputc+3)^0,w,c
  4619  0033A8  6EDA               	movwf	fsr2h,c
  4620  0033AA  C001  FFDF         	movff	fputc@c,indf2
  4621  0033AE  EE20 F003          	lfsr	2,3
  4622  0033B2  5003               	movf	fputc@fp^0,w,c
  4623  0033B4  26D9               	addwf	fsr2l,f,c
  4624  0033B6  5004               	movf	(fputc@fp+1)^0,w,c
  4625  0033B8  22DA               	addwfc	fsr2h,f,c
  4626  0033BA  2ADE               	incf	postinc2,f,c
  4627  0033BC  0E00               	movlw	0
  4628  0033BE  22DD               	addwfc	postdec2,f,c
  4629  0033C0                     l1045:
  4630  0033C0  0012               	return		;funcret
  4631  0033C2                     __end_of_fputc:
  4632                           	callstack 0
  4633                           
  4634 ;; *************** function _putch *****************
  4635 ;; Defined at:
  4636 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  c               1    wreg     unsigned char 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  c               1    0[COMRAM] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4653 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; Hardware stack levels required when called: 1
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_fputc
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text13
  4665  003B9A                     __ptext13:
  4666                           	callstack 0
  4667  003B9A                     _putch:
  4668                           	callstack 25
  4669  003B9A  0012               	return		;funcret
  4670  003B9C                     __end_of_putch:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _floorf *****************
  4674 ;; Defined at:
  4675 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  x               4   88[COMRAM] float 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  u               4   12[BANK0 ] struct .
  4680 ;;  m               4    6[BANK0 ] unsigned long 
  4681 ;;  e               2   10[BANK0 ] int 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  4   88[COMRAM] float 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4691 ;;      Params:         4       0       0       0       0       0       0       0       0
  4692 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4693 ;;      Temps:          0       6       0       0       0       0       0       0       0
  4694 ;;      Totals:         4      16       0       0       0       0       0       0       0
  4695 ;;Total ram usage:       20 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_efgtoa
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text14
  4706  0025D8                     __ptext14:
  4707                           	callstack 0
  4708  0025D8                     _floorf:
  4709                           	callstack 25
  4710  0025D8  C100  F06C         	movff	floorf@F526,floorf@u
  4711  0025DC  C101  F06D         	movff	floorf@F526+1,floorf@u+1
  4712  0025E0  C102  F06E         	movff	floorf@F526+2,floorf@u+2
  4713  0025E4  C103  F06F         	movff	floorf@F526+3,floorf@u+3
  4714  0025E8  C059  F06C         	movff	floorf@x,floorf@u
  4715  0025EC  C05A  F06D         	movff	floorf@x+1,floorf@u+1
  4716  0025F0  C05B  F06E         	movff	floorf@x+2,floorf@u+2
  4717  0025F4  C05C  F06F         	movff	floorf@x+3,floorf@u+3
  4718  0025F8  0E81               	movlw	129
  4719  0025FA  0100               	movlb	0	; () banked
  4720  0025FC  6F60               	movwf	??_floorf& (0+255),b
  4721  0025FE  0EFF               	movlw	255
  4722  002600  6F61               	movwf	(??_floorf+1)& (0+255),b
  4723  002602  C06C  F062         	movff	floorf@u,??_floorf+2
  4724  002606  C06D  F063         	movff	floorf@u+1,??_floorf+3
  4725  00260A  C06E  F064         	movff	floorf@u+2,??_floorf+4
  4726  00260E  C06F  F065         	movff	floorf@u+3,??_floorf+5
  4727  002612  0E18               	movlw	24
  4728  002614  EF11  F013         	goto	u3710
  4729  002618                     u3715:
  4730  002618  90D8               	bcf	status,0,c
  4731  00261A  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  4732  00261C  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4733  00261E  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4734  002620  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4735  002622                     u3710:
  4736  002622  2EE8               	decfsz	wreg,f,c
  4737  002624  EF0C  F013         	goto	u3715
  4738  002628  5162               	movf	(??_floorf+2)& (0+255),w,b
  4739  00262A  2560               	addwf	??_floorf& (0+255),w,b
  4740  00262C  6F6A               	movwf	floorf@e& (0+255),b
  4741  00262E  0E00               	movlw	0
  4742  002630  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  4743  002632  6F6B               	movwf	(floorf@e+1)& (0+255),b
  4744  002634  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4745  002636  EF26  F013         	goto	u3721
  4746  00263A  516B               	movf	(floorf@e+1)& (0+255),w,b
  4747  00263C  E109               	bnz	u3720
  4748  00263E  0E17               	movlw	23
  4749  002640  5D6A               	subwf	floorf@e& (0+255),w,b
  4750  002642  A0D8               	btfss	status,0,c
  4751  002644  EF26  F013         	goto	u3721
  4752  002648  EF28  F013         	goto	u3720
  4753  00264C                     u3721:
  4754  00264C  EF32  F013         	goto	l3326
  4755  002650                     u3720:
  4756  002650                     l3324:
  4757                           
  4758                           ; BSR set to: 0
  4759  002650  C059  F059         	movff	floorf@x,?_floorf
  4760  002654  C05A  F05A         	movff	floorf@x+1,?_floorf+1
  4761  002658  C05B  F05B         	movff	floorf@x+2,?_floorf+2
  4762  00265C  C05C  F05C         	movff	floorf@x+3,?_floorf+3
  4763  002660  EFF6  F013         	goto	l1006
  4764  002664                     l3326:
  4765                           
  4766                           ; BSR set to: 0
  4767  002664  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  4768  002666  EF37  F013         	goto	u3731
  4769  00266A  EF39  F013         	goto	u3730
  4770  00266E                     u3731:
  4771  00266E  EFAA  F013         	goto	l3336
  4772  002672                     u3730:
  4773  002672                     
  4774                           ; BSR set to: 0
  4775  002672  C06A  F060         	movff	floorf@e,??_floorf
  4776  002676  0EFF               	movlw	255
  4777  002678  6F61               	movwf	(??_floorf+1)& (0+255),b
  4778  00267A  0EFF               	movlw	255
  4779  00267C  6F62               	movwf	(??_floorf+2)& (0+255),b
  4780  00267E  0E7F               	movlw	127
  4781  002680  6F63               	movwf	(??_floorf+3)& (0+255),b
  4782  002682  0E00               	movlw	0
  4783  002684  6F64               	movwf	(??_floorf+4)& (0+255),b
  4784  002686                     u3745:
  4785  002686  6760               	tstfsz	??_floorf& (0+255),b
  4786  002688  EF48  F013         	goto	u3746
  4787  00268C  EF50  F013         	goto	u3747
  4788  002690                     u3746:
  4789  002690  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  4790  002692  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  4791  002694  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4792  002696  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4793  002698  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4794  00269A  2F60               	decfsz	??_floorf& (0+255),f,b
  4795  00269C  EF43  F013         	goto	u3745
  4796  0026A0                     u3747:
  4797  0026A0  C061  F066         	movff	??_floorf+1,floorf@m
  4798  0026A4  C062  F067         	movff	??_floorf+2,floorf@m+1
  4799  0026A8  C063  F068         	movff	??_floorf+3,floorf@m+2
  4800  0026AC  C064  F069         	movff	??_floorf+4,floorf@m+3
  4801  0026B0  0100               	movlb	0	; () banked
  4802  0026B2  5166               	movf	floorf@m& (0+255),w,b
  4803  0026B4  156C               	andwf	floorf@u& (0+255),w,b
  4804  0026B6  6F60               	movwf	??_floorf& (0+255),b
  4805  0026B8  5167               	movf	(floorf@m+1)& (0+255),w,b
  4806  0026BA  156D               	andwf	(floorf@u+1)& (0+255),w,b
  4807  0026BC  6F61               	movwf	(??_floorf+1)& (0+255),b
  4808  0026BE  5168               	movf	(floorf@m+2)& (0+255),w,b
  4809  0026C0  156E               	andwf	(floorf@u+2)& (0+255),w,b
  4810  0026C2  6F62               	movwf	(??_floorf+2)& (0+255),b
  4811  0026C4  5169               	movf	(floorf@m+3)& (0+255),w,b
  4812  0026C6  156F               	andwf	(floorf@u+3)& (0+255),w,b
  4813  0026C8  6F63               	movwf	(??_floorf+3)& (0+255),b
  4814  0026CA  5160               	movf	??_floorf& (0+255),w,b
  4815  0026CC  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4816  0026CE  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4817  0026D0  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4818  0026D2  A4D8               	btfss	status,2,c
  4819  0026D4  EF6E  F013         	goto	u3751
  4820  0026D8  EF70  F013         	goto	u3750
  4821  0026DC                     u3751:
  4822  0026DC  EF72  F013         	goto	l3332
  4823  0026E0                     u3750:
  4824  0026E0  EF28  F013         	goto	l3324
  4825  0026E4                     l3332:
  4826                           
  4827                           ; BSR set to: 0
  4828  0026E4  C06C  F060         	movff	floorf@u,??_floorf
  4829  0026E8  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4830  0026EC  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4831  0026F0  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4832  0026F4  0E20               	movlw	32
  4833  0026F6  EF82  F013         	goto	u3760
  4834  0026FA                     u3765:
  4835  0026FA  90D8               	bcf	status,0,c
  4836  0026FC  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4837  0026FE  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4838  002700  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4839  002702  3360               	rrcf	??_floorf& (0+255),f,b
  4840  002704                     u3760:
  4841  002704  2EE8               	decfsz	wreg,f,c
  4842  002706  EF7D  F013         	goto	u3765
  4843  00270A  5160               	movf	??_floorf& (0+255),w,b
  4844  00270C  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4845  00270E  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4846  002710  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4847  002712  B4D8               	btfsc	status,2,c
  4848  002714  EF8E  F013         	goto	u3771
  4849  002718  EF90  F013         	goto	u3770
  4850  00271C                     u3771:
  4851  00271C  EF98  F013         	goto	l1009
  4852  002720                     u3770:
  4853  002720                     
  4854                           ; BSR set to: 0
  4855  002720  5166               	movf	floorf@m& (0+255),w,b
  4856  002722  276C               	addwf	floorf@u& (0+255),f,b
  4857  002724  5167               	movf	(floorf@m+1)& (0+255),w,b
  4858  002726  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  4859  002728  5168               	movf	(floorf@m+2)& (0+255),w,b
  4860  00272A  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  4861  00272C  5169               	movf	(floorf@m+3)& (0+255),w,b
  4862  00272E  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  4863  002730                     l1009:
  4864                           
  4865                           ; BSR set to: 0
  4866  002730  1D66               	comf	floorf@m& (0+255),w,b
  4867  002732  6F60               	movwf	??_floorf& (0+255),b
  4868  002734  1D67               	comf	(floorf@m+1)& (0+255),w,b
  4869  002736  6F61               	movwf	(??_floorf+1)& (0+255),b
  4870  002738  1D68               	comf	(floorf@m+2)& (0+255),w,b
  4871  00273A  6F62               	movwf	(??_floorf+2)& (0+255),b
  4872  00273C  1D69               	comf	(floorf@m+3)& (0+255),w,b
  4873  00273E  6F63               	movwf	(??_floorf+3)& (0+255),b
  4874  002740  5160               	movf	??_floorf& (0+255),w,b
  4875  002742  176C               	andwf	floorf@u& (0+255),f,b
  4876  002744  5161               	movf	(??_floorf+1)& (0+255),w,b
  4877  002746  176D               	andwf	(floorf@u+1)& (0+255),f,b
  4878  002748  5162               	movf	(??_floorf+2)& (0+255),w,b
  4879  00274A  176E               	andwf	(floorf@u+2)& (0+255),f,b
  4880  00274C  5163               	movf	(??_floorf+3)& (0+255),w,b
  4881  00274E  176F               	andwf	(floorf@u+3)& (0+255),f,b
  4882  002750  EFEE  F013         	goto	l3344
  4883  002754                     l3336:
  4884                           
  4885                           ; BSR set to: 0
  4886  002754  C06C  F060         	movff	floorf@u,??_floorf
  4887  002758  C06D  F061         	movff	floorf@u+1,??_floorf+1
  4888  00275C  C06E  F062         	movff	floorf@u+2,??_floorf+2
  4889  002760  C06F  F063         	movff	floorf@u+3,??_floorf+3
  4890  002764  0E20               	movlw	32
  4891  002766  EFBA  F013         	goto	u3780
  4892  00276A                     u3785:
  4893  00276A  90D8               	bcf	status,0,c
  4894  00276C  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  4895  00276E  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  4896  002770  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  4897  002772  3360               	rrcf	??_floorf& (0+255),f,b
  4898  002774                     u3780:
  4899  002774  2EE8               	decfsz	wreg,f,c
  4900  002776  EFB5  F013         	goto	u3785
  4901  00277A  5160               	movf	??_floorf& (0+255),w,b
  4902  00277C  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4903  00277E  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4904  002780  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4905  002782  A4D8               	btfss	status,2,c
  4906  002784  EFC6  F013         	goto	u3791
  4907  002788  EFC8  F013         	goto	u3790
  4908  00278C                     u3791:
  4909  00278C  EFD2  F013         	goto	l3340
  4910  002790                     u3790:
  4911  002790                     
  4912                           ; BSR set to: 0
  4913  002790  0E00               	movlw	0
  4914  002792  6F6C               	movwf	floorf@u& (0+255),b
  4915  002794  0E00               	movlw	0
  4916  002796  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4917  002798  0E00               	movlw	0
  4918  00279A  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4919  00279C  0E00               	movlw	0
  4920  00279E  6F6F               	movwf	(floorf@u+3)& (0+255),b
  4921  0027A0  EFEE  F013         	goto	l3344
  4922  0027A4                     l3340:
  4923                           
  4924                           ; BSR set to: 0
  4925  0027A4  90D8               	bcf	status,0,c
  4926  0027A6  356C               	rlcf	floorf@u& (0+255),w,b
  4927  0027A8  6F60               	movwf	??_floorf& (0+255),b
  4928  0027AA  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  4929  0027AC  6F61               	movwf	(??_floorf+1)& (0+255),b
  4930  0027AE  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  4931  0027B0  6F62               	movwf	(??_floorf+2)& (0+255),b
  4932  0027B2  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  4933  0027B4  6F63               	movwf	(??_floorf+3)& (0+255),b
  4934  0027B6  5160               	movf	??_floorf& (0+255),w,b
  4935  0027B8  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  4936  0027BA  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  4937  0027BC  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  4938  0027BE  B4D8               	btfsc	status,2,c
  4939  0027C0  EFE4  F013         	goto	u3801
  4940  0027C4  EFE6  F013         	goto	u3800
  4941  0027C8                     u3801:
  4942  0027C8  EFEE  F013         	goto	l3344
  4943  0027CC                     u3800:
  4944  0027CC                     
  4945                           ; BSR set to: 0
  4946  0027CC  0E00               	movlw	0
  4947  0027CE  6F6C               	movwf	floorf@u& (0+255),b
  4948  0027D0  0E00               	movlw	0
  4949  0027D2  6F6D               	movwf	(floorf@u+1)& (0+255),b
  4950  0027D4  0E80               	movlw	128
  4951  0027D6  6F6E               	movwf	(floorf@u+2)& (0+255),b
  4952  0027D8  0EBF               	movlw	191
  4953  0027DA  6F6F               	movwf	(floorf@u+3)& (0+255),b
  4954  0027DC                     l3344:
  4955                           
  4956                           ; BSR set to: 0
  4957  0027DC  C06C  F059         	movff	floorf@u,?_floorf
  4958  0027E0  C06D  F05A         	movff	floorf@u+1,?_floorf+1
  4959  0027E4  C06E  F05B         	movff	floorf@u+2,?_floorf+2
  4960  0027E8  C06F  F05C         	movff	floorf@u+3,?_floorf+3
  4961  0027EC                     l1006:
  4962                           
  4963                           ; BSR set to: 0
  4964  0027EC  0012               	return		;funcret
  4965  0027EE                     __end_of_floorf:
  4966                           	callstack 0
  4967                           
  4968 ;; *************** function ___fpclassifyf *****************
  4969 ;; Defined at:
  4970 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  x               4    0[COMRAM] float 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  u               4   10[COMRAM] struct .
  4975 ;;  e               2    8[COMRAM] int 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  2    0[COMRAM] int 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4985 ;;      Params:         4       0       0       0       0       0       0       0       0
  4986 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4987 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4988 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4989 ;;Total ram usage:       14 bytes
  4990 ;; Hardware stack levels used: 1
  4991 ;; Hardware stack levels required when called: 1
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_efgtoa
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           	psect	text15
  5000  00303C                     __ptext15:
  5001                           	callstack 0
  5002  00303C                     ___fpclassifyf:
  5003                           	callstack 25
  5004  00303C  C104  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5005  003040  C105  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5006  003044  C106  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5007  003048  C107  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5008  00304C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5009  003050  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5010  003054  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5011  003058  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5012  00305C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5013  003060  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5014  003064  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5015  003068  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5016  00306C  0E18               	movlw	24
  5017  00306E  EF3E  F018         	goto	u3610
  5018  003072                     u3615:
  5019  003072  90D8               	bcf	status,0,c
  5020  003074  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5021  003076  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5022  003078  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5023  00307A  3205               	rrcf	??___fpclassifyf^0,f,c
  5024  00307C                     u3610:
  5025  00307C  2EE8               	decfsz	wreg,f,c
  5026  00307E  EF39  F018         	goto	u3615
  5027  003082  5005               	movf	??___fpclassifyf^0,w,c
  5028  003084  6E09               	movwf	___fpclassifyf@e^0,c
  5029  003086  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5030  003088  5009               	movf	___fpclassifyf@e^0,w,c
  5031  00308A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5032  00308C  A4D8               	btfss	status,2,c
  5033  00308E  EF4B  F018         	goto	u3621
  5034  003092  EF4D  F018         	goto	u3620
  5035  003096                     u3621:
  5036  003096  EF6D  F018         	goto	l3296
  5037  00309A                     u3620:
  5038  00309A  90D8               	bcf	status,0,c
  5039  00309C  340B               	rlcf	___fpclassifyf@u^0,w,c
  5040  00309E  6E05               	movwf	??___fpclassifyf^0,c
  5041  0030A0  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5042  0030A2  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5043  0030A4  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5044  0030A6  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5045  0030A8  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5046  0030AA  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5047  0030AC  5005               	movf	??___fpclassifyf^0,w,c
  5048  0030AE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5049  0030B0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5050  0030B2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5051  0030B4  A4D8               	btfss	status,2,c
  5052  0030B6  EF5F  F018         	goto	u3631
  5053  0030BA  EF61  F018         	goto	u3630
  5054  0030BE                     u3631:
  5055  0030BE  EF67  F018         	goto	l3292
  5056  0030C2                     u3630:
  5057  0030C2  0E00               	movlw	0
  5058  0030C4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5059  0030C6  0E02               	movlw	2
  5060  0030C8  6E01               	movwf	?___fpclassifyf^0,c
  5061  0030CA  EF9C  F018         	goto	l974
  5062  0030CE                     l3292:
  5063  0030CE  0E00               	movlw	0
  5064  0030D0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5065  0030D2  0E03               	movlw	3
  5066  0030D4  6E01               	movwf	?___fpclassifyf^0,c
  5067  0030D6  EF9C  F018         	goto	l974
  5068  0030DA                     l3296:
  5069  0030DA  2809               	incf	___fpclassifyf@e^0,w,c
  5070  0030DC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5071  0030DE  A4D8               	btfss	status,2,c
  5072  0030E0  EF74  F018         	goto	u3641
  5073  0030E4  EF76  F018         	goto	u3640
  5074  0030E8                     u3641:
  5075  0030E8  EF98  F018         	goto	l3302
  5076  0030EC                     u3640:
  5077  0030EC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5078  0030F0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5079  0030F4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5080  0030F8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5081  0030FC  0E09               	movlw	9
  5082  0030FE                     u3655:
  5083  0030FE  90D8               	bcf	status,0,c
  5084  003100  3605               	rlcf	??___fpclassifyf^0,f,c
  5085  003102  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5086  003104  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5087  003106  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5088  003108  2EE8               	decfsz	wreg,f,c
  5089  00310A  EF7F  F018         	goto	u3655
  5090  00310E  5005               	movf	??___fpclassifyf^0,w,c
  5091  003110  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5092  003112  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5093  003114  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5094  003116  B4D8               	btfsc	status,2,c
  5095  003118  EF90  F018         	goto	u3661
  5096  00311C  EF93  F018         	goto	u3660
  5097  003120                     u3661:
  5098  003120  0E01               	movlw	1
  5099  003122  EF94  F018         	goto	u3670
  5100  003126                     u3660:
  5101  003126  0E00               	movlw	0
  5102  003128                     u3670:
  5103  003128  6E01               	movwf	?___fpclassifyf^0,c
  5104  00312A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5105  00312C  EF9C  F018         	goto	l974
  5106  003130                     l3302:
  5107  003130  0E00               	movlw	0
  5108  003132  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5109  003134  0E04               	movlw	4
  5110  003136  6E01               	movwf	?___fpclassifyf^0,c
  5111  003138                     l974:
  5112  003138  0012               	return		;funcret
  5113  00313A                     __end_of___fpclassifyf:
  5114                           	callstack 0
  5115                           
  5116 ;; *************** function ___fltol *****************
  5117 ;; Defined at:
  5118 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  f1              4    0[COMRAM] int 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  exp1            1    9[COMRAM] unsigned char 
  5123 ;;  sign1           1    8[COMRAM] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  4    0[COMRAM] long 
  5126 ;; Registers used:
  5127 ;;		wreg, status,2, status,0
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5133 ;;      Params:         4       0       0       0       0       0       0       0       0
  5134 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5135 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5136 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5137 ;;Total ram usage:       10 bytes
  5138 ;; Hardware stack levels used: 1
  5139 ;; Hardware stack levels required when called: 1
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_efgtoa
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text16
  5148  002E32                     __ptext16:
  5149                           	callstack 0
  5150  002E32                     ___fltol:
  5151                           	callstack 25
  5152  002E32  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5153  002E34  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5154  002E36  6E0A               	movwf	___fltol@exp1^0,c
  5155  002E38  500A               	movf	___fltol@exp1^0,w,c
  5156  002E3A  A4D8               	btfss	status,2,c
  5157  002E3C  EF22  F017         	goto	u3501
  5158  002E40  EF24  F017         	goto	u3500
  5159  002E44                     u3501:
  5160  002E44  EF2E  F017         	goto	l3224
  5161  002E48                     u3500:
  5162  002E48                     l3220:
  5163  002E48  0E00               	movlw	0
  5164  002E4A  6E01               	movwf	?___fltol^0,c
  5165  002E4C  0E00               	movlw	0
  5166  002E4E  6E02               	movwf	(?___fltol+1)^0,c
  5167  002E50  0E00               	movlw	0
  5168  002E52  6E03               	movwf	(?___fltol+2)^0,c
  5169  002E54  0E00               	movlw	0
  5170  002E56  6E04               	movwf	(?___fltol+3)^0,c
  5171  002E58  EF9B  F017         	goto	l415
  5172  002E5C                     l3224:
  5173  002E5C  C001  F005         	movff	___fltol@f1,??___fltol
  5174  002E60  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5175  002E64  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5176  002E68  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5177  002E6C  0E20               	movlw	32
  5178  002E6E  EF3E  F017         	goto	u3510
  5179  002E72                     u3515:
  5180  002E72  90D8               	bcf	status,0,c
  5181  002E74  3208               	rrcf	(??___fltol+3)^0,f,c
  5182  002E76  3207               	rrcf	(??___fltol+2)^0,f,c
  5183  002E78  3206               	rrcf	(??___fltol+1)^0,f,c
  5184  002E7A  3205               	rrcf	??___fltol^0,f,c
  5185  002E7C                     u3510:
  5186  002E7C  2EE8               	decfsz	wreg,f,c
  5187  002E7E  EF39  F017         	goto	u3515
  5188  002E82  5005               	movf	??___fltol^0,w,c
  5189  002E84  6E09               	movwf	___fltol@sign1^0,c
  5190  002E86  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5191  002E88  0EFF               	movlw	255
  5192  002E8A  1601               	andwf	___fltol@f1^0,f,c
  5193  002E8C  0EFF               	movlw	255
  5194  002E8E  1602               	andwf	(___fltol@f1+1)^0,f,c
  5195  002E90  0EFF               	movlw	255
  5196  002E92  1603               	andwf	(___fltol@f1+2)^0,f,c
  5197  002E94  0E00               	movlw	0
  5198  002E96  1604               	andwf	(___fltol@f1+3)^0,f,c
  5199  002E98  0E96               	movlw	150
  5200  002E9A  5E0A               	subwf	___fltol@exp1^0,f,c
  5201  002E9C  BE0A               	btfsc	___fltol@exp1^0,7,c
  5202  002E9E  EF55  F017         	goto	u3520
  5203  002EA2  EF53  F017         	goto	u3521
  5204  002EA6                     u3521:
  5205  002EA6  EF6B  F017         	goto	l3244
  5206  002EAA                     u3520:
  5207  002EAA  500A               	movf	___fltol@exp1^0,w,c
  5208  002EAC  0A80               	xorlw	128
  5209  002EAE  0F97               	addlw	151
  5210  002EB0  B0D8               	btfsc	status,0,c
  5211  002EB2  EF5D  F017         	goto	u3531
  5212  002EB6  EF5F  F017         	goto	u3530
  5213  002EBA                     u3531:
  5214  002EBA  EF61  F017         	goto	l3240
  5215  002EBE                     u3530:
  5216  002EBE  EF24  F017         	goto	l3220
  5217  002EC2                     l3240:
  5218  002EC2  90D8               	bcf	status,0,c
  5219  002EC4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5220  002EC6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5221  002EC8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5222  002ECA  3201               	rrcf	___fltol@f1^0,f,c
  5223  002ECC  3E0A               	incfsz	___fltol@exp1^0,f,c
  5224  002ECE  EF61  F017         	goto	l3240
  5225  002ED2  EF83  F017         	goto	l3254
  5226  002ED6                     l3244:
  5227  002ED6  0E1F               	movlw	31
  5228  002ED8  640A               	cpfsgt	___fltol@exp1^0,c
  5229  002EDA  EF71  F017         	goto	u3541
  5230  002EDE  EF73  F017         	goto	u3540
  5231  002EE2                     u3541:
  5232  002EE2  EF7B  F017         	goto	l3252
  5233  002EE6                     u3540:
  5234  002EE6  EF24  F017         	goto	l3220
  5235  002EEA                     l3250:
  5236  002EEA  90D8               	bcf	status,0,c
  5237  002EEC  3601               	rlcf	___fltol@f1^0,f,c
  5238  002EEE  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5239  002EF0  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5240  002EF2  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5241  002EF4  060A               	decf	___fltol@exp1^0,f,c
  5242  002EF6                     l3252:
  5243  002EF6  500A               	movf	___fltol@exp1^0,w,c
  5244  002EF8  A4D8               	btfss	status,2,c
  5245  002EFA  EF81  F017         	goto	u3551
  5246  002EFE  EF83  F017         	goto	u3550
  5247  002F02                     u3551:
  5248  002F02  EF75  F017         	goto	l3250
  5249  002F06                     u3550:
  5250  002F06                     l3254:
  5251  002F06  5009               	movf	___fltol@sign1^0,w,c
  5252  002F08  B4D8               	btfsc	status,2,c
  5253  002F0A  EF89  F017         	goto	u3561
  5254  002F0E  EF8B  F017         	goto	u3560
  5255  002F12                     u3561:
  5256  002F12  EF93  F017         	goto	l3258
  5257  002F16                     u3560:
  5258  002F16  1E04               	comf	(___fltol@f1+3)^0,f,c
  5259  002F18  1E03               	comf	(___fltol@f1+2)^0,f,c
  5260  002F1A  1E02               	comf	(___fltol@f1+1)^0,f,c
  5261  002F1C  6C01               	negf	___fltol@f1^0,c
  5262  002F1E  0E00               	movlw	0
  5263  002F20  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5264  002F22  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5265  002F24  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5266  002F26                     l3258:
  5267  002F26  C001  F001         	movff	___fltol@f1,?___fltol
  5268  002F2A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5269  002F2E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5270  002F32  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5271  002F36                     l415:
  5272  002F36  0012               	return		;funcret
  5273  002F38                     __end_of___fltol:
  5274                           	callstack 0
  5275                           
  5276 ;; *************** function ___flneg *****************
  5277 ;; Defined at:
  5278 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  f1              4    0[COMRAM] long 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  4    0[COMRAM] long 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2, status,0
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5292 ;;      Params:         4       0       0       0       0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5295 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5296 ;;Total ram usage:        4 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; Hardware stack levels required when called: 1
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_efgtoa
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text17
  5307  003A3A                     __ptext17:
  5308                           	callstack 0
  5309  003A3A                     ___flneg:
  5310                           	callstack 25
  5311  003A3A  5001               	movf	___flneg@f1^0,w,c
  5312  003A3C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5313  003A3E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5314  003A40  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5315  003A42  B4D8               	btfsc	status,2,c
  5316  003A44  EF26  F01D         	goto	u3491
  5317  003A48  EF28  F01D         	goto	u3490
  5318  003A4C                     u3491:
  5319  003A4C  EF30  F01D         	goto	l3214
  5320  003A50                     u3490:
  5321  003A50  0E00               	movlw	0
  5322  003A52  1A01               	xorwf	___flneg@f1^0,f,c
  5323  003A54  0E00               	movlw	0
  5324  003A56  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5325  003A58  0E00               	movlw	0
  5326  003A5A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5327  003A5C  0E80               	movlw	128
  5328  003A5E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5329  003A60                     l3214:
  5330  003A60  C001  F001         	movff	___flneg@f1,?___flneg
  5331  003A64  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5332  003A68  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5333  003A6C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5334  003A70  0012               	return		;funcret
  5335  003A72                     __end_of___flneg:
  5336                           	callstack 0
  5337                           
  5338 ;; *************** function ___flge *****************
  5339 ;; Defined at:
  5340 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  ff1             4   39[COMRAM] long 
  5343 ;;  ff2             4   43[COMRAM] long 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;		None               void
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5355 ;;      Params:         8       0       0       0       0       0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5357 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5358 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5359 ;;Total ram usage:       12 bytes
  5360 ;; Hardware stack levels used: 1
  5361 ;; Hardware stack levels required when called: 1
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		_efgtoa
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text18
  5370  002F38                     __ptext18:
  5371                           	callstack 0
  5372  002F38                     ___flge:
  5373                           	callstack 25
  5374  002F38  0E00               	movlw	0
  5375  002F3A  1428               	andwf	___flge@ff1^0,w,c
  5376  002F3C  6E30               	movwf	??___flge^0,c
  5377  002F3E  0E00               	movlw	0
  5378  002F40  1429               	andwf	(___flge@ff1+1)^0,w,c
  5379  002F42  6E31               	movwf	(??___flge+1)^0,c
  5380  002F44  0E80               	movlw	128
  5381  002F46  142A               	andwf	(___flge@ff1+2)^0,w,c
  5382  002F48  6E32               	movwf	(??___flge+2)^0,c
  5383  002F4A  0E7F               	movlw	127
  5384  002F4C  142B               	andwf	(___flge@ff1+3)^0,w,c
  5385  002F4E  6E33               	movwf	(??___flge+3)^0,c
  5386  002F50  5030               	movf	??___flge^0,w,c
  5387  002F52  1031               	iorwf	(??___flge+1)^0,w,c
  5388  002F54  1032               	iorwf	(??___flge+2)^0,w,c
  5389  002F56  1033               	iorwf	(??___flge+3)^0,w,c
  5390  002F58  A4D8               	btfss	status,2,c
  5391  002F5A  EFB1  F017         	goto	u3441
  5392  002F5E  EFB3  F017         	goto	u3440
  5393  002F62                     u3441:
  5394  002F62  EFBB  F017         	goto	l3192
  5395  002F66                     u3440:
  5396  002F66  0E00               	movlw	0
  5397  002F68  6E28               	movwf	___flge@ff1^0,c
  5398  002F6A  0E00               	movlw	0
  5399  002F6C  6E29               	movwf	(___flge@ff1+1)^0,c
  5400  002F6E  0E00               	movlw	0
  5401  002F70  6E2A               	movwf	(___flge@ff1+2)^0,c
  5402  002F72  0E00               	movlw	0
  5403  002F74  6E2B               	movwf	(___flge@ff1+3)^0,c
  5404  002F76                     l3192:
  5405  002F76  0E00               	movlw	0
  5406  002F78  142C               	andwf	___flge@ff2^0,w,c
  5407  002F7A  6E30               	movwf	??___flge^0,c
  5408  002F7C  0E00               	movlw	0
  5409  002F7E  142D               	andwf	(___flge@ff2+1)^0,w,c
  5410  002F80  6E31               	movwf	(??___flge+1)^0,c
  5411  002F82  0E80               	movlw	128
  5412  002F84  142E               	andwf	(___flge@ff2+2)^0,w,c
  5413  002F86  6E32               	movwf	(??___flge+2)^0,c
  5414  002F88  0E7F               	movlw	127
  5415  002F8A  142F               	andwf	(___flge@ff2+3)^0,w,c
  5416  002F8C  6E33               	movwf	(??___flge+3)^0,c
  5417  002F8E  5030               	movf	??___flge^0,w,c
  5418  002F90  1031               	iorwf	(??___flge+1)^0,w,c
  5419  002F92  1032               	iorwf	(??___flge+2)^0,w,c
  5420  002F94  1033               	iorwf	(??___flge+3)^0,w,c
  5421  002F96  A4D8               	btfss	status,2,c
  5422  002F98  EFD0  F017         	goto	u3451
  5423  002F9C  EFD2  F017         	goto	u3450
  5424  002FA0                     u3451:
  5425  002FA0  EFDA  F017         	goto	l3196
  5426  002FA4                     u3450:
  5427  002FA4  0E00               	movlw	0
  5428  002FA6  6E2C               	movwf	___flge@ff2^0,c
  5429  002FA8  0E00               	movlw	0
  5430  002FAA  6E2D               	movwf	(___flge@ff2+1)^0,c
  5431  002FAC  0E00               	movlw	0
  5432  002FAE  6E2E               	movwf	(___flge@ff2+2)^0,c
  5433  002FB0  0E00               	movlw	0
  5434  002FB2  6E2F               	movwf	(___flge@ff2+3)^0,c
  5435  002FB4                     l3196:
  5436  002FB4  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5437  002FB6  EFDF  F017         	goto	u3461
  5438  002FBA  EFE1  F017         	goto	u3460
  5439  002FBE                     u3461:
  5440  002FBE  EFEA  F017         	goto	l3200
  5441  002FC2                     u3460:
  5442  002FC2  6C28               	negf	___flge@ff1^0,c
  5443  002FC4  1E29               	comf	(___flge@ff1+1)^0,f,c
  5444  002FC6  B0D8               	btfsc	status,0,c
  5445  002FC8  2A29               	incf	(___flge@ff1+1)^0,f,c
  5446  002FCA  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5447  002FCC  B0D8               	btfsc	status,0,c
  5448  002FCE  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5449  002FD0  0E80               	movlw	128
  5450  002FD2  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5451  002FD4                     l3200:
  5452  002FD4  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5453  002FD6  EFEF  F017         	goto	u3471
  5454  002FDA  EFF1  F017         	goto	u3470
  5455  002FDE                     u3471:
  5456  002FDE  EFFA  F017         	goto	l383
  5457  002FE2                     u3470:
  5458  002FE2  6C2C               	negf	___flge@ff2^0,c
  5459  002FE4  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5460  002FE6  B0D8               	btfsc	status,0,c
  5461  002FE8  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5462  002FEA  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5463  002FEC  B0D8               	btfsc	status,0,c
  5464  002FEE  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5465  002FF0  0E80               	movlw	128
  5466  002FF2  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5467  002FF4                     l383:
  5468  002FF4  0E00               	movlw	0
  5469  002FF6  1A28               	xorwf	___flge@ff1^0,f,c
  5470  002FF8  0E00               	movlw	0
  5471  002FFA  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5472  002FFC  0E00               	movlw	0
  5473  002FFE  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5474  003000  0E80               	movlw	128
  5475  003002  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5476  003004  0E00               	movlw	0
  5477  003006  1A2C               	xorwf	___flge@ff2^0,f,c
  5478  003008  0E00               	movlw	0
  5479  00300A  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5480  00300C  0E00               	movlw	0
  5481  00300E  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5482  003010  0E80               	movlw	128
  5483  003012  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5484  003014  502C               	movf	___flge@ff2^0,w,c
  5485  003016  5C28               	subwf	___flge@ff1^0,w,c
  5486  003018  502D               	movf	(___flge@ff2+1)^0,w,c
  5487  00301A  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5488  00301C  502E               	movf	(___flge@ff2+2)^0,w,c
  5489  00301E  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5490  003020  502F               	movf	(___flge@ff2+3)^0,w,c
  5491  003022  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5492  003024  B0D8               	btfsc	status,0,c
  5493  003026  EF17  F018         	goto	u3481
  5494  00302A  EF19  F018         	goto	u3480
  5495  00302E                     u3481:
  5496  00302E  EF1C  F018         	goto	l3206
  5497  003032                     u3480:
  5498  003032  90D8               	bcf	status,0,c
  5499  003034  EF1D  F018         	goto	l388
  5500  003038                     l3206:
  5501  003038  80D8               	bsf	status,0,c
  5502  00303A                     l388:
  5503  00303A  0012               	return		;funcret
  5504  00303C                     __end_of___flge:
  5505                           	callstack 0
  5506                           
  5507 ;; *************** function ___fleq *****************
  5508 ;; Defined at:
  5509 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  ff1             4    0[COMRAM] long 
  5512 ;;  ff2             4    4[COMRAM] long 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5524 ;;      Params:         8       0       0       0       0       0       0       0       0
  5525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5526 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5527 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5528 ;;Total ram usage:       12 bytes
  5529 ;; Hardware stack levels used: 1
  5530 ;; Hardware stack levels required when called: 1
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_efgtoa
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text19
  5539  0035FC                     __ptext19:
  5540                           	callstack 0
  5541  0035FC                     ___fleq:
  5542                           	callstack 25
  5543  0035FC  0E00               	movlw	0
  5544  0035FE  1401               	andwf	___fleq@ff1^0,w,c
  5545  003600  6E09               	movwf	??___fleq^0,c
  5546  003602  0E00               	movlw	0
  5547  003604  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5548  003606  6E0A               	movwf	(??___fleq+1)^0,c
  5549  003608  0E80               	movlw	128
  5550  00360A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5551  00360C  6E0B               	movwf	(??___fleq+2)^0,c
  5552  00360E  0E7F               	movlw	127
  5553  003610  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5554  003612  6E0C               	movwf	(??___fleq+3)^0,c
  5555  003614  5009               	movf	??___fleq^0,w,c
  5556  003616  100A               	iorwf	(??___fleq+1)^0,w,c
  5557  003618  100B               	iorwf	(??___fleq+2)^0,w,c
  5558  00361A  100C               	iorwf	(??___fleq+3)^0,w,c
  5559  00361C  A4D8               	btfss	status,2,c
  5560  00361E  EF13  F01B         	goto	u3411
  5561  003622  EF15  F01B         	goto	u3410
  5562  003626                     u3411:
  5563  003626  EF1D  F01B         	goto	l3176
  5564  00362A                     u3410:
  5565  00362A  0E00               	movlw	0
  5566  00362C  6E01               	movwf	___fleq@ff1^0,c
  5567  00362E  0E00               	movlw	0
  5568  003630  6E02               	movwf	(___fleq@ff1+1)^0,c
  5569  003632  0E00               	movlw	0
  5570  003634  6E03               	movwf	(___fleq@ff1+2)^0,c
  5571  003636  0E00               	movlw	0
  5572  003638  6E04               	movwf	(___fleq@ff1+3)^0,c
  5573  00363A                     l3176:
  5574  00363A  0E00               	movlw	0
  5575  00363C  1405               	andwf	___fleq@ff2^0,w,c
  5576  00363E  6E09               	movwf	??___fleq^0,c
  5577  003640  0E00               	movlw	0
  5578  003642  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5579  003644  6E0A               	movwf	(??___fleq+1)^0,c
  5580  003646  0E80               	movlw	128
  5581  003648  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5582  00364A  6E0B               	movwf	(??___fleq+2)^0,c
  5583  00364C  0E7F               	movlw	127
  5584  00364E  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5585  003650  6E0C               	movwf	(??___fleq+3)^0,c
  5586  003652  5009               	movf	??___fleq^0,w,c
  5587  003654  100A               	iorwf	(??___fleq+1)^0,w,c
  5588  003656  100B               	iorwf	(??___fleq+2)^0,w,c
  5589  003658  100C               	iorwf	(??___fleq+3)^0,w,c
  5590  00365A  A4D8               	btfss	status,2,c
  5591  00365C  EF32  F01B         	goto	u3421
  5592  003660  EF34  F01B         	goto	u3420
  5593  003664                     u3421:
  5594  003664  EF3C  F01B         	goto	l3180
  5595  003668                     u3420:
  5596  003668  0E00               	movlw	0
  5597  00366A  6E05               	movwf	___fleq@ff2^0,c
  5598  00366C  0E00               	movlw	0
  5599  00366E  6E06               	movwf	(___fleq@ff2+1)^0,c
  5600  003670  0E00               	movlw	0
  5601  003672  6E07               	movwf	(___fleq@ff2+2)^0,c
  5602  003674  0E00               	movlw	0
  5603  003676  6E08               	movwf	(___fleq@ff2+3)^0,c
  5604  003678                     l3180:
  5605  003678  5005               	movf	___fleq@ff2^0,w,c
  5606  00367A  1801               	xorwf	___fleq@ff1^0,w,c
  5607  00367C  E10F               	bnz	u3430
  5608  00367E  5006               	movf	(___fleq@ff2+1)^0,w,c
  5609  003680  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5610  003682  E10C               	bnz	u3430
  5611  003684  5007               	movf	(___fleq@ff2+2)^0,w,c
  5612  003686  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5613  003688  E109               	bnz	u3430
  5614  00368A  5008               	movf	(___fleq@ff2+3)^0,w,c
  5615  00368C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5616  00368E  B4D8               	btfsc	status,2,c
  5617  003690  EF4C  F01B         	goto	u3431
  5618  003694  EF4E  F01B         	goto	u3430
  5619  003698                     u3431:
  5620  003698  EF51  F01B         	goto	l3184
  5621  00369C                     u3430:
  5622  00369C  90D8               	bcf	status,0,c
  5623  00369E  EF52  F01B         	goto	l377
  5624  0036A2                     l3184:
  5625  0036A2  80D8               	bsf	status,0,c
  5626  0036A4                     l377:
  5627  0036A4  0012               	return		;funcret
  5628  0036A6                     __end_of___fleq:
  5629                           	callstack 0
  5630                           
  5631 ;; *************** function ___awmod *****************
  5632 ;; Defined at:
  5633 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  dividend        2    0[COMRAM] int 
  5636 ;;  divisor         2    2[COMRAM] int 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  sign            1    5[COMRAM] unsigned char 
  5639 ;;  counter         1    4[COMRAM] unsigned char 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  2    0[COMRAM] int 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5649 ;;      Params:         4       0       0       0       0       0       0       0       0
  5650 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5652 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5653 ;;Total ram usage:        6 bytes
  5654 ;; Hardware stack levels used: 1
  5655 ;; Hardware stack levels required when called: 1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_efgtoa
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text20
  5664  00354C                     __ptext20:
  5665                           	callstack 0
  5666  00354C                     ___awmod:
  5667                           	callstack 25
  5668  00354C  0E00               	movlw	0
  5669  00354E  6E06               	movwf	___awmod@sign^0,c
  5670  003550  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5671  003552  EFAF  F01A         	goto	u3350
  5672  003556  EFAD  F01A         	goto	u3351
  5673  00355A                     u3351:
  5674  00355A  EFB5  F01A         	goto	l3144
  5675  00355E                     u3350:
  5676  00355E  6C01               	negf	___awmod@dividend^0,c
  5677  003560  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5678  003562  B0D8               	btfsc	status,0,c
  5679  003564  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5680  003566  0E01               	movlw	1
  5681  003568  6E06               	movwf	___awmod@sign^0,c
  5682  00356A                     l3144:
  5683  00356A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5684  00356C  EFBC  F01A         	goto	u3360
  5685  003570  EFBA  F01A         	goto	u3361
  5686  003574                     u3361:
  5687  003574  EFC0  F01A         	goto	l3148
  5688  003578                     u3360:
  5689  003578  6C03               	negf	___awmod@divisor^0,c
  5690  00357A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5691  00357C  B0D8               	btfsc	status,0,c
  5692  00357E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5693  003580                     l3148:
  5694  003580  5003               	movf	___awmod@divisor^0,w,c
  5695  003582  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5696  003584  B4D8               	btfsc	status,2,c
  5697  003586  EFC7  F01A         	goto	u3371
  5698  00358A  EFC9  F01A         	goto	u3370
  5699  00358E                     u3371:
  5700  00358E  EFED  F01A         	goto	l3164
  5701  003592                     u3370:
  5702  003592  0E01               	movlw	1
  5703  003594  6E05               	movwf	___awmod@counter^0,c
  5704  003596  EFD1  F01A         	goto	l3154
  5705  00359A                     l3152:
  5706  00359A  90D8               	bcf	status,0,c
  5707  00359C  3603               	rlcf	___awmod@divisor^0,f,c
  5708  00359E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5709  0035A0  2A05               	incf	___awmod@counter^0,f,c
  5710  0035A2                     l3154:
  5711  0035A2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5712  0035A4  EFD6  F01A         	goto	u3381
  5713  0035A8  EFD8  F01A         	goto	u3380
  5714  0035AC                     u3381:
  5715  0035AC  EFCD  F01A         	goto	l3152
  5716  0035B0                     u3380:
  5717  0035B0                     l3156:
  5718  0035B0  5003               	movf	___awmod@divisor^0,w,c
  5719  0035B2  5C01               	subwf	___awmod@dividend^0,w,c
  5720  0035B4  5004               	movf	(___awmod@divisor+1)^0,w,c
  5721  0035B6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5722  0035B8  A0D8               	btfss	status,0,c
  5723  0035BA  EFE1  F01A         	goto	u3391
  5724  0035BE  EFE3  F01A         	goto	u3390
  5725  0035C2                     u3391:
  5726  0035C2  EFE7  F01A         	goto	l3160
  5727  0035C6                     u3390:
  5728  0035C6  5003               	movf	___awmod@divisor^0,w,c
  5729  0035C8  5E01               	subwf	___awmod@dividend^0,f,c
  5730  0035CA  5004               	movf	(___awmod@divisor+1)^0,w,c
  5731  0035CC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5732  0035CE                     l3160:
  5733  0035CE  90D8               	bcf	status,0,c
  5734  0035D0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5735  0035D2  3203               	rrcf	___awmod@divisor^0,f,c
  5736  0035D4  2E05               	decfsz	___awmod@counter^0,f,c
  5737  0035D6  EFD8  F01A         	goto	l3156
  5738  0035DA                     l3164:
  5739  0035DA  5006               	movf	___awmod@sign^0,w,c
  5740  0035DC  B4D8               	btfsc	status,2,c
  5741  0035DE  EFF3  F01A         	goto	u3401
  5742  0035E2  EFF5  F01A         	goto	u3400
  5743  0035E6                     u3401:
  5744  0035E6  EFF9  F01A         	goto	l3168
  5745  0035EA                     u3400:
  5746  0035EA  6C01               	negf	___awmod@dividend^0,c
  5747  0035EC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5748  0035EE  B0D8               	btfsc	status,0,c
  5749  0035F0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5750  0035F2                     l3168:
  5751  0035F2  C001  F001         	movff	___awmod@dividend,?___awmod
  5752  0035F6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5753  0035FA  0012               	return		;funcret
  5754  0035FC                     __end_of___awmod:
  5755                           	callstack 0
  5756                           
  5757 ;; *************** function ___awdiv *****************
  5758 ;; Defined at:
  5759 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  dividend        2    0[COMRAM] int 
  5762 ;;  divisor         2    2[COMRAM] int 
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;  quotient        2    6[COMRAM] int 
  5765 ;;  sign            1    5[COMRAM] unsigned char 
  5766 ;;  counter         1    4[COMRAM] unsigned char 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  2    0[COMRAM] int 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5776 ;;      Params:         4       0       0       0       0       0       0       0       0
  5777 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5779 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5780 ;;Total ram usage:        8 bytes
  5781 ;; Hardware stack levels used: 1
  5782 ;; Hardware stack levels required when called: 1
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_efgtoa
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text21
  5791  003488                     __ptext21:
  5792                           	callstack 0
  5793  003488                     ___awdiv:
  5794                           	callstack 25
  5795  003488  0E00               	movlw	0
  5796  00348A  6E06               	movwf	___awdiv@sign^0,c
  5797  00348C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5798  00348E  EF4D  F01A         	goto	u3290
  5799  003492  EF4B  F01A         	goto	u3291
  5800  003496                     u3291:
  5801  003496  EF53  F01A         	goto	l3100
  5802  00349A                     u3290:
  5803  00349A  6C03               	negf	___awdiv@divisor^0,c
  5804  00349C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5805  00349E  B0D8               	btfsc	status,0,c
  5806  0034A0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5807  0034A2  0E01               	movlw	1
  5808  0034A4  6E06               	movwf	___awdiv@sign^0,c
  5809  0034A6                     l3100:
  5810  0034A6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5811  0034A8  EF5A  F01A         	goto	u3300
  5812  0034AC  EF58  F01A         	goto	u3301
  5813  0034B0                     u3301:
  5814  0034B0  EF60  F01A         	goto	l3106
  5815  0034B4                     u3300:
  5816  0034B4  6C01               	negf	___awdiv@dividend^0,c
  5817  0034B6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5818  0034B8  B0D8               	btfsc	status,0,c
  5819  0034BA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5820  0034BC  0E01               	movlw	1
  5821  0034BE  1A06               	xorwf	___awdiv@sign^0,f,c
  5822  0034C0                     l3106:
  5823  0034C0  0E00               	movlw	0
  5824  0034C2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5825  0034C4  0E00               	movlw	0
  5826  0034C6  6E07               	movwf	___awdiv@quotient^0,c
  5827  0034C8  5003               	movf	___awdiv@divisor^0,w,c
  5828  0034CA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5829  0034CC  B4D8               	btfsc	status,2,c
  5830  0034CE  EF6B  F01A         	goto	u3311
  5831  0034D2  EF6D  F01A         	goto	u3310
  5832  0034D6                     u3311:
  5833  0034D6  EF95  F01A         	goto	l3128
  5834  0034DA                     u3310:
  5835  0034DA  0E01               	movlw	1
  5836  0034DC  6E05               	movwf	___awdiv@counter^0,c
  5837  0034DE  EF75  F01A         	goto	l3114
  5838  0034E2                     l3112:
  5839  0034E2  90D8               	bcf	status,0,c
  5840  0034E4  3603               	rlcf	___awdiv@divisor^0,f,c
  5841  0034E6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5842  0034E8  2A05               	incf	___awdiv@counter^0,f,c
  5843  0034EA                     l3114:
  5844  0034EA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5845  0034EC  EF7A  F01A         	goto	u3321
  5846  0034F0  EF7C  F01A         	goto	u3320
  5847  0034F4                     u3321:
  5848  0034F4  EF71  F01A         	goto	l3112
  5849  0034F8                     u3320:
  5850  0034F8                     l3116:
  5851  0034F8  90D8               	bcf	status,0,c
  5852  0034FA  3607               	rlcf	___awdiv@quotient^0,f,c
  5853  0034FC  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5854  0034FE  5003               	movf	___awdiv@divisor^0,w,c
  5855  003500  5C01               	subwf	___awdiv@dividend^0,w,c
  5856  003502  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5857  003504  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5858  003506  A0D8               	btfss	status,0,c
  5859  003508  EF88  F01A         	goto	u3331
  5860  00350C  EF8A  F01A         	goto	u3330
  5861  003510                     u3331:
  5862  003510  EF8F  F01A         	goto	l3124
  5863  003514                     u3330:
  5864  003514  5003               	movf	___awdiv@divisor^0,w,c
  5865  003516  5E01               	subwf	___awdiv@dividend^0,f,c
  5866  003518  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5867  00351A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5868  00351C  8007               	bsf	___awdiv@quotient^0,0,c
  5869  00351E                     l3124:
  5870  00351E  90D8               	bcf	status,0,c
  5871  003520  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5872  003522  3203               	rrcf	___awdiv@divisor^0,f,c
  5873  003524  2E05               	decfsz	___awdiv@counter^0,f,c
  5874  003526  EF7C  F01A         	goto	l3116
  5875  00352A                     l3128:
  5876  00352A  5006               	movf	___awdiv@sign^0,w,c
  5877  00352C  B4D8               	btfsc	status,2,c
  5878  00352E  EF9B  F01A         	goto	u3341
  5879  003532  EF9D  F01A         	goto	u3340
  5880  003536                     u3341:
  5881  003536  EFA1  F01A         	goto	l3132
  5882  00353A                     u3340:
  5883  00353A  6C07               	negf	___awdiv@quotient^0,c
  5884  00353C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5885  00353E  B0D8               	btfsc	status,0,c
  5886  003540  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5887  003542                     l3132:
  5888  003542  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5889  003546  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5890  00354A  0012               	return		;funcret
  5891  00354C                     __end_of___awdiv:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _atoi *****************
  5895 ;; Defined at:
  5896 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  s               2    7[COMRAM] PTR const unsigned char 
  5899 ;;		 -> STR_1(22), 
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;  n               2   15[COMRAM] int 
  5902 ;;  neg             2   13[COMRAM] int 
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  2    7[COMRAM] int 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5912 ;;      Params:         2       0       0       0       0       0       0       0       0
  5913 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5914 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5915 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5916 ;;Total ram usage:       10 bytes
  5917 ;; Hardware stack levels used: 1
  5918 ;; Hardware stack levels required when called: 2
  5919 ;; This function calls:
  5920 ;;		___wmul
  5921 ;;		_isdigit
  5922 ;;		_isspace
  5923 ;; This function is called by:
  5924 ;;		_vfpfcnvrt
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text22
  5929  002B96                     __ptext22:
  5930                           	callstack 0
  5931  002B96                     _atoi:
  5932                           	callstack 25
  5933  002B96  0E00               	movlw	0
  5934  002B98  6E11               	movwf	(atoi@n+1)^0,c
  5935  002B9A  0E00               	movlw	0
  5936  002B9C  6E10               	movwf	atoi@n^0,c
  5937  002B9E  0E00               	movlw	0
  5938  002BA0  6E0F               	movwf	(atoi@neg+1)^0,c
  5939  002BA2  0E00               	movlw	0
  5940  002BA4  6E0E               	movwf	atoi@neg^0,c
  5941  002BA6  EFD7  F015         	goto	l3676
  5942  002BAA                     l3672:
  5943  002BAA  4A08               	infsnz	atoi@s^0,f,c
  5944  002BAC  2A09               	incf	(atoi@s+1)^0,f,c
  5945  002BAE                     l3676:
  5946  002BAE  C008  FFF6         	movff	atoi@s,tblptrl
  5947  002BB2  C009  FFF7         	movff	atoi@s+1,tblptrh
  5948  002BB6                     	if	0	;tblptru may be non-zero
  5949  002BB6                     	endif
  5950  002BB6                     	if	0	;tblptru may be non-zero
  5951  002BB6                     	endif
  5952  002BB6  0008               	tblrd		*
  5953  002BB8  50F5               	movf	tablat,w,c
  5954  002BBA  0A20               	xorlw	32
  5955  002BBC  B4D8               	btfsc	status,2,c
  5956  002BBE  EFE3  F015         	goto	u4331
  5957  002BC2  EFE5  F015         	goto	u4330
  5958  002BC6                     u4331:
  5959  002BC6  EFD5  F015         	goto	l3672
  5960  002BCA                     u4330:
  5961  002BCA  0EF7               	movlw	247
  5962  002BCC  6E0A               	movwf	??_atoi^0,c
  5963  002BCE  0EFF               	movlw	255
  5964  002BD0  6E0B               	movwf	(??_atoi+1)^0,c
  5965  002BD2  C008  FFF6         	movff	atoi@s,tblptrl
  5966  002BD6  C009  FFF7         	movff	atoi@s+1,tblptrh
  5967  002BDA                     	if	0	;tblptru may be non-zero
  5968  002BDA                     	endif
  5969  002BDA                     	if	0	;tblptru may be non-zero
  5970  002BDA                     	endif
  5971  002BDA  0008               	tblrd		*
  5972  002BDC  50F5               	movf	tablat,w,c
  5973  002BDE  6E0C               	movwf	(??_atoi+2)^0,c
  5974  002BE0  6A0D               	clrf	(??_atoi+3)^0,c
  5975  002BE2  500A               	movf	??_atoi^0,w,c
  5976  002BE4  260C               	addwf	(??_atoi+2)^0,f,c
  5977  002BE6  500B               	movf	(??_atoi+1)^0,w,c
  5978  002BE8  220D               	addwfc	(??_atoi+3)^0,f,c
  5979  002BEA  500D               	movf	(??_atoi+3)^0,w,c
  5980  002BEC  E109               	bnz	u4340
  5981  002BEE  0E05               	movlw	5
  5982  002BF0  5C0C               	subwf	(??_atoi+2)^0,w,c
  5983  002BF2  A0D8               	btfss	status,0,c
  5984  002BF4  EFFE  F015         	goto	u4341
  5985  002BF8  EF00  F016         	goto	u4340
  5986  002BFC                     u4341:
  5987  002BFC  EFD5  F015         	goto	l3672
  5988  002C00                     u4340:
  5989  002C00  EF0A  F016         	goto	l3684
  5990  002C04                     l3680:
  5991  002C04  0E00               	movlw	0
  5992  002C06  6E0F               	movwf	(atoi@neg+1)^0,c
  5993  002C08  0E01               	movlw	1
  5994  002C0A  6E0E               	movwf	atoi@neg^0,c
  5995  002C0C                     l3682:
  5996  002C0C  4A08               	infsnz	atoi@s^0,f,c
  5997  002C0E  2A09               	incf	(atoi@s+1)^0,f,c
  5998  002C10  EF3F  F016         	goto	l3692
  5999  002C14                     l3684:
  6000  002C14  C008  FFF6         	movff	atoi@s,tblptrl
  6001  002C18  C009  FFF7         	movff	atoi@s+1,tblptrh
  6002  002C1C                     	if	0	;tblptru may be non-zero
  6003  002C1C                     	endif
  6004  002C1C                     	if	0	;tblptru may be non-zero
  6005  002C1C                     	endif
  6006  002C1C  0008               	tblrd		*
  6007  002C1E  50F5               	movf	tablat,w,c
  6008  002C20  6E0A               	movwf	??_atoi^0,c
  6009  002C22  6A0B               	clrf	(??_atoi+1)^0,c
  6010                           
  6011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6012                           ; Switch size 1, requested type "simple"
  6013                           ; Number of cases is 1, Range of values is 0 to 0
  6014                           ; switch strategies available:
  6015                           ; Name         Instructions Cycles
  6016                           ; simple_byte            4     3 (average)
  6017                           ;	Chosen strategy is simple_byte
  6018  002C24  500B               	movf	(??_atoi+1)^0,w,c
  6019  002C26  0A00               	xorlw	0	; case 0
  6020  002C28  B4D8               	btfsc	status,2,c
  6021  002C2A  EF19  F016         	goto	l4052
  6022  002C2E  EF3F  F016         	goto	l3692
  6023  002C32                     l4052:
  6024                           
  6025                           ; Switch size 1, requested type "simple"
  6026                           ; Number of cases is 2, Range of values is 43 to 45
  6027                           ; switch strategies available:
  6028                           ; Name         Instructions Cycles
  6029                           ; simple_byte            7     4 (average)
  6030                           ;	Chosen strategy is simple_byte
  6031  002C32  500A               	movf	??_atoi^0,w,c
  6032  002C34  0A2B               	xorlw	43	; case 43
  6033  002C36  B4D8               	btfsc	status,2,c
  6034  002C38  EF06  F016         	goto	l3682
  6035  002C3C  0A06               	xorlw	6	; case 45
  6036  002C3E  B4D8               	btfsc	status,2,c
  6037  002C40  EF02  F016         	goto	l3680
  6038  002C44  EF3F  F016         	goto	l3692
  6039  002C48                     l3686:
  6040  002C48  C010  F001         	movff	atoi@n,___wmul@multiplier
  6041  002C4C  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6042  002C50  0E00               	movlw	0
  6043  002C52  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6044  002C54  0E0A               	movlw	10
  6045  002C56  6E03               	movwf	___wmul@multiplicand^0,c
  6046  002C58  ECA1  F01D         	call	___wmul	;wreg free
  6047  002C5C  C008  FFF6         	movff	atoi@s,tblptrl
  6048  002C60  C009  FFF7         	movff	atoi@s+1,tblptrh
  6049  002C64                     	if	0	;tblptru may be non-zero
  6050  002C64                     	endif
  6051  002C64                     	if	0	;tblptru may be non-zero
  6052  002C64                     	endif
  6053  002C64  0008               	tblrd		*
  6054  002C66  50F5               	movf	tablat,w,c
  6055  002C68  5E01               	subwf	?___wmul^0,f,c
  6056  002C6A  0E00               	movlw	0
  6057  002C6C  5A02               	subwfb	(?___wmul+1)^0,f,c
  6058  002C6E  0E30               	movlw	48
  6059  002C70  2401               	addwf	?___wmul^0,w,c
  6060  002C72  6E10               	movwf	atoi@n^0,c
  6061  002C74  0E00               	movlw	0
  6062  002C76  2002               	addwfc	(?___wmul+1)^0,w,c
  6063  002C78  6E11               	movwf	(atoi@n+1)^0,c
  6064  002C7A  EF06  F016         	goto	l3682
  6065  002C7E                     l3692:
  6066  002C7E  0ED0               	movlw	208
  6067  002C80  6E0A               	movwf	??_atoi^0,c
  6068  002C82  0EFF               	movlw	255
  6069  002C84  6E0B               	movwf	(??_atoi+1)^0,c
  6070  002C86  C008  FFF6         	movff	atoi@s,tblptrl
  6071  002C8A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6072  002C8E                     	if	0	;tblptru may be non-zero
  6073  002C8E                     	endif
  6074  002C8E                     	if	0	;tblptru may be non-zero
  6075  002C8E                     	endif
  6076  002C8E  0008               	tblrd		*
  6077  002C90  50F5               	movf	tablat,w,c
  6078  002C92  6E0C               	movwf	(??_atoi+2)^0,c
  6079  002C94  6A0D               	clrf	(??_atoi+3)^0,c
  6080  002C96  500A               	movf	??_atoi^0,w,c
  6081  002C98  260C               	addwf	(??_atoi+2)^0,f,c
  6082  002C9A  500B               	movf	(??_atoi+1)^0,w,c
  6083  002C9C  220D               	addwfc	(??_atoi+3)^0,f,c
  6084  002C9E  500D               	movf	(??_atoi+3)^0,w,c
  6085  002CA0  E109               	bnz	u4350
  6086  002CA2  0E0A               	movlw	10
  6087  002CA4  5C0C               	subwf	(??_atoi+2)^0,w,c
  6088  002CA6  A0D8               	btfss	status,0,c
  6089  002CA8  EF58  F016         	goto	u4351
  6090  002CAC  EF5A  F016         	goto	u4350
  6091  002CB0                     u4351:
  6092  002CB0  EF24  F016         	goto	l3686
  6093  002CB4                     u4350:
  6094  002CB4  500E               	movf	atoi@neg^0,w,c
  6095  002CB6  100F               	iorwf	(atoi@neg+1)^0,w,c
  6096  002CB8  A4D8               	btfss	status,2,c
  6097  002CBA  EF61  F016         	goto	u4361
  6098  002CBE  EF63  F016         	goto	u4360
  6099  002CC2                     u4361:
  6100  002CC2  EF71  F016         	goto	l997
  6101  002CC6                     u4360:
  6102  002CC6  C010  F00A         	movff	atoi@n,??_atoi
  6103  002CCA  C011  F00B         	movff	atoi@n+1,??_atoi+1
  6104  002CCE  1E0A               	comf	??_atoi^0,f,c
  6105  002CD0  1E0B               	comf	(??_atoi+1)^0,f,c
  6106  002CD2  4A0A               	infsnz	??_atoi^0,f,c
  6107  002CD4  2A0B               	incf	(??_atoi+1)^0,f,c
  6108  002CD6  C00A  F008         	movff	??_atoi,?_atoi
  6109  002CDA  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6110  002CDE  EF75  F016         	goto	l1000
  6111  002CE2                     l997:
  6112  002CE2  C010  F008         	movff	atoi@n,?_atoi
  6113  002CE6  C011  F009         	movff	atoi@n+1,?_atoi+1
  6114  002CEA                     l1000:
  6115  002CEA  0012               	return		;funcret
  6116  002CEC                     __end_of_atoi:
  6117                           	callstack 0
  6118                           
  6119 ;; *************** function _isspace *****************
  6120 ;; Defined at:
  6121 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  c               2    0[COMRAM] int 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  2    0[COMRAM] int 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6135 ;;      Params:         2       0       0       0       0       0       0       0       0
  6136 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6137 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6138 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6139 ;;Total ram usage:        7 bytes
  6140 ;; Hardware stack levels used: 1
  6141 ;; Hardware stack levels required when called: 1
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_atoi
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text23
  6150  00385A                     __ptext23:
  6151                           	callstack 0
  6152  00385A                     _isspace:
  6153                           	callstack 25
  6154  00385A  0E01               	movlw	1
  6155  00385C  6E07               	movwf	_isspace$1039^0,c
  6156  00385E  0E20               	movlw	32
  6157  003860  1801               	xorwf	isspace@c^0,w,c
  6158  003862  1002               	iorwf	(isspace@c+1)^0,w,c
  6159  003864  B4D8               	btfsc	status,2,c
  6160  003866  EF37  F01C         	goto	u3831
  6161  00386A  EF39  F01C         	goto	u3830
  6162  00386E                     u3831:
  6163  00386E  EF52  F01C         	goto	l3360
  6164  003872                     u3830:
  6165  003872  0EF7               	movlw	247
  6166  003874  6E03               	movwf	??_isspace^0,c
  6167  003876  0EFF               	movlw	255
  6168  003878  6E04               	movwf	(??_isspace+1)^0,c
  6169  00387A  C001  F005         	movff	isspace@c,??_isspace+2
  6170  00387E  C002  F006         	movff	isspace@c+1,??_isspace+3
  6171  003882  5003               	movf	??_isspace^0,w,c
  6172  003884  2605               	addwf	(??_isspace+2)^0,f,c
  6173  003886  5004               	movf	(??_isspace+1)^0,w,c
  6174  003888  2206               	addwfc	(??_isspace+3)^0,f,c
  6175  00388A  5006               	movf	(??_isspace+3)^0,w,c
  6176  00388C  E109               	bnz	u3840
  6177  00388E  0E05               	movlw	5
  6178  003890  5C05               	subwf	(??_isspace+2)^0,w,c
  6179  003892  A0D8               	btfss	status,0,c
  6180  003894  EF4E  F01C         	goto	u3841
  6181  003898  EF50  F01C         	goto	u3840
  6182  00389C                     u3841:
  6183  00389C  EF52  F01C         	goto	l3360
  6184  0038A0                     u3840:
  6185  0038A0  0E00               	movlw	0
  6186  0038A2  6E07               	movwf	_isspace$1039^0,c
  6187  0038A4                     l3360:
  6188  0038A4  C007  F001         	movff	_isspace$1039,?_isspace
  6189  0038A8  6A02               	clrf	(?_isspace+1)^0,c
  6190  0038AA  0012               	return		;funcret
  6191  0038AC                     __end_of_isspace:
  6192                           	callstack 0
  6193                           
  6194 ;; *************** function _isdigit *****************
  6195 ;; Defined at:
  6196 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  c               2    0[COMRAM] int 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  2    0[COMRAM] int 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6210 ;;      Params:         2       0       0       0       0       0       0       0       0
  6211 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6212 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6213 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6214 ;;Total ram usage:        6 bytes
  6215 ;; Hardware stack levels used: 1
  6216 ;; Hardware stack levels required when called: 1
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_vfpfcnvrt
  6221 ;;		_atoi
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text24
  6226  003A72                     __ptext24:
  6227                           	callstack 0
  6228  003A72                     _isdigit:
  6229                           	callstack 26
  6230  003A72  0ED0               	movlw	208
  6231  003A74  6E03               	movwf	??_isdigit^0,c
  6232  003A76  0EFF               	movlw	255
  6233  003A78  6E04               	movwf	(??_isdigit+1)^0,c
  6234  003A7A  C001  F005         	movff	isdigit@c,??_isdigit+2
  6235  003A7E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6236  003A82  5003               	movf	??_isdigit^0,w,c
  6237  003A84  2605               	addwf	(??_isdigit+2)^0,f,c
  6238  003A86  5004               	movf	(??_isdigit+1)^0,w,c
  6239  003A88  2206               	addwfc	(??_isdigit+3)^0,f,c
  6240  003A8A  5006               	movf	(??_isdigit+3)^0,w,c
  6241  003A8C  E10A               	bnz	u3810
  6242  003A8E  0E0A               	movlw	10
  6243  003A90  5C05               	subwf	(??_isdigit+2)^0,w,c
  6244  003A92  A0D8               	btfss	status,0,c
  6245  003A94  EF4E  F01D         	goto	u3811
  6246  003A98  EF51  F01D         	goto	u3810
  6247  003A9C                     u3811:
  6248  003A9C  0E01               	movlw	1
  6249  003A9E  EF52  F01D         	goto	u3820
  6250  003AA2                     u3810:
  6251  003AA2  0E00               	movlw	0
  6252  003AA4                     u3820:
  6253  003AA4  6E01               	movwf	?_isdigit^0,c
  6254  003AA6  6A02               	clrf	(?_isdigit+1)^0,c
  6255  003AA8  0012               	return		;funcret
  6256  003AAA                     __end_of_isdigit:
  6257                           	callstack 0
  6258                           
  6259 ;; *************** function ___wmul *****************
  6260 ;; Defined at:
  6261 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  multiplier      2    0[COMRAM] unsigned int 
  6264 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  product         2    4[COMRAM] unsigned int 
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  2    0[COMRAM] unsigned int 
  6269 ;; Registers used:
  6270 ;;		wreg, status,2, status,0, prodl, prodh
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6276 ;;      Params:         4       0       0       0       0       0       0       0       0
  6277 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6279 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6280 ;;Total ram usage:        6 bytes
  6281 ;; Hardware stack levels used: 1
  6282 ;; Hardware stack levels required when called: 1
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_atoi
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           	psect	text25
  6291  003B42                     __ptext25:
  6292                           	callstack 0
  6293  003B42                     ___wmul:
  6294                           	callstack 25
  6295  003B42  5001               	movf	___wmul@multiplier^0,w,c
  6296  003B44  0203               	mulwf	___wmul@multiplicand^0,c
  6297  003B46  CFF3 F005          	movff	prodl,___wmul@product
  6298  003B4A  CFF4 F006          	movff	prodh,___wmul@product+1
  6299  003B4E  5001               	movf	___wmul@multiplier^0,w,c
  6300  003B50  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6301  003B52  50F3               	movf	243,w,c
  6302  003B54  2606               	addwf	(___wmul@product+1)^0,f,c
  6303  003B56  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6304  003B58  0203               	mulwf	___wmul@multiplicand^0,c
  6305  003B5A  50F3               	movf	243,w,c
  6306  003B5C  2606               	addwf	(___wmul@product+1)^0,f,c
  6307  003B5E  C005  F001         	movff	___wmul@product,?___wmul
  6308  003B62  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6309  003B66  0012               	return		;funcret
  6310  003B68                     __end_of___wmul:
  6311                           	callstack 0
  6312                           
  6313 ;; *************** function _UART_Write_Text *****************
  6314 ;; Defined at:
  6315 ;;		line 44 in file "UART_LIB.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  text            2    1[COMRAM] PTR unsigned char 
  6318 ;;		 -> strUART(50), 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6330 ;;      Params:         2       0       0       0       0       0       0       0       0
  6331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6333 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6334 ;;Total ram usage:        2 bytes
  6335 ;; Hardware stack levels used: 1
  6336 ;; Hardware stack levels required when called: 2
  6337 ;; This function calls:
  6338 ;;		_UART_Write_Chr
  6339 ;; This function is called by:
  6340 ;;		_main
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text26
  6345  003B12                     __ptext26:
  6346                           	callstack 0
  6347  003B12                     _UART_Write_Text:
  6348                           	callstack 28
  6349  003B12                     
  6350                           ;UART_LIB.c: 45:     while(*text){
  6351  003B12  EF94  F01D         	goto	l3978
  6352  003B16                     l3974:
  6353                           
  6354                           ;UART_LIB.c: 46:         UART_Write_Chr(*text);
  6355  003B16  C002  FFD9         	movff	UART_Write_Text@text,fsr2l
  6356  003B1A  C003  FFDA         	movff	UART_Write_Text@text+1,fsr2h
  6357  003B1E  50DF               	movf	indf2,w,c
  6358  003B20  ECB4  F01D         	call	_UART_Write_Chr
  6359  003B24                     
  6360                           ;UART_LIB.c: 47:         text++;
  6361  003B24  4A02               	infsnz	UART_Write_Text@text^0,f,c
  6362  003B26  2A03               	incf	(UART_Write_Text@text+1)^0,f,c
  6363  003B28                     l3978:
  6364                           
  6365                           ;UART_LIB.c: 45:     while(*text){
  6366  003B28  C002  FFD9         	movff	UART_Write_Text@text,fsr2l
  6367  003B2C  C003  FFDA         	movff	UART_Write_Text@text+1,fsr2h
  6368  003B30  50DF               	movf	indf2,w,c
  6369  003B32  A4D8               	btfss	status,2,c
  6370  003B34  EF9E  F01D         	goto	u4761
  6371  003B38  EFA0  F01D         	goto	u4760
  6372  003B3C                     u4761:
  6373  003B3C  EF8B  F01D         	goto	l3974
  6374  003B40                     u4760:
  6375  003B40  0012               	return		;funcret
  6376  003B42                     __end_of_UART_Write_Text:
  6377                           	callstack 0
  6378                           
  6379 ;; *************** function _UART_Write_Chr *****************
  6380 ;; Defined at:
  6381 ;;		line 40 in file "UART_LIB.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  letter          1    wreg     unsigned char 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  letter          1    0[COMRAM] unsigned char 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  1    wreg      void 
  6388 ;; Registers used:
  6389 ;;		wreg
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6395 ;;      Params:         0       0       0       0       0       0       0       0       0
  6396 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6398 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6399 ;;Total ram usage:        1 bytes
  6400 ;; Hardware stack levels used: 1
  6401 ;; Hardware stack levels required when called: 1
  6402 ;; This function calls:
  6403 ;;		Nothing
  6404 ;; This function is called by:
  6405 ;;		_UART_Write_Text
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text27
  6410  003B68                     __ptext27:
  6411                           	callstack 0
  6412  003B68                     _UART_Write_Chr:
  6413                           	callstack 28
  6414                           
  6415                           ;incstack = 0
  6416                           ;UART_Write_Chr@letter stored from wreg
  6417  003B68  6E01               	movwf	UART_Write_Chr@letter^0,c
  6418  003B6A                     l78:
  6419  003B6A  A2AC               	btfss	172,1,c	;volatile
  6420  003B6C  EFBA  F01D         	goto	u4551
  6421  003B70  EFBC  F01D         	goto	u4550
  6422  003B74                     u4551:
  6423  003B74  EFB5  F01D         	goto	l78
  6424  003B78                     u4550:
  6425  003B78                     
  6426                           ;UART_LIB.c: 42:     TXREG = letter;
  6427  003B78  C001  FFAD         	movff	UART_Write_Chr@letter,4013	;volatile
  6428  003B7C  0012               	return		;funcret
  6429  003B7E                     __end_of_UART_Write_Chr:
  6430                           	callstack 0
  6431                           
  6432 ;; *************** function _UART_Init *****************
  6433 ;; Defined at:
  6434 ;;		line 5 in file "UART_LIB.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  config          8   13[COMRAM] struct .
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  spbrg_val       4   25[COMRAM] unsigned long 
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1    wreg      void 
  6441 ;; Registers used:
  6442 ;;		wreg, status,2, status,0, cstack
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6448 ;;      Params:         8       0       0       0       0       0       0       0       0
  6449 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6450 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6451 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6452 ;;Total ram usage:       16 bytes
  6453 ;; Hardware stack levels used: 1
  6454 ;; Hardware stack levels required when called: 2
  6455 ;; This function calls:
  6456 ;;		___lldiv
  6457 ;; This function is called by:
  6458 ;;		_main
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text28
  6463  00313A                     __ptext28:
  6464                           	callstack 0
  6465  00313A                     _UART_Init:
  6466                           	callstack 28
  6467  00313A                     
  6468                           ;UART_LIB.c: 7:     unsigned long spbrg_val = (20000000UL / (16 * config.baud_rate)) - 1
      +                          ;
  6469  00313A  0E00               	movlw	0
  6470  00313C  6E01               	movwf	___lldiv@dividend^0,c
  6471  00313E  0E2D               	movlw	45
  6472  003140  6E02               	movwf	(___lldiv@dividend+1)^0,c
  6473  003142  0E31               	movlw	49
  6474  003144  6E03               	movwf	(___lldiv@dividend+2)^0,c
  6475  003146  0E01               	movlw	1
  6476  003148  6E04               	movwf	(___lldiv@dividend+3)^0,c
  6477  00314A  C00E  F016         	movff	UART_Init@config,??_UART_Init
  6478  00314E  C00F  F017         	movff	UART_Init@config+1,??_UART_Init+1
  6479  003152  C010  F018         	movff	UART_Init@config+2,??_UART_Init+2
  6480  003156  C011  F019         	movff	UART_Init@config+3,??_UART_Init+3
  6481  00315A  0E04               	movlw	4
  6482  00315C                     u4705:
  6483  00315C  90D8               	bcf	status,0,c
  6484  00315E  3616               	rlcf	??_UART_Init^0,f,c
  6485  003160  3617               	rlcf	(??_UART_Init+1)^0,f,c
  6486  003162  3618               	rlcf	(??_UART_Init+2)^0,f,c
  6487  003164  3619               	rlcf	(??_UART_Init+3)^0,f,c
  6488  003166  2EE8               	decfsz	wreg,f,c
  6489  003168  EFAE  F018         	goto	u4705
  6490  00316C  C016  F005         	movff	??_UART_Init,___lldiv@divisor
  6491  003170  C017  F006         	movff	??_UART_Init+1,___lldiv@divisor+1
  6492  003174  C018  F007         	movff	??_UART_Init+2,___lldiv@divisor+2
  6493  003178  C019  F008         	movff	??_UART_Init+3,___lldiv@divisor+3
  6494  00317C  EC53  F01B         	call	___lldiv	;wreg free
  6495  003180  0EFF               	movlw	255
  6496  003182  2401               	addwf	?___lldiv^0,w,c
  6497  003184  6E1A               	movwf	UART_Init@spbrg_val^0,c
  6498  003186  0EFF               	movlw	255
  6499  003188  2002               	addwfc	(?___lldiv+1)^0,w,c
  6500  00318A  6E1B               	movwf	(UART_Init@spbrg_val+1)^0,c
  6501  00318C  0EFF               	movlw	255
  6502  00318E  2003               	addwfc	(?___lldiv+2)^0,w,c
  6503  003190  6E1C               	movwf	(UART_Init@spbrg_val+2)^0,c
  6504  003192  0EFF               	movlw	255
  6505  003194  2004               	addwfc	(?___lldiv+3)^0,w,c
  6506  003196  6E1D               	movwf	(UART_Init@spbrg_val+3)^0,c
  6507  003198                     
  6508                           ;UART_LIB.c: 8:     SPBRG = (unsigned char)(spbrg_val);
  6509  003198  C01A  FFAF         	movff	UART_Init@spbrg_val,4015	;volatile
  6510  00319C                     
  6511                           ;UART_LIB.c: 11:     TXSTA = 0x24;
  6512  00319C  0E24               	movlw	36
  6513  00319E  6EAC               	movwf	172,c	;volatile
  6514  0031A0                     
  6515                           ;UART_LIB.c: 12:     RCSTA = 0x90;
  6516  0031A0  0E90               	movlw	144
  6517  0031A2  6EAB               	movwf	171,c	;volatile
  6518  0031A4                     
  6519                           ;UART_LIB.c: 15:     TX9 = config.data_bits == 9 ? 1 : 0;
  6520  0031A4  0E09               	movlw	9
  6521  0031A6  1812               	xorwf	(UART_Init@config+4)^0,w,c
  6522  0031A8  B4D8               	btfsc	status,2,c
  6523  0031AA  EFD9  F018         	goto	u4711
  6524  0031AE  EFDC  F018         	goto	u4710
  6525  0031B2                     u4711:
  6526  0031B2  8CAC               	bsf	4012,6,c	;volatile
  6527  0031B4  EFDD  F018         	goto	u4725
  6528  0031B8                     u4710:
  6529  0031B8  9CAC               	bcf	4012,6,c	;volatile
  6530  0031BA                     u4725:
  6531  0031BA                     
  6532                           ;UART_LIB.c: 16:     RX9 = config.data_bits == 9 ? 1 : 0;
  6533  0031BA  0E09               	movlw	9
  6534  0031BC  1812               	xorwf	(UART_Init@config+4)^0,w,c
  6535  0031BE  B4D8               	btfsc	status,2,c
  6536  0031C0  EFE4  F018         	goto	u4731
  6537  0031C4  EFE7  F018         	goto	u4730
  6538  0031C8                     u4731:
  6539  0031C8  8CAB               	bsf	4011,6,c	;volatile
  6540  0031CA  EFE8  F018         	goto	u4745
  6541  0031CE                     u4730:
  6542  0031CE  9CAB               	bcf	4011,6,c	;volatile
  6543  0031D0                     u4745:
  6544  0031D0                     
  6545                           ;UART_LIB.c: 17:     TXEN = 1;
  6546  0031D0  8AAC               	bsf	4012,5,c	;volatile
  6547  0031D2                     
  6548                           ;UART_LIB.c: 18:     SYNC = 0;
  6549  0031D2  98AC               	bcf	4012,4,c	;volatile
  6550  0031D4                     
  6551                           ;UART_LIB.c: 19:     SPEN = 1;
  6552  0031D4  8EAB               	bsf	4011,7,c	;volatile
  6553                           
  6554                           ;UART_LIB.c: 22:     switch (config.parity) {
  6555  0031D6  EFFB  F018         	goto	l3938
  6556  0031DA                     l71:
  6557                           
  6558                           ;UART_LIB.c: 24:             BRGH = 1;
  6559  0031DA  84AC               	bsf	4012,2,c	;volatile
  6560                           
  6561                           ;UART_LIB.c: 25:             TX9D = 0;
  6562  0031DC  90AC               	bcf	4012,0,c	;volatile
  6563  0031DE                     l3930:
  6564                           
  6565                           ;UART_LIB.c: 26:             RCSTA |= 0x02;
  6566  0031DE  82AB               	bsf	171,1,c	;volatile
  6567                           
  6568                           ;UART_LIB.c: 27:             break;
  6569  0031E0  EF10  F019         	goto	l75
  6570  0031E4                     l73:
  6571                           
  6572                           ;UART_LIB.c: 29:             BRGH = 1;
  6573  0031E4  84AC               	bsf	4012,2,c	;volatile
  6574                           
  6575                           ;UART_LIB.c: 30:             TX9D = 1;
  6576  0031E6  80AC               	bsf	4012,0,c	;volatile
  6577  0031E8  EFEF  F018         	goto	l3930
  6578  0031EC                     l74:
  6579                           
  6580                           ;UART_LIB.c: 34:             BRGH = 1;
  6581  0031EC  84AC               	bsf	4012,2,c	;volatile
  6582                           
  6583                           ;UART_LIB.c: 35:             TX9D = 0;
  6584  0031EE  90AC               	bcf	4012,0,c	;volatile
  6585  0031F0                     
  6586                           ;UART_LIB.c: 36:             RCSTA &= ~0x02;
  6587  0031F0  92AB               	bcf	171,1,c	;volatile
  6588                           
  6589                           ;UART_LIB.c: 37:             break;
  6590  0031F2  EF10  F019         	goto	l75
  6591  0031F6                     l3938:
  6592  0031F6  5013               	movf	(UART_Init@config+5)^0,w,c
  6593  0031F8  6E16               	movwf	??_UART_Init^0,c
  6594  0031FA  6A17               	clrf	(??_UART_Init+1)^0,c
  6595                           
  6596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6597                           ; Switch size 1, requested type "simple"
  6598                           ; Number of cases is 1, Range of values is 0 to 0
  6599                           ; switch strategies available:
  6600                           ; Name         Instructions Cycles
  6601                           ; simple_byte            4     3 (average)
  6602                           ;	Chosen strategy is simple_byte
  6603  0031FC  5017               	movf	(??_UART_Init+1)^0,w,c
  6604  0031FE  0A00               	xorlw	0	; case 0
  6605  003200  B4D8               	btfsc	status,2,c
  6606  003202  EF05  F019         	goto	l4054
  6607  003206  EFF6  F018         	goto	l74
  6608  00320A                     l4054:
  6609                           
  6610                           ; Switch size 1, requested type "simple"
  6611                           ; Number of cases is 2, Range of values is 1 to 2
  6612                           ; switch strategies available:
  6613                           ; Name         Instructions Cycles
  6614                           ; simple_byte            7     4 (average)
  6615                           ;	Chosen strategy is simple_byte
  6616  00320A  5016               	movf	??_UART_Init^0,w,c
  6617  00320C  0A01               	xorlw	1	; case 1
  6618  00320E  B4D8               	btfsc	status,2,c
  6619  003210  EFED  F018         	goto	l71
  6620  003214  0A03               	xorlw	3	; case 2
  6621  003216  B4D8               	btfsc	status,2,c
  6622  003218  EFF2  F018         	goto	l73
  6623  00321C  EFF6  F018         	goto	l74
  6624  003220                     l75:
  6625  003220  0012               	return		;funcret
  6626  003222                     __end_of_UART_Init:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function ___lldiv *****************
  6630 ;; Defined at:
  6631 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  dividend        4    0[COMRAM] unsigned long 
  6634 ;;  divisor         4    4[COMRAM] unsigned long 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;  quotient        4    8[COMRAM] unsigned long 
  6637 ;;  counter         1   12[COMRAM] unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  4    0[COMRAM] unsigned long 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6647 ;;      Params:         8       0       0       0       0       0       0       0       0
  6648 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6650 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6651 ;;Total ram usage:       13 bytes
  6652 ;; Hardware stack levels used: 1
  6653 ;; Hardware stack levels required when called: 1
  6654 ;; This function calls:
  6655 ;;		Nothing
  6656 ;; This function is called by:
  6657 ;;		_UART_Init
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text29
  6662  0036A6                     __ptext29:
  6663                           	callstack 0
  6664  0036A6                     ___lldiv:
  6665                           	callstack 28
  6666  0036A6  0E00               	movlw	0
  6667  0036A8  6E09               	movwf	___lldiv@quotient^0,c
  6668  0036AA  0E00               	movlw	0
  6669  0036AC  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6670  0036AE  0E00               	movlw	0
  6671  0036B0  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6672  0036B2  0E00               	movlw	0
  6673  0036B4  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6674  0036B6  5005               	movf	___lldiv@divisor^0,w,c
  6675  0036B8  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6676  0036BA  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6677  0036BC  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6678  0036BE  B4D8               	btfsc	status,2,c
  6679  0036C0  EF64  F01B         	goto	u4561
  6680  0036C4  EF66  F01B         	goto	u4560
  6681  0036C8                     u4561:
  6682  0036C8  EF9C  F01B         	goto	l145
  6683  0036CC                     u4560:
  6684  0036CC  0E01               	movlw	1
  6685  0036CE  6E0D               	movwf	___lldiv@counter^0,c
  6686  0036D0  EF70  F01B         	goto	l3838
  6687  0036D4                     l3836:
  6688  0036D4  90D8               	bcf	status,0,c
  6689  0036D6  3605               	rlcf	___lldiv@divisor^0,f,c
  6690  0036D8  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6691  0036DA  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6692  0036DC  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6693  0036DE  2A0D               	incf	___lldiv@counter^0,f,c
  6694  0036E0                     l3838:
  6695  0036E0  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6696  0036E2  EF75  F01B         	goto	u4571
  6697  0036E6  EF77  F01B         	goto	u4570
  6698  0036EA                     u4571:
  6699  0036EA  EF6A  F01B         	goto	l3836
  6700  0036EE                     u4570:
  6701  0036EE                     l3840:
  6702  0036EE  90D8               	bcf	status,0,c
  6703  0036F0  3609               	rlcf	___lldiv@quotient^0,f,c
  6704  0036F2  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6705  0036F4  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6706  0036F6  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6707  0036F8  5005               	movf	___lldiv@divisor^0,w,c
  6708  0036FA  5C01               	subwf	___lldiv@dividend^0,w,c
  6709  0036FC  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6710  0036FE  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6711  003700  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6712  003702  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6713  003704  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6714  003706  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6715  003708  A0D8               	btfss	status,0,c
  6716  00370A  EF89  F01B         	goto	u4581
  6717  00370E  EF8B  F01B         	goto	u4580
  6718  003712                     u4581:
  6719  003712  EF94  F01B         	goto	l3848
  6720  003716                     u4580:
  6721  003716  5005               	movf	___lldiv@divisor^0,w,c
  6722  003718  5E01               	subwf	___lldiv@dividend^0,f,c
  6723  00371A  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6724  00371C  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6725  00371E  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6726  003720  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6727  003722  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6728  003724  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6729  003726  8009               	bsf	___lldiv@quotient^0,0,c
  6730  003728                     l3848:
  6731  003728  90D8               	bcf	status,0,c
  6732  00372A  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6733  00372C  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6734  00372E  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6735  003730  3205               	rrcf	___lldiv@divisor^0,f,c
  6736  003732  2E0D               	decfsz	___lldiv@counter^0,f,c
  6737  003734  EF77  F01B         	goto	l3840
  6738  003738                     l145:
  6739  003738  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6740  00373C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6741  003740  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6742  003744  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6743  003748  0012               	return		;funcret
  6744  00374A                     __end_of___lldiv:
  6745                           	callstack 0
  6746                           
  6747 ;; *************** function _ADC_Read *****************
  6748 ;; Defined at:
  6749 ;;		line 11 in file "ADC_LIB.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  channel         1    wreg     unsigned char 
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;  channel         1    4[COMRAM] unsigned char 
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  2    0[COMRAM] int 
  6756 ;; Registers used:
  6757 ;;		wreg, status,2, status,0
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6763 ;;      Params:         2       0       0       0       0       0       0       0       0
  6764 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6765 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6766 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6767 ;;Total ram usage:        5 bytes
  6768 ;; Hardware stack levels used: 1
  6769 ;; Hardware stack levels required when called: 1
  6770 ;; This function calls:
  6771 ;;		Nothing
  6772 ;; This function is called by:
  6773 ;;		_main
  6774 ;; This function uses a non-reentrant model
  6775 ;;
  6776                           
  6777                           	psect	text30
  6778  0039C2                     __ptext30:
  6779                           	callstack 0
  6780  0039C2                     _ADC_Read:
  6781                           	callstack 29
  6782                           
  6783                           ;incstack = 0
  6784                           ;ADC_Read@channel stored from wreg
  6785  0039C2  6E05               	movwf	ADC_Read@channel^0,c
  6786  0039C4                     
  6787                           ;ADC_LIB.c: 12:     ADCON0bits.CHS = channel & 0x0F;
  6788  0039C4  C005  F003         	movff	ADC_Read@channel,??_ADC_Read
  6789  0039C8  0E0F               	movlw	15
  6790  0039CA  1603               	andwf	??_ADC_Read^0,f,c
  6791  0039CC  4603               	rlncf	??_ADC_Read^0,f,c
  6792  0039CE  4603               	rlncf	??_ADC_Read^0,f,c
  6793  0039D0  50C2               	movf	194,w,c	;volatile
  6794  0039D2  1803               	xorwf	??_ADC_Read^0,w,c
  6795  0039D4  0BC3               	andlw	-61
  6796  0039D6  1803               	xorwf	??_ADC_Read^0,w,c
  6797  0039D8  6EC2               	movwf	194,c	;volatile
  6798  0039DA                     
  6799                           ;ADC_LIB.c: 13:     ADCON0bits.GODONE = 1;
  6800  0039DA  82C2               	bsf	194,1,c	;volatile
  6801  0039DC                     l109:
  6802  0039DC  B2C2               	btfsc	194,1,c	;volatile
  6803  0039DE  EFF3  F01C         	goto	u4751
  6804  0039E2  EFF5  F01C         	goto	u4750
  6805  0039E6                     u4751:
  6806  0039E6  EFEE  F01C         	goto	l109
  6807  0039EA                     u4750:
  6808  0039EA                     
  6809                           ;ADC_LIB.c: 15:     return ( (ADRESH<<8) | (ADRESL<<0));
  6810  0039EA  50C3               	movf	195,w,c	;volatile
  6811  0039EC  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  6812  0039F0  6A04               	clrf	(??_ADC_Read+1)^0,c
  6813  0039F2  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  6814  0039F6  6A03               	clrf	??_ADC_Read^0,c
  6815  0039F8  1003               	iorwf	??_ADC_Read^0,w,c
  6816  0039FA  6E01               	movwf	?_ADC_Read^0,c
  6817  0039FC  5004               	movf	(??_ADC_Read+1)^0,w,c
  6818  0039FE  6E02               	movwf	(?_ADC_Read+1)^0,c
  6819  003A00  0012               	return		;funcret
  6820  003A02                     __end_of_ADC_Read:
  6821                           	callstack 0
  6822                           
  6823 ;; *************** function _ADC_MAP *****************
  6824 ;; Defined at:
  6825 ;;		line 18 in file "ADC_LIB.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  conver          2    0[BANK0 ] int 
  6828 ;;  xi              4    2[BANK0 ] float 
  6829 ;;  xf              4    6[BANK0 ] float 
  6830 ;;  yi              4   10[BANK0 ] float 
  6831 ;;  yf              4   14[BANK0 ] float 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;  m               4   22[BANK0 ] float 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  4    0[BANK0 ] float 
  6836 ;; Registers used:
  6837 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6843 ;;      Params:         0      18       0       0       0       0       0       0       0
  6844 ;;      Locals:         0       8       0       0       0       0       0       0       0
  6845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6846 ;;      Totals:         0      26       0       0       0       0       0       0       0
  6847 ;;Total ram usage:       26 bytes
  6848 ;; Hardware stack levels used: 1
  6849 ;; Hardware stack levels required when called: 3
  6850 ;; This function calls:
  6851 ;;		___fladd
  6852 ;;		___fldiv
  6853 ;;		___flmul
  6854 ;;		___flsub
  6855 ;;		___xxtofl
  6856 ;; This function is called by:
  6857 ;;		_main
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text31
  6862  002CEC                     __ptext31:
  6863                           	callstack 0
  6864  002CEC                     _ADC_MAP:
  6865                           	callstack 27
  6866  002CEC                     
  6867                           ;ADC_LIB.c: 19:     float m;;ADC_LIB.c: 20:     m = (yf-yi)/(xf-xi);
  6868  002CEC  C06A  F03C         	movff	ADC_MAP@yi,___flsub@a
  6869  002CF0  C06B  F03D         	movff	ADC_MAP@yi+1,___flsub@a+1
  6870  002CF4  C06C  F03E         	movff	ADC_MAP@yi+2,___flsub@a+2
  6871  002CF8  C06D  F03F         	movff	ADC_MAP@yi+3,___flsub@a+3
  6872  002CFC  C06E  F038         	movff	ADC_MAP@yf,___flsub@b
  6873  002D00  C06F  F039         	movff	ADC_MAP@yf+1,___flsub@b+1
  6874  002D04  C070  F03A         	movff	ADC_MAP@yf+2,___flsub@b+2
  6875  002D08  C071  F03B         	movff	ADC_MAP@yf+3,___flsub@b+3
  6876  002D0C  EC9C  F01C         	call	___flsub	;wreg free
  6877  002D10  C038  F040         	movff	?___flsub,___fldiv@b
  6878  002D14  C039  F041         	movff	?___flsub+1,___fldiv@b+1
  6879  002D18  C03A  F042         	movff	?___flsub+2,___fldiv@b+2
  6880  002D1C  C03B  F043         	movff	?___flsub+3,___fldiv@b+3
  6881  002D20  C062  F03C         	movff	ADC_MAP@xi,___flsub@a
  6882  002D24  C063  F03D         	movff	ADC_MAP@xi+1,___flsub@a+1
  6883  002D28  C064  F03E         	movff	ADC_MAP@xi+2,___flsub@a+2
  6884  002D2C  C065  F03F         	movff	ADC_MAP@xi+3,___flsub@a+3
  6885  002D30  C066  F038         	movff	ADC_MAP@xf,___flsub@b
  6886  002D34  C067  F039         	movff	ADC_MAP@xf+1,___flsub@b+1
  6887  002D38  C068  F03A         	movff	ADC_MAP@xf+2,___flsub@b+2
  6888  002D3C  C069  F03B         	movff	ADC_MAP@xf+3,___flsub@b+3
  6889  002D40  EC9C  F01C         	call	___flsub	;wreg free
  6890  002D44  C038  F044         	movff	?___flsub,___fldiv@a
  6891  002D48  C039  F045         	movff	?___flsub+1,___fldiv@a+1
  6892  002D4C  C03A  F046         	movff	?___flsub+2,___fldiv@a+2
  6893  002D50  C03B  F047         	movff	?___flsub+3,___fldiv@a+3
  6894  002D54  EC1F  F011         	call	___fldiv	;wreg free
  6895  002D58  C040  F076         	movff	?___fldiv,ADC_MAP@m
  6896  002D5C  C041  F077         	movff	?___fldiv+1,ADC_MAP@m+1
  6897  002D60  C042  F078         	movff	?___fldiv+2,ADC_MAP@m+2
  6898  002D64  C043  F079         	movff	?___fldiv+3,ADC_MAP@m+3
  6899  002D68                     
  6900                           ;ADC_LIB.c: 21:     return (m*conver-m*xi+yi);
  6901  002D68  C062  F013         	movff	ADC_MAP@xi,___flmul@a
  6902  002D6C  C063  F014         	movff	ADC_MAP@xi+1,___flmul@a+1
  6903  002D70  C064  F015         	movff	ADC_MAP@xi+2,___flmul@a+2
  6904  002D74  C065  F016         	movff	ADC_MAP@xi+3,___flmul@a+3
  6905  002D78  C076  F00F         	movff	ADC_MAP@m,___flmul@b
  6906  002D7C  C077  F010         	movff	ADC_MAP@m+1,___flmul@b+1
  6907  002D80  C078  F011         	movff	ADC_MAP@m+2,___flmul@b+2
  6908  002D84  C079  F012         	movff	ADC_MAP@m+3,___flmul@b+3
  6909  002D88  EC0A  F00F         	call	___flmul	;wreg free
  6910  002D8C  C00F  F03C         	movff	?___flmul,___flsub@a
  6911  002D90  C010  F03D         	movff	?___flmul+1,___flsub@a+1
  6912  002D94  C011  F03E         	movff	?___flmul+2,___flsub@a+2
  6913  002D98  C012  F03F         	movff	?___flmul+3,___flsub@a+3
  6914  002D9C  C076  F013         	movff	ADC_MAP@m,___flmul@a
  6915  002DA0  C077  F014         	movff	ADC_MAP@m+1,___flmul@a+1
  6916  002DA4  C078  F015         	movff	ADC_MAP@m+2,___flmul@a+2
  6917  002DA8  C079  F016         	movff	ADC_MAP@m+3,___flmul@a+3
  6918  002DAC  C060  F001         	movff	ADC_MAP@conver,___xxtofl@val
  6919  002DB0  C061  F002         	movff	ADC_MAP@conver+1,___xxtofl@val+1
  6920  002DB4  0E00               	movlw	0
  6921  002DB6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6922  002DB8  0EFF               	movlw	-1
  6923  002DBA  6E03               	movwf	(___xxtofl@val+2)^0,c
  6924  002DBC  6E04               	movwf	(___xxtofl@val+3)^0,c
  6925  002DBE  0E01               	movlw	1
  6926  002DC0  ECF1  F014         	call	___xxtofl
  6927  002DC4  C001  F00F         	movff	?___xxtofl,___flmul@b
  6928  002DC8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  6929  002DCC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  6930  002DD0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  6931  002DD4  EC0A  F00F         	call	___flmul	;wreg free
  6932  002DD8  C00F  F038         	movff	?___flmul,___flsub@b
  6933  002DDC  C010  F039         	movff	?___flmul+1,___flsub@b+1
  6934  002DE0  C011  F03A         	movff	?___flmul+2,___flsub@b+2
  6935  002DE4  C012  F03B         	movff	?___flmul+3,___flsub@b+3
  6936  002DE8  EC9C  F01C         	call	___flsub	;wreg free
  6937  002DEC  C038  F072         	movff	?___flsub,_ADC_MAP$1315
  6938  002DF0  C039  F073         	movff	?___flsub+1,_ADC_MAP$1315+1
  6939  002DF4  C03A  F074         	movff	?___flsub+2,_ADC_MAP$1315+2
  6940  002DF8  C03B  F075         	movff	?___flsub+3,_ADC_MAP$1315+3
  6941  002DFC                     
  6942                           ;ADC_LIB.c: 21:     return (m*conver-m*xi+yi);
  6943  002DFC  C072  F028         	movff	_ADC_MAP$1315,___fladd@b
  6944  002E00  C073  F029         	movff	_ADC_MAP$1315+1,___fladd@b+1
  6945  002E04  C074  F02A         	movff	_ADC_MAP$1315+2,___fladd@b+2
  6946  002E08  C075  F02B         	movff	_ADC_MAP$1315+3,___fladd@b+3
  6947  002E0C  C06A  F02C         	movff	ADC_MAP@yi,___fladd@a
  6948  002E10  C06B  F02D         	movff	ADC_MAP@yi+1,___fladd@a+1
  6949  002E14  C06C  F02E         	movff	ADC_MAP@yi+2,___fladd@a+2
  6950  002E18  C06D  F02F         	movff	ADC_MAP@yi+3,___fladd@a+3
  6951  002E1C  ECAA  F00C         	call	___fladd	;wreg free
  6952  002E20  C028  F060         	movff	?___fladd,?_ADC_MAP
  6953  002E24  C029  F061         	movff	?___fladd+1,?_ADC_MAP+1
  6954  002E28  C02A  F062         	movff	?___fladd+2,?_ADC_MAP+2
  6955  002E2C  C02B  F063         	movff	?___fladd+3,?_ADC_MAP+3
  6956  002E30  0012               	return		;funcret
  6957  002E32                     __end_of_ADC_MAP:
  6958                           	callstack 0
  6959                           
  6960 ;; *************** function ___xxtofl *****************
  6961 ;; Defined at:
  6962 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;  sign            1    wreg     unsigned char 
  6965 ;;  val             4    0[COMRAM] long 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;  sign            1    8[COMRAM] unsigned char 
  6968 ;;  arg             4   10[COMRAM] unsigned long 
  6969 ;;  exp             1    9[COMRAM] unsigned char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  4    0[COMRAM] unsigned char 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6979 ;;      Params:         4       0       0       0       0       0       0       0       0
  6980 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6981 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6982 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6983 ;;Total ram usage:       14 bytes
  6984 ;; Hardware stack levels used: 1
  6985 ;; Hardware stack levels required when called: 1
  6986 ;; This function calls:
  6987 ;;		Nothing
  6988 ;; This function is called by:
  6989 ;;		_ADC_MAP
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text32
  6994  0029E2                     __ptext32:
  6995                           	callstack 0
  6996  0029E2                     ___xxtofl:
  6997                           	callstack 28
  6998                           
  6999                           ;incstack = 0
  7000                           ;___xxtofl@sign stored from wreg
  7001  0029E2  6E09               	movwf	___xxtofl@sign^0,c
  7002  0029E4  5009               	movf	___xxtofl@sign^0,w,c
  7003  0029E6  B4D8               	btfsc	status,2,c
  7004  0029E8  EFF8  F014         	goto	u4591
  7005  0029EC  EFFA  F014         	goto	u4590
  7006  0029F0                     u4591:
  7007  0029F0  EF1C  F015         	goto	l773
  7008  0029F4                     u4590:
  7009  0029F4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7010  0029F6  EF01  F015         	goto	u4600
  7011  0029FA  EFFF  F014         	goto	u4601
  7012  0029FE                     u4601:
  7013  0029FE  EF1C  F015         	goto	l773
  7014  002A02                     u4600:
  7015  002A02  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7016  002A06  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7017  002A0A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7018  002A0E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7019  002A12  1E05               	comf	??___xxtofl^0,f,c
  7020  002A14  1E06               	comf	(??___xxtofl+1)^0,f,c
  7021  002A16  1E07               	comf	(??___xxtofl+2)^0,f,c
  7022  002A18  1E08               	comf	(??___xxtofl+3)^0,f,c
  7023  002A1A  2A05               	incf	??___xxtofl^0,f,c
  7024  002A1C  0E00               	movlw	0
  7025  002A1E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7026  002A20  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7027  002A22  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7028  002A24  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7029  002A28  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7030  002A2C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7031  002A30  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7032  002A34  EF24  F015         	goto	l3858
  7033  002A38                     l773:
  7034  002A38  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7035  002A3C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7036  002A40  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7037  002A44  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7038  002A48                     l3858:
  7039  002A48  5001               	movf	___xxtofl@val^0,w,c
  7040  002A4A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7041  002A4C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7042  002A4E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7043  002A50  A4D8               	btfss	status,2,c
  7044  002A52  EF2D  F015         	goto	u4611
  7045  002A56  EF2F  F015         	goto	u4610
  7046  002A5A                     u4611:
  7047  002A5A  EF39  F015         	goto	l3864
  7048  002A5E                     u4610:
  7049  002A5E  0E00               	movlw	0
  7050  002A60  6E01               	movwf	?___xxtofl^0,c
  7051  002A62  0E00               	movlw	0
  7052  002A64  6E02               	movwf	(?___xxtofl+1)^0,c
  7053  002A66  0E00               	movlw	0
  7054  002A68  6E03               	movwf	(?___xxtofl+2)^0,c
  7055  002A6A  0E00               	movlw	0
  7056  002A6C  6E04               	movwf	(?___xxtofl+3)^0,c
  7057  002A6E  EFCA  F015         	goto	l776
  7058  002A72                     l3864:
  7059  002A72  0E96               	movlw	150
  7060  002A74  6E0A               	movwf	___xxtofl@exp^0,c
  7061  002A76  EF43  F015         	goto	l3868
  7062  002A7A                     l3866:
  7063  002A7A  2A0A               	incf	___xxtofl@exp^0,f,c
  7064  002A7C  90D8               	bcf	status,0,c
  7065  002A7E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7066  002A80  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7067  002A82  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7068  002A84  320B               	rrcf	___xxtofl@arg^0,f,c
  7069  002A86                     l3868:
  7070  002A86  0E00               	movlw	0
  7071  002A88  140B               	andwf	___xxtofl@arg^0,w,c
  7072  002A8A  6E05               	movwf	??___xxtofl^0,c
  7073  002A8C  0E00               	movlw	0
  7074  002A8E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7075  002A90  6E06               	movwf	(??___xxtofl+1)^0,c
  7076  002A92  0E00               	movlw	0
  7077  002A94  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7078  002A96  6E07               	movwf	(??___xxtofl+2)^0,c
  7079  002A98  0EFE               	movlw	254
  7080  002A9A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7081  002A9C  6E08               	movwf	(??___xxtofl+3)^0,c
  7082  002A9E  5005               	movf	??___xxtofl^0,w,c
  7083  002AA0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7084  002AA2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7085  002AA4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7086  002AA6  A4D8               	btfss	status,2,c
  7087  002AA8  EF58  F015         	goto	u4621
  7088  002AAC  EF5A  F015         	goto	u4620
  7089  002AB0                     u4621:
  7090  002AB0  EF3D  F015         	goto	l3866
  7091  002AB4                     u4620:
  7092  002AB4  EF68  F015         	goto	l780
  7093  002AB8                     l3870:
  7094  002AB8  2A0A               	incf	___xxtofl@exp^0,f,c
  7095  002ABA  0E01               	movlw	1
  7096  002ABC  260B               	addwf	___xxtofl@arg^0,f,c
  7097  002ABE  0E00               	movlw	0
  7098  002AC0  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7099  002AC2  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7100  002AC4  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7101  002AC6  90D8               	bcf	status,0,c
  7102  002AC8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7103  002ACA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7104  002ACC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7105  002ACE  320B               	rrcf	___xxtofl@arg^0,f,c
  7106  002AD0                     l780:
  7107  002AD0  0E00               	movlw	0
  7108  002AD2  140B               	andwf	___xxtofl@arg^0,w,c
  7109  002AD4  6E05               	movwf	??___xxtofl^0,c
  7110  002AD6  0E00               	movlw	0
  7111  002AD8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7112  002ADA  6E06               	movwf	(??___xxtofl+1)^0,c
  7113  002ADC  0E00               	movlw	0
  7114  002ADE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7115  002AE0  6E07               	movwf	(??___xxtofl+2)^0,c
  7116  002AE2  0EFF               	movlw	255
  7117  002AE4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7118  002AE6  6E08               	movwf	(??___xxtofl+3)^0,c
  7119  002AE8  5005               	movf	??___xxtofl^0,w,c
  7120  002AEA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7121  002AEC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7122  002AEE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7123  002AF0  A4D8               	btfss	status,2,c
  7124  002AF2  EF7D  F015         	goto	u4631
  7125  002AF6  EF7F  F015         	goto	u4630
  7126  002AFA                     u4631:
  7127  002AFA  EF5C  F015         	goto	l3870
  7128  002AFE                     u4630:
  7129  002AFE  EF87  F015         	goto	l3878
  7130  002B02                     l3876:
  7131  002B02  060A               	decf	___xxtofl@exp^0,f,c
  7132  002B04  90D8               	bcf	status,0,c
  7133  002B06  360B               	rlcf	___xxtofl@arg^0,f,c
  7134  002B08  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7135  002B0A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7136  002B0C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7137  002B0E                     l3878:
  7138  002B0E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7139  002B10  EF8C  F015         	goto	u4641
  7140  002B14  EF8E  F015         	goto	u4640
  7141  002B18                     u4641:
  7142  002B18  EF96  F015         	goto	l787
  7143  002B1C                     u4640:
  7144  002B1C  0E02               	movlw	2
  7145  002B1E  600A               	cpfslt	___xxtofl@exp^0,c
  7146  002B20  EF94  F015         	goto	u4651
  7147  002B24  EF96  F015         	goto	u4650
  7148  002B28                     u4651:
  7149  002B28  EF81  F015         	goto	l3876
  7150  002B2C                     u4650:
  7151  002B2C                     l787:
  7152  002B2C  B00A               	btfsc	___xxtofl@exp^0,0,c
  7153  002B2E  EF9B  F015         	goto	u4661
  7154  002B32  EF9D  F015         	goto	u4660
  7155  002B36                     u4661:
  7156  002B36  EF9E  F015         	goto	l3884
  7157  002B3A                     u4660:
  7158  002B3A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7159  002B3C                     l3884:
  7160  002B3C  90D8               	bcf	status,0,c
  7161  002B3E  320A               	rrcf	___xxtofl@exp^0,f,c
  7162  002B40  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7163  002B44  6A06               	clrf	(??___xxtofl+1)^0,c
  7164  002B46  6A07               	clrf	(??___xxtofl+2)^0,c
  7165  002B48  6A08               	clrf	(??___xxtofl+3)^0,c
  7166  002B4A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7167  002B4E  6A07               	clrf	(??___xxtofl+2)^0,c
  7168  002B50  6A06               	clrf	(??___xxtofl+1)^0,c
  7169  002B52  6A05               	clrf	??___xxtofl^0,c
  7170  002B54  5005               	movf	??___xxtofl^0,w,c
  7171  002B56  120B               	iorwf	___xxtofl@arg^0,f,c
  7172  002B58  5006               	movf	(??___xxtofl+1)^0,w,c
  7173  002B5A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7174  002B5C  5007               	movf	(??___xxtofl+2)^0,w,c
  7175  002B5E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7176  002B60  5008               	movf	(??___xxtofl+3)^0,w,c
  7177  002B62  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7178  002B64  5009               	movf	___xxtofl@sign^0,w,c
  7179  002B66  B4D8               	btfsc	status,2,c
  7180  002B68  EFB8  F015         	goto	u4671
  7181  002B6C  EFBA  F015         	goto	u4670
  7182  002B70                     u4671:
  7183  002B70  EFC2  F015         	goto	l3894
  7184  002B74                     u4670:
  7185  002B74  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7186  002B76  EFC1  F015         	goto	u4680
  7187  002B7A  EFBF  F015         	goto	u4681
  7188  002B7E                     u4681:
  7189  002B7E  EFC2  F015         	goto	l3894
  7190  002B82                     u4680:
  7191  002B82  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7192  002B84                     l3894:
  7193  002B84  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7194  002B88  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7195  002B8C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7196  002B90  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7197  002B94                     l776:
  7198  002B94  0012               	return		;funcret
  7199  002B96                     __end_of___xxtofl:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function ___flsub *****************
  7203 ;; Defined at:
  7204 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  b               4   55[COMRAM] unsigned char 
  7207 ;;  a               4   59[COMRAM] unsigned char 
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  4   55[COMRAM] unsigned char 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2, status,0, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7219 ;;      Params:         8       0       0       0       0       0       0       0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7222 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7223 ;;Total ram usage:        8 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; Hardware stack levels required when called: 2
  7226 ;; This function calls:
  7227 ;;		___fladd
  7228 ;; This function is called by:
  7229 ;;		_ADC_MAP
  7230 ;;		_efgtoa
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text33
  7235  003938                     __ptext33:
  7236                           	callstack 0
  7237  003938                     ___flsub:
  7238                           	callstack 24
  7239  003938  0E00               	movlw	0
  7240  00393A  1A3C               	xorwf	___flsub@a^0,f,c
  7241  00393C  0E00               	movlw	0
  7242  00393E  1A3D               	xorwf	(___flsub@a+1)^0,f,c
  7243  003940  0E00               	movlw	0
  7244  003942  1A3E               	xorwf	(___flsub@a+2)^0,f,c
  7245  003944  0E80               	movlw	128
  7246  003946  1A3F               	xorwf	(___flsub@a+3)^0,f,c
  7247  003948  C038  F028         	movff	___flsub@b,___fladd@b
  7248  00394C  C039  F029         	movff	___flsub@b+1,___fladd@b+1
  7249  003950  C03A  F02A         	movff	___flsub@b+2,___fladd@b+2
  7250  003954  C03B  F02B         	movff	___flsub@b+3,___fladd@b+3
  7251  003958  C03C  F02C         	movff	___flsub@a,___fladd@a
  7252  00395C  C03D  F02D         	movff	___flsub@a+1,___fladd@a+1
  7253  003960  C03E  F02E         	movff	___flsub@a+2,___fladd@a+2
  7254  003964  C03F  F02F         	movff	___flsub@a+3,___fladd@a+3
  7255  003968  ECAA  F00C         	call	___fladd	;wreg free
  7256  00396C  C028  F038         	movff	?___fladd,?___flsub
  7257  003970  C029  F039         	movff	?___fladd+1,?___flsub+1
  7258  003974  C02A  F03A         	movff	?___fladd+2,?___flsub+2
  7259  003978  C02B  F03B         	movff	?___fladd+3,?___flsub+3
  7260  00397C  0012               	return		;funcret
  7261  00397E                     __end_of___flsub:
  7262                           	callstack 0
  7263                           
  7264 ;; *************** function ___fladd *****************
  7265 ;; Defined at:
  7266 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;  b               4   39[COMRAM] unsigned char 
  7269 ;;  a               4   43[COMRAM] unsigned char 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;  grs             1   54[COMRAM] unsigned char 
  7272 ;;  bexp            1   53[COMRAM] unsigned char 
  7273 ;;  aexp            1   52[COMRAM] unsigned char 
  7274 ;;  signs           1   51[COMRAM] unsigned char 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  4   39[COMRAM] unsigned char 
  7277 ;; Registers used:
  7278 ;;		wreg, status,2, status,0
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7284 ;;      Params:         8       0       0       0       0       0       0       0       0
  7285 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7286 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7287 ;;      Totals:        16       0       0       0       0       0       0       0       0
  7288 ;;Total ram usage:       16 bytes
  7289 ;; Hardware stack levels used: 1
  7290 ;; Hardware stack levels required when called: 1
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_ADC_MAP
  7295 ;;		___flsub
  7296 ;;		_efgtoa
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text34
  7301  001954                     __ptext34:
  7302                           	callstack 0
  7303  001954                     ___fladd:
  7304                           	callstack 24
  7305  001954  502B               	movf	(___fladd@b+3)^0,w,c
  7306  001956  0B80               	andlw	128
  7307  001958  6E34               	movwf	___fladd@signs^0,c
  7308  00195A  502B               	movf	(___fladd@b+3)^0,w,c
  7309  00195C  242B               	addwf	(___fladd@b+3)^0,w,c
  7310  00195E  6E36               	movwf	___fladd@bexp^0,c
  7311  001960  AE2A               	btfss	(___fladd@b+2)^0,7,c
  7312  001962  EFB5  F00C         	goto	u2441
  7313  001966  EFB7  F00C         	goto	u2440
  7314  00196A                     u2441:
  7315  00196A  EFB8  F00C         	goto	l2594
  7316  00196E                     u2440:
  7317  00196E  8036               	bsf	___fladd@bexp^0,0,c
  7318  001970                     l2594:
  7319  001970  5036               	movf	___fladd@bexp^0,w,c
  7320  001972  B4D8               	btfsc	status,2,c
  7321  001974  EFBE  F00C         	goto	u2451
  7322  001978  EFC0  F00C         	goto	u2450
  7323  00197C                     u2451:
  7324  00197C  EFD5  F00C         	goto	l2604
  7325  001980                     u2450:
  7326  001980  2836               	incf	___fladd@bexp^0,w,c
  7327  001982  A4D8               	btfss	status,2,c
  7328  001984  EFC6  F00C         	goto	u2461
  7329  001988  EFC8  F00C         	goto	u2460
  7330  00198C                     u2461:
  7331  00198C  EFD0  F00C         	goto	l2600
  7332  001990                     u2460:
  7333  001990  0E00               	movlw	0
  7334  001992  6E28               	movwf	___fladd@b^0,c
  7335  001994  0E00               	movlw	0
  7336  001996  6E29               	movwf	(___fladd@b+1)^0,c
  7337  001998  0E00               	movlw	0
  7338  00199A  6E2A               	movwf	(___fladd@b+2)^0,c
  7339  00199C  0E00               	movlw	0
  7340  00199E  6E2B               	movwf	(___fladd@b+3)^0,c
  7341  0019A0                     l2600:
  7342  0019A0  8E2A               	bsf	(___fladd@b+2)^0,7,c
  7343  0019A2  0E00               	movlw	0
  7344  0019A4  6E2B               	movwf	(___fladd@b+3)^0,c
  7345  0019A6  EFDD  F00C         	goto	l2606
  7346  0019AA                     l2604:
  7347  0019AA  0E00               	movlw	0
  7348  0019AC  6E28               	movwf	___fladd@b^0,c
  7349  0019AE  0E00               	movlw	0
  7350  0019B0  6E29               	movwf	(___fladd@b+1)^0,c
  7351  0019B2  0E00               	movlw	0
  7352  0019B4  6E2A               	movwf	(___fladd@b+2)^0,c
  7353  0019B6  0E00               	movlw	0
  7354  0019B8  6E2B               	movwf	(___fladd@b+3)^0,c
  7355  0019BA                     l2606:
  7356  0019BA  502F               	movf	(___fladd@a+3)^0,w,c
  7357  0019BC  0B80               	andlw	128
  7358  0019BE  6E35               	movwf	___fladd@aexp^0,c
  7359  0019C0  5034               	movf	___fladd@signs^0,w,c
  7360  0019C2  1835               	xorwf	___fladd@aexp^0,w,c
  7361  0019C4  B4D8               	btfsc	status,2,c
  7362  0019C6  EFE7  F00C         	goto	u2471
  7363  0019CA  EFE9  F00C         	goto	u2470
  7364  0019CE                     u2471:
  7365  0019CE  EFEA  F00C         	goto	l2612
  7366  0019D2                     u2470:
  7367  0019D2  8C34               	bsf	___fladd@signs^0,6,c
  7368  0019D4                     l2612:
  7369  0019D4  502F               	movf	(___fladd@a+3)^0,w,c
  7370  0019D6  242F               	addwf	(___fladd@a+3)^0,w,c
  7371  0019D8  6E35               	movwf	___fladd@aexp^0,c
  7372  0019DA  AE2E               	btfss	(___fladd@a+2)^0,7,c
  7373  0019DC  EFF2  F00C         	goto	u2481
  7374  0019E0  EFF4  F00C         	goto	u2480
  7375  0019E4                     u2481:
  7376  0019E4  EFF5  F00C         	goto	l2618
  7377  0019E8                     u2480:
  7378  0019E8  8035               	bsf	___fladd@aexp^0,0,c
  7379  0019EA                     l2618:
  7380  0019EA  5035               	movf	___fladd@aexp^0,w,c
  7381  0019EC  B4D8               	btfsc	status,2,c
  7382  0019EE  EFFB  F00C         	goto	u2491
  7383  0019F2  EFFD  F00C         	goto	u2490
  7384  0019F6                     u2491:
  7385  0019F6  EF12  F00D         	goto	l2628
  7386  0019FA                     u2490:
  7387  0019FA  2835               	incf	___fladd@aexp^0,w,c
  7388  0019FC  A4D8               	btfss	status,2,c
  7389  0019FE  EF03  F00D         	goto	u2501
  7390  001A02  EF05  F00D         	goto	u2500
  7391  001A06                     u2501:
  7392  001A06  EF0D  F00D         	goto	l2624
  7393  001A0A                     u2500:
  7394  001A0A  0E00               	movlw	0
  7395  001A0C  6E2C               	movwf	___fladd@a^0,c
  7396  001A0E  0E00               	movlw	0
  7397  001A10  6E2D               	movwf	(___fladd@a+1)^0,c
  7398  001A12  0E00               	movlw	0
  7399  001A14  6E2E               	movwf	(___fladd@a+2)^0,c
  7400  001A16  0E00               	movlw	0
  7401  001A18  6E2F               	movwf	(___fladd@a+3)^0,c
  7402  001A1A                     l2624:
  7403  001A1A  8E2E               	bsf	(___fladd@a+2)^0,7,c
  7404  001A1C  0E00               	movlw	0
  7405  001A1E  6E2F               	movwf	(___fladd@a+3)^0,c
  7406  001A20  EF1A  F00D         	goto	l2630
  7407  001A24                     l2628:
  7408  001A24  0E00               	movlw	0
  7409  001A26  6E2C               	movwf	___fladd@a^0,c
  7410  001A28  0E00               	movlw	0
  7411  001A2A  6E2D               	movwf	(___fladd@a+1)^0,c
  7412  001A2C  0E00               	movlw	0
  7413  001A2E  6E2E               	movwf	(___fladd@a+2)^0,c
  7414  001A30  0E00               	movlw	0
  7415  001A32  6E2F               	movwf	(___fladd@a+3)^0,c
  7416  001A34                     l2630:
  7417  001A34  5036               	movf	___fladd@bexp^0,w,c
  7418  001A36  5C35               	subwf	___fladd@aexp^0,w,c
  7419  001A38  B0D8               	btfsc	status,0,c
  7420  001A3A  EF21  F00D         	goto	u2511
  7421  001A3E  EF23  F00D         	goto	u2510
  7422  001A42                     u2511:
  7423  001A42  EF4A  F00D         	goto	l2666
  7424  001A46                     u2510:
  7425  001A46  AC34               	btfss	___fladd@signs^0,6,c
  7426  001A48  EF28  F00D         	goto	u2521
  7427  001A4C  EF2A  F00D         	goto	u2520
  7428  001A50                     u2521:
  7429  001A50  EF2C  F00D         	goto	l2636
  7430  001A54                     u2520:
  7431  001A54  0E80               	movlw	128
  7432  001A56  1A34               	xorwf	___fladd@signs^0,f,c
  7433  001A58                     l2636:
  7434  001A58  C036  F037         	movff	___fladd@bexp,___fladd@grs
  7435  001A5C  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  7436  001A60  C037  F035         	movff	___fladd@grs,___fladd@aexp
  7437  001A64  C028  F037         	movff	___fladd@b,___fladd@grs
  7438  001A68  C02C  F028         	movff	___fladd@a,___fladd@b
  7439  001A6C  C037  F02C         	movff	___fladd@grs,___fladd@a
  7440  001A70  C029  F037         	movff	___fladd@b+1,___fladd@grs
  7441  001A74  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  7442  001A78  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  7443  001A7C  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  7444  001A80  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  7445  001A84  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  7446  001A88  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  7447  001A8C  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  7448  001A90  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  7449  001A94                     l2666:
  7450  001A94  0E00               	movlw	0
  7451  001A96  6E37               	movwf	___fladd@grs^0,c
  7452  001A98  5036               	movf	___fladd@bexp^0,w,c
  7453  001A9A  C035  F030         	movff	___fladd@aexp,??___fladd
  7454  001A9E  6A31               	clrf	(??___fladd+1)^0,c
  7455  001AA0  5E30               	subwf	??___fladd^0,f,c
  7456  001AA2  0E00               	movlw	0
  7457  001AA4  5A31               	subwfb	(??___fladd+1)^0,f,c
  7458  001AA6  BE31               	btfsc	(??___fladd+1)^0,7,c
  7459  001AA8  EF5F  F00D         	goto	u2531
  7460  001AAC  5031               	movf	(??___fladd+1)^0,w,c
  7461  001AAE  E109               	bnz	u2530
  7462  001AB0  0E1A               	movlw	26
  7463  001AB2  5C30               	subwf	??___fladd^0,w,c
  7464  001AB4  A0D8               	btfss	status,0,c
  7465  001AB6  EF5F  F00D         	goto	u2531
  7466  001ABA  EF61  F00D         	goto	u2530
  7467  001ABE                     u2531:
  7468  001ABE  EF98  F00D         	goto	l647
  7469  001AC2                     u2530:
  7470  001AC2  5028               	movf	___fladd@b^0,w,c
  7471  001AC4  1029               	iorwf	(___fladd@b+1)^0,w,c
  7472  001AC6  102A               	iorwf	(___fladd@b+2)^0,w,c
  7473  001AC8  102B               	iorwf	(___fladd@b+3)^0,w,c
  7474  001ACA  A4D8               	btfss	status,2,c
  7475  001ACC  EF6A  F00D         	goto	u2541
  7476  001AD0  EF6D  F00D         	goto	u2540
  7477  001AD4                     u2541:
  7478  001AD4  0E01               	movlw	1
  7479  001AD6  EF6E  F00D         	goto	u2550
  7480  001ADA                     u2540:
  7481  001ADA  0E00               	movlw	0
  7482  001ADC                     u2550:
  7483  001ADC  6E37               	movwf	___fladd@grs^0,c
  7484  001ADE  0E00               	movlw	0
  7485  001AE0  6E28               	movwf	___fladd@b^0,c
  7486  001AE2  0E00               	movlw	0
  7487  001AE4  6E29               	movwf	(___fladd@b+1)^0,c
  7488  001AE6  0E00               	movlw	0
  7489  001AE8  6E2A               	movwf	(___fladd@b+2)^0,c
  7490  001AEA  0E00               	movlw	0
  7491  001AEC  6E2B               	movwf	(___fladd@b+3)^0,c
  7492  001AEE  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  7493  001AF2  EFA1  F00D         	goto	l646
  7494  001AF6                     l648:
  7495  001AF6  A037               	btfss	___fladd@grs^0,0,c
  7496  001AF8  EF80  F00D         	goto	u2561
  7497  001AFC  EF82  F00D         	goto	u2560
  7498  001B00                     u2561:
  7499  001B00  EF88  F00D         	goto	l2678
  7500  001B04                     u2560:
  7501  001B04  90D8               	bcf	status,0,c
  7502  001B06  3037               	rrcf	___fladd@grs^0,w,c
  7503  001B08  0901               	iorlw	1
  7504  001B0A  6E37               	movwf	___fladd@grs^0,c
  7505  001B0C  EF8A  F00D         	goto	l2680
  7506  001B10                     l2678:
  7507  001B10  90D8               	bcf	status,0,c
  7508  001B12  3237               	rrcf	___fladd@grs^0,f,c
  7509  001B14                     l2680:
  7510  001B14  A028               	btfss	___fladd@b^0,0,c
  7511  001B16  EF8F  F00D         	goto	u2571
  7512  001B1A  EF91  F00D         	goto	u2570
  7513  001B1E                     u2571:
  7514  001B1E  EF92  F00D         	goto	l2684
  7515  001B22                     u2570:
  7516  001B22  8E37               	bsf	___fladd@grs^0,7,c
  7517  001B24                     l2684:
  7518  001B24  342B               	rlcf	(___fladd@b+3)^0,w,c
  7519  001B26  322B               	rrcf	(___fladd@b+3)^0,f,c
  7520  001B28  322A               	rrcf	(___fladd@b+2)^0,f,c
  7521  001B2A  3229               	rrcf	(___fladd@b+1)^0,f,c
  7522  001B2C  3228               	rrcf	___fladd@b^0,f,c
  7523  001B2E  2A36               	incf	___fladd@bexp^0,f,c
  7524  001B30                     l647:
  7525  001B30  5035               	movf	___fladd@aexp^0,w,c
  7526  001B32  5C36               	subwf	___fladd@bexp^0,w,c
  7527  001B34  A0D8               	btfss	status,0,c
  7528  001B36  EF9F  F00D         	goto	u2581
  7529  001B3A  EFA1  F00D         	goto	u2580
  7530  001B3E                     u2581:
  7531  001B3E  EF7B  F00D         	goto	l648
  7532  001B42                     u2580:
  7533  001B42                     l646:
  7534  001B42  BC34               	btfsc	___fladd@signs^0,6,c
  7535  001B44  EFA6  F00D         	goto	u2591
  7536  001B48  EFA8  F00D         	goto	u2590
  7537  001B4C                     u2591:
  7538  001B4C  EFE8  F00D         	goto	l2712
  7539  001B50                     u2590:
  7540  001B50  5036               	movf	___fladd@bexp^0,w,c
  7541  001B52  A4D8               	btfss	status,2,c
  7542  001B54  EFAE  F00D         	goto	u2601
  7543  001B58  EFB0  F00D         	goto	u2600
  7544  001B5C                     u2601:
  7545  001B5C  EFBA  F00D         	goto	l2694
  7546  001B60                     u2600:
  7547  001B60  0E00               	movlw	0
  7548  001B62  6E28               	movwf	?___fladd^0,c
  7549  001B64  0E00               	movlw	0
  7550  001B66  6E29               	movwf	(?___fladd+1)^0,c
  7551  001B68  0E00               	movlw	0
  7552  001B6A  6E2A               	movwf	(?___fladd+2)^0,c
  7553  001B6C  0E00               	movlw	0
  7554  001B6E  6E2B               	movwf	(?___fladd+3)^0,c
  7555  001B70  EF09  F00F         	goto	l655
  7556  001B74                     l2694:
  7557  001B74  502C               	movf	___fladd@a^0,w,c
  7558  001B76  2628               	addwf	___fladd@b^0,f,c
  7559  001B78  502D               	movf	(___fladd@a+1)^0,w,c
  7560  001B7A  2229               	addwfc	(___fladd@b+1)^0,f,c
  7561  001B7C  502E               	movf	(___fladd@a+2)^0,w,c
  7562  001B7E  222A               	addwfc	(___fladd@b+2)^0,f,c
  7563  001B80  502F               	movf	(___fladd@a+3)^0,w,c
  7564  001B82  222B               	addwfc	(___fladd@b+3)^0,f,c
  7565  001B84  A02B               	btfss	(___fladd@b+3)^0,0,c
  7566  001B86  EFC7  F00D         	goto	u2611
  7567  001B8A  EFC9  F00D         	goto	u2610
  7568  001B8E                     u2611:
  7569  001B8E  EF75  F00E         	goto	l2748
  7570  001B92                     u2610:
  7571  001B92  A037               	btfss	___fladd@grs^0,0,c
  7572  001B94  EFCE  F00D         	goto	u2621
  7573  001B98  EFD0  F00D         	goto	u2620
  7574  001B9C                     u2621:
  7575  001B9C  EFD6  F00D         	goto	l2702
  7576  001BA0                     u2620:
  7577  001BA0  90D8               	bcf	status,0,c
  7578  001BA2  3037               	rrcf	___fladd@grs^0,w,c
  7579  001BA4  0901               	iorlw	1
  7580  001BA6  6E37               	movwf	___fladd@grs^0,c
  7581  001BA8  EFD8  F00D         	goto	l2704
  7582  001BAC                     l2702:
  7583  001BAC  90D8               	bcf	status,0,c
  7584  001BAE  3237               	rrcf	___fladd@grs^0,f,c
  7585  001BB0                     l2704:
  7586  001BB0  A028               	btfss	___fladd@b^0,0,c
  7587  001BB2  EFDD  F00D         	goto	u2631
  7588  001BB6  EFDF  F00D         	goto	u2630
  7589  001BBA                     u2631:
  7590  001BBA  EFE0  F00D         	goto	l2708
  7591  001BBE                     u2630:
  7592  001BBE  8E37               	bsf	___fladd@grs^0,7,c
  7593  001BC0                     l2708:
  7594  001BC0  342B               	rlcf	(___fladd@b+3)^0,w,c
  7595  001BC2  322B               	rrcf	(___fladd@b+3)^0,f,c
  7596  001BC4  322A               	rrcf	(___fladd@b+2)^0,f,c
  7597  001BC6  3229               	rrcf	(___fladd@b+1)^0,f,c
  7598  001BC8  3228               	rrcf	___fladd@b^0,f,c
  7599  001BCA  2A36               	incf	___fladd@bexp^0,f,c
  7600  001BCC  EF75  F00E         	goto	l2748
  7601  001BD0                     l2712:
  7602  001BD0  502C               	movf	___fladd@a^0,w,c
  7603  001BD2  5C28               	subwf	___fladd@b^0,w,c
  7604  001BD4  502D               	movf	(___fladd@a+1)^0,w,c
  7605  001BD6  5829               	subwfb	(___fladd@b+1)^0,w,c
  7606  001BD8  502E               	movf	(___fladd@a+2)^0,w,c
  7607  001BDA  582A               	subwfb	(___fladd@b+2)^0,w,c
  7608  001BDC  502B               	movf	(___fladd@b+3)^0,w,c
  7609  001BDE  0A80               	xorlw	128
  7610  001BE0  6E30               	movwf	??___fladd^0,c
  7611  001BE2  502F               	movf	(___fladd@a+3)^0,w,c
  7612  001BE4  0A80               	xorlw	128
  7613  001BE6  5830               	subwfb	??___fladd^0,w,c
  7614  001BE8  B0D8               	btfsc	status,0,c
  7615  001BEA  EFF9  F00D         	goto	u2641
  7616  001BEE  EFFB  F00D         	goto	u2640
  7617  001BF2                     u2641:
  7618  001BF2  EF26  F00E         	goto	l2722
  7619  001BF6                     u2640:
  7620  001BF6  5028               	movf	___fladd@b^0,w,c
  7621  001BF8  5C2C               	subwf	___fladd@a^0,w,c
  7622  001BFA  6E30               	movwf	??___fladd^0,c
  7623  001BFC  5029               	movf	(___fladd@b+1)^0,w,c
  7624  001BFE  582D               	subwfb	(___fladd@a+1)^0,w,c
  7625  001C00  6E31               	movwf	(??___fladd+1)^0,c
  7626  001C02  502A               	movf	(___fladd@b+2)^0,w,c
  7627  001C04  582E               	subwfb	(___fladd@a+2)^0,w,c
  7628  001C06  6E32               	movwf	(??___fladd+2)^0,c
  7629  001C08  502B               	movf	(___fladd@b+3)^0,w,c
  7630  001C0A  582F               	subwfb	(___fladd@a+3)^0,w,c
  7631  001C0C  6E33               	movwf	(??___fladd+3)^0,c
  7632  001C0E  0EFF               	movlw	255
  7633  001C10  2430               	addwf	??___fladd^0,w,c
  7634  001C12  6E28               	movwf	___fladd@b^0,c
  7635  001C14  0EFF               	movlw	255
  7636  001C16  2031               	addwfc	(??___fladd+1)^0,w,c
  7637  001C18  6E29               	movwf	(___fladd@b+1)^0,c
  7638  001C1A  0EFF               	movlw	255
  7639  001C1C  2032               	addwfc	(??___fladd+2)^0,w,c
  7640  001C1E  6E2A               	movwf	(___fladd@b+2)^0,c
  7641  001C20  0EFF               	movlw	255
  7642  001C22  2033               	addwfc	(??___fladd+3)^0,w,c
  7643  001C24  6E2B               	movwf	(___fladd@b+3)^0,c
  7644  001C26  0E80               	movlw	128
  7645  001C28  1A34               	xorwf	___fladd@signs^0,f,c
  7646  001C2A  6C37               	negf	___fladd@grs^0,c
  7647  001C2C  5037               	movf	___fladd@grs^0,w,c
  7648  001C2E  A4D8               	btfss	status,2,c
  7649  001C30  EF1C  F00E         	goto	u2651
  7650  001C34  EF1E  F00E         	goto	u2650
  7651  001C38                     u2651:
  7652  001C38  EF2E  F00E         	goto	l663
  7653  001C3C                     u2650:
  7654  001C3C  0E01               	movlw	1
  7655  001C3E  2628               	addwf	___fladd@b^0,f,c
  7656  001C40  0E00               	movlw	0
  7657  001C42  2229               	addwfc	(___fladd@b+1)^0,f,c
  7658  001C44  222A               	addwfc	(___fladd@b+2)^0,f,c
  7659  001C46  222B               	addwfc	(___fladd@b+3)^0,f,c
  7660  001C48  EF2E  F00E         	goto	l663
  7661  001C4C                     l2722:
  7662  001C4C  502C               	movf	___fladd@a^0,w,c
  7663  001C4E  5E28               	subwf	___fladd@b^0,f,c
  7664  001C50  502D               	movf	(___fladd@a+1)^0,w,c
  7665  001C52  5A29               	subwfb	(___fladd@b+1)^0,f,c
  7666  001C54  502E               	movf	(___fladd@a+2)^0,w,c
  7667  001C56  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  7668  001C58  502F               	movf	(___fladd@a+3)^0,w,c
  7669  001C5A  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  7670  001C5C                     l663:
  7671  001C5C  5028               	movf	___fladd@b^0,w,c
  7672  001C5E  1029               	iorwf	(___fladd@b+1)^0,w,c
  7673  001C60  102A               	iorwf	(___fladd@b+2)^0,w,c
  7674  001C62  102B               	iorwf	(___fladd@b+3)^0,w,c
  7675  001C64  A4D8               	btfss	status,2,c
  7676  001C66  EF37  F00E         	goto	u2661
  7677  001C6A  EF39  F00E         	goto	u2660
  7678  001C6E                     u2661:
  7679  001C6E  EF6E  F00E         	goto	l2746
  7680  001C72                     u2660:
  7681  001C72  5037               	movf	___fladd@grs^0,w,c
  7682  001C74  A4D8               	btfss	status,2,c
  7683  001C76  EF3F  F00E         	goto	u2671
  7684  001C7A  EF41  F00E         	goto	u2670
  7685  001C7E                     u2671:
  7686  001C7E  EF6E  F00E         	goto	l2746
  7687  001C82                     u2670:
  7688  001C82  0E00               	movlw	0
  7689  001C84  6E28               	movwf	?___fladd^0,c
  7690  001C86  0E00               	movlw	0
  7691  001C88  6E29               	movwf	(?___fladd+1)^0,c
  7692  001C8A  0E00               	movlw	0
  7693  001C8C  6E2A               	movwf	(?___fladd+2)^0,c
  7694  001C8E  0E00               	movlw	0
  7695  001C90  6E2B               	movwf	(?___fladd+3)^0,c
  7696  001C92  EF09  F00F         	goto	l655
  7697  001C96                     l2730:
  7698  001C96  90D8               	bcf	status,0,c
  7699  001C98  3628               	rlcf	___fladd@b^0,f,c
  7700  001C9A  3629               	rlcf	(___fladd@b+1)^0,f,c
  7701  001C9C  362A               	rlcf	(___fladd@b+2)^0,f,c
  7702  001C9E  362B               	rlcf	(___fladd@b+3)^0,f,c
  7703  001CA0  AE37               	btfss	___fladd@grs^0,7,c
  7704  001CA2  EF55  F00E         	goto	u2681
  7705  001CA6  EF57  F00E         	goto	u2680
  7706  001CAA                     u2681:
  7707  001CAA  EF58  F00E         	goto	l2736
  7708  001CAE                     u2680:
  7709  001CAE  8028               	bsf	___fladd@b^0,0,c
  7710  001CB0                     l2736:
  7711  001CB0  A037               	btfss	___fladd@grs^0,0,c
  7712  001CB2  EF5D  F00E         	goto	u2691
  7713  001CB6  EF5F  F00E         	goto	u2690
  7714  001CBA                     u2691:
  7715  001CBA  EF63  F00E         	goto	l2740
  7716  001CBE                     u2690:
  7717  001CBE  80D8               	bsf	status,0,c
  7718  001CC0  3637               	rlcf	___fladd@grs^0,f,c
  7719  001CC2  EF65  F00E         	goto	l2742
  7720  001CC6                     l2740:
  7721  001CC6  90D8               	bcf	status,0,c
  7722  001CC8  3637               	rlcf	___fladd@grs^0,f,c
  7723  001CCA                     l2742:
  7724  001CCA  5036               	movf	___fladd@bexp^0,w,c
  7725  001CCC  B4D8               	btfsc	status,2,c
  7726  001CCE  EF6B  F00E         	goto	u2701
  7727  001CD2  EF6D  F00E         	goto	u2700
  7728  001CD6                     u2701:
  7729  001CD6  EF6E  F00E         	goto	l2746
  7730  001CDA                     u2700:
  7731  001CDA  0636               	decf	___fladd@bexp^0,f,c
  7732  001CDC                     l2746:
  7733  001CDC  AE2A               	btfss	(___fladd@b+2)^0,7,c
  7734  001CDE  EF73  F00E         	goto	u2711
  7735  001CE2  EF75  F00E         	goto	u2710
  7736  001CE6                     u2711:
  7737  001CE6  EF4B  F00E         	goto	l2730
  7738  001CEA                     u2710:
  7739  001CEA                     l2748:
  7740  001CEA  0E00               	movlw	0
  7741  001CEC  6E35               	movwf	___fladd@aexp^0,c
  7742  001CEE  AE37               	btfss	___fladd@grs^0,7,c
  7743  001CF0  EF7C  F00E         	goto	u2721
  7744  001CF4  EF7E  F00E         	goto	u2720
  7745  001CF8                     u2721:
  7746  001CF8  EF96  F00E         	goto	l672
  7747  001CFC                     u2720:
  7748  001CFC  C037  F030         	movff	___fladd@grs,??___fladd
  7749  001D00  0E7F               	movlw	127
  7750  001D02  1630               	andwf	??___fladd^0,f,c
  7751  001D04  B4D8               	btfsc	status,2,c
  7752  001D06  EF87  F00E         	goto	u2731
  7753  001D0A  EF89  F00E         	goto	u2730
  7754  001D0E                     u2731:
  7755  001D0E  EF8D  F00E         	goto	l673
  7756  001D12                     u2730:
  7757  001D12                     l2754:
  7758  001D12  0E01               	movlw	1
  7759  001D14  6E35               	movwf	___fladd@aexp^0,c
  7760  001D16  EF96  F00E         	goto	l672
  7761  001D1A                     l673:
  7762  001D1A  A028               	btfss	___fladd@b^0,0,c
  7763  001D1C  EF92  F00E         	goto	u2741
  7764  001D20  EF94  F00E         	goto	u2740
  7765  001D24                     u2741:
  7766  001D24  EF96  F00E         	goto	l672
  7767  001D28                     u2740:
  7768  001D28  EF89  F00E         	goto	l2754
  7769  001D2C                     l672:
  7770  001D2C  5035               	movf	___fladd@aexp^0,w,c
  7771  001D2E  B4D8               	btfsc	status,2,c
  7772  001D30  EF9C  F00E         	goto	u2751
  7773  001D34  EF9E  F00E         	goto	u2750
  7774  001D38                     u2751:
  7775  001D38  EFC9  F00E         	goto	l2766
  7776  001D3C                     u2750:
  7777  001D3C  0E01               	movlw	1
  7778  001D3E  2628               	addwf	___fladd@b^0,f,c
  7779  001D40  0E00               	movlw	0
  7780  001D42  2229               	addwfc	(___fladd@b+1)^0,f,c
  7781  001D44  222A               	addwfc	(___fladd@b+2)^0,f,c
  7782  001D46  222B               	addwfc	(___fladd@b+3)^0,f,c
  7783  001D48  A02B               	btfss	(___fladd@b+3)^0,0,c
  7784  001D4A  EFA9  F00E         	goto	u2761
  7785  001D4E  EFAB  F00E         	goto	u2760
  7786  001D52                     u2761:
  7787  001D52  EFC9  F00E         	goto	l2766
  7788  001D56                     u2760:
  7789  001D56  C028  F030         	movff	___fladd@b,??___fladd
  7790  001D5A  C029  F031         	movff	___fladd@b+1,??___fladd+1
  7791  001D5E  C02A  F032         	movff	___fladd@b+2,??___fladd+2
  7792  001D62  C02B  F033         	movff	___fladd@b+3,??___fladd+3
  7793  001D66  3433               	rlcf	(??___fladd+3)^0,w,c
  7794  001D68  3233               	rrcf	(??___fladd+3)^0,f,c
  7795  001D6A  3232               	rrcf	(??___fladd+2)^0,f,c
  7796  001D6C  3231               	rrcf	(??___fladd+1)^0,f,c
  7797  001D6E  3230               	rrcf	??___fladd^0,f,c
  7798  001D70  C030  F028         	movff	??___fladd,___fladd@b
  7799  001D74  C031  F029         	movff	??___fladd+1,___fladd@b+1
  7800  001D78  C032  F02A         	movff	??___fladd+2,___fladd@b+2
  7801  001D7C  C033  F02B         	movff	??___fladd+3,___fladd@b+3
  7802  001D80  2836               	incf	___fladd@bexp^0,w,c
  7803  001D82  B4D8               	btfsc	status,2,c
  7804  001D84  EFC6  F00E         	goto	u2771
  7805  001D88  EFC8  F00E         	goto	u2770
  7806  001D8C                     u2771:
  7807  001D8C  EFC9  F00E         	goto	l2766
  7808  001D90                     u2770:
  7809  001D90  2A36               	incf	___fladd@bexp^0,f,c
  7810  001D92                     l2766:
  7811  001D92  2836               	incf	___fladd@bexp^0,w,c
  7812  001D94  B4D8               	btfsc	status,2,c
  7813  001D96  EFCF  F00E         	goto	u2781
  7814  001D9A  EFD1  F00E         	goto	u2780
  7815  001D9E                     u2781:
  7816  001D9E  EFD9  F00E         	goto	l2770
  7817  001DA2                     u2780:
  7818  001DA2  5036               	movf	___fladd@bexp^0,w,c
  7819  001DA4  A4D8               	btfss	status,2,c
  7820  001DA6  EFD7  F00E         	goto	u2791
  7821  001DAA  EFD9  F00E         	goto	u2790
  7822  001DAE                     u2791:
  7823  001DAE  EFEB  F00E         	goto	l2774
  7824  001DB2                     u2790:
  7825  001DB2                     l2770:
  7826  001DB2  0E00               	movlw	0
  7827  001DB4  6E28               	movwf	___fladd@b^0,c
  7828  001DB6  0E00               	movlw	0
  7829  001DB8  6E29               	movwf	(___fladd@b+1)^0,c
  7830  001DBA  0E00               	movlw	0
  7831  001DBC  6E2A               	movwf	(___fladd@b+2)^0,c
  7832  001DBE  0E00               	movlw	0
  7833  001DC0  6E2B               	movwf	(___fladd@b+3)^0,c
  7834  001DC2  5036               	movf	___fladd@bexp^0,w,c
  7835  001DC4  A4D8               	btfss	status,2,c
  7836  001DC6  EFE7  F00E         	goto	u2801
  7837  001DCA  EFE9  F00E         	goto	u2800
  7838  001DCE                     u2801:
  7839  001DCE  EFEB  F00E         	goto	l2774
  7840  001DD2                     u2800:
  7841  001DD2  0E00               	movlw	0
  7842  001DD4  6E34               	movwf	___fladd@signs^0,c
  7843  001DD6                     l2774:
  7844  001DD6  A036               	btfss	___fladd@bexp^0,0,c
  7845  001DD8  EFF0  F00E         	goto	u2811
  7846  001DDC  EFF2  F00E         	goto	u2810
  7847  001DE0                     u2811:
  7848  001DE0  EFF5  F00E         	goto	l2778
  7849  001DE4                     u2810:
  7850  001DE4  8E2A               	bsf	(___fladd@b+2)^0,7,c
  7851  001DE6  EFF6  F00E         	goto	l2780
  7852  001DEA                     l2778:
  7853  001DEA  9E2A               	bcf	(___fladd@b+2)^0,7,c
  7854  001DEC                     l2780:
  7855  001DEC  90D8               	bcf	status,0,c
  7856  001DEE  3036               	rrcf	___fladd@bexp^0,w,c
  7857  001DF0  6E2B               	movwf	(___fladd@b+3)^0,c
  7858  001DF2  AE34               	btfss	___fladd@signs^0,7,c
  7859  001DF4  EFFE  F00E         	goto	u2821
  7860  001DF8  EF00  F00F         	goto	u2820
  7861  001DFC                     u2821:
  7862  001DFC  EF01  F00F         	goto	l2786
  7863  001E00                     u2820:
  7864  001E00  8E2B               	bsf	(___fladd@b+3)^0,7,c
  7865  001E02                     l2786:
  7866  001E02  C028  F028         	movff	___fladd@b,?___fladd
  7867  001E06  C029  F029         	movff	___fladd@b+1,?___fladd+1
  7868  001E0A  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
  7869  001E0E  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
  7870  001E12                     l655:
  7871  001E12  0012               	return		;funcret
  7872  001E14                     __end_of___fladd:
  7873                           	callstack 0
  7874                           
  7875 ;; *************** function ___flmul *****************
  7876 ;; Defined at:
  7877 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  b               4   14[COMRAM] unsigned char 
  7880 ;;  a               4   18[COMRAM] unsigned char 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  prod            4   33[COMRAM] struct .
  7883 ;;  grs             4   27[COMRAM] unsigned long 
  7884 ;;  temp            2   37[COMRAM] struct .
  7885 ;;  bexp            1   32[COMRAM] unsigned char 
  7886 ;;  aexp            1   31[COMRAM] unsigned char 
  7887 ;;  sign            1   26[COMRAM] unsigned char 
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  4   14[COMRAM] unsigned char 
  7890 ;; Registers used:
  7891 ;;		wreg, status,2, status,0, prodl, prodh
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7897 ;;      Params:         8       0       0       0       0       0       0       0       0
  7898 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7899 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7900 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7901 ;;Total ram usage:       25 bytes
  7902 ;; Hardware stack levels used: 1
  7903 ;; Hardware stack levels required when called: 1
  7904 ;; This function calls:
  7905 ;;		Nothing
  7906 ;; This function is called by:
  7907 ;;		_ADC_MAP
  7908 ;;		_efgtoa
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           	psect	text35
  7913  001E14                     __ptext35:
  7914                           	callstack 0
  7915  001E14                     ___flmul:
  7916                           	callstack 25
  7917  001E14  5012               	movf	(___flmul@b+3)^0,w,c
  7918  001E16  0B80               	andlw	128
  7919  001E18  6E1B               	movwf	___flmul@sign^0,c
  7920  001E1A  5012               	movf	(___flmul@b+3)^0,w,c
  7921  001E1C  2412               	addwf	(___flmul@b+3)^0,w,c
  7922  001E1E  6E21               	movwf	___flmul@bexp^0,c
  7923  001E20  AE11               	btfss	(___flmul@b+2)^0,7,c
  7924  001E22  EF15  F00F         	goto	u3101
  7925  001E26  EF17  F00F         	goto	u3100
  7926  001E2A                     u3101:
  7927  001E2A  EF18  F00F         	goto	l2962
  7928  001E2E                     u3100:
  7929  001E2E  8021               	bsf	___flmul@bexp^0,0,c
  7930  001E30                     l2962:
  7931  001E30  5021               	movf	___flmul@bexp^0,w,c
  7932  001E32  B4D8               	btfsc	status,2,c
  7933  001E34  EF1E  F00F         	goto	u3111
  7934  001E38  EF20  F00F         	goto	u3110
  7935  001E3C                     u3111:
  7936  001E3C  EF33  F00F         	goto	l2970
  7937  001E40                     u3110:
  7938  001E40  2821               	incf	___flmul@bexp^0,w,c
  7939  001E42  A4D8               	btfss	status,2,c
  7940  001E44  EF26  F00F         	goto	u3121
  7941  001E48  EF28  F00F         	goto	u3120
  7942  001E4C                     u3121:
  7943  001E4C  EF30  F00F         	goto	l2968
  7944  001E50                     u3120:
  7945  001E50  0E00               	movlw	0
  7946  001E52  6E0F               	movwf	___flmul@b^0,c
  7947  001E54  0E00               	movlw	0
  7948  001E56  6E10               	movwf	(___flmul@b+1)^0,c
  7949  001E58  0E00               	movlw	0
  7950  001E5A  6E11               	movwf	(___flmul@b+2)^0,c
  7951  001E5C  0E00               	movlw	0
  7952  001E5E  6E12               	movwf	(___flmul@b+3)^0,c
  7953  001E60                     l2968:
  7954  001E60  8E11               	bsf	(___flmul@b+2)^0,7,c
  7955  001E62  EF3B  F00F         	goto	l2972
  7956  001E66                     l2970:
  7957  001E66  0E00               	movlw	0
  7958  001E68  6E0F               	movwf	___flmul@b^0,c
  7959  001E6A  0E00               	movlw	0
  7960  001E6C  6E10               	movwf	(___flmul@b+1)^0,c
  7961  001E6E  0E00               	movlw	0
  7962  001E70  6E11               	movwf	(___flmul@b+2)^0,c
  7963  001E72  0E00               	movlw	0
  7964  001E74  6E12               	movwf	(___flmul@b+3)^0,c
  7965  001E76                     l2972:
  7966  001E76  5016               	movf	(___flmul@a+3)^0,w,c
  7967  001E78  0B80               	andlw	128
  7968  001E7A  1A1B               	xorwf	___flmul@sign^0,f,c
  7969  001E7C  5016               	movf	(___flmul@a+3)^0,w,c
  7970  001E7E  2416               	addwf	(___flmul@a+3)^0,w,c
  7971  001E80  6E20               	movwf	___flmul@aexp^0,c
  7972  001E82  AE15               	btfss	(___flmul@a+2)^0,7,c
  7973  001E84  EF46  F00F         	goto	u3131
  7974  001E88  EF48  F00F         	goto	u3130
  7975  001E8C                     u3131:
  7976  001E8C  EF49  F00F         	goto	l2980
  7977  001E90                     u3130:
  7978  001E90  8020               	bsf	___flmul@aexp^0,0,c
  7979  001E92                     l2980:
  7980  001E92  5020               	movf	___flmul@aexp^0,w,c
  7981  001E94  B4D8               	btfsc	status,2,c
  7982  001E96  EF4F  F00F         	goto	u3141
  7983  001E9A  EF51  F00F         	goto	u3140
  7984  001E9E                     u3141:
  7985  001E9E  EF64  F00F         	goto	l2988
  7986  001EA2                     u3140:
  7987  001EA2  2820               	incf	___flmul@aexp^0,w,c
  7988  001EA4  A4D8               	btfss	status,2,c
  7989  001EA6  EF57  F00F         	goto	u3151
  7990  001EAA  EF59  F00F         	goto	u3150
  7991  001EAE                     u3151:
  7992  001EAE  EF61  F00F         	goto	l2986
  7993  001EB2                     u3150:
  7994  001EB2  0E00               	movlw	0
  7995  001EB4  6E13               	movwf	___flmul@a^0,c
  7996  001EB6  0E00               	movlw	0
  7997  001EB8  6E14               	movwf	(___flmul@a+1)^0,c
  7998  001EBA  0E00               	movlw	0
  7999  001EBC  6E15               	movwf	(___flmul@a+2)^0,c
  8000  001EBE  0E00               	movlw	0
  8001  001EC0  6E16               	movwf	(___flmul@a+3)^0,c
  8002  001EC2                     l2986:
  8003  001EC2  8E15               	bsf	(___flmul@a+2)^0,7,c
  8004  001EC4  EF6C  F00F         	goto	l732
  8005  001EC8                     l2988:
  8006  001EC8  0E00               	movlw	0
  8007  001ECA  6E13               	movwf	___flmul@a^0,c
  8008  001ECC  0E00               	movlw	0
  8009  001ECE  6E14               	movwf	(___flmul@a+1)^0,c
  8010  001ED0  0E00               	movlw	0
  8011  001ED2  6E15               	movwf	(___flmul@a+2)^0,c
  8012  001ED4  0E00               	movlw	0
  8013  001ED6  6E16               	movwf	(___flmul@a+3)^0,c
  8014  001ED8                     l732:
  8015  001ED8  5020               	movf	___flmul@aexp^0,w,c
  8016  001EDA  B4D8               	btfsc	status,2,c
  8017  001EDC  EF72  F00F         	goto	u3161
  8018  001EE0  EF74  F00F         	goto	u3160
  8019  001EE4                     u3161:
  8020  001EE4  EF7C  F00F         	goto	l2992
  8021  001EE8                     u3160:
  8022  001EE8  5021               	movf	___flmul@bexp^0,w,c
  8023  001EEA  A4D8               	btfss	status,2,c
  8024  001EEC  EF7A  F00F         	goto	u3171
  8025  001EF0  EF7C  F00F         	goto	u3170
  8026  001EF4                     u3171:
  8027  001EF4  EF86  F00F         	goto	l2996
  8028  001EF8                     u3170:
  8029  001EF8                     l2992:
  8030  001EF8  0E00               	movlw	0
  8031  001EFA  6E0F               	movwf	?___flmul^0,c
  8032  001EFC  0E00               	movlw	0
  8033  001EFE  6E10               	movwf	(?___flmul+1)^0,c
  8034  001F00  0E00               	movlw	0
  8035  001F02  6E11               	movwf	(?___flmul+2)^0,c
  8036  001F04  0E00               	movlw	0
  8037  001F06  6E12               	movwf	(?___flmul+3)^0,c
  8038  001F08  EF1E  F011         	goto	l736
  8039  001F0C                     l2996:
  8040  001F0C  5015               	movf	(___flmul@a+2)^0,w,c
  8041  001F0E  020F               	mulwf	___flmul@b^0,c
  8042  001F10  CFF3 F026          	movff	prodl,___flmul@temp
  8043  001F14  CFF4 F027          	movff	prodh,___flmul@temp+1
  8044  001F18  5026               	movf	___flmul@temp^0,w,c
  8045  001F1A  6E1C               	movwf	___flmul@grs^0,c
  8046  001F1C  6A1D               	clrf	(___flmul@grs+1)^0,c
  8047  001F1E  6A1E               	clrf	(___flmul@grs+2)^0,c
  8048  001F20  6A1F               	clrf	(___flmul@grs+3)^0,c
  8049  001F22  5027               	movf	(___flmul@temp+1)^0,w,c
  8050  001F24  6E22               	movwf	___flmul@prod^0,c
  8051  001F26  6A23               	clrf	(___flmul@prod+1)^0,c
  8052  001F28  6A24               	clrf	(___flmul@prod+2)^0,c
  8053  001F2A  6A25               	clrf	(___flmul@prod+3)^0,c
  8054  001F2C  5014               	movf	(___flmul@a+1)^0,w,c
  8055  001F2E  0210               	mulwf	(___flmul@b+1)^0,c
  8056  001F30  CFF3 F026          	movff	prodl,___flmul@temp
  8057  001F34  CFF4 F027          	movff	prodh,___flmul@temp+1
  8058  001F38  5026               	movf	___flmul@temp^0,w,c
  8059  001F3A  261C               	addwf	___flmul@grs^0,f,c
  8060  001F3C  0E00               	movlw	0
  8061  001F3E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8062  001F40  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8063  001F42  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8064  001F44  5027               	movf	(___flmul@temp+1)^0,w,c
  8065  001F46  2622               	addwf	___flmul@prod^0,f,c
  8066  001F48  0E00               	movlw	0
  8067  001F4A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8068  001F4C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8069  001F4E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8070  001F50  5013               	movf	___flmul@a^0,w,c
  8071  001F52  0211               	mulwf	(___flmul@b+2)^0,c
  8072  001F54  CFF3 F026          	movff	prodl,___flmul@temp
  8073  001F58  CFF4 F027          	movff	prodh,___flmul@temp+1
  8074  001F5C  5026               	movf	___flmul@temp^0,w,c
  8075  001F5E  261C               	addwf	___flmul@grs^0,f,c
  8076  001F60  0E00               	movlw	0
  8077  001F62  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8078  001F64  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8079  001F66  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8080  001F68  5027               	movf	(___flmul@temp+1)^0,w,c
  8081  001F6A  2622               	addwf	___flmul@prod^0,f,c
  8082  001F6C  0E00               	movlw	0
  8083  001F6E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8084  001F70  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8085  001F72  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8086  001F74  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8087  001F78  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8088  001F7C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8089  001F80  6A1C               	clrf	___flmul@grs^0,c
  8090  001F82  5013               	movf	___flmul@a^0,w,c
  8091  001F84  0210               	mulwf	(___flmul@b+1)^0,c
  8092  001F86  CFF3 F026          	movff	prodl,___flmul@temp
  8093  001F8A  CFF4 F027          	movff	prodh,___flmul@temp+1
  8094  001F8E  5026               	movf	___flmul@temp^0,w,c
  8095  001F90  261C               	addwf	___flmul@grs^0,f,c
  8096  001F92  5027               	movf	(___flmul@temp+1)^0,w,c
  8097  001F94  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8098  001F96  0E00               	movlw	0
  8099  001F98  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8100  001F9A  0E00               	movlw	0
  8101  001F9C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8102  001F9E  5014               	movf	(___flmul@a+1)^0,w,c
  8103  001FA0  020F               	mulwf	___flmul@b^0,c
  8104  001FA2  CFF3 F026          	movff	prodl,___flmul@temp
  8105  001FA6  CFF4 F027          	movff	prodh,___flmul@temp+1
  8106  001FAA  5026               	movf	___flmul@temp^0,w,c
  8107  001FAC  261C               	addwf	___flmul@grs^0,f,c
  8108  001FAE  5027               	movf	(___flmul@temp+1)^0,w,c
  8109  001FB0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8110  001FB2  0E00               	movlw	0
  8111  001FB4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8112  001FB6  0E00               	movlw	0
  8113  001FB8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8114  001FBA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8115  001FBE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8116  001FC2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8117  001FC6  6A1C               	clrf	___flmul@grs^0,c
  8118  001FC8  5013               	movf	___flmul@a^0,w,c
  8119  001FCA  020F               	mulwf	___flmul@b^0,c
  8120  001FCC  CFF3 F026          	movff	prodl,___flmul@temp
  8121  001FD0  CFF4 F027          	movff	prodh,___flmul@temp+1
  8122  001FD4  5026               	movf	___flmul@temp^0,w,c
  8123  001FD6  261C               	addwf	___flmul@grs^0,f,c
  8124  001FD8  5027               	movf	(___flmul@temp+1)^0,w,c
  8125  001FDA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8126  001FDC  0E00               	movlw	0
  8127  001FDE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8128  001FE0  0E00               	movlw	0
  8129  001FE2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8130  001FE4  5015               	movf	(___flmul@a+2)^0,w,c
  8131  001FE6  0210               	mulwf	(___flmul@b+1)^0,c
  8132  001FE8  CFF3 F026          	movff	prodl,___flmul@temp
  8133  001FEC  CFF4 F027          	movff	prodh,___flmul@temp+1
  8134  001FF0  5026               	movf	___flmul@temp^0,w,c
  8135  001FF2  2622               	addwf	___flmul@prod^0,f,c
  8136  001FF4  5027               	movf	(___flmul@temp+1)^0,w,c
  8137  001FF6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8138  001FF8  0E00               	movlw	0
  8139  001FFA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8140  001FFC  0E00               	movlw	0
  8141  001FFE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8142  002000  5014               	movf	(___flmul@a+1)^0,w,c
  8143  002002  0211               	mulwf	(___flmul@b+2)^0,c
  8144  002004  CFF3 F026          	movff	prodl,___flmul@temp
  8145  002008  CFF4 F027          	movff	prodh,___flmul@temp+1
  8146  00200C  5026               	movf	___flmul@temp^0,w,c
  8147  00200E  2622               	addwf	___flmul@prod^0,f,c
  8148  002010  5027               	movf	(___flmul@temp+1)^0,w,c
  8149  002012  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8150  002014  0E00               	movlw	0
  8151  002016  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8152  002018  0E00               	movlw	0
  8153  00201A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8154  00201C  5015               	movf	(___flmul@a+2)^0,w,c
  8155  00201E  0211               	mulwf	(___flmul@b+2)^0,c
  8156  002020  CFF3 F026          	movff	prodl,___flmul@temp
  8157  002024  CFF4 F027          	movff	prodh,___flmul@temp+1
  8158  002028  5026               	movf	___flmul@temp^0,w,c
  8159  00202A  6E17               	movwf	??___flmul^0,c
  8160  00202C  5027               	movf	(___flmul@temp+1)^0,w,c
  8161  00202E  6E18               	movwf	(??___flmul+1)^0,c
  8162  002030  6A19               	clrf	(??___flmul+2)^0,c
  8163  002032  6A1A               	clrf	(??___flmul+3)^0,c
  8164  002034  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8165  002038  C018  F019         	movff	??___flmul+1,??___flmul+2
  8166  00203C  C017  F018         	movff	??___flmul,??___flmul+1
  8167  002040  6A17               	clrf	??___flmul^0,c
  8168  002042  5017               	movf	??___flmul^0,w,c
  8169  002044  2622               	addwf	___flmul@prod^0,f,c
  8170  002046  5018               	movf	(??___flmul+1)^0,w,c
  8171  002048  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8172  00204A  5019               	movf	(??___flmul+2)^0,w,c
  8173  00204C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8174  00204E  501A               	movf	(??___flmul+3)^0,w,c
  8175  002050  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8176  002052  C01C  F017         	movff	___flmul@grs,??___flmul
  8177  002056  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8178  00205A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8179  00205E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8180  002062  0E19               	movlw	25
  8181  002064  EF39  F010         	goto	u3180
  8182  002068                     u3185:
  8183  002068  90D8               	bcf	status,0,c
  8184  00206A  321A               	rrcf	(??___flmul+3)^0,f,c
  8185  00206C  3219               	rrcf	(??___flmul+2)^0,f,c
  8186  00206E  3218               	rrcf	(??___flmul+1)^0,f,c
  8187  002070  3217               	rrcf	??___flmul^0,f,c
  8188  002072                     u3180:
  8189  002072  2EE8               	decfsz	wreg,f,c
  8190  002074  EF34  F010         	goto	u3185
  8191  002078  5017               	movf	??___flmul^0,w,c
  8192  00207A  2622               	addwf	___flmul@prod^0,f,c
  8193  00207C  5018               	movf	(??___flmul+1)^0,w,c
  8194  00207E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8195  002080  5019               	movf	(??___flmul+2)^0,w,c
  8196  002082  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8197  002084  501A               	movf	(??___flmul+3)^0,w,c
  8198  002086  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8199  002088  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8200  00208C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8201  002090  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8202  002094  6A1C               	clrf	___flmul@grs^0,c
  8203  002096  5020               	movf	___flmul@aexp^0,w,c
  8204  002098  C021  F017         	movff	___flmul@bexp,??___flmul
  8205  00209C  6A18               	clrf	(??___flmul+1)^0,c
  8206  00209E  2617               	addwf	??___flmul^0,f,c
  8207  0020A0  0E00               	movlw	0
  8208  0020A2  2218               	addwfc	(??___flmul+1)^0,f,c
  8209  0020A4  0E82               	movlw	130
  8210  0020A6  2417               	addwf	??___flmul^0,w,c
  8211  0020A8  6E26               	movwf	___flmul@temp^0,c
  8212  0020AA  0EFF               	movlw	255
  8213  0020AC  2018               	addwfc	(??___flmul+1)^0,w,c
  8214  0020AE  6E27               	movwf	(___flmul@temp+1)^0,c
  8215  0020B0  EF6F  F010         	goto	l3044
  8216  0020B4                     l3038:
  8217  0020B4  90D8               	bcf	status,0,c
  8218  0020B6  3622               	rlcf	___flmul@prod^0,f,c
  8219  0020B8  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8220  0020BA  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8221  0020BC  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8222  0020BE  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8223  0020C0  EF64  F010         	goto	u3191
  8224  0020C4  EF66  F010         	goto	u3190
  8225  0020C8                     u3191:
  8226  0020C8  EF67  F010         	goto	l739
  8227  0020CC                     u3190:
  8228  0020CC  8022               	bsf	___flmul@prod^0,0,c
  8229  0020CE                     l739:
  8230  0020CE  90D8               	bcf	status,0,c
  8231  0020D0  361C               	rlcf	___flmul@grs^0,f,c
  8232  0020D2  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8233  0020D4  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8234  0020D6  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8235  0020D8  0626               	decf	___flmul@temp^0,f,c
  8236  0020DA  A0D8               	btfss	status,0,c
  8237  0020DC  0627               	decf	(___flmul@temp+1)^0,f,c
  8238  0020DE                     l3044:
  8239  0020DE  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8240  0020E0  EF74  F010         	goto	u3201
  8241  0020E4  EF76  F010         	goto	u3200
  8242  0020E8                     u3201:
  8243  0020E8  EF5A  F010         	goto	l3038
  8244  0020EC                     u3200:
  8245  0020EC  0E00               	movlw	0
  8246  0020EE  6E20               	movwf	___flmul@aexp^0,c
  8247  0020F0  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8248  0020F2  EF7D  F010         	goto	u3211
  8249  0020F6  EF7F  F010         	goto	u3210
  8250  0020FA                     u3211:
  8251  0020FA  EFA3  F010         	goto	l741
  8252  0020FE                     u3210:
  8253  0020FE  0EFF               	movlw	255
  8254  002100  141C               	andwf	___flmul@grs^0,w,c
  8255  002102  6E17               	movwf	??___flmul^0,c
  8256  002104  0EFF               	movlw	255
  8257  002106  141D               	andwf	(___flmul@grs+1)^0,w,c
  8258  002108  6E18               	movwf	(??___flmul+1)^0,c
  8259  00210A  0EFF               	movlw	255
  8260  00210C  141E               	andwf	(___flmul@grs+2)^0,w,c
  8261  00210E  6E19               	movwf	(??___flmul+2)^0,c
  8262  002110  0E7F               	movlw	127
  8263  002112  141F               	andwf	(___flmul@grs+3)^0,w,c
  8264  002114  6E1A               	movwf	(??___flmul+3)^0,c
  8265  002116  5017               	movf	??___flmul^0,w,c
  8266  002118  1018               	iorwf	(??___flmul+1)^0,w,c
  8267  00211A  1019               	iorwf	(??___flmul+2)^0,w,c
  8268  00211C  101A               	iorwf	(??___flmul+3)^0,w,c
  8269  00211E  B4D8               	btfsc	status,2,c
  8270  002120  EF94  F010         	goto	u3221
  8271  002124  EF96  F010         	goto	u3220
  8272  002128                     u3221:
  8273  002128  EF9A  F010         	goto	l742
  8274  00212C                     u3220:
  8275  00212C                     l3052:
  8276  00212C  0E01               	movlw	1
  8277  00212E  6E20               	movwf	___flmul@aexp^0,c
  8278  002130  EFA3  F010         	goto	l741
  8279  002134                     l742:
  8280  002134  A022               	btfss	___flmul@prod^0,0,c
  8281  002136  EF9F  F010         	goto	u3231
  8282  00213A  EFA1  F010         	goto	u3230
  8283  00213E                     u3231:
  8284  00213E  EFA3  F010         	goto	l741
  8285  002142                     u3230:
  8286  002142  EF96  F010         	goto	l3052
  8287  002146                     l741:
  8288  002146  5020               	movf	___flmul@aexp^0,w,c
  8289  002148  B4D8               	btfsc	status,2,c
  8290  00214A  EFA9  F010         	goto	u3241
  8291  00214E  EFAB  F010         	goto	u3240
  8292  002152                     u3241:
  8293  002152  EFCF  F010         	goto	l3064
  8294  002156                     u3240:
  8295  002156  0E01               	movlw	1
  8296  002158  2622               	addwf	___flmul@prod^0,f,c
  8297  00215A  0E00               	movlw	0
  8298  00215C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8299  00215E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8300  002160  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8301  002162  A025               	btfss	(___flmul@prod+3)^0,0,c
  8302  002164  EFB6  F010         	goto	u3251
  8303  002168  EFB8  F010         	goto	u3250
  8304  00216C                     u3251:
  8305  00216C  EFCF  F010         	goto	l3064
  8306  002170                     u3250:
  8307  002170  C022  F017         	movff	___flmul@prod,??___flmul
  8308  002174  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8309  002178  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8310  00217C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8311  002180  341A               	rlcf	(??___flmul+3)^0,w,c
  8312  002182  321A               	rrcf	(??___flmul+3)^0,f,c
  8313  002184  3219               	rrcf	(??___flmul+2)^0,f,c
  8314  002186  3218               	rrcf	(??___flmul+1)^0,f,c
  8315  002188  3217               	rrcf	??___flmul^0,f,c
  8316  00218A  C017  F022         	movff	??___flmul,___flmul@prod
  8317  00218E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8318  002192  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8319  002196  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8320  00219A  4A26               	infsnz	___flmul@temp^0,f,c
  8321  00219C  2A27               	incf	(___flmul@temp+1)^0,f,c
  8322  00219E                     l3064:
  8323  00219E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8324  0021A0  EFDA  F010         	goto	u3261
  8325  0021A4  5027               	movf	(___flmul@temp+1)^0,w,c
  8326  0021A6  E108               	bnz	u3260
  8327  0021A8  2826               	incf	___flmul@temp^0,w,c
  8328  0021AA  A0D8               	btfss	status,0,c
  8329  0021AC  EFDA  F010         	goto	u3261
  8330  0021B0  EFDC  F010         	goto	u3260
  8331  0021B4                     u3261:
  8332  0021B4  EFE6  F010         	goto	l3068
  8333  0021B8                     u3260:
  8334  0021B8  0E00               	movlw	0
  8335  0021BA  6E22               	movwf	___flmul@prod^0,c
  8336  0021BC  0E00               	movlw	0
  8337  0021BE  6E23               	movwf	(___flmul@prod+1)^0,c
  8338  0021C0  0E80               	movlw	128
  8339  0021C2  6E24               	movwf	(___flmul@prod+2)^0,c
  8340  0021C4  0E7F               	movlw	127
  8341  0021C6  6E25               	movwf	(___flmul@prod+3)^0,c
  8342  0021C8  EF14  F011         	goto	l3080
  8343  0021CC                     l3068:
  8344  0021CC  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8345  0021CE  EFF3  F010         	goto	u3270
  8346  0021D2  5027               	movf	(___flmul@temp+1)^0,w,c
  8347  0021D4  E106               	bnz	u3271
  8348  0021D6  0426               	decf	___flmul@temp^0,w,c
  8349  0021D8  B0D8               	btfsc	status,0,c
  8350  0021DA  EFF1  F010         	goto	u3271
  8351  0021DE  EFF3  F010         	goto	u3270
  8352  0021E2                     u3271:
  8353  0021E2  EFFF  F010         	goto	l749
  8354  0021E6                     u3270:
  8355  0021E6  0E00               	movlw	0
  8356  0021E8  6E22               	movwf	___flmul@prod^0,c
  8357  0021EA  0E00               	movlw	0
  8358  0021EC  6E23               	movwf	(___flmul@prod+1)^0,c
  8359  0021EE  0E00               	movlw	0
  8360  0021F0  6E24               	movwf	(___flmul@prod+2)^0,c
  8361  0021F2  0E00               	movlw	0
  8362  0021F4  6E25               	movwf	(___flmul@prod+3)^0,c
  8363  0021F6  0E00               	movlw	0
  8364  0021F8  6E1B               	movwf	___flmul@sign^0,c
  8365  0021FA  EF14  F011         	goto	l3080
  8366  0021FE                     l749:
  8367  0021FE  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8368  002202  0EFF               	movlw	255
  8369  002204  1622               	andwf	___flmul@prod^0,f,c
  8370  002206  0EFF               	movlw	255
  8371  002208  1623               	andwf	(___flmul@prod+1)^0,f,c
  8372  00220A  0E7F               	movlw	127
  8373  00220C  1624               	andwf	(___flmul@prod+2)^0,f,c
  8374  00220E  0E00               	movlw	0
  8375  002210  1625               	andwf	(___flmul@prod+3)^0,f,c
  8376  002212  A021               	btfss	___flmul@bexp^0,0,c
  8377  002214  EF0E  F011         	goto	u3281
  8378  002218  EF10  F011         	goto	u3280
  8379  00221C                     u3281:
  8380  00221C  EF11  F011         	goto	l3078
  8381  002220                     u3280:
  8382  002220  8E24               	bsf	(___flmul@prod+2)^0,7,c
  8383  002222                     l3078:
  8384  002222  90D8               	bcf	status,0,c
  8385  002224  3021               	rrcf	___flmul@bexp^0,w,c
  8386  002226  6E25               	movwf	(___flmul@prod+3)^0,c
  8387  002228                     l3080:
  8388  002228  501B               	movf	___flmul@sign^0,w,c
  8389  00222A  1225               	iorwf	(___flmul@prod+3)^0,f,c
  8390  00222C  C022  F00F         	movff	___flmul@prod,?___flmul
  8391  002230  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  8392  002234  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  8393  002238  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  8394  00223C                     l736:
  8395  00223C  0012               	return		;funcret
  8396  00223E                     __end_of___flmul:
  8397                           	callstack 0
  8398                           
  8399 ;; *************** function ___fldiv *****************
  8400 ;; Defined at:
  8401 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  b               4   63[COMRAM] unsigned char 
  8404 ;;  a               4   67[COMRAM] unsigned char 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  grs             4   82[COMRAM] unsigned long 
  8407 ;;  rem             4   75[COMRAM] unsigned long 
  8408 ;;  new_exp         2   80[COMRAM] short 
  8409 ;;  aexp            1   87[COMRAM] unsigned char 
  8410 ;;  bexp            1   86[COMRAM] unsigned char 
  8411 ;;  sign            1   79[COMRAM] unsigned char 
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  4   63[COMRAM] unsigned char 
  8414 ;; Registers used:
  8415 ;;		wreg, status,2, status,0
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/0
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8421 ;;      Params:         8       0       0       0       0       0       0       0       0
  8422 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8423 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8424 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8425 ;;Total ram usage:       25 bytes
  8426 ;; Hardware stack levels used: 1
  8427 ;; Hardware stack levels required when called: 1
  8428 ;; This function calls:
  8429 ;;		Nothing
  8430 ;; This function is called by:
  8431 ;;		_ADC_MAP
  8432 ;;		_efgtoa
  8433 ;; This function uses a non-reentrant model
  8434 ;;
  8435                           
  8436                           	psect	text36
  8437  00223E                     __ptext36:
  8438                           	callstack 0
  8439  00223E                     ___fldiv:
  8440                           	callstack 25
  8441  00223E  5043               	movf	(___fldiv@b+3)^0,w,c
  8442  002240  0B80               	andlw	128
  8443  002242  6E50               	movwf	___fldiv@sign^0,c
  8444  002244  5043               	movf	(___fldiv@b+3)^0,w,c
  8445  002246  2443               	addwf	(___fldiv@b+3)^0,w,c
  8446  002248  6E57               	movwf	___fldiv@bexp^0,c
  8447  00224A  AE42               	btfss	(___fldiv@b+2)^0,7,c
  8448  00224C  EF2A  F011         	goto	u2871
  8449  002250  EF2C  F011         	goto	u2870
  8450  002254                     u2871:
  8451  002254  EF2D  F011         	goto	l2824
  8452  002258                     u2870:
  8453  002258  8057               	bsf	___fldiv@bexp^0,0,c
  8454  00225A                     l2824:
  8455  00225A  5057               	movf	___fldiv@bexp^0,w,c
  8456  00225C  B4D8               	btfsc	status,2,c
  8457  00225E  EF33  F011         	goto	u2881
  8458  002262  EF35  F011         	goto	u2880
  8459  002266                     u2881:
  8460  002266  EF4A  F011         	goto	l2834
  8461  00226A                     u2880:
  8462  00226A  2857               	incf	___fldiv@bexp^0,w,c
  8463  00226C  A4D8               	btfss	status,2,c
  8464  00226E  EF3B  F011         	goto	u2891
  8465  002272  EF3D  F011         	goto	u2890
  8466  002276                     u2891:
  8467  002276  EF45  F011         	goto	l2830
  8468  00227A                     u2890:
  8469  00227A  0E00               	movlw	0
  8470  00227C  6E40               	movwf	___fldiv@b^0,c
  8471  00227E  0E00               	movlw	0
  8472  002280  6E41               	movwf	(___fldiv@b+1)^0,c
  8473  002282  0E00               	movlw	0
  8474  002284  6E42               	movwf	(___fldiv@b+2)^0,c
  8475  002286  0E00               	movlw	0
  8476  002288  6E43               	movwf	(___fldiv@b+3)^0,c
  8477  00228A                     l2830:
  8478  00228A  8E42               	bsf	(___fldiv@b+2)^0,7,c
  8479  00228C  0E00               	movlw	0
  8480  00228E  6E43               	movwf	(___fldiv@b+3)^0,c
  8481  002290  EF52  F011         	goto	l2836
  8482  002294                     l2834:
  8483  002294  0E00               	movlw	0
  8484  002296  6E40               	movwf	___fldiv@b^0,c
  8485  002298  0E00               	movlw	0
  8486  00229A  6E41               	movwf	(___fldiv@b+1)^0,c
  8487  00229C  0E00               	movlw	0
  8488  00229E  6E42               	movwf	(___fldiv@b+2)^0,c
  8489  0022A0  0E00               	movlw	0
  8490  0022A2  6E43               	movwf	(___fldiv@b+3)^0,c
  8491  0022A4                     l2836:
  8492  0022A4  5047               	movf	(___fldiv@a+3)^0,w,c
  8493  0022A6  0B80               	andlw	128
  8494  0022A8  1A50               	xorwf	___fldiv@sign^0,f,c
  8495  0022AA  5047               	movf	(___fldiv@a+3)^0,w,c
  8496  0022AC  2447               	addwf	(___fldiv@a+3)^0,w,c
  8497  0022AE  6E58               	movwf	___fldiv@aexp^0,c
  8498  0022B0  AE46               	btfss	(___fldiv@a+2)^0,7,c
  8499  0022B2  EF5D  F011         	goto	u2901
  8500  0022B6  EF5F  F011         	goto	u2900
  8501  0022BA                     u2901:
  8502  0022BA  EF60  F011         	goto	l2844
  8503  0022BE                     u2900:
  8504  0022BE  8058               	bsf	___fldiv@aexp^0,0,c
  8505  0022C0                     l2844:
  8506  0022C0  5058               	movf	___fldiv@aexp^0,w,c
  8507  0022C2  B4D8               	btfsc	status,2,c
  8508  0022C4  EF66  F011         	goto	u2911
  8509  0022C8  EF68  F011         	goto	u2910
  8510  0022CC                     u2911:
  8511  0022CC  EF7D  F011         	goto	l2854
  8512  0022D0                     u2910:
  8513  0022D0  2858               	incf	___fldiv@aexp^0,w,c
  8514  0022D2  A4D8               	btfss	status,2,c
  8515  0022D4  EF6E  F011         	goto	u2921
  8516  0022D8  EF70  F011         	goto	u2920
  8517  0022DC                     u2921:
  8518  0022DC  EF78  F011         	goto	l2850
  8519  0022E0                     u2920:
  8520  0022E0  0E00               	movlw	0
  8521  0022E2  6E44               	movwf	___fldiv@a^0,c
  8522  0022E4  0E00               	movlw	0
  8523  0022E6  6E45               	movwf	(___fldiv@a+1)^0,c
  8524  0022E8  0E00               	movlw	0
  8525  0022EA  6E46               	movwf	(___fldiv@a+2)^0,c
  8526  0022EC  0E00               	movlw	0
  8527  0022EE  6E47               	movwf	(___fldiv@a+3)^0,c
  8528  0022F0                     l2850:
  8529  0022F0  8E46               	bsf	(___fldiv@a+2)^0,7,c
  8530  0022F2  0E00               	movlw	0
  8531  0022F4  6E47               	movwf	(___fldiv@a+3)^0,c
  8532  0022F6  EF85  F011         	goto	l2856
  8533  0022FA                     l2854:
  8534  0022FA  0E00               	movlw	0
  8535  0022FC  6E44               	movwf	___fldiv@a^0,c
  8536  0022FE  0E00               	movlw	0
  8537  002300  6E45               	movwf	(___fldiv@a+1)^0,c
  8538  002302  0E00               	movlw	0
  8539  002304  6E46               	movwf	(___fldiv@a+2)^0,c
  8540  002306  0E00               	movlw	0
  8541  002308  6E47               	movwf	(___fldiv@a+3)^0,c
  8542  00230A                     l2856:
  8543  00230A  5044               	movf	___fldiv@a^0,w,c
  8544  00230C  1045               	iorwf	(___fldiv@a+1)^0,w,c
  8545  00230E  1046               	iorwf	(___fldiv@a+2)^0,w,c
  8546  002310  1047               	iorwf	(___fldiv@a+3)^0,w,c
  8547  002312  A4D8               	btfss	status,2,c
  8548  002314  EF8E  F011         	goto	u2931
  8549  002318  EF90  F011         	goto	u2930
  8550  00231C                     u2931:
  8551  00231C  EFA8  F011         	goto	l2868
  8552  002320                     u2930:
  8553  002320  0E00               	movlw	0
  8554  002322  6E40               	movwf	___fldiv@b^0,c
  8555  002324  0E00               	movlw	0
  8556  002326  6E41               	movwf	(___fldiv@b+1)^0,c
  8557  002328  0E00               	movlw	0
  8558  00232A  6E42               	movwf	(___fldiv@b+2)^0,c
  8559  00232C  0E00               	movlw	0
  8560  00232E  6E43               	movwf	(___fldiv@b+3)^0,c
  8561  002330  0E80               	movlw	128
  8562  002332  1242               	iorwf	(___fldiv@b+2)^0,f,c
  8563  002334  0E7F               	movlw	127
  8564  002336  1243               	iorwf	(___fldiv@b+3)^0,f,c
  8565  002338                     l2862:
  8566  002338  5050               	movf	___fldiv@sign^0,w,c
  8567  00233A  1243               	iorwf	(___fldiv@b+3)^0,f,c
  8568  00233C  C040  F040         	movff	___fldiv@b,?___fldiv
  8569  002340  C041  F041         	movff	___fldiv@b+1,?___fldiv+1
  8570  002344  C042  F042         	movff	___fldiv@b+2,?___fldiv+2
  8571  002348  C043  F043         	movff	___fldiv@b+3,?___fldiv+3
  8572  00234C  EFEB  F012         	goto	l700
  8573  002350                     l2868:
  8574  002350  5057               	movf	___fldiv@bexp^0,w,c
  8575  002352  A4D8               	btfss	status,2,c
  8576  002354  EFAE  F011         	goto	u2941
  8577  002358  EFB0  F011         	goto	u2940
  8578  00235C                     u2941:
  8579  00235C  EFBA  F011         	goto	l2876
  8580  002360                     u2940:
  8581  002360  0E00               	movlw	0
  8582  002362  6E40               	movwf	?___fldiv^0,c
  8583  002364  0E00               	movlw	0
  8584  002366  6E41               	movwf	(?___fldiv+1)^0,c
  8585  002368  0E00               	movlw	0
  8586  00236A  6E42               	movwf	(?___fldiv+2)^0,c
  8587  00236C  0E00               	movlw	0
  8588  00236E  6E43               	movwf	(?___fldiv+3)^0,c
  8589  002370  EFEB  F012         	goto	l700
  8590  002374                     l2876:
  8591  002374  5058               	movf	___fldiv@aexp^0,w,c
  8592  002376  C057  F048         	movff	___fldiv@bexp,??___fldiv
  8593  00237A  6A49               	clrf	(??___fldiv+1)^0,c
  8594  00237C  5E48               	subwf	??___fldiv^0,f,c
  8595  00237E  0E00               	movlw	0
  8596  002380  5A49               	subwfb	(??___fldiv+1)^0,f,c
  8597  002382  0E7F               	movlw	127
  8598  002384  2448               	addwf	??___fldiv^0,w,c
  8599  002386  6E51               	movwf	___fldiv@new_exp^0,c
  8600  002388  0E00               	movlw	0
  8601  00238A  2049               	addwfc	(??___fldiv+1)^0,w,c
  8602  00238C  6E52               	movwf	(___fldiv@new_exp+1)^0,c
  8603  00238E  C040  F04C         	movff	___fldiv@b,___fldiv@rem
  8604  002392  C041  F04D         	movff	___fldiv@b+1,___fldiv@rem+1
  8605  002396  C042  F04E         	movff	___fldiv@b+2,___fldiv@rem+2
  8606  00239A  C043  F04F         	movff	___fldiv@b+3,___fldiv@rem+3
  8607  00239E  0E00               	movlw	0
  8608  0023A0  6E40               	movwf	___fldiv@b^0,c
  8609  0023A2  0E00               	movlw	0
  8610  0023A4  6E41               	movwf	(___fldiv@b+1)^0,c
  8611  0023A6  0E00               	movlw	0
  8612  0023A8  6E42               	movwf	(___fldiv@b+2)^0,c
  8613  0023AA  0E00               	movlw	0
  8614  0023AC  6E43               	movwf	(___fldiv@b+3)^0,c
  8615  0023AE  0E00               	movlw	0
  8616  0023B0  6E53               	movwf	___fldiv@grs^0,c
  8617  0023B2  0E00               	movlw	0
  8618  0023B4  6E54               	movwf	(___fldiv@grs+1)^0,c
  8619  0023B6  0E00               	movlw	0
  8620  0023B8  6E55               	movwf	(___fldiv@grs+2)^0,c
  8621  0023BA  0E00               	movlw	0
  8622  0023BC  6E56               	movwf	(___fldiv@grs+3)^0,c
  8623  0023BE  0E00               	movlw	0
  8624  0023C0  6E58               	movwf	___fldiv@aexp^0,c
  8625  0023C2  EF1B  F012         	goto	l702
  8626  0023C6                     l2886:
  8627  0023C6  5058               	movf	___fldiv@aexp^0,w,c
  8628  0023C8  B4D8               	btfsc	status,2,c
  8629  0023CA  EFE9  F011         	goto	u2951
  8630  0023CE  EFEB  F011         	goto	u2950
  8631  0023D2                     u2951:
  8632  0023D2  EF02  F012         	goto	l2894
  8633  0023D6                     u2950:
  8634  0023D6  90D8               	bcf	status,0,c
  8635  0023D8  364C               	rlcf	___fldiv@rem^0,f,c
  8636  0023DA  364D               	rlcf	(___fldiv@rem+1)^0,f,c
  8637  0023DC  364E               	rlcf	(___fldiv@rem+2)^0,f,c
  8638  0023DE  364F               	rlcf	(___fldiv@rem+3)^0,f,c
  8639  0023E0  90D8               	bcf	status,0,c
  8640  0023E2  3640               	rlcf	___fldiv@b^0,f,c
  8641  0023E4  3641               	rlcf	(___fldiv@b+1)^0,f,c
  8642  0023E6  3642               	rlcf	(___fldiv@b+2)^0,f,c
  8643  0023E8  3643               	rlcf	(___fldiv@b+3)^0,f,c
  8644  0023EA  AE56               	btfss	(___fldiv@grs+3)^0,7,c
  8645  0023EC  EFFA  F011         	goto	u2961
  8646  0023F0  EFFC  F011         	goto	u2960
  8647  0023F4                     u2961:
  8648  0023F4  EFFD  F011         	goto	l705
  8649  0023F8                     u2960:
  8650  0023F8  8040               	bsf	___fldiv@b^0,0,c
  8651  0023FA                     l705:
  8652  0023FA  90D8               	bcf	status,0,c
  8653  0023FC  3653               	rlcf	___fldiv@grs^0,f,c
  8654  0023FE  3654               	rlcf	(___fldiv@grs+1)^0,f,c
  8655  002400  3655               	rlcf	(___fldiv@grs+2)^0,f,c
  8656  002402  3656               	rlcf	(___fldiv@grs+3)^0,f,c
  8657  002404                     l2894:
  8658  002404  5044               	movf	___fldiv@a^0,w,c
  8659  002406  5C4C               	subwf	___fldiv@rem^0,w,c
  8660  002408  5045               	movf	(___fldiv@a+1)^0,w,c
  8661  00240A  584D               	subwfb	(___fldiv@rem+1)^0,w,c
  8662  00240C  5046               	movf	(___fldiv@a+2)^0,w,c
  8663  00240E  584E               	subwfb	(___fldiv@rem+2)^0,w,c
  8664  002410  5047               	movf	(___fldiv@a+3)^0,w,c
  8665  002412  584F               	subwfb	(___fldiv@rem+3)^0,w,c
  8666  002414  A0D8               	btfss	status,0,c
  8667  002416  EF0F  F012         	goto	u2971
  8668  00241A  EF11  F012         	goto	u2970
  8669  00241E                     u2971:
  8670  00241E  EF1A  F012         	goto	l2900
  8671  002422                     u2970:
  8672  002422  8C56               	bsf	(___fldiv@grs+3)^0,6,c
  8673  002424  5044               	movf	___fldiv@a^0,w,c
  8674  002426  5E4C               	subwf	___fldiv@rem^0,f,c
  8675  002428  5045               	movf	(___fldiv@a+1)^0,w,c
  8676  00242A  5A4D               	subwfb	(___fldiv@rem+1)^0,f,c
  8677  00242C  5046               	movf	(___fldiv@a+2)^0,w,c
  8678  00242E  5A4E               	subwfb	(___fldiv@rem+2)^0,f,c
  8679  002430  5047               	movf	(___fldiv@a+3)^0,w,c
  8680  002432  5A4F               	subwfb	(___fldiv@rem+3)^0,f,c
  8681  002434                     l2900:
  8682  002434  2A58               	incf	___fldiv@aexp^0,f,c
  8683  002436                     l702:
  8684  002436  0E19               	movlw	25
  8685  002438  6458               	cpfsgt	___fldiv@aexp^0,c
  8686  00243A  EF21  F012         	goto	u2981
  8687  00243E  EF23  F012         	goto	u2980
  8688  002442                     u2981:
  8689  002442  EFE3  F011         	goto	l2886
  8690  002446                     u2980:
  8691  002446  504C               	movf	___fldiv@rem^0,w,c
  8692  002448  104D               	iorwf	(___fldiv@rem+1)^0,w,c
  8693  00244A  104E               	iorwf	(___fldiv@rem+2)^0,w,c
  8694  00244C  104F               	iorwf	(___fldiv@rem+3)^0,w,c
  8695  00244E  B4D8               	btfsc	status,2,c
  8696  002450  EF2C  F012         	goto	u2991
  8697  002454  EF2E  F012         	goto	u2990
  8698  002458                     u2991:
  8699  002458  EF46  F012         	goto	l2912
  8700  00245C                     u2990:
  8701  00245C  8053               	bsf	___fldiv@grs^0,0,c
  8702  00245E  EF46  F012         	goto	l2912
  8703  002462                     l2906:
  8704  002462  90D8               	bcf	status,0,c
  8705  002464  3640               	rlcf	___fldiv@b^0,f,c
  8706  002466  3641               	rlcf	(___fldiv@b+1)^0,f,c
  8707  002468  3642               	rlcf	(___fldiv@b+2)^0,f,c
  8708  00246A  3643               	rlcf	(___fldiv@b+3)^0,f,c
  8709  00246C  AE56               	btfss	(___fldiv@grs+3)^0,7,c
  8710  00246E  EF3B  F012         	goto	u3001
  8711  002472  EF3D  F012         	goto	u3000
  8712  002476                     u3001:
  8713  002476  EF3E  F012         	goto	l711
  8714  00247A                     u3000:
  8715  00247A  8040               	bsf	___fldiv@b^0,0,c
  8716  00247C                     l711:
  8717  00247C  90D8               	bcf	status,0,c
  8718  00247E  3653               	rlcf	___fldiv@grs^0,f,c
  8719  002480  3654               	rlcf	(___fldiv@grs+1)^0,f,c
  8720  002482  3655               	rlcf	(___fldiv@grs+2)^0,f,c
  8721  002484  3656               	rlcf	(___fldiv@grs+3)^0,f,c
  8722  002486  0651               	decf	___fldiv@new_exp^0,f,c
  8723  002488  A0D8               	btfss	status,0,c
  8724  00248A  0652               	decf	(___fldiv@new_exp+1)^0,f,c
  8725  00248C                     l2912:
  8726  00248C  AE42               	btfss	(___fldiv@b+2)^0,7,c
  8727  00248E  EF4B  F012         	goto	u3011
  8728  002492  EF4D  F012         	goto	u3010
  8729  002496                     u3011:
  8730  002496  EF31  F012         	goto	l2906
  8731  00249A                     u3010:
  8732  00249A  0E00               	movlw	0
  8733  00249C  6E58               	movwf	___fldiv@aexp^0,c
  8734  00249E  AE56               	btfss	(___fldiv@grs+3)^0,7,c
  8735  0024A0  EF54  F012         	goto	u3021
  8736  0024A4  EF56  F012         	goto	u3020
  8737  0024A8                     u3021:
  8738  0024A8  EF7A  F012         	goto	l713
  8739  0024AC                     u3020:
  8740  0024AC  0EFF               	movlw	255
  8741  0024AE  1453               	andwf	___fldiv@grs^0,w,c
  8742  0024B0  6E48               	movwf	??___fldiv^0,c
  8743  0024B2  0EFF               	movlw	255
  8744  0024B4  1454               	andwf	(___fldiv@grs+1)^0,w,c
  8745  0024B6  6E49               	movwf	(??___fldiv+1)^0,c
  8746  0024B8  0EFF               	movlw	255
  8747  0024BA  1455               	andwf	(___fldiv@grs+2)^0,w,c
  8748  0024BC  6E4A               	movwf	(??___fldiv+2)^0,c
  8749  0024BE  0E7F               	movlw	127
  8750  0024C0  1456               	andwf	(___fldiv@grs+3)^0,w,c
  8751  0024C2  6E4B               	movwf	(??___fldiv+3)^0,c
  8752  0024C4  5048               	movf	??___fldiv^0,w,c
  8753  0024C6  1049               	iorwf	(??___fldiv+1)^0,w,c
  8754  0024C8  104A               	iorwf	(??___fldiv+2)^0,w,c
  8755  0024CA  104B               	iorwf	(??___fldiv+3)^0,w,c
  8756  0024CC  B4D8               	btfsc	status,2,c
  8757  0024CE  EF6B  F012         	goto	u3031
  8758  0024D2  EF6D  F012         	goto	u3030
  8759  0024D6                     u3031:
  8760  0024D6  EF71  F012         	goto	l714
  8761  0024DA                     u3030:
  8762  0024DA                     l2920:
  8763  0024DA  0E01               	movlw	1
  8764  0024DC  6E58               	movwf	___fldiv@aexp^0,c
  8765  0024DE  EF7A  F012         	goto	l713
  8766  0024E2                     l714:
  8767  0024E2  A040               	btfss	___fldiv@b^0,0,c
  8768  0024E4  EF76  F012         	goto	u3041
  8769  0024E8  EF78  F012         	goto	u3040
  8770  0024EC                     u3041:
  8771  0024EC  EF7A  F012         	goto	l713
  8772  0024F0                     u3040:
  8773  0024F0  EF6D  F012         	goto	l2920
  8774  0024F4                     l713:
  8775  0024F4  5058               	movf	___fldiv@aexp^0,w,c
  8776  0024F6  B4D8               	btfsc	status,2,c
  8777  0024F8  EF80  F012         	goto	u3051
  8778  0024FC  EF82  F012         	goto	u3050
  8779  002500                     u3051:
  8780  002500  EFA6  F012         	goto	l2932
  8781  002504                     u3050:
  8782  002504  0E01               	movlw	1
  8783  002506  2640               	addwf	___fldiv@b^0,f,c
  8784  002508  0E00               	movlw	0
  8785  00250A  2241               	addwfc	(___fldiv@b+1)^0,f,c
  8786  00250C  2242               	addwfc	(___fldiv@b+2)^0,f,c
  8787  00250E  2243               	addwfc	(___fldiv@b+3)^0,f,c
  8788  002510  A043               	btfss	(___fldiv@b+3)^0,0,c
  8789  002512  EF8D  F012         	goto	u3061
  8790  002516  EF8F  F012         	goto	u3060
  8791  00251A                     u3061:
  8792  00251A  EFA6  F012         	goto	l2932
  8793  00251E                     u3060:
  8794  00251E  C040  F048         	movff	___fldiv@b,??___fldiv
  8795  002522  C041  F049         	movff	___fldiv@b+1,??___fldiv+1
  8796  002526  C042  F04A         	movff	___fldiv@b+2,??___fldiv+2
  8797  00252A  C043  F04B         	movff	___fldiv@b+3,??___fldiv+3
  8798  00252E  344B               	rlcf	(??___fldiv+3)^0,w,c
  8799  002530  324B               	rrcf	(??___fldiv+3)^0,f,c
  8800  002532  324A               	rrcf	(??___fldiv+2)^0,f,c
  8801  002534  3249               	rrcf	(??___fldiv+1)^0,f,c
  8802  002536  3248               	rrcf	??___fldiv^0,f,c
  8803  002538  C048  F040         	movff	??___fldiv,___fldiv@b
  8804  00253C  C049  F041         	movff	??___fldiv+1,___fldiv@b+1
  8805  002540  C04A  F042         	movff	??___fldiv+2,___fldiv@b+2
  8806  002544  C04B  F043         	movff	??___fldiv+3,___fldiv@b+3
  8807  002548  4A51               	infsnz	___fldiv@new_exp^0,f,c
  8808  00254A  2A52               	incf	(___fldiv@new_exp+1)^0,f,c
  8809  00254C                     l2932:
  8810  00254C  BE52               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8811  00254E  EFB1  F012         	goto	u3071
  8812  002552  5052               	movf	(___fldiv@new_exp+1)^0,w,c
  8813  002554  E108               	bnz	u3070
  8814  002556  2851               	incf	___fldiv@new_exp^0,w,c
  8815  002558  A0D8               	btfss	status,0,c
  8816  00255A  EFB1  F012         	goto	u3071
  8817  00255E  EFB3  F012         	goto	u3070
  8818  002562                     u3071:
  8819  002562  EFBE  F012         	goto	l2936
  8820  002566                     u3070:
  8821  002566  0E00               	movlw	0
  8822  002568  6E52               	movwf	(___fldiv@new_exp+1)^0,c
  8823  00256A  6851               	setf	___fldiv@new_exp^0,c
  8824  00256C  0E00               	movlw	0
  8825  00256E  6E40               	movwf	___fldiv@b^0,c
  8826  002570  0E00               	movlw	0
  8827  002572  6E41               	movwf	(___fldiv@b+1)^0,c
  8828  002574  0E00               	movlw	0
  8829  002576  6E42               	movwf	(___fldiv@b+2)^0,c
  8830  002578  0E00               	movlw	0
  8831  00257A  6E43               	movwf	(___fldiv@b+3)^0,c
  8832  00257C                     l2936:
  8833  00257C  BE52               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8834  00257E  EFCB  F012         	goto	u3080
  8835  002582  5052               	movf	(___fldiv@new_exp+1)^0,w,c
  8836  002584  E106               	bnz	u3081
  8837  002586  0451               	decf	___fldiv@new_exp^0,w,c
  8838  002588  B0D8               	btfsc	status,0,c
  8839  00258A  EFC9  F012         	goto	u3081
  8840  00258E  EFCB  F012         	goto	u3080
  8841  002592                     u3081:
  8842  002592  EFD9  F012         	goto	l2940
  8843  002596                     u3080:
  8844  002596  0E00               	movlw	0
  8845  002598  6E52               	movwf	(___fldiv@new_exp+1)^0,c
  8846  00259A  0E00               	movlw	0
  8847  00259C  6E51               	movwf	___fldiv@new_exp^0,c
  8848  00259E  0E00               	movlw	0
  8849  0025A0  6E40               	movwf	___fldiv@b^0,c
  8850  0025A2  0E00               	movlw	0
  8851  0025A4  6E41               	movwf	(___fldiv@b+1)^0,c
  8852  0025A6  0E00               	movlw	0
  8853  0025A8  6E42               	movwf	(___fldiv@b+2)^0,c
  8854  0025AA  0E00               	movlw	0
  8855  0025AC  6E43               	movwf	(___fldiv@b+3)^0,c
  8856  0025AE  0E00               	movlw	0
  8857  0025B0  6E50               	movwf	___fldiv@sign^0,c
  8858  0025B2                     l2940:
  8859  0025B2  C051  F057         	movff	___fldiv@new_exp,___fldiv@bexp
  8860  0025B6  A057               	btfss	___fldiv@bexp^0,0,c
  8861  0025B8  EFE0  F012         	goto	u3091
  8862  0025BC  EFE2  F012         	goto	u3090
  8863  0025C0                     u3091:
  8864  0025C0  EFE5  F012         	goto	l2946
  8865  0025C4                     u3090:
  8866  0025C4  8E42               	bsf	(___fldiv@b+2)^0,7,c
  8867  0025C6  EFE6  F012         	goto	l2948
  8868  0025CA                     l2946:
  8869  0025CA  9E42               	bcf	(___fldiv@b+2)^0,7,c
  8870  0025CC                     l2948:
  8871  0025CC  90D8               	bcf	status,0,c
  8872  0025CE  3057               	rrcf	___fldiv@bexp^0,w,c
  8873  0025D0  6E43               	movwf	(___fldiv@b+3)^0,c
  8874  0025D2  EF9C  F011         	goto	l2862
  8875  0025D6                     l700:
  8876  0025D6  0012               	return		;funcret
  8877  0025D8                     __end_of___fldiv:
  8878                           	callstack 0
  8879                           
  8880 ;; *************** function _ADC_Init *****************
  8881 ;; Defined at:
  8882 ;;		line 4 in file "ADC_LIB.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;		None
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;		None
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1    wreg      void 
  8889 ;; Registers used:
  8890 ;;		wreg, status,2
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8896 ;;      Params:         0       0       0       0       0       0       0       0       0
  8897 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8899 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8900 ;;Total ram usage:        0 bytes
  8901 ;; Hardware stack levels used: 1
  8902 ;; Hardware stack levels required when called: 1
  8903 ;; This function calls:
  8904 ;;		Nothing
  8905 ;; This function is called by:
  8906 ;;		_main
  8907 ;; This function uses a non-reentrant model
  8908 ;;
  8909                           
  8910                           	psect	text37
  8911  003B7E                     __ptext37:
  8912                           	callstack 0
  8913  003B7E                     _ADC_Init:
  8914                           	callstack 29
  8915  003B7E                     
  8916                           ;ADC_LIB.c: 5:     ADCON1bits.VCFG = 0b00;
  8917  003B7E  0ECF               	movlw	-49
  8918  003B80  16C1               	andwf	193,f,c	;volatile
  8919  003B82                     
  8920                           ;ADC_LIB.c: 6:     ADCON2bits.ADFM = 1;
  8921  003B82  8EC0               	bsf	192,7,c	;volatile
  8922                           
  8923                           ;ADC_LIB.c: 7:     ADCON2bits.ADCS = 6;
  8924  003B84  50C0               	movf	192,w,c	;volatile
  8925  003B86  0BF8               	andlw	-8
  8926  003B88  0906               	iorlw	6
  8927  003B8A  6EC0               	movwf	192,c	;volatile
  8928                           
  8929                           ;ADC_LIB.c: 8:     ADCON2bits.ACQT = 7;
  8930  003B8C  0E38               	movlw	56
  8931  003B8E  12C0               	iorwf	192,f,c	;volatile
  8932  003B90                     
  8933                           ;ADC_LIB.c: 9:     ADCON0bits.ADON = 1;
  8934  003B90  80C2               	bsf	194,0,c	;volatile
  8935  003B92  0012               	return		;funcret
  8936  003B94                     __end_of_ADC_Init:
  8937                           	callstack 0
  8938                           
  8939 ;; *************** function _appLedRxData *****************
  8940 ;; Defined at:
  8941 ;;		line 15 in file "main.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;		None
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		None
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8955 ;;      Params:         0       0       0       0       0       0       0       0       0
  8956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8958 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used: 1
  8961 ;; This function calls:
  8962 ;;		Nothing
  8963 ;; This function is called by:
  8964 ;;		Interrupt level 2
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           	psect	intcode
  8969  000008                     __pintcode:
  8970                           	callstack 0
  8971  000008                     _appLedRxData:
  8972                           	callstack 22
  8973                           
  8974                           ;incstack = 0
  8975  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8976  00000A  EDCA  F01D         	call	int_func,f	;refresh shadow registers
  8977                           
  8978                           	psect	intcode_body
  8979  003B94                     __pintcode_body:
  8980                           	callstack 22
  8981  003B94                     int_func:
  8982                           	callstack 22
  8983  003B94  0006               	pop		; remove dummy address from shadow register refresh
  8984  003B96  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8985  003B98  0011               	retfie		f
  8986  003B9A                     __end_of_appLedRxData:
  8987                           	callstack 0
  8988                           
  8989                           	psect	rparam
  8990  0000                     
  8991                           	psect	temp
  8992  00005F                     btemp:
  8993                           	callstack 0
  8994  00005F                     	ds	1
  8995  0000                     int$flags	set	btemp
  8996  0000                     wtemp8	set	btemp+1
  8997  0000                     ttemp5	set	btemp+1
  8998  0000                     ttemp6	set	btemp+4
  8999  0000                     ttemp7	set	btemp+8
  9000                           
  9001                           	psect	idloc
  9002                           
  9003                           ;Config register IDLOC0 @ 0x200000
  9004                           ;	unspecified, using default values
  9005  200000                     	org	2097152
  9006  200000  FF                 	db	255
  9007                           
  9008                           ;Config register IDLOC1 @ 0x200001
  9009                           ;	unspecified, using default values
  9010  200001                     	org	2097153
  9011  200001  FF                 	db	255
  9012                           
  9013                           ;Config register IDLOC2 @ 0x200002
  9014                           ;	unspecified, using default values
  9015  200002                     	org	2097154
  9016  200002  FF                 	db	255
  9017                           
  9018                           ;Config register IDLOC3 @ 0x200003
  9019                           ;	unspecified, using default values
  9020  200003                     	org	2097155
  9021  200003  FF                 	db	255
  9022                           
  9023                           ;Config register IDLOC4 @ 0x200004
  9024                           ;	unspecified, using default values
  9025  200004                     	org	2097156
  9026  200004  FF                 	db	255
  9027                           
  9028                           ;Config register IDLOC5 @ 0x200005
  9029                           ;	unspecified, using default values
  9030  200005                     	org	2097157
  9031  200005  FF                 	db	255
  9032                           
  9033                           ;Config register IDLOC6 @ 0x200006
  9034                           ;	unspecified, using default values
  9035  200006                     	org	2097158
  9036  200006  FF                 	db	255
  9037                           
  9038                           ;Config register IDLOC7 @ 0x200007
  9039                           ;	unspecified, using default values
  9040  200007                     	org	2097159
  9041  200007  FF                 	db	255
  9042                           
  9043                           	psect	config
  9044                           
  9045                           ;Config register CONFIG1L @ 0x300000
  9046                           ;	PLL Prescaler Selection bits
  9047                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9048                           ;	System Clock Postscaler Selection bits
  9049                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9050                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9051                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9052  300000                     	org	3145728
  9053  300000  00                 	db	0
  9054                           
  9055                           ;Config register CONFIG1H @ 0x300001
  9056                           ;	Oscillator Selection bits
  9057                           ;	FOSC = HS, HS oscillator (HS)
  9058                           ;	Fail-Safe Clock Monitor Enable bit
  9059                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9060                           ;	Internal/External Oscillator Switchover bit
  9061                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9062  300001                     	org	3145729
  9063  300001  0C                 	db	12
  9064                           
  9065                           ;Config register CONFIG2L @ 0x300002
  9066                           ;	Power-up Timer Enable bit
  9067                           ;	PWRT = ON, PWRT enabled
  9068                           ;	Brown-out Reset Enable bits
  9069                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9070                           ;	Brown-out Reset Voltage bits
  9071                           ;	BORV = 3, Minimum setting 2.05V
  9072                           ;	USB Voltage Regulator Enable bit
  9073                           ;	VREGEN = OFF, USB voltage regulator disabled
  9074  300002                     	org	3145730
  9075  300002  18                 	db	24
  9076                           
  9077                           ;Config register CONFIG2H @ 0x300003
  9078                           ;	Watchdog Timer Enable bit
  9079                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9080                           ;	Watchdog Timer Postscale Select bits
  9081                           ;	WDTPS = 32768, 1:32768
  9082  300003                     	org	3145731
  9083  300003  1E                 	db	30
  9084                           
  9085                           ; Padding undefined space
  9086  300004                     	org	3145732
  9087  300004  FF                 	db	255
  9088                           
  9089                           ;Config register CONFIG3H @ 0x300005
  9090                           ;	CCP2 MUX bit
  9091                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9092                           ;	PORTB A/D Enable bit
  9093                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9094                           ;	Low-Power Timer 1 Oscillator Enable bit
  9095                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9096                           ;	MCLR Pin Enable bit
  9097                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9098  300005                     	org	3145733
  9099  300005  81                 	db	129
  9100                           
  9101                           ;Config register CONFIG4L @ 0x300006
  9102                           ;	Stack Full/Underflow Reset Enable bit
  9103                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9104                           ;	Single-Supply ICSP Enable bit
  9105                           ;	LVP = OFF, Single-Supply ICSP disabled
  9106                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9107                           ;	ICPRT = OFF, ICPORT disabled
  9108                           ;	Extended Instruction Set Enable bit
  9109                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9110                           ;	Background Debugger Enable bit
  9111                           ;	DEBUG = 0x1, unprogrammed default
  9112  300006                     	org	3145734
  9113  300006  81                 	db	129
  9114                           
  9115                           ; Padding undefined space
  9116  300007                     	org	3145735
  9117  300007  FF                 	db	255
  9118                           
  9119                           ;Config register CONFIG5L @ 0x300008
  9120                           ;	Code Protection bit
  9121                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9122                           ;	Code Protection bit
  9123                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9124                           ;	Code Protection bit
  9125                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9126                           ;	Code Protection bit
  9127                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9128  300008                     	org	3145736
  9129  300008  0F                 	db	15
  9130                           
  9131                           ;Config register CONFIG5H @ 0x300009
  9132                           ;	Boot Block Code Protection bit
  9133                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9134                           ;	Data EEPROM Code Protection bit
  9135                           ;	CPD = OFF, Data EEPROM is not code-protected
  9136  300009                     	org	3145737
  9137  300009  C0                 	db	192
  9138                           
  9139                           ;Config register CONFIG6L @ 0x30000A
  9140                           ;	Write Protection bit
  9141                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9142                           ;	Write Protection bit
  9143                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9144                           ;	Write Protection bit
  9145                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9146                           ;	Write Protection bit
  9147                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9148  30000A                     	org	3145738
  9149  30000A  0F                 	db	15
  9150                           
  9151                           ;Config register CONFIG6H @ 0x30000B
  9152                           ;	Configuration Register Write Protection bit
  9153                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9154                           ;	Boot Block Write Protection bit
  9155                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9156                           ;	Data EEPROM Write Protection bit
  9157                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9158  30000B                     	org	3145739
  9159  30000B  E0                 	db	224
  9160                           
  9161                           ;Config register CONFIG7L @ 0x30000C
  9162                           ;	Table Read Protection bit
  9163                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9164                           ;	Table Read Protection bit
  9165                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9166                           ;	Table Read Protection bit
  9167                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9168                           ;	Table Read Protection bit
  9169                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9170  30000C                     	org	3145740
  9171  30000C  0F                 	db	15
  9172                           
  9173                           ;Config register CONFIG7H @ 0x30000D
  9174                           ;	Boot Block Table Read Protection bit
  9175                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9176  30000D                     	org	3145741
  9177  30000D  40                 	db	64
  9178                           tosu	equ	0xFFF
  9179                           tosh	equ	0xFFE
  9180                           tosl	equ	0xFFD
  9181                           stkptr	equ	0xFFC
  9182                           pclatu	equ	0xFFB
  9183                           pclath	equ	0xFFA
  9184                           pcl	equ	0xFF9
  9185                           tblptru	equ	0xFF8
  9186                           tblptrh	equ	0xFF7
  9187                           tblptrl	equ	0xFF6
  9188                           tablat	equ	0xFF5
  9189                           prodh	equ	0xFF4
  9190                           prodl	equ	0xFF3
  9191                           indf0	equ	0xFEF
  9192                           postinc0	equ	0xFEE
  9193                           postdec0	equ	0xFED
  9194                           preinc0	equ	0xFEC
  9195                           plusw0	equ	0xFEB
  9196                           fsr0h	equ	0xFEA
  9197                           fsr0l	equ	0xFE9
  9198                           wreg	equ	0xFE8
  9199                           indf1	equ	0xFE7
  9200                           postinc1	equ	0xFE6
  9201                           postdec1	equ	0xFE5
  9202                           preinc1	equ	0xFE4
  9203                           plusw1	equ	0xFE3
  9204                           fsr1h	equ	0xFE2
  9205                           fsr1l	equ	0xFE1
  9206                           bsr	equ	0xFE0
  9207                           indf2	equ	0xFDF
  9208                           postinc2	equ	0xFDE
  9209                           postdec2	equ	0xFDD
  9210                           preinc2	equ	0xFDC
  9211                           plusw2	equ	0xFDB
  9212                           fsr2h	equ	0xFDA
  9213                           fsr2l	equ	0xFD9
  9214                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        50
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    141     159
    BANK1           256      0     142
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S818$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S818$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 50
		 -> strUART(BANK1[50]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flge->___flmul
    _atoi->_isspace
    _UART_Write_Text->_UART_Write_Chr
    _UART_Init->___lldiv
    _ADC_MAP->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flsub

Critical Paths under _appLedRxData in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _appLedRxData in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _appLedRxData in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _appLedRxData in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _appLedRxData in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _appLedRxData in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _appLedRxData in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _appLedRxData in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _appLedRxData in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   43190
                                            131 BANK0     10    10      0
                           _ADC_Init
                            _ADC_MAP
                           _ADC_Read
                          _UART_Init
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    15     16   29484
                                            102 BANK0     29    13     16
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29125
                                             92 COMRAM     2     2      0
                                             96 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   28745
                                             78 BANK0     18    12      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   23208
                                             16 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             88 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1232
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      2     0      2     143
                                              1 COMRAM     2     0      2
                     _UART_Write_Chr
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Chr                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16     8      8     504
                                             13 COMRAM    16     8      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_MAP                                             26     8     18   12942
                                              0 BANK0     26     8     18
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3497
                                             55 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             39 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             63 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _appLedRxData                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_MAP
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
         ___xxtofl (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _ADC_Read
   _UART_Init
     ___lldiv
   _UART_Write_Text
     _UART_Write_Chr
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _appLedRxData (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8E       7       55.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8D      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllll       3E      0       0      23        0.0%
BITBIGSFRhh         3B      0       0      20        0.0%
BITBIGSFRlh         10      0       0      21        0.0%
BITBIGSFRlllh        C      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18B      24        0.0%
DATA                 0      0     18B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 05 10:51:46 2023

           ___fldiv@aexp 0058             ___fldiv@bexp 0057             ___fldiv@sign 0050  
                     l71 31DA                       l73 31E4                       l81 3B7C  
                     l74 31EC                       l75 3220                       l78 3B6A  
                     l87 3B40             ___awdiv@sign 0006      ___wmul@multiplicand 0003  
                    l112 3A00                      l106 3B92                      l115 2E30  
                    l109 39DC                      l118 3B66                      l152 3748  
                    l145 3738                      l415 2F36                      l362 35FA  
                    l700 25D6                      l349 354A                      l702 2436  
                    l711 247C                      l383 2FF4                      l392 3A70  
                    l713 24F4                      l705 23FA                      l377 36A4  
                    l714 24E2                      l732 1ED8                      l388 303A  
                    l741 2146                      l742 2134                      l646 1B42  
                    l902 1024                      l663 1C5C                      l655 1E12  
                    l647 1B30                      l736 223C                      l672 1D2C  
                    l648 1AF6                      l840 344A                      l673 1D1A  
                    l842 3486                      l739 20CE                      l780 2AD0  
                    l749 21FE                      l773 2A38                      l837 3408  
                    l688 397C                      l776 2B94                      l952 1952  
                    l874 0BE4                      l858 1434                      l787 2B2C  
                    l963 37A2                      l964 37AA                      l796 3858  
                    l957 1898                      l974 3138                      l997 2CE2  
                    _RX9 007D5E                      _TX9 007D66          __end_of_ADC_MAP 2E32  
                    _pad 33C2                      _hum 00ED             ___awmod@sign 0006  
                    wreg 000FE8             ___flmul@aexp 0020             ___flmul@bexp 0021  
           ___flmul@sign 001B             ___flmul@temp 0026             ___flmul@prod 0022  
           ___fltol@exp1 000A                     l1000 2CEA                     l1006 27EC  
                   l1030 3A38                     l1016 3AA8                     l1024 38AA  
                   l1009 2730                     l1045 33C0                     l1053 39C0  
                   l1062 3806                     l3000 1F22                     l1056 3B9A  
                   l1072 32F6                     l3010 1F74                     l3002 1F38  
                   l1082 392E                     l3020 1FBA                     l3012 1F82  
                   l3004 1F44                     l3100 34A6                     l1068 3ADE  
                   l1085 3936                     l3030 2028                     l3022 1FD4  
                   l3014 1F8E                     l3006 1F5C                     l3110 34DA  
                   l3102 34B4                     l3040 20BE                     l3032 2052  
                   l3024 1FE4                     l3016 1F9E                     l3008 1F68  
                   l3120 3514                     l3112 34E2                     l3104 34BC  
                   l3200 2FD4                     l4000 28A4                     l3050 20FE  
                   l3042 20CC                     l3034 2088                     l3026 2000  
                   l3018 1FAA                     l3130 353A                     l3122 351C  
                   l3114 34EA                     l3106 34C0                     l3202 2FE2  
                   l3210 3A3A                     l4010 29C0                     l4002 2902  
                   l3060 2170                     l3052 212C                     l3044 20DE  
                   l3036 2096                     l3028 200C                     l3132 3542  
                   l3124 351E                     l3116 34F8                     l3108 34C8  
                   l3140 355E                     l3204 3032                     l3212 3A50  
                   l3220 2E48                     l4004 2910                     l3070 21E6  
                   l3062 219A                     l3046 20EC                     l3038 20B4  
                   l3126 3524                     l3118 34FE                     l3150 3592  
                   l3142 3566                     l3206 3038                     l3214 3A60  
                   l3230 2E98                     l3302 3130                     l3310 38F2  
                   l4006 296E                     l3072 2202                     l3080 2228  
                   l3056 2156                     l3064 219E                     l3048 20F0  
                   l2600 19A0                     l3128 352A                     l3160 35CE  
                   l3152 359A                     l3144 356A                     l3136 354C  
                   l3240 2EC2                     l3232 2E9C                     l3224 2E5C  
                   l3320 25D8                     l3400 090C                     l4008 29B4  
                   l3082 222C                     l3074 2212                     l3066 21B8  
                   l3058 2162                     l2610 19D2                     l2602 19A2  
                   l3162 35D4                     l3154 35A2                     l3146 3578  
                   l3138 3550                     l3250 2EEA                     l3242 2ECC  
                   l3234 2EAA                     l3226 2E86                     l3218 2E32  
                   l3322 25F8                     l3306 37AC                     l3314 38F2  
                   l3402 093A                     l3076 2220                     l3068 21CC  
                   l2700 1BA0                     l2620 19FA                     l2612 19D4  
                   l2604 19AA                     l4052 2C32                     l3092 3488  
                   l3156 35B0                     l3164 35DA                     l3148 3580  
                   l3180 3678                     l3172 35FC                     l3252 2EF6  
                   l3244 2ED6                     l3228 2E88                     l3340 27A4  
                   l3332 26E4                     l3324 2650                     l3308 37BC  
                   l3316 3920                     l3500 0D0A                     l3420 09F4  
                   l3404 0956                     l3412 09A0                     l3078 2222  
                   l2710 1BCA                     l2702 1BAC                     l2630 1A34  
                   l2622 1A0A                     l2614 19DA                     l2606 19BA  
                   l3086 3938                     l4054 320A                     l3094 348C  
                   l3166 35EA                     l3158 35C6                     l3182 369C  
                   l3174 362A                     l3190 2F66                     l3254 2F06  
                   l3342 27CC                     l3334 2720                     l3326 2664  
                   l3270 3400                     l3262 33C2                     l3510 0E1E  
                   l3502 0D1A                     l3422 0A10                     l3430 0A2C  
                   l3406 096E                     l2720 1C3C                     l2704 1BB0  
                   l2712 1BD0                     l2640 1A60                     l2632 1A46  
                   l2624 1A1A                     l2616 19E8                     l2608 19C0  
                   l3088 3948                     l3360 38A4                     l3352 385A  
                   l3096 349A                     l3168 35F2                     l3184 36A2  
                   l3176 363A                     l3192 2F76                     l3256 2F16  
                   l3344 27DC                     l3328 2672                     l3336 2754  
                   l2800 3AB6                     l3280 346E                     l3272 3414  
                   l3264 33D2                     l3600 1266                     l3520 0EBE  
                   l3504 0D2E                     l3512 0E24                     l3440 0AB6  
                   l3432 0A46                     l3408 0978                     l2730 1C96  
                   l2714 1BF6                     l2722 1C4C                     l2706 1BBE  
                   l2650 1A74                     l2642 1A64                     l2634 1A54  
                   l2626 1A1C                     l2618 19EA                     l3354 385E  
                   l3098 34A2                     l3178 3668                     l3194 2FA4  
                   l3258 2F26                     l3290 30C2                     l3338 2790  
                   l2802 3ABA                     l3274 3428                     l3266 33E6  
                   l3610 12AA                     l3602 1274                     l3530 0F9A  
                   l3522 0EF0                     l3514 0E42                     l3506 0D92  
                   l3450 0B8E                     l3442 0B10                     l3418 09C6  
                   l3370 0854                     l2900 2434                     l2820 224A  
                   l2740 1CC6                     l2732 1CA0                     l2724 1C72  
                   l2716 1C2A                     l2708 1BC0                     l2660 1A88  
                   l2652 1A78                     l2644 1A68                     l2636 1A58  
                   l2628 1A24                     l2812 3B42                     l3348 3A72  
                   l3356 3872                     l3196 2FB4                     l3188 2F38  
                   l3292 30CE                     l3284 303C                     l2580 3326  
                   l2804 3AD2                     l3276 342C                     l3268 33F4  
                   l3620 12E0                     l3612 12B2                     l3604 1284  
                   l3540 0FFC                     l3532 0FA0                     l3524 0F00  
                   l3516 0E76                     l3508 0DEA                     l3460 0BD8  
                   l3452 0B92                     l3444 0B44                     l3436 0A7C  
                   l3380 08A4                     l3372 085C                     l3364 082C  
                   l2910 247A                     l2902 2446                     l2830 228A  
                   l2822 2258                     l2750 1CEE                     l2742 1CCA  
                   l2734 1CAE                     l2726 1C82                     l2718 1C2C  
                   l2670 1AC2                     l2662 1A8C                     l2654 1A7C  
                   l2646 1A6C                     l2638 1A5C                     l2590 1960  
                   l2814 3B5E                     l3358 38A0                     l3198 2FC2  
                   l3286 305C                     l2582 3344                     l2574 32F8  
                   l3278 345A                     l3630 133C                     l3622 12E8  
                   l3614 12C2                     l3606 1288                     l3550 10B4  
                   l3542 1010                     l3534 0FD4                     l3526 0F10  
                   l3518 0EA8                     l3470 0C14                     l3454 0BA4  
                   l3462 0BF0                     l3446 0B4C                     l3438 0AB0  
                   l3390 08DC                     l3382 08B2                     l3374 0880  
                   l3366 0836                     l3710 3266                     l3702 3222  
                   l2920 24DA                     l2904 245C                     l2912 248C  
                   l2840 22B0                     l2832 228C                     l2824 225A  
                   l2760 1D48                     l2752 1CFC                     l2744 1CDA  
                   l2736 1CB0                     l2680 1B14                     l2672 1ADE  
                   l2664 1A90                     l2656 1A80                     l2648 1A70  
                   l2592 196E                     l3288 309A                     l3296 30DA  
                   l2584 337A                     l2576 330A                     l2808 3A02  
                   l3640 137C                     l3632 1344                     l3624 12F4  
                   l3616 12CA                     l3608 1298                     l3560 1100  
                   l3552 10C6                     l3544 101C                     l3536 0FE8  
                   l3528 0F44                     l3480 0C7A                     l3472 0C30  
                   l3456 0BB6                     l3448 0B7E                     l3392 08E0  
                   l3384 08C4                     l3376 088A                     l3368 0846  
                   l3712 327E                     l3704 324C                     l2930 2548  
                   l2914 249A                     l2906 2462                     l2850 22F0  
                   l2842 22BE                     l2826 226A                     l2834 2294  
                   l2818 223E                     l2770 1DB2                     l2762 1D56  
                   l2754 1D12                     l2738 1CBE                     l2746 1CDC  
                   l2690 1B60                     l2682 1B22                     l2674 1AEE  
                   l2658 1A84                     l2666 1A94                     l2594 1970  
                   l3298 30EC                     l2578 331C                     l3650 13B8  
                   l3642 138E                     l3626 12FA                     l3634 134A  
                   l3618 12D8                     l3570 1134                     l3562 110E  
                   l3554 10D8                     l3546 1040                     l3538 0FEC  
                   l3490 0CC2                     l3482 0C8C                     l3474 0C66  
                   l3458 0BBE                     l3386 08D0                     l3394 08E6  
                   l3378 0892                     l3714 329A                     l3802 18AC  
                   l3730 147E                     l3722 1436                     l2940 25B2  
                   l2924 2504                     l2932 254C                     l2916 249E  
                   l2908 246C                     l2860 2330                     l2852 22F2  
                   l2844 22C0                     l2836 22A4                     l2828 227A  
                   l2780 1DEC                     l2772 1DD2                     l2764 1D90  
                   l2748 1CEA                     l2684 1B24                     l2676 1B04  
                   l2668 1A98                     l2596 1980                     l2588 1954  
                   l3660 13FE                     l3644 139A                     l3636 135C  
                   l3628 1320                     l3580 1166                     l3572 1144  
                   l3564 111E                     l3556 10E6                     l3548 10A4  
                   l3492 0CD0                     l3484 0C9E                     l3476 0C6E  
                   l3468 0C02                     l3388 08D8                     l3716 32AC  
                   l3708 3258                     l3820 1940                     l3804 18D0  
                   l3812 1900                     l3740 1514                     l3732 14A2  
                   l3724 145A                     l3900 3752                     l3910 3B90  
                   l2942 25B6                     l2934 2566                     l2926 2510  
                   l2918 24AC                     l2870 2360                     l2862 2338  
                   l2846 22D0                     l2854 22FA                     l2838 22AA  
                   l2782 1DF2                     l2774 1DD6                     l2758 1D3C  
                   l2766 1D92                     l2694 1B74                     l2686 1B2E  
                   l2678 1B10                     l2598 1990                     l3830 36A6  
                   l3670 2B96                     l2790 397E                     l3662 140E  
                   l3654 13BE                     l3646 13A2                     l3638 1376  
                   l3590 120E                     l3582 1178                     l3574 1148  
                   l3566 1122                     l3558 10EE                     l3494 0CE8  
                   l3486 0CAC                     l3478 0C72                     l3718 32D4  
                   l3814 190E                     l3806 18DE                     l3750 158E  
                   l3734 14D8                     l3726 1468                     l3902 3760  
                   ?_pad 0011                     l2944 25C4                     l2936 257C  
                   l2928 251E                     l2880 239E                     l2872 2360  
                   l2864 233C                     l2856 230A                     l2848 22E0  
                   l2960 1E2E                     l2784 1E00                     l2776 1DE4  
                   l2768 1DA2                     l2696 1B84                     l2688 1B50  
                   l3840 36EE                     l3832 36B6                     l3920 31A4  
                   l3912 313A                     l3680 2C04                     l3672 2BAA  
                   l2792 398A                     l3664 1414                     l3656 13EA  
                   l3648 13B2                     l3592 1216                     l3584 117C  
                   l3576 114E                     l3568 1128                     l3496 0CFA  
                   l3488 0CB0                     l3808 18F2                     l3752 159C  
                   l3744 1522                     l3736 14E6                     l3728 147A  
                   l3904 3786                     l3906 3B7E                     l2946 25CA  
                   l2938 2596                     l2890 23EA                     l2882 23AE  
                   l2858 2320                     l2970 1E66                     l2962 1E30  
                   l2786 1E02                     l2778 1DEA                     l2698 1B92  
                   l3850 3732                     l3842 36F8                     l3834 36CC  
                   l3930 31DE                     l3922 31BA                     l3914 3198  
                   l3826 3B6A                     l3682 2C0C                     l2794 399C  
                   l3658 13F6                     l3578 1154                     l3586 1182  
                   l3594 121A                     l3498 0D02                     l3770 16CC  
                   l3762 1628                     l3754 15C0                     l3746 1562  
                   l3738 14F4                     l3818 191C                     l3908 3B82  
                   l2948 25CC                     l2892 23F8                     l2884 23BE  
                   l2876 2374                     l2868 2350                     l2980 1E92  
                   l2972 1E76                     l2964 1E40                     l2956 1E14  
                   l3860 2A5E                     l3852 29E4                     l3844 3716  
                   l3836 36D4                     l3924 31D0                     l3916 319C  
                   l3828 3B78                     l3692 2C7E                     l3684 2C14  
                   l3676 2BAE                     l2796 39A0                     l3596 1238  
                   l3588 11DA                     l3780 1744                     l3772 16DC  
                   l3756 15FA                     l3748 1586                     l3764 1668  
                   l2894 2404                     l2886 23C6                     l2878 238E  
                   l2990 1EE8                     l2982 1EA2                     l2974 1E7C  
                   l2966 1E50                     l2958 1E20                     l3870 2AB8  
                   l3854 29F4                     l3846 3726                     l3838 36E0  
                   l3934 31F0                     l3926 31D2                     l3918 31A0  
                   l3694 2CB4                     l3686 2C48                     l3678 2BCA  
                   l2798 3AAA                     l3598 1254                     l3782 1774  
                   l3774 170E                     l3766 168A                     l3758 161A  
                   l2896 2422                     l2888 23D6                     l2992 1EF8  
                   l2984 1EB2                     l2976 1E82                     l2968 1E60  
                   l3880 2B1C                     l3872 2ABA                     l3864 2A72  
                   l3856 2A02                     l3952 2CEC                     l3944 39C4  
                   l3848 3728                     l3928 31D4                     l3696 2CC6  
                   l3792 17F6                     l3776 1720                     l3768 169A  
                   l3960 3808                     l2898 2424                     l2986 1EC2  
                   l2978 1E90                     l3890 2B74                     l3882 2B3A  
                   l3874 2AC6                     l3866 2A7A                     l3858 2A48  
                   l3954 2D68                     l3946 39DA                     l3938 31F6  
                   l3794 1834                     l3778 1736                     l3786 17A0  
                   l3962 381A                     l2996 1F0C                     l2988 1EC8  
                   l3892 2B82                     l3884 2B3C                     l3876 2B02  
                   l3868 2A86                     l3956 2DFC                     l3948 39EA  
                   l3972 3B12                     l3796 1868                     l3788 17CE  
                   l3964 3822                     l3980 27EE                     l2998 1F18  
                   l3894 2B84                     l3886 2B40                     l3878 2B0E  
                   l3974 3B16                     l3966 382A                     l3990 2810  
                   l3982 27F2                     l3888 2B64                     l3976 3B24  
                   l3968 3846                     l3992 2814                     l3984 27F6  
                   l3978 3B28                     l3898 374A                     l3994 282A  
                   l3986 2808                     l3996 2838                     l3988 280C  
                   l3998 2896                     STR_1 0801                     STR_2 0817  
                   STR_3 081F                     STR_6 081B                     STR_7 0823  
                   _BRGH 007D62                     u3000 247A                     u3001 2476  
                   u3010 249A                     u3011 2496                     u3020 24AC  
                   u3100 1E2E                     u3021 24A8                     u3101 1E2A  
                   u3030 24DA                     u3110 1E40                     u3031 24D6  
                   u3111 1E3C                     u3040 24F0                     u3200 20EC  
                   u3120 1E50                     u2400 330A                     u4000 0C14  
                   u3041 24EC                     u3201 20E8                     u3121 1E4C  
                   u2401 3306                     u4001 0C10                     u3050 2504  
                   u3210 20FE                     u3130 1E90                     u2410 331C  
                   u4010 0C30                     u3051 2500                     u3211 20FA  
                   u3131 1E8C                     u2411 3318                     u4011 0C2C  
                   u3060 251E                     u3220 212C                     u3140 1EA2  
                   u2500 1A0A                     u3300 34B4                     u2420 3344  
                   u4100 0EA8                     u4020 0C66                     u3061 251A  
                   u3221 2128                     u3141 1E9E                     u2501 1A06  
                   u3301 34B0                     u2421 3340                     u4101 0EA4  
                   u4021 0C62                     u3070 2566                     u3230 2142  
                   u3150 1EB2                     u2510 1A46                     u3310 34DA  
                   u2430 337A                     u4110 0EF0                     u4030 0C8C  
                   u3071 2562                     u3231 213E                     u3151 1EAE  
                   u2511 1A42                     u3311 34D6                     u2431 3376  
                   u4111 0EEC                     u4031 0C88                     u3080 2596  
                   u3240 2156                     u3160 1EE8                     u2600 1B60  
                   u2520 1A54                     u2440 196E                     u3320 34F8  
                   u3400 35EA                     u4200 1100                     u4120 0F00  
                   u4040 0C9E                     u3081 2592                     u3241 2152  
                   u3161 1EE4                     u2601 1B5C                     u2521 1A50  
                   u2441 196A                     u3321 34F4                     u3401 35E6  
                   u4201 10FC                     u4121 0EFC                     u4041 0C9A  
                   u3090 25C4                     u3250 2170                     u3170 1EF8  
                   u2610 1B92                     u2530 1AC2                     u2450 1980  
                   u3330 3514                     u3410 362A                     u4210 110E  
                   u4130 0F9A                     u4050 0CAC                     u3091 25C0  
                   u3251 216C                     u3171 1EF4                     u2611 1B8E  
                   u2531 1ABE                     u2451 197C                     u3331 3510  
                   u3411 3626                     u4211 110A                     u4131 0F96  
                   u4051 0CA8                     u3260 21B8                     u3180 2072  
                   u2700 1CDA                     u2620 1BA0                     u2540 1ADA  
                   u2460 1990                     u3340 353A                     u3420 3668  
                   u3500 2E48                     u4300 1376                     u4220 1166  
                   u4140 0FE8                     u4060 0CC2                     u3261 21B4  
                   u2701 1CD6                     u2621 1B9C                     u2541 1AD4  
                   u2461 198C                     u3341 3536                     u3421 3664  
                   u3501 2E44                     u4301 1372                     u4221 1162  
                   u4141 0FE4                     u4061 0CBE                     u3270 21E6  
                   u3190 20CC                     u2710 1CEA                     u2630 1BBE  
                   u2550 1ADC                     u2470 19D2                     u3350 355E  
                   u3430 369C                     u3510 2E7C                     u4310 138E  
                   u4230 1238                     u4150 1010                     u4070 0CD0  
                   u3271 21E2                     u3191 20C8                     u2711 1CE6  
                   u2631 1BBA                     u2471 19CE                     u3351 355A  
                   u3431 3698                     u4311 138A                     u4231 1234  
                   u4151 100C                     u4071 0CCC                     u3280 2220  
                   u2800 1DD2                     u2720 1CFC                     u2640 1BF6  
                   u2560 1B04                     u2480 19E8                     u3360 3578  
                   u3440 2F66                     u3520 2EAA                     u3600 345A  
                   u4320 13EA                     u4240 1254                     u4160 10B4  
                   u4080 0CFA                     u4400 32AC                     u3281 221C  
                   u3185 2068                     u2801 1DCE                     u2721 1CF8  
                   u2641 1BF2                     u2561 1B00                     u2481 19E4  
                   u3361 3574                     u3441 2F62                     u3521 2EA6  
                   u3601 3456                     u4321 13E6                     u4241 1250  
                   u4161 10B0                     u4081 0CF6                     u4401 32A8  
                   u2810 1DE4                     u2730 1D12                     u2650 1C3C  
                   u2570 1B22                     u2490 19FA                     u4330 2BCA  
                   u3290 349A                     u3370 3592                     u3450 2FA4  
                   u3530 2EBE                     u3610 307C                     u4250 1266  
                   u4170 10C6                     u4090 0E42                     u4410 32D4  
                   u2811 1DE0                     u2731 1D0E                     u2651 1C38  
                   u2571 1B1E                     u2491 19F6                     u4331 2BC6  
                   u3291 3496                     u3371 358E                     u3451 2FA0  
                   u3531 2EBA                     u3515 2E72                     u4251 1262  
                   u4171 10C2                     u4091 0E3E                     u4411 32D0  
                   u2900 22BE                     u2820 1E00                     u2740 1D28  
                   u2660 1C72                     u2580 1B42                     u4340 2C00  
                   u3380 35B0                     u3460 2FC2                     u3540 2EE6  
                   u3620 309A                     u3700 3920                     u4260 1274  
                   u4180 10D8                     u4500 16DC                     u4420 145A  
                   u2901 22BA                     u2821 1DFC                     u2741 1D24  
                   u2661 1C6E                     u2581 1B3E                     u4341 2BFC  
                   u3381 35AC                     u3461 2FBE                     u3541 2EE2  
                   u3621 3096                     u3701 391C                     u4261 1270  
                   u4181 10D4                     u4501 16D8                     u4421 1456  
                   u2910 22D0                     u2750 1D3C                     u2670 1C82  
                   u2590 1B50                     u4350 2CB4                     u3390 35C6  
                   u3470 2FE2                     u3550 2F06                     u3630 30C2  
                   u3710 2622                     u2830 39C0                     u4270 12AA  
                   u4190 10E6                     u4510 1720                     u4430 14A2  
                   u2911 22CC                     u2751 1D38                     u2671 1C7E  
                   u2591 1B4C                     u4351 2CB0                     u3391 35C2  
                   u3471 2FDE                     u3551 2F02                     u3631 30BE  
                   u3615 3072                     u2831 39BC                     u4271 12A6  
                   u4191 10E2                     u4511 171C                     u4431 149E  
                   u2920 22E0                     u2760 1D56                     u2680 1CAE  
                   u4600 2A02                     u4360 2CC6                     u3480 3032  
                   u3560 2F16                     u3640 30EC                     u3800 27CC  
                   u3720 2650                     u2840 3AD2                     u4280 12D8  
                   u4520 17CE                     u4440 14E6                     u2921 22DC  
                   u2761 1D52                     u2681 1CAA                     u4601 29FE  
                   u4361 2CC2                     u3481 302E                     u3561 2F12  
                   u3641 30E8                     u3801 27C8                     u3721 264C  
                   u2841 3ACE                     u4281 12D4                     u4521 17CA  
                   u4441 14E2                     u2930 2320                     u2770 1D90  
                   u2690 1CBE                     u4610 2A5E                     u3810 3AA2  
                   u3490 3A50                     u3730 2672                     u3570 33D2  
                   u2850 3A32                     u4290 135C                     u4370 324C  
                   u4530 1834                     u4450 1562                     u2931 231C  
                   u2771 1D8C                     u2691 1CBA                     u4611 2A5A  
                   u3811 3A9C                     u3491 3A4C                     u3731 266E  
                   u3715 2618                     u3571 33CE                     u2851 3A2C  
                   u4291 1358                     u4371 3248                     u4531 1830  
                   u4451 155E                     u2940 2360                     u2780 1DA2  
                   u4620 2AB4                     u3820 3AA4                     u3660 3126  
                   u3580 33F4                     u2860 3A34                     u3900 093A  
                   u4380 327E                     u4540 18D0                     u4460 1586  
                   u2941 235C                     u2781 1D9E                     u4621 2AB0  
                   u3661 3120                     u3581 33F0                     u3901 0936  
                   u4381 327A                     u4541 18CC                     u4461 1582  
                   u2950 23D6                     u2870 2258                     u2790 1DB2  
                   u4630 2AFE                     u4710 31B8                     u4550 3B78  
                   u3830 3872                     u3670 3128                     u3750 26E0  
                   u3590 344A                     u3910 09C6                     u4390 329A  
                   u4470 15C0                     u2951 23D2                     u2871 2254  
                   u2791 1DAE                     u4631 2AFA                     u4711 31B2  
                   u4551 3B74                     u3831 386E                     u3655 30FE  
                   u3751 26DC                     u3591 3446                     u3911 09C2  
                   u4391 3296                     u4471 15BC                     u2960 23F8  
                   u2880 226A                     u4640 2B1C                     u4560 36CC  
                   u3840 38A0                     u3760 2704                     u3680 37F4  
                   u3920 09F4                     u4480 1668                     u2961 23F4  
                   u2881 2266                     u4641 2B18                     u4561 36C8  
                   u4705 315C                     u3841 389C                     u3745 2686  
                   u3921 09F0                     u4481 1664                     u2970 2422  
                   u2890 227A                     u4650 2B2C                     u4570 36EE  
                   u4730 31CE                     u3770 2720                     u3746 2690  
                   u3690 3806                     u3930 0A78                     u3850 0854  
                   u4490 169A                     u2971 241E                     u2891 2276  
                   u4651 2B28                     u4571 36EA                     u4731 31C8  
                   u3771 271C                     u3747 26A0                     u3691 3802  
                   u3931 0A74                     u3851 0850                     u4491 1696  
                   u2980 2446                     u4660 2B3A                     u4580 3716  
                   u3780 2774                     u3940 0B0C                     u3860 08A4  
                   u2981 2442                     u4661 2B36                     u4581 3712  
                   u4725 31BA                     u3765 26FA                     u3941 0B08  
                   u3861 08A0                     u2990 245C                     u4670 2B74  
                   u4590 29F4                     u4750 39EA                     u3790 2790  
                   u3950 0B7E                     u3870 08B2                     i2l31 3B96  
                   u2991 2458                     u4671 2B70                     u4591 29F0  
                   u4751 39E6                     u3791 278C                     u3687 37EA  
                   u3951 0B7A                     u3871 08AE                     u4680 2B82  
                   u4760 3B40                     u3960 0BA4                     u3880 08C4  
                   u4681 2B7E                     u4745 31D0                     u4761 3B3C  
                   u3785 276A                     u3961 0BA0                     u3881 08C0  
                   u3970 0BB6                     u3890 090C                     u4690 37A2  
                   u3971 0BB2                     u3891 0908                     u4691 379E  
                   u4771 281E                     u3980 0BD8                     u3981 0BD4  
                   u3990 0BFE                     u3991 0BFA                     u4787 29CC  
                   _SPEN 007D5F                     _TX9D 007D60                     _TXEN 007D65  
                   _SYNC 007D64             _ADC_MAP$1315 0072                     _dbuf 010C  
                   _atoi 2B96                     _main 27EE                     _prec 00F9  
                   _temp 00F1                     _nout 00F5                     pad@i 0018  
                   pad@p 0015                     fsr0h 000FEA                     fsr1h 000FE2  
                   indf0 000FEF                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9                     btemp 005F         __end_of_ADC_Init 3B94  
       __end_of_ADC_Read 3A02            ___fpclassifyf 303C                     prodh 000FF4  
                   prodl 000FF3                     start 000E          ___fldiv@new_exp 0051  
   __end_of_appLedRxData 3B9A             ___param_bank 000000  __end_of_UART_Write_Text 3B42  
                  ??_pad 0017            ___fltol@sign1 0009                    ?_atoi 0008  
        __end_of___fladd 1E14                    ?_main 0001          __end_of___fldiv 25D8  
        __end_of___awdiv 354C          __end_of___flneg 3A72                    STR_10 0827  
                  STR_12 0827          __end_of___awmod 35FC          __end_of___flmul 223E  
        __end_of___flsub 397E          __end_of___fltol 2F38          __end_of___lldiv 374A  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _RCREG 000FAE  
                  _RCSTA 000FAB             vfpfcnvrt@fmt 00B0                    _SPBRG 000FAF  
                  _TXREG 000FAD                    _TXSTA 000FAC                    _flags 00FB  
                  _fputc 32F8                    _fputs 397E          __end_of_isdigit 3AAA  
                  atoi@n 0010                    pad@fp 0011                    atoi@s 0008  
                  _width 00F7                    _putch 3B9A          __end_of_isspace 38AC  
        __end_of_isupper 3A3A                    tablat 000FF5                    plusw0 000FEB  
                  plusw2 000FDB                    ttemp5 0060                    ttemp6 0063  
                  ttemp7 0067                    status 000FD8                    wtemp8 0060  
        __end_of_sprintf 385A           ?___fpclassifyf 0001          __end_of_tolower 3938  
        __end_of_strncmp 32F8          __initialization 38AC             __end_of_atoi 2CEC  
           __end_of_main 29E2                ??_ADC_MAP 0059                   ??_atoi 000A  
                 ??_main 00E3            __activetblptr 000002                ADC_MAP@xf 0066  
              ADC_MAP@yf 006E                ADC_MAP@xi 0062                ADC_MAP@yi 006A  
                 _ADCON1 000FC1                   ?_fputc 0001                   ?_fputs 000A  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0001  
                 ?_putch 0001         __end_of___xxtofl 2B96             vfprintf@cfmt 005D  
      __end_of_UART_Init 3222                   ___flge 2F38                   ___fleq 35FC  
              ??___fladd 0030                   ___wmul 3B42                ??___fldiv 0048  
              ??___awdiv 0005                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0017         ?_UART_Write_Text 0002                ??___flsub 0040  
              ??___fltol 0005                ??___lldiv 0009                   _efgtoa 082C  
                 _conver 00FD          ADC_Read@channel 0005                   _floorf 25D8  
                 clear_0 38D2                   clear_1 38DE         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   isa$std 000001          ___awmod@counter 0005  
                 pad@buf 0013                   _strcpy 37AC                   _strlen 3AAA  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A                ??_isdigit 0003          ___fpclassifyf@e 0009  
              ?_ADC_Init 0001          ___fpclassifyf@u 000B                ?_ADC_Read 0001  
        ___fpclassifyf@x 0001             __mediumconst 0000                ??_isspace 0003  
                 tblptrh 000FF7                ??_isupper 0003                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 37AC  
              ??_sprintf 005F                ??_tolower 0009                ??_strncmp 0007  
             ___flge@ff1 0028               ___flge@ff2 002C          ??___fpclassifyf 0005  
           ___xxtofl@arg 000B             ___xxtofl@exp 000A             ___xxtofl@val 0001  
             ___fleq@ff1 0001               ___fleq@ff2 0005               __accesstop 0060  
__end_of__initialization 38E4               ___flneg@f1 0001            ___rparam_used 000001  
             ___fltol@f1 0001           __pcstackCOMRAM 0001             __pidataBANK1 3AE0  
          __end_of_fputc 33C2            __end_of_fputs 39C2            __end_of_putch 3B9C  
             ??_ADC_Init 0001               ??_ADC_Read 0003             _appLedRxData 0008  
                ??_fputc 0005                  ??_fputs 000E                  ??_putch 0001  
             __pbssBANK0 00ED               __pbssBANK1 0100               _efgtoa$960 007E  
             _efgtoa$952 007C               _efgtoa$961 0080                  ?___flge 0028  
                ?___fleq 0001                  ?___wmul 0001                  ?_efgtoa 0070  
                ?_floorf 0059                  _ADC_MAP 2CEC                  ?_strcpy 0001  
                ?_strlen 0001                ?___xxtofl 0001                  __Hparam 0000  
                __Lparam 0000                  ___fladd 1954                  ___fldiv 223E  
                ___awdiv 3488                  ___flneg 3A3A                  ___awmod 354C  
                ___flmul 1E14                  ___flsub 3938                  ___fltol 2E32  
                ___lldiv 36A6                ?_vfprintf 00C0             __psmallconst 0800  
                __pcinit 38AC                  __ramtop 0800                  __ptext0 27EE  
                __ptext1 3808                  __ptext2 374A                  __ptext3 1436  
                __ptext4 3222                  __ptext5 082C                  __ptext6 38F2  
                __ptext7 3A02                  __ptext8 37AC                  __ptext9 33C2  
                _isdigit 3A72               ??___xxtofl 0005         ___awmod@dividend 0001  
                _isspace 385A           main@uartConfig 00E5                  _isupper 3A02  
                efgtoa@c 0076                  efgtoa@d 008E                  efgtoa@e 00A6  
                efgtoa@f 0072                  efgtoa@g 00A2                  efgtoa@h 0098  
                efgtoa@i 00A0                  efgtoa@l 009C                  efgtoa@m 0088  
                efgtoa@n 00A8                  efgtoa@p 0092                  efgtoa@t 0082  
                efgtoa@u 00AA                  efgtoa@w 0094                  _strUART 015C  
                atoi@neg 000E                  _sprintf 3808                  _tolower 38F2  
                _strncmp 3222           __pintcode_body 3B94     end_of_initialization 38E4  
                floorf@e 006A                  floorf@m 0066                  floorf@u 006C  
                floorf@x 0059                  fputc@fp 0003            __Lmediumconst 0000  
                int_func 3B94                  fputs@fp 000C          ___lldiv@divisor 0005  
        ___lldiv@counter 000D        __end_of_vfpfcnvrt 1954               efgtoa@mode 0097  
             efgtoa@sign 0090                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
         _UART_Write_Chr 3B68               ??_vfprintf 005D                  strcpy@d 0009  
                strlen@a 0003                  strcpy@s 0007                  strlen@s 0001  
              _UART_Init 313A              ___fladd@grs 0037            ___xxtofl@sign 0009  
            ___fldiv@grs 0053              ___fldiv@rem 004C              ___flmul@grs 001C  
              _TXSTAbits 000FAC     UART_Write_Chr@letter 0001   __end_of_UART_Write_Chr 3B7E  
         __end_of___flge 303C           __end_of___fleq 36A6              vfpfcnvrt@ap 00B2  
            vfpfcnvrt@ct 00BC              vfpfcnvrt@fp 00AE           __end_of___wmul 3B68  
             ?_UART_Init 000E           __end_of_efgtoa 1436           __end_of_floorf 27EE  
             floorf@F526 0100            ADC_MAP@conver 0060           __end_of_strcpy 3808  
         __end_of_strlen 3AE0      start_initialization 38AC              __end_of_pad 3488  
               ADC_MAP@m 0076       UART_Init@spbrg_val 001A    __end_of___fpclassifyf 313A  
            vfprintf@fmt 00C2          ?_UART_Write_Chr 0001                 ??___flge 0030  
               ??___fleq 0009                 ??___wmul 0005                 ??_efgtoa 0077  
            __pdataBANK1 015C                 ??_floorf 0060                 ?_ADC_MAP 0060  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 002C  
              ___fladd@b 0028                ___fldiv@a 0044                ___fldiv@b 0040  
              ___flmul@a 0013                ___flmul@b 000F                ___flsub@a 003C  
              ___flsub@b 0038            __pcstackBANK0 0060                __pintcode 0008  
               ?___fladd 0028                 ?___fldiv 0040                 ?___awdiv 0001  
               ?___flneg 0001                 ?___awmod 0001                 ?___flmul 000F  
               ?___flsub 0038                 ?___fltol 0001                 ?___lldiv 0001  
            ??_UART_Init 0016          UART_Init@config 000E              __smallconst 0800  
               ?_isdigit 0001                 _ADC_Init 3B7E                 _ADC_Read 39C2  
               ?_isspace 0001                 ?_isupper 0001                 ?_sprintf 00C6  
               ?_tolower 0007                 ?_strncmp 0001        ??_UART_Write_Text 0004  
         ___wmul@product 0005                 _PIR1bits 000F9E                _vfpfcnvrt 1436  
             _ADCON0bits 000FC2               _ADCON1bits 000FC1               _ADCON2bits 000FC0  
      ___wmul@multiplier 0001             _isspace$1039 0007               vfpfcnvrt@c 00BF  
             vfpfcnvrt@f 00B8                copy_data0 38C0                 __Hrparam 0000  
             vfprintf@ap 00C4                 __Lrparam 0000               vfprintf@fp 00C0  
             ?_vfpfcnvrt 00AE       ___fpclassifyf@F465 0104               sprintf@fmt 00C8  
               ___xxtofl 29E2            ?_appLedRxData 0001                 __ptext10 3AAA  
               __ptext11 397E                 __ptext20 354C                 __ptext12 32F8  
               __ptext21 3488                 __ptext13 3B9A                 __ptext30 39C2  
               __ptext22 2B96                 __ptext14 25D8                 __ptext31 2CEC  
               __ptext23 385A                 __ptext15 303C                 __ptext32 29E2  
               __ptext24 3A72                 __ptext16 2E32                 __ptext33 3938  
               __ptext25 3B42                 __ptext17 3A3A                 __ptext34 1954  
               __ptext26 3B12                 __ptext18 2F38                 __ptext35 1E14  
               __ptext27 3B68                 __ptext19 35FC                 __ptext36 223E  
               __ptext28 313A                 __ptext37 3B7E                 __ptext29 36A6  
             strcpy@dest 0001      UART_Write_Text@text 0002         ??_UART_Write_Chr 0001  
               efgtoa@fp 0070                 efgtoa@ne 0086                 efgtoa@pp 0084  
               efgtoa@ou 008A                 isa$xinst 000000                 int$flags 005F  
               _pressure 0108                 _vfprintf 374A           ??_appLedRxData 0001  
               isdigit@c 0001                 intlevel2 0000                sprintf@ap 00D6  
               isspace@c 0001         ___lldiv@dividend 0001                strcpy@src 0003  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
            efgtoa@nmode 0096              ??_vfpfcnvrt 00B4          _UART_Write_Text 3B12  
               sprintf@f 00D8                 tolower@c 0007                 sprintf@s 00C6  
       ___lldiv@quotient 0009                 strncmp@l 0008                 strncmp@n 0005  
               strncmp@r 000A            ___fladd@signs 0034             ___fladd@aexp 0035  
           ___fladd@bexp 0036  
