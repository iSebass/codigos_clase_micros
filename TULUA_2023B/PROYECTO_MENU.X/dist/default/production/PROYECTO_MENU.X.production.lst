

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Oct 12 21:16:00 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	cinit,global,class=CODE,merge=1,delta=2
    21                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.40
    53                           ; Generated 17/11/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1939 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008F                     	;# 
   122  0090                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0110                     	;# 
   142  0111                     	;# 
   143  0112                     	;# 
   144  0113                     	;# 
   145  0114                     	;# 
   146  0115                     	;# 
   147  0116                     	;# 
   148  0117                     	;# 
   149  0118                     	;# 
   150  0119                     	;# 
   151  011A                     	;# 
   152  011B                     	;# 
   153  011D                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  018F                     	;# 
   157  0190                     	;# 
   158  0191                     	;# 
   159  0191                     	;# 
   160  0192                     	;# 
   161  0193                     	;# 
   162  0193                     	;# 
   163  0193                     	;# 
   164  0194                     	;# 
   165  0195                     	;# 
   166  0196                     	;# 
   167  0199                     	;# 
   168  019A                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019B                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019E                     	;# 
   177  019F                     	;# 
   178  020D                     	;# 
   179  0210                     	;# 
   180  0211                     	;# 
   181  0212                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0291                     	;# 
   189  0291                     	;# 
   190  0292                     	;# 
   191  0293                     	;# 
   192  0294                     	;# 
   193  0295                     	;# 
   194  0295                     	;# 
   195  0296                     	;# 
   196  0298                     	;# 
   197  0298                     	;# 
   198  0299                     	;# 
   199  029A                     	;# 
   200  029B                     	;# 
   201  029C                     	;# 
   202  029C                     	;# 
   203  029D                     	;# 
   204  029E                     	;# 
   205  029F                     	;# 
   206  0311                     	;# 
   207  0311                     	;# 
   208  0312                     	;# 
   209  0313                     	;# 
   210  0314                     	;# 
   211  0315                     	;# 
   212  0315                     	;# 
   213  0316                     	;# 
   214  0318                     	;# 
   215  0318                     	;# 
   216  0319                     	;# 
   217  031A                     	;# 
   218  031C                     	;# 
   219  031C                     	;# 
   220  031D                     	;# 
   221  031E                     	;# 
   222  0394                     	;# 
   223  0395                     	;# 
   224  0396                     	;# 
   225  0415                     	;# 
   226  0416                     	;# 
   227  0417                     	;# 
   228  041C                     	;# 
   229  041D                     	;# 
   230  041E                     	;# 
   231  0791                     	;# 
   232  0792                     	;# 
   233  0793                     	;# 
   234  0794                     	;# 
   235  0795                     	;# 
   236  0798                     	;# 
   237  0799                     	;# 
   238  079A                     	;# 
   239  07A0                     	;# 
   240  07A1                     	;# 
   241  07A2                     	;# 
   242  07A3                     	;# 
   243  07A4                     	;# 
   244  07A5                     	;# 
   245  07A6                     	;# 
   246  07A7                     	;# 
   247  07A8                     	;# 
   248  07A9                     	;# 
   249  07AA                     	;# 
   250  07AB                     	;# 
   251  0FE4                     	;# 
   252  0FE5                     	;# 
   253  0FE6                     	;# 
   254  0FE7                     	;# 
   255  0FE8                     	;# 
   256  0FE9                     	;# 
   257  0FEA                     	;# 
   258  0FEB                     	;# 
   259  0FED                     	;# 
   260  0FEE                     	;# 
   261  0FEF                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  0008                     	;# 
   271  0009                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000D                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0015                     	;# 
   283  0016                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001C                     	;# 
   291  001E                     	;# 
   292  001F                     	;# 
   293  008C                     	;# 
   294  008D                     	;# 
   295  008E                     	;# 
   296  008F                     	;# 
   297  0090                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009B                     	;# 
   309  009C                     	;# 
   310  009D                     	;# 
   311  009E                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  0110                     	;# 
   317  0111                     	;# 
   318  0112                     	;# 
   319  0113                     	;# 
   320  0114                     	;# 
   321  0115                     	;# 
   322  0116                     	;# 
   323  0117                     	;# 
   324  0118                     	;# 
   325  0119                     	;# 
   326  011A                     	;# 
   327  011B                     	;# 
   328  011D                     	;# 
   329  018C                     	;# 
   330  018D                     	;# 
   331  018F                     	;# 
   332  0190                     	;# 
   333  0191                     	;# 
   334  0191                     	;# 
   335  0192                     	;# 
   336  0193                     	;# 
   337  0193                     	;# 
   338  0193                     	;# 
   339  0194                     	;# 
   340  0195                     	;# 
   341  0196                     	;# 
   342  0199                     	;# 
   343  019A                     	;# 
   344  019B                     	;# 
   345  019B                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019C                     	;# 
   349  019C                     	;# 
   350  019D                     	;# 
   351  019E                     	;# 
   352  019F                     	;# 
   353  020D                     	;# 
   354  0210                     	;# 
   355  0211                     	;# 
   356  0212                     	;# 
   357  0213                     	;# 
   358  0214                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0216                     	;# 
   362  0217                     	;# 
   363  0291                     	;# 
   364  0291                     	;# 
   365  0292                     	;# 
   366  0293                     	;# 
   367  0294                     	;# 
   368  0295                     	;# 
   369  0295                     	;# 
   370  0296                     	;# 
   371  0298                     	;# 
   372  0298                     	;# 
   373  0299                     	;# 
   374  029A                     	;# 
   375  029B                     	;# 
   376  029C                     	;# 
   377  029C                     	;# 
   378  029D                     	;# 
   379  029E                     	;# 
   380  029F                     	;# 
   381  0311                     	;# 
   382  0311                     	;# 
   383  0312                     	;# 
   384  0313                     	;# 
   385  0314                     	;# 
   386  0315                     	;# 
   387  0315                     	;# 
   388  0316                     	;# 
   389  0318                     	;# 
   390  0318                     	;# 
   391  0319                     	;# 
   392  031A                     	;# 
   393  031C                     	;# 
   394  031C                     	;# 
   395  031D                     	;# 
   396  031E                     	;# 
   397  0394                     	;# 
   398  0395                     	;# 
   399  0396                     	;# 
   400  0415                     	;# 
   401  0416                     	;# 
   402  0417                     	;# 
   403  041C                     	;# 
   404  041D                     	;# 
   405  041E                     	;# 
   406  0791                     	;# 
   407  0792                     	;# 
   408  0793                     	;# 
   409  0794                     	;# 
   410  0795                     	;# 
   411  0798                     	;# 
   412  0799                     	;# 
   413  079A                     	;# 
   414  07A0                     	;# 
   415  07A1                     	;# 
   416  07A2                     	;# 
   417  07A3                     	;# 
   418  07A4                     	;# 
   419  07A5                     	;# 
   420  07A6                     	;# 
   421  07A7                     	;# 
   422  07A8                     	;# 
   423  07A9                     	;# 
   424  07AA                     	;# 
   425  07AB                     	;# 
   426  0FE4                     	;# 
   427  0FE5                     	;# 
   428  0FE6                     	;# 
   429  0FE7                     	;# 
   430  0FE8                     	;# 
   431  0FE9                     	;# 
   432  0FEA                     	;# 
   433  0FEB                     	;# 
   434  0FED                     	;# 
   435  0FEE                     	;# 
   436  0FEF                     	;# 
   437  0000                     	;# 
   438  0001                     	;# 
   439  0002                     	;# 
   440  0003                     	;# 
   441  0004                     	;# 
   442  0005                     	;# 
   443  0006                     	;# 
   444  0007                     	;# 
   445  0008                     	;# 
   446  0009                     	;# 
   447  000A                     	;# 
   448  000B                     	;# 
   449  000C                     	;# 
   450  000D                     	;# 
   451  000E                     	;# 
   452  000F                     	;# 
   453  0010                     	;# 
   454  0011                     	;# 
   455  0012                     	;# 
   456  0013                     	;# 
   457  0015                     	;# 
   458  0016                     	;# 
   459  0016                     	;# 
   460  0017                     	;# 
   461  0018                     	;# 
   462  0019                     	;# 
   463  001A                     	;# 
   464  001B                     	;# 
   465  001C                     	;# 
   466  001E                     	;# 
   467  001F                     	;# 
   468  008C                     	;# 
   469  008D                     	;# 
   470  008E                     	;# 
   471  008F                     	;# 
   472  0090                     	;# 
   473  0091                     	;# 
   474  0092                     	;# 
   475  0093                     	;# 
   476  0095                     	;# 
   477  0096                     	;# 
   478  0097                     	;# 
   479  0098                     	;# 
   480  0099                     	;# 
   481  009A                     	;# 
   482  009B                     	;# 
   483  009B                     	;# 
   484  009C                     	;# 
   485  009D                     	;# 
   486  009E                     	;# 
   487  010C                     	;# 
   488  010D                     	;# 
   489  010E                     	;# 
   490  010F                     	;# 
   491  0110                     	;# 
   492  0111                     	;# 
   493  0112                     	;# 
   494  0113                     	;# 
   495  0114                     	;# 
   496  0115                     	;# 
   497  0116                     	;# 
   498  0117                     	;# 
   499  0118                     	;# 
   500  0119                     	;# 
   501  011A                     	;# 
   502  011B                     	;# 
   503  011D                     	;# 
   504  018C                     	;# 
   505  018D                     	;# 
   506  018F                     	;# 
   507  0190                     	;# 
   508  0191                     	;# 
   509  0191                     	;# 
   510  0192                     	;# 
   511  0193                     	;# 
   512  0193                     	;# 
   513  0193                     	;# 
   514  0194                     	;# 
   515  0195                     	;# 
   516  0196                     	;# 
   517  0199                     	;# 
   518  019A                     	;# 
   519  019B                     	;# 
   520  019B                     	;# 
   521  019B                     	;# 
   522  019B                     	;# 
   523  019C                     	;# 
   524  019C                     	;# 
   525  019D                     	;# 
   526  019E                     	;# 
   527  019F                     	;# 
   528  020D                     	;# 
   529  0210                     	;# 
   530  0211                     	;# 
   531  0212                     	;# 
   532  0213                     	;# 
   533  0214                     	;# 
   534  0215                     	;# 
   535  0215                     	;# 
   536  0216                     	;# 
   537  0217                     	;# 
   538  0291                     	;# 
   539  0291                     	;# 
   540  0292                     	;# 
   541  0293                     	;# 
   542  0294                     	;# 
   543  0295                     	;# 
   544  0295                     	;# 
   545  0296                     	;# 
   546  0298                     	;# 
   547  0298                     	;# 
   548  0299                     	;# 
   549  029A                     	;# 
   550  029B                     	;# 
   551  029C                     	;# 
   552  029C                     	;# 
   553  029D                     	;# 
   554  029E                     	;# 
   555  029F                     	;# 
   556  0311                     	;# 
   557  0311                     	;# 
   558  0312                     	;# 
   559  0313                     	;# 
   560  0314                     	;# 
   561  0315                     	;# 
   562  0315                     	;# 
   563  0316                     	;# 
   564  0318                     	;# 
   565  0318                     	;# 
   566  0319                     	;# 
   567  031A                     	;# 
   568  031C                     	;# 
   569  031C                     	;# 
   570  031D                     	;# 
   571  031E                     	;# 
   572  0394                     	;# 
   573  0395                     	;# 
   574  0396                     	;# 
   575  0415                     	;# 
   576  0416                     	;# 
   577  0417                     	;# 
   578  041C                     	;# 
   579  041D                     	;# 
   580  041E                     	;# 
   581  0791                     	;# 
   582  0792                     	;# 
   583  0793                     	;# 
   584  0794                     	;# 
   585  0795                     	;# 
   586  0798                     	;# 
   587  0799                     	;# 
   588  079A                     	;# 
   589  07A0                     	;# 
   590  07A1                     	;# 
   591  07A2                     	;# 
   592  07A3                     	;# 
   593  07A4                     	;# 
   594  07A5                     	;# 
   595  07A6                     	;# 
   596  07A7                     	;# 
   597  07A8                     	;# 
   598  07A9                     	;# 
   599  07AA                     	;# 
   600  07AB                     	;# 
   601  0FE4                     	;# 
   602  0FE5                     	;# 
   603  0FE6                     	;# 
   604  0FE7                     	;# 
   605  0FE8                     	;# 
   606  0FE9                     	;# 
   607  0FEA                     	;# 
   608  0FEB                     	;# 
   609  0FED                     	;# 
   610  0FEE                     	;# 
   611  0FEF                     	;# 
   612  0000                     	;# 
   613  0001                     	;# 
   614  0002                     	;# 
   615  0003                     	;# 
   616  0004                     	;# 
   617  0005                     	;# 
   618  0006                     	;# 
   619  0007                     	;# 
   620  0008                     	;# 
   621  0009                     	;# 
   622  000A                     	;# 
   623  000B                     	;# 
   624  000C                     	;# 
   625  000D                     	;# 
   626  000E                     	;# 
   627  000F                     	;# 
   628  0010                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0013                     	;# 
   632  0015                     	;# 
   633  0016                     	;# 
   634  0016                     	;# 
   635  0017                     	;# 
   636  0018                     	;# 
   637  0019                     	;# 
   638  001A                     	;# 
   639  001B                     	;# 
   640  001C                     	;# 
   641  001E                     	;# 
   642  001F                     	;# 
   643  008C                     	;# 
   644  008D                     	;# 
   645  008E                     	;# 
   646  008F                     	;# 
   647  0090                     	;# 
   648  0091                     	;# 
   649  0092                     	;# 
   650  0093                     	;# 
   651  0095                     	;# 
   652  0096                     	;# 
   653  0097                     	;# 
   654  0098                     	;# 
   655  0099                     	;# 
   656  009A                     	;# 
   657  009B                     	;# 
   658  009B                     	;# 
   659  009C                     	;# 
   660  009D                     	;# 
   661  009E                     	;# 
   662  010C                     	;# 
   663  010D                     	;# 
   664  010E                     	;# 
   665  010F                     	;# 
   666  0110                     	;# 
   667  0111                     	;# 
   668  0112                     	;# 
   669  0113                     	;# 
   670  0114                     	;# 
   671  0115                     	;# 
   672  0116                     	;# 
   673  0117                     	;# 
   674  0118                     	;# 
   675  0119                     	;# 
   676  011A                     	;# 
   677  011B                     	;# 
   678  011D                     	;# 
   679  018C                     	;# 
   680  018D                     	;# 
   681  018F                     	;# 
   682  0190                     	;# 
   683  0191                     	;# 
   684  0191                     	;# 
   685  0192                     	;# 
   686  0193                     	;# 
   687  0193                     	;# 
   688  0193                     	;# 
   689  0194                     	;# 
   690  0195                     	;# 
   691  0196                     	;# 
   692  0199                     	;# 
   693  019A                     	;# 
   694  019B                     	;# 
   695  019B                     	;# 
   696  019B                     	;# 
   697  019B                     	;# 
   698  019C                     	;# 
   699  019C                     	;# 
   700  019D                     	;# 
   701  019E                     	;# 
   702  019F                     	;# 
   703  020D                     	;# 
   704  0210                     	;# 
   705  0211                     	;# 
   706  0212                     	;# 
   707  0213                     	;# 
   708  0214                     	;# 
   709  0215                     	;# 
   710  0215                     	;# 
   711  0216                     	;# 
   712  0217                     	;# 
   713  0291                     	;# 
   714  0291                     	;# 
   715  0292                     	;# 
   716  0293                     	;# 
   717  0294                     	;# 
   718  0295                     	;# 
   719  0295                     	;# 
   720  0296                     	;# 
   721  0298                     	;# 
   722  0298                     	;# 
   723  0299                     	;# 
   724  029A                     	;# 
   725  029B                     	;# 
   726  029C                     	;# 
   727  029C                     	;# 
   728  029D                     	;# 
   729  029E                     	;# 
   730  029F                     	;# 
   731  0311                     	;# 
   732  0311                     	;# 
   733  0312                     	;# 
   734  0313                     	;# 
   735  0314                     	;# 
   736  0315                     	;# 
   737  0315                     	;# 
   738  0316                     	;# 
   739  0318                     	;# 
   740  0318                     	;# 
   741  0319                     	;# 
   742  031A                     	;# 
   743  031C                     	;# 
   744  031C                     	;# 
   745  031D                     	;# 
   746  031E                     	;# 
   747  0394                     	;# 
   748  0395                     	;# 
   749  0396                     	;# 
   750  0415                     	;# 
   751  0416                     	;# 
   752  0417                     	;# 
   753  041C                     	;# 
   754  041D                     	;# 
   755  041E                     	;# 
   756  0791                     	;# 
   757  0792                     	;# 
   758  0793                     	;# 
   759  0794                     	;# 
   760  0795                     	;# 
   761  0798                     	;# 
   762  0799                     	;# 
   763  079A                     	;# 
   764  07A0                     	;# 
   765  07A1                     	;# 
   766  07A2                     	;# 
   767  07A3                     	;# 
   768  07A4                     	;# 
   769  07A5                     	;# 
   770  07A6                     	;# 
   771  07A7                     	;# 
   772  07A8                     	;# 
   773  07A9                     	;# 
   774  07AA                     	;# 
   775  07AB                     	;# 
   776  0FE4                     	;# 
   777  0FE5                     	;# 
   778  0FE6                     	;# 
   779  0FE7                     	;# 
   780  0FE8                     	;# 
   781  0FE9                     	;# 
   782  0FEA                     	;# 
   783  0FEB                     	;# 
   784  0FED                     	;# 
   785  0FEE                     	;# 
   786  0FEF                     	;# 
   787  0000                     	;# 
   788  0001                     	;# 
   789  0002                     	;# 
   790  0003                     	;# 
   791  0004                     	;# 
   792  0005                     	;# 
   793  0006                     	;# 
   794  0007                     	;# 
   795  0008                     	;# 
   796  0009                     	;# 
   797  000A                     	;# 
   798  000B                     	;# 
   799  000C                     	;# 
   800  000D                     	;# 
   801  000E                     	;# 
   802  000F                     	;# 
   803  0010                     	;# 
   804  0011                     	;# 
   805  0012                     	;# 
   806  0013                     	;# 
   807  0015                     	;# 
   808  0016                     	;# 
   809  0016                     	;# 
   810  0017                     	;# 
   811  0018                     	;# 
   812  0019                     	;# 
   813  001A                     	;# 
   814  001B                     	;# 
   815  001C                     	;# 
   816  001E                     	;# 
   817  001F                     	;# 
   818  008C                     	;# 
   819  008D                     	;# 
   820  008E                     	;# 
   821  008F                     	;# 
   822  0090                     	;# 
   823  0091                     	;# 
   824  0092                     	;# 
   825  0093                     	;# 
   826  0095                     	;# 
   827  0096                     	;# 
   828  0097                     	;# 
   829  0098                     	;# 
   830  0099                     	;# 
   831  009A                     	;# 
   832  009B                     	;# 
   833  009B                     	;# 
   834  009C                     	;# 
   835  009D                     	;# 
   836  009E                     	;# 
   837  010C                     	;# 
   838  010D                     	;# 
   839  010E                     	;# 
   840  010F                     	;# 
   841  0110                     	;# 
   842  0111                     	;# 
   843  0112                     	;# 
   844  0113                     	;# 
   845  0114                     	;# 
   846  0115                     	;# 
   847  0116                     	;# 
   848  0117                     	;# 
   849  0118                     	;# 
   850  0119                     	;# 
   851  011A                     	;# 
   852  011B                     	;# 
   853  011D                     	;# 
   854  018C                     	;# 
   855  018D                     	;# 
   856  018F                     	;# 
   857  0190                     	;# 
   858  0191                     	;# 
   859  0191                     	;# 
   860  0192                     	;# 
   861  0193                     	;# 
   862  0193                     	;# 
   863  0193                     	;# 
   864  0194                     	;# 
   865  0195                     	;# 
   866  0196                     	;# 
   867  0199                     	;# 
   868  019A                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019B                     	;# 
   872  019B                     	;# 
   873  019C                     	;# 
   874  019C                     	;# 
   875  019D                     	;# 
   876  019E                     	;# 
   877  019F                     	;# 
   878  020D                     	;# 
   879  0210                     	;# 
   880  0211                     	;# 
   881  0212                     	;# 
   882  0213                     	;# 
   883  0214                     	;# 
   884  0215                     	;# 
   885  0215                     	;# 
   886  0216                     	;# 
   887  0217                     	;# 
   888  0291                     	;# 
   889  0291                     	;# 
   890  0292                     	;# 
   891  0293                     	;# 
   892  0294                     	;# 
   893  0295                     	;# 
   894  0295                     	;# 
   895  0296                     	;# 
   896  0298                     	;# 
   897  0298                     	;# 
   898  0299                     	;# 
   899  029A                     	;# 
   900  029B                     	;# 
   901  029C                     	;# 
   902  029C                     	;# 
   903  029D                     	;# 
   904  029E                     	;# 
   905  029F                     	;# 
   906  0311                     	;# 
   907  0311                     	;# 
   908  0312                     	;# 
   909  0313                     	;# 
   910  0314                     	;# 
   911  0315                     	;# 
   912  0315                     	;# 
   913  0316                     	;# 
   914  0318                     	;# 
   915  0318                     	;# 
   916  0319                     	;# 
   917  031A                     	;# 
   918  031C                     	;# 
   919  031C                     	;# 
   920  031D                     	;# 
   921  031E                     	;# 
   922  0394                     	;# 
   923  0395                     	;# 
   924  0396                     	;# 
   925  0415                     	;# 
   926  0416                     	;# 
   927  0417                     	;# 
   928  041C                     	;# 
   929  041D                     	;# 
   930  041E                     	;# 
   931  0791                     	;# 
   932  0792                     	;# 
   933  0793                     	;# 
   934  0794                     	;# 
   935  0795                     	;# 
   936  0798                     	;# 
   937  0799                     	;# 
   938  079A                     	;# 
   939  07A0                     	;# 
   940  07A1                     	;# 
   941  07A2                     	;# 
   942  07A3                     	;# 
   943  07A4                     	;# 
   944  07A5                     	;# 
   945  07A6                     	;# 
   946  07A7                     	;# 
   947  07A8                     	;# 
   948  07A9                     	;# 
   949  07AA                     	;# 
   950  07AB                     	;# 
   951  0FE4                     	;# 
   952  0FE5                     	;# 
   953  0FE6                     	;# 
   954  0FE7                     	;# 
   955  0FE8                     	;# 
   956  0FE9                     	;# 
   957  0FEA                     	;# 
   958  0FEB                     	;# 
   959  0FED                     	;# 
   960  0FEE                     	;# 
   961  0FEF                     	;# 
   962  0000                     	;# 
   963  0001                     	;# 
   964  0002                     	;# 
   965  0003                     	;# 
   966  0004                     	;# 
   967  0005                     	;# 
   968  0006                     	;# 
   969  0007                     	;# 
   970  0008                     	;# 
   971  0009                     	;# 
   972  000A                     	;# 
   973  000B                     	;# 
   974  000C                     	;# 
   975  000D                     	;# 
   976  000E                     	;# 
   977  000F                     	;# 
   978  0010                     	;# 
   979  0011                     	;# 
   980  0012                     	;# 
   981  0013                     	;# 
   982  0015                     	;# 
   983  0016                     	;# 
   984  0016                     	;# 
   985  0017                     	;# 
   986  0018                     	;# 
   987  0019                     	;# 
   988  001A                     	;# 
   989  001B                     	;# 
   990  001C                     	;# 
   991  001E                     	;# 
   992  001F                     	;# 
   993  008C                     	;# 
   994  008D                     	;# 
   995  008E                     	;# 
   996  008F                     	;# 
   997  0090                     	;# 
   998  0091                     	;# 
   999  0092                     	;# 
  1000  0093                     	;# 
  1001  0095                     	;# 
  1002  0096                     	;# 
  1003  0097                     	;# 
  1004  0098                     	;# 
  1005  0099                     	;# 
  1006  009A                     	;# 
  1007  009B                     	;# 
  1008  009B                     	;# 
  1009  009C                     	;# 
  1010  009D                     	;# 
  1011  009E                     	;# 
  1012  010C                     	;# 
  1013  010D                     	;# 
  1014  010E                     	;# 
  1015  010F                     	;# 
  1016  0110                     	;# 
  1017  0111                     	;# 
  1018  0112                     	;# 
  1019  0113                     	;# 
  1020  0114                     	;# 
  1021  0115                     	;# 
  1022  0116                     	;# 
  1023  0117                     	;# 
  1024  0118                     	;# 
  1025  0119                     	;# 
  1026  011A                     	;# 
  1027  011B                     	;# 
  1028  011D                     	;# 
  1029  018C                     	;# 
  1030  018D                     	;# 
  1031  018F                     	;# 
  1032  0190                     	;# 
  1033  0191                     	;# 
  1034  0191                     	;# 
  1035  0192                     	;# 
  1036  0193                     	;# 
  1037  0193                     	;# 
  1038  0193                     	;# 
  1039  0194                     	;# 
  1040  0195                     	;# 
  1041  0196                     	;# 
  1042  0199                     	;# 
  1043  019A                     	;# 
  1044  019B                     	;# 
  1045  019B                     	;# 
  1046  019B                     	;# 
  1047  019B                     	;# 
  1048  019C                     	;# 
  1049  019C                     	;# 
  1050  019D                     	;# 
  1051  019E                     	;# 
  1052  019F                     	;# 
  1053  020D                     	;# 
  1054  0210                     	;# 
  1055  0211                     	;# 
  1056  0212                     	;# 
  1057  0213                     	;# 
  1058  0214                     	;# 
  1059  0215                     	;# 
  1060  0215                     	;# 
  1061  0216                     	;# 
  1062  0217                     	;# 
  1063  0291                     	;# 
  1064  0291                     	;# 
  1065  0292                     	;# 
  1066  0293                     	;# 
  1067  0294                     	;# 
  1068  0295                     	;# 
  1069  0295                     	;# 
  1070  0296                     	;# 
  1071  0298                     	;# 
  1072  0298                     	;# 
  1073  0299                     	;# 
  1074  029A                     	;# 
  1075  029B                     	;# 
  1076  029C                     	;# 
  1077  029C                     	;# 
  1078  029D                     	;# 
  1079  029E                     	;# 
  1080  029F                     	;# 
  1081  0311                     	;# 
  1082  0311                     	;# 
  1083  0312                     	;# 
  1084  0313                     	;# 
  1085  0314                     	;# 
  1086  0315                     	;# 
  1087  0315                     	;# 
  1088  0316                     	;# 
  1089  0318                     	;# 
  1090  0318                     	;# 
  1091  0319                     	;# 
  1092  031A                     	;# 
  1093  031C                     	;# 
  1094  031C                     	;# 
  1095  031D                     	;# 
  1096  031E                     	;# 
  1097  0394                     	;# 
  1098  0395                     	;# 
  1099  0396                     	;# 
  1100  0415                     	;# 
  1101  0416                     	;# 
  1102  0417                     	;# 
  1103  041C                     	;# 
  1104  041D                     	;# 
  1105  041E                     	;# 
  1106  0791                     	;# 
  1107  0792                     	;# 
  1108  0793                     	;# 
  1109  0794                     	;# 
  1110  0795                     	;# 
  1111  0798                     	;# 
  1112  0799                     	;# 
  1113  079A                     	;# 
  1114  07A0                     	;# 
  1115  07A1                     	;# 
  1116  07A2                     	;# 
  1117  07A3                     	;# 
  1118  07A4                     	;# 
  1119  07A5                     	;# 
  1120  07A6                     	;# 
  1121  07A7                     	;# 
  1122  07A8                     	;# 
  1123  07A9                     	;# 
  1124  07AA                     	;# 
  1125  07AB                     	;# 
  1126  0FE4                     	;# 
  1127  0FE5                     	;# 
  1128  0FE6                     	;# 
  1129  0FE7                     	;# 
  1130  0FE8                     	;# 
  1131  0FE9                     	;# 
  1132  0FEA                     	;# 
  1133  0FEB                     	;# 
  1134  0FED                     	;# 
  1135  0FEE                     	;# 
  1136  0FEF                     	;# 
  1137                           
  1138                           	psect	idataBANK0
  1139  0132                     __pidataBANK0:
  1140                           
  1141                           ;initializer for _op
  1142  0132  3401               	retlw	1
  1143  000D                     _PORTBbits	set	13
  1144  0095                     _OPTION_REGbits	set	149
  1145  008F                     _TRISDbits	set	143
  1146  008D                     _TRISBbits	set	141
  1147  008C                     _TRISAbits	set	140
  1148  0098                     _OSCTUNE	set	152
  1149  0099                     _OSCCON	set	153
  1150  008F                     _TRISD	set	143
  1151  009B                     _ADRESL	set	155
  1152  009C                     _ADRESH	set	156
  1153  009D                     _ADCON0bits	set	157
  1154  009E                     _ADCON1bits	set	158
  1155  010F                     _LATDbits	set	271
  1156  010D                     _LATBbits	set	269
  1157  0116                     _BORCON	set	278
  1158  010F                     _LATD	set	271
  1159  018F                     _ANSELDbits	set	399
  1160  018D                     _ANSELBbits	set	397
  1161  018C                     _ANSELAbits	set	396
  1162  018F                     _ANSELD	set	399
  1163  020D                     _WPUB	set	525
  1164                           
  1165                           	psect	stringtext1
  1166  0800                     __pstringtext1:
  1167  0800                     STR_4:
  1168  0800  344F               	retlw	79	;'O'
  1169  0801  3450               	retlw	80	;'P'
  1170  0802  343A               	retlw	58	;':'
  1171  0803  3420               	retlw	32	;' '
  1172  0804  3420               	retlw	32	;' '
  1173  0805  3420               	retlw	32	;' '
  1174  0806  3420               	retlw	32	;' '
  1175  0807  3420               	retlw	32	;' '
  1176  0808  3420               	retlw	32	;' '
  1177  0809  3420               	retlw	32	;' '
  1178  080A  3420               	retlw	32	;' '
  1179  080B  3420               	retlw	32	;' '
  1180  080C  3420               	retlw	32	;' '
  1181  080D  3420               	retlw	32	;' '
  1182  080E  3420               	retlw	32	;' '
  1183  080F  3420               	retlw	32	;' '
  1184  0810  3420               	retlw	32	;' '
  1185  0811  3420               	retlw	32	;' '
  1186  0812  3420               	retlw	32	;' '
  1187  0813  3420               	retlw	32	;' '
  1188  0814  3400               	retlw	0
  1189                           
  1190                           	psect	stringtext2
  1191  0815                     __pstringtext2:
  1192  0815                     STR_3:
  1193  0815  3433               	retlw	51	;'3'
  1194  0816  342E               	retlw	46	;'.'
  1195  0817  3452               	retlw	82	;'R'
  1196  0818  3465               	retlw	101	;'e'
  1197  0819  346C               	retlw	108	;'l'
  1198  081A  346F               	retlw	111	;'o'
  1199  081B  346A               	retlw	106	;'j'
  1200  081C  3420               	retlw	32	;' '
  1201  081D  3420               	retlw	32	;' '
  1202  081E  3420               	retlw	32	;' '
  1203  081F  3420               	retlw	32	;' '
  1204  0820  3420               	retlw	32	;' '
  1205  0821  3420               	retlw	32	;' '
  1206  0822  3420               	retlw	32	;' '
  1207  0823  3420               	retlw	32	;' '
  1208  0824  3420               	retlw	32	;' '
  1209  0825  3420               	retlw	32	;' '
  1210  0826  3420               	retlw	32	;' '
  1211  0827  3420               	retlw	32	;' '
  1212  0828  3420               	retlw	32	;' '
  1213  0829  3400               	retlw	0
  1214                           
  1215                           	psect	stringtext3
  1216  082A                     __pstringtext3:
  1217  082A                     STR_10:
  1218  082A  3431               	retlw	49	;'1'
  1219  082B  342E               	retlw	46	;'.'
  1220  082C  344D               	retlw	77	;'M'
  1221  082D  344F               	retlw	79	;'O'
  1222  082E  3454               	retlw	84	;'T'
  1223  082F  344F               	retlw	79	;'O'
  1224  0830  3452               	retlw	82	;'R'
  1225  0831  3441               	retlw	65	;'A'
  1226  0832  3420               	retlw	32	;' '
  1227  0833  3420               	retlw	32	;' '
  1228  0834  3420               	retlw	32	;' '
  1229  0835  3420               	retlw	32	;' '
  1230  0836  3420               	retlw	32	;' '
  1231  0837  3420               	retlw	32	;' '
  1232  0838  3420               	retlw	32	;' '
  1233  0839  3420               	retlw	32	;' '
  1234  083A  3420               	retlw	32	;' '
  1235  083B  3420               	retlw	32	;' '
  1236  083C  3420               	retlw	32	;' '
  1237  083D  3420               	retlw	32	;' '
  1238  083E  3400               	retlw	0
  1239                           
  1240                           	psect	stringtext4
  1241  083F                     __pstringtext4:
  1242  083F                     STR_14:
  1243  083F  3431               	retlw	49	;'1'
  1244  0840  342E               	retlw	46	;'.'
  1245  0841  3444               	retlw	68	;'D'
  1246  0842  3445               	retlw	69	;'E'
  1247  0843  3452               	retlw	82	;'R'
  1248  0844  3445               	retlw	69	;'E'
  1249  0845  3443               	retlw	67	;'C'
  1250  0846  3448               	retlw	72	;'H'
  1251  0847  3441               	retlw	65	;'A'
  1252  0848  3420               	retlw	32	;' '
  1253  0849  3420               	retlw	32	;' '
  1254  084A  3420               	retlw	32	;' '
  1255  084B  3420               	retlw	32	;' '
  1256  084C  3420               	retlw	32	;' '
  1257  084D  3420               	retlw	32	;' '
  1258  084E  3420               	retlw	32	;' '
  1259  084F  3420               	retlw	32	;' '
  1260  0850  3420               	retlw	32	;' '
  1261  0851  3420               	retlw	32	;' '
  1262  0852  3420               	retlw	32	;' '
  1263  0853  3400               	retlw	0
  1264                           
  1265                           	psect	stringtext5
  1266  0854                     __pstringtext5:
  1267  0854                     STR_1:
  1268  0854  3420               	retlw	32	;' '
  1269  0855  3420               	retlw	32	;' '
  1270  0856  3420               	retlw	32	;' '
  1271  0857  3420               	retlw	32	;' '
  1272  0858  3420               	retlw	32	;' '
  1273  0859  344D               	retlw	77	;'M'
  1274  085A  3445               	retlw	69	;'E'
  1275  085B  344E               	retlw	78	;'N'
  1276  085C  3455               	retlw	85	;'U'
  1277  085D  3420               	retlw	32	;' '
  1278  085E  3450               	retlw	80	;'P'
  1279  085F  3450               	retlw	80	;'P'
  1280  0860  3441               	retlw	65	;'A'
  1281  0861  344C               	retlw	76	;'L'
  1282  0862  3420               	retlw	32	;' '
  1283  0863  3420               	retlw	32	;' '
  1284  0864  3420               	retlw	32	;' '
  1285  0865  3420               	retlw	32	;' '
  1286  0866  3420               	retlw	32	;' '
  1287  0867  3420               	retlw	32	;' '
  1288  0868  3400               	retlw	0
  1289                           
  1290                           	psect	stringtext6
  1291  0869                     __pstringtext6:
  1292  0869                     STR_13:
  1293  0869  3420               	retlw	32	;' '
  1294  086A  3420               	retlw	32	;' '
  1295  086B  3420               	retlw	32	;' '
  1296  086C  344D               	retlw	77	;'M'
  1297  086D  3445               	retlw	69	;'E'
  1298  086E  344E               	retlw	78	;'N'
  1299  086F  3455               	retlw	85	;'U'
  1300  0870  3420               	retlw	32	;' '
  1301  0871  344D               	retlw	77	;'M'
  1302  0872  344F               	retlw	79	;'O'
  1303  0873  3454               	retlw	84	;'T'
  1304  0874  344F               	retlw	79	;'O'
  1305  0875  3452               	retlw	82	;'R'
  1306  0876  3420               	retlw	32	;' '
  1307  0877  3441               	retlw	65	;'A'
  1308  0878  3420               	retlw	32	;' '
  1309  0879  3420               	retlw	32	;' '
  1310  087A  3420               	retlw	32	;' '
  1311  087B  3420               	retlw	32	;' '
  1312  087C  3420               	retlw	32	;' '
  1313  087D  3400               	retlw	0
  1314                           
  1315                           	psect	stringtext7
  1316  087E                     __pstringtext7:
  1317  087E                     STR_17:
  1318  087E  3420               	retlw	32	;' '
  1319  087F  3420               	retlw	32	;' '
  1320  0880  3420               	retlw	32	;' '
  1321  0881  344D               	retlw	77	;'M'
  1322  0882  3445               	retlw	69	;'E'
  1323  0883  344E               	retlw	78	;'N'
  1324  0884  3455               	retlw	85	;'U'
  1325  0885  3420               	retlw	32	;' '
  1326  0886  344D               	retlw	77	;'M'
  1327  0887  344F               	retlw	79	;'O'
  1328  0888  3454               	retlw	84	;'T'
  1329  0889  344F               	retlw	79	;'O'
  1330  088A  3452               	retlw	82	;'R'
  1331  088B  3420               	retlw	32	;' '
  1332  088C  3442               	retlw	66	;'B'
  1333  088D  3420               	retlw	32	;' '
  1334  088E  3420               	retlw	32	;' '
  1335  088F  3420               	retlw	32	;' '
  1336  0890  3420               	retlw	32	;' '
  1337  0891  3420               	retlw	32	;' '
  1338  0892  3400               	retlw	0
  1339                           
  1340                           	psect	stringtext8
  1341  0893                     __pstringtext8:
  1342  0893                     STR_6:
  1343  0893  3431               	retlw	49	;'1'
  1344  0894  342E               	retlw	46	;'.'
  1345  0895  3454               	retlw	84	;'T'
  1346  0896  3445               	retlw	69	;'E'
  1347  0897  344D               	retlw	77	;'M'
  1348  0898  3450               	retlw	80	;'P'
  1349  0899  3420               	retlw	32	;' '
  1350  089A  3420               	retlw	32	;' '
  1351  089B  3420               	retlw	32	;' '
  1352  089C  3420               	retlw	32	;' '
  1353  089D  3432               	retlw	50	;'2'
  1354  089E  342E               	retlw	46	;'.'
  1355  089F  344C               	retlw	76	;'L'
  1356  08A0  3444               	retlw	68	;'D'
  1357  08A1  3452               	retlw	82	;'R'
  1358  08A2  3420               	retlw	32	;' '
  1359  08A3  3420               	retlw	32	;' '
  1360  08A4  3420               	retlw	32	;' '
  1361  08A5  3420               	retlw	32	;' '
  1362  08A6  3420               	retlw	32	;' '
  1363  08A7  3400               	retlw	0
  1364                           
  1365                           	psect	stringtext9
  1366  08A8                     __pstringtext9:
  1367  08A8                     STR_9:
  1368  08A8  3420               	retlw	32	;' '
  1369  08A9  3420               	retlw	32	;' '
  1370  08AA  3420               	retlw	32	;' '
  1371  08AB  344D               	retlw	77	;'M'
  1372  08AC  3445               	retlw	69	;'E'
  1373  08AD  344E               	retlw	78	;'N'
  1374  08AE  3455               	retlw	85	;'U'
  1375  08AF  3420               	retlw	32	;' '
  1376  08B0  344D               	retlw	77	;'M'
  1377  08B1  344F               	retlw	79	;'O'
  1378  08B2  3454               	retlw	84	;'T'
  1379  08B3  344F               	retlw	79	;'O'
  1380  08B4  3452               	retlw	82	;'R'
  1381  08B5  3445               	retlw	69	;'E'
  1382  08B6  3453               	retlw	83	;'S'
  1383  08B7  3420               	retlw	32	;' '
  1384  08B8  3420               	retlw	32	;' '
  1385  08B9  3420               	retlw	32	;' '
  1386  08BA  3420               	retlw	32	;' '
  1387  08BB  3420               	retlw	32	;' '
  1388  08BC  3400               	retlw	0
  1389                           
  1390                           	psect	stringtext10
  1391  08BD                     __pstringtext10:
  1392  08BD                     STR_7:
  1393  08BD  3433               	retlw	51	;'3'
  1394  08BE  342E               	retlw	46	;'.'
  1395  08BF  3444               	retlw	68	;'D'
  1396  08C0  3448               	retlw	72	;'H'
  1397  08C1  3454               	retlw	84	;'T'
  1398  08C2  3420               	retlw	32	;' '
  1399  08C3  3420               	retlw	32	;' '
  1400  08C4  3420               	retlw	32	;' '
  1401  08C5  3420               	retlw	32	;' '
  1402  08C6  3420               	retlw	32	;' '
  1403  08C7  3434               	retlw	52	;'4'
  1404  08C8  342E               	retlw	46	;'.'
  1405  08C9  3442               	retlw	66	;'B'
  1406  08CA  3441               	retlw	65	;'A'
  1407  08CB  3443               	retlw	67	;'C'
  1408  08CC  344B               	retlw	75	;'K'
  1409  08CD  3420               	retlw	32	;' '
  1410  08CE  3420               	retlw	32	;' '
  1411  08CF  3420               	retlw	32	;' '
  1412  08D0  3420               	retlw	32	;' '
  1413  08D1  3400               	retlw	0
  1414                           
  1415                           	psect	stringtext11
  1416  08D2                     __pstringtext11:
  1417  08D2                     STR_5:
  1418  08D2  3420               	retlw	32	;' '
  1419  08D3  3420               	retlw	32	;' '
  1420  08D4  3420               	retlw	32	;' '
  1421  08D5  344D               	retlw	77	;'M'
  1422  08D6  3445               	retlw	69	;'E'
  1423  08D7  344E               	retlw	78	;'N'
  1424  08D8  3455               	retlw	85	;'U'
  1425  08D9  3420               	retlw	32	;' '
  1426  08DA  3453               	retlw	83	;'S'
  1427  08DB  3445               	retlw	69	;'E'
  1428  08DC  344E               	retlw	78	;'N'
  1429  08DD  3453               	retlw	83	;'S'
  1430  08DE  344F               	retlw	79	;'O'
  1431  08DF  3452               	retlw	82	;'R'
  1432  08E0  3445               	retlw	69	;'E'
  1433  08E1  3453               	retlw	83	;'S'
  1434  08E2  3420               	retlw	32	;' '
  1435  08E3  3420               	retlw	32	;' '
  1436  08E4  3420               	retlw	32	;' '
  1437  08E5  3420               	retlw	32	;' '
  1438  08E6  3400               	retlw	0
  1439                           
  1440                           	psect	stringtext12
  1441  08E7                     __pstringtext12:
  1442  08E7                     STR_11:
  1443  08E7  3432               	retlw	50	;'2'
  1444  08E8  342E               	retlw	46	;'.'
  1445  08E9  344D               	retlw	77	;'M'
  1446  08EA  344F               	retlw	79	;'O'
  1447  08EB  3454               	retlw	84	;'T'
  1448  08EC  344F               	retlw	79	;'O'
  1449  08ED  3452               	retlw	82	;'R'
  1450  08EE  3442               	retlw	66	;'B'
  1451  08EF  3420               	retlw	32	;' '
  1452  08F0  3420               	retlw	32	;' '
  1453  08F1  3420               	retlw	32	;' '
  1454  08F2  3420               	retlw	32	;' '
  1455  08F3  3433               	retlw	51	;'3'
  1456  08F4  342E               	retlw	46	;'.'
  1457  08F5  3442               	retlw	66	;'B'
  1458  08F6  3441               	retlw	65	;'A'
  1459  08F7  3443               	retlw	67	;'C'
  1460  08F8  344B               	retlw	75	;'K'
  1461  08F9  3420               	retlw	32	;' '
  1462  08FA  3420               	retlw	32	;' '
  1463  08FB  3400               	retlw	0
  1464                           
  1465                           	psect	stringtext13
  1466  08FC                     __pstringtext13:
  1467  08FC                     STR_15:
  1468  08FC  3432               	retlw	50	;'2'
  1469  08FD  342E               	retlw	46	;'.'
  1470  08FE  3449               	retlw	73	;'I'
  1471  08FF  345A               	retlw	90	;'Z'
  1472  0900  3451               	retlw	81	;'Q'
  1473  0901  3455               	retlw	85	;'U'
  1474  0902  3449               	retlw	73	;'I'
  1475  0903  3445               	retlw	69	;'E'
  1476  0904  3452               	retlw	82	;'R'
  1477  0905  3444               	retlw	68	;'D'
  1478  0906  3441               	retlw	65	;'A'
  1479  0907  3420               	retlw	32	;' '
  1480  0908  3420               	retlw	32	;' '
  1481  0909  3433               	retlw	51	;'3'
  1482  090A  342E               	retlw	46	;'.'
  1483  090B  3442               	retlw	66	;'B'
  1484  090C  3443               	retlw	67	;'C'
  1485  090D  344B               	retlw	75	;'K'
  1486  090E  3420               	retlw	32	;' '
  1487  090F  3420               	retlw	32	;' '
  1488  0910  3400               	retlw	0
  1489                           
  1490                           	psect	stringtext14
  1491  0911                     __pstringtext14:
  1492  0911                     STR_2:
  1493  0911  3431               	retlw	49	;'1'
  1494  0912  342E               	retlw	46	;'.'
  1495  0913  3453               	retlw	83	;'S'
  1496  0914  3465               	retlw	101	;'e'
  1497  0915  346E               	retlw	110	;'n'
  1498  0916  3473               	retlw	115	;'s'
  1499  0917  346F               	retlw	111	;'o'
  1500  0918  3472               	retlw	114	;'r'
  1501  0919  3420               	retlw	32	;' '
  1502  091A  3420               	retlw	32	;' '
  1503  091B  3432               	retlw	50	;'2'
  1504  091C  342E               	retlw	46	;'.'
  1505  091D  344D               	retlw	77	;'M'
  1506  091E  346F               	retlw	111	;'o'
  1507  091F  3474               	retlw	116	;'t'
  1508  0920  346F               	retlw	111	;'o'
  1509  0921  3472               	retlw	114	;'r'
  1510  0922  3465               	retlw	101	;'e'
  1511  0923  3473               	retlw	115	;'s'
  1512  0924  3420               	retlw	32	;' '
  1513  0925  3400               	retlw	0
  1514                           
  1515                           	psect	stringtext15
  1516  0000                     __pstringtext15:
  1517  0800                     
  1518                           	psect	cinit
  1519  07F7                     start_initialization:	
  1520                           ; #config settings
  1521                           
  1522  07F7                     __initialization:
  1523                           
  1524                           ; Initialize objects allocated to BANK0
  1525  07F7  3181  2132  3187   	fcall	__pidataBANK0	;fetch initializer
  1526  07FA  00A8               	movwf	__pdataBANK0& (0+127)
  1527                           
  1528                           ; Clear objects allocated to BANK0
  1529  07FB  01A6               	clrf	__pbssBANK0& (0+127)
  1530  07FC  01A7               	clrf	(__pbssBANK0+1)& (0+127)
  1531  07FD                     end_of_initialization:	
  1532                           ;End of C runtime variable initialization code
  1533                           
  1534  07FD                     __end_of__initialization:
  1535  07FD  0020               	movlb	0
  1536  07FE  3182  2A91         	ljmp	_main	;jump to C main() function
  1537                           
  1538                           	psect	bssBANK0
  1539  0026                     __pbssBANK0:
  1540  0026                     _currentMenu:
  1541  0026                     	ds	1
  1542  0027                     __lcd_params:
  1543  0027                     	ds	1
  1544                           
  1545                           	psect	dataBANK0
  1546  0028                     __pdataBANK0:
  1547  0028                     _op:
  1548  0028                     	ds	1
  1549                           
  1550                           	psect	cstackCOMMON
  1551  0070                     __pcstackCOMMON:
  1552  0070                     ?_lcd_command:
  1553  0070                     ?_SystemInit:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_MenuPPAL:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_MenuMotores:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_MenuRELOJ:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ??_MenuRELOJ:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_MenuSensores:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_MenuTemp:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ??_MenuTemp:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_MenuLDR:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ??_MenuLDR:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_MenuMotorA:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_MenuMotorB:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ?_configurarPuertos:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ??_configurarPuertos:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ?__write_nibble:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ??__write_nibble:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ?_lcd_init:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ?_lcd_write:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_lcd_disable_blink:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_lcd_disable_cursor:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_main:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_motorA_Derecha:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ??_motorA_Derecha:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_motorA_Izquierda:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ??_motorA_Izquierda:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628                           
  1629                           ; 1 bytes @ 0x0
  1630  0070                     	ds	1
  1631  0071                     __write_nibble@nibble:
  1632                           
  1633                           ; 1 bytes @ 0x1
  1634  0071                     	ds	1
  1635  0072                     ?__send_byte:
  1636  0072                     __send_byte@mode:	
  1637                           ; 1 bytes @ 0x2
  1638                           
  1639                           
  1640                           ; 1 bytes @ 0x2
  1641  0072                     	ds	1
  1642  0073                     ??__send_byte:
  1643                           
  1644                           ; 1 bytes @ 0x3
  1645  0073                     	ds	2
  1646  0075                     __send_byte@value:
  1647                           
  1648                           ; 1 bytes @ 0x5
  1649  0075                     	ds	1
  1650  0076                     ??_lcd_command:
  1651  0076                     ??_lcd_write:	
  1652                           ; 1 bytes @ 0x6
  1653                           
  1654  0076                     lcd_write@letra:	
  1655                           ; 1 bytes @ 0x6
  1656                           
  1657  0076                     lcd_command@cmd:	
  1658                           ; 1 bytes @ 0x6
  1659                           
  1660                           
  1661                           ; 1 bytes @ 0x6
  1662  0076                     	ds	1
  1663  0077                     ??_lcd_init:
  1664  0077                     ?_lcd_set_cursor:	
  1665                           ; 1 bytes @ 0x7
  1666                           
  1667  0077                     ??_lcd_disable_blink:	
  1668                           ; 1 bytes @ 0x7
  1669                           
  1670  0077                     ??_lcd_disable_cursor:	
  1671                           ; 1 bytes @ 0x7
  1672                           
  1673  0077                     lcd_set_cursor@col:	
  1674                           ; 1 bytes @ 0x7
  1675                           
  1676                           
  1677                           ; 1 bytes @ 0x7
  1678  0077                     	ds	1
  1679  0078                     ??_SystemInit:
  1680  0078                     ??_lcd_set_cursor:	
  1681                           ; 1 bytes @ 0x8
  1682                           
  1683                           
  1684                           ; 1 bytes @ 0x8
  1685  0078                     	ds	2
  1686  007A                     lcd_set_cursor@row:
  1687                           
  1688                           ; 1 bytes @ 0xA
  1689  007A                     	ds	1
  1690  007B                     ?_lcd_out:
  1691  007B                     ?_lcd_char:	
  1692                           ; 1 bytes @ 0xB
  1693                           
  1694  007B                     lcd_out@col:	
  1695                           ; 1 bytes @ 0xB
  1696                           
  1697  007B                     lcd_char@col:	
  1698                           ; 1 bytes @ 0xB
  1699                           
  1700                           
  1701                           ; 1 bytes @ 0xB
  1702  007B                     	ds	1
  1703  007C                     lcd_char@letra:
  1704  007C                     lcd_out@str:	
  1705                           ; 1 bytes @ 0xC
  1706                           
  1707                           
  1708                           ; 2 bytes @ 0xC
  1709  007C                     	ds	1
  1710  007D                     ??_lcd_char:
  1711                           
  1712                           ; 1 bytes @ 0xD
  1713  007D                     	ds	1
  1714  007E                     ??_MenuMotorB:
  1715                           
  1716                           	psect	cstackBANK0
  1717  0020                     __pcstackBANK0:	
  1718                           ; 1 bytes @ 0xE
  1719                           
  1720  0020                     ??_lcd_out:
  1721  0020                     lcd_char@row:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724                           
  1725                           ; 1 bytes @ 0x0
  1726  0020                     	ds	1
  1727  0021                     lcd_out@row:
  1728                           
  1729                           ; 1 bytes @ 0x1
  1730  0021                     	ds	1
  1731  0022                     ??_MenuPPAL:
  1732  0022                     ??_MenuMotores:	
  1733                           ; 1 bytes @ 0x2
  1734                           
  1735  0022                     ??_MenuSensores:	
  1736                           ; 1 bytes @ 0x2
  1737                           
  1738  0022                     ??_MenuMotorA:	
  1739                           ; 1 bytes @ 0x2
  1740                           
  1741                           
  1742                           ; 1 bytes @ 0x2
  1743  0022                     	ds	2
  1744  0024                     ??_main:
  1745                           
  1746                           ; 1 bytes @ 0x4
  1747  0024                     	ds	2
  1748                           
  1749                           	psect	maintext
  1750  0291                     __pmaintext:	
  1751 ;;
  1752 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1753 ;;
  1754 ;; *************** function _main *****************
  1755 ;; Defined at:
  1756 ;;		line 21 in file "main.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : B1F/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1772 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1773 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1774 ;;Total ram usage:        2 bytes
  1775 ;; Hardware stack levels required when called: 6
  1776 ;; This function calls:
  1777 ;;		_MenuLDR
  1778 ;;		_MenuMotorA
  1779 ;;		_MenuMotorB
  1780 ;;		_MenuMotores
  1781 ;;		_MenuPPAL
  1782 ;;		_MenuRELOJ
  1783 ;;		_MenuSensores
  1784 ;;		_MenuTemp
  1785 ;;		_SystemInit
  1786 ;; This function is called by:
  1787 ;;		Startup code after reset
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791  0291                     _main:	
  1792                           ;psect for function _main
  1793                           
  1794  0291                     l2124:	
  1795                           ;incstack = 0
  1796                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1797                           
  1798                           
  1799                           ;main.c: 24:     SystemInit();
  1800  0291  3181  2177  3182   	fcall	_SystemInit
  1801  0294  2AB5               	goto	l2144
  1802  0295                     l2126:
  1803  0295  3185  256A  3182   	fcall	_MenuPPAL
  1804  0298  2ADB               	goto	l2146
  1805  0299                     l2128:
  1806  0299  3184  2457  3182   	fcall	_MenuMotores
  1807  029C  2ADB               	goto	l2146
  1808  029D                     l2130:
  1809  029D  3181  2130  3182   	fcall	_MenuRELOJ
  1810  02A0  2ADB               	goto	l2146
  1811  02A1                     l2132:
  1812  02A1  3186  267E  3182   	fcall	_MenuSensores
  1813  02A4  2ADB               	goto	l2146
  1814  02A5                     l2134:
  1815  02A5  3181  2131  3182   	fcall	_MenuTemp
  1816  02A8  2ADB               	goto	l2146
  1817  02A9                     l2136:
  1818  02A9  3181  212F  3182   	fcall	_MenuLDR
  1819  02AC  2ADB               	goto	l2146
  1820  02AD                     l2138:
  1821  02AD  3183  2344  3182   	fcall	_MenuMotorA
  1822  02B0  2ADB               	goto	l2146
  1823  02B1                     l2140:
  1824  02B1  3181  21CE  3182   	fcall	_MenuMotorB
  1825  02B4  2ADB               	goto	l2146
  1826  02B5                     l2144:
  1827  02B5  0020               	movlb	0	; select bank0
  1828  02B6  0826               	movf	_currentMenu,w
  1829  02B7  00A4               	movwf	??_main
  1830  02B8  01A5               	clrf	??_main+1
  1831                           
  1832                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1833                           ; Switch size 1, requested type "simple"
  1834                           ; Number of cases is 1, Range of values is 0 to 0
  1835                           ; switch strategies available:
  1836                           ; Name         Instructions Cycles
  1837                           ; simple_byte            4     3 (average)
  1838                           ; direct_byte            8     6 (fixed)
  1839                           ; jumptable            260     6 (fixed)
  1840                           ;	Chosen strategy is simple_byte
  1841  02B9  0825               	movf	??_main+1,w
  1842  02BA  3A00               	xorlw	0	; case 0
  1843  02BB  1903               	skipnz
  1844  02BC  2ABE               	goto	l2372
  1845  02BD  2ADB               	goto	l2146
  1846  02BE                     l2372:
  1847                           
  1848                           ; Switch size 1, requested type "simple"
  1849                           ; Number of cases is 9, Range of values is 0 to 8
  1850                           ; switch strategies available:
  1851                           ; Name         Instructions Cycles
  1852                           ; direct_byte           24     6 (fixed)
  1853                           ; simple_byte           28    15 (average)
  1854                           ; jumptable            260     6 (fixed)
  1855                           ;	Chosen strategy is simple_byte
  1856  02BE  0824               	movf	??_main,w
  1857  02BF  3A00               	xorlw	0	; case 0
  1858  02C0  1903               	skipnz
  1859  02C1  2A95               	goto	l2126
  1860  02C2  3A01               	xorlw	1	; case 1
  1861  02C3  1903               	skipnz
  1862  02C4  2A99               	goto	l2128
  1863  02C5  3A03               	xorlw	3	; case 2
  1864  02C6  1903               	skipnz
  1865  02C7  2AA1               	goto	l2132
  1866  02C8  3A01               	xorlw	1	; case 3
  1867  02C9  1903               	skipnz
  1868  02CA  2A9D               	goto	l2130
  1869  02CB  3A07               	xorlw	7	; case 4
  1870  02CC  1903               	skipnz
  1871  02CD  2AA5               	goto	l2134
  1872  02CE  3A01               	xorlw	1	; case 5
  1873  02CF  1903               	skipnz
  1874  02D0  2AA9               	goto	l2136
  1875  02D1  3A03               	xorlw	3	; case 6
  1876  02D2  1903               	skipnz
  1877  02D3  2ADB               	goto	l2146
  1878  02D4  3A01               	xorlw	1	; case 7
  1879  02D5  1903               	skipnz
  1880  02D6  2AAD               	goto	l2138
  1881  02D7  3A0F               	xorlw	15	; case 8
  1882  02D8  1903               	skipnz
  1883  02D9  2AB1               	goto	l2140
  1884  02DA  2ADB               	goto	l2146
  1885  02DB                     l2146:
  1886                           
  1887                           ;main.c: 38:         _delay((unsigned long)((50)*(8000000UL/4000.0)));
  1888  02DB  3082               	movlw	130
  1889  02DC  0020               	movlb	0	; select bank0
  1890  02DD  00A4               	movwf	??_main
  1891  02DE  30DD               	movlw	221
  1892  02DF                     u847:
  1893  02DF  0B89               	decfsz	9,f
  1894  02E0  2ADF               	goto	u847
  1895  02E1  0BA4               	decfsz	??_main,f
  1896  02E2  2ADF               	goto	u847
  1897  02E3  3200               	nop2
  1898  02E4  2AB5               	goto	l2144
  1899  02E5  3180  2802         	ljmp	start
  1900  02E7                     __end_of_main:
  1901                           
  1902                           	psect	text1
  1903  0177                     __ptext1:	
  1904 ;; *************** function _SystemInit *****************
  1905 ;; Defined at:
  1906 ;;		line 19 in file "SOLUCION.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1924 ;;Total ram usage:        0 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 4
  1927 ;; This function calls:
  1928 ;;		_configurarPuertos
  1929 ;;		_lcd_disable_blink
  1930 ;;		_lcd_disable_cursor
  1931 ;;		_lcd_init
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937  0177                     _SystemInit:	
  1938                           ;psect for function _SystemInit
  1939                           
  1940  0177                     l1850:	
  1941                           ;incstack = 0
  1942                           ; Regs used in _SystemInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1943                           
  1944                           
  1945                           ;SOLUCION.c: 20:     OSCCON = 0x38;
  1946  0177  3038               	movlw	56
  1947  0178  0021               	movlb	1	; select bank1
  1948  0179  0099               	movwf	25	;volatile
  1949  017A                     l1852:
  1950                           
  1951                           ;SOLUCION.c: 21:     OSCTUNE = 0x00;
  1952  017A  0198               	clrf	24	;volatile
  1953  017B                     l1854:
  1954                           
  1955                           ;SOLUCION.c: 22:     BORCON = 0x00;
  1956  017B  0022               	movlb	2	; select bank2
  1957  017C  0196               	clrf	22	;volatile
  1958  017D                     l1856:
  1959                           
  1960                           ;SOLUCION.c: 23:     configurarPuertos();
  1961  017D  3181  21AB  3181   	fcall	_configurarPuertos
  1962  0180                     l1858:
  1963                           
  1964                           ;SOLUCION.c: 24:     lcd_init();
  1965  0180  3182  22E7  3181   	fcall	_lcd_init
  1966  0183                     l1860:
  1967                           
  1968                           ;SOLUCION.c: 25:     lcd_disable_blink();
  1969  0183  3181  2159  3181   	fcall	_lcd_disable_blink
  1970  0186                     l1862:
  1971                           
  1972                           ;SOLUCION.c: 26:     lcd_disable_cursor();
  1973  0186  3181  2168  3181   	fcall	_lcd_disable_cursor
  1974  0189                     l206:
  1975  0189  0008               	return
  1976  018A                     __end_of_SystemInit:
  1977                           
  1978                           	psect	text2
  1979  02E7                     __ptext2:	
  1980 ;; *************** function _lcd_init *****************
  1981 ;; Defined at:
  1982 ;;		line 32 in file "LCD_LIB.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2000 ;;Total ram usage:        1 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 3
  2003 ;; This function calls:
  2004 ;;		__write_nibble
  2005 ;;		_lcd_command
  2006 ;; This function is called by:
  2007 ;;		_SystemInit
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011  02E7                     _lcd_init:	
  2012                           ;psect for function _lcd_init
  2013                           
  2014  02E7                     l1778:	
  2015                           ;incstack = 0
  2016                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2017                           
  2018                           
  2019                           ;LCD_LIB.c: 34:     ANSELD &= ~( (1<<0) |
  2020  02E7  300C               	movlw	12
  2021  02E8  00F7               	movwf	??_lcd_init
  2022  02E9  0877               	movf	??_lcd_init,w
  2023  02EA  0023               	movlb	3	; select bank3
  2024  02EB  058F               	andwf	15,f	;volatile
  2025                           
  2026                           ;LCD_LIB.c: 41:     TRISD &= ~( (1<<0) |
  2027  02EC  300C               	movlw	12
  2028  02ED  00F7               	movwf	??_lcd_init
  2029  02EE  0877               	movf	??_lcd_init,w
  2030  02EF  0021               	movlb	1	; select bank1
  2031  02F0  058F               	andwf	15,f	;volatile
  2032                           
  2033                           ;LCD_LIB.c: 48:     LATD &= ~( (1<<0)|
  2034  02F1  300C               	movlw	12
  2035  02F2  00F7               	movwf	??_lcd_init
  2036  02F3  0877               	movf	??_lcd_init,w
  2037  02F4  0022               	movlb	2	; select bank2
  2038  02F5  058F               	andwf	15,f	;volatile
  2039  02F6                     l1780:
  2040                           
  2041                           ;LCD_LIB.c: 55:     _delay((unsigned long)((15)*(8000000UL/4000.0)));
  2042  02F6  3027               	movlw	39
  2043  02F7  00F7               	movwf	??_lcd_init
  2044  02F8  30F5               	movlw	245
  2045  02F9                     u857:
  2046  02F9  0B89               	decfsz	9,f
  2047  02FA  2AF9               	goto	u857
  2048  02FB  0BF7               	decfsz	??_lcd_init,f
  2049  02FC  2AF9               	goto	u857
  2050  02FD  0000               	nop
  2051  02FE                     l1782:
  2052                           
  2053                           ;LCD_LIB.c: 56:     _write_nibble(0x03);
  2054  02FE  3003               	movlw	3
  2055  02FF  3182  2259  3182   	fcall	__write_nibble
  2056  0302                     l1784:
  2057                           
  2058                           ;LCD_LIB.c: 57:     _delay((unsigned long)((5)*(8000000UL/4000.0)));
  2059  0302  300D               	movlw	13
  2060  0303  00F7               	movwf	??_lcd_init
  2061  0304  30FC               	movlw	252
  2062  0305                     u867:
  2063  0305  0B89               	decfsz	9,f
  2064  0306  2B05               	goto	u867
  2065  0307  0BF7               	decfsz	??_lcd_init,f
  2066  0308  2B05               	goto	u867
  2067  0309                     l1786:
  2068                           
  2069                           ;LCD_LIB.c: 58:     _write_nibble(0x03);
  2070  0309  3003               	movlw	3
  2071  030A  3182  2259  3182   	fcall	__write_nibble
  2072  030D                     l1788:
  2073                           
  2074                           ;LCD_LIB.c: 59:     _delay((unsigned long)((100)*(8000000UL/4000000.0)));
  2075  030D  3042               	movlw	66
  2076  030E                     u877:
  2077  030E  0B89               	decfsz	9,f
  2078  030F  2B0E               	goto	u877
  2079  0310  3200               	nop2
  2080  0311                     l1790:
  2081                           
  2082                           ;LCD_LIB.c: 60:     _write_nibble(0x03);
  2083  0311  3003               	movlw	3
  2084  0312  3182  2259  3182   	fcall	__write_nibble
  2085  0315                     l1792:
  2086                           
  2087                           ;LCD_LIB.c: 61:     _write_nibble(0x02);
  2088  0315  3002               	movlw	2
  2089  0316  3182  2259  3182   	fcall	__write_nibble
  2090  0319                     l1794:
  2091                           
  2092                           ;LCD_LIB.c: 63:     lcd_command(0x20 | 0x00 | 0x08);
  2093  0319  3028               	movlw	40
  2094  031A  3181  213B  3182   	fcall	_lcd_command
  2095  031D                     l1796:
  2096                           
  2097                           ;LCD_LIB.c: 64:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  2098  031D  3006               	movlw	6
  2099  031E  00F7               	movwf	??_lcd_init
  2100  031F  3030               	movlw	48
  2101  0320                     u887:
  2102  0320  0B89               	decfsz	9,f
  2103  0321  2B20               	goto	u887
  2104  0322  0BF7               	decfsz	??_lcd_init,f
  2105  0323  2B20               	goto	u887
  2106  0324  3200               	nop2
  2107  0325                     l1798:
  2108                           
  2109                           ;LCD_LIB.c: 65:     _lcd_params = 0x04 | 0x02 | 0x01;
  2110  0325  3007               	movlw	7
  2111  0326  00F7               	movwf	??_lcd_init
  2112  0327  0877               	movf	??_lcd_init,w
  2113  0328  0020               	movlb	0	; select bank0
  2114  0329  00A7               	movwf	__lcd_params
  2115  032A                     l1800:
  2116                           
  2117                           ;LCD_LIB.c: 66:     lcd_command(0x08 | _lcd_params);
  2118  032A  0827               	movf	__lcd_params,w
  2119  032B  3808               	iorlw	8
  2120  032C  3181  213B  3182   	fcall	_lcd_command
  2121  032F                     l1802:
  2122                           
  2123                           ;LCD_LIB.c: 67:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  2124  032F  3006               	movlw	6
  2125  0330  00F7               	movwf	??_lcd_init
  2126  0331  3030               	movlw	48
  2127  0332                     u897:
  2128  0332  0B89               	decfsz	9,f
  2129  0333  2B32               	goto	u897
  2130  0334  0BF7               	decfsz	??_lcd_init,f
  2131  0335  2B32               	goto	u897
  2132  0336  3200               	nop2
  2133  0337                     l1804:
  2134                           
  2135                           ;LCD_LIB.c: 68:     lcd_command(0x01);
  2136  0337  3001               	movlw	1
  2137  0338  3181  213B  3182   	fcall	_lcd_command
  2138  033B                     l1806:
  2139                           
  2140                           ;LCD_LIB.c: 69:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  2141  033B  3006               	movlw	6
  2142  033C  00F7               	movwf	??_lcd_init
  2143  033D  3030               	movlw	48
  2144  033E                     u907:
  2145  033E  0B89               	decfsz	9,f
  2146  033F  2B3E               	goto	u907
  2147  0340  0BF7               	decfsz	??_lcd_init,f
  2148  0341  2B3E               	goto	u907
  2149  0342  3200               	nop2
  2150  0343                     l50:
  2151  0343  0008               	return
  2152  0344                     __end_of_lcd_init:
  2153                           
  2154                           	psect	text3
  2155  0168                     __ptext3:	
  2156 ;; *************** function _lcd_disable_cursor *****************
  2157 ;; Defined at:
  2158 ;;		line 132 in file "LCD_LIB.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2176 ;;Total ram usage:        1 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 3
  2179 ;; This function calls:
  2180 ;;		_lcd_command
  2181 ;; This function is called by:
  2182 ;;		_SystemInit
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186  0168                     _lcd_disable_cursor:	
  2187                           ;psect for function _lcd_disable_cursor
  2188                           
  2189  0168                     l1814:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _lcd_disable_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2192                           
  2193                           
  2194                           ;LCD_LIB.c: 133:     _lcd_params &= ~0x02;
  2195  0168  30FD               	movlw	253
  2196  0169  00F7               	movwf	??_lcd_disable_cursor
  2197  016A  0877               	movf	??_lcd_disable_cursor,w
  2198  016B  0020               	movlb	0	; select bank0
  2199  016C  05A7               	andwf	__lcd_params,f
  2200  016D                     l1816:
  2201                           
  2202                           ;LCD_LIB.c: 134:     lcd_command(0x08 | _lcd_params);
  2203  016D  0827               	movf	__lcd_params,w
  2204  016E  3808               	iorlw	8
  2205  016F  3181  213B  3181   	fcall	_lcd_command
  2206  0172                     l1818:
  2207                           
  2208                           ;LCD_LIB.c: 135:     _delay((unsigned long)((37)*(8000000UL/4000000.0)));
  2209  0172  3018               	movlw	24
  2210  0173                     u917:
  2211  0173  0B89               	decfsz	9,f
  2212  0174  2973               	goto	u917
  2213  0175  3200               	nop2
  2214  0176                     l96:
  2215  0176  0008               	return
  2216  0177                     __end_of_lcd_disable_cursor:
  2217                           
  2218                           	psect	text4
  2219  0159                     __ptext4:	
  2220 ;; *************** function _lcd_disable_blink *****************
  2221 ;; Defined at:
  2222 ;;		line 121 in file "LCD_LIB.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2240 ;;Total ram usage:        1 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 3
  2243 ;; This function calls:
  2244 ;;		_lcd_command
  2245 ;; This function is called by:
  2246 ;;		_SystemInit
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250  0159                     _lcd_disable_blink:	
  2251                           ;psect for function _lcd_disable_blink
  2252                           
  2253  0159                     l1808:	
  2254                           ;incstack = 0
  2255                           ; Regs used in _lcd_disable_blink: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2256                           
  2257                           
  2258                           ;LCD_LIB.c: 122:     _lcd_params &= ~0x01;
  2259  0159  30FE               	movlw	254
  2260  015A  00F7               	movwf	??_lcd_disable_blink
  2261  015B  0877               	movf	??_lcd_disable_blink,w
  2262  015C  0020               	movlb	0	; select bank0
  2263  015D  05A7               	andwf	__lcd_params,f
  2264  015E                     l1810:
  2265                           
  2266                           ;LCD_LIB.c: 123:     lcd_command(0x08 | _lcd_params);
  2267  015E  0827               	movf	__lcd_params,w
  2268  015F  3808               	iorlw	8
  2269  0160  3181  213B  3181   	fcall	_lcd_command
  2270  0163                     l1812:
  2271                           
  2272                           ;LCD_LIB.c: 124:     _delay((unsigned long)((37)*(8000000UL/4000000.0)));
  2273  0163  3018               	movlw	24
  2274  0164                     u927:
  2275  0164  0B89               	decfsz	9,f
  2276  0165  2964               	goto	u927
  2277  0166  3200               	nop2
  2278  0167                     l90:
  2279  0167  0008               	return
  2280  0168                     __end_of_lcd_disable_blink:
  2281                           
  2282                           	psect	text5
  2283  01AB                     __ptext5:	
  2284 ;; *************** function _configurarPuertos *****************
  2285 ;; Defined at:
  2286 ;;		line 28 in file "SOLUCION.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;		None
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;		None
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2304 ;;Total ram usage:        0 bytes
  2305 ;; Hardware stack levels used: 1
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_SystemInit
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313  01AB                     _configurarPuertos:	
  2314                           ;psect for function _configurarPuertos
  2315                           
  2316  01AB                     l1830:	
  2317                           ;incstack = 0
  2318                           ; Regs used in _configurarPuertos: [wreg]
  2319                           
  2320                           
  2321                           ;SOLUCION.c: 30:     ANSELAbits.ANSA0= 1;
  2322  01AB  0023               	movlb	3	; select bank3
  2323  01AC  140C               	bsf	12,0	;volatile
  2324                           
  2325                           ;SOLUCION.c: 31:     ANSELAbits.ANSA1 = 1;
  2326  01AD  148C               	bsf	12,1	;volatile
  2327                           
  2328                           ;SOLUCION.c: 32:     TRISAbits.TRISA0 = 1;
  2329  01AE  0021               	movlb	1	; select bank1
  2330  01AF  140C               	bsf	12,0	;volatile
  2331                           
  2332                           ;SOLUCION.c: 33:     TRISAbits.TRISA1 = 1;
  2333  01B0  148C               	bsf	12,1	;volatile
  2334                           
  2335                           ;SOLUCION.c: 36:     ANSELBbits.ANSB3 = 0;
  2336  01B1  0023               	movlb	3	; select bank3
  2337  01B2  118D               	bcf	13,3	;volatile
  2338                           
  2339                           ;SOLUCION.c: 37:     ANSELBbits.ANSB4 = 0;
  2340  01B3  120D               	bcf	13,4	;volatile
  2341                           
  2342                           ;SOLUCION.c: 38:     ANSELDbits.ANSD2 = 0;
  2343  01B4  110F               	bcf	15,2	;volatile
  2344                           
  2345                           ;SOLUCION.c: 39:     ANSELDbits.ANSD3 = 0;
  2346  01B5  118F               	bcf	15,3	;volatile
  2347                           
  2348                           ;SOLUCION.c: 41:     TRISBbits.TRISB3 = 0;
  2349  01B6  0021               	movlb	1	; select bank1
  2350  01B7  118D               	bcf	13,3	;volatile
  2351                           
  2352                           ;SOLUCION.c: 42:     TRISBbits.TRISB4 = 0;
  2353  01B8  120D               	bcf	13,4	;volatile
  2354                           
  2355                           ;SOLUCION.c: 43:     TRISDbits.TRISD2 = 0;
  2356  01B9  110F               	bcf	15,2	;volatile
  2357                           
  2358                           ;SOLUCION.c: 44:     TRISDbits.TRISD3 = 0;
  2359  01BA  118F               	bcf	15,3	;volatile
  2360                           
  2361                           ;SOLUCION.c: 46:     LATBbits.LATB3 = 0;
  2362  01BB  0022               	movlb	2	; select bank2
  2363  01BC  118D               	bcf	13,3	;volatile
  2364                           
  2365                           ;SOLUCION.c: 47:     LATBbits.LATB4 = 0;
  2366  01BD  120D               	bcf	13,4	;volatile
  2367                           
  2368                           ;SOLUCION.c: 48:     LATDbits.LATD2 = 0;
  2369  01BE  110F               	bcf	15,2	;volatile
  2370                           
  2371                           ;SOLUCION.c: 49:     LATDbits.LATD3 = 0;
  2372  01BF  118F               	bcf	15,3	;volatile
  2373                           
  2374                           ;SOLUCION.c: 52:     OPTION_REGbits.nWPUEN = 0;
  2375  01C0  0021               	movlb	1	; select bank1
  2376  01C1  1395               	bcf	21,7	;volatile
  2377  01C2                     l1832:
  2378                           
  2379                           ;SOLUCION.c: 53:     WPUB = 0x07;
  2380  01C2  3007               	movlw	7
  2381  01C3  0024               	movlb	4	; select bank4
  2382  01C4  008D               	movwf	13	;volatile
  2383  01C5                     l1834:
  2384                           
  2385                           ;SOLUCION.c: 54:     ANSELBbits.ANSB0 = 0;
  2386  01C5  0023               	movlb	3	; select bank3
  2387  01C6  100D               	bcf	13,0	;volatile
  2388  01C7                     l1836:
  2389                           
  2390                           ;SOLUCION.c: 55:     ANSELBbits.ANSB1 = 0;
  2391  01C7  108D               	bcf	13,1	;volatile
  2392  01C8                     l1838:
  2393                           
  2394                           ;SOLUCION.c: 56:     ANSELBbits.ANSB2 = 0;
  2395  01C8  110D               	bcf	13,2	;volatile
  2396  01C9                     l1840:
  2397                           
  2398                           ;SOLUCION.c: 58:     TRISBbits.TRISB0 = 1;
  2399  01C9  0021               	movlb	1	; select bank1
  2400  01CA  140D               	bsf	13,0	;volatile
  2401  01CB                     l1842:
  2402                           
  2403                           ;SOLUCION.c: 59:     TRISBbits.TRISB1 = 1;
  2404  01CB  148D               	bsf	13,1	;volatile
  2405  01CC                     l1844:
  2406                           
  2407                           ;SOLUCION.c: 60:     TRISBbits.TRISB2 = 1;
  2408  01CC  150D               	bsf	13,2	;volatile
  2409  01CD                     l209:
  2410  01CD  0008               	return
  2411  01CE                     __end_of_configurarPuertos:
  2412                           
  2413                           	psect	text6
  2414  0131                     __ptext6:	
  2415 ;; *************** function _MenuTemp *****************
  2416 ;; Defined at:
  2417 ;;		line 287 in file "SOLUCION.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		None
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2435 ;;Total ram usage:        0 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444  0131                     _MenuTemp:	
  2445                           ;psect for function _MenuTemp
  2446                           
  2447  0131                     l346:	
  2448                           ;incstack = 0
  2449                           ; Regs used in _MenuTemp: []
  2450                           
  2451  0131  0008               	return
  2452  0132                     __end_of_MenuTemp:
  2453                           
  2454                           	psect	text7
  2455  067E                     __ptext7:	
  2456 ;; *************** function _MenuSensores *****************
  2457 ;; Defined at:
  2458 ;;		line 131 in file "SOLUCION.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2475 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2476 ;;Total ram usage:        2 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 5
  2479 ;; This function calls:
  2480 ;;		_lcd_char
  2481 ;;		_lcd_out
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487  067E                     _MenuSensores:	
  2488                           ;psect for function _MenuSensores
  2489                           
  2490  067E                     l1958:	
  2491                           ;incstack = 0
  2492                           ; Regs used in _MenuSensores: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2493                           
  2494                           
  2495                           ;SOLUCION.c: 132:     lcd_out(1,1,"   MENU SENSORES    ");
  2496  067E  01FB               	clrf	lcd_out@col
  2497  067F  0AFB               	incf	lcd_out@col,f
  2498  0680  30D2               	movlw	low (STR_5| (0+32768))
  2499  0681  00FC               	movwf	lcd_out@str
  2500  0682  3088               	movlw	high (STR_5| (0+32768))
  2501  0683  00FD               	movwf	lcd_out@str+1
  2502  0684  3001               	movlw	1
  2503  0685  3181  218A  3186   	fcall	_lcd_out
  2504                           
  2505                           ;SOLUCION.c: 133:     lcd_out(2,1,"1.TEMP    2.LDR     ");
  2506  0688  01FB               	clrf	lcd_out@col
  2507  0689  0AFB               	incf	lcd_out@col,f
  2508  068A  3093               	movlw	low (STR_6| (0+32768))
  2509  068B  00FC               	movwf	lcd_out@str
  2510  068C  3088               	movlw	high (STR_6| (0+32768))
  2511  068D  00FD               	movwf	lcd_out@str+1
  2512  068E  3002               	movlw	2
  2513  068F  3181  218A  3186   	fcall	_lcd_out
  2514                           
  2515                           ;SOLUCION.c: 134:     lcd_out(3,1,"3.DHT     4.BACK    ");
  2516  0692  01FB               	clrf	lcd_out@col
  2517  0693  0AFB               	incf	lcd_out@col,f
  2518  0694  30BD               	movlw	low (STR_7| (0+32768))
  2519  0695  00FC               	movwf	lcd_out@str
  2520  0696  3088               	movlw	high (STR_7| (0+32768))
  2521  0697  00FD               	movwf	lcd_out@str+1
  2522  0698  3003               	movlw	3
  2523  0699  3181  218A  3186   	fcall	_lcd_out
  2524                           
  2525                           ;SOLUCION.c: 135:     lcd_out(4,1,"OP:                 ");
  2526  069C  01FB               	clrf	lcd_out@col
  2527  069D  0AFB               	incf	lcd_out@col,f
  2528  069E  3000               	movlw	low (STR_4| (0+32768))
  2529  069F  00FC               	movwf	lcd_out@str
  2530  06A0  3088               	movlw	high (STR_4| (0+32768))
  2531  06A1  00FD               	movwf	lcd_out@str+1
  2532  06A2  3004               	movlw	4
  2533  06A3  3181  218A  3186   	fcall	_lcd_out
  2534                           
  2535                           ;SOLUCION.c: 136:     lcd_char(4,4,op+48);
  2536  06A6  3004               	movlw	4
  2537  06A7  0020               	movlb	0	; select bank0
  2538  06A8  00A2               	movwf	??_MenuSensores
  2539  06A9  0822               	movf	??_MenuSensores,w
  2540  06AA  00FB               	movwf	lcd_char@col
  2541  06AB  0828               	movf	_op,w
  2542  06AC  3E30               	addlw	48
  2543  06AD  00A3               	movwf	??_MenuSensores+1
  2544  06AE  0823               	movf	??_MenuSensores+1,w
  2545  06AF  00FC               	movwf	lcd_char@letra
  2546  06B0  3004               	movlw	4
  2547  06B1  3181  214A  3186   	fcall	_lcd_char
  2548                           
  2549                           ;SOLUCION.c: 137:     switch(op){
  2550  06B4  2F85               	goto	l1970
  2551  06B5                     l1960:
  2552  06B5  3007               	movlw	7
  2553  06B6  00A2               	movwf	??_MenuSensores
  2554  06B7  0822               	movf	??_MenuSensores,w
  2555  06B8  00FB               	movwf	lcd_char@col
  2556  06B9  303C               	movlw	60
  2557  06BA  00A3               	movwf	??_MenuSensores+1
  2558  06BB  0823               	movf	??_MenuSensores+1,w
  2559  06BC  00FC               	movwf	lcd_char@letra
  2560  06BD  3002               	movlw	2
  2561  06BE  3181  214A  3186   	fcall	_lcd_char
  2562                           
  2563                           ;SOLUCION.c: 139:                 lcd_char(2,16,' ');
  2564  06C1  3010               	movlw	16
  2565  06C2  0020               	movlb	0	; select bank0
  2566  06C3  00A2               	movwf	??_MenuSensores
  2567  06C4  0822               	movf	??_MenuSensores,w
  2568  06C5  00FB               	movwf	lcd_char@col
  2569  06C6  3020               	movlw	32
  2570  06C7  00A3               	movwf	??_MenuSensores+1
  2571  06C8  0823               	movf	??_MenuSensores+1,w
  2572  06C9  00FC               	movwf	lcd_char@letra
  2573  06CA  3002               	movlw	2
  2574  06CB  3181  214A  3186   	fcall	_lcd_char
  2575                           
  2576                           ;SOLUCION.c: 140:                 lcd_char(3,6,' ');
  2577  06CE  3006               	movlw	6
  2578  06CF  0020               	movlb	0	; select bank0
  2579  06D0  00A2               	movwf	??_MenuSensores
  2580  06D1  0822               	movf	??_MenuSensores,w
  2581  06D2  00FB               	movwf	lcd_char@col
  2582  06D3  3020               	movlw	32
  2583  06D4  00A3               	movwf	??_MenuSensores+1
  2584  06D5  0823               	movf	??_MenuSensores+1,w
  2585  06D6  00FC               	movwf	lcd_char@letra
  2586  06D7  3003               	movlw	3
  2587  06D8  3181  214A  3186   	fcall	_lcd_char
  2588                           
  2589                           ;SOLUCION.c: 141:                 lcd_char(3,17,' ');
  2590  06DB  3011               	movlw	17
  2591  06DC  0020               	movlb	0	; select bank0
  2592  06DD  00A2               	movwf	??_MenuSensores
  2593  06DE  0822               	movf	??_MenuSensores,w
  2594  06DF  00FB               	movwf	lcd_char@col
  2595  06E0  3020               	movlw	32
  2596  06E1  00A3               	movwf	??_MenuSensores+1
  2597  06E2  0823               	movf	??_MenuSensores+1,w
  2598  06E3  00FC               	movwf	lcd_char@letra
  2599  06E4  3003               	movlw	3
  2600  06E5  3181  214A  3186   	fcall	_lcd_char
  2601                           
  2602                           ;SOLUCION.c: 142:                 break;
  2603  06E8  2F9C               	goto	l259
  2604  06E9                     l1962:
  2605  06E9  3007               	movlw	7
  2606  06EA  00A2               	movwf	??_MenuSensores
  2607  06EB  0822               	movf	??_MenuSensores,w
  2608  06EC  00FB               	movwf	lcd_char@col
  2609  06ED  3020               	movlw	32
  2610  06EE  00A3               	movwf	??_MenuSensores+1
  2611  06EF  0823               	movf	??_MenuSensores+1,w
  2612  06F0  00FC               	movwf	lcd_char@letra
  2613  06F1  3002               	movlw	2
  2614  06F2  3181  214A  3186   	fcall	_lcd_char
  2615                           
  2616                           ;SOLUCION.c: 144:                 lcd_char(2,16,'<');
  2617  06F5  3010               	movlw	16
  2618  06F6  0020               	movlb	0	; select bank0
  2619  06F7  00A2               	movwf	??_MenuSensores
  2620  06F8  0822               	movf	??_MenuSensores,w
  2621  06F9  00FB               	movwf	lcd_char@col
  2622  06FA  303C               	movlw	60
  2623  06FB  00A3               	movwf	??_MenuSensores+1
  2624  06FC  0823               	movf	??_MenuSensores+1,w
  2625  06FD  00FC               	movwf	lcd_char@letra
  2626  06FE  3002               	movlw	2
  2627  06FF  3181  214A  3186   	fcall	_lcd_char
  2628                           
  2629                           ;SOLUCION.c: 145:                 lcd_char(3,6,' ');
  2630  0702  3006               	movlw	6
  2631  0703  0020               	movlb	0	; select bank0
  2632  0704  00A2               	movwf	??_MenuSensores
  2633  0705  0822               	movf	??_MenuSensores,w
  2634  0706  00FB               	movwf	lcd_char@col
  2635  0707  3020               	movlw	32
  2636  0708  00A3               	movwf	??_MenuSensores+1
  2637  0709  0823               	movf	??_MenuSensores+1,w
  2638  070A  00FC               	movwf	lcd_char@letra
  2639  070B  3003               	movlw	3
  2640  070C  3181  214A  3186   	fcall	_lcd_char
  2641                           
  2642                           ;SOLUCION.c: 146:                 lcd_char(3,17,' ');
  2643  070F  3011               	movlw	17
  2644  0710  0020               	movlb	0	; select bank0
  2645  0711  00A2               	movwf	??_MenuSensores
  2646  0712  0822               	movf	??_MenuSensores,w
  2647  0713  00FB               	movwf	lcd_char@col
  2648  0714  3020               	movlw	32
  2649  0715  00A3               	movwf	??_MenuSensores+1
  2650  0716  0823               	movf	??_MenuSensores+1,w
  2651  0717  00FC               	movwf	lcd_char@letra
  2652  0718  3003               	movlw	3
  2653  0719  3181  214A  3186   	fcall	_lcd_char
  2654                           
  2655                           ;SOLUCION.c: 147:                 break;
  2656  071C  2F9C               	goto	l259
  2657  071D                     l1964:
  2658  071D  3007               	movlw	7
  2659  071E  00A2               	movwf	??_MenuSensores
  2660  071F  0822               	movf	??_MenuSensores,w
  2661  0720  00FB               	movwf	lcd_char@col
  2662  0721  3020               	movlw	32
  2663  0722  00A3               	movwf	??_MenuSensores+1
  2664  0723  0823               	movf	??_MenuSensores+1,w
  2665  0724  00FC               	movwf	lcd_char@letra
  2666  0725  3002               	movlw	2
  2667  0726  3181  214A  3186   	fcall	_lcd_char
  2668                           
  2669                           ;SOLUCION.c: 149:                 lcd_char(2,16,' ');
  2670  0729  3010               	movlw	16
  2671  072A  0020               	movlb	0	; select bank0
  2672  072B  00A2               	movwf	??_MenuSensores
  2673  072C  0822               	movf	??_MenuSensores,w
  2674  072D  00FB               	movwf	lcd_char@col
  2675  072E  3020               	movlw	32
  2676  072F  00A3               	movwf	??_MenuSensores+1
  2677  0730  0823               	movf	??_MenuSensores+1,w
  2678  0731  00FC               	movwf	lcd_char@letra
  2679  0732  3002               	movlw	2
  2680  0733  3181  214A  3186   	fcall	_lcd_char
  2681                           
  2682                           ;SOLUCION.c: 150:                 lcd_char(3,6,'<');
  2683  0736  3006               	movlw	6
  2684  0737  0020               	movlb	0	; select bank0
  2685  0738  00A2               	movwf	??_MenuSensores
  2686  0739  0822               	movf	??_MenuSensores,w
  2687  073A  00FB               	movwf	lcd_char@col
  2688  073B  303C               	movlw	60
  2689  073C  00A3               	movwf	??_MenuSensores+1
  2690  073D  0823               	movf	??_MenuSensores+1,w
  2691  073E  00FC               	movwf	lcd_char@letra
  2692  073F  3003               	movlw	3
  2693  0740  3181  214A  3186   	fcall	_lcd_char
  2694                           
  2695                           ;SOLUCION.c: 151:                 lcd_char(3,17,' ');
  2696  0743  3011               	movlw	17
  2697  0744  0020               	movlb	0	; select bank0
  2698  0745  00A2               	movwf	??_MenuSensores
  2699  0746  0822               	movf	??_MenuSensores,w
  2700  0747  00FB               	movwf	lcd_char@col
  2701  0748  3020               	movlw	32
  2702  0749  00A3               	movwf	??_MenuSensores+1
  2703  074A  0823               	movf	??_MenuSensores+1,w
  2704  074B  00FC               	movwf	lcd_char@letra
  2705  074C  3003               	movlw	3
  2706  074D  3181  214A  3186   	fcall	_lcd_char
  2707                           
  2708                           ;SOLUCION.c: 152:                 break;
  2709  0750  2F9C               	goto	l259
  2710  0751                     l1966:
  2711  0751  3007               	movlw	7
  2712  0752  00A2               	movwf	??_MenuSensores
  2713  0753  0822               	movf	??_MenuSensores,w
  2714  0754  00FB               	movwf	lcd_char@col
  2715  0755  3020               	movlw	32
  2716  0756  00A3               	movwf	??_MenuSensores+1
  2717  0757  0823               	movf	??_MenuSensores+1,w
  2718  0758  00FC               	movwf	lcd_char@letra
  2719  0759  3002               	movlw	2
  2720  075A  3181  214A  3186   	fcall	_lcd_char
  2721                           
  2722                           ;SOLUCION.c: 154:                 lcd_char(2,16,' ');
  2723  075D  3010               	movlw	16
  2724  075E  0020               	movlb	0	; select bank0
  2725  075F  00A2               	movwf	??_MenuSensores
  2726  0760  0822               	movf	??_MenuSensores,w
  2727  0761  00FB               	movwf	lcd_char@col
  2728  0762  3020               	movlw	32
  2729  0763  00A3               	movwf	??_MenuSensores+1
  2730  0764  0823               	movf	??_MenuSensores+1,w
  2731  0765  00FC               	movwf	lcd_char@letra
  2732  0766  3002               	movlw	2
  2733  0767  3181  214A  3186   	fcall	_lcd_char
  2734                           
  2735                           ;SOLUCION.c: 155:                 lcd_char(3,6,' ');
  2736  076A  3006               	movlw	6
  2737  076B  0020               	movlb	0	; select bank0
  2738  076C  00A2               	movwf	??_MenuSensores
  2739  076D  0822               	movf	??_MenuSensores,w
  2740  076E  00FB               	movwf	lcd_char@col
  2741  076F  3020               	movlw	32
  2742  0770  00A3               	movwf	??_MenuSensores+1
  2743  0771  0823               	movf	??_MenuSensores+1,w
  2744  0772  00FC               	movwf	lcd_char@letra
  2745  0773  3003               	movlw	3
  2746  0774  3181  214A  3186   	fcall	_lcd_char
  2747                           
  2748                           ;SOLUCION.c: 156:                 lcd_char(3,17,'<');
  2749  0777  3011               	movlw	17
  2750  0778  0020               	movlb	0	; select bank0
  2751  0779  00A2               	movwf	??_MenuSensores
  2752  077A  0822               	movf	??_MenuSensores,w
  2753  077B  00FB               	movwf	lcd_char@col
  2754  077C  303C               	movlw	60
  2755  077D  00A3               	movwf	??_MenuSensores+1
  2756  077E  0823               	movf	??_MenuSensores+1,w
  2757  077F  00FC               	movwf	lcd_char@letra
  2758  0780  3003               	movlw	3
  2759  0781  3181  214A  3186   	fcall	_lcd_char
  2760                           
  2761                           ;SOLUCION.c: 157:                 break;
  2762  0784  2F9C               	goto	l259
  2763  0785                     l1970:
  2764  0785  0020               	movlb	0	; select bank0
  2765  0786  0828               	movf	_op,w
  2766  0787  00A2               	movwf	??_MenuSensores
  2767  0788  01A3               	clrf	??_MenuSensores+1
  2768                           
  2769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2770                           ; Switch size 1, requested type "simple"
  2771                           ; Number of cases is 1, Range of values is 0 to 0
  2772                           ; switch strategies available:
  2773                           ; Name         Instructions Cycles
  2774                           ; simple_byte            4     3 (average)
  2775                           ; direct_byte            8     6 (fixed)
  2776                           ; jumptable            260     6 (fixed)
  2777                           ;	Chosen strategy is simple_byte
  2778  0789  0823               	movf	??_MenuSensores+1,w
  2779  078A  3A00               	xorlw	0	; case 0
  2780  078B  1903               	skipnz
  2781  078C  2F8E               	goto	l2374
  2782  078D  2F9C               	goto	l259
  2783  078E                     l2374:
  2784                           
  2785                           ; Switch size 1, requested type "simple"
  2786                           ; Number of cases is 4, Range of values is 1 to 4
  2787                           ; switch strategies available:
  2788                           ; Name         Instructions Cycles
  2789                           ; simple_byte           13     7 (average)
  2790                           ; direct_byte           17     9 (fixed)
  2791                           ; jumptable            263     9 (fixed)
  2792                           ;	Chosen strategy is simple_byte
  2793  078E  0822               	movf	??_MenuSensores,w
  2794  078F  3A01               	xorlw	1	; case 1
  2795  0790  1903               	skipnz
  2796  0791  2EB5               	goto	l1960
  2797  0792  3A03               	xorlw	3	; case 2
  2798  0793  1903               	skipnz
  2799  0794  2EE9               	goto	l1962
  2800  0795  3A01               	xorlw	1	; case 3
  2801  0796  1903               	skipnz
  2802  0797  2F1D               	goto	l1964
  2803  0798  3A07               	xorlw	7	; case 4
  2804  0799  1903               	skipnz
  2805  079A  2F51               	goto	l1966
  2806  079B  2F9C               	goto	l259
  2807  079C                     l259:
  2808                           
  2809                           ;SOLUCION.c: 159:     if( PORTBbits.RB0 == 0 ){
  2810  079C  0020               	movlb	0	; select bank0
  2811  079D  180D               	btfsc	13,0	;volatile
  2812  079E  2FA0               	goto	u651
  2813  079F  2FA1               	goto	u650
  2814  07A0                     u651:
  2815  07A0  2FB1               	goto	l263
  2816  07A1                     u650:
  2817  07A1                     l264:
  2818  07A1  1C0D               	btfss	13,0	;volatile
  2819  07A2  2FA4               	goto	u661
  2820  07A3  2FA5               	goto	u660
  2821  07A4                     u661:
  2822  07A4  2FA1               	goto	l264
  2823  07A5                     u660:
  2824  07A5                     l1974:
  2825                           
  2826                           ;SOLUCION.c: 161:         op++;
  2827  07A5  3001               	movlw	1
  2828  07A6  00A2               	movwf	??_MenuSensores
  2829  07A7  0822               	movf	??_MenuSensores,w
  2830  07A8  07A8               	addwf	_op,f
  2831  07A9                     l1976:
  2832                           
  2833                           ;SOLUCION.c: 162:         if(op>4)
  2834  07A9  3005               	movlw	5
  2835  07AA  0228               	subwf	_op,w
  2836  07AB  1C03               	skipc
  2837  07AC  2FAE               	goto	u671
  2838  07AD  2FAF               	goto	u670
  2839  07AE                     u671:
  2840  07AE  2FB1               	goto	l263
  2841  07AF                     u670:
  2842  07AF                     l1978:
  2843                           
  2844                           ;SOLUCION.c: 163:             op=1;
  2845  07AF  01A8               	clrf	_op
  2846  07B0  0AA8               	incf	_op,f
  2847  07B1                     l263:	
  2848                           ;SOLUCION.c: 164:     }
  2849                           
  2850                           
  2851                           ;SOLUCION.c: 165:     if( PORTBbits.RB1 == 0 ){
  2852  07B1  188D               	btfsc	13,1	;volatile
  2853  07B2  2FB4               	goto	u681
  2854  07B3  2FB5               	goto	u680
  2855  07B4                     u681:
  2856  07B4  2FC4               	goto	l1986
  2857  07B5                     u680:
  2858  07B5                     l269:
  2859  07B5  1C8D               	btfss	13,1	;volatile
  2860  07B6  2FB8               	goto	u691
  2861  07B7  2FB9               	goto	u690
  2862  07B8                     u691:
  2863  07B8  2FB5               	goto	l269
  2864  07B9                     u690:
  2865  07B9                     l1982:
  2866                           
  2867                           ;SOLUCION.c: 167:         op--;
  2868  07B9  3001               	movlw	1
  2869  07BA  02A8               	subwf	_op,f
  2870                           
  2871                           ;SOLUCION.c: 168:         if(op<1)
  2872  07BB  0828               	movf	_op,w
  2873  07BC  1D03               	btfss	3,2
  2874  07BD  2FBF               	goto	u701
  2875  07BE  2FC0               	goto	u700
  2876  07BF                     u701:
  2877  07BF  2FC4               	goto	l1986
  2878  07C0                     u700:
  2879  07C0                     l1984:
  2880                           
  2881                           ;SOLUCION.c: 169:             op=4;
  2882  07C0  3004               	movlw	4
  2883  07C1  00A2               	movwf	??_MenuSensores
  2884  07C2  0822               	movf	??_MenuSensores,w
  2885  07C3  00A8               	movwf	_op
  2886  07C4                     l1986:
  2887                           
  2888                           ;SOLUCION.c: 171:     if( PORTBbits.RB2 == 0 ){
  2889  07C4  190D               	btfsc	13,2	;volatile
  2890  07C5  2FC7               	goto	u711
  2891  07C6  2FC8               	goto	u710
  2892  07C7                     u711:
  2893  07C7  2FF6               	goto	l283
  2894  07C8                     u710:
  2895  07C8                     l274:
  2896  07C8  1D0D               	btfss	13,2	;volatile
  2897  07C9  2FCB               	goto	u721
  2898  07CA  2FCC               	goto	u720
  2899  07CB                     u721:
  2900  07CB  2FC8               	goto	l274
  2901  07CC                     u720:
  2902  07CC  2FDE               	goto	l2000
  2903  07CD                     l1990:
  2904  07CD  3004               	movlw	4
  2905  07CE  00A2               	movwf	??_MenuSensores
  2906  07CF  0822               	movf	??_MenuSensores,w
  2907  07D0  00A6               	movwf	_currentMenu
  2908  07D1  2FF4               	goto	l279
  2909  07D2                     l1992:
  2910  07D2  3005               	movlw	5
  2911  07D3  00A2               	movwf	??_MenuSensores
  2912  07D4  0822               	movf	??_MenuSensores,w
  2913  07D5  00A6               	movwf	_currentMenu
  2914  07D6  2FF4               	goto	l279
  2915  07D7                     l1994:
  2916  07D7  3006               	movlw	6
  2917  07D8  00A2               	movwf	??_MenuSensores
  2918  07D9  0822               	movf	??_MenuSensores,w
  2919  07DA  00A6               	movwf	_currentMenu
  2920  07DB  2FF4               	goto	l279
  2921  07DC                     l1996:
  2922  07DC  01A6               	clrf	_currentMenu
  2923  07DD  2FF4               	goto	l279
  2924  07DE                     l2000:
  2925  07DE  0828               	movf	_op,w
  2926  07DF  00A2               	movwf	??_MenuSensores
  2927  07E0  01A3               	clrf	??_MenuSensores+1
  2928                           
  2929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2930                           ; Switch size 1, requested type "simple"
  2931                           ; Number of cases is 1, Range of values is 0 to 0
  2932                           ; switch strategies available:
  2933                           ; Name         Instructions Cycles
  2934                           ; simple_byte            4     3 (average)
  2935                           ; direct_byte            8     6 (fixed)
  2936                           ; jumptable            260     6 (fixed)
  2937                           ;	Chosen strategy is simple_byte
  2938  07E1  0823               	movf	??_MenuSensores+1,w
  2939  07E2  3A00               	xorlw	0	; case 0
  2940  07E3  1903               	skipnz
  2941  07E4  2FE6               	goto	l2376
  2942  07E5  2FF4               	goto	l279
  2943  07E6                     l2376:
  2944                           
  2945                           ; Switch size 1, requested type "simple"
  2946                           ; Number of cases is 4, Range of values is 1 to 4
  2947                           ; switch strategies available:
  2948                           ; Name         Instructions Cycles
  2949                           ; simple_byte           13     7 (average)
  2950                           ; direct_byte           17     9 (fixed)
  2951                           ; jumptable            263     9 (fixed)
  2952                           ;	Chosen strategy is simple_byte
  2953  07E6  0822               	movf	??_MenuSensores,w
  2954  07E7  3A01               	xorlw	1	; case 1
  2955  07E8  1903               	skipnz
  2956  07E9  2FCD               	goto	l1990
  2957  07EA  3A03               	xorlw	3	; case 2
  2958  07EB  1903               	skipnz
  2959  07EC  2FD2               	goto	l1992
  2960  07ED  3A01               	xorlw	1	; case 3
  2961  07EE  1903               	skipnz
  2962  07EF  2FD7               	goto	l1994
  2963  07F0  3A07               	xorlw	7	; case 4
  2964  07F1  1903               	skipnz
  2965  07F2  2FDC               	goto	l1996
  2966  07F3  2FF4               	goto	l279
  2967  07F4                     l279:
  2968                           
  2969                           ;SOLUCION.c: 179:         op=1;
  2970  07F4  01A8               	clrf	_op
  2971  07F5  0AA8               	incf	_op,f
  2972  07F6                     l283:
  2973  07F6  0008               	return
  2974  07F7                     __end_of_MenuSensores:
  2975                           
  2976                           	psect	text8
  2977  0130                     __ptext8:	
  2978 ;; *************** function _MenuRELOJ *****************
  2979 ;; Defined at:
  2980 ;;		line 284 in file "SOLUCION.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		None
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;Total ram usage:        0 bytes
  2999 ;; Hardware stack levels used: 1
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007  0130                     _MenuRELOJ:	
  3008                           ;psect for function _MenuRELOJ
  3009                           
  3010  0130                     l343:	
  3011                           ;incstack = 0
  3012                           ; Regs used in _MenuRELOJ: []
  3013                           
  3014  0130  0008               	return
  3015  0131                     __end_of_MenuRELOJ:
  3016                           
  3017                           	psect	text9
  3018  056A                     __ptext9:	
  3019 ;; *************** function _MenuPPAL *****************
  3020 ;; Defined at:
  3021 ;;		line 88 in file "SOLUCION.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;		None
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3039 ;;Total ram usage:        2 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 5
  3042 ;; This function calls:
  3043 ;;		_lcd_char
  3044 ;;		_lcd_out
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050  056A                     _MenuPPAL:	
  3051                           ;psect for function _MenuPPAL
  3052                           
  3053  056A                     l1864:	
  3054                           ;incstack = 0
  3055                           ; Regs used in _MenuPPAL: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3056                           
  3057                           
  3058                           ;SOLUCION.c: 89:     lcd_out(1,1,"     MENU PPAL      ");
  3059  056A  01FB               	clrf	lcd_out@col
  3060  056B  0AFB               	incf	lcd_out@col,f
  3061  056C  3054               	movlw	low (STR_1| (0+32768))
  3062  056D  00FC               	movwf	lcd_out@str
  3063  056E  3088               	movlw	high (STR_1| (0+32768))
  3064  056F  00FD               	movwf	lcd_out@str+1
  3065  0570  3001               	movlw	1
  3066  0571  3181  218A  3185   	fcall	_lcd_out
  3067                           
  3068                           ;SOLUCION.c: 90:     lcd_out(2,1,"1.Sensor  2.Motores ");
  3069  0574  01FB               	clrf	lcd_out@col
  3070  0575  0AFB               	incf	lcd_out@col,f
  3071  0576  3011               	movlw	low (STR_2| (0+32768))
  3072  0577  00FC               	movwf	lcd_out@str
  3073  0578  3089               	movlw	high (STR_2| (0+32768))
  3074  0579  00FD               	movwf	lcd_out@str+1
  3075  057A  3002               	movlw	2
  3076  057B  3181  218A  3185   	fcall	_lcd_out
  3077                           
  3078                           ;SOLUCION.c: 91:     lcd_out(3,1,"3.Reloj             ");
  3079  057E  01FB               	clrf	lcd_out@col
  3080  057F  0AFB               	incf	lcd_out@col,f
  3081  0580  3015               	movlw	low (STR_3| (0+32768))
  3082  0581  00FC               	movwf	lcd_out@str
  3083  0582  3088               	movlw	high (STR_3| (0+32768))
  3084  0583  00FD               	movwf	lcd_out@str+1
  3085  0584  3003               	movlw	3
  3086  0585  3181  218A  3185   	fcall	_lcd_out
  3087                           
  3088                           ;SOLUCION.c: 92:     lcd_out(4,1,"OP:                 ");
  3089  0588  01FB               	clrf	lcd_out@col
  3090  0589  0AFB               	incf	lcd_out@col,f
  3091  058A  3000               	movlw	low (STR_4| (0+32768))
  3092  058B  00FC               	movwf	lcd_out@str
  3093  058C  3088               	movlw	high (STR_4| (0+32768))
  3094  058D  00FD               	movwf	lcd_out@str+1
  3095  058E  3004               	movlw	4
  3096  058F  3181  218A  3185   	fcall	_lcd_out
  3097                           
  3098                           ;SOLUCION.c: 93:     lcd_char(4,4,op+48);
  3099  0592  3004               	movlw	4
  3100  0593  0020               	movlb	0	; select bank0
  3101  0594  00A2               	movwf	??_MenuPPAL
  3102  0595  0822               	movf	??_MenuPPAL,w
  3103  0596  00FB               	movwf	lcd_char@col
  3104  0597  0828               	movf	_op,w
  3105  0598  3E30               	addlw	48
  3106  0599  00A3               	movwf	??_MenuPPAL+1
  3107  059A  0823               	movf	??_MenuPPAL+1,w
  3108  059B  00FC               	movwf	lcd_char@letra
  3109  059C  3004               	movlw	4
  3110  059D  3181  214A  3185   	fcall	_lcd_char
  3111                           
  3112                           ;SOLUCION.c: 94:     switch(op){
  3113  05A0  2E16               	goto	l1874
  3114  05A1                     l1866:
  3115  05A1  3009               	movlw	9
  3116  05A2  00A2               	movwf	??_MenuPPAL
  3117  05A3  0822               	movf	??_MenuPPAL,w
  3118  05A4  00FB               	movwf	lcd_char@col
  3119  05A5  303C               	movlw	60
  3120  05A6  00A3               	movwf	??_MenuPPAL+1
  3121  05A7  0823               	movf	??_MenuPPAL+1,w
  3122  05A8  00FC               	movwf	lcd_char@letra
  3123  05A9  3002               	movlw	2
  3124  05AA  3181  214A  3185   	fcall	_lcd_char
  3125                           
  3126                           ;SOLUCION.c: 96:                 lcd_char(2,20,' ');
  3127  05AD  3014               	movlw	20
  3128  05AE  0020               	movlb	0	; select bank0
  3129  05AF  00A2               	movwf	??_MenuPPAL
  3130  05B0  0822               	movf	??_MenuPPAL,w
  3131  05B1  00FB               	movwf	lcd_char@col
  3132  05B2  3020               	movlw	32
  3133  05B3  00A3               	movwf	??_MenuPPAL+1
  3134  05B4  0823               	movf	??_MenuPPAL+1,w
  3135  05B5  00FC               	movwf	lcd_char@letra
  3136  05B6  3002               	movlw	2
  3137  05B7  3181  214A  3185   	fcall	_lcd_char
  3138                           
  3139                           ;SOLUCION.c: 97:                 lcd_char(3,8,' ');
  3140  05BA  3008               	movlw	8
  3141  05BB  0020               	movlb	0	; select bank0
  3142  05BC  00A2               	movwf	??_MenuPPAL
  3143  05BD  0822               	movf	??_MenuPPAL,w
  3144  05BE  00FB               	movwf	lcd_char@col
  3145  05BF  3020               	movlw	32
  3146  05C0  00A3               	movwf	??_MenuPPAL+1
  3147  05C1  0823               	movf	??_MenuPPAL+1,w
  3148  05C2  00FC               	movwf	lcd_char@letra
  3149  05C3  3003               	movlw	3
  3150  05C4  3181  214A  3185   	fcall	_lcd_char
  3151                           
  3152                           ;SOLUCION.c: 98:                 break;
  3153  05C7  2E2A               	goto	l232
  3154  05C8                     l1868:
  3155  05C8  3009               	movlw	9
  3156  05C9  00A2               	movwf	??_MenuPPAL
  3157  05CA  0822               	movf	??_MenuPPAL,w
  3158  05CB  00FB               	movwf	lcd_char@col
  3159  05CC  3020               	movlw	32
  3160  05CD  00A3               	movwf	??_MenuPPAL+1
  3161  05CE  0823               	movf	??_MenuPPAL+1,w
  3162  05CF  00FC               	movwf	lcd_char@letra
  3163  05D0  3002               	movlw	2
  3164  05D1  3181  214A  3185   	fcall	_lcd_char
  3165                           
  3166                           ;SOLUCION.c: 100:                 lcd_char(2,20,'<');
  3167  05D4  3014               	movlw	20
  3168  05D5  0020               	movlb	0	; select bank0
  3169  05D6  00A2               	movwf	??_MenuPPAL
  3170  05D7  0822               	movf	??_MenuPPAL,w
  3171  05D8  00FB               	movwf	lcd_char@col
  3172  05D9  303C               	movlw	60
  3173  05DA  00A3               	movwf	??_MenuPPAL+1
  3174  05DB  0823               	movf	??_MenuPPAL+1,w
  3175  05DC  00FC               	movwf	lcd_char@letra
  3176  05DD  3002               	movlw	2
  3177  05DE  3181  214A  3185   	fcall	_lcd_char
  3178                           
  3179                           ;SOLUCION.c: 101:                 lcd_char(3,8,' ');
  3180  05E1  3008               	movlw	8
  3181  05E2  0020               	movlb	0	; select bank0
  3182  05E3  00A2               	movwf	??_MenuPPAL
  3183  05E4  0822               	movf	??_MenuPPAL,w
  3184  05E5  00FB               	movwf	lcd_char@col
  3185  05E6  3020               	movlw	32
  3186  05E7  00A3               	movwf	??_MenuPPAL+1
  3187  05E8  0823               	movf	??_MenuPPAL+1,w
  3188  05E9  00FC               	movwf	lcd_char@letra
  3189  05EA  3003               	movlw	3
  3190  05EB  3181  214A  3185   	fcall	_lcd_char
  3191                           
  3192                           ;SOLUCION.c: 102:                 break;
  3193  05EE  2E2A               	goto	l232
  3194  05EF                     l1870:
  3195  05EF  3009               	movlw	9
  3196  05F0  00A2               	movwf	??_MenuPPAL
  3197  05F1  0822               	movf	??_MenuPPAL,w
  3198  05F2  00FB               	movwf	lcd_char@col
  3199  05F3  3020               	movlw	32
  3200  05F4  00A3               	movwf	??_MenuPPAL+1
  3201  05F5  0823               	movf	??_MenuPPAL+1,w
  3202  05F6  00FC               	movwf	lcd_char@letra
  3203  05F7  3002               	movlw	2
  3204  05F8  3181  214A  3185   	fcall	_lcd_char
  3205                           
  3206                           ;SOLUCION.c: 104:                 lcd_char(2,20,' ');
  3207  05FB  3014               	movlw	20
  3208  05FC  0020               	movlb	0	; select bank0
  3209  05FD  00A2               	movwf	??_MenuPPAL
  3210  05FE  0822               	movf	??_MenuPPAL,w
  3211  05FF  00FB               	movwf	lcd_char@col
  3212  0600  3020               	movlw	32
  3213  0601  00A3               	movwf	??_MenuPPAL+1
  3214  0602  0823               	movf	??_MenuPPAL+1,w
  3215  0603  00FC               	movwf	lcd_char@letra
  3216  0604  3002               	movlw	2
  3217  0605  3181  214A  3185   	fcall	_lcd_char
  3218                           
  3219                           ;SOLUCION.c: 105:                 lcd_char(3,8,'<');
  3220  0608  3008               	movlw	8
  3221  0609  0020               	movlb	0	; select bank0
  3222  060A  00A2               	movwf	??_MenuPPAL
  3223  060B  0822               	movf	??_MenuPPAL,w
  3224  060C  00FB               	movwf	lcd_char@col
  3225  060D  303C               	movlw	60
  3226  060E  00A3               	movwf	??_MenuPPAL+1
  3227  060F  0823               	movf	??_MenuPPAL+1,w
  3228  0610  00FC               	movwf	lcd_char@letra
  3229  0611  3003               	movlw	3
  3230  0612  3181  214A  3185   	fcall	_lcd_char
  3231                           
  3232                           ;SOLUCION.c: 106:                 break;
  3233  0615  2E2A               	goto	l232
  3234  0616                     l1874:
  3235  0616  0020               	movlb	0	; select bank0
  3236  0617  0828               	movf	_op,w
  3237  0618  00A2               	movwf	??_MenuPPAL
  3238  0619  01A3               	clrf	??_MenuPPAL+1
  3239                           
  3240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3241                           ; Switch size 1, requested type "simple"
  3242                           ; Number of cases is 1, Range of values is 0 to 0
  3243                           ; switch strategies available:
  3244                           ; Name         Instructions Cycles
  3245                           ; simple_byte            4     3 (average)
  3246                           ; direct_byte            8     6 (fixed)
  3247                           ; jumptable            260     6 (fixed)
  3248                           ;	Chosen strategy is simple_byte
  3249  061A  0823               	movf	??_MenuPPAL+1,w
  3250  061B  3A00               	xorlw	0	; case 0
  3251  061C  1903               	skipnz
  3252  061D  2E1F               	goto	l2378
  3253  061E  2E2A               	goto	l232
  3254  061F                     l2378:
  3255                           
  3256                           ; Switch size 1, requested type "simple"
  3257                           ; Number of cases is 3, Range of values is 1 to 3
  3258                           ; switch strategies available:
  3259                           ; Name         Instructions Cycles
  3260                           ; simple_byte           10     6 (average)
  3261                           ; direct_byte           15     9 (fixed)
  3262                           ; jumptable            263     9 (fixed)
  3263                           ;	Chosen strategy is simple_byte
  3264  061F  0822               	movf	??_MenuPPAL,w
  3265  0620  3A01               	xorlw	1	; case 1
  3266  0621  1903               	skipnz
  3267  0622  2DA1               	goto	l1866
  3268  0623  3A03               	xorlw	3	; case 2
  3269  0624  1903               	skipnz
  3270  0625  2DC8               	goto	l1868
  3271  0626  3A01               	xorlw	1	; case 3
  3272  0627  1903               	skipnz
  3273  0628  2DEF               	goto	l1870
  3274  0629  2E2A               	goto	l232
  3275  062A                     l232:
  3276                           
  3277                           ;SOLUCION.c: 108:     if( PORTBbits.RB0 == 0 ){
  3278  062A  0020               	movlb	0	; select bank0
  3279  062B  180D               	btfsc	13,0	;volatile
  3280  062C  2E2E               	goto	u491
  3281  062D  2E2F               	goto	u490
  3282  062E                     u491:
  3283  062E  2E3F               	goto	l235
  3284  062F                     u490:
  3285  062F                     l236:
  3286  062F  1C0D               	btfss	13,0	;volatile
  3287  0630  2E32               	goto	u501
  3288  0631  2E33               	goto	u500
  3289  0632                     u501:
  3290  0632  2E2F               	goto	l236
  3291  0633                     u500:
  3292  0633                     l1878:
  3293                           
  3294                           ;SOLUCION.c: 110:         op++;
  3295  0633  3001               	movlw	1
  3296  0634  00A2               	movwf	??_MenuPPAL
  3297  0635  0822               	movf	??_MenuPPAL,w
  3298  0636  07A8               	addwf	_op,f
  3299  0637                     l1880:
  3300                           
  3301                           ;SOLUCION.c: 111:         if(op>3)
  3302  0637  3004               	movlw	4
  3303  0638  0228               	subwf	_op,w
  3304  0639  1C03               	skipc
  3305  063A  2E3C               	goto	u511
  3306  063B  2E3D               	goto	u510
  3307  063C                     u511:
  3308  063C  2E3F               	goto	l235
  3309  063D                     u510:
  3310  063D                     l1882:
  3311                           
  3312                           ;SOLUCION.c: 112:             op=1;
  3313  063D  01A8               	clrf	_op
  3314  063E  0AA8               	incf	_op,f
  3315  063F                     l235:	
  3316                           ;SOLUCION.c: 113:     }
  3317                           
  3318                           
  3319                           ;SOLUCION.c: 114:     if( PORTBbits.RB1 == 0 ){
  3320  063F  188D               	btfsc	13,1	;volatile
  3321  0640  2E42               	goto	u521
  3322  0641  2E43               	goto	u520
  3323  0642                     u521:
  3324  0642  2E52               	goto	l1890
  3325  0643                     u520:
  3326  0643                     l241:
  3327  0643  1C8D               	btfss	13,1	;volatile
  3328  0644  2E46               	goto	u531
  3329  0645  2E47               	goto	u530
  3330  0646                     u531:
  3331  0646  2E43               	goto	l241
  3332  0647                     u530:
  3333  0647                     l1886:
  3334                           
  3335                           ;SOLUCION.c: 116:         op--;
  3336  0647  3001               	movlw	1
  3337  0648  02A8               	subwf	_op,f
  3338                           
  3339                           ;SOLUCION.c: 117:         if(op<1)
  3340  0649  0828               	movf	_op,w
  3341  064A  1D03               	btfss	3,2
  3342  064B  2E4D               	goto	u541
  3343  064C  2E4E               	goto	u540
  3344  064D                     u541:
  3345  064D  2E52               	goto	l1890
  3346  064E                     u540:
  3347  064E                     l1888:
  3348                           
  3349                           ;SOLUCION.c: 118:             op=3;
  3350  064E  3003               	movlw	3
  3351  064F  00A2               	movwf	??_MenuPPAL
  3352  0650  0822               	movf	??_MenuPPAL,w
  3353  0651  00A8               	movwf	_op
  3354  0652                     l1890:
  3355                           
  3356                           ;SOLUCION.c: 120:     if( PORTBbits.RB2 == 0 ){
  3357  0652  190D               	btfsc	13,2	;volatile
  3358  0653  2E55               	goto	u551
  3359  0654  2E56               	goto	u550
  3360  0655                     u551:
  3361  0655  2E7D               	goto	l254
  3362  0656                     u550:
  3363  0656                     l246:
  3364  0656  1D0D               	btfss	13,2	;volatile
  3365  0657  2E59               	goto	u561
  3366  0658  2E5A               	goto	u560
  3367  0659                     u561:
  3368  0659  2E56               	goto	l246
  3369  065A                     u560:
  3370  065A  2E68               	goto	l1900
  3371  065B                     l1894:
  3372  065B  3002               	movlw	2
  3373  065C  00A2               	movwf	??_MenuPPAL
  3374  065D  0822               	movf	??_MenuPPAL,w
  3375  065E  00A6               	movwf	_currentMenu
  3376  065F  2E7B               	goto	l251
  3377  0660                     l252:	
  3378                           ;SOLUCION.c: 124:             case 2: currentMenu=MMOTORES; break;
  3379                           
  3380  0660  01A6               	clrf	_currentMenu
  3381  0661  0AA6               	incf	_currentMenu,f
  3382  0662  2E7B               	goto	l251
  3383  0663                     l1896:
  3384  0663  3003               	movlw	3
  3385  0664  00A2               	movwf	??_MenuPPAL
  3386  0665  0822               	movf	??_MenuPPAL,w
  3387  0666  00A6               	movwf	_currentMenu
  3388  0667  2E7B               	goto	l251
  3389  0668                     l1900:
  3390  0668  0828               	movf	_op,w
  3391  0669  00A2               	movwf	??_MenuPPAL
  3392  066A  01A3               	clrf	??_MenuPPAL+1
  3393                           
  3394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3395                           ; Switch size 1, requested type "simple"
  3396                           ; Number of cases is 1, Range of values is 0 to 0
  3397                           ; switch strategies available:
  3398                           ; Name         Instructions Cycles
  3399                           ; simple_byte            4     3 (average)
  3400                           ; direct_byte            8     6 (fixed)
  3401                           ; jumptable            260     6 (fixed)
  3402                           ;	Chosen strategy is simple_byte
  3403  066B  0823               	movf	??_MenuPPAL+1,w
  3404  066C  3A00               	xorlw	0	; case 0
  3405  066D  1903               	skipnz
  3406  066E  2E70               	goto	l2380
  3407  066F  2E7B               	goto	l251
  3408  0670                     l2380:
  3409                           
  3410                           ; Switch size 1, requested type "simple"
  3411                           ; Number of cases is 3, Range of values is 1 to 3
  3412                           ; switch strategies available:
  3413                           ; Name         Instructions Cycles
  3414                           ; simple_byte           10     6 (average)
  3415                           ; direct_byte           15     9 (fixed)
  3416                           ; jumptable            263     9 (fixed)
  3417                           ;	Chosen strategy is simple_byte
  3418  0670  0822               	movf	??_MenuPPAL,w
  3419  0671  3A01               	xorlw	1	; case 1
  3420  0672  1903               	skipnz
  3421  0673  2E5B               	goto	l1894
  3422  0674  3A03               	xorlw	3	; case 2
  3423  0675  1903               	skipnz
  3424  0676  2E60               	goto	l252
  3425  0677  3A01               	xorlw	1	; case 3
  3426  0678  1903               	skipnz
  3427  0679  2E63               	goto	l1896
  3428  067A  2E7B               	goto	l251
  3429  067B                     l251:
  3430                           
  3431                           ;SOLUCION.c: 127:         op=1;
  3432  067B  01A8               	clrf	_op
  3433  067C  0AA8               	incf	_op,f
  3434  067D                     l254:
  3435  067D  0008               	return
  3436  067E                     __end_of_MenuPPAL:
  3437                           
  3438                           	psect	text10
  3439  0457                     __ptext10:	
  3440 ;; *************** function _MenuMotores *****************
  3441 ;; Defined at:
  3442 ;;		line 184 in file "SOLUCION.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;Total ram usage:        2 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 5
  3463 ;; This function calls:
  3464 ;;		_lcd_char
  3465 ;;		_lcd_out
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471  0457                     _MenuMotores:	
  3472                           ;psect for function _MenuMotores
  3473                           
  3474  0457                     l1910:	
  3475                           ;incstack = 0
  3476                           ; Regs used in _MenuMotores: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3477                           
  3478                           
  3479                           ;SOLUCION.c: 186:     lcd_out(1,1,"   MENU MOTORES     ");
  3480  0457  01FB               	clrf	lcd_out@col
  3481  0458  0AFB               	incf	lcd_out@col,f
  3482  0459  30A8               	movlw	low (STR_9| (0+32768))
  3483  045A  00FC               	movwf	lcd_out@str
  3484  045B  3088               	movlw	high (STR_9| (0+32768))
  3485  045C  00FD               	movwf	lcd_out@str+1
  3486  045D  3001               	movlw	1
  3487  045E  3181  218A  3184   	fcall	_lcd_out
  3488                           
  3489                           ;SOLUCION.c: 187:     lcd_out(2,1,"1.MOTORA            ");
  3490  0461  01FB               	clrf	lcd_out@col
  3491  0462  0AFB               	incf	lcd_out@col,f
  3492  0463  302A               	movlw	low (STR_10| (0+32768))
  3493  0464  00FC               	movwf	lcd_out@str
  3494  0465  3088               	movlw	high (STR_10| (0+32768))
  3495  0466  00FD               	movwf	lcd_out@str+1
  3496  0467  3002               	movlw	2
  3497  0468  3181  218A  3184   	fcall	_lcd_out
  3498                           
  3499                           ;SOLUCION.c: 188:     lcd_out(3,1,"2.MOTORB    3.BACK  ");
  3500  046B  01FB               	clrf	lcd_out@col
  3501  046C  0AFB               	incf	lcd_out@col,f
  3502  046D  30E7               	movlw	low (STR_11| (0+32768))
  3503  046E  00FC               	movwf	lcd_out@str
  3504  046F  3088               	movlw	high (STR_11| (0+32768))
  3505  0470  00FD               	movwf	lcd_out@str+1
  3506  0471  3003               	movlw	3
  3507  0472  3181  218A  3184   	fcall	_lcd_out
  3508                           
  3509                           ;SOLUCION.c: 189:     lcd_out(4,1,"OP:                 ");
  3510  0475  01FB               	clrf	lcd_out@col
  3511  0476  0AFB               	incf	lcd_out@col,f
  3512  0477  3000               	movlw	low (STR_4| (0+32768))
  3513  0478  00FC               	movwf	lcd_out@str
  3514  0479  3088               	movlw	high (STR_4| (0+32768))
  3515  047A  00FD               	movwf	lcd_out@str+1
  3516  047B  3004               	movlw	4
  3517  047C  3181  218A  3184   	fcall	_lcd_out
  3518                           
  3519                           ;SOLUCION.c: 190:     lcd_char(4,4,op+48);
  3520  047F  3004               	movlw	4
  3521  0480  0020               	movlb	0	; select bank0
  3522  0481  00A2               	movwf	??_MenuMotores
  3523  0482  0822               	movf	??_MenuMotores,w
  3524  0483  00FB               	movwf	lcd_char@col
  3525  0484  0828               	movf	_op,w
  3526  0485  3E30               	addlw	48
  3527  0486  00A3               	movwf	??_MenuMotores+1
  3528  0487  0823               	movf	??_MenuMotores+1,w
  3529  0488  00FC               	movwf	lcd_char@letra
  3530  0489  3004               	movlw	4
  3531  048A  3181  214A  3184   	fcall	_lcd_char
  3532                           
  3533                           ;SOLUCION.c: 192:     switch(op){
  3534  048D  2D03               	goto	l1920
  3535  048E                     l1912:
  3536  048E  3009               	movlw	9
  3537  048F  00A2               	movwf	??_MenuMotores
  3538  0490  0822               	movf	??_MenuMotores,w
  3539  0491  00FB               	movwf	lcd_char@col
  3540  0492  303C               	movlw	60
  3541  0493  00A3               	movwf	??_MenuMotores+1
  3542  0494  0823               	movf	??_MenuMotores+1,w
  3543  0495  00FC               	movwf	lcd_char@letra
  3544  0496  3002               	movlw	2
  3545  0497  3181  214A  3184   	fcall	_lcd_char
  3546                           
  3547                           ;SOLUCION.c: 194:                 lcd_char(3,9,' ');
  3548  049A  3009               	movlw	9
  3549  049B  0020               	movlb	0	; select bank0
  3550  049C  00A2               	movwf	??_MenuMotores
  3551  049D  0822               	movf	??_MenuMotores,w
  3552  049E  00FB               	movwf	lcd_char@col
  3553  049F  3020               	movlw	32
  3554  04A0  00A3               	movwf	??_MenuMotores+1
  3555  04A1  0823               	movf	??_MenuMotores+1,w
  3556  04A2  00FC               	movwf	lcd_char@letra
  3557  04A3  3003               	movlw	3
  3558  04A4  3181  214A  3184   	fcall	_lcd_char
  3559                           
  3560                           ;SOLUCION.c: 195:                 lcd_char(3,19,' ');
  3561  04A7  3013               	movlw	19
  3562  04A8  0020               	movlb	0	; select bank0
  3563  04A9  00A2               	movwf	??_MenuMotores
  3564  04AA  0822               	movf	??_MenuMotores,w
  3565  04AB  00FB               	movwf	lcd_char@col
  3566  04AC  3020               	movlw	32
  3567  04AD  00A3               	movwf	??_MenuMotores+1
  3568  04AE  0823               	movf	??_MenuMotores+1,w
  3569  04AF  00FC               	movwf	lcd_char@letra
  3570  04B0  3003               	movlw	3
  3571  04B1  3181  214A  3184   	fcall	_lcd_char
  3572                           
  3573                           ;SOLUCION.c: 196:                 break;
  3574  04B4  2D17               	goto	l288
  3575  04B5                     l1914:
  3576  04B5  3009               	movlw	9
  3577  04B6  00A2               	movwf	??_MenuMotores
  3578  04B7  0822               	movf	??_MenuMotores,w
  3579  04B8  00FB               	movwf	lcd_char@col
  3580  04B9  3020               	movlw	32
  3581  04BA  00A3               	movwf	??_MenuMotores+1
  3582  04BB  0823               	movf	??_MenuMotores+1,w
  3583  04BC  00FC               	movwf	lcd_char@letra
  3584  04BD  3002               	movlw	2
  3585  04BE  3181  214A  3184   	fcall	_lcd_char
  3586                           
  3587                           ;SOLUCION.c: 198:                 lcd_char(3,9,'<');
  3588  04C1  3009               	movlw	9
  3589  04C2  0020               	movlb	0	; select bank0
  3590  04C3  00A2               	movwf	??_MenuMotores
  3591  04C4  0822               	movf	??_MenuMotores,w
  3592  04C5  00FB               	movwf	lcd_char@col
  3593  04C6  303C               	movlw	60
  3594  04C7  00A3               	movwf	??_MenuMotores+1
  3595  04C8  0823               	movf	??_MenuMotores+1,w
  3596  04C9  00FC               	movwf	lcd_char@letra
  3597  04CA  3003               	movlw	3
  3598  04CB  3181  214A  3184   	fcall	_lcd_char
  3599                           
  3600                           ;SOLUCION.c: 199:                 lcd_char(3,19,' ');
  3601  04CE  3013               	movlw	19
  3602  04CF  0020               	movlb	0	; select bank0
  3603  04D0  00A2               	movwf	??_MenuMotores
  3604  04D1  0822               	movf	??_MenuMotores,w
  3605  04D2  00FB               	movwf	lcd_char@col
  3606  04D3  3020               	movlw	32
  3607  04D4  00A3               	movwf	??_MenuMotores+1
  3608  04D5  0823               	movf	??_MenuMotores+1,w
  3609  04D6  00FC               	movwf	lcd_char@letra
  3610  04D7  3003               	movlw	3
  3611  04D8  3181  214A  3184   	fcall	_lcd_char
  3612                           
  3613                           ;SOLUCION.c: 200:                 break;
  3614  04DB  2D17               	goto	l288
  3615  04DC                     l1916:
  3616  04DC  3009               	movlw	9
  3617  04DD  00A2               	movwf	??_MenuMotores
  3618  04DE  0822               	movf	??_MenuMotores,w
  3619  04DF  00FB               	movwf	lcd_char@col
  3620  04E0  3020               	movlw	32
  3621  04E1  00A3               	movwf	??_MenuMotores+1
  3622  04E2  0823               	movf	??_MenuMotores+1,w
  3623  04E3  00FC               	movwf	lcd_char@letra
  3624  04E4  3002               	movlw	2
  3625  04E5  3181  214A  3184   	fcall	_lcd_char
  3626                           
  3627                           ;SOLUCION.c: 202:                 lcd_char(3,9,' ');
  3628  04E8  3009               	movlw	9
  3629  04E9  0020               	movlb	0	; select bank0
  3630  04EA  00A2               	movwf	??_MenuMotores
  3631  04EB  0822               	movf	??_MenuMotores,w
  3632  04EC  00FB               	movwf	lcd_char@col
  3633  04ED  3020               	movlw	32
  3634  04EE  00A3               	movwf	??_MenuMotores+1
  3635  04EF  0823               	movf	??_MenuMotores+1,w
  3636  04F0  00FC               	movwf	lcd_char@letra
  3637  04F1  3003               	movlw	3
  3638  04F2  3181  214A  3184   	fcall	_lcd_char
  3639                           
  3640                           ;SOLUCION.c: 203:                 lcd_char(3,19,'<');
  3641  04F5  3013               	movlw	19
  3642  04F6  0020               	movlb	0	; select bank0
  3643  04F7  00A2               	movwf	??_MenuMotores
  3644  04F8  0822               	movf	??_MenuMotores,w
  3645  04F9  00FB               	movwf	lcd_char@col
  3646  04FA  303C               	movlw	60
  3647  04FB  00A3               	movwf	??_MenuMotores+1
  3648  04FC  0823               	movf	??_MenuMotores+1,w
  3649  04FD  00FC               	movwf	lcd_char@letra
  3650  04FE  3003               	movlw	3
  3651  04FF  3181  214A  3184   	fcall	_lcd_char
  3652                           
  3653                           ;SOLUCION.c: 204:                 break;
  3654  0502  2D17               	goto	l288
  3655  0503                     l1920:
  3656  0503  0020               	movlb	0	; select bank0
  3657  0504  0828               	movf	_op,w
  3658  0505  00A2               	movwf	??_MenuMotores
  3659  0506  01A3               	clrf	??_MenuMotores+1
  3660                           
  3661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3662                           ; Switch size 1, requested type "simple"
  3663                           ; Number of cases is 1, Range of values is 0 to 0
  3664                           ; switch strategies available:
  3665                           ; Name         Instructions Cycles
  3666                           ; simple_byte            4     3 (average)
  3667                           ; direct_byte            8     6 (fixed)
  3668                           ; jumptable            260     6 (fixed)
  3669                           ;	Chosen strategy is simple_byte
  3670  0507  0823               	movf	??_MenuMotores+1,w
  3671  0508  3A00               	xorlw	0	; case 0
  3672  0509  1903               	skipnz
  3673  050A  2D0C               	goto	l2382
  3674  050B  2D17               	goto	l288
  3675  050C                     l2382:
  3676                           
  3677                           ; Switch size 1, requested type "simple"
  3678                           ; Number of cases is 3, Range of values is 1 to 3
  3679                           ; switch strategies available:
  3680                           ; Name         Instructions Cycles
  3681                           ; simple_byte           10     6 (average)
  3682                           ; direct_byte           15     9 (fixed)
  3683                           ; jumptable            263     9 (fixed)
  3684                           ;	Chosen strategy is simple_byte
  3685  050C  0822               	movf	??_MenuMotores,w
  3686  050D  3A01               	xorlw	1	; case 1
  3687  050E  1903               	skipnz
  3688  050F  2C8E               	goto	l1912
  3689  0510  3A03               	xorlw	3	; case 2
  3690  0511  1903               	skipnz
  3691  0512  2CB5               	goto	l1914
  3692  0513  3A01               	xorlw	1	; case 3
  3693  0514  1903               	skipnz
  3694  0515  2CDC               	goto	l1916
  3695  0516  2D17               	goto	l288
  3696  0517                     l288:
  3697                           
  3698                           ;SOLUCION.c: 207:     if( PORTBbits.RB0 == 0 ){
  3699  0517  0020               	movlb	0	; select bank0
  3700  0518  180D               	btfsc	13,0	;volatile
  3701  0519  2D1B               	goto	u571
  3702  051A  2D1C               	goto	u570
  3703  051B                     u571:
  3704  051B  2D2C               	goto	l291
  3705  051C                     u570:
  3706  051C                     l292:
  3707  051C  1C0D               	btfss	13,0	;volatile
  3708  051D  2D1F               	goto	u581
  3709  051E  2D20               	goto	u580
  3710  051F                     u581:
  3711  051F  2D1C               	goto	l292
  3712  0520                     u580:
  3713  0520                     l1924:
  3714                           
  3715                           ;SOLUCION.c: 209:         op++;
  3716  0520  3001               	movlw	1
  3717  0521  00A2               	movwf	??_MenuMotores
  3718  0522  0822               	movf	??_MenuMotores,w
  3719  0523  07A8               	addwf	_op,f
  3720  0524                     l1926:
  3721                           
  3722                           ;SOLUCION.c: 210:         if(op>3)
  3723  0524  3004               	movlw	4
  3724  0525  0228               	subwf	_op,w
  3725  0526  1C03               	skipc
  3726  0527  2D29               	goto	u591
  3727  0528  2D2A               	goto	u590
  3728  0529                     u591:
  3729  0529  2D2C               	goto	l291
  3730  052A                     u590:
  3731  052A                     l1928:
  3732                           
  3733                           ;SOLUCION.c: 211:             op=1;
  3734  052A  01A8               	clrf	_op
  3735  052B  0AA8               	incf	_op,f
  3736  052C                     l291:	
  3737                           ;SOLUCION.c: 212:     }
  3738                           
  3739                           
  3740                           ;SOLUCION.c: 213:     if( PORTBbits.RB1 == 0 ){
  3741  052C  188D               	btfsc	13,1	;volatile
  3742  052D  2D2F               	goto	u601
  3743  052E  2D30               	goto	u600
  3744  052F                     u601:
  3745  052F  2D3F               	goto	l1936
  3746  0530                     u600:
  3747  0530                     l297:
  3748  0530  1C8D               	btfss	13,1	;volatile
  3749  0531  2D33               	goto	u611
  3750  0532  2D34               	goto	u610
  3751  0533                     u611:
  3752  0533  2D30               	goto	l297
  3753  0534                     u610:
  3754  0534                     l1932:
  3755                           
  3756                           ;SOLUCION.c: 215:         op--;
  3757  0534  3001               	movlw	1
  3758  0535  02A8               	subwf	_op,f
  3759                           
  3760                           ;SOLUCION.c: 216:         if(op<1)
  3761  0536  0828               	movf	_op,w
  3762  0537  1D03               	btfss	3,2
  3763  0538  2D3A               	goto	u621
  3764  0539  2D3B               	goto	u620
  3765  053A                     u621:
  3766  053A  2D3F               	goto	l1936
  3767  053B                     u620:
  3768  053B                     l1934:
  3769                           
  3770                           ;SOLUCION.c: 217:             op=3;
  3771  053B  3003               	movlw	3
  3772  053C  00A2               	movwf	??_MenuMotores
  3773  053D  0822               	movf	??_MenuMotores,w
  3774  053E  00A8               	movwf	_op
  3775  053F                     l1936:
  3776                           
  3777                           ;SOLUCION.c: 219:     if( PORTBbits.RB2 == 0 ){
  3778  053F  190D               	btfsc	13,2	;volatile
  3779  0540  2D42               	goto	u631
  3780  0541  2D43               	goto	u630
  3781  0542                     u631:
  3782  0542  2D69               	goto	l310
  3783  0543                     u630:
  3784  0543                     l302:
  3785  0543  1D0D               	btfss	13,2	;volatile
  3786  0544  2D46               	goto	u641
  3787  0545  2D47               	goto	u640
  3788  0546                     u641:
  3789  0546  2D43               	goto	l302
  3790  0547                     u640:
  3791  0547  2D54               	goto	l1948
  3792  0548                     l1940:
  3793  0548  3007               	movlw	7
  3794  0549  00A2               	movwf	??_MenuMotores
  3795  054A  0822               	movf	??_MenuMotores,w
  3796  054B  00A6               	movwf	_currentMenu
  3797  054C  2D67               	goto	l307
  3798  054D                     l1942:
  3799  054D  3008               	movlw	8
  3800  054E  00A2               	movwf	??_MenuMotores
  3801  054F  0822               	movf	??_MenuMotores,w
  3802  0550  00A6               	movwf	_currentMenu
  3803  0551  2D67               	goto	l307
  3804  0552                     l1944:
  3805  0552  01A6               	clrf	_currentMenu
  3806  0553  2D67               	goto	l307
  3807  0554                     l1948:
  3808  0554  0828               	movf	_op,w
  3809  0555  00A2               	movwf	??_MenuMotores
  3810  0556  01A3               	clrf	??_MenuMotores+1
  3811                           
  3812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3813                           ; Switch size 1, requested type "simple"
  3814                           ; Number of cases is 1, Range of values is 0 to 0
  3815                           ; switch strategies available:
  3816                           ; Name         Instructions Cycles
  3817                           ; simple_byte            4     3 (average)
  3818                           ; direct_byte            8     6 (fixed)
  3819                           ; jumptable            260     6 (fixed)
  3820                           ;	Chosen strategy is simple_byte
  3821  0557  0823               	movf	??_MenuMotores+1,w
  3822  0558  3A00               	xorlw	0	; case 0
  3823  0559  1903               	skipnz
  3824  055A  2D5C               	goto	l2384
  3825  055B  2D67               	goto	l307
  3826  055C                     l2384:
  3827                           
  3828                           ; Switch size 1, requested type "simple"
  3829                           ; Number of cases is 3, Range of values is 1 to 3
  3830                           ; switch strategies available:
  3831                           ; Name         Instructions Cycles
  3832                           ; simple_byte           10     6 (average)
  3833                           ; direct_byte           15     9 (fixed)
  3834                           ; jumptable            263     9 (fixed)
  3835                           ;	Chosen strategy is simple_byte
  3836  055C  0822               	movf	??_MenuMotores,w
  3837  055D  3A01               	xorlw	1	; case 1
  3838  055E  1903               	skipnz
  3839  055F  2D48               	goto	l1940
  3840  0560  3A03               	xorlw	3	; case 2
  3841  0561  1903               	skipnz
  3842  0562  2D4D               	goto	l1942
  3843  0563  3A01               	xorlw	1	; case 3
  3844  0564  1903               	skipnz
  3845  0565  2D52               	goto	l1944
  3846  0566  2D67               	goto	l307
  3847  0567                     l307:
  3848                           
  3849                           ;SOLUCION.c: 227:         op=1;
  3850  0567  01A8               	clrf	_op
  3851  0568  0AA8               	incf	_op,f
  3852  0569                     l310:
  3853  0569  0008               	return
  3854  056A                     __end_of_MenuMotores:
  3855                           
  3856                           	psect	text11
  3857  01CE                     __ptext11:	
  3858 ;; *************** function _MenuMotorB *****************
  3859 ;; Defined at:
  3860 ;;		line 277 in file "SOLUCION.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      void 
  3867 ;; Registers used:
  3868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3878 ;;Total ram usage:        0 bytes
  3879 ;; Hardware stack levels used: 1
  3880 ;; Hardware stack levels required when called: 5
  3881 ;; This function calls:
  3882 ;;		_lcd_out
  3883 ;; This function is called by:
  3884 ;;		_main
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888  01CE                     _MenuMotorB:	
  3889                           ;psect for function _MenuMotorB
  3890                           
  3891  01CE                     l2056:	
  3892                           ;incstack = 0
  3893                           ; Regs used in _MenuMotorB: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3894                           
  3895                           
  3896                           ;SOLUCION.c: 278:     lcd_out(1,1,"   MENU MOTOR B     ");
  3897  01CE  01FB               	clrf	lcd_out@col
  3898  01CF  0AFB               	incf	lcd_out@col,f
  3899  01D0  307E               	movlw	low (STR_17| (0+32768))
  3900  01D1  00FC               	movwf	lcd_out@str
  3901  01D2  3088               	movlw	high (STR_17| (0+32768))
  3902  01D3  00FD               	movwf	lcd_out@str+1
  3903  01D4  3001               	movlw	1
  3904  01D5  3181  218A  3181   	fcall	_lcd_out
  3905                           
  3906                           ;SOLUCION.c: 279:     lcd_out(2,1,"1.DERECHA           ");
  3907  01D8  01FB               	clrf	lcd_out@col
  3908  01D9  0AFB               	incf	lcd_out@col,f
  3909  01DA  303F               	movlw	low (STR_14| (0+32768))
  3910  01DB  00FC               	movwf	lcd_out@str
  3911  01DC  3088               	movlw	high (STR_14| (0+32768))
  3912  01DD  00FD               	movwf	lcd_out@str+1
  3913  01DE  3002               	movlw	2
  3914  01DF  3181  218A  3181   	fcall	_lcd_out
  3915                           
  3916                           ;SOLUCION.c: 280:     lcd_out(3,1,"2.IZQUIERDA  3.BCK  ");
  3917  01E2  01FB               	clrf	lcd_out@col
  3918  01E3  0AFB               	incf	lcd_out@col,f
  3919  01E4  30FC               	movlw	low (STR_15| (0+32768))
  3920  01E5  00FC               	movwf	lcd_out@str
  3921  01E6  3088               	movlw	high (STR_15| (0+32768))
  3922  01E7  00FD               	movwf	lcd_out@str+1
  3923  01E8  3003               	movlw	3
  3924  01E9  3181  218A  3181   	fcall	_lcd_out
  3925                           
  3926                           ;SOLUCION.c: 281:     lcd_out(4,1,"OP:                 ");
  3927  01EC  01FB               	clrf	lcd_out@col
  3928  01ED  0AFB               	incf	lcd_out@col,f
  3929  01EE  3000               	movlw	low (STR_4| (0+32768))
  3930  01EF  00FC               	movwf	lcd_out@str
  3931  01F0  3088               	movlw	high (STR_4| (0+32768))
  3932  01F1  00FD               	movwf	lcd_out@str+1
  3933  01F2  3004               	movlw	4
  3934  01F3  3181  218A  3181   	fcall	_lcd_out
  3935  01F6                     l340:
  3936  01F6  0008               	return
  3937  01F7                     __end_of_MenuMotorB:
  3938                           
  3939                           	psect	text12
  3940  0344                     __ptext12:	
  3941 ;; *************** function _MenuMotorA *****************
  3942 ;; Defined at:
  3943 ;;		line 232 in file "SOLUCION.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3959 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3960 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3961 ;;Total ram usage:        2 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; Hardware stack levels required when called: 5
  3964 ;; This function calls:
  3965 ;;		_lcd_char
  3966 ;;		_lcd_out
  3967 ;;		_motorA_Derecha
  3968 ;;		_motorA_Izquierda
  3969 ;; This function is called by:
  3970 ;;		_main
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974  0344                     _MenuMotorA:	
  3975                           ;psect for function _MenuMotorA
  3976                           
  3977  0344                     l2010:	
  3978                           ;incstack = 0
  3979                           ; Regs used in _MenuMotorA: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3980                           
  3981                           
  3982                           ;SOLUCION.c: 234:     lcd_out(1,1,"   MENU MOTOR A     ");
  3983  0344  01FB               	clrf	lcd_out@col
  3984  0345  0AFB               	incf	lcd_out@col,f
  3985  0346  3069               	movlw	low (STR_13| (0+32768))
  3986  0347  00FC               	movwf	lcd_out@str
  3987  0348  3088               	movlw	high (STR_13| (0+32768))
  3988  0349  00FD               	movwf	lcd_out@str+1
  3989  034A  3001               	movlw	1
  3990  034B  3181  218A  3183   	fcall	_lcd_out
  3991                           
  3992                           ;SOLUCION.c: 235:     lcd_out(2,1,"1.DERECHA           ");
  3993  034E  01FB               	clrf	lcd_out@col
  3994  034F  0AFB               	incf	lcd_out@col,f
  3995  0350  303F               	movlw	low (STR_14| (0+32768))
  3996  0351  00FC               	movwf	lcd_out@str
  3997  0352  3088               	movlw	high (STR_14| (0+32768))
  3998  0353  00FD               	movwf	lcd_out@str+1
  3999  0354  3002               	movlw	2
  4000  0355  3181  218A  3183   	fcall	_lcd_out
  4001                           
  4002                           ;SOLUCION.c: 236:     lcd_out(3,1,"2.IZQUIERDA  3.BCK  ");
  4003  0358  01FB               	clrf	lcd_out@col
  4004  0359  0AFB               	incf	lcd_out@col,f
  4005  035A  30FC               	movlw	low (STR_15| (0+32768))
  4006  035B  00FC               	movwf	lcd_out@str
  4007  035C  3088               	movlw	high (STR_15| (0+32768))
  4008  035D  00FD               	movwf	lcd_out@str+1
  4009  035E  3003               	movlw	3
  4010  035F  3181  218A  3183   	fcall	_lcd_out
  4011                           
  4012                           ;SOLUCION.c: 237:     lcd_out(4,1,"OP:                 ");
  4013  0362  01FB               	clrf	lcd_out@col
  4014  0363  0AFB               	incf	lcd_out@col,f
  4015  0364  3000               	movlw	low (STR_4| (0+32768))
  4016  0365  00FC               	movwf	lcd_out@str
  4017  0366  3088               	movlw	high (STR_4| (0+32768))
  4018  0367  00FD               	movwf	lcd_out@str+1
  4019  0368  3004               	movlw	4
  4020  0369  3181  218A  3183   	fcall	_lcd_out
  4021                           
  4022                           ;SOLUCION.c: 238:     lcd_char(4,4,op+48);
  4023  036C  3004               	movlw	4
  4024  036D  0020               	movlb	0	; select bank0
  4025  036E  00A2               	movwf	??_MenuMotorA
  4026  036F  0822               	movf	??_MenuMotorA,w
  4027  0370  00FB               	movwf	lcd_char@col
  4028  0371  0828               	movf	_op,w
  4029  0372  3E30               	addlw	48
  4030  0373  00A3               	movwf	??_MenuMotorA+1
  4031  0374  0823               	movf	??_MenuMotorA+1,w
  4032  0375  00FC               	movwf	lcd_char@letra
  4033  0376  3004               	movlw	4
  4034  0377  3181  214A  3183   	fcall	_lcd_char
  4035                           
  4036                           ;SOLUCION.c: 239:     switch(op){
  4037  037A  2BF0               	goto	l2020
  4038  037B                     l2012:
  4039  037B  300A               	movlw	10
  4040  037C  00A2               	movwf	??_MenuMotorA
  4041  037D  0822               	movf	??_MenuMotorA,w
  4042  037E  00FB               	movwf	lcd_char@col
  4043  037F  303C               	movlw	60
  4044  0380  00A3               	movwf	??_MenuMotorA+1
  4045  0381  0823               	movf	??_MenuMotorA+1,w
  4046  0382  00FC               	movwf	lcd_char@letra
  4047  0383  3002               	movlw	2
  4048  0384  3181  214A  3183   	fcall	_lcd_char
  4049                           
  4050                           ;SOLUCION.c: 241:                 lcd_char(3,12,' ');
  4051  0387  300C               	movlw	12
  4052  0388  0020               	movlb	0	; select bank0
  4053  0389  00A2               	movwf	??_MenuMotorA
  4054  038A  0822               	movf	??_MenuMotorA,w
  4055  038B  00FB               	movwf	lcd_char@col
  4056  038C  3020               	movlw	32
  4057  038D  00A3               	movwf	??_MenuMotorA+1
  4058  038E  0823               	movf	??_MenuMotorA+1,w
  4059  038F  00FC               	movwf	lcd_char@letra
  4060  0390  3003               	movlw	3
  4061  0391  3181  214A  3183   	fcall	_lcd_char
  4062                           
  4063                           ;SOLUCION.c: 242:                 lcd_char(3,19,' ');
  4064  0394  3013               	movlw	19
  4065  0395  0020               	movlb	0	; select bank0
  4066  0396  00A2               	movwf	??_MenuMotorA
  4067  0397  0822               	movf	??_MenuMotorA,w
  4068  0398  00FB               	movwf	lcd_char@col
  4069  0399  3020               	movlw	32
  4070  039A  00A3               	movwf	??_MenuMotorA+1
  4071  039B  0823               	movf	??_MenuMotorA+1,w
  4072  039C  00FC               	movwf	lcd_char@letra
  4073  039D  3003               	movlw	3
  4074  039E  3181  214A  3183   	fcall	_lcd_char
  4075                           
  4076                           ;SOLUCION.c: 243:                 break;
  4077  03A1  2C04               	goto	l315
  4078  03A2                     l2014:
  4079  03A2  300A               	movlw	10
  4080  03A3  00A2               	movwf	??_MenuMotorA
  4081  03A4  0822               	movf	??_MenuMotorA,w
  4082  03A5  00FB               	movwf	lcd_char@col
  4083  03A6  3020               	movlw	32
  4084  03A7  00A3               	movwf	??_MenuMotorA+1
  4085  03A8  0823               	movf	??_MenuMotorA+1,w
  4086  03A9  00FC               	movwf	lcd_char@letra
  4087  03AA  3002               	movlw	2
  4088  03AB  3181  214A  3183   	fcall	_lcd_char
  4089                           
  4090                           ;SOLUCION.c: 245:                 lcd_char(3,12,'<');
  4091  03AE  300C               	movlw	12
  4092  03AF  0020               	movlb	0	; select bank0
  4093  03B0  00A2               	movwf	??_MenuMotorA
  4094  03B1  0822               	movf	??_MenuMotorA,w
  4095  03B2  00FB               	movwf	lcd_char@col
  4096  03B3  303C               	movlw	60
  4097  03B4  00A3               	movwf	??_MenuMotorA+1
  4098  03B5  0823               	movf	??_MenuMotorA+1,w
  4099  03B6  00FC               	movwf	lcd_char@letra
  4100  03B7  3003               	movlw	3
  4101  03B8  3181  214A  3183   	fcall	_lcd_char
  4102                           
  4103                           ;SOLUCION.c: 246:                 lcd_char(3,19,' ');
  4104  03BB  3013               	movlw	19
  4105  03BC  0020               	movlb	0	; select bank0
  4106  03BD  00A2               	movwf	??_MenuMotorA
  4107  03BE  0822               	movf	??_MenuMotorA,w
  4108  03BF  00FB               	movwf	lcd_char@col
  4109  03C0  3020               	movlw	32
  4110  03C1  00A3               	movwf	??_MenuMotorA+1
  4111  03C2  0823               	movf	??_MenuMotorA+1,w
  4112  03C3  00FC               	movwf	lcd_char@letra
  4113  03C4  3003               	movlw	3
  4114  03C5  3181  214A  3183   	fcall	_lcd_char
  4115                           
  4116                           ;SOLUCION.c: 247:                 break;
  4117  03C8  2C04               	goto	l315
  4118  03C9                     l2016:
  4119  03C9  300A               	movlw	10
  4120  03CA  00A2               	movwf	??_MenuMotorA
  4121  03CB  0822               	movf	??_MenuMotorA,w
  4122  03CC  00FB               	movwf	lcd_char@col
  4123  03CD  3020               	movlw	32
  4124  03CE  00A3               	movwf	??_MenuMotorA+1
  4125  03CF  0823               	movf	??_MenuMotorA+1,w
  4126  03D0  00FC               	movwf	lcd_char@letra
  4127  03D1  3002               	movlw	2
  4128  03D2  3181  214A  3183   	fcall	_lcd_char
  4129                           
  4130                           ;SOLUCION.c: 249:                 lcd_char(3,12,' ');
  4131  03D5  300C               	movlw	12
  4132  03D6  0020               	movlb	0	; select bank0
  4133  03D7  00A2               	movwf	??_MenuMotorA
  4134  03D8  0822               	movf	??_MenuMotorA,w
  4135  03D9  00FB               	movwf	lcd_char@col
  4136  03DA  3020               	movlw	32
  4137  03DB  00A3               	movwf	??_MenuMotorA+1
  4138  03DC  0823               	movf	??_MenuMotorA+1,w
  4139  03DD  00FC               	movwf	lcd_char@letra
  4140  03DE  3003               	movlw	3
  4141  03DF  3181  214A  3183   	fcall	_lcd_char
  4142                           
  4143                           ;SOLUCION.c: 250:                 lcd_char(3,19,'<');
  4144  03E2  3013               	movlw	19
  4145  03E3  0020               	movlb	0	; select bank0
  4146  03E4  00A2               	movwf	??_MenuMotorA
  4147  03E5  0822               	movf	??_MenuMotorA,w
  4148  03E6  00FB               	movwf	lcd_char@col
  4149  03E7  303C               	movlw	60
  4150  03E8  00A3               	movwf	??_MenuMotorA+1
  4151  03E9  0823               	movf	??_MenuMotorA+1,w
  4152  03EA  00FC               	movwf	lcd_char@letra
  4153  03EB  3003               	movlw	3
  4154  03EC  3181  214A  3183   	fcall	_lcd_char
  4155                           
  4156                           ;SOLUCION.c: 251:                 break;
  4157  03EF  2C04               	goto	l315
  4158  03F0                     l2020:
  4159  03F0  0020               	movlb	0	; select bank0
  4160  03F1  0828               	movf	_op,w
  4161  03F2  00A2               	movwf	??_MenuMotorA
  4162  03F3  01A3               	clrf	??_MenuMotorA+1
  4163                           
  4164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4165                           ; Switch size 1, requested type "simple"
  4166                           ; Number of cases is 1, Range of values is 0 to 0
  4167                           ; switch strategies available:
  4168                           ; Name         Instructions Cycles
  4169                           ; simple_byte            4     3 (average)
  4170                           ; direct_byte            8     6 (fixed)
  4171                           ; jumptable            260     6 (fixed)
  4172                           ;	Chosen strategy is simple_byte
  4173  03F4  0823               	movf	??_MenuMotorA+1,w
  4174  03F5  3A00               	xorlw	0	; case 0
  4175  03F6  1903               	skipnz
  4176  03F7  2BF9               	goto	l2386
  4177  03F8  2C04               	goto	l315
  4178  03F9                     l2386:
  4179                           
  4180                           ; Switch size 1, requested type "simple"
  4181                           ; Number of cases is 3, Range of values is 1 to 3
  4182                           ; switch strategies available:
  4183                           ; Name         Instructions Cycles
  4184                           ; simple_byte           10     6 (average)
  4185                           ; direct_byte           15     9 (fixed)
  4186                           ; jumptable            263     9 (fixed)
  4187                           ;	Chosen strategy is simple_byte
  4188  03F9  0822               	movf	??_MenuMotorA,w
  4189  03FA  3A01               	xorlw	1	; case 1
  4190  03FB  1903               	skipnz
  4191  03FC  2B7B               	goto	l2012
  4192  03FD  3A03               	xorlw	3	; case 2
  4193  03FE  1903               	skipnz
  4194  03FF  2BA2               	goto	l2014
  4195  0400  3A01               	xorlw	1	; case 3
  4196  0401  1903               	skipnz
  4197  0402  2BC9               	goto	l2016
  4198  0403  2C04               	goto	l315
  4199  0404                     l315:
  4200                           
  4201                           ;SOLUCION.c: 254:     if( PORTBbits.RB0 == 0 ){
  4202  0404  0020               	movlb	0	; select bank0
  4203  0405  180D               	btfsc	13,0	;volatile
  4204  0406  2C08               	goto	u731
  4205  0407  2C09               	goto	u730
  4206  0408                     u731:
  4207  0408  2C19               	goto	l318
  4208  0409                     u730:
  4209  0409                     l319:
  4210  0409  1C0D               	btfss	13,0	;volatile
  4211  040A  2C0C               	goto	u741
  4212  040B  2C0D               	goto	u740
  4213  040C                     u741:
  4214  040C  2C09               	goto	l319
  4215  040D                     u740:
  4216  040D                     l2024:
  4217                           
  4218                           ;SOLUCION.c: 256:         op++;
  4219  040D  3001               	movlw	1
  4220  040E  00A2               	movwf	??_MenuMotorA
  4221  040F  0822               	movf	??_MenuMotorA,w
  4222  0410  07A8               	addwf	_op,f
  4223  0411                     l2026:
  4224                           
  4225                           ;SOLUCION.c: 257:         if(op>3)
  4226  0411  3004               	movlw	4
  4227  0412  0228               	subwf	_op,w
  4228  0413  1C03               	skipc
  4229  0414  2C16               	goto	u751
  4230  0415  2C17               	goto	u750
  4231  0416                     u751:
  4232  0416  2C19               	goto	l318
  4233  0417                     u750:
  4234  0417                     l2028:
  4235                           
  4236                           ;SOLUCION.c: 258:             op=1;
  4237  0417  01A8               	clrf	_op
  4238  0418  0AA8               	incf	_op,f
  4239  0419                     l318:	
  4240                           ;SOLUCION.c: 259:     }
  4241                           
  4242                           
  4243                           ;SOLUCION.c: 260:     if( PORTBbits.RB1 == 0 ){
  4244  0419  188D               	btfsc	13,1	;volatile
  4245  041A  2C1C               	goto	u761
  4246  041B  2C1D               	goto	u760
  4247  041C                     u761:
  4248  041C  2C2C               	goto	l2036
  4249  041D                     u760:
  4250  041D                     l324:
  4251  041D  1C8D               	btfss	13,1	;volatile
  4252  041E  2C20               	goto	u771
  4253  041F  2C21               	goto	u770
  4254  0420                     u771:
  4255  0420  2C1D               	goto	l324
  4256  0421                     u770:
  4257  0421                     l2032:
  4258                           
  4259                           ;SOLUCION.c: 262:         op--;
  4260  0421  3001               	movlw	1
  4261  0422  02A8               	subwf	_op,f
  4262                           
  4263                           ;SOLUCION.c: 263:         if(op<1)
  4264  0423  0828               	movf	_op,w
  4265  0424  1D03               	btfss	3,2
  4266  0425  2C27               	goto	u781
  4267  0426  2C28               	goto	u780
  4268  0427                     u781:
  4269  0427  2C2C               	goto	l2036
  4270  0428                     u780:
  4271  0428                     l2034:
  4272                           
  4273                           ;SOLUCION.c: 264:             op=3;
  4274  0428  3003               	movlw	3
  4275  0429  00A2               	movwf	??_MenuMotorA
  4276  042A  0822               	movf	??_MenuMotorA,w
  4277  042B  00A8               	movwf	_op
  4278  042C                     l2036:
  4279                           
  4280                           ;SOLUCION.c: 266:     if( PORTBbits.RB2 == 0 ){
  4281  042C  190D               	btfsc	13,2	;volatile
  4282  042D  2C2F               	goto	u791
  4283  042E  2C30               	goto	u790
  4284  042F                     u791:
  4285  042F  2C56               	goto	l337
  4286  0430                     u790:
  4287  0430                     l329:
  4288  0430  1D0D               	btfss	13,2	;volatile
  4289  0431  2C33               	goto	u801
  4290  0432  2C34               	goto	u800
  4291  0433                     u801:
  4292  0433  2C30               	goto	l329
  4293  0434                     u800:
  4294  0434  2C40               	goto	l2046
  4295  0435                     l2040:
  4296  0435  3181  2133  3183   	fcall	_motorA_Derecha
  4297  0438  2C53               	goto	l334
  4298  0439                     l2042:
  4299  0439  3181  2137  3183   	fcall	_motorA_Izquierda
  4300  043C  2C53               	goto	l334
  4301  043D                     l336:	
  4302                           ;SOLUCION.c: 271:             case 3: currentMenu=MMOTORES; break;
  4303                           
  4304  043D  01A6               	clrf	_currentMenu
  4305  043E  0AA6               	incf	_currentMenu,f
  4306  043F  2C53               	goto	l334
  4307  0440                     l2046:
  4308  0440  0828               	movf	_op,w
  4309  0441  00A2               	movwf	??_MenuMotorA
  4310  0442  01A3               	clrf	??_MenuMotorA+1
  4311                           
  4312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4313                           ; Switch size 1, requested type "simple"
  4314                           ; Number of cases is 1, Range of values is 0 to 0
  4315                           ; switch strategies available:
  4316                           ; Name         Instructions Cycles
  4317                           ; simple_byte            4     3 (average)
  4318                           ; direct_byte            8     6 (fixed)
  4319                           ; jumptable            260     6 (fixed)
  4320                           ;	Chosen strategy is simple_byte
  4321  0443  0823               	movf	??_MenuMotorA+1,w
  4322  0444  3A00               	xorlw	0	; case 0
  4323  0445  1903               	skipnz
  4324  0446  2C48               	goto	l2388
  4325  0447  2C53               	goto	l334
  4326  0448                     l2388:
  4327                           
  4328                           ; Switch size 1, requested type "simple"
  4329                           ; Number of cases is 3, Range of values is 1 to 3
  4330                           ; switch strategies available:
  4331                           ; Name         Instructions Cycles
  4332                           ; simple_byte           10     6 (average)
  4333                           ; direct_byte           15     9 (fixed)
  4334                           ; jumptable            263     9 (fixed)
  4335                           ;	Chosen strategy is simple_byte
  4336  0448  0822               	movf	??_MenuMotorA,w
  4337  0449  3A01               	xorlw	1	; case 1
  4338  044A  1903               	skipnz
  4339  044B  2C35               	goto	l2040
  4340  044C  3A03               	xorlw	3	; case 2
  4341  044D  1903               	skipnz
  4342  044E  2C39               	goto	l2042
  4343  044F  3A01               	xorlw	1	; case 3
  4344  0450  1903               	skipnz
  4345  0451  2C3D               	goto	l336
  4346  0452  2C53               	goto	l334
  4347  0453                     l334:
  4348                           
  4349                           ;SOLUCION.c: 274:         op=1;
  4350  0453  0020               	movlb	0	; select bank0
  4351  0454  01A8               	clrf	_op
  4352  0455  0AA8               	incf	_op,f
  4353  0456                     l337:
  4354  0456  0008               	return
  4355  0457                     __end_of_MenuMotorA:
  4356                           
  4357                           	psect	text13
  4358  0137                     __ptext13:	
  4359 ;; *************** function _motorA_Izquierda *****************
  4360 ;; Defined at:
  4361 ;;		line 67 in file "SOLUCION.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;		None
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  1    wreg      void 
  4368 ;; Registers used:
  4369 ;;		None
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;Total ram usage:        0 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_MenuMotorA
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388  0137                     _motorA_Izquierda:	
  4389                           ;psect for function _motorA_Izquierda
  4390                           
  4391  0137                     l1848:	
  4392                           ;incstack = 0
  4393                           ; Regs used in _motorA_Izquierda: []
  4394                           
  4395                           
  4396                           ;SOLUCION.c: 68:     LATBbits.LATB3 = 0;
  4397  0137  0022               	movlb	2	; select bank2
  4398  0138  118D               	bcf	13,3	;volatile
  4399                           
  4400                           ;SOLUCION.c: 69:     LATBbits.LATB4 = 1;
  4401  0139  160D               	bsf	13,4	;volatile
  4402  013A                     l215:
  4403  013A  0008               	return
  4404  013B                     __end_of_motorA_Izquierda:
  4405                           
  4406                           	psect	text14
  4407  0133                     __ptext14:	
  4408 ;; *************** function _motorA_Derecha *****************
  4409 ;; Defined at:
  4410 ;;		line 63 in file "SOLUCION.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;		None
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		None
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;Total ram usage:        0 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_MenuMotorA
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437  0133                     _motorA_Derecha:	
  4438                           ;psect for function _motorA_Derecha
  4439                           
  4440  0133                     l1846:	
  4441                           ;incstack = 0
  4442                           ; Regs used in _motorA_Derecha: []
  4443                           
  4444                           
  4445                           ;SOLUCION.c: 64:     LATBbits.LATB3 = 1;
  4446  0133  0022               	movlb	2	; select bank2
  4447  0134  158D               	bsf	13,3	;volatile
  4448                           
  4449                           ;SOLUCION.c: 65:     LATBbits.LATB4 = 0;
  4450  0135  120D               	bcf	13,4	;volatile
  4451  0136                     l212:
  4452  0136  0008               	return
  4453  0137                     __end_of_motorA_Derecha:
  4454                           
  4455                           	psect	text15
  4456  018A                     __ptext15:	
  4457 ;; *************** function _lcd_out *****************
  4458 ;; Defined at:
  4459 ;;		line 156 in file "LCD_LIB.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  row             1    wreg     unsigned char 
  4462 ;;  col             1   11[COMMON] unsigned char 
  4463 ;;  str             2   12[COMMON] PTR unsigned char 
  4464 ;;		 -> STR_20(21), STR_19(21), STR_18(21), STR_17(21), 
  4465 ;;		 -> STR_16(21), STR_15(21), STR_14(21), STR_13(21), 
  4466 ;;		 -> STR_12(21), STR_11(21), STR_10(21), STR_9(21), 
  4467 ;;		 -> STR_8(21), STR_7(21), STR_6(21), STR_5(21), 
  4468 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  row             1    1[BANK0 ] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4480 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4483 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;Total ram usage:        5 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 4
  4487 ;; This function calls:
  4488 ;;		_lcd_set_cursor
  4489 ;;		_lcd_write
  4490 ;; This function is called by:
  4491 ;;		_MenuPPAL
  4492 ;;		_MenuSensores
  4493 ;;		_MenuMotores
  4494 ;;		_MenuMotorA
  4495 ;;		_MenuMotorB
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499  018A                     _lcd_out:	
  4500                           ;psect for function _lcd_out
  4501                           
  4502                           
  4503                           ;incstack = 0
  4504                           ; Regs used in _lcd_out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4505                           ;lcd_out@row stored from wreg
  4506  018A  0020               	movlb	0	; select bank0
  4507  018B  00A1               	movwf	lcd_out@row
  4508  018C                     l1820:
  4509                           
  4510                           ;LCD_LIB.c: 157:     lcd_set_cursor(row,col);
  4511  018C  087B               	movf	lcd_out@col,w
  4512  018D  00A0               	movwf	??_lcd_out
  4513  018E  0820               	movf	??_lcd_out,w
  4514  018F  00F7               	movwf	lcd_set_cursor@col
  4515  0190  0821               	movf	lcd_out@row,w
  4516  0191  3182  2222  3181   	fcall	_lcd_set_cursor
  4517                           
  4518                           ;LCD_LIB.c: 158:     while(*str){
  4519  0194  29A1               	goto	l1826
  4520  0195                     l1822:
  4521                           
  4522                           ;LCD_LIB.c: 159:         lcd_write(*str);
  4523  0195  087C               	movf	lcd_out@str,w
  4524  0196  0084               	movwf	4
  4525  0197  087D               	movf	lcd_out@str+1,w
  4526  0198  0085               	movwf	5
  4527  0199  0800               	movf	0,w	;code access
  4528  019A  3181  2142  3181   	fcall	_lcd_write
  4529  019D                     l1824:
  4530                           
  4531                           ;LCD_LIB.c: 160:         str++;
  4532  019D  3001               	movlw	1
  4533  019E  07FC               	addwf	lcd_out@str,f
  4534  019F  3000               	movlw	0
  4535  01A0  3DFD               	addwfc	lcd_out@str+1,f
  4536  01A1                     l1826:
  4537                           
  4538                           ;LCD_LIB.c: 158:     while(*str){
  4539  01A1  087C               	movf	lcd_out@str,w
  4540  01A2  0084               	movwf	4
  4541  01A3  087D               	movf	lcd_out@str+1,w
  4542  01A4  0085               	movwf	5
  4543  01A5  0012               	moviw fsr0++
  4544  01A6  1D03               	btfss	3,2
  4545  01A7  29A9               	goto	u481
  4546  01A8  29AA               	goto	u480
  4547  01A9                     u481:
  4548  01A9  2995               	goto	l1822
  4549  01AA                     u480:
  4550  01AA                     l113:
  4551  01AA  0008               	return
  4552  01AB                     __end_of_lcd_out:
  4553                           
  4554                           	psect	text16
  4555  014A                     __ptext16:	
  4556 ;; *************** function _lcd_char *****************
  4557 ;; Defined at:
  4558 ;;		line 164 in file "LCD_LIB.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  row             1    wreg     unsigned char 
  4561 ;;  col             1   11[COMMON] unsigned char 
  4562 ;;  letra           1   12[COMMON] unsigned char 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  row             1    0[BANK0 ] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;Total ram usage:        4 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 4
  4581 ;; This function calls:
  4582 ;;		_lcd_set_cursor
  4583 ;;		_lcd_write
  4584 ;; This function is called by:
  4585 ;;		_MenuPPAL
  4586 ;;		_MenuSensores
  4587 ;;		_MenuMotores
  4588 ;;		_MenuMotorA
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592  014A                     _lcd_char:	
  4593                           ;psect for function _lcd_char
  4594                           
  4595                           
  4596                           ;incstack = 0
  4597                           ; Regs used in _lcd_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4598                           ;lcd_char@row stored from wreg
  4599  014A  0020               	movlb	0	; select bank0
  4600  014B  00A0               	movwf	lcd_char@row
  4601  014C                     l1828:
  4602                           
  4603                           ;LCD_LIB.c: 165:     lcd_set_cursor(row,col);
  4604  014C  087B               	movf	lcd_char@col,w
  4605  014D  00FD               	movwf	??_lcd_char
  4606  014E  087D               	movf	??_lcd_char,w
  4607  014F  00F7               	movwf	lcd_set_cursor@col
  4608  0150  0820               	movf	lcd_char@row,w
  4609  0151  3182  2222  3181   	fcall	_lcd_set_cursor
  4610                           
  4611                           ;LCD_LIB.c: 166:     lcd_write(letra);
  4612  0154  087C               	movf	lcd_char@letra,w
  4613  0155  3181  2142  3181   	fcall	_lcd_write
  4614  0158                     l116:
  4615  0158  0008               	return
  4616  0159                     __end_of_lcd_char:
  4617                           
  4618                           	psect	text17
  4619  0142                     __ptext17:	
  4620 ;; *************** function _lcd_write *****************
  4621 ;; Defined at:
  4622 ;;		line 71 in file "LCD_LIB.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  letra           1    wreg     unsigned char 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  letra           1    6[COMMON] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      void 
  4629 ;; Registers used:
  4630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;Total ram usage:        1 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; Hardware stack levels required when called: 2
  4643 ;; This function calls:
  4644 ;;		__send_byte
  4645 ;; This function is called by:
  4646 ;;		_lcd_out
  4647 ;;		_lcd_char
  4648 ;;		_lcd_puts
  4649 ;;		_lcd_custom_char
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653  0142                     _lcd_write:	
  4654                           ;psect for function _lcd_write
  4655                           
  4656                           
  4657                           ;incstack = 0
  4658                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4659                           ;lcd_write@letra stored from wreg
  4660  0142  00F6               	movwf	lcd_write@letra
  4661  0143                     l1758:
  4662                           
  4663                           ;LCD_LIB.c: 72:     _send_byte(letra,1);
  4664  0143  01F2               	clrf	__send_byte@mode
  4665  0144  0AF2               	incf	__send_byte@mode,f
  4666  0145  0876               	movf	lcd_write@letra,w
  4667  0146  3181  21F7  3181   	fcall	__send_byte
  4668  0149                     l53:
  4669  0149  0008               	return
  4670  014A                     __end_of_lcd_write:
  4671                           
  4672                           	psect	text18
  4673  0222                     __ptext18:	
  4674 ;; *************** function _lcd_set_cursor *****************
  4675 ;; Defined at:
  4676 ;;		line 84 in file "LCD_LIB.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  row             1    wreg     unsigned char 
  4679 ;;  col             1    7[COMMON] unsigned char 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  row             1   10[COMMON] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4691 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4694 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;Total ram usage:        4 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 3
  4698 ;; This function calls:
  4699 ;;		_lcd_command
  4700 ;; This function is called by:
  4701 ;;		_lcd_out
  4702 ;;		_lcd_char
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706  0222                     _lcd_set_cursor:	
  4707                           ;psect for function _lcd_set_cursor
  4708                           
  4709                           
  4710                           ;incstack = 0
  4711                           ; Regs used in _lcd_set_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4712                           ;lcd_set_cursor@row stored from wreg
  4713  0222  00FA               	movwf	lcd_set_cursor@row
  4714  0223                     l1760:
  4715                           
  4716                           ;LCD_LIB.c: 86:     switch(row){
  4717  0223  2A42               	goto	l1772
  4718  0224                     l1762:
  4719  0224  0877               	movf	lcd_set_cursor@col,w
  4720  0225  3E7F               	addlw	127
  4721  0226  3181  213B  3182   	fcall	_lcd_command
  4722  0229  2A58               	goto	l72
  4723  022A                     l1764:
  4724  022A  0877               	movf	lcd_set_cursor@col,w
  4725  022B  3EBF               	addlw	191
  4726  022C  3181  213B  3182   	fcall	_lcd_command
  4727  022F  2A58               	goto	l72
  4728  0230                     l1766:
  4729  0230  0877               	movf	lcd_set_cursor@col,w
  4730  0231  3E93               	addlw	147
  4731  0232  3181  213B  3182   	fcall	_lcd_command
  4732  0235  2A58               	goto	l72
  4733  0236                     l1768:
  4734  0236  0877               	movf	lcd_set_cursor@col,w
  4735  0237  3ED3               	addlw	211
  4736  0238  3181  213B  3182   	fcall	_lcd_command
  4737  023B  2A58               	goto	l72
  4738  023C                     l1770:
  4739                           
  4740                           ;LCD_LIB.c: 92:             lcd_command(0x80+col-1);
  4741  023C  0877               	movf	lcd_set_cursor@col,w
  4742  023D  3E7F               	addlw	127
  4743  023E  3181  213B  3182   	fcall	_lcd_command
  4744                           
  4745                           ;LCD_LIB.c: 93:     }
  4746  0241  2A58               	goto	l72
  4747  0242                     l1772:
  4748  0242  087A               	movf	lcd_set_cursor@row,w
  4749  0243  00F8               	movwf	??_lcd_set_cursor
  4750  0244  01F9               	clrf	??_lcd_set_cursor+1
  4751                           
  4752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4753                           ; Switch size 1, requested type "simple"
  4754                           ; Number of cases is 1, Range of values is 0 to 0
  4755                           ; switch strategies available:
  4756                           ; Name         Instructions Cycles
  4757                           ; simple_byte            4     3 (average)
  4758                           ; direct_byte            8     6 (fixed)
  4759                           ; jumptable            260     6 (fixed)
  4760                           ;	Chosen strategy is simple_byte
  4761  0245  0879               	movf	??_lcd_set_cursor+1,w
  4762  0246  3A00               	xorlw	0	; case 0
  4763  0247  1903               	skipnz
  4764  0248  2A4A               	goto	l2390
  4765  0249  2A3C               	goto	l1770
  4766  024A                     l2390:
  4767                           
  4768                           ; Switch size 1, requested type "simple"
  4769                           ; Number of cases is 4, Range of values is 1 to 4
  4770                           ; switch strategies available:
  4771                           ; Name         Instructions Cycles
  4772                           ; simple_byte           13     7 (average)
  4773                           ; direct_byte           17     9 (fixed)
  4774                           ; jumptable            263     9 (fixed)
  4775                           ;	Chosen strategy is simple_byte
  4776  024A  0878               	movf	??_lcd_set_cursor,w
  4777  024B  3A01               	xorlw	1	; case 1
  4778  024C  1903               	skipnz
  4779  024D  2A24               	goto	l1762
  4780  024E  3A03               	xorlw	3	; case 2
  4781  024F  1903               	skipnz
  4782  0250  2A2A               	goto	l1764
  4783  0251  3A01               	xorlw	1	; case 3
  4784  0252  1903               	skipnz
  4785  0253  2A30               	goto	l1766
  4786  0254  3A07               	xorlw	7	; case 4
  4787  0255  1903               	skipnz
  4788  0256  2A36               	goto	l1768
  4789  0257  2A3C               	goto	l1770
  4790  0258                     l72:
  4791  0258  0008               	return
  4792  0259                     __end_of_lcd_set_cursor:
  4793                           
  4794                           	psect	text19
  4795  013B                     __ptext19:	
  4796 ;; *************** function _lcd_command *****************
  4797 ;; Defined at:
  4798 ;;		line 74 in file "LCD_LIB.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  cmd             1    wreg     unsigned char 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  cmd             1    6[COMMON] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;Total ram usage:        1 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 2
  4819 ;; This function calls:
  4820 ;;		__send_byte
  4821 ;; This function is called by:
  4822 ;;		_lcd_init
  4823 ;;		_lcd_set_cursor
  4824 ;;		_lcd_disable_blink
  4825 ;;		_lcd_disable_cursor
  4826 ;;		_lcd_clear
  4827 ;;		_lcd_return_home
  4828 ;;		_lcd_on
  4829 ;;		_lcd_off
  4830 ;;		_lcd_enable_blink
  4831 ;;		_lcd_enable_cursor
  4832 ;;		_lcd_scroll_left
  4833 ;;		_lcd_scroll_right
  4834 ;;		_lcd_custom_char
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838  013B                     _lcd_command:	
  4839                           ;psect for function _lcd_command
  4840                           
  4841                           
  4842                           ;incstack = 0
  4843                           ; Regs used in _lcd_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4844                           ;lcd_command@cmd stored from wreg
  4845  013B  00F6               	movwf	lcd_command@cmd
  4846  013C                     l1756:
  4847                           
  4848                           ;LCD_LIB.c: 75:     _send_byte(cmd,0);
  4849  013C  01F2               	clrf	__send_byte@mode
  4850  013D  0876               	movf	lcd_command@cmd,w
  4851  013E  3181  21F7  3181   	fcall	__send_byte
  4852  0141                     l56:
  4853  0141  0008               	return
  4854  0142                     __end_of_lcd_command:
  4855                           
  4856                           	psect	text20
  4857  01F7                     __ptext20:	
  4858 ;; *************** function __send_byte *****************
  4859 ;; Defined at:
  4860 ;;		line 22 in file "LCD_LIB.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  value           1    wreg     unsigned char 
  4863 ;;  mode            1    2[COMMON] unsigned char 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  value           1    5[COMMON] unsigned char 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      void 
  4868 ;; Registers used:
  4869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4875 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4879 ;;Total ram usage:        4 bytes
  4880 ;; Hardware stack levels used: 1
  4881 ;; Hardware stack levels required when called: 1
  4882 ;; This function calls:
  4883 ;;		__write_nibble
  4884 ;; This function is called by:
  4885 ;;		_lcd_write
  4886 ;;		_lcd_command
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890  01F7                     __send_byte:	
  4891                           ;psect for function __send_byte
  4892                           
  4893                           
  4894                           ;incstack = 0
  4895                           ; Regs used in __send_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4896                           ;__send_byte@value stored from wreg
  4897  01F7  00F5               	movwf	__send_byte@value
  4898  01F8                     l1742:
  4899                           
  4900                           ;LCD_LIB.c: 24:     switch(mode){
  4901  01F8  2A02               	goto	l1748
  4902  01F9                     l1744:
  4903  01F9  30FE               	movlw	254
  4904  01FA  00F3               	movwf	??__send_byte
  4905  01FB  0873               	movf	??__send_byte,w
  4906  01FC  0022               	movlb	2	; select bank2
  4907  01FD  058F               	andwf	15,f	;volatile
  4908  01FE  2A12               	goto	l1750
  4909  01FF                     l46:	
  4910                           ;LCD_LIB.c: 26:         case 1: LATD |= (1<<0); break;
  4911                           
  4912  01FF  0022               	movlb	2	; select bank2
  4913  0200  140F               	bsf	15,0	;volatile
  4914  0201  2A12               	goto	l1750
  4915  0202                     l1748:
  4916  0202  0872               	movf	__send_byte@mode,w
  4917  0203  00F3               	movwf	??__send_byte
  4918  0204  01F4               	clrf	??__send_byte+1
  4919                           
  4920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4921                           ; Switch size 1, requested type "simple"
  4922                           ; Number of cases is 1, Range of values is 0 to 0
  4923                           ; switch strategies available:
  4924                           ; Name         Instructions Cycles
  4925                           ; simple_byte            4     3 (average)
  4926                           ; direct_byte            8     6 (fixed)
  4927                           ; jumptable            260     6 (fixed)
  4928                           ;	Chosen strategy is simple_byte
  4929  0205  0874               	movf	??__send_byte+1,w
  4930  0206  3A00               	xorlw	0	; case 0
  4931  0207  1903               	skipnz
  4932  0208  2A0A               	goto	l2392
  4933  0209  2A12               	goto	l1750
  4934  020A                     l2392:
  4935                           
  4936                           ; Switch size 1, requested type "simple"
  4937                           ; Number of cases is 2, Range of values is 0 to 1
  4938                           ; switch strategies available:
  4939                           ; Name         Instructions Cycles
  4940                           ; simple_byte            7     4 (average)
  4941                           ; direct_byte           10     6 (fixed)
  4942                           ; jumptable            260     6 (fixed)
  4943                           ;	Chosen strategy is simple_byte
  4944  020A  0873               	movf	??__send_byte,w
  4945  020B  3A00               	xorlw	0	; case 0
  4946  020C  1903               	skipnz
  4947  020D  29F9               	goto	l1744
  4948  020E  3A01               	xorlw	1	; case 1
  4949  020F  1903               	skipnz
  4950  0210  29FF               	goto	l46
  4951  0211  2A12               	goto	l1750
  4952  0212                     l1750:
  4953                           
  4954                           ;LCD_LIB.c: 28:     _write_nibble(value>>4);
  4955  0212  0875               	movf	__send_byte@value,w
  4956  0213  00F3               	movwf	??__send_byte
  4957  0214  3004               	movlw	4
  4958  0215                     u475:
  4959  0215  36F3               	lsrf	??__send_byte,f
  4960  0216  0B89               	decfsz	9,f
  4961  0217  2A15               	goto	u475
  4962  0218  0873               	movf	??__send_byte,w
  4963  0219  3182  2259  3181   	fcall	__write_nibble
  4964                           
  4965                           ;LCD_LIB.c: 29:     _write_nibble(value&0x0F);
  4966  021C  0875               	movf	__send_byte@value,w
  4967  021D  390F               	andlw	15
  4968  021E  3182  2259  3181   	fcall	__write_nibble
  4969  0221                     l47:
  4970  0221  0008               	return
  4971  0222                     __end_of__send_byte:
  4972                           
  4973                           	psect	text21
  4974  0259                     __ptext21:	
  4975 ;; *************** function __write_nibble *****************
  4976 ;; Defined at:
  4977 ;;		line 9 in file "LCD_LIB.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;  nibble          1    wreg     unsigned char 
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;  nibble          1    1[COMMON] unsigned char 
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  1    wreg      void 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4995 ;;Total ram usage:        2 bytes
  4996 ;; Hardware stack levels used: 1
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		__send_byte
  5001 ;;		_lcd_init
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005  0259                     __write_nibble:	
  5006                           ;psect for function __write_nibble
  5007                           
  5008                           
  5009                           ;incstack = 0
  5010                           ; Regs used in __write_nibble: [wreg+status,2+status,0]
  5011                           ;__write_nibble@nibble stored from wreg
  5012  0259  00F1               	movwf	__write_nibble@nibble
  5013  025A                     l1726:
  5014                           
  5015                           ;LCD_LIB.c: 10:     if( (nibble & 0x01) == 0) LATD &= ~(1<<4); else LATD |= (1<<4);
  5016  025A  1871               	btfsc	__write_nibble@nibble,0
  5017  025B  2A5D               	goto	u431
  5018  025C  2A5E               	goto	u430
  5019  025D                     u431:
  5020  025D  2A64               	goto	l32
  5021  025E                     u430:
  5022  025E                     l1728:
  5023  025E  30EF               	movlw	239
  5024  025F  00F0               	movwf	??__write_nibble
  5025  0260  0870               	movf	??__write_nibble,w
  5026  0261  0022               	movlb	2	; select bank2
  5027  0262  058F               	andwf	15,f	;volatile
  5028  0263  2A66               	goto	l33
  5029  0264                     l32:
  5030  0264  0022               	movlb	2	; select bank2
  5031  0265  160F               	bsf	15,4	;volatile
  5032  0266                     l33:
  5033                           
  5034                           ;LCD_LIB.c: 11:     if( (nibble & 0x02) == 0) LATD &= ~(1<<5); else LATD |= (1<<5);
  5035  0266  18F1               	btfsc	__write_nibble@nibble,1
  5036  0267  2A69               	goto	u441
  5037  0268  2A6A               	goto	u440
  5038  0269                     u441:
  5039  0269  2A6F               	goto	l34
  5040  026A                     u440:
  5041  026A                     l1730:
  5042  026A  30DF               	movlw	223
  5043  026B  00F0               	movwf	??__write_nibble
  5044  026C  0870               	movf	??__write_nibble,w
  5045  026D  058F               	andwf	15,f	;volatile
  5046  026E  2A70               	goto	l35
  5047  026F                     l34:
  5048  026F  168F               	bsf	15,5	;volatile
  5049  0270                     l35:
  5050                           
  5051                           ;LCD_LIB.c: 12:     if( (nibble & 0x04) == 0) LATD &= ~(1<<6); else LATD |= (1<<6);
  5052  0270  1971               	btfsc	__write_nibble@nibble,2
  5053  0271  2A73               	goto	u451
  5054  0272  2A74               	goto	u450
  5055  0273                     u451:
  5056  0273  2A79               	goto	l36
  5057  0274                     u450:
  5058  0274                     l1732:
  5059  0274  30BF               	movlw	191
  5060  0275  00F0               	movwf	??__write_nibble
  5061  0276  0870               	movf	??__write_nibble,w
  5062  0277  058F               	andwf	15,f	;volatile
  5063  0278  2A7A               	goto	l37
  5064  0279                     l36:
  5065  0279  170F               	bsf	15,6	;volatile
  5066  027A                     l37:
  5067                           
  5068                           ;LCD_LIB.c: 13:     if( (nibble & 0x08) == 0) LATD &= ~(1<<7); else LATD |= (1<<7);
  5069  027A  19F1               	btfsc	__write_nibble@nibble,3
  5070  027B  2A7D               	goto	u461
  5071  027C  2A7E               	goto	u460
  5072  027D                     u461:
  5073  027D  2A83               	goto	l38
  5074  027E                     u460:
  5075  027E                     l1734:
  5076  027E  307F               	movlw	127
  5077  027F  00F0               	movwf	??__write_nibble
  5078  0280  0870               	movf	??__write_nibble,w
  5079  0281  058F               	andwf	15,f	;volatile
  5080  0282  2A84               	goto	l1736
  5081  0283                     l38:
  5082  0283  178F               	bsf	15,7	;volatile
  5083  0284                     l1736:
  5084                           
  5085                           ;LCD_LIB.c: 15:     LATD &= ~(1<<1);
  5086  0284  30FD               	movlw	253
  5087  0285  00F0               	movwf	??__write_nibble
  5088  0286  0870               	movf	??__write_nibble,w
  5089  0287  058F               	andwf	15,f	;volatile
  5090  0288                     l1738:
  5091                           
  5092                           ;LCD_LIB.c: 16:     LATD |= (1<<1);
  5093  0288  148F               	bsf	15,1	;volatile
  5094                           
  5095                           ;LCD_LIB.c: 17:     LATD &= ~(1<<1);
  5096  0289  30FD               	movlw	253
  5097  028A  00F0               	movwf	??__write_nibble
  5098  028B  0870               	movf	??__write_nibble,w
  5099  028C  058F               	andwf	15,f	;volatile
  5100  028D                     l1740:
  5101                           
  5102                           ;LCD_LIB.c: 19:     _delay((unsigned long)((300)*(8000000UL/4000000.0)));
  5103  028D  30C8               	movlw	200
  5104  028E                     u937:
  5105  028E  0B89               	decfsz	9,f
  5106  028F  2A8E               	goto	u937
  5107  0290                     l40:
  5108  0290  0008               	return
  5109  0291                     __end_of__write_nibble:
  5110                           
  5111                           	psect	text22
  5112  012F                     __ptext22:	
  5113 ;; *************** function _MenuLDR *****************
  5114 ;; Defined at:
  5115 ;;		line 290 in file "SOLUCION.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;		None
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;		None
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      void 
  5122 ;; Registers used:
  5123 ;;		None
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;Total ram usage:        0 bytes
  5134 ;; Hardware stack levels used: 1
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_main
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142  012F                     _MenuLDR:	
  5143                           ;psect for function _MenuLDR
  5144                           
  5145  012F                     l349:	
  5146                           ;incstack = 0
  5147                           ; Regs used in _MenuLDR: []
  5148                           
  5149  012F  0008               	return
  5150  0130                     __end_of_MenuLDR:
  5151  007E                     btemp	set	126	;btemp
  5152  007E                     wtemp0	set	126
  5153                           
  5154                           	psect	idloc
  5155                           
  5156                           ;Config register IDLOC0 @ 0x8000
  5157                           ;	unspecified, using default values
  5158  8000                     	org	32768
  5159  8000  3FFF               	dw	16383
  5160                           
  5161                           ;Config register IDLOC1 @ 0x8001
  5162                           ;	unspecified, using default values
  5163  8001                     	org	32769
  5164  8001  3FFF               	dw	16383
  5165                           
  5166                           ;Config register IDLOC2 @ 0x8002
  5167                           ;	unspecified, using default values
  5168  8002                     	org	32770
  5169  8002  3FFF               	dw	16383
  5170                           
  5171                           ;Config register IDLOC3 @ 0x8003
  5172                           ;	unspecified, using default values
  5173  8003                     	org	32771
  5174  8003  3FFF               	dw	16383
  5175                           
  5176                           	psect	config
  5177                           
  5178                           ;Config register CONFIG1 @ 0x8007
  5179                           ;	Oscillator Selection
  5180                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  5181                           ;	Watchdog Timer Enable
  5182                           ;	WDTE = OFF, WDT disabled
  5183                           ;	Power-up Timer Enable
  5184                           ;	PWRTE = OFF, PWRT disabled
  5185                           ;	MCLR Pin Function Select
  5186                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5187                           ;	Flash Program Memory Code Protection
  5188                           ;	CP = OFF, Program memory code protection is disabled
  5189                           ;	Data Memory Code Protection
  5190                           ;	CPD = OFF, Data memory code protection is disabled
  5191                           ;	Brown-out Reset Enable
  5192                           ;	BOREN = OFF, Brown-out Reset disabled
  5193                           ;	Clock Out Enable
  5194                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5195                           ;	Internal/External Switchover
  5196                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5197                           ;	Fail-Safe Clock Monitor Enable
  5198                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5199  8007                     	org	32775
  5200  8007  39E2               	dw	14818
  5201                           
  5202                           ;Config register CONFIG2 @ 0x8008
  5203                           ;	Flash Memory Self-Write Protection
  5204                           ;	WRT = OFF, Write protection off
  5205                           ;	Voltage Regulator Capacitor Enable
  5206                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  5207                           ;	PLL Enable
  5208                           ;	PLLEN = OFF, 4x PLL disabled
  5209                           ;	Stack Overflow/Underflow Reset Enable
  5210                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5211                           ;	Brown-out Reset Voltage Selection
  5212                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5213                           ;	Low-Voltage Programming Enable
  5214                           ;	LVP = ON, Low-voltage programming enabled
  5215  8008                     	org	32776
  5216  8008  3EFF               	dw	16127

Data Sizes:
    Strings     294
    Constant    0
    Data        1
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6       9
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    lcd_out@str	PTR unsigned char  size(2) Largest target is 21
		 -> STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), 
		 -> STR_16(CODE[21]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_8(CODE[21]), STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _SystemInit->_lcd_disable_blink
    _SystemInit->_lcd_disable_cursor
    _SystemInit->_lcd_init
    _lcd_init->_lcd_command
    _lcd_disable_cursor->_lcd_command
    _lcd_disable_blink->_lcd_command
    _MenuSensores->_lcd_char
    _MenuSensores->_lcd_out
    _MenuPPAL->_lcd_char
    _MenuPPAL->_lcd_out
    _MenuMotores->_lcd_char
    _MenuMotores->_lcd_out
    _MenuMotorB->_lcd_out
    _MenuMotorA->_lcd_char
    _MenuMotorA->_lcd_out
    _lcd_out->_lcd_set_cursor
    _lcd_char->_lcd_set_cursor
    _lcd_write->__send_byte
    _lcd_set_cursor->_lcd_command
    _lcd_command->__send_byte
    __send_byte->__write_nibble

Critical Paths under _main in BANK0

    _main->_MenuMotorA
    _main->_MenuMotores
    _main->_MenuPPAL
    _main->_MenuSensores
    _MenuSensores->_lcd_out
    _MenuPPAL->_lcd_out
    _MenuMotores->_lcd_out
    _MenuMotorB->_lcd_out
    _MenuMotorA->_lcd_out

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   54017
                                              4 BANK0      2     2      0
                            _MenuLDR
                         _MenuMotorA
                         _MenuMotorB
                        _MenuMotores
                           _MenuPPAL
                          _MenuRELOJ
                       _MenuSensores
                           _MenuTemp
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    1072
                  _configurarPuertos
                  _lcd_disable_blink
                 _lcd_disable_cursor
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     416
                                              7 COMMON     1     1      0
                      __write_nibble
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_disable_cursor                                   1     1      0     328
                                              7 COMMON     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_disable_blink                                    1     1      0     328
                                              7 COMMON     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _configurarPuertos                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuTemp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuSensores                                         2     2      0   12219
                                              2 BANK0      2     2      0
                           _lcd_char
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _MenuRELOJ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuPPAL                                             2     2      0   12219
                                              2 BANK0      2     2      0
                           _lcd_char
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _MenuMotores                                          2     2      0   12219
                                              2 BANK0      2     2      0
                           _lcd_char
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _MenuMotorB                                           0     0      0    4069
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _MenuMotorA                                           2     2      0   12219
                                              2 BANK0      2     2      0
                           _lcd_char
                            _lcd_out
                     _motorA_Derecha
                   _motorA_Izquierda
 ---------------------------------------------------------------------------------
 (2) _motorA_Izquierda                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motorA_Derecha                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_out                                              5     2      3    4069
                                             11 COMMON     3     0      3
                                              0 BANK0      2     2      0
                     _lcd_set_cursor
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             4     2      2    8150
                                             11 COMMON     3     1      2
                                              0 BANK0      1     1      0
                     _lcd_set_cursor
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            1     1      0     328
                                              6 COMMON     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     3      1     612
                                              7 COMMON     4     3      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          1     1      0     328
                                              6 COMMON     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (4) __send_byte                                           4     3      1     306
                                              2 COMMON     4     3      1
                      __write_nibble
 ---------------------------------------------------------------------------------
 (5) __write_nibble                                        2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MenuLDR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MenuLDR
   _MenuMotorA
     _lcd_char
       _lcd_set_cursor
         _lcd_command
           __send_byte
             __write_nibble
       _lcd_write
         __send_byte
     _lcd_out
       _lcd_set_cursor
       _lcd_write
     _motorA_Derecha
     _motorA_Izquierda
   _MenuMotorB
     _lcd_out
   _MenuMotores
     _lcd_char
     _lcd_out
   _MenuPPAL
     _lcd_char
     _lcd_out
   _MenuRELOJ
   _MenuSensores
     _lcd_char
     _lcd_out
   _MenuTemp
   _SystemInit
     _configurarPuertos
     _lcd_disable_blink
       _lcd_command
     _lcd_disable_cursor
       _lcd_command
     _lcd_init
       __write_nibble
       _lcd_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       9       5       11.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      17      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      17      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Oct 12 21:16:00 2023

               lcd_char@col 007B                 lcd_char@row 0020                          l40 0290  
                        l32 0264                          l33 0266                          l34 026F  
                        l50 0343                          l35 0270                          l36 0279  
                        l37 027A                          l53 0149                          l38 0283  
                        l46 01FF                          l47 0221                          l56 0141  
                        l72 0258                          l90 0167                          l96 0176  
                        _op 0028               lcd_char@letra 007C                         l113 01AA  
                       l116 0158                         l212 0136                         l302 0543  
                       l310 0569                         l206 0189                         l215 013A  
                       l232 062A                         l241 0643                         l209 01CD  
                       l315 0404                         l307 0567                         l251 067B  
                       l235 063F                         l324 041D                         l340 01F6  
                       l252 0660                         l236 062F                         l334 0453  
                       l318 0419                         l246 0656                         l254 067D  
                       l319 0409                         l343 0130                         l263 07B1  
                       l336 043D                         l264 07A1                         l329 0430  
                       l337 0456                         l274 07C8                         l346 0131  
                       l291 052C                         l283 07F6                         l259 079C  
                       l292 051C                         l349 012F                         l269 07B5  
                       l279 07F4                         l288 0517                         l297 0530  
                       u500 0633                         u501 0632                         u430 025E  
                       u510 063D                         u431 025D                         u511 063C  
                       u440 026A                         u600 0530                         u520 0643  
                       u441 0269                         u601 052F                         u521 0642  
                       u450 0274                         u610 0534                         u530 0647  
                       u451 0273                         u611 0533                         u531 0646  
                       u460 027E                         u620 053B                         u540 064E  
                       u700 07C0                         u461 027D                         u621 053A  
                       u541 064D                         u701 07BF                         u630 0543  
                       u550 0656                         u710 07C8                         u631 0542  
                       u551 0655                         u711 07C7                         u480 01AA  
                       u800 0434                         u640 0547                         u560 065A  
                       u720 07CC                         u481 01A9                         u801 0433  
                       u641 0546                         u561 0659                         u721 07CB  
                       u730 0409                         u570 051C                         u490 062F  
                       u650 07A1                         u475 0215                         u731 0408  
                       u571 051B                         u491 062E                         u651 07A0  
                       u740 040D                         u580 0520                         u660 07A5  
                       u741 040C                         u581 051F                         u661 07A4  
                       u750 0417                         u590 052A                         u670 07AF  
                       u751 0416                         u591 0529                         u671 07AE  
                       u760 041D                         u680 07B5                         u761 041C  
                       u681 07B4                         u770 0421                         u690 07B9  
                       u771 0420                         u691 07B8                         u907 033E  
                       u780 0428                         u781 0427                         u917 0173  
                       u790 0430                         u791 042F                         u927 0164  
                       u847 02DF                         u937 028E                         u857 02F9  
                       u867 0305                         u877 030E                         u887 0320  
                       u897 0332                         wreg 0009             ?_lcd_set_cursor 0077  
                      l2000 07DE                        l2010 0344                        l2012 037B  
                      l2020 03F0                        l2014 03A2                        l2040 0435  
                      l2032 0421                        l2024 040D                        l2016 03C9  
                      l2042 0439                        l2034 0428                        l2026 0411  
                      l2130 029D                        l2036 042C                        l2028 0417  
                      l2140 02B1                        l2132 02A1                        l2124 0291  
                      l2046 0440                        l2134 02A5                        l2126 0295  
                      l2056 01CE                        l2136 02A9                        l2128 0299  
                      l2144 02B5                        l2138 02AD                        l2146 02DB  
                      l1800 032A                        l1730 026A                        l1810 015E  
                      l1802 032F                        l1740 028D                        l1732 0274  
                      l1820 018C                        l2380 0670                        l1900 0668  
                      l1812 0163                        l1804 0337                        l2372 02BE  
                      l1734 027E                        l1726 025A                        l1750 0212  
                      l1742 01F8                        l2390 024A                        l1822 0195  
                      l2382 050C                        l1910 0457                        l2374 078E  
                      l1830 01AB                        l1814 0168                        l1806 033B  
                      l1736 0284                        l1728 025E                        l2392 020A  
                      l1744 01F9                        l1760 0223                        l1824 019D  
                      l2384 055C                        l1912 048E                        l1920 0503  
                      l2376 07E6                        l1840 01C9                        l1832 01C2  
                      l1808 0159                        l1816 016D                        l1738 0288  
                      l1770 023C                        l1762 0224                        l1826 01A1  
                      l2386 03F9                        l1914 04B5                        l2378 061F  
                      l1842 01CB                        l1834 01C5                        l1818 0172  
                      l1850 0177                        l1748 0202                        l1756 013C  
                      l1764 022A                        l1772 0242                        l1828 014C  
                      l2388 0448                        l1940 0548                        l1932 0534  
                      l1924 0520                        l1916 04DC                        l1844 01CC  
                      l1836 01C7                        l1780 02F6                        l1860 0183  
                      l1852 017A                        l1766 0230                        l1758 0143  
                      l1846 0133                        l1942 054D                        l1934 053B  
                      l1926 0524                        l1870 05EF                        l1838 01C8  
                      l1790 0311                        l1782 02FE                        l1862 0186  
                      l1854 017B                        l1768 0236                        l1848 0137  
                      l1944 0552                        l1936 053F                        l1928 052A  
                      l1880 0637                        l1864 056A                        l1960 06B5  
                      l1792 0315                        l1784 0302                        l1856 017D  
                      l1890 0652                        l1882 063D                        l1866 05A1  
                      l1874 0616                        l1962 06E9                        l1970 0785  
                      l1794 0319                        l1786 0309                        l1778 02E7  
                      l1858 0180                        l1948 0554                        l1868 05C8  
                      l1964 071D                        l1796 031D                        l1788 030D  
                      l1894 065B                        l1886 0647                        l1878 0633  
                      l1990 07CD                        l1982 07B9                        l1974 07A5  
                      l1966 0751                        l1958 067E                        l1798 0325  
                      l1896 0663                        l1888 064E                        l1992 07D2  
                      l1984 07C0                        l1976 07A9                        l1994 07D7  
                      l1986 07C4                        l1978 07AF                        l1996 07DC  
                      STR_1 0854                        STR_2 0911                        STR_3 0815  
                      STR_4 0800                        STR_5 08D2                        STR_6 0893  
                      STR_7 08BD                        STR_8 0800                        STR_9 08A8  
                      _LATD 010F                        _WPUB 020D    __end_of_motorA_Izquierda 013B  
                      _main 0291                        fsr0h 0005                        indf0 0000  
                      fsr0l 0004                        btemp 007E                        start 0002  
             __write_nibble 0259             __end_of_MenuLDR 0130               ??_MenuMotores 0022  
                     ?_main 0070                       STR_10 082A                       STR_11 08E7  
                     STR_20 0800                       STR_12 0800                       STR_13 0869  
                     STR_14 083F                       STR_15 08FC                       STR_16 0800  
                     STR_17 087E                       STR_18 083F                       STR_19 08FC  
                     _TRISD 008F             __end_of_lcd_out 01AB               ?_MenuSensores 0070  
                     status 0003                       wtemp0 007E              ?__write_nibble 0070  
           __initialization 07F7                __end_of_main 02E7            __end_of_MenuPPAL 067E  
                _MenuMotorA 0344                  _MenuMotorB 01CE            __end_of_MenuTemp 0132  
                    ??_main 0024              lcd_command@cmd 0076              ??_MenuSensores 0022  
       __end_of_MenuMotores 056A                      _ADRESH 009C                      _ADRESL 009B  
                    _ANSELD 018F                      _BORCON 0116                      _OSCCON 0099  
                 ??_MenuLDR 0070            __end_of_lcd_char 0159            __end_of_lcd_init 0344  
                 ??_lcd_out 0020           _configurarPuertos 01AB          ?_configurarPuertos 0070  
       ??_configurarPuertos 0070     __end_of__initialization 07FD             ??__write_nibble 0070  
            __pcstackCOMMON 0070                __pidataBANK0 0132                 ?_MenuMotorA 0070  
               ?_MenuMotorB 0070   __end_of_configurarPuertos 01CE           __end_of_MenuRELOJ 0131  
               _MenuMotores 0457            ??_lcd_set_cursor 0078              _OPTION_REGbits 0095  
                _SystemInit 0177                  __pbssBANK0 0026                   ?_MenuPPAL 0070  
                 ?_MenuTemp 0070           ?_motorA_Izquierda 0070          ??_motorA_Izquierda 0070  
                __pmaintext 0291                  __send_byte 01F7        __end_of_MenuSensores 07F7  
         _lcd_disable_blink 0159                     _OSCTUNE 0098                   ?_lcd_char 007B  
        ?_lcd_disable_blink 0070                   ?_lcd_init 0070                  ??_MenuPPAL 0022  
                ??_MenuTemp 0070         ??_lcd_disable_blink 0077                     _MenuLDR 012F  
         __end_of_lcd_write 014A                     __ptext1 0177                     __ptext2 02E7  
                   __ptext3 0168                     __ptext4 0159                     __ptext5 01AB  
                   __ptext6 0131                     __ptext7 067E                     __ptext8 0130  
                   __ptext9 056A                     _lcd_out 018A   __end_of_lcd_disable_blink 0168  
               ?_SystemInit 0070            __send_byte@value 0075              _motorA_Derecha 0133  
                ??_lcd_char 007D                  ??_lcd_init 0077        end_of_initialization 07FD  
__end_of_lcd_disable_cursor 0177                 ?__send_byte 0072                   _PORTBbits 000D  
    __end_of_motorA_Derecha 0137                   _TRISAbits 008C                   _TRISBbits 008D  
                 _TRISDbits 008F              lcd_write@letra 0076                  lcd_out@col 007B  
                lcd_out@row 0021                  lcd_out@str 007C               ??_lcd_command 0076  
              ??_MenuMotorA 0022                ??_MenuMotorB 007E                ?_MenuMotores 0070  
           ?_motorA_Derecha 0070         start_initialization 07F7                   _MenuRELOJ 0130  
              _MenuSensores 067E                 __lcd_params 0027          __end_of_MenuMotorA 0457  
        __end_of_MenuMotorB 01F7       __end_of__write_nibble 0291         __end_of_lcd_command 0142  
               __pdataBANK0 0028                  ?_MenuRELOJ 0070                   ___latbits 0003  
             __pcstackBANK0 0020                    ?_MenuLDR 0070                   _lcd_write 0142  
                  ?_lcd_out 007B                ??_SystemInit 0078             __send_byte@mode 0072  
                  _LATBbits 010D                    _LATDbits 010F                 _lcd_command 013B  
              ??__send_byte 0073          __end_of_SystemInit 018A          _lcd_disable_cursor 0168  
                _ADCON0bits 009D                  _ADCON1bits 009E         ?_lcd_disable_cursor 0070  
                ?_lcd_write 0070                 ??_MenuRELOJ 0070          __end_of__send_byte 0222  
                  _MenuPPAL 056A        ??_lcd_disable_cursor 0077                    _MenuTemp 0131  
          ??_motorA_Derecha 0070            _motorA_Izquierda 0137                  _ANSELAbits 018C  
                _ANSELBbits 018D                  _ANSELDbits 018F                 _currentMenu 0026  
                  __ptext10 0457                    __ptext11 01CE                    __ptext20 01F7  
                  __ptext12 0344                    __ptext21 0259                    __ptext13 0137  
                  __ptext22 012F                    __ptext14 0133                    __ptext15 018A  
                  __ptext16 014A                    __ptext17 0142                    __ptext18 0222  
                  __ptext19 013B                    _lcd_char 014A                    _lcd_init 02E7  
               ??_lcd_write 0076              __pstringtext10 08BD              __pstringtext11 08D2  
            __pstringtext12 08E7              __pstringtext13 08FC              __pstringtext14 0911  
            __pstringtext15 0000        __write_nibble@nibble 0071              _lcd_set_cursor 0222  
         lcd_set_cursor@col 0077           lcd_set_cursor@row 007A               __pstringtext1 0800  
             __pstringtext2 0815               __pstringtext3 082A               __pstringtext4 083F  
             __pstringtext5 0854               __pstringtext6 0869               __pstringtext7 087E  
             __pstringtext8 0893               __pstringtext9 08A8      __end_of_lcd_set_cursor 0259  
              ?_lcd_command 0070  
