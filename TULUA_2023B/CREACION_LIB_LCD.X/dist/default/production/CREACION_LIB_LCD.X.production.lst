

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Oct 05 18:35:32 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F1939 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0110                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011B                     	;# 
   130  011D                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  018F                     	;# 
   134  0190                     	;# 
   135  0191                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019D                     	;# 
   153  019E                     	;# 
   154  019F                     	;# 
   155  020D                     	;# 
   156  0210                     	;# 
   157  0211                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0291                     	;# 
   166  0291                     	;# 
   167  0292                     	;# 
   168  0293                     	;# 
   169  0294                     	;# 
   170  0295                     	;# 
   171  0295                     	;# 
   172  0296                     	;# 
   173  0298                     	;# 
   174  0298                     	;# 
   175  0299                     	;# 
   176  029A                     	;# 
   177  029B                     	;# 
   178  029C                     	;# 
   179  029C                     	;# 
   180  029D                     	;# 
   181  029E                     	;# 
   182  029F                     	;# 
   183  0311                     	;# 
   184  0311                     	;# 
   185  0312                     	;# 
   186  0313                     	;# 
   187  0314                     	;# 
   188  0315                     	;# 
   189  0315                     	;# 
   190  0316                     	;# 
   191  0318                     	;# 
   192  0318                     	;# 
   193  0319                     	;# 
   194  031A                     	;# 
   195  031C                     	;# 
   196  031C                     	;# 
   197  031D                     	;# 
   198  031E                     	;# 
   199  0394                     	;# 
   200  0395                     	;# 
   201  0396                     	;# 
   202  0415                     	;# 
   203  0416                     	;# 
   204  0417                     	;# 
   205  041C                     	;# 
   206  041D                     	;# 
   207  041E                     	;# 
   208  0791                     	;# 
   209  0792                     	;# 
   210  0793                     	;# 
   211  0794                     	;# 
   212  0795                     	;# 
   213  0798                     	;# 
   214  0799                     	;# 
   215  079A                     	;# 
   216  07A0                     	;# 
   217  07A1                     	;# 
   218  07A2                     	;# 
   219  07A3                     	;# 
   220  07A4                     	;# 
   221  07A5                     	;# 
   222  07A6                     	;# 
   223  07A7                     	;# 
   224  07A8                     	;# 
   225  07A9                     	;# 
   226  07AA                     	;# 
   227  07AB                     	;# 
   228  0FE4                     	;# 
   229  0FE5                     	;# 
   230  0FE6                     	;# 
   231  0FE7                     	;# 
   232  0FE8                     	;# 
   233  0FE9                     	;# 
   234  0FEA                     	;# 
   235  0FEB                     	;# 
   236  0FED                     	;# 
   237  0FEE                     	;# 
   238  0FEF                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000F                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0110                     	;# 
   294  0111                     	;# 
   295  0112                     	;# 
   296  0113                     	;# 
   297  0114                     	;# 
   298  0115                     	;# 
   299  0116                     	;# 
   300  0117                     	;# 
   301  0118                     	;# 
   302  0119                     	;# 
   303  011A                     	;# 
   304  011B                     	;# 
   305  011D                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  018F                     	;# 
   309  0190                     	;# 
   310  0191                     	;# 
   311  0191                     	;# 
   312  0192                     	;# 
   313  0193                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0194                     	;# 
   317  0195                     	;# 
   318  0196                     	;# 
   319  0199                     	;# 
   320  019A                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019C                     	;# 
   326  019C                     	;# 
   327  019D                     	;# 
   328  019E                     	;# 
   329  019F                     	;# 
   330  020D                     	;# 
   331  0210                     	;# 
   332  0211                     	;# 
   333  0212                     	;# 
   334  0213                     	;# 
   335  0214                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0216                     	;# 
   339  0217                     	;# 
   340  0291                     	;# 
   341  0291                     	;# 
   342  0292                     	;# 
   343  0293                     	;# 
   344  0294                     	;# 
   345  0295                     	;# 
   346  0295                     	;# 
   347  0296                     	;# 
   348  0298                     	;# 
   349  0298                     	;# 
   350  0299                     	;# 
   351  029A                     	;# 
   352  029B                     	;# 
   353  029C                     	;# 
   354  029C                     	;# 
   355  029D                     	;# 
   356  029E                     	;# 
   357  029F                     	;# 
   358  0311                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0314                     	;# 
   363  0315                     	;# 
   364  0315                     	;# 
   365  0316                     	;# 
   366  0318                     	;# 
   367  0318                     	;# 
   368  0319                     	;# 
   369  031A                     	;# 
   370  031C                     	;# 
   371  031C                     	;# 
   372  031D                     	;# 
   373  031E                     	;# 
   374  0394                     	;# 
   375  0395                     	;# 
   376  0396                     	;# 
   377  0415                     	;# 
   378  0416                     	;# 
   379  0417                     	;# 
   380  041C                     	;# 
   381  041D                     	;# 
   382  041E                     	;# 
   383  0791                     	;# 
   384  0792                     	;# 
   385  0793                     	;# 
   386  0794                     	;# 
   387  0795                     	;# 
   388  0798                     	;# 
   389  0799                     	;# 
   390  079A                     	;# 
   391  07A0                     	;# 
   392  07A1                     	;# 
   393  07A2                     	;# 
   394  07A3                     	;# 
   395  07A4                     	;# 
   396  07A5                     	;# 
   397  07A6                     	;# 
   398  07A7                     	;# 
   399  07A8                     	;# 
   400  07A9                     	;# 
   401  07AA                     	;# 
   402  07AB                     	;# 
   403  0FE4                     	;# 
   404  0FE5                     	;# 
   405  0FE6                     	;# 
   406  0FE7                     	;# 
   407  0FE8                     	;# 
   408  0FE9                     	;# 
   409  0FEA                     	;# 
   410  0FEB                     	;# 
   411  0FED                     	;# 
   412  0FEE                     	;# 
   413  0FEF                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  000D                     	;# 
   428  000E                     	;# 
   429  000F                     	;# 
   430  0010                     	;# 
   431  0011                     	;# 
   432  0012                     	;# 
   433  0013                     	;# 
   434  0015                     	;# 
   435  0016                     	;# 
   436  0016                     	;# 
   437  0017                     	;# 
   438  0018                     	;# 
   439  0019                     	;# 
   440  001A                     	;# 
   441  001B                     	;# 
   442  001C                     	;# 
   443  001E                     	;# 
   444  001F                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  010C                     	;# 
   465  010D                     	;# 
   466  010E                     	;# 
   467  010F                     	;# 
   468  0110                     	;# 
   469  0111                     	;# 
   470  0112                     	;# 
   471  0113                     	;# 
   472  0114                     	;# 
   473  0115                     	;# 
   474  0116                     	;# 
   475  0117                     	;# 
   476  0118                     	;# 
   477  0119                     	;# 
   478  011A                     	;# 
   479  011B                     	;# 
   480  011D                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483  018F                     	;# 
   484  0190                     	;# 
   485  0191                     	;# 
   486  0191                     	;# 
   487  0192                     	;# 
   488  0193                     	;# 
   489  0193                     	;# 
   490  0193                     	;# 
   491  0194                     	;# 
   492  0195                     	;# 
   493  0196                     	;# 
   494  0199                     	;# 
   495  019A                     	;# 
   496  019B                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019C                     	;# 
   501  019C                     	;# 
   502  019D                     	;# 
   503  019E                     	;# 
   504  019F                     	;# 
   505  020D                     	;# 
   506  0210                     	;# 
   507  0211                     	;# 
   508  0212                     	;# 
   509  0213                     	;# 
   510  0214                     	;# 
   511  0215                     	;# 
   512  0215                     	;# 
   513  0216                     	;# 
   514  0217                     	;# 
   515  0291                     	;# 
   516  0291                     	;# 
   517  0292                     	;# 
   518  0293                     	;# 
   519  0294                     	;# 
   520  0295                     	;# 
   521  0295                     	;# 
   522  0296                     	;# 
   523  0298                     	;# 
   524  0298                     	;# 
   525  0299                     	;# 
   526  029A                     	;# 
   527  029B                     	;# 
   528  029C                     	;# 
   529  029C                     	;# 
   530  029D                     	;# 
   531  029E                     	;# 
   532  029F                     	;# 
   533  0311                     	;# 
   534  0311                     	;# 
   535  0312                     	;# 
   536  0313                     	;# 
   537  0314                     	;# 
   538  0315                     	;# 
   539  0315                     	;# 
   540  0316                     	;# 
   541  0318                     	;# 
   542  0318                     	;# 
   543  0319                     	;# 
   544  031A                     	;# 
   545  031C                     	;# 
   546  031C                     	;# 
   547  031D                     	;# 
   548  031E                     	;# 
   549  0394                     	;# 
   550  0395                     	;# 
   551  0396                     	;# 
   552  0415                     	;# 
   553  0416                     	;# 
   554  0417                     	;# 
   555  041C                     	;# 
   556  041D                     	;# 
   557  041E                     	;# 
   558  0791                     	;# 
   559  0792                     	;# 
   560  0793                     	;# 
   561  0794                     	;# 
   562  0795                     	;# 
   563  0798                     	;# 
   564  0799                     	;# 
   565  079A                     	;# 
   566  07A0                     	;# 
   567  07A1                     	;# 
   568  07A2                     	;# 
   569  07A3                     	;# 
   570  07A4                     	;# 
   571  07A5                     	;# 
   572  07A6                     	;# 
   573  07A7                     	;# 
   574  07A8                     	;# 
   575  07A9                     	;# 
   576  07AA                     	;# 
   577  07AB                     	;# 
   578  0FE4                     	;# 
   579  0FE5                     	;# 
   580  0FE6                     	;# 
   581  0FE7                     	;# 
   582  0FE8                     	;# 
   583  0FE9                     	;# 
   584  0FEA                     	;# 
   585  0FEB                     	;# 
   586  0FED                     	;# 
   587  0FEE                     	;# 
   588  0FEF                     	;# 
   589  0000                     	;# 
   590  0001                     	;# 
   591  0002                     	;# 
   592  0003                     	;# 
   593  0004                     	;# 
   594  0005                     	;# 
   595  0006                     	;# 
   596  0007                     	;# 
   597  0008                     	;# 
   598  0009                     	;# 
   599  000A                     	;# 
   600  000B                     	;# 
   601  000C                     	;# 
   602  000D                     	;# 
   603  000E                     	;# 
   604  000F                     	;# 
   605  0010                     	;# 
   606  0011                     	;# 
   607  0012                     	;# 
   608  0013                     	;# 
   609  0015                     	;# 
   610  0016                     	;# 
   611  0016                     	;# 
   612  0017                     	;# 
   613  0018                     	;# 
   614  0019                     	;# 
   615  001A                     	;# 
   616  001B                     	;# 
   617  001C                     	;# 
   618  001E                     	;# 
   619  001F                     	;# 
   620  008C                     	;# 
   621  008D                     	;# 
   622  008E                     	;# 
   623  008F                     	;# 
   624  0090                     	;# 
   625  0091                     	;# 
   626  0092                     	;# 
   627  0093                     	;# 
   628  0095                     	;# 
   629  0096                     	;# 
   630  0097                     	;# 
   631  0098                     	;# 
   632  0099                     	;# 
   633  009A                     	;# 
   634  009B                     	;# 
   635  009B                     	;# 
   636  009C                     	;# 
   637  009D                     	;# 
   638  009E                     	;# 
   639  010C                     	;# 
   640  010D                     	;# 
   641  010E                     	;# 
   642  010F                     	;# 
   643  0110                     	;# 
   644  0111                     	;# 
   645  0112                     	;# 
   646  0113                     	;# 
   647  0114                     	;# 
   648  0115                     	;# 
   649  0116                     	;# 
   650  0117                     	;# 
   651  0118                     	;# 
   652  0119                     	;# 
   653  011A                     	;# 
   654  011B                     	;# 
   655  011D                     	;# 
   656  018C                     	;# 
   657  018D                     	;# 
   658  018F                     	;# 
   659  0190                     	;# 
   660  0191                     	;# 
   661  0191                     	;# 
   662  0192                     	;# 
   663  0193                     	;# 
   664  0193                     	;# 
   665  0193                     	;# 
   666  0194                     	;# 
   667  0195                     	;# 
   668  0196                     	;# 
   669  0199                     	;# 
   670  019A                     	;# 
   671  019B                     	;# 
   672  019B                     	;# 
   673  019B                     	;# 
   674  019B                     	;# 
   675  019C                     	;# 
   676  019C                     	;# 
   677  019D                     	;# 
   678  019E                     	;# 
   679  019F                     	;# 
   680  020D                     	;# 
   681  0210                     	;# 
   682  0211                     	;# 
   683  0212                     	;# 
   684  0213                     	;# 
   685  0214                     	;# 
   686  0215                     	;# 
   687  0215                     	;# 
   688  0216                     	;# 
   689  0217                     	;# 
   690  0291                     	;# 
   691  0291                     	;# 
   692  0292                     	;# 
   693  0293                     	;# 
   694  0294                     	;# 
   695  0295                     	;# 
   696  0295                     	;# 
   697  0296                     	;# 
   698  0298                     	;# 
   699  0298                     	;# 
   700  0299                     	;# 
   701  029A                     	;# 
   702  029B                     	;# 
   703  029C                     	;# 
   704  029C                     	;# 
   705  029D                     	;# 
   706  029E                     	;# 
   707  029F                     	;# 
   708  0311                     	;# 
   709  0311                     	;# 
   710  0312                     	;# 
   711  0313                     	;# 
   712  0314                     	;# 
   713  0315                     	;# 
   714  0315                     	;# 
   715  0316                     	;# 
   716  0318                     	;# 
   717  0318                     	;# 
   718  0319                     	;# 
   719  031A                     	;# 
   720  031C                     	;# 
   721  031C                     	;# 
   722  031D                     	;# 
   723  031E                     	;# 
   724  0394                     	;# 
   725  0395                     	;# 
   726  0396                     	;# 
   727  0415                     	;# 
   728  0416                     	;# 
   729  0417                     	;# 
   730  041C                     	;# 
   731  041D                     	;# 
   732  041E                     	;# 
   733  0791                     	;# 
   734  0792                     	;# 
   735  0793                     	;# 
   736  0794                     	;# 
   737  0795                     	;# 
   738  0798                     	;# 
   739  0799                     	;# 
   740  079A                     	;# 
   741  07A0                     	;# 
   742  07A1                     	;# 
   743  07A2                     	;# 
   744  07A3                     	;# 
   745  07A4                     	;# 
   746  07A5                     	;# 
   747  07A6                     	;# 
   748  07A7                     	;# 
   749  07A8                     	;# 
   750  07A9                     	;# 
   751  07AA                     	;# 
   752  07AB                     	;# 
   753  0FE4                     	;# 
   754  0FE5                     	;# 
   755  0FE6                     	;# 
   756  0FE7                     	;# 
   757  0FE8                     	;# 
   758  0FE9                     	;# 
   759  0FEA                     	;# 
   760  0FEB                     	;# 
   761  0FED                     	;# 
   762  0FEE                     	;# 
   763  0FEF                     	;# 
   764                           
   765                           	psect	idataBANK0
   766  0666                     __pidataBANK0:
   767                           
   768                           ;initializer for _customChar2
   769  0666  3402               	retlw	2
   770  0667  3406               	retlw	6
   771  0668  341E               	retlw	30
   772  0669  341E               	retlw	30
   773  066A  341E               	retlw	30
   774  066B  3406               	retlw	6
   775  066C  3402               	retlw	2
   776  066D  3400               	retlw	0
   777                           
   778                           ;initializer for _customChar1
   779  066E  340E               	retlw	14
   780  066F  3411               	retlw	17
   781  0670  3411               	retlw	17
   782  0671  341F               	retlw	31
   783  0672  341B               	retlw	27
   784  0673  341B               	retlw	27
   785  0674  341F               	retlw	31
   786  0675  341F               	retlw	31
   787  008F                     _TRISD	set	143
   788  010F                     _LATD	set	271
   789  018F                     _ANSELD	set	399
   790                           
   791                           	psect	stringtext1
   792  0800                     __pstringtext1:
   793  0800                     STR_1:
   794  0800  3455               	retlw	85	;'U'
   795  0801  346E               	retlw	110	;'n'
   796  0802  3469               	retlw	105	;'i'
   797  0803  3476               	retlw	118	;'v'
   798  0804  3461               	retlw	97	;'a'
   799  0805  346C               	retlw	108	;'l'
   800  0806  346C               	retlw	108	;'l'
   801  0807  3465               	retlw	101	;'e'
   802  0808  3400               	retlw	0
   803                           
   804                           	psect	stringtext2
   805  0000                     __pstringtext2:
   806                           
   807                           	psect	cinit
   808  07F0                     start_initialization:	
   809                           ; #config settings
   810                           
   811  07F0                     __initialization:
   812                           
   813                           ; Initialize objects allocated to BANK0
   814  07F0  3066               	movlw	low __pidataBANK0
   815  07F1  0084               	movwf	4
   816  07F2  3086               	movlw	(high __pidataBANK0)| (0+128)
   817  07F3  0085               	movwf	5
   818  07F4  3020               	movlw	low __pdataBANK0
   819  07F5  0086               	movwf	6
   820  07F6  3000               	movlw	high __pdataBANK0
   821  07F7  0087               	movwf	7
   822  07F8  3010               	movlw	16
   823  07F9  3186  2624  3187   	fcall	init_ram
   824                           
   825                           ; Clear objects allocated to BANK0
   826  07FC  01B3               	clrf	__pbssBANK0& (0+127)
   827  07FD                     end_of_initialization:	
   828                           ;End of C runtime variable initialization code
   829                           
   830  07FD                     __end_of__initialization:
   831  07FD  0020               	movlb	0
   832  07FE  3186  2EEE         	ljmp	_main	;jump to C main() function
   833                           
   834                           	psect	bssBANK0
   835  0033                     __pbssBANK0:
   836  0033                     __lcd_params:
   837  0033                     	ds	1
   838                           
   839                           	psect	dataBANK0
   840  0020                     __pdataBANK0:
   841  0020                     _customChar2:
   842  0020                     	ds	8
   843  0028                     _customChar1:
   844  0028                     	ds	8
   845                           
   846                           	psect	inittext
   847  0624                     init_ram:
   848  0624  00FE               	movwf	btemp
   849  0625                     initloop:
   850  0625  0012               	moviw fsr0++
   851  0626  001E               	movwi fsr1++
   852  0627  0BFE               	decfsz	btemp,f
   853  0628  2E25               	goto	initloop
   854  0629  3400               	retlw	0
   855                           
   856                           	psect	cstackCOMMON
   857  0070                     __pcstackCOMMON:
   858  0070                     ?_lcd_init:
   859  0070                     ?_lcd_disable_blink:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_lcd_disable_cursor:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_lcd_write:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_lcd_command:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_main:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?__write_nibble:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ??__write_nibble:	
   878                           ; 1 bytes @ 0x0
   879                           
   880                           
   881                           ; 1 bytes @ 0x0
   882  0070                     	ds	1
   883  0071                     __write_nibble@nibble:
   884                           
   885                           ; 1 bytes @ 0x1
   886  0071                     	ds	1
   887  0072                     ?__send_byte:
   888  0072                     __send_byte@mode:	
   889                           ; 1 bytes @ 0x2
   890                           
   891                           
   892                           ; 1 bytes @ 0x2
   893  0072                     	ds	1
   894  0073                     ??__send_byte:
   895                           
   896                           ; 1 bytes @ 0x3
   897  0073                     	ds	2
   898  0075                     __send_byte@value:
   899                           
   900                           ; 1 bytes @ 0x5
   901  0075                     	ds	1
   902  0076                     ??_lcd_write:
   903  0076                     ??_lcd_command:	
   904                           ; 1 bytes @ 0x6
   905                           
   906  0076                     lcd_write@letra:	
   907                           ; 1 bytes @ 0x6
   908                           
   909  0076                     lcd_command@cmd:	
   910                           ; 1 bytes @ 0x6
   911                           
   912                           
   913                           ; 1 bytes @ 0x6
   914  0076                     	ds	1
   915  0077                     ??_lcd_init:
   916  0077                     ??_lcd_disable_blink:	
   917                           ; 1 bytes @ 0x7
   918                           
   919  0077                     ??_lcd_disable_cursor:	
   920                           ; 1 bytes @ 0x7
   921                           
   922  0077                     ?_lcd_custom_char:	
   923                           ; 1 bytes @ 0x7
   924                           
   925  0077                     ?_lcd_set_cursor:	
   926                           ; 1 bytes @ 0x7
   927                           
   928  0077                     lcd_set_cursor@col:	
   929                           ; 1 bytes @ 0x7
   930                           
   931  0077                     lcd_custom_char@charmap:	
   932                           ; 1 bytes @ 0x7
   933                           
   934                           
   935                           ; 1 bytes @ 0x7
   936  0077                     	ds	1
   937  0078                     ??_lcd_custom_char:
   938  0078                     ??_lcd_set_cursor:	
   939                           ; 1 bytes @ 0x8
   940                           
   941                           
   942                           ; 1 bytes @ 0x8
   943  0078                     	ds	1
   944  0079                     lcd_custom_char@mem:
   945                           
   946                           ; 1 bytes @ 0x9
   947  0079                     	ds	1
   948  007A                     lcd_set_cursor@row:
   949  007A                     lcd_custom_char@i:	
   950                           ; 1 bytes @ 0xA
   951                           
   952                           
   953                           ; 1 bytes @ 0xA
   954  007A                     	ds	1
   955  007B                     ?_lcd_out:
   956  007B                     ?_lcd_char:	
   957                           ; 1 bytes @ 0xB
   958                           
   959  007B                     lcd_out@col:	
   960                           ; 1 bytes @ 0xB
   961                           
   962  007B                     lcd_char@col:	
   963                           ; 1 bytes @ 0xB
   964                           
   965                           
   966                           ; 1 bytes @ 0xB
   967  007B                     	ds	1
   968  007C                     lcd_char@letra:
   969  007C                     lcd_out@str:	
   970                           ; 1 bytes @ 0xC
   971                           
   972                           
   973                           ; 2 bytes @ 0xC
   974  007C                     	ds	1
   975  007D                     ??_lcd_char:
   976                           
   977                           ; 1 bytes @ 0xD
   978  007D                     	ds	1
   979                           
   980                           	psect	cstackBANK0
   981  0030                     __pcstackBANK0:
   982  0030                     ??_lcd_out:
   983  0030                     lcd_char@row:	
   984                           ; 1 bytes @ 0x0
   985                           
   986                           
   987                           ; 1 bytes @ 0x0
   988  0030                     	ds	1
   989  0031                     lcd_out@row:
   990                           
   991                           ; 1 bytes @ 0x1
   992  0031                     	ds	1
   993  0032                     ??_main:
   994                           
   995                           ; 1 bytes @ 0x2
   996  0032                     	ds	1
   997                           
   998                           	psect	maintext
   999  06EE                     __pmaintext:	
  1000 ;;
  1001 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1002 ;;
  1003 ;; *************** function _main *****************
  1004 ;; Defined at:
  1005 ;;		line 27 in file "main.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : B1F/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1021 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1022 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1023 ;;Total ram usage:        1 bytes
  1024 ;; Hardware stack levels required when called: 5
  1025 ;; This function calls:
  1026 ;;		_lcd_char
  1027 ;;		_lcd_custom_char
  1028 ;;		_lcd_disable_blink
  1029 ;;		_lcd_disable_cursor
  1030 ;;		_lcd_init
  1031 ;;		_lcd_out
  1032 ;;		_lcd_write
  1033 ;; This function is called by:
  1034 ;;		Startup code after reset
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038  06EE                     _main:	
  1039                           ;psect for function _main
  1040                           
  1041  06EE                     l1071:	
  1042                           ;incstack = 0
  1043                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1044                           
  1045                           
  1046                           ;main.c: 29:     lcd_init();
  1047  06EE  3187  2793  3186   	fcall	_lcd_init
  1048                           
  1049                           ;main.c: 30:     lcd_disable_blink();
  1050  06F1  3186  2648  3186   	fcall	_lcd_disable_blink
  1051                           
  1052                           ;main.c: 31:     lcd_disable_cursor();
  1053  06F4  3186  2657  3186   	fcall	_lcd_disable_cursor
  1054  06F7                     l1073:
  1055                           
  1056                           ;main.c: 33:     lcd_custom_char(0,customChar1);
  1057  06F7  3028               	movlw	(low (_customChar1| 0))& (0+255)
  1058  06F8  0020               	movlb	0	; select bank0
  1059  06F9  00B2               	movwf	??_main
  1060  06FA  0832               	movf	??_main,w
  1061  06FB  00F7               	movwf	lcd_custom_char@charmap
  1062  06FC  3000               	movlw	0
  1063  06FD  3186  26C2  3186   	fcall	_lcd_custom_char
  1064  0700                     l1075:
  1065                           
  1066                           ;main.c: 34:     lcd_custom_char(1,customChar2);
  1067  0700  3020               	movlw	(low (_customChar2| 0))& (0+255)
  1068  0701  0020               	movlb	0	; select bank0
  1069  0702  00B2               	movwf	??_main
  1070  0703  0832               	movf	??_main,w
  1071  0704  00F7               	movwf	lcd_custom_char@charmap
  1072  0705  3001               	movlw	1
  1073  0706  3186  26C2  3186   	fcall	_lcd_custom_char
  1074                           
  1075                           ;main.c: 36:     lcd_out(2,3,"Univalle");
  1076  0709  3003               	movlw	3
  1077  070A  0020               	movlb	0	; select bank0
  1078  070B  00B2               	movwf	??_main
  1079  070C  0832               	movf	??_main,w
  1080  070D  00FB               	movwf	lcd_out@col
  1081  070E  3000               	movlw	low (STR_1| (0+32768))
  1082  070F  00FC               	movwf	lcd_out@str
  1083  0710  3088               	movlw	high (STR_1| (0+32768))
  1084  0711  00FD               	movwf	lcd_out@str+1
  1085  0712  3002               	movlw	2
  1086  0713  3186  2676  3186   	fcall	_lcd_out
  1087                           
  1088                           ;main.c: 37:     lcd_char(3,1,0);
  1089  0716  01FB               	clrf	lcd_char@col
  1090  0717  0AFB               	incf	lcd_char@col,f
  1091  0718  01FC               	clrf	lcd_char@letra
  1092  0719  3003               	movlw	3
  1093  071A  3186  2639  3186   	fcall	_lcd_char
  1094                           
  1095                           ;main.c: 38:     lcd_write(1);
  1096  071D  3001               	movlw	1
  1097  071E  3186  2631  3186   	fcall	_lcd_write
  1098  0721                     l23:	
  1099                           ;main.c: 40:     while(1){
  1100                           
  1101  0721                     l24:	
  1102                           ;main.c: 42:     }
  1103                           
  1104  0721  2F21               	goto	l23
  1105  0722  3180  2802         	ljmp	start
  1106  0724                     __end_of_main:
  1107                           
  1108                           	psect	text1
  1109  0676                     __ptext1:	
  1110 ;; *************** function _lcd_out *****************
  1111 ;; Defined at:
  1112 ;;		line 156 in file "LCD_LIB.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  row             1    wreg     unsigned char 
  1115 ;;  col             1   11[COMMON] unsigned char 
  1116 ;;  str             2   12[COMMON] PTR unsigned char 
  1117 ;;		 -> STR_1(9), 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  row             1    1[BANK0 ] unsigned char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1129 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1132 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1133 ;;Total ram usage:        5 bytes
  1134 ;; Hardware stack levels used: 1
  1135 ;; Hardware stack levels required when called: 4
  1136 ;; This function calls:
  1137 ;;		_lcd_set_cursor
  1138 ;;		_lcd_write
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144  0676                     _lcd_out:	
  1145                           ;psect for function _lcd_out
  1146                           
  1147                           
  1148                           ;incstack = 0
  1149                           ; Regs used in _lcd_out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1150                           ;lcd_out@row stored from wreg
  1151  0676  0020               	movlb	0	; select bank0
  1152  0677  00B1               	movwf	lcd_out@row
  1153  0678                     l1061:
  1154                           
  1155                           ;LCD_LIB.c: 157:     lcd_set_cursor(row,col);
  1156  0678  087B               	movf	lcd_out@col,w
  1157  0679  00B0               	movwf	??_lcd_out
  1158  067A  0830               	movf	??_lcd_out,w
  1159  067B  00F7               	movwf	lcd_set_cursor@col
  1160  067C  0831               	movf	lcd_out@row,w
  1161  067D  3187  2724  3186   	fcall	_lcd_set_cursor
  1162                           
  1163                           ;LCD_LIB.c: 158:     while(*str){
  1164  0680  2E8D               	goto	l1067
  1165  0681                     l1063:
  1166                           
  1167                           ;LCD_LIB.c: 159:         lcd_write(*str);
  1168  0681  087C               	movf	lcd_out@str,w
  1169  0682  0084               	movwf	4
  1170  0683  087D               	movf	lcd_out@str+1,w
  1171  0684  0085               	movwf	5
  1172  0685  0800               	movf	0,w	;code access
  1173  0686  3186  2631  3186   	fcall	_lcd_write
  1174  0689                     l1065:
  1175                           
  1176                           ;LCD_LIB.c: 160:         str++;
  1177  0689  3001               	movlw	1
  1178  068A  07FC               	addwf	lcd_out@str,f
  1179  068B  3000               	movlw	0
  1180  068C  3DFD               	addwfc	lcd_out@str+1,f
  1181  068D                     l1067:
  1182                           
  1183                           ;LCD_LIB.c: 158:     while(*str){
  1184  068D  087C               	movf	lcd_out@str,w
  1185  068E  0084               	movwf	4
  1186  068F  087D               	movf	lcd_out@str+1,w
  1187  0690  0085               	movwf	5
  1188  0691  0012               	moviw fsr0++
  1189  0692  1D03               	btfss	3,2
  1190  0693  2E95               	goto	u171
  1191  0694  2E96               	goto	u170
  1192  0695                     u171:
  1193  0695  2E81               	goto	l1063
  1194  0696                     u170:
  1195  0696                     l122:
  1196  0696  0008               	return
  1197  0697                     __end_of_lcd_out:
  1198                           
  1199                           	psect	text2
  1200  0793                     __ptext2:	
  1201 ;; *************** function _lcd_init *****************
  1202 ;; Defined at:
  1203 ;;		line 32 in file "LCD_LIB.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1221 ;;Total ram usage:        1 bytes
  1222 ;; Hardware stack levels used: 1
  1223 ;; Hardware stack levels required when called: 3
  1224 ;; This function calls:
  1225 ;;		__write_nibble
  1226 ;;		_lcd_command
  1227 ;; This function is called by:
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232  0793                     _lcd_init:	
  1233                           ;psect for function _lcd_init
  1234                           
  1235  0793                     l1001:	
  1236                           ;incstack = 0
  1237                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1238                           
  1239                           
  1240                           ;LCD_LIB.c: 34:     ANSELD &= ~( (1<<0) |
  1241  0793  300A               	movlw	10
  1242  0794  00F7               	movwf	??_lcd_init
  1243  0795  0877               	movf	??_lcd_init,w
  1244  0796  0023               	movlb	3	; select bank3
  1245  0797  058F               	andwf	15,f	;volatile
  1246                           
  1247                           ;LCD_LIB.c: 41:     TRISD &= ~( (1<<0) |
  1248  0798  300A               	movlw	10
  1249  0799  00F7               	movwf	??_lcd_init
  1250  079A  0877               	movf	??_lcd_init,w
  1251  079B  0021               	movlb	1	; select bank1
  1252  079C  058F               	andwf	15,f	;volatile
  1253                           
  1254                           ;LCD_LIB.c: 48:     LATD &= ~( (1<<0)|
  1255  079D  300A               	movlw	10
  1256  079E  00F7               	movwf	??_lcd_init
  1257  079F  0877               	movf	??_lcd_init,w
  1258  07A0  0022               	movlb	2	; select bank2
  1259  07A1  058F               	andwf	15,f	;volatile
  1260  07A2                     l1003:
  1261                           
  1262                           ;LCD_LIB.c: 55:     _delay((unsigned long)((15)*(8000000UL/4000.0)));
  1263  07A2  3027               	movlw	39
  1264  07A3  00F7               	movwf	??_lcd_init
  1265  07A4  30F5               	movlw	245
  1266  07A5                     u197:
  1267  07A5  0B89               	decfsz	9,f
  1268  07A6  2FA5               	goto	u197
  1269  07A7  0BF7               	decfsz	??_lcd_init,f
  1270  07A8  2FA5               	goto	u197
  1271  07A9  0000               	nop
  1272  07AA                     l1005:
  1273                           
  1274                           ;LCD_LIB.c: 56:     _write_nibble(0x03);
  1275  07AA  3003               	movlw	3
  1276  07AB  3187  275B  3187   	fcall	__write_nibble
  1277  07AE                     l1007:
  1278                           
  1279                           ;LCD_LIB.c: 57:     _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1280  07AE  300D               	movlw	13
  1281  07AF  00F7               	movwf	??_lcd_init
  1282  07B0  30FC               	movlw	252
  1283  07B1                     u207:
  1284  07B1  0B89               	decfsz	9,f
  1285  07B2  2FB1               	goto	u207
  1286  07B3  0BF7               	decfsz	??_lcd_init,f
  1287  07B4  2FB1               	goto	u207
  1288  07B5                     l1009:
  1289                           
  1290                           ;LCD_LIB.c: 58:     _write_nibble(0x03);
  1291  07B5  3003               	movlw	3
  1292  07B6  3187  275B  3187   	fcall	__write_nibble
  1293  07B9                     l1011:
  1294                           
  1295                           ;LCD_LIB.c: 59:     _delay((unsigned long)((100)*(8000000UL/4000000.0)));
  1296  07B9  3042               	movlw	66
  1297  07BA                     u217:
  1298  07BA  0B89               	decfsz	9,f
  1299  07BB  2FBA               	goto	u217
  1300  07BC  3200               	nop2
  1301  07BD                     l1013:
  1302                           
  1303                           ;LCD_LIB.c: 60:     _write_nibble(0x03);
  1304  07BD  3003               	movlw	3
  1305  07BE  3187  275B  3187   	fcall	__write_nibble
  1306  07C1                     l1015:
  1307                           
  1308                           ;LCD_LIB.c: 61:     _write_nibble(0x02);
  1309  07C1  3002               	movlw	2
  1310  07C2  3187  275B  3187   	fcall	__write_nibble
  1311  07C5                     l1017:
  1312                           
  1313                           ;LCD_LIB.c: 63:     lcd_command(0x20 | 0x00 | 0x08);
  1314  07C5  3028               	movlw	40
  1315  07C6  3186  262A  3187   	fcall	_lcd_command
  1316  07C9                     l1019:
  1317                           
  1318                           ;LCD_LIB.c: 64:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  1319  07C9  3006               	movlw	6
  1320  07CA  00F7               	movwf	??_lcd_init
  1321  07CB  3030               	movlw	48
  1322  07CC                     u227:
  1323  07CC  0B89               	decfsz	9,f
  1324  07CD  2FCC               	goto	u227
  1325  07CE  0BF7               	decfsz	??_lcd_init,f
  1326  07CF  2FCC               	goto	u227
  1327  07D0  3200               	nop2
  1328  07D1                     l1021:
  1329                           
  1330                           ;LCD_LIB.c: 65:     _lcd_params = 0x04 | 0x02 | 0x01;
  1331  07D1  3007               	movlw	7
  1332  07D2  00F7               	movwf	??_lcd_init
  1333  07D3  0877               	movf	??_lcd_init,w
  1334  07D4  0020               	movlb	0	; select bank0
  1335  07D5  00B3               	movwf	__lcd_params
  1336  07D6                     l1023:
  1337                           
  1338                           ;LCD_LIB.c: 66:     lcd_command(0x08 | _lcd_params);
  1339  07D6  0833               	movf	__lcd_params,w
  1340  07D7  3808               	iorlw	8
  1341  07D8  3186  262A  3187   	fcall	_lcd_command
  1342  07DB                     l1025:
  1343                           
  1344                           ;LCD_LIB.c: 67:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  1345  07DB  3006               	movlw	6
  1346  07DC  00F7               	movwf	??_lcd_init
  1347  07DD  3030               	movlw	48
  1348  07DE                     u237:
  1349  07DE  0B89               	decfsz	9,f
  1350  07DF  2FDE               	goto	u237
  1351  07E0  0BF7               	decfsz	??_lcd_init,f
  1352  07E1  2FDE               	goto	u237
  1353  07E2  3200               	nop2
  1354  07E3                     l1027:
  1355                           
  1356                           ;LCD_LIB.c: 68:     lcd_command(0x01);
  1357  07E3  3001               	movlw	1
  1358  07E4  3186  262A  3187   	fcall	_lcd_command
  1359  07E7                     l1029:
  1360                           
  1361                           ;LCD_LIB.c: 69:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  1362  07E7  3006               	movlw	6
  1363  07E8  00F7               	movwf	??_lcd_init
  1364  07E9  3030               	movlw	48
  1365  07EA                     u247:
  1366  07EA  0B89               	decfsz	9,f
  1367  07EB  2FEA               	goto	u247
  1368  07EC  0BF7               	decfsz	??_lcd_init,f
  1369  07ED  2FEA               	goto	u247
  1370  07EE  3200               	nop2
  1371  07EF                     l59:
  1372  07EF  0008               	return
  1373  07F0                     __end_of_lcd_init:
  1374                           
  1375                           	psect	text3
  1376  0657                     __ptext3:	
  1377 ;; *************** function _lcd_disable_cursor *****************
  1378 ;; Defined at:
  1379 ;;		line 132 in file "LCD_LIB.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1395 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1397 ;;Total ram usage:        1 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 3
  1400 ;; This function calls:
  1401 ;;		_lcd_command
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407  0657                     _lcd_disable_cursor:	
  1408                           ;psect for function _lcd_disable_cursor
  1409                           
  1410  0657                     l1037:	
  1411                           ;incstack = 0
  1412                           ; Regs used in _lcd_disable_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1413                           
  1414                           
  1415                           ;LCD_LIB.c: 133:     _lcd_params &= ~0x02;
  1416  0657  30FD               	movlw	253
  1417  0658  00F7               	movwf	??_lcd_disable_cursor
  1418  0659  0877               	movf	??_lcd_disable_cursor,w
  1419  065A  0020               	movlb	0	; select bank0
  1420  065B  05B3               	andwf	__lcd_params,f
  1421  065C                     l1039:
  1422                           
  1423                           ;LCD_LIB.c: 134:     lcd_command(0x08 | _lcd_params);
  1424  065C  0833               	movf	__lcd_params,w
  1425  065D  3808               	iorlw	8
  1426  065E  3186  262A  3186   	fcall	_lcd_command
  1427  0661                     l1041:
  1428                           
  1429                           ;LCD_LIB.c: 135:     _delay((unsigned long)((37)*(8000000UL/4000000.0)));
  1430  0661  3018               	movlw	24
  1431  0662                     u257:
  1432  0662  0B89               	decfsz	9,f
  1433  0663  2E62               	goto	u257
  1434  0664  3200               	nop2
  1435  0665                     l105:
  1436  0665  0008               	return
  1437  0666                     __end_of_lcd_disable_cursor:
  1438                           
  1439                           	psect	text4
  1440  0648                     __ptext4:	
  1441 ;; *************** function _lcd_disable_blink *****************
  1442 ;; Defined at:
  1443 ;;		line 121 in file "LCD_LIB.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1461 ;;Total ram usage:        1 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; Hardware stack levels required when called: 3
  1464 ;; This function calls:
  1465 ;;		_lcd_command
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471  0648                     _lcd_disable_blink:	
  1472                           ;psect for function _lcd_disable_blink
  1473                           
  1474  0648                     l1031:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _lcd_disable_blink: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1477                           
  1478                           
  1479                           ;LCD_LIB.c: 122:     _lcd_params &= ~0x01;
  1480  0648  30FE               	movlw	254
  1481  0649  00F7               	movwf	??_lcd_disable_blink
  1482  064A  0877               	movf	??_lcd_disable_blink,w
  1483  064B  0020               	movlb	0	; select bank0
  1484  064C  05B3               	andwf	__lcd_params,f
  1485  064D                     l1033:
  1486                           
  1487                           ;LCD_LIB.c: 123:     lcd_command(0x08 | _lcd_params);
  1488  064D  0833               	movf	__lcd_params,w
  1489  064E  3808               	iorlw	8
  1490  064F  3186  262A  3186   	fcall	_lcd_command
  1491  0652                     l1035:
  1492                           
  1493                           ;LCD_LIB.c: 124:     _delay((unsigned long)((37)*(8000000UL/4000000.0)));
  1494  0652  3018               	movlw	24
  1495  0653                     u267:
  1496  0653  0B89               	decfsz	9,f
  1497  0654  2E53               	goto	u267
  1498  0655  3200               	nop2
  1499  0656                     l99:
  1500  0656  0008               	return
  1501  0657                     __end_of_lcd_disable_blink:
  1502                           
  1503                           	psect	text5
  1504  06C2                     __ptext5:	
  1505 ;; *************** function _lcd_custom_char *****************
  1506 ;; Defined at:
  1507 ;;		line 147 in file "LCD_LIB.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  mem             1    wreg     unsigned char 
  1510 ;;  charmap         1    7[COMMON] PTR unsigned char 
  1511 ;;		 -> customChar2(8), customChar1(8), 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  mem             1    9[COMMON] unsigned char 
  1514 ;;  i               1   10[COMMON] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1524 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1527 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1528 ;;Total ram usage:        4 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 3
  1531 ;; This function calls:
  1532 ;;		_lcd_command
  1533 ;;		_lcd_write
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539  06C2                     _lcd_custom_char:	
  1540                           ;psect for function _lcd_custom_char
  1541                           
  1542                           
  1543                           ;incstack = 0
  1544                           ; Regs used in _lcd_custom_char: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1545                           ;lcd_custom_char@mem stored from wreg
  1546  06C2  00F9               	movwf	lcd_custom_char@mem
  1547  06C3                     l1043:
  1548                           
  1549                           ;LCD_LIB.c: 148:     lcd_command(0x40 | ((mem&7)<<3) );
  1550  06C3  0879               	movf	lcd_custom_char@mem,w
  1551  06C4  3907               	andlw	7
  1552  06C5  00F8               	movwf	??_lcd_custom_char
  1553  06C6  3002               	movlw	2
  1554  06C7                     u155:
  1555  06C7  35F8               	lslf	??_lcd_custom_char,f
  1556  06C8  3EFF               	addlw	-1
  1557  06C9  1D03               	skipz
  1558  06CA  2EC7               	goto	u155
  1559  06CB  3578               	lslf	??_lcd_custom_char,w
  1560  06CC  3840               	iorlw	64
  1561  06CD  3186  262A  3186   	fcall	_lcd_command
  1562  06D0                     l1045:
  1563                           
  1564                           ;LCD_LIB.c: 149:     for( char i = 0; i<=7; i++ ){
  1565  06D0  01FA               	clrf	lcd_custom_char@i
  1566  06D1                     l1051:
  1567                           
  1568                           ;LCD_LIB.c: 150:        lcd_write(charmap[i]);
  1569  06D1  087A               	movf	lcd_custom_char@i,w
  1570  06D2  0777               	addwf	lcd_custom_char@charmap,w
  1571  06D3  00F8               	movwf	??_lcd_custom_char
  1572  06D4  0878               	movf	??_lcd_custom_char,w
  1573  06D5  0086               	movwf	6
  1574  06D6  0187               	clrf	7
  1575  06D7  0801               	movf	1,w
  1576  06D8  3186  2631  3186   	fcall	_lcd_write
  1577  06DB                     l1053:
  1578                           
  1579                           ;LCD_LIB.c: 151:     }
  1580  06DB  3001               	movlw	1
  1581  06DC  00F8               	movwf	??_lcd_custom_char
  1582  06DD  0878               	movf	??_lcd_custom_char,w
  1583  06DE  07FA               	addwf	lcd_custom_char@i,f
  1584  06DF                     l1055:
  1585  06DF  3008               	movlw	8
  1586  06E0  027A               	subwf	lcd_custom_char@i,w
  1587  06E1  1C03               	skipc
  1588  06E2  2EE4               	goto	u161
  1589  06E3  2EE5               	goto	u160
  1590  06E4                     u161:
  1591  06E4  2ED1               	goto	l1051
  1592  06E5                     u160:
  1593  06E5                     l1057:
  1594                           
  1595                           ;LCD_LIB.c: 152:     lcd_command(0x80);
  1596  06E5  3080               	movlw	128
  1597  06E6  3186  262A  3186   	fcall	_lcd_command
  1598  06E9                     l1059:
  1599                           
  1600                           ;LCD_LIB.c: 153:     _delay((unsigned long)((37)*(8000000UL/4000000.0)));
  1601  06E9  3018               	movlw	24
  1602  06EA                     u277:
  1603  06EA  0B89               	decfsz	9,f
  1604  06EB  2EEA               	goto	u277
  1605  06EC  3200               	nop2
  1606  06ED                     l116:
  1607  06ED  0008               	return
  1608  06EE                     __end_of_lcd_custom_char:
  1609                           
  1610                           	psect	text6
  1611  0639                     __ptext6:	
  1612 ;; *************** function _lcd_char *****************
  1613 ;; Defined at:
  1614 ;;		line 164 in file "LCD_LIB.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  row             1    wreg     unsigned char 
  1617 ;;  col             1   11[COMMON] unsigned char 
  1618 ;;  letra           1   12[COMMON] unsigned char 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  row             1    0[BANK0 ] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1631 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1633 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1634 ;;Total ram usage:        4 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 4
  1637 ;; This function calls:
  1638 ;;		_lcd_set_cursor
  1639 ;;		_lcd_write
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645  0639                     _lcd_char:	
  1646                           ;psect for function _lcd_char
  1647                           
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in _lcd_char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1651                           ;lcd_char@row stored from wreg
  1652  0639  0020               	movlb	0	; select bank0
  1653  063A  00B0               	movwf	lcd_char@row
  1654  063B                     l1069:
  1655                           
  1656                           ;LCD_LIB.c: 165:     lcd_set_cursor(row,col);
  1657  063B  087B               	movf	lcd_char@col,w
  1658  063C  00FD               	movwf	??_lcd_char
  1659  063D  087D               	movf	??_lcd_char,w
  1660  063E  00F7               	movwf	lcd_set_cursor@col
  1661  063F  0830               	movf	lcd_char@row,w
  1662  0640  3187  2724  3186   	fcall	_lcd_set_cursor
  1663                           
  1664                           ;LCD_LIB.c: 166:     lcd_write(letra);
  1665  0643  087C               	movf	lcd_char@letra,w
  1666  0644  3186  2631  3186   	fcall	_lcd_write
  1667  0647                     l125:
  1668  0647  0008               	return
  1669  0648                     __end_of_lcd_char:
  1670                           
  1671                           	psect	text7
  1672  0631                     __ptext7:	
  1673 ;; *************** function _lcd_write *****************
  1674 ;; Defined at:
  1675 ;;		line 71 in file "LCD_LIB.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  letra           1    wreg     unsigned char 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  letra           1    6[COMMON] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1693 ;;Total ram usage:        1 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 2
  1696 ;; This function calls:
  1697 ;;		__send_byte
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;;		_lcd_custom_char
  1701 ;;		_lcd_out
  1702 ;;		_lcd_char
  1703 ;;		_lcd_puts
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707  0631                     _lcd_write:	
  1708                           ;psect for function _lcd_write
  1709                           
  1710                           
  1711                           ;incstack = 0
  1712                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1713                           ;lcd_write@letra stored from wreg
  1714  0631  00F6               	movwf	lcd_write@letra
  1715  0632                     l981:
  1716                           
  1717                           ;LCD_LIB.c: 72:     _send_byte(letra,1);
  1718  0632  01F2               	clrf	__send_byte@mode
  1719  0633  0AF2               	incf	__send_byte@mode,f
  1720  0634  0876               	movf	lcd_write@letra,w
  1721  0635  3186  2697  3186   	fcall	__send_byte
  1722  0638                     l62:
  1723  0638  0008               	return
  1724  0639                     __end_of_lcd_write:
  1725                           
  1726                           	psect	text8
  1727  0724                     __ptext8:	
  1728 ;; *************** function _lcd_set_cursor *****************
  1729 ;; Defined at:
  1730 ;;		line 84 in file "LCD_LIB.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  row             1    wreg     unsigned char 
  1733 ;;  col             1    7[COMMON] unsigned char 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  row             1   10[COMMON] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1745 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;Total ram usage:        4 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 3
  1752 ;; This function calls:
  1753 ;;		_lcd_command
  1754 ;; This function is called by:
  1755 ;;		_lcd_out
  1756 ;;		_lcd_char
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760  0724                     _lcd_set_cursor:	
  1761                           ;psect for function _lcd_set_cursor
  1762                           
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _lcd_set_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1766                           ;lcd_set_cursor@row stored from wreg
  1767  0724  00FA               	movwf	lcd_set_cursor@row
  1768  0725                     l983:
  1769                           
  1770                           ;LCD_LIB.c: 86:     switch(row){
  1771  0725  2F44               	goto	l995
  1772  0726                     l985:
  1773  0726  0877               	movf	lcd_set_cursor@col,w
  1774  0727  3E7F               	addlw	127
  1775  0728  3186  262A  3187   	fcall	_lcd_command
  1776  072B  2F5A               	goto	l81
  1777  072C                     l987:
  1778  072C  0877               	movf	lcd_set_cursor@col,w
  1779  072D  3EBF               	addlw	191
  1780  072E  3186  262A  3187   	fcall	_lcd_command
  1781  0731  2F5A               	goto	l81
  1782  0732                     l989:
  1783  0732  0877               	movf	lcd_set_cursor@col,w
  1784  0733  3E93               	addlw	147
  1785  0734  3186  262A  3187   	fcall	_lcd_command
  1786  0737  2F5A               	goto	l81
  1787  0738                     l991:
  1788  0738  0877               	movf	lcd_set_cursor@col,w
  1789  0739  3ED3               	addlw	211
  1790  073A  3186  262A  3187   	fcall	_lcd_command
  1791  073D  2F5A               	goto	l81
  1792  073E                     l993:
  1793                           
  1794                           ;LCD_LIB.c: 92:             lcd_command(0x80+col-1);
  1795  073E  0877               	movf	lcd_set_cursor@col,w
  1796  073F  3E7F               	addlw	127
  1797  0740  3186  262A  3187   	fcall	_lcd_command
  1798                           
  1799                           ;LCD_LIB.c: 93:     }
  1800  0743  2F5A               	goto	l81
  1801  0744                     l995:
  1802  0744  087A               	movf	lcd_set_cursor@row,w
  1803  0745  00F8               	movwf	??_lcd_set_cursor
  1804  0746  01F9               	clrf	??_lcd_set_cursor+1
  1805                           
  1806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1807                           ; Switch size 1, requested type "simple"
  1808                           ; Number of cases is 1, Range of values is 0 to 0
  1809                           ; switch strategies available:
  1810                           ; Name         Instructions Cycles
  1811                           ; simple_byte            4     3 (average)
  1812                           ; direct_byte            8     6 (fixed)
  1813                           ; jumptable            260     6 (fixed)
  1814                           ;	Chosen strategy is simple_byte
  1815  0747  0879               	movf	??_lcd_set_cursor+1,w
  1816  0748  3A00               	xorlw	0	; case 0
  1817  0749  1903               	skipnz
  1818  074A  2F4C               	goto	l1165
  1819  074B  2F3E               	goto	l993
  1820  074C                     l1165:
  1821                           
  1822                           ; Switch size 1, requested type "simple"
  1823                           ; Number of cases is 4, Range of values is 1 to 4
  1824                           ; switch strategies available:
  1825                           ; Name         Instructions Cycles
  1826                           ; simple_byte           13     7 (average)
  1827                           ; direct_byte           17     9 (fixed)
  1828                           ; jumptable            263     9 (fixed)
  1829                           ;	Chosen strategy is simple_byte
  1830  074C  0878               	movf	??_lcd_set_cursor,w
  1831  074D  3A01               	xorlw	1	; case 1
  1832  074E  1903               	skipnz
  1833  074F  2F26               	goto	l985
  1834  0750  3A03               	xorlw	3	; case 2
  1835  0751  1903               	skipnz
  1836  0752  2F2C               	goto	l987
  1837  0753  3A01               	xorlw	1	; case 3
  1838  0754  1903               	skipnz
  1839  0755  2F32               	goto	l989
  1840  0756  3A07               	xorlw	7	; case 4
  1841  0757  1903               	skipnz
  1842  0758  2F38               	goto	l991
  1843  0759  2F3E               	goto	l993
  1844  075A                     l81:
  1845  075A  0008               	return
  1846  075B                     __end_of_lcd_set_cursor:
  1847                           
  1848                           	psect	text9
  1849  062A                     __ptext9:	
  1850 ;; *************** function _lcd_command *****************
  1851 ;; Defined at:
  1852 ;;		line 74 in file "LCD_LIB.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  cmd             1    wreg     unsigned char 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  cmd             1    6[COMMON] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1870 ;;Total ram usage:        1 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 2
  1873 ;; This function calls:
  1874 ;;		__send_byte
  1875 ;; This function is called by:
  1876 ;;		_lcd_init
  1877 ;;		_lcd_set_cursor
  1878 ;;		_lcd_disable_blink
  1879 ;;		_lcd_disable_cursor
  1880 ;;		_lcd_custom_char
  1881 ;;		_lcd_clear
  1882 ;;		_lcd_return_home
  1883 ;;		_lcd_on
  1884 ;;		_lcd_off
  1885 ;;		_lcd_enable_blink
  1886 ;;		_lcd_enable_cursor
  1887 ;;		_lcd_scroll_left
  1888 ;;		_lcd_scroll_right
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892  062A                     _lcd_command:	
  1893                           ;psect for function _lcd_command
  1894                           
  1895                           
  1896                           ;incstack = 0
  1897                           ; Regs used in _lcd_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1898                           ;lcd_command@cmd stored from wreg
  1899  062A  00F6               	movwf	lcd_command@cmd
  1900  062B                     l979:
  1901                           
  1902                           ;LCD_LIB.c: 75:     _send_byte(cmd,0);
  1903  062B  01F2               	clrf	__send_byte@mode
  1904  062C  0876               	movf	lcd_command@cmd,w
  1905  062D  3186  2697  3186   	fcall	__send_byte
  1906  0630                     l65:
  1907  0630  0008               	return
  1908  0631                     __end_of_lcd_command:
  1909                           
  1910                           	psect	text10
  1911  0697                     __ptext10:	
  1912 ;; *************** function __send_byte *****************
  1913 ;; Defined at:
  1914 ;;		line 22 in file "LCD_LIB.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  value           1    wreg     unsigned char 
  1917 ;;  mode            1    2[COMMON] unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  value           1    5[COMMON] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1929 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1932 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1933 ;;Total ram usage:        4 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 1
  1936 ;; This function calls:
  1937 ;;		__write_nibble
  1938 ;; This function is called by:
  1939 ;;		_lcd_write
  1940 ;;		_lcd_command
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944  0697                     __send_byte:	
  1945                           ;psect for function __send_byte
  1946                           
  1947                           
  1948                           ;incstack = 0
  1949                           ; Regs used in __send_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1950                           ;__send_byte@value stored from wreg
  1951  0697  00F5               	movwf	__send_byte@value
  1952  0698                     l965:
  1953                           
  1954                           ;LCD_LIB.c: 24:     switch(mode){
  1955  0698  2EA2               	goto	l971
  1956  0699                     l967:
  1957  0699  30FE               	movlw	254
  1958  069A  00F3               	movwf	??__send_byte
  1959  069B  0873               	movf	??__send_byte,w
  1960  069C  0022               	movlb	2	; select bank2
  1961  069D  058F               	andwf	15,f	;volatile
  1962  069E  2EB2               	goto	l973
  1963  069F                     l55:	
  1964                           ;LCD_LIB.c: 26:         case 1: LATD |= (1<<0); break;
  1965                           
  1966  069F  0022               	movlb	2	; select bank2
  1967  06A0  140F               	bsf	15,0	;volatile
  1968  06A1  2EB2               	goto	l973
  1969  06A2                     l971:
  1970  06A2  0872               	movf	__send_byte@mode,w
  1971  06A3  00F3               	movwf	??__send_byte
  1972  06A4  01F4               	clrf	??__send_byte+1
  1973                           
  1974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1975                           ; Switch size 1, requested type "simple"
  1976                           ; Number of cases is 1, Range of values is 0 to 0
  1977                           ; switch strategies available:
  1978                           ; Name         Instructions Cycles
  1979                           ; simple_byte            4     3 (average)
  1980                           ; direct_byte            8     6 (fixed)
  1981                           ; jumptable            260     6 (fixed)
  1982                           ;	Chosen strategy is simple_byte
  1983  06A5  0874               	movf	??__send_byte+1,w
  1984  06A6  3A00               	xorlw	0	; case 0
  1985  06A7  1903               	skipnz
  1986  06A8  2EAA               	goto	l1167
  1987  06A9  2EB2               	goto	l973
  1988  06AA                     l1167:
  1989                           
  1990                           ; Switch size 1, requested type "simple"
  1991                           ; Number of cases is 2, Range of values is 0 to 1
  1992                           ; switch strategies available:
  1993                           ; Name         Instructions Cycles
  1994                           ; simple_byte            7     4 (average)
  1995                           ; direct_byte           10     6 (fixed)
  1996                           ; jumptable            260     6 (fixed)
  1997                           ;	Chosen strategy is simple_byte
  1998  06AA  0873               	movf	??__send_byte,w
  1999  06AB  3A00               	xorlw	0	; case 0
  2000  06AC  1903               	skipnz
  2001  06AD  2E99               	goto	l967
  2002  06AE  3A01               	xorlw	1	; case 1
  2003  06AF  1903               	skipnz
  2004  06B0  2E9F               	goto	l55
  2005  06B1  2EB2               	goto	l973
  2006  06B2                     l973:
  2007                           
  2008                           ;LCD_LIB.c: 28:     _write_nibble(value>>4);
  2009  06B2  0875               	movf	__send_byte@value,w
  2010  06B3  00F3               	movwf	??__send_byte
  2011  06B4  3004               	movlw	4
  2012  06B5                     u145:
  2013  06B5  36F3               	lsrf	??__send_byte,f
  2014  06B6  0B89               	decfsz	9,f
  2015  06B7  2EB5               	goto	u145
  2016  06B8  0873               	movf	??__send_byte,w
  2017  06B9  3187  275B  3186   	fcall	__write_nibble
  2018                           
  2019                           ;LCD_LIB.c: 29:     _write_nibble(value&0x0F);
  2020  06BC  0875               	movf	__send_byte@value,w
  2021  06BD  390F               	andlw	15
  2022  06BE  3187  275B  3186   	fcall	__write_nibble
  2023  06C1                     l56:
  2024  06C1  0008               	return
  2025  06C2                     __end_of__send_byte:
  2026                           
  2027                           	psect	text11
  2028  075B                     __ptext11:	
  2029 ;; *************** function __write_nibble *****************
  2030 ;; Defined at:
  2031 ;;		line 9 in file "LCD_LIB.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  nibble          1    wreg     unsigned char 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  nibble          1    1[COMMON] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      void 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2049 ;;Total ram usage:        2 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		__send_byte
  2055 ;;		_lcd_init
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059  075B                     __write_nibble:	
  2060                           ;psect for function __write_nibble
  2061                           
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in __write_nibble: [wreg+status,2+status,0]
  2065                           ;__write_nibble@nibble stored from wreg
  2066  075B  00F1               	movwf	__write_nibble@nibble
  2067  075C                     l949:
  2068                           
  2069                           ;LCD_LIB.c: 10:     if( (nibble & 0x01) == 0) LATD &= ~(1<<4); else LATD |= (1<<4);
  2070  075C  1871               	btfsc	__write_nibble@nibble,0
  2071  075D  2F5F               	goto	u101
  2072  075E  2F60               	goto	u100
  2073  075F                     u101:
  2074  075F  2F66               	goto	l41
  2075  0760                     u100:
  2076  0760                     l951:
  2077  0760  30EF               	movlw	239
  2078  0761  00F0               	movwf	??__write_nibble
  2079  0762  0870               	movf	??__write_nibble,w
  2080  0763  0022               	movlb	2	; select bank2
  2081  0764  058F               	andwf	15,f	;volatile
  2082  0765  2F68               	goto	l42
  2083  0766                     l41:
  2084  0766  0022               	movlb	2	; select bank2
  2085  0767  160F               	bsf	15,4	;volatile
  2086  0768                     l42:
  2087                           
  2088                           ;LCD_LIB.c: 11:     if( (nibble & 0x02) == 0) LATD &= ~(1<<5); else LATD |= (1<<5);
  2089  0768  18F1               	btfsc	__write_nibble@nibble,1
  2090  0769  2F6B               	goto	u111
  2091  076A  2F6C               	goto	u110
  2092  076B                     u111:
  2093  076B  2F71               	goto	l43
  2094  076C                     u110:
  2095  076C                     l953:
  2096  076C  30DF               	movlw	223
  2097  076D  00F0               	movwf	??__write_nibble
  2098  076E  0870               	movf	??__write_nibble,w
  2099  076F  058F               	andwf	15,f	;volatile
  2100  0770  2F72               	goto	l44
  2101  0771                     l43:
  2102  0771  168F               	bsf	15,5	;volatile
  2103  0772                     l44:
  2104                           
  2105                           ;LCD_LIB.c: 12:     if( (nibble & 0x04) == 0) LATD &= ~(1<<6); else LATD |= (1<<6);
  2106  0772  1971               	btfsc	__write_nibble@nibble,2
  2107  0773  2F75               	goto	u121
  2108  0774  2F76               	goto	u120
  2109  0775                     u121:
  2110  0775  2F7B               	goto	l45
  2111  0776                     u120:
  2112  0776                     l955:
  2113  0776  30BF               	movlw	191
  2114  0777  00F0               	movwf	??__write_nibble
  2115  0778  0870               	movf	??__write_nibble,w
  2116  0779  058F               	andwf	15,f	;volatile
  2117  077A  2F7C               	goto	l46
  2118  077B                     l45:
  2119  077B  170F               	bsf	15,6	;volatile
  2120  077C                     l46:
  2121                           
  2122                           ;LCD_LIB.c: 13:     if( (nibble & 0x08) == 0) LATD &= ~(1<<7); else LATD |= (1<<7);
  2123  077C  19F1               	btfsc	__write_nibble@nibble,3
  2124  077D  2F7F               	goto	u131
  2125  077E  2F80               	goto	u130
  2126  077F                     u131:
  2127  077F  2F85               	goto	l47
  2128  0780                     u130:
  2129  0780                     l957:
  2130  0780  307F               	movlw	127
  2131  0781  00F0               	movwf	??__write_nibble
  2132  0782  0870               	movf	??__write_nibble,w
  2133  0783  058F               	andwf	15,f	;volatile
  2134  0784  2F86               	goto	l959
  2135  0785                     l47:
  2136  0785  178F               	bsf	15,7	;volatile
  2137  0786                     l959:
  2138                           
  2139                           ;LCD_LIB.c: 15:     LATD &= ~(1<<2);
  2140  0786  30FB               	movlw	251
  2141  0787  00F0               	movwf	??__write_nibble
  2142  0788  0870               	movf	??__write_nibble,w
  2143  0789  058F               	andwf	15,f	;volatile
  2144  078A                     l961:
  2145                           
  2146                           ;LCD_LIB.c: 16:     LATD |= (1<<2);
  2147  078A  150F               	bsf	15,2	;volatile
  2148                           
  2149                           ;LCD_LIB.c: 17:     LATD &= ~(1<<2);
  2150  078B  30FB               	movlw	251
  2151  078C  00F0               	movwf	??__write_nibble
  2152  078D  0870               	movf	??__write_nibble,w
  2153  078E  058F               	andwf	15,f	;volatile
  2154  078F                     l963:
  2155                           
  2156                           ;LCD_LIB.c: 19:     _delay((unsigned long)((300)*(8000000UL/4000000.0)));
  2157  078F  30C8               	movlw	200
  2158  0790                     u287:
  2159  0790  0B89               	decfsz	9,f
  2160  0791  2F90               	goto	u287
  2161  0792                     l49:
  2162  0792  0008               	return
  2163  0793                     __end_of__write_nibble:
  2164  007E                     btemp	set	126	;btemp
  2165  007E                     wtemp0	set	126
  2166                           
  2167                           	psect	idloc
  2168                           
  2169                           ;Config register IDLOC0 @ 0x8000
  2170                           ;	unspecified, using default values
  2171  8000                     	org	32768
  2172  8000  3FFF               	dw	16383
  2173                           
  2174                           ;Config register IDLOC1 @ 0x8001
  2175                           ;	unspecified, using default values
  2176  8001                     	org	32769
  2177  8001  3FFF               	dw	16383
  2178                           
  2179                           ;Config register IDLOC2 @ 0x8002
  2180                           ;	unspecified, using default values
  2181  8002                     	org	32770
  2182  8002  3FFF               	dw	16383
  2183                           
  2184                           ;Config register IDLOC3 @ 0x8003
  2185                           ;	unspecified, using default values
  2186  8003                     	org	32771
  2187  8003  3FFF               	dw	16383
  2188                           
  2189                           	psect	config
  2190                           
  2191                           ;Config register CONFIG1 @ 0x8007
  2192                           ;	Oscillator Selection
  2193                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  2194                           ;	Watchdog Timer Enable
  2195                           ;	WDTE = OFF, WDT disabled
  2196                           ;	Power-up Timer Enable
  2197                           ;	PWRTE = OFF, PWRT disabled
  2198                           ;	MCLR Pin Function Select
  2199                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2200                           ;	Flash Program Memory Code Protection
  2201                           ;	CP = OFF, Program memory code protection is disabled
  2202                           ;	Data Memory Code Protection
  2203                           ;	CPD = OFF, Data memory code protection is disabled
  2204                           ;	Brown-out Reset Enable
  2205                           ;	BOREN = OFF, Brown-out Reset disabled
  2206                           ;	Clock Out Enable
  2207                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2208                           ;	Internal/External Switchover
  2209                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2210                           ;	Fail-Safe Clock Monitor Enable
  2211                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2212  8007                     	org	32775
  2213  8007  39E2               	dw	14818
  2214                           
  2215                           ;Config register CONFIG2 @ 0x8008
  2216                           ;	Flash Memory Self-Write Protection
  2217                           ;	WRT = OFF, Write protection off
  2218                           ;	Voltage Regulator Capacitor Enable
  2219                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2220                           ;	PLL Enable
  2221                           ;	PLLEN = OFF, 4x PLL disabled
  2222                           ;	Stack Overflow/Underflow Reset Enable
  2223                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2224                           ;	Brown-out Reset Voltage Selection
  2225                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2226                           ;	Low-Voltage Programming Enable
  2227                           ;	LVP = ON, Low-voltage programming enabled
  2228  8008                     	org	32776
  2229  8008  3EFF               	dw	16127

Data Sizes:
    Strings     9
    Constant    0
    Data        16
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3      20
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    lcd_out@str	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 

    lcd_custom_char@charmap	PTR unsigned char  size(1) Largest target is 8
		 -> customChar2(BANK0[8]), customChar1(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_lcd_char
    _main->_lcd_out
    _lcd_out->_lcd_set_cursor
    _lcd_init->_lcd_command
    _lcd_disable_cursor->_lcd_command
    _lcd_disable_blink->_lcd_command
    _lcd_custom_char->_lcd_command
    _lcd_custom_char->_lcd_write
    _lcd_char->_lcd_set_cursor
    _lcd_write->__send_byte
    _lcd_set_cursor->_lcd_command
    _lcd_command->__send_byte
    __send_byte->__write_nibble

Critical Paths under _main in BANK0

    _main->_lcd_out

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4659
                                              2 BANK0      1     1      0
                           _lcd_char
                    _lcd_custom_char
                  _lcd_disable_blink
                 _lcd_disable_cursor
                           _lcd_init
                            _lcd_out
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_out                                              5     2      3    1181
                                             11 COMMON     3     0      3
                                              0 BANK0      2     2      0
                     _lcd_set_cursor
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     416
                                              7 COMMON     1     1      0
                      __write_nibble
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_disable_cursor                                   1     1      0     328
                                              7 COMMON     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_disable_blink                                    1     1      0     328
                                              7 COMMON     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_custom_char                                      4     3      1     920
                                              7 COMMON     4     3      1
                        _lcd_command
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_char                                             4     2      2    1158
                                             11 COMMON     3     1      2
                                              0 BANK0      1     1      0
                     _lcd_set_cursor
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_write                                            1     1      0     328
                                              6 COMMON     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       4     3      1     612
                                              7 COMMON     4     3      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          1     1      0     328
                                              6 COMMON     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (2) __send_byte                                           4     3      1     306
                                              2 COMMON     4     3      1
                      __write_nibble
 ---------------------------------------------------------------------------------
 (3) __write_nibble                                        2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_char
     _lcd_set_cursor
       _lcd_command
         __send_byte
           __write_nibble
     _lcd_write
       __send_byte
   _lcd_custom_char
     _lcd_command
     _lcd_write
   _lcd_disable_blink
     _lcd_command
   _lcd_disable_cursor
     _lcd_command
   _lcd_init
     __write_nibble
     _lcd_command
   _lcd_out
     _lcd_set_cursor
     _lcd_write
   _lcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3      14       5       25.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      22      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      22      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Oct 05 18:35:32 2023

               lcd_char@col 007B                 lcd_char@row 0030                          l23 0721  
                        l24 0721                          l41 0766                          l42 0768  
                        l43 0771                          l44 0772                          l45 077B  
                        l46 077C                          l62 0638                          l47 0785  
                        l55 069F                          l56 06C1                          l49 0792  
                        l65 0630                          l81 075A                          l59 07EF  
                        l99 0656               lcd_char@letra 007C                         l105 0665  
                       l122 0696                         l116 06ED                         l125 0647  
                       l951 0760                         l961 078A                         l953 076C  
                       l963 078F                         l955 0776                         l971 06A2  
                       l957 0780                         l949 075C                         l973 06B2  
                       l965 0698                         l981 0632                         l959 0786  
                       l967 0699                         l991 0738                         l983 0725  
                       l993 073E                         l985 0726                         l979 062B  
                       l987 072C                         l995 0744                         l989 0732  
                       u100 0760                         u101 075F                         u110 076C  
                       u111 076B                         u120 0776                         u121 0775  
                       u130 0780                         u131 077F                         u207 07B1  
                       u160 06E5                         u145 06B5                         u161 06E4  
                       u217 07BA                         u170 0696                         u155 06C7  
                       u227 07CC                         u171 0695                         u237 07DE  
                       u247 07EA                         u257 0662                         u267 0653  
                       u277 06EA                         u197 07A5                         u287 0790  
    lcd_custom_char@charmap 0077                         wreg 0009             ?_lcd_set_cursor 0077  
                      l1001 0793                        l1011 07B9                        l1003 07A2  
                      l1021 07D1                        l1013 07BD                        l1005 07AA  
                      l1031 0648                        l1023 07D6                        l1015 07C1  
                      l1007 07AE                        l1033 064D                        l1041 0661  
                      l1025 07DB                        l1017 07C5                        l1009 07B5  
                      l1051 06D1                        l1043 06C3                        l1035 0652  
                      l1027 07E3                        l1019 07C9                        l1053 06DB  
                      l1045 06D0                        l1037 0657                        l1029 07E7  
                      l1061 0678                        l1055 06DF                        l1039 065C  
                      l1063 0681                        l1071 06EE                        l1057 06E5  
                      l1065 0689                        l1073 06F7                        l1059 06E9  
                      l1067 068D                        l1075 0700                        l1165 074C  
                      l1069 063B                        l1167 06AA                        STR_1 0800  
                      _LATD 010F                        _main 06EE                        fsr0h 0005  
                      fsr1h 0007                        indf0 0000                        fsr0l 0004  
                      indf1 0001                        fsr1l 0006                        btemp 007E  
                      start 0002               __write_nibble 075B            lcd_custom_char@i 007A  
                     ?_main 0070                       _TRISD 008F             __end_of_lcd_out 0697  
                     status 0003                       wtemp0 007E              ?__write_nibble 0070  
           __initialization 07F0                __end_of_main 0724                      ??_main 0032  
            lcd_command@cmd 0076                      _ANSELD 018F            __end_of_lcd_char 0648  
          __end_of_lcd_init 07F0                   ??_lcd_out 0030     __end_of__initialization 07FD  
           ??__write_nibble 0070              __pcstackCOMMON 0070                __pidataBANK0 0666  
          ??_lcd_set_cursor 0078                  __pbssBANK0 0033          lcd_custom_char@mem 0079  
                __pmaintext 06EE                  __send_byte 0697           _lcd_disable_blink 0648  
                 ?_lcd_char 007B          ?_lcd_disable_blink 0070                   ?_lcd_init 0070  
       ??_lcd_disable_blink 0077           __end_of_lcd_write 0639                     __ptext1 0676  
                   __ptext2 0793                     __ptext3 0657                     __ptext4 0648  
                   __ptext5 06C2                     __ptext6 0639                     __ptext7 0631  
                   __ptext8 0724                     __ptext9 062A                     _lcd_out 0676  
 __end_of_lcd_disable_blink 0657            __send_byte@value 0075                  ??_lcd_char 007D  
                ??_lcd_init 0077        end_of_initialization 07FD  __end_of_lcd_disable_cursor 0666  
                   init_ram 0624                     initloop 0625                 ?__send_byte 0072  
         ??_lcd_custom_char 0078              lcd_write@letra 0076                  lcd_out@col 007B  
                lcd_out@row 0031                  lcd_out@str 007C               ??_lcd_command 0076  
       start_initialization 07F0                 __lcd_params 0033       __end_of__write_nibble 0793  
       __end_of_lcd_command 0631                 __pdataBANK0 0020                   ___latbits 0003  
             __pcstackBANK0 0030                   _lcd_write 0631                    ?_lcd_out 007B  
           __send_byte@mode 0072                 _lcd_command 062A             _lcd_custom_char 06C2  
              ??__send_byte 0073          _lcd_disable_cursor 0657         ?_lcd_disable_cursor 0070  
                ?_lcd_write 0070          __end_of__send_byte 06C2        ??_lcd_disable_cursor 0077  
               _customChar1 0028                 _customChar2 0020                    __ptext10 0697  
                  __ptext11 075B                    _lcd_char 0639                    _lcd_init 0793  
   __end_of_lcd_custom_char 06EE                 ??_lcd_write 0076        __write_nibble@nibble 0071  
            _lcd_set_cursor 0724           lcd_set_cursor@col 0077           lcd_set_cursor@row 007A  
             __pstringtext1 0800               __pstringtext2 0000      __end_of_lcd_set_cursor 075B  
          ?_lcd_custom_char 0077                ?_lcd_command 0070  
