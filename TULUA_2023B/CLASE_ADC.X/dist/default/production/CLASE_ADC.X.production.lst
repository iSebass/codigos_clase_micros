

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Oct 05 20:33:30 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.40
    49                           ; Generated 17/11/2021 GMT
    50                           ; 
    51                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1939 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0110                     	;# 
   138  0111                     	;# 
   139  0112                     	;# 
   140  0113                     	;# 
   141  0114                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0118                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011B                     	;# 
   149  011D                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018F                     	;# 
   153  0190                     	;# 
   154  0191                     	;# 
   155  0191                     	;# 
   156  0192                     	;# 
   157  0193                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0194                     	;# 
   161  0195                     	;# 
   162  0196                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019D                     	;# 
   172  019E                     	;# 
   173  019F                     	;# 
   174  020D                     	;# 
   175  0210                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0291                     	;# 
   185  0291                     	;# 
   186  0292                     	;# 
   187  0293                     	;# 
   188  0294                     	;# 
   189  0295                     	;# 
   190  0295                     	;# 
   191  0296                     	;# 
   192  0298                     	;# 
   193  0298                     	;# 
   194  0299                     	;# 
   195  029A                     	;# 
   196  029B                     	;# 
   197  029C                     	;# 
   198  029C                     	;# 
   199  029D                     	;# 
   200  029E                     	;# 
   201  029F                     	;# 
   202  0311                     	;# 
   203  0311                     	;# 
   204  0312                     	;# 
   205  0313                     	;# 
   206  0314                     	;# 
   207  0315                     	;# 
   208  0315                     	;# 
   209  0316                     	;# 
   210  0318                     	;# 
   211  0318                     	;# 
   212  0319                     	;# 
   213  031A                     	;# 
   214  031C                     	;# 
   215  031C                     	;# 
   216  031D                     	;# 
   217  031E                     	;# 
   218  0394                     	;# 
   219  0395                     	;# 
   220  0396                     	;# 
   221  0415                     	;# 
   222  0416                     	;# 
   223  0417                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  0791                     	;# 
   228  0792                     	;# 
   229  0793                     	;# 
   230  0794                     	;# 
   231  0795                     	;# 
   232  0798                     	;# 
   233  0799                     	;# 
   234  079A                     	;# 
   235  07A0                     	;# 
   236  07A1                     	;# 
   237  07A2                     	;# 
   238  07A3                     	;# 
   239  07A4                     	;# 
   240  07A5                     	;# 
   241  07A6                     	;# 
   242  07A7                     	;# 
   243  07A8                     	;# 
   244  07A9                     	;# 
   245  07AA                     	;# 
   246  07AB                     	;# 
   247  0FE4                     	;# 
   248  0FE5                     	;# 
   249  0FE6                     	;# 
   250  0FE7                     	;# 
   251  0FE8                     	;# 
   252  0FE9                     	;# 
   253  0FEA                     	;# 
   254  0FEB                     	;# 
   255  0FED                     	;# 
   256  0FEE                     	;# 
   257  0FEF                     	;# 
   258  0000                     	;# 
   259  0001                     	;# 
   260  0002                     	;# 
   261  0003                     	;# 
   262  0004                     	;# 
   263  0005                     	;# 
   264  0006                     	;# 
   265  0007                     	;# 
   266  0008                     	;# 
   267  0009                     	;# 
   268  000A                     	;# 
   269  000B                     	;# 
   270  000C                     	;# 
   271  000D                     	;# 
   272  000E                     	;# 
   273  000F                     	;# 
   274  0010                     	;# 
   275  0011                     	;# 
   276  0012                     	;# 
   277  0013                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0016                     	;# 
   281  0017                     	;# 
   282  0018                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001B                     	;# 
   286  001C                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  0110                     	;# 
   313  0111                     	;# 
   314  0112                     	;# 
   315  0113                     	;# 
   316  0114                     	;# 
   317  0115                     	;# 
   318  0116                     	;# 
   319  0117                     	;# 
   320  0118                     	;# 
   321  0119                     	;# 
   322  011A                     	;# 
   323  011B                     	;# 
   324  011D                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  018F                     	;# 
   328  0190                     	;# 
   329  0191                     	;# 
   330  0191                     	;# 
   331  0192                     	;# 
   332  0193                     	;# 
   333  0193                     	;# 
   334  0193                     	;# 
   335  0194                     	;# 
   336  0195                     	;# 
   337  0196                     	;# 
   338  0199                     	;# 
   339  019A                     	;# 
   340  019B                     	;# 
   341  019B                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019C                     	;# 
   345  019C                     	;# 
   346  019D                     	;# 
   347  019E                     	;# 
   348  019F                     	;# 
   349  020D                     	;# 
   350  0210                     	;# 
   351  0211                     	;# 
   352  0212                     	;# 
   353  0213                     	;# 
   354  0214                     	;# 
   355  0215                     	;# 
   356  0215                     	;# 
   357  0216                     	;# 
   358  0217                     	;# 
   359  0291                     	;# 
   360  0291                     	;# 
   361  0292                     	;# 
   362  0293                     	;# 
   363  0294                     	;# 
   364  0295                     	;# 
   365  0295                     	;# 
   366  0296                     	;# 
   367  0298                     	;# 
   368  0298                     	;# 
   369  0299                     	;# 
   370  029A                     	;# 
   371  029B                     	;# 
   372  029C                     	;# 
   373  029C                     	;# 
   374  029D                     	;# 
   375  029E                     	;# 
   376  029F                     	;# 
   377  0311                     	;# 
   378  0311                     	;# 
   379  0312                     	;# 
   380  0313                     	;# 
   381  0314                     	;# 
   382  0315                     	;# 
   383  0315                     	;# 
   384  0316                     	;# 
   385  0318                     	;# 
   386  0318                     	;# 
   387  0319                     	;# 
   388  031A                     	;# 
   389  031C                     	;# 
   390  031C                     	;# 
   391  031D                     	;# 
   392  031E                     	;# 
   393  0394                     	;# 
   394  0395                     	;# 
   395  0396                     	;# 
   396  0415                     	;# 
   397  0416                     	;# 
   398  0417                     	;# 
   399  041C                     	;# 
   400  041D                     	;# 
   401  041E                     	;# 
   402  0791                     	;# 
   403  0792                     	;# 
   404  0793                     	;# 
   405  0794                     	;# 
   406  0795                     	;# 
   407  0798                     	;# 
   408  0799                     	;# 
   409  079A                     	;# 
   410  07A0                     	;# 
   411  07A1                     	;# 
   412  07A2                     	;# 
   413  07A3                     	;# 
   414  07A4                     	;# 
   415  07A5                     	;# 
   416  07A6                     	;# 
   417  07A7                     	;# 
   418  07A8                     	;# 
   419  07A9                     	;# 
   420  07AA                     	;# 
   421  07AB                     	;# 
   422  0FE4                     	;# 
   423  0FE5                     	;# 
   424  0FE6                     	;# 
   425  0FE7                     	;# 
   426  0FE8                     	;# 
   427  0FE9                     	;# 
   428  0FEA                     	;# 
   429  0FEB                     	;# 
   430  0FED                     	;# 
   431  0FEE                     	;# 
   432  0FEF                     	;# 
   433  0000                     	;# 
   434  0001                     	;# 
   435  0002                     	;# 
   436  0003                     	;# 
   437  0004                     	;# 
   438  0005                     	;# 
   439  0006                     	;# 
   440  0007                     	;# 
   441  0008                     	;# 
   442  0009                     	;# 
   443  000A                     	;# 
   444  000B                     	;# 
   445  000C                     	;# 
   446  000D                     	;# 
   447  000E                     	;# 
   448  000F                     	;# 
   449  0010                     	;# 
   450  0011                     	;# 
   451  0012                     	;# 
   452  0013                     	;# 
   453  0015                     	;# 
   454  0016                     	;# 
   455  0016                     	;# 
   456  0017                     	;# 
   457  0018                     	;# 
   458  0019                     	;# 
   459  001A                     	;# 
   460  001B                     	;# 
   461  001C                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  008C                     	;# 
   465  008D                     	;# 
   466  008E                     	;# 
   467  008F                     	;# 
   468  0090                     	;# 
   469  0091                     	;# 
   470  0092                     	;# 
   471  0093                     	;# 
   472  0095                     	;# 
   473  0096                     	;# 
   474  0097                     	;# 
   475  0098                     	;# 
   476  0099                     	;# 
   477  009A                     	;# 
   478  009B                     	;# 
   479  009B                     	;# 
   480  009C                     	;# 
   481  009D                     	;# 
   482  009E                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  0110                     	;# 
   488  0111                     	;# 
   489  0112                     	;# 
   490  0113                     	;# 
   491  0114                     	;# 
   492  0115                     	;# 
   493  0116                     	;# 
   494  0117                     	;# 
   495  0118                     	;# 
   496  0119                     	;# 
   497  011A                     	;# 
   498  011B                     	;# 
   499  011D                     	;# 
   500  018C                     	;# 
   501  018D                     	;# 
   502  018F                     	;# 
   503  0190                     	;# 
   504  0191                     	;# 
   505  0191                     	;# 
   506  0192                     	;# 
   507  0193                     	;# 
   508  0193                     	;# 
   509  0193                     	;# 
   510  0194                     	;# 
   511  0195                     	;# 
   512  0196                     	;# 
   513  0199                     	;# 
   514  019A                     	;# 
   515  019B                     	;# 
   516  019B                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019C                     	;# 
   520  019C                     	;# 
   521  019D                     	;# 
   522  019E                     	;# 
   523  019F                     	;# 
   524  020D                     	;# 
   525  0210                     	;# 
   526  0211                     	;# 
   527  0212                     	;# 
   528  0213                     	;# 
   529  0214                     	;# 
   530  0215                     	;# 
   531  0215                     	;# 
   532  0216                     	;# 
   533  0217                     	;# 
   534  0291                     	;# 
   535  0291                     	;# 
   536  0292                     	;# 
   537  0293                     	;# 
   538  0294                     	;# 
   539  0295                     	;# 
   540  0295                     	;# 
   541  0296                     	;# 
   542  0298                     	;# 
   543  0298                     	;# 
   544  0299                     	;# 
   545  029A                     	;# 
   546  029B                     	;# 
   547  029C                     	;# 
   548  029C                     	;# 
   549  029D                     	;# 
   550  029E                     	;# 
   551  029F                     	;# 
   552  0311                     	;# 
   553  0311                     	;# 
   554  0312                     	;# 
   555  0313                     	;# 
   556  0314                     	;# 
   557  0315                     	;# 
   558  0315                     	;# 
   559  0316                     	;# 
   560  0318                     	;# 
   561  0318                     	;# 
   562  0319                     	;# 
   563  031A                     	;# 
   564  031C                     	;# 
   565  031C                     	;# 
   566  031D                     	;# 
   567  031E                     	;# 
   568  0394                     	;# 
   569  0395                     	;# 
   570  0396                     	;# 
   571  0415                     	;# 
   572  0416                     	;# 
   573  0417                     	;# 
   574  041C                     	;# 
   575  041D                     	;# 
   576  041E                     	;# 
   577  0791                     	;# 
   578  0792                     	;# 
   579  0793                     	;# 
   580  0794                     	;# 
   581  0795                     	;# 
   582  0798                     	;# 
   583  0799                     	;# 
   584  079A                     	;# 
   585  07A0                     	;# 
   586  07A1                     	;# 
   587  07A2                     	;# 
   588  07A3                     	;# 
   589  07A4                     	;# 
   590  07A5                     	;# 
   591  07A6                     	;# 
   592  07A7                     	;# 
   593  07A8                     	;# 
   594  07A9                     	;# 
   595  07AA                     	;# 
   596  07AB                     	;# 
   597  0FE4                     	;# 
   598  0FE5                     	;# 
   599  0FE6                     	;# 
   600  0FE7                     	;# 
   601  0FE8                     	;# 
   602  0FE9                     	;# 
   603  0FEA                     	;# 
   604  0FEB                     	;# 
   605  0FED                     	;# 
   606  0FEE                     	;# 
   607  0FEF                     	;# 
   608  0000                     	;# 
   609  0001                     	;# 
   610  0002                     	;# 
   611  0003                     	;# 
   612  0004                     	;# 
   613  0005                     	;# 
   614  0006                     	;# 
   615  0007                     	;# 
   616  0008                     	;# 
   617  0009                     	;# 
   618  000A                     	;# 
   619  000B                     	;# 
   620  000C                     	;# 
   621  000D                     	;# 
   622  000E                     	;# 
   623  000F                     	;# 
   624  0010                     	;# 
   625  0011                     	;# 
   626  0012                     	;# 
   627  0013                     	;# 
   628  0015                     	;# 
   629  0016                     	;# 
   630  0016                     	;# 
   631  0017                     	;# 
   632  0018                     	;# 
   633  0019                     	;# 
   634  001A                     	;# 
   635  001B                     	;# 
   636  001C                     	;# 
   637  001E                     	;# 
   638  001F                     	;# 
   639  008C                     	;# 
   640  008D                     	;# 
   641  008E                     	;# 
   642  008F                     	;# 
   643  0090                     	;# 
   644  0091                     	;# 
   645  0092                     	;# 
   646  0093                     	;# 
   647  0095                     	;# 
   648  0096                     	;# 
   649  0097                     	;# 
   650  0098                     	;# 
   651  0099                     	;# 
   652  009A                     	;# 
   653  009B                     	;# 
   654  009B                     	;# 
   655  009C                     	;# 
   656  009D                     	;# 
   657  009E                     	;# 
   658  010C                     	;# 
   659  010D                     	;# 
   660  010E                     	;# 
   661  010F                     	;# 
   662  0110                     	;# 
   663  0111                     	;# 
   664  0112                     	;# 
   665  0113                     	;# 
   666  0114                     	;# 
   667  0115                     	;# 
   668  0116                     	;# 
   669  0117                     	;# 
   670  0118                     	;# 
   671  0119                     	;# 
   672  011A                     	;# 
   673  011B                     	;# 
   674  011D                     	;# 
   675  018C                     	;# 
   676  018D                     	;# 
   677  018F                     	;# 
   678  0190                     	;# 
   679  0191                     	;# 
   680  0191                     	;# 
   681  0192                     	;# 
   682  0193                     	;# 
   683  0193                     	;# 
   684  0193                     	;# 
   685  0194                     	;# 
   686  0195                     	;# 
   687  0196                     	;# 
   688  0199                     	;# 
   689  019A                     	;# 
   690  019B                     	;# 
   691  019B                     	;# 
   692  019B                     	;# 
   693  019B                     	;# 
   694  019C                     	;# 
   695  019C                     	;# 
   696  019D                     	;# 
   697  019E                     	;# 
   698  019F                     	;# 
   699  020D                     	;# 
   700  0210                     	;# 
   701  0211                     	;# 
   702  0212                     	;# 
   703  0213                     	;# 
   704  0214                     	;# 
   705  0215                     	;# 
   706  0215                     	;# 
   707  0216                     	;# 
   708  0217                     	;# 
   709  0291                     	;# 
   710  0291                     	;# 
   711  0292                     	;# 
   712  0293                     	;# 
   713  0294                     	;# 
   714  0295                     	;# 
   715  0295                     	;# 
   716  0296                     	;# 
   717  0298                     	;# 
   718  0298                     	;# 
   719  0299                     	;# 
   720  029A                     	;# 
   721  029B                     	;# 
   722  029C                     	;# 
   723  029C                     	;# 
   724  029D                     	;# 
   725  029E                     	;# 
   726  029F                     	;# 
   727  0311                     	;# 
   728  0311                     	;# 
   729  0312                     	;# 
   730  0313                     	;# 
   731  0314                     	;# 
   732  0315                     	;# 
   733  0315                     	;# 
   734  0316                     	;# 
   735  0318                     	;# 
   736  0318                     	;# 
   737  0319                     	;# 
   738  031A                     	;# 
   739  031C                     	;# 
   740  031C                     	;# 
   741  031D                     	;# 
   742  031E                     	;# 
   743  0394                     	;# 
   744  0395                     	;# 
   745  0396                     	;# 
   746  0415                     	;# 
   747  0416                     	;# 
   748  0417                     	;# 
   749  041C                     	;# 
   750  041D                     	;# 
   751  041E                     	;# 
   752  0791                     	;# 
   753  0792                     	;# 
   754  0793                     	;# 
   755  0794                     	;# 
   756  0795                     	;# 
   757  0798                     	;# 
   758  0799                     	;# 
   759  079A                     	;# 
   760  07A0                     	;# 
   761  07A1                     	;# 
   762  07A2                     	;# 
   763  07A3                     	;# 
   764  07A4                     	;# 
   765  07A5                     	;# 
   766  07A6                     	;# 
   767  07A7                     	;# 
   768  07A8                     	;# 
   769  07A9                     	;# 
   770  07AA                     	;# 
   771  07AB                     	;# 
   772  0FE4                     	;# 
   773  0FE5                     	;# 
   774  0FE6                     	;# 
   775  0FE7                     	;# 
   776  0FE8                     	;# 
   777  0FE9                     	;# 
   778  0FEA                     	;# 
   779  0FEB                     	;# 
   780  0FED                     	;# 
   781  0FEE                     	;# 
   782  0FEF                     	;# 
   783  0000                     	;# 
   784  0001                     	;# 
   785  0002                     	;# 
   786  0003                     	;# 
   787  0004                     	;# 
   788  0005                     	;# 
   789  0006                     	;# 
   790  0007                     	;# 
   791  0008                     	;# 
   792  0009                     	;# 
   793  000A                     	;# 
   794  000B                     	;# 
   795  000C                     	;# 
   796  000D                     	;# 
   797  000E                     	;# 
   798  000F                     	;# 
   799  0010                     	;# 
   800  0011                     	;# 
   801  0012                     	;# 
   802  0013                     	;# 
   803  0015                     	;# 
   804  0016                     	;# 
   805  0016                     	;# 
   806  0017                     	;# 
   807  0018                     	;# 
   808  0019                     	;# 
   809  001A                     	;# 
   810  001B                     	;# 
   811  001C                     	;# 
   812  001E                     	;# 
   813  001F                     	;# 
   814  008C                     	;# 
   815  008D                     	;# 
   816  008E                     	;# 
   817  008F                     	;# 
   818  0090                     	;# 
   819  0091                     	;# 
   820  0092                     	;# 
   821  0093                     	;# 
   822  0095                     	;# 
   823  0096                     	;# 
   824  0097                     	;# 
   825  0098                     	;# 
   826  0099                     	;# 
   827  009A                     	;# 
   828  009B                     	;# 
   829  009B                     	;# 
   830  009C                     	;# 
   831  009D                     	;# 
   832  009E                     	;# 
   833  010C                     	;# 
   834  010D                     	;# 
   835  010E                     	;# 
   836  010F                     	;# 
   837  0110                     	;# 
   838  0111                     	;# 
   839  0112                     	;# 
   840  0113                     	;# 
   841  0114                     	;# 
   842  0115                     	;# 
   843  0116                     	;# 
   844  0117                     	;# 
   845  0118                     	;# 
   846  0119                     	;# 
   847  011A                     	;# 
   848  011B                     	;# 
   849  011D                     	;# 
   850  018C                     	;# 
   851  018D                     	;# 
   852  018F                     	;# 
   853  0190                     	;# 
   854  0191                     	;# 
   855  0191                     	;# 
   856  0192                     	;# 
   857  0193                     	;# 
   858  0193                     	;# 
   859  0193                     	;# 
   860  0194                     	;# 
   861  0195                     	;# 
   862  0196                     	;# 
   863  0199                     	;# 
   864  019A                     	;# 
   865  019B                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019C                     	;# 
   870  019C                     	;# 
   871  019D                     	;# 
   872  019E                     	;# 
   873  019F                     	;# 
   874  020D                     	;# 
   875  0210                     	;# 
   876  0211                     	;# 
   877  0212                     	;# 
   878  0213                     	;# 
   879  0214                     	;# 
   880  0215                     	;# 
   881  0215                     	;# 
   882  0216                     	;# 
   883  0217                     	;# 
   884  0291                     	;# 
   885  0291                     	;# 
   886  0292                     	;# 
   887  0293                     	;# 
   888  0294                     	;# 
   889  0295                     	;# 
   890  0295                     	;# 
   891  0296                     	;# 
   892  0298                     	;# 
   893  0298                     	;# 
   894  0299                     	;# 
   895  029A                     	;# 
   896  029B                     	;# 
   897  029C                     	;# 
   898  029C                     	;# 
   899  029D                     	;# 
   900  029E                     	;# 
   901  029F                     	;# 
   902  0311                     	;# 
   903  0311                     	;# 
   904  0312                     	;# 
   905  0313                     	;# 
   906  0314                     	;# 
   907  0315                     	;# 
   908  0315                     	;# 
   909  0316                     	;# 
   910  0318                     	;# 
   911  0318                     	;# 
   912  0319                     	;# 
   913  031A                     	;# 
   914  031C                     	;# 
   915  031C                     	;# 
   916  031D                     	;# 
   917  031E                     	;# 
   918  0394                     	;# 
   919  0395                     	;# 
   920  0396                     	;# 
   921  0415                     	;# 
   922  0416                     	;# 
   923  0417                     	;# 
   924  041C                     	;# 
   925  041D                     	;# 
   926  041E                     	;# 
   927  0791                     	;# 
   928  0792                     	;# 
   929  0793                     	;# 
   930  0794                     	;# 
   931  0795                     	;# 
   932  0798                     	;# 
   933  0799                     	;# 
   934  079A                     	;# 
   935  07A0                     	;# 
   936  07A1                     	;# 
   937  07A2                     	;# 
   938  07A3                     	;# 
   939  07A4                     	;# 
   940  07A5                     	;# 
   941  07A6                     	;# 
   942  07A7                     	;# 
   943  07A8                     	;# 
   944  07A9                     	;# 
   945  07AA                     	;# 
   946  07AB                     	;# 
   947  0FE4                     	;# 
   948  0FE5                     	;# 
   949  0FE6                     	;# 
   950  0FE7                     	;# 
   951  0FE8                     	;# 
   952  0FE9                     	;# 
   953  0FEA                     	;# 
   954  0FEB                     	;# 
   955  0FED                     	;# 
   956  0FEE                     	;# 
   957  0FEF                     	;# 
   958                           
   959                           	psect	idataBANK1
   960  0F2C                     __pidataBANK1:
   961                           
   962                           ;initializer for _txtLCD
   963  0F2C  3420               	retlw	32
   964  0F2D  3400               	retlw	0
   965  0F2E  3400               	retlw	0
   966  0F2F  3400               	retlw	0
   967  0F30  3400               	retlw	0
   968  0F31  3400               	retlw	0
   969  0F32  3400               	retlw	0
   970  0F33  3400               	retlw	0
   971  0F34  3400               	retlw	0
   972  0F35  3400               	retlw	0
   973  0F36  3400               	retlw	0
   974  0F37  3400               	retlw	0
   975  0F38  3400               	retlw	0
   976  0F39  3400               	retlw	0
   977  0F3A  3400               	retlw	0
   978  0F3B  3400               	retlw	0
   979  0F3C  3400               	retlw	0
   980  0F3D  3400               	retlw	0
   981  0F3E  3400               	retlw	0
   982  0F3F  3400               	retlw	0
   983  009B                     _ADRESL	set	155
   984  009C                     _ADRESH	set	156
   985  009D                     _ADCON0bits	set	157
   986  009E                     _ADCON1bits	set	158
   987  008C                     _TRISAbits	set	140
   988  008F                     _TRISD	set	143
   989  010F                     _LATD	set	271
   990  018C                     _ANSELAbits	set	396
   991  018F                     _ANSELD	set	399
   992                           
   993                           	psect	stringtext1
   994  1000                     __pstringtext1:
   995  1000                     STR_1:
   996  1000  3443               	retlw	67	;'C'
   997  1001  346F               	retlw	111	;'o'
   998  1002  346E               	retlw	110	;'n'
   999  1003  3476               	retlw	118	;'v'
  1000  1004  3465               	retlw	101	;'e'
  1001  1005  3472               	retlw	114	;'r'
  1002  1006  343A               	retlw	58	;':'
  1003  1007  3420               	retlw	32	;' '
  1004  1008  3425               	retlw	37	;'%'
  1005  1009  3430               	retlw	48	;'0'
  1006  100A  3434               	retlw	52	;'4'
  1007  100B  3464               	retlw	100	;'d'
  1008  100C  3400               	retlw	0
  1009                           
  1010                           	psect	stringtext2
  1011  0000                     __pstringtext2:
  1012                           
  1013                           	psect	cinit
  1014  07E6                     start_initialization:	
  1015                           ; #config settings
  1016                           
  1017  07E6                     __initialization:
  1018                           
  1019                           ; Initialize objects allocated to BANK1
  1020  07E6  302C               	movlw	low __pidataBANK1
  1021  07E7  0084               	movwf	4
  1022  07E8  308F               	movlw	(high __pidataBANK1)| (0+128)
  1023  07E9  0085               	movwf	5
  1024  07EA  30C8               	movlw	low __pdataBANK1
  1025  07EB  0086               	movwf	6
  1026  07EC  3000               	movlw	high __pdataBANK1
  1027  07ED  0087               	movwf	7
  1028  07EE  3014               	movlw	20
  1029  07EF  318E  26F9  3187   	fcall	init_ram
  1030                           
  1031                           ; Clear objects allocated to BANK0
  1032  07F2  01ED               	clrf	__pbssBANK0& (0+127)
  1033  07F3  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  1034  07F4  01EF               	clrf	(__pbssBANK0+2)& (0+127)
  1035                           
  1036                           ; Clear objects allocated to BANK1
  1037  07F5  30A0               	movlw	low __pbssBANK1
  1038  07F6  0084               	movwf	4
  1039  07F7  3000               	movlw	high __pbssBANK1
  1040  07F8  0085               	movwf	5
  1041  07F9  3028               	movlw	40
  1042  07FA  318E  26F3  3187   	fcall	clear_ram0
  1043  07FD                     end_of_initialization:	
  1044                           ;End of C runtime variable initialization code
  1045                           
  1046  07FD                     __end_of__initialization:
  1047  07FD  0020               	movlb	0
  1048  07FE  3181  2926         	ljmp	_main	;jump to C main() function
  1049                           
  1050                           	psect	bssBANK0
  1051  006D                     __pbssBANK0:
  1052  006D                     _flags:
  1053  006D                     	ds	2
  1054  006F                     __lcd_params:
  1055  006F                     	ds	1
  1056                           
  1057                           	psect	bssBANK1
  1058  00A0                     __pbssBANK1:
  1059  00A0                     _nout:
  1060  00A0                     	ds	2
  1061  00A2                     _width:
  1062  00A2                     	ds	2
  1063  00A4                     _prec:
  1064  00A4                     	ds	2
  1065  00A6                     _conver:
  1066  00A6                     	ds	2
  1067  00A8                     _dbuf:
  1068  00A8                     	ds	32
  1069                           
  1070                           	psect	dataBANK1
  1071  00C8                     __pdataBANK1:
  1072  00C8                     _txtLCD:
  1073  00C8                     	ds	20
  1074                           
  1075                           	psect	inittext
  1076  0EF9                     init_ram:
  1077  0EF9  00FE               	movwf	btemp
  1078  0EFA                     initloop:
  1079  0EFA  0012               	moviw fsr0++
  1080  0EFB  001E               	movwi fsr1++
  1081  0EFC  0BFE               	decfsz	btemp,f
  1082  0EFD  2EFA               	goto	initloop
  1083  0EFE  3400               	retlw	0
  1084                           
  1085                           	psect	clrtext
  1086  0EF3                     clear_ram0:	
  1087                           ;	Called with FSR0 containing the base address, and
  1088                           ;	WREG with the size to clear
  1089                           
  1090  0EF3  0064               	clrwdt	;clear the watchdog before getting into this loop
  1091  0EF4                     clrloop0:
  1092  0EF4  0180               	clrf	0	;clear RAM location pointed to by FSR
  1093  0EF5  3101               	addfsr 0,1
  1094  0EF6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1095  0EF7  2EF4               	goto	clrloop0	;have we reached the end yet?
  1096  0EF8  3400               	retlw	0	;all done for this memory range, return
  1097                           
  1098                           	psect	cstackBANK1
  1099  00DC                     __pcstackBANK1:
  1100  00DC                     sprintf@ap:
  1101                           
  1102                           ; 1 bytes @ 0x0
  1103  00DC                     	ds	1
  1104  00DD                     sprintf@s:
  1105                           
  1106                           ; 1 bytes @ 0x1
  1107  00DD                     	ds	1
  1108  00DE                     sprintf@f:
  1109                           
  1110                           ; 10 bytes @ 0x2
  1111  00DE                     	ds	10
  1112                           
  1113                           	psect	cstackCOMMON
  1114  0070                     __pcstackCOMMON:
  1115  0070                     ?_lcd_command:
  1116  0070                     ?_ADC_Init:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ??_ADC_Init:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_putch:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ??_putch:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?__write_nibble:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ??__write_nibble:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?_lcd_init:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_lcd_write:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_lcd_disable_blink:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?_lcd_disable_cursor:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_main:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ??___aodiv:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ??___aomod:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_ADC_Read:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_fputc:	
  1159                           ; 2 bytes @ 0x0
  1160                           
  1161  0070                     ?_strlen:	
  1162                           ; 2 bytes @ 0x0
  1163                           
  1164  0070                     ?_isdigit:	
  1165                           ; 2 bytes @ 0x0
  1166                           
  1167  0070                     ?_isspace:	
  1168                           ; 2 bytes @ 0x0
  1169                           
  1170  0070                     ?___wmul:	
  1171                           ; 2 bytes @ 0x0
  1172                           
  1173  0070                     putch@c:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176  0070                     ___wmul@multiplier:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     isdigit@c:	
  1180                           ; 2 bytes @ 0x0
  1181                           
  1182  0070                     isspace@c:	
  1183                           ; 2 bytes @ 0x0
  1184                           
  1185  0070                     fputc@c:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188                           
  1189                           ; 2 bytes @ 0x0
  1190  0070                     	ds	1
  1191  0071                     __write_nibble@nibble:
  1192  0071                     ___aodiv@counter:	
  1193                           ; 1 bytes @ 0x1
  1194                           
  1195  0071                     ___aomod@counter:	
  1196                           ; 1 bytes @ 0x1
  1197                           
  1198                           
  1199                           ; 1 bytes @ 0x1
  1200  0071                     	ds	1
  1201  0072                     ??_ADC_Read:
  1202  0072                     ??_strlen:	
  1203                           ; 1 bytes @ 0x2
  1204                           
  1205  0072                     ??_isdigit:	
  1206                           ; 1 bytes @ 0x2
  1207                           
  1208  0072                     ??_isspace:	
  1209                           ; 1 bytes @ 0x2
  1210                           
  1211  0072                     ?__send_byte:	
  1212                           ; 1 bytes @ 0x2
  1213                           
  1214  0072                     __send_byte@mode:	
  1215                           ; 1 bytes @ 0x2
  1216                           
  1217  0072                     ___aodiv@sign:	
  1218                           ; 1 bytes @ 0x2
  1219                           
  1220  0072                     ___aomod@sign:	
  1221                           ; 1 bytes @ 0x2
  1222                           
  1223  0072                     fputc@fp:	
  1224                           ; 1 bytes @ 0x2
  1225                           
  1226  0072                     ___wmul@multiplicand:	
  1227                           ; 1 bytes @ 0x2
  1228                           
  1229                           
  1230                           ; 2 bytes @ 0x2
  1231  0072                     	ds	1
  1232  0073                     ??_fputc:
  1233  0073                     ??__send_byte:	
  1234                           ; 1 bytes @ 0x3
  1235                           
  1236  0073                     ?_abs:	
  1237                           ; 1 bytes @ 0x3
  1238                           
  1239  0073                     ADC_Read@ch:	
  1240                           ; 2 bytes @ 0x3
  1241                           
  1242  0073                     strlen@a:	
  1243                           ; 1 bytes @ 0x3
  1244                           
  1245  0073                     abs@a:	
  1246                           ; 1 bytes @ 0x3
  1247                           
  1248  0073                     ___aodiv@quotient:	
  1249                           ; 2 bytes @ 0x3
  1250                           
  1251                           
  1252                           ; 8 bytes @ 0x3
  1253  0073                     	ds	1
  1254  0074                     ??___wmul:
  1255  0074                     _isspace$873:	
  1256                           ; 1 bytes @ 0x4
  1257                           
  1258  0074                     strlen@s:	
  1259                           ; 1 bytes @ 0x4
  1260                           
  1261  0074                     ___wmul@product:	
  1262                           ; 1 bytes @ 0x4
  1263                           
  1264                           
  1265                           ; 2 bytes @ 0x4
  1266  0074                     	ds	1
  1267  0075                     ??_abs:
  1268  0075                     __send_byte@value:	
  1269                           ; 1 bytes @ 0x5
  1270                           
  1271                           
  1272                           ; 1 bytes @ 0x5
  1273  0075                     	ds	1
  1274  0076                     ??_lcd_command:
  1275  0076                     ??_lcd_write:	
  1276                           ; 1 bytes @ 0x6
  1277                           
  1278  0076                     ?_atoi:	
  1279                           ; 1 bytes @ 0x6
  1280                           
  1281  0076                     lcd_write@letra:	
  1282                           ; 2 bytes @ 0x6
  1283                           
  1284  0076                     lcd_command@cmd:	
  1285                           ; 1 bytes @ 0x6
  1286                           
  1287  0076                     atoi@s:	
  1288                           ; 1 bytes @ 0x6
  1289                           
  1290                           
  1291                           ; 2 bytes @ 0x6
  1292  0076                     	ds	1
  1293  0077                     ??_lcd_init:
  1294  0077                     ?_lcd_set_cursor:	
  1295                           ; 1 bytes @ 0x7
  1296                           
  1297  0077                     ??_lcd_disable_blink:	
  1298                           ; 1 bytes @ 0x7
  1299                           
  1300  0077                     ??_lcd_disable_cursor:	
  1301                           ; 1 bytes @ 0x7
  1302                           
  1303  0077                     lcd_set_cursor@col:	
  1304                           ; 1 bytes @ 0x7
  1305                           
  1306                           
  1307                           ; 1 bytes @ 0x7
  1308  0077                     	ds	1
  1309  0078                     ??_atoi:
  1310  0078                     ??_lcd_set_cursor:	
  1311                           ; 1 bytes @ 0x8
  1312                           
  1313  0078                     ?_fputs:	
  1314                           ; 1 bytes @ 0x8
  1315                           
  1316  0078                     fputs@fp:	
  1317                           ; 2 bytes @ 0x8
  1318                           
  1319                           
  1320                           ; 1 bytes @ 0x8
  1321  0078                     	ds	1
  1322  0079                     ??_fputs:
  1323                           
  1324                           ; 1 bytes @ 0x9
  1325  0079                     	ds	1
  1326  007A                     lcd_set_cursor@row:
  1327                           
  1328                           ; 1 bytes @ 0xA
  1329  007A                     	ds	1
  1330  007B                     ?_lcd_out:
  1331  007B                     lcd_out@col:	
  1332                           ; 1 bytes @ 0xB
  1333                           
  1334                           
  1335                           ; 1 bytes @ 0xB
  1336  007B                     	ds	1
  1337  007C                     ??_pad:
  1338  007C                     lcd_out@str:	
  1339                           ; 1 bytes @ 0xC
  1340                           
  1341                           
  1342                           ; 1 bytes @ 0xC
  1343  007C                     	ds	1
  1344  007D                     ??_sprintf:
  1345  007D                     ??_lcd_out:	
  1346                           ; 1 bytes @ 0xD
  1347                           
  1348                           
  1349                           ; 1 bytes @ 0xD
  1350  007D                     	ds	1
  1351                           
  1352                           	psect	cstackBANK0
  1353  0020                     __pcstackBANK0:
  1354  0020                     ?___aodiv:
  1355  0020                     ?___aomod:	
  1356                           ; 8 bytes @ 0x0
  1357                           
  1358  0020                     lcd_out@row:	
  1359                           ; 8 bytes @ 0x0
  1360                           
  1361  0020                     fputs@c:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0020                     atoi@neg:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0020                     ___aodiv@divisor:	
  1368                           ; 2 bytes @ 0x0
  1369                           
  1370  0020                     ___aomod@divisor:	
  1371                           ; 8 bytes @ 0x0
  1372                           
  1373                           
  1374                           ; 8 bytes @ 0x0
  1375  0020                     	ds	1
  1376  0021                     fputs@i:
  1377                           
  1378                           ; 2 bytes @ 0x1
  1379  0021                     	ds	1
  1380  0022                     atoi@n:
  1381                           
  1382                           ; 2 bytes @ 0x2
  1383  0022                     	ds	1
  1384  0023                     fputs@s:
  1385                           
  1386                           ; 1 bytes @ 0x3
  1387  0023                     	ds	1
  1388  0024                     ?_pad:
  1389  0024                     pad@buf:	
  1390                           ; 2 bytes @ 0x4
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x4
  1394  0024                     	ds	1
  1395  0025                     pad@p:
  1396                           
  1397                           ; 2 bytes @ 0x5
  1398  0025                     	ds	2
  1399  0027                     pad@i:
  1400                           
  1401                           ; 2 bytes @ 0x7
  1402  0027                     	ds	1
  1403  0028                     ___aodiv@dividend:
  1404  0028                     ___aomod@dividend:	
  1405                           ; 8 bytes @ 0x8
  1406                           
  1407                           
  1408                           ; 8 bytes @ 0x8
  1409  0028                     	ds	1
  1410  0029                     pad@w:
  1411                           
  1412                           ; 2 bytes @ 0x9
  1413  0029                     	ds	2
  1414  002B                     pad@fp:
  1415                           
  1416                           ; 1 bytes @ 0xB
  1417  002B                     	ds	5
  1418  0030                     ?_dtoa:
  1419  0030                     dtoa@d:	
  1420                           ; 2 bytes @ 0x10
  1421                           
  1422                           
  1423                           ; 8 bytes @ 0x10
  1424  0030                     	ds	8
  1425  0038                     ??_dtoa:
  1426                           
  1427                           ; 1 bytes @ 0x18
  1428  0038                     	ds	3
  1429  003B                     _dtoa$824:
  1430                           
  1431                           ; 2 bytes @ 0x1B
  1432  003B                     	ds	2
  1433  003D                     dtoa@fp:
  1434                           
  1435                           ; 1 bytes @ 0x1D
  1436  003D                     	ds	1
  1437  003E                     dtoa@p:
  1438                           
  1439                           ; 2 bytes @ 0x1E
  1440  003E                     	ds	2
  1441  0040                     dtoa@w:
  1442                           
  1443                           ; 2 bytes @ 0x20
  1444  0040                     	ds	2
  1445  0042                     dtoa@s:
  1446                           
  1447                           ; 2 bytes @ 0x22
  1448  0042                     	ds	2
  1449  0044                     dtoa@n:
  1450                           
  1451                           ; 8 bytes @ 0x24
  1452  0044                     	ds	8
  1453  004C                     dtoa@i:
  1454                           
  1455                           ; 2 bytes @ 0x2C
  1456  004C                     	ds	2
  1457  004E                     ?_vfpfcnvrt:
  1458  004E                     vfpfcnvrt@fmt:	
  1459                           ; 2 bytes @ 0x2E
  1460                           
  1461                           
  1462                           ; 1 bytes @ 0x2E
  1463  004E                     	ds	1
  1464  004F                     vfpfcnvrt@ap:
  1465                           
  1466                           ; 1 bytes @ 0x2F
  1467  004F                     	ds	1
  1468  0050                     ??_vfpfcnvrt:
  1469                           
  1470                           ; 1 bytes @ 0x30
  1471  0050                     	ds	5
  1472  0055                     vfpfcnvrt@ll:
  1473                           
  1474                           ; 8 bytes @ 0x35
  1475  0055                     	ds	8
  1476  005D                     vfpfcnvrt@done:
  1477                           
  1478                           ; 2 bytes @ 0x3D
  1479  005D                     	ds	2
  1480  005F                     vfpfcnvrt@fp:
  1481                           
  1482                           ; 1 bytes @ 0x3F
  1483  005F                     	ds	1
  1484  0060                     ?_vfprintf:
  1485  0060                     vfprintf@fmt:	
  1486                           ; 2 bytes @ 0x40
  1487                           
  1488                           
  1489                           ; 2 bytes @ 0x40
  1490  0060                     	ds	2
  1491  0062                     vfprintf@ap:
  1492                           
  1493                           ; 1 bytes @ 0x42
  1494  0062                     	ds	1
  1495  0063                     ??_vfprintf:
  1496                           
  1497                           ; 1 bytes @ 0x43
  1498  0063                     	ds	2
  1499  0065                     vfprintf@fp:
  1500                           
  1501                           ; 1 bytes @ 0x45
  1502  0065                     	ds	1
  1503  0066                     vfprintf@cfmt:
  1504                           
  1505                           ; 2 bytes @ 0x46
  1506  0066                     	ds	2
  1507  0068                     ?_sprintf:
  1508  0068                     sprintf@fmt:	
  1509                           ; 2 bytes @ 0x48
  1510                           
  1511                           
  1512                           ; 2 bytes @ 0x48
  1513  0068                     	ds	4
  1514  006C                     ??_main:
  1515                           
  1516                           ; 1 bytes @ 0x4C
  1517  006C                     	ds	1
  1518                           
  1519                           	psect	maintext
  1520  0126                     __pmaintext:	
  1521 ;;
  1522 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1523 ;;
  1524 ;; *************** function _main *****************
  1525 ;; Defined at:
  1526 ;;		line 11 in file "main.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : B1F/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1542 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1543 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1544 ;;Total ram usage:        1 bytes
  1545 ;; Hardware stack levels required when called: 8
  1546 ;; This function calls:
  1547 ;;		_ADC_Init
  1548 ;;		_ADC_Read
  1549 ;;		_lcd_disable_blink
  1550 ;;		_lcd_disable_cursor
  1551 ;;		_lcd_init
  1552 ;;		_lcd_out
  1553 ;;		_sprintf
  1554 ;; This function is called by:
  1555 ;;		Startup code after reset
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559  0126                     _main:	
  1560                           ;psect for function _main
  1561                           
  1562  0126                     l2140:	
  1563                           ;incstack = 0
  1564                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1565                           
  1566                           
  1567                           ;main.c: 13:     ANSELAbits.ANSA0 = 1;
  1568  0126  0023               	movlb	3	; select bank3
  1569  0127  140C               	bsf	12,0	;volatile
  1570                           
  1571                           ;main.c: 14:     TRISAbits.TRISA0 = 1;
  1572  0128  0021               	movlb	1	; select bank1
  1573  0129  140C               	bsf	12,0	;volatile
  1574  012A                     l2142:
  1575                           
  1576                           ;main.c: 16:     lcd_init();
  1577  012A  3182  220F  3181   	fcall	_lcd_init
  1578                           
  1579                           ;main.c: 17:     lcd_disable_blink();
  1580  012D  318F  270E  3181   	fcall	_lcd_disable_blink
  1581                           
  1582                           ;main.c: 18:     lcd_disable_cursor();
  1583  0130  318F  271D  3181   	fcall	_lcd_disable_cursor
  1584  0133                     l2144:
  1585                           
  1586                           ;main.c: 19:     ADC_Init();
  1587  0133  3180  2004  3181   	fcall	_ADC_Init
  1588  0136                     l2146:
  1589                           
  1590                           ;main.c: 21:         conver = ADC_Read(0);
  1591  0136  3000               	movlw	0
  1592  0137  318F  2740  3181   	fcall	_ADC_Read
  1593  013A  0871               	movf	?_ADC_Read+1,w
  1594  013B  0021               	movlb	1	; select bank1
  1595  013C  00A7               	movwf	(_conver+1)^(0+128)
  1596  013D  0870               	movf	?_ADC_Read,w
  1597  013E  00A6               	movwf	_conver^(0+128)
  1598  013F                     l2148:
  1599                           
  1600                           ;main.c: 22:         sprintf(txtLCD,"Conver: %04d", conver);
  1601  013F  3000               	movlw	low (STR_1| (0+32768))
  1602  0140  0020               	movlb	0	; select bank0
  1603  0141  00E8               	movwf	sprintf@fmt
  1604  0142  3090               	movlw	high (STR_1| (0+32768))
  1605  0143  00E9               	movwf	sprintf@fmt+1
  1606  0144  0021               	movlb	1	; select bank1
  1607  0145  0827               	movf	(_conver+1)^(0+128),w
  1608  0146  0020               	movlb	0	; select bank0
  1609  0147  00EB               	movwf	?_sprintf+3
  1610  0148  0021               	movlb	1	; select bank1
  1611  0149  0826               	movf	_conver^(0+128),w
  1612  014A  0020               	movlb	0	; select bank0
  1613  014B  00EA               	movwf	?_sprintf+2
  1614  014C  30C8               	movlw	(low (_txtLCD| 0))& (0+255)
  1615  014D  3180  200F  3181   	fcall	_sprintf
  1616  0150                     l2150:
  1617                           
  1618                           ;main.c: 23:         lcd_out(1,1,txtLCD);
  1619  0150  01FB               	clrf	lcd_out@col
  1620  0151  0AFB               	incf	lcd_out@col,f
  1621  0152  30C8               	movlw	(low (_txtLCD| 0))& (0+255)
  1622  0153  0020               	movlb	0	; select bank0
  1623  0154  00EC               	movwf	??_main
  1624  0155  086C               	movf	??_main,w
  1625  0156  00FC               	movwf	lcd_out@str
  1626  0157  3001               	movlw	1
  1627  0158  318F  27A1  3181   	fcall	_lcd_out
  1628  015B                     l2152:
  1629                           
  1630                           ;main.c: 24:         _delay((unsigned long)((10)*(8000000UL/4000.0)));
  1631  015B  301A               	movlw	26
  1632  015C  0020               	movlb	0	; select bank0
  1633  015D  00EC               	movwf	??_main
  1634  015E  30F8               	movlw	248
  1635  015F                     u1617:
  1636  015F  0B89               	decfsz	9,f
  1637  0160  295F               	goto	u1617
  1638  0161  0BEC               	decfsz	??_main,f
  1639  0162  295F               	goto	u1617
  1640  0163  0000               	nop
  1641  0164  2936               	goto	l2146
  1642  0165  3180  2802         	ljmp	start
  1643  0167                     __end_of_main:
  1644                           
  1645                           	psect	text1
  1646  000F                     __ptext1:	
  1647 ;; *************** function _sprintf *****************
  1648 ;; Defined at:
  1649 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  s               1    wreg     PTR unsigned char 
  1652 ;;		 -> txtLCD(20), 
  1653 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  1654 ;;		 -> STR_1(13), 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  s               1    1[BANK1 ] PTR unsigned char 
  1657 ;;		 -> txtLCD(20), 
  1658 ;;  f              10    2[BANK1 ] struct _IO_FILE
  1659 ;;  ret             2    0        int 
  1660 ;;  ap              1    0[BANK1 ] PTR void [1]
  1661 ;;		 -> ?_sprintf(2), 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  2   72[BANK0 ] int 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1671 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1672 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1674 ;;      Totals:         1       4      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;Total ram usage:       17 bytes
  1676 ;; Hardware stack levels used: 1
  1677 ;; Hardware stack levels required when called: 7
  1678 ;; This function calls:
  1679 ;;		_vfprintf
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685  000F                     _sprintf:	
  1686                           ;psect for function _sprintf
  1687                           
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1691                           ;sprintf@s stored from wreg
  1692  000F  0021               	movlb	1	; select bank1
  1693  0010  00DD               	movwf	sprintf@s^(0+128)
  1694  0011                     l2060:
  1695  0011  306A               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1696  0012  00FD               	movwf	??_sprintf
  1697  0013  087D               	movf	??_sprintf,w
  1698  0014  00DC               	movwf	sprintf@ap^(0+128)
  1699  0015  085D               	movf	sprintf@s^(0+128),w
  1700  0016  00FD               	movwf	??_sprintf
  1701  0017  087D               	movf	??_sprintf,w
  1702  0018  00DE               	movwf	sprintf@f^(0+128)
  1703  0019                     l2062:
  1704  0019  01E0               	clrf	(sprintf@f^(0+128)+2)
  1705  001A  01E1               	clrf	((sprintf@f+1)^(0+128)+2)
  1706  001B                     l2064:
  1707  001B  01E6               	clrf	(sprintf@f^(0+128)+8)
  1708  001C  01E7               	clrf	((sprintf@f+1)^(0+128)+8)
  1709  001D                     l2066:
  1710  001D  0020               	movlb	0	; select bank0
  1711  001E  0869               	movf	sprintf@fmt+1,w
  1712  001F  00E1               	movwf	vfprintf@fmt+1
  1713  0020  0868               	movf	sprintf@fmt,w
  1714  0021  00E0               	movwf	vfprintf@fmt
  1715  0022  30DC               	movlw	(low (sprintf@ap| 0))& (0+255)
  1716  0023  00FD               	movwf	??_sprintf
  1717  0024  087D               	movf	??_sprintf,w
  1718  0025  00E2               	movwf	vfprintf@ap
  1719  0026  30DE               	movlw	(low (sprintf@f| 0))& (0+255)
  1720  0027  3180  2086  3180   	fcall	_vfprintf
  1721  002A                     l2068:
  1722  002A  0021               	movlb	1	; select bank1
  1723  002B  0860               	movf	(sprintf@f^(0+128)+2),w
  1724  002C  075D               	addwf	sprintf@s^(0+128),w
  1725  002D  00FD               	movwf	??_sprintf
  1726  002E  087D               	movf	??_sprintf,w
  1727  002F  0086               	movwf	6
  1728  0030  0187               	clrf	7
  1729  0031  0181               	clrf	1
  1730  0032                     l761:
  1731  0032  0008               	return
  1732  0033                     __end_of_sprintf:
  1733                           
  1734                           	psect	text2
  1735  0086                     __ptext2:	
  1736 ;; *************** function _vfprintf *****************
  1737 ;; Defined at:
  1738 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  fp              1    wreg     PTR struct _IO_FILE
  1741 ;;		 -> sprintf@f(10), 
  1742 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1743 ;;		 -> STR_1(13), 
  1744 ;;  ap              1   66[BANK0 ] PTR PTR void 
  1745 ;;		 -> sprintf@ap(1), 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  fp              1   69[BANK0 ] PTR struct _IO_FILE
  1748 ;;		 -> sprintf@f(10), 
  1749 ;;  cfmt            2   70[BANK0 ] PTR unsigned char 
  1750 ;;		 -> STR_1(13), 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  2   64[BANK0 ] int 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1760 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1762 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1763 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1764 ;;Total ram usage:        8 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 6
  1767 ;; This function calls:
  1768 ;;		_vfpfcnvrt
  1769 ;; This function is called by:
  1770 ;;		_sprintf
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774  0086                     _vfprintf:	
  1775                           ;psect for function _vfprintf
  1776                           
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1780                           ;vfprintf@fp stored from wreg
  1781  0086  0020               	movlb	0	; select bank0
  1782  0087  00E5               	movwf	vfprintf@fp
  1783  0088                     l1982:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1786  0088  0861               	movf	vfprintf@fmt+1,w
  1787  0089  00E7               	movwf	vfprintf@cfmt+1
  1788  008A  0860               	movf	vfprintf@fmt,w
  1789  008B  00E6               	movwf	vfprintf@cfmt
  1790  008C                     l1984:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1793  008C  0021               	movlb	1	; select bank1
  1794  008D  01A0               	clrf	_nout^(0+128)
  1795  008E  01A1               	clrf	(_nout+1)^(0+128)
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1798  008F  28A4               	goto	l1988
  1799  0090                     l1986:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1802  0090  3066               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1803  0091  00E3               	movwf	??_vfprintf
  1804  0092  0863               	movf	??_vfprintf,w
  1805  0093  00CE               	movwf	vfpfcnvrt@fmt
  1806  0094  0862               	movf	vfprintf@ap,w
  1807  0095  00E4               	movwf	??_vfprintf+1
  1808  0096  0864               	movf	??_vfprintf+1,w
  1809  0097  00CF               	movwf	vfpfcnvrt@ap
  1810  0098  0865               	movf	vfprintf@fp,w
  1811  0099  3186  2655  3180   	fcall	_vfpfcnvrt
  1812  009C  0020               	movlb	0	; select bank0
  1813  009D  084E               	movf	?_vfpfcnvrt,w
  1814  009E  0021               	movlb	1	; select bank1
  1815  009F  07A0               	addwf	_nout^(0+128),f
  1816  00A0  0020               	movlb	0	; select bank0
  1817  00A1  084F               	movf	?_vfpfcnvrt+1,w
  1818  00A2  0021               	movlb	1	; select bank1
  1819  00A3  3DA1               	addwfc	(_nout+1)^(0+128),f
  1820  00A4                     l1988:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1823  00A4  0020               	movlb	0	; select bank0
  1824  00A5  0866               	movf	vfprintf@cfmt,w
  1825  00A6  0084               	movwf	4
  1826  00A7  0867               	movf	vfprintf@cfmt+1,w
  1827  00A8  0085               	movwf	5
  1828  00A9  0012               	moviw fsr0++
  1829  00AA  1D03               	btfss	3,2
  1830  00AB  28AD               	goto	u1551
  1831  00AC  28AE               	goto	u1550
  1832  00AD                     u1551:
  1833  00AD  2890               	goto	l1986
  1834  00AE                     u1550:
  1835  00AE                     l1990:
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1838  00AE  0021               	movlb	1	; select bank1
  1839  00AF  0821               	movf	(_nout+1)^(0+128),w
  1840  00B0  0020               	movlb	0	; select bank0
  1841  00B1  00E1               	movwf	?_vfprintf+1
  1842  00B2  0021               	movlb	1	; select bank1
  1843  00B3  0820               	movf	_nout^(0+128),w
  1844  00B4  0020               	movlb	0	; select bank0
  1845  00B5  00E0               	movwf	?_vfprintf
  1846  00B6                     l857:
  1847  00B6  0008               	return
  1848  00B7                     __end_of_vfprintf:
  1849                           
  1850                           	psect	text3
  1851  0655                     __ptext3:	
  1852 ;; *************** function _vfpfcnvrt *****************
  1853 ;; Defined at:
  1854 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  fp              1    wreg     PTR struct _IO_FILE
  1857 ;;		 -> sprintf@f(10), 
  1858 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  1859 ;;		 -> vfprintf@cfmt(2), 
  1860 ;;  ap              1   47[BANK0 ] PTR PTR void 
  1861 ;;		 -> sprintf@ap(1), 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  fp              1   63[BANK0 ] PTR struct _IO_FILE
  1864 ;;		 -> sprintf@f(10), 
  1865 ;;  ll              8   53[BANK0 ] long long 
  1866 ;;  llu             8    0        unsigned long long 
  1867 ;;  f               4    0        unsigned long long 
  1868 ;;  ct              3    0        unsigned char [3]
  1869 ;;  done            2   61[BANK0 ] int 
  1870 ;;  vp              2    0        PTR void 
  1871 ;;  i               2    0        int 
  1872 ;;  cp              2    0        PTR unsigned char 
  1873 ;;  c               1    0        unsigned char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  2   46[BANK0 ] int 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1884 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1885 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1886 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1887 ;;Total ram usage:       18 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 5
  1890 ;; This function calls:
  1891 ;;		_atoi
  1892 ;;		_dtoa
  1893 ;;		_fputc
  1894 ;;		_isdigit
  1895 ;; This function is called by:
  1896 ;;		_vfprintf
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900  0655                     _vfpfcnvrt:	
  1901                           ;psect for function _vfpfcnvrt
  1902                           
  1903                           
  1904                           ;incstack = 0
  1905                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1906                           ;vfpfcnvrt@fp stored from wreg
  1907  0655  0020               	movlb	0	; select bank0
  1908  0656  00DF               	movwf	vfpfcnvrt@fp
  1909  0657                     l1872:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1912  0657  084E               	movf	vfpfcnvrt@fmt,w
  1913  0658  0086               	movwf	6
  1914  0659  0187               	clrf	7
  1915  065A  3F40               	moviw [0]fsr1
  1916  065B  00D0               	movwf	??_vfpfcnvrt
  1917  065C  3F41               	moviw [1]fsr1
  1918  065D  00D1               	movwf	??_vfpfcnvrt+1
  1919  065E  0850               	movf	??_vfpfcnvrt,w
  1920  065F  0084               	movwf	4
  1921  0660  0851               	movf	??_vfpfcnvrt+1,w
  1922  0661  0085               	movwf	5
  1923  0662  0012               	moviw fsr0++
  1924  0663  3A25               	xorlw	37
  1925  0664  1D03               	btfss	3,2
  1926  0665  2E67               	goto	u1461
  1927  0666  2E68               	goto	u1460
  1928  0667                     u1461:
  1929  0667  2FC2               	goto	l1950
  1930  0668                     u1460:
  1931  0668                     l1874:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1934  0668  084E               	movf	vfpfcnvrt@fmt,w
  1935  0669  0086               	movwf	6
  1936  066A  0187               	clrf	7
  1937  066B  3001               	movlw	1
  1938  066C  0781               	addwf	1,f
  1939  066D  3141               	addfsr 1,1
  1940  066E  1803               	skipnc
  1941  066F  0A81               	incf	1,f
  1942  0670                     l1876:
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1945  0670  0021               	movlb	1	; select bank1
  1946  0671  01A2               	clrf	_width^(0+128)
  1947  0672  01A3               	clrf	(_width+1)^(0+128)
  1948  0673  0020               	movlb	0	; select bank0
  1949  0674  01ED               	clrf	_flags
  1950  0675  01EE               	clrf	_flags+1
  1951  0676                     l1878:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1954  0676  30FF               	movlw	255
  1955  0677  0021               	movlb	1	; select bank1
  1956  0678  00A4               	movwf	_prec^(0+128)
  1957  0679  30FF               	movlw	255
  1958  067A  00A5               	movwf	(_prec^(0+128)+1)
  1959  067B                     l1880:
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1962  067B  0020               	movlb	0	; select bank0
  1963  067C  01DD               	clrf	vfpfcnvrt@done
  1964  067D  01DE               	clrf	vfpfcnvrt@done+1
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1967  067E  2EBA               	goto	l1898
  1968  067F                     l830:	
  1969                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  1970                           
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1973  067F  146D               	bsf	_flags,0
  1974  0680                     l1882:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1977  0680  084E               	movf	vfpfcnvrt@fmt,w
  1978  0681  0086               	movwf	6
  1979  0682  0187               	clrf	7
  1980  0683  3001               	movlw	1
  1981  0684  0781               	addwf	1,f
  1982  0685  3141               	addfsr 1,1
  1983  0686  1803               	skipnc
  1984  0687  0A81               	incf	1,f
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1987  0688  2EBA               	goto	l1898
  1988  0689                     l832:	
  1989                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  1990                           
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1993  0689  14ED               	bsf	_flags,1
  1994  068A  2E80               	goto	l1882
  1995  068B                     l833:	
  1996                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  1997                           
  1998                           
  1999                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2000  068B  156D               	bsf	_flags,2
  2001  068C  2E80               	goto	l1882
  2002  068D                     l834:	
  2003                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  2004                           
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2007  068D  15ED               	bsf	_flags,3
  2008  068E  2E80               	goto	l1882
  2009  068F                     l835:	
  2010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  2011                           
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2014  068F  166D               	bsf	_flags,4
  2015  0690  2E80               	goto	l1882
  2016  0691                     l1892:
  2017                           
  2018                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2019  0691  3001               	movlw	1
  2020  0692  00DD               	movwf	vfpfcnvrt@done
  2021  0693  3000               	movlw	0
  2022  0694  00DE               	movwf	vfpfcnvrt@done+1
  2023                           
  2024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2025  0695  2EBA               	goto	l1898
  2026  0696                     l1896:
  2027  0696  084E               	movf	vfpfcnvrt@fmt,w
  2028  0697  0086               	movwf	6
  2029  0698  0187               	clrf	7
  2030  0699  3F40               	moviw [0]fsr1
  2031  069A  00D0               	movwf	??_vfpfcnvrt
  2032  069B  3F41               	moviw [1]fsr1
  2033  069C  00D1               	movwf	??_vfpfcnvrt+1
  2034  069D  0850               	movf	??_vfpfcnvrt,w
  2035  069E  0084               	movwf	4
  2036  069F  0851               	movf	??_vfpfcnvrt+1,w
  2037  06A0  0085               	movwf	5
  2038  06A1  0800               	movf	0,w	;code access
  2039  06A2  00D2               	movwf	??_vfpfcnvrt+2
  2040  06A3  01D3               	clrf	??_vfpfcnvrt+3
  2041                           
  2042                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2043                           ; Switch size 1, requested type "simple"
  2044                           ; Number of cases is 1, Range of values is 0 to 0
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte            4     3 (average)
  2048                           ; direct_byte            8     6 (fixed)
  2049                           ; jumptable            260     6 (fixed)
  2050                           ;	Chosen strategy is simple_byte
  2051  06A4  0853               	movf	??_vfpfcnvrt+3,w
  2052  06A5  3A00               	xorlw	0	; case 0
  2053  06A6  1903               	skipnz
  2054  06A7  2EA9               	goto	l2234
  2055  06A8  2E91               	goto	l1892
  2056  06A9                     l2234:
  2057                           
  2058                           ; Switch size 1, requested type "simple"
  2059                           ; Number of cases is 5, Range of values is 32 to 48
  2060                           ; switch strategies available:
  2061                           ; Name         Instructions Cycles
  2062                           ; simple_byte           16     9 (average)
  2063                           ; direct_byte           43     9 (fixed)
  2064                           ; jumptable            263     9 (fixed)
  2065                           ;	Chosen strategy is simple_byte
  2066  06A9  0852               	movf	??_vfpfcnvrt+2,w
  2067  06AA  3A20               	xorlw	32	; case 32
  2068  06AB  1903               	skipnz
  2069  06AC  2E8D               	goto	l834
  2070  06AD  3A03               	xorlw	3	; case 35
  2071  06AE  1903               	skipnz
  2072  06AF  2E8F               	goto	l835
  2073  06B0  3A08               	xorlw	8	; case 43
  2074  06B1  1903               	skipnz
  2075  06B2  2E8B               	goto	l833
  2076  06B3  3A06               	xorlw	6	; case 45
  2077  06B4  1903               	skipnz
  2078  06B5  2E7F               	goto	l830
  2079  06B6  3A1D               	xorlw	29	; case 48
  2080  06B7  1903               	skipnz
  2081  06B8  2E89               	goto	l832
  2082  06B9  2E91               	goto	l1892
  2083  06BA                     l1898:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2086  06BA  085D               	movf	vfpfcnvrt@done,w
  2087  06BB  045E               	iorwf	vfpfcnvrt@done+1,w
  2088  06BC  1903               	btfsc	3,2
  2089  06BD  2EBF               	goto	u1471
  2090  06BE  2EC0               	goto	u1470
  2091  06BF                     u1471:
  2092  06BF  2E96               	goto	l1896
  2093  06C0                     u1470:
  2094  06C0                     l837:
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2097  06C0  1C6D               	btfss	_flags,0
  2098  06C1  2EC3               	goto	u1481
  2099  06C2  2EC4               	goto	u1480
  2100  06C3                     u1481:
  2101  06C3  2EC8               	goto	l1902
  2102  06C4                     u1480:
  2103  06C4                     l1900:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2106  06C4  30FD               	movlw	253
  2107  06C5  05ED               	andwf	_flags,f
  2108  06C6  30FF               	movlw	255
  2109  06C7  05EE               	andwf	_flags+1,f
  2110  06C8                     l1902:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2113  06C8  084E               	movf	vfpfcnvrt@fmt,w
  2114  06C9  0086               	movwf	6
  2115  06CA  0187               	clrf	7
  2116  06CB  3F40               	moviw [0]fsr1
  2117  06CC  00D0               	movwf	??_vfpfcnvrt
  2118  06CD  3F41               	moviw [1]fsr1
  2119  06CE  00D1               	movwf	??_vfpfcnvrt+1
  2120  06CF  0850               	movf	??_vfpfcnvrt,w
  2121  06D0  0084               	movwf	4
  2122  06D1  0851               	movf	??_vfpfcnvrt+1,w
  2123  06D2  0085               	movwf	5
  2124  06D3  0012               	moviw fsr0++
  2125  06D4  3A2A               	xorlw	42
  2126  06D5  1D03               	btfss	3,2
  2127  06D6  2ED8               	goto	u1491
  2128  06D7  2ED9               	goto	u1490
  2129  06D8                     u1491:
  2130  06D8  2EFB               	goto	l1914
  2131  06D9                     u1490:
  2132  06D9                     l1904:
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2135  06D9  084E               	movf	vfpfcnvrt@fmt,w
  2136  06DA  0086               	movwf	6
  2137  06DB  0187               	clrf	7
  2138  06DC  3001               	movlw	1
  2139  06DD  0781               	addwf	1,f
  2140  06DE  3141               	addfsr 1,1
  2141  06DF  1803               	skipnc
  2142  06E0  0A81               	incf	1,f
  2143  06E1                     l1906:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2146  06E1  084F               	movf	vfpfcnvrt@ap,w
  2147  06E2  0086               	movwf	6
  2148  06E3  0187               	clrf	7
  2149  06E4  0801               	movf	1,w
  2150  06E5  0084               	movwf	4
  2151  06E6  0185               	clrf	5
  2152  06E7  3002               	movlw	2
  2153  06E8  0781               	addwf	1,f
  2154  06E9  3F00               	moviw [0]fsr0
  2155  06EA  0021               	movlb	1	; select bank1
  2156  06EB  00A2               	movwf	_width^(0+128)
  2157  06EC  3F01               	moviw [1]fsr0
  2158  06ED  00A3               	movwf	(_width+1)^(0+128)
  2159  06EE                     l1908:
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2162  06EE  1FA3               	btfss	(_width+1)^(0+128),7
  2163  06EF  2EF1               	goto	u1501
  2164  06F0  2EF2               	goto	u1500
  2165  06F1                     u1501:
  2166  06F1  2F2F               	goto	l1922
  2167  06F2                     u1500:
  2168  06F2                     l1910:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2171  06F2  0020               	movlb	0	; select bank0
  2172  06F3  146D               	bsf	_flags,0
  2173  06F4                     l1912:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2176  06F4  0021               	movlb	1	; select bank1
  2177  06F5  09A2               	comf	_width^(0+128),f
  2178  06F6  09A3               	comf	(_width+1)^(0+128),f
  2179  06F7  0AA2               	incf	_width^(0+128),f
  2180  06F8  1903               	skipnz
  2181  06F9  0AA3               	incf	(_width+1)^(0+128),f
  2182  06FA  2F2F               	goto	l1922
  2183  06FB                     l1914:
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2186  06FB  084E               	movf	vfpfcnvrt@fmt,w
  2187  06FC  0086               	movwf	6
  2188  06FD  0187               	clrf	7
  2189  06FE  3F40               	moviw [0]fsr1
  2190  06FF  00F6               	movwf	atoi@s
  2191  0700  3F41               	moviw [1]fsr1
  2192  0701  00F7               	movwf	atoi@s+1
  2193  0702  3182  226C  3186   	fcall	_atoi
  2194  0705  0877               	movf	?_atoi+1,w
  2195  0706  0021               	movlb	1	; select bank1
  2196  0707  00A3               	movwf	(_width+1)^(0+128)
  2197  0708  0876               	movf	?_atoi,w
  2198  0709  00A2               	movwf	_width^(0+128)
  2199                           
  2200                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2201  070A  2F13               	goto	l1920
  2202  070B                     l1916:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2205  070B  084E               	movf	vfpfcnvrt@fmt,w
  2206  070C  0086               	movwf	6
  2207  070D  0187               	clrf	7
  2208  070E  3001               	movlw	1
  2209  070F  0781               	addwf	1,f
  2210  0710  3141               	addfsr 1,1
  2211  0711  1803               	skipnc
  2212  0712  0A81               	incf	1,f
  2213  0713                     l1920:
  2214  0713  0020               	movlb	0	; select bank0
  2215  0714  084E               	movf	vfpfcnvrt@fmt,w
  2216  0715  0086               	movwf	6
  2217  0716  0187               	clrf	7
  2218  0717  3F40               	moviw [0]fsr1
  2219  0718  00D0               	movwf	??_vfpfcnvrt
  2220  0719  3F41               	moviw [1]fsr1
  2221  071A  00D1               	movwf	??_vfpfcnvrt+1
  2222  071B  0850               	movf	??_vfpfcnvrt,w
  2223  071C  0084               	movwf	4
  2224  071D  0851               	movf	??_vfpfcnvrt+1,w
  2225  071E  0085               	movwf	5
  2226  071F  0800               	movf	0,w	;code access
  2227  0720  3ED0               	addlw	208
  2228  0721  00D2               	movwf	??_vfpfcnvrt+2
  2229  0722  30FF               	movlw	255
  2230  0723  1803               	skipnc
  2231  0724  3000               	movlw	0
  2232  0725  00D3               	movwf	??_vfpfcnvrt+3
  2233  0726  3000               	movlw	0
  2234  0727  0253               	subwf	??_vfpfcnvrt+3,w
  2235  0728  300A               	movlw	10
  2236  0729  1903               	skipnz
  2237  072A  0252               	subwf	??_vfpfcnvrt+2,w
  2238  072B  1C03               	skipc
  2239  072C  2F2E               	goto	u1511
  2240  072D  2F2F               	goto	u1510
  2241  072E                     u1511:
  2242  072E  2F0B               	goto	l1916
  2243  072F                     u1510:
  2244  072F                     l1922:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2247  072F  0020               	movlb	0	; select bank0
  2248  0730  084E               	movf	vfpfcnvrt@fmt,w
  2249  0731  0086               	movwf	6
  2250  0732  0187               	clrf	7
  2251  0733  3F40               	moviw [0]fsr1
  2252  0734  00D0               	movwf	??_vfpfcnvrt
  2253  0735  3F41               	moviw [1]fsr1
  2254  0736  00D1               	movwf	??_vfpfcnvrt+1
  2255  0737  0850               	movf	??_vfpfcnvrt,w
  2256  0738  0084               	movwf	4
  2257  0739  0851               	movf	??_vfpfcnvrt+1,w
  2258  073A  0085               	movwf	5
  2259  073B  0012               	moviw fsr0++
  2260  073C  3A64               	xorlw	100
  2261  073D  1903               	btfsc	3,2
  2262  073E  2F40               	goto	u1521
  2263  073F  2F41               	goto	u1520
  2264  0740                     u1521:
  2265  0740  2F52               	goto	l1926
  2266  0741                     u1520:
  2267  0741                     l1924:
  2268  0741  084E               	movf	vfpfcnvrt@fmt,w
  2269  0742  0086               	movwf	6
  2270  0743  0187               	clrf	7
  2271  0744  3F40               	moviw [0]fsr1
  2272  0745  00D0               	movwf	??_vfpfcnvrt
  2273  0746  3F41               	moviw [1]fsr1
  2274  0747  00D1               	movwf	??_vfpfcnvrt+1
  2275  0748  0850               	movf	??_vfpfcnvrt,w
  2276  0749  0084               	movwf	4
  2277  074A  0851               	movf	??_vfpfcnvrt+1,w
  2278  074B  0085               	movwf	5
  2279  074C  0012               	moviw fsr0++
  2280  074D  3A69               	xorlw	105
  2281  074E  1D03               	btfss	3,2
  2282  074F  2F51               	goto	u1531
  2283  0750  2F52               	goto	u1530
  2284  0751                     u1531:
  2285  0751  2F8D               	goto	l1934
  2286  0752                     u1530:
  2287  0752                     l1926:
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2290  0752  084E               	movf	vfpfcnvrt@fmt,w
  2291  0753  0086               	movwf	6
  2292  0754  0187               	clrf	7
  2293  0755  3001               	movlw	1
  2294  0756  0781               	addwf	1,f
  2295  0757  3141               	addfsr 1,1
  2296  0758  1803               	skipnc
  2297  0759  0A81               	incf	1,f
  2298  075A                     l1928:
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2301  075A  084F               	movf	vfpfcnvrt@ap,w
  2302  075B  0086               	movwf	6
  2303  075C  0187               	clrf	7
  2304  075D  0801               	movf	1,w
  2305  075E  0084               	movwf	4
  2306  075F  0185               	clrf	5
  2307  0760  3002               	movlw	2
  2308  0761  0781               	addwf	1,f
  2309  0762  3F00               	moviw [0]fsr0
  2310  0763  00D0               	movwf	??_vfpfcnvrt
  2311  0764  3F01               	moviw [1]fsr0
  2312  0765  00D1               	movwf	??_vfpfcnvrt+1
  2313  0766  0850               	movf	??_vfpfcnvrt,w
  2314  0767  00D5               	movwf	vfpfcnvrt@ll
  2315  0768  0851               	movf	??_vfpfcnvrt+1,w
  2316  0769  00D6               	movwf	vfpfcnvrt@ll+1
  2317  076A  0D89               	rlf	9,f
  2318  076B  3B89               	subwfb	9,f
  2319  076C  0989               	comf	9,f
  2320  076D  00D7               	movwf	vfpfcnvrt@ll+2
  2321  076E  00D8               	movwf	vfpfcnvrt@ll+3
  2322  076F  00D9               	movwf	vfpfcnvrt@ll+4
  2323  0770  00DA               	movwf	vfpfcnvrt@ll+5
  2324  0771  00DB               	movwf	vfpfcnvrt@ll+6
  2325  0772  00DC               	movwf	vfpfcnvrt@ll+7
  2326  0773                     l1930:
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2329  0773  0855               	movf	vfpfcnvrt@ll,w
  2330  0774  00B0               	movwf	dtoa@d
  2331  0775  0856               	movf	vfpfcnvrt@ll+1,w
  2332  0776  00B1               	movwf	dtoa@d+1
  2333  0777  0857               	movf	vfpfcnvrt@ll+2,w
  2334  0778  00B2               	movwf	dtoa@d+2
  2335  0779  0858               	movf	vfpfcnvrt@ll+3,w
  2336  077A  00B3               	movwf	dtoa@d+3
  2337  077B  0859               	movf	vfpfcnvrt@ll+4,w
  2338  077C  00B4               	movwf	dtoa@d+4
  2339  077D  085A               	movf	vfpfcnvrt@ll+5,w
  2340  077E  00B5               	movwf	dtoa@d+5
  2341  077F  085B               	movf	vfpfcnvrt@ll+6,w
  2342  0780  00B6               	movwf	dtoa@d+6
  2343  0781  085C               	movf	vfpfcnvrt@ll+7,w
  2344  0782  00B7               	movwf	dtoa@d+7
  2345  0783  085F               	movf	vfpfcnvrt@fp,w
  2346  0784  3184  24EB  3186   	fcall	_dtoa
  2347  0787  0020               	movlb	0	; select bank0
  2348  0788  0831               	movf	?_dtoa+1,w
  2349  0789  00CF               	movwf	?_vfpfcnvrt+1
  2350  078A  0830               	movf	?_dtoa,w
  2351  078B  00CE               	movwf	?_vfpfcnvrt
  2352  078C  2FE5               	goto	l850
  2353  078D                     l1934:
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2356  078D  084E               	movf	vfpfcnvrt@fmt,w
  2357  078E  0086               	movwf	6
  2358  078F  0187               	clrf	7
  2359  0790  3F40               	moviw [0]fsr1
  2360  0791  00D0               	movwf	??_vfpfcnvrt
  2361  0792  3F41               	moviw [1]fsr1
  2362  0793  00D1               	movwf	??_vfpfcnvrt+1
  2363  0794  0850               	movf	??_vfpfcnvrt,w
  2364  0795  0084               	movwf	4
  2365  0796  0851               	movf	??_vfpfcnvrt+1,w
  2366  0797  0085               	movwf	5
  2367  0798  0012               	moviw fsr0++
  2368  0799  3A25               	xorlw	37
  2369  079A  1D03               	btfss	3,2
  2370  079B  2F9D               	goto	u1541
  2371  079C  2F9E               	goto	u1540
  2372  079D                     u1541:
  2373  079D  2FB7               	goto	l1944
  2374  079E                     u1540:
  2375  079E                     l1936:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2378  079E  084E               	movf	vfpfcnvrt@fmt,w
  2379  079F  0086               	movwf	6
  2380  07A0  0187               	clrf	7
  2381  07A1  3001               	movlw	1
  2382  07A2  0781               	addwf	1,f
  2383  07A3  3141               	addfsr 1,1
  2384  07A4  1803               	skipnc
  2385  07A5  0A81               	incf	1,f
  2386  07A6                     l1938:
  2387                           
  2388                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2389  07A6  3025               	movlw	37
  2390  07A7  00F0               	movwf	fputc@c
  2391  07A8  3000               	movlw	0
  2392  07A9  00F1               	movwf	fputc@c+1
  2393  07AA  085F               	movf	vfpfcnvrt@fp,w
  2394  07AB  00D0               	movwf	??_vfpfcnvrt
  2395  07AC  0850               	movf	??_vfpfcnvrt,w
  2396  07AD  00F2               	movwf	fputc@fp
  2397  07AE  3181  2167  3186   	fcall	_fputc
  2398  07B1                     l1940:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2401  07B1  3001               	movlw	1
  2402  07B2  0020               	movlb	0	; select bank0
  2403  07B3  00CE               	movwf	?_vfpfcnvrt
  2404  07B4  3000               	movlw	0
  2405  07B5  00CF               	movwf	?_vfpfcnvrt+1
  2406  07B6  2FE5               	goto	l850
  2407  07B7                     l1944:
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2410  07B7  084E               	movf	vfpfcnvrt@fmt,w
  2411  07B8  0086               	movwf	6
  2412  07B9  0187               	clrf	7
  2413  07BA  3001               	movlw	1
  2414  07BB  0781               	addwf	1,f
  2415  07BC  3141               	addfsr 1,1
  2416  07BD  1803               	skipnc
  2417  07BE  0A81               	incf	1,f
  2418  07BF                     l1946:
  2419                           
  2420                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2421  07BF  01CE               	clrf	?_vfpfcnvrt
  2422  07C0  01CF               	clrf	?_vfpfcnvrt+1
  2423  07C1  2FE5               	goto	l850
  2424  07C2                     l1950:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2427  07C2  084E               	movf	vfpfcnvrt@fmt,w
  2428  07C3  0086               	movwf	6
  2429  07C4  0187               	clrf	7
  2430  07C5  3F40               	moviw [0]fsr1
  2431  07C6  00D0               	movwf	??_vfpfcnvrt
  2432  07C7  3F41               	moviw [1]fsr1
  2433  07C8  00D1               	movwf	??_vfpfcnvrt+1
  2434  07C9  0850               	movf	??_vfpfcnvrt,w
  2435  07CA  0084               	movwf	4
  2436  07CB  0851               	movf	??_vfpfcnvrt+1,w
  2437  07CC  0085               	movwf	5
  2438  07CD  0800               	movf	0,w	;code access
  2439  07CE  00D2               	movwf	??_vfpfcnvrt+2
  2440  07CF  01D3               	clrf	??_vfpfcnvrt+3
  2441  07D0  0852               	movf	??_vfpfcnvrt+2,w
  2442  07D1  00F0               	movwf	fputc@c
  2443  07D2  0853               	movf	??_vfpfcnvrt+3,w
  2444  07D3  00F1               	movwf	fputc@c+1
  2445  07D4  085F               	movf	vfpfcnvrt@fp,w
  2446  07D5  00D4               	movwf	??_vfpfcnvrt+4
  2447  07D6  0854               	movf	??_vfpfcnvrt+4,w
  2448  07D7  00F2               	movwf	fputc@fp
  2449  07D8  3181  2167  3186   	fcall	_fputc
  2450  07DB                     l1952:
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2453  07DB  0020               	movlb	0	; select bank0
  2454  07DC  084E               	movf	vfpfcnvrt@fmt,w
  2455  07DD  0086               	movwf	6
  2456  07DE  0187               	clrf	7
  2457  07DF  3001               	movlw	1
  2458  07E0  0781               	addwf	1,f
  2459  07E1  3141               	addfsr 1,1
  2460  07E2  1803               	skipnc
  2461  07E3  0A81               	incf	1,f
  2462  07E4  2FB1               	goto	l1940
  2463  07E5                     l850:
  2464  07E5  0008               	return
  2465  07E6                     __end_of_vfpfcnvrt:
  2466                           
  2467                           	psect	text4
  2468  04EB                     __ptext4:	
  2469 ;; *************** function _dtoa *****************
  2470 ;; Defined at:
  2471 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  fp              1    wreg     PTR struct _IO_FILE
  2474 ;;		 -> sprintf@f(10), 
  2475 ;;  d               8   16[BANK0 ] long long 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  2478 ;;		 -> sprintf@f(10), 
  2479 ;;  n               8   36[BANK0 ] long long 
  2480 ;;  i               2   44[BANK0 ] int 
  2481 ;;  s               2   34[BANK0 ] int 
  2482 ;;  w               2   32[BANK0 ] int 
  2483 ;;  p               2   30[BANK0 ] int 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  2   16[BANK0 ] int 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2493 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;Total ram usage:       30 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 4
  2500 ;; This function calls:
  2501 ;;		___aodiv
  2502 ;;		___aomod
  2503 ;;		_abs
  2504 ;;		_pad
  2505 ;; This function is called by:
  2506 ;;		_vfpfcnvrt
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510  04EB                     _dtoa:	
  2511                           ;psect for function _dtoa
  2512                           
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2516                           ;dtoa@fp stored from wreg
  2517  04EB  0020               	movlb	0	; select bank0
  2518  04EC  00BD               	movwf	dtoa@fp
  2519  04ED                     l1778:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2522  04ED  0830               	movf	dtoa@d,w
  2523  04EE  00C4               	movwf	dtoa@n
  2524  04EF  0831               	movf	dtoa@d+1,w
  2525  04F0  00C5               	movwf	dtoa@n+1
  2526  04F1  0832               	movf	dtoa@d+2,w
  2527  04F2  00C6               	movwf	dtoa@n+2
  2528  04F3  0833               	movf	dtoa@d+3,w
  2529  04F4  00C7               	movwf	dtoa@n+3
  2530  04F5  0834               	movf	dtoa@d+4,w
  2531  04F6  00C8               	movwf	dtoa@n+4
  2532  04F7  0835               	movf	dtoa@d+5,w
  2533  04F8  00C9               	movwf	dtoa@n+5
  2534  04F9  0836               	movf	dtoa@d+6,w
  2535  04FA  00CA               	movwf	dtoa@n+6
  2536  04FB  0837               	movf	dtoa@d+7,w
  2537  04FC  00CB               	movwf	dtoa@n+7
  2538  04FD                     l1780:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2541  04FD  3044               	movlw	low dtoa@n
  2542  04FE  0086               	movwf	6
  2543  04FF  3000               	movlw	high dtoa@n
  2544  0500  0087               	movwf	7
  2545  0501  3F47               	moviw [7]fsr1
  2546  0502  00B8               	movwf	??_dtoa
  2547  0503  1BB8               	btfsc	??_dtoa,7
  2548  0504  2D06               	goto	u1261
  2549  0505  2D08               	goto	u1260
  2550  0506                     u1261:
  2551  0506  3001               	movlw	1
  2552  0507  2D09               	goto	u1270
  2553  0508                     u1260:
  2554  0508  3000               	movlw	0
  2555  0509                     u1270:
  2556  0509  0020               	movlb	0	; select bank0
  2557  050A  00B9               	movwf	??_dtoa+1
  2558  050B  01BA               	clrf	??_dtoa+2
  2559  050C  0839               	movf	??_dtoa+1,w
  2560  050D  00C2               	movwf	dtoa@s
  2561  050E  083A               	movf	??_dtoa+2,w
  2562  050F  00C3               	movwf	dtoa@s+1
  2563  0510                     l1782:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2566  0510  0842               	movf	dtoa@s,w
  2567  0511  0443               	iorwf	dtoa@s+1,w
  2568  0512  1903               	btfsc	3,2
  2569  0513  2D15               	goto	u1281
  2570  0514  2D16               	goto	u1280
  2571  0515                     u1281:
  2572  0515  2D34               	goto	l800
  2573  0516                     u1280:
  2574  0516                     l1784:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2577  0516  09C4               	comf	dtoa@n,f
  2578  0517  09C5               	comf	dtoa@n+1,f
  2579  0518  09C6               	comf	dtoa@n+2,f
  2580  0519  09C7               	comf	dtoa@n+3,f
  2581  051A  09C8               	comf	dtoa@n+4,f
  2582  051B  09C9               	comf	dtoa@n+5,f
  2583  051C  09CA               	comf	dtoa@n+6,f
  2584  051D  09CB               	comf	dtoa@n+7,f
  2585  051E  0AC4               	incf	dtoa@n,f
  2586  051F  1D03               	skipz
  2587  0520  2D34               	goto	u129lld
  2588  0521  0AC5               	incf	dtoa@n+1,f
  2589  0522  1D03               	skipz
  2590  0523  2D34               	goto	u129lld
  2591  0524  0AC6               	incf	dtoa@n+2,f
  2592  0525  1D03               	skipz
  2593  0526  2D34               	goto	u129lld
  2594  0527  0AC7               	incf	dtoa@n+3,f
  2595  0528  1D03               	skipz
  2596  0529  2D34               	goto	u129lld
  2597  052A  0AC8               	incf	dtoa@n+4,f
  2598  052B  1D03               	skipz
  2599  052C  2D34               	goto	u129lld
  2600  052D  0AC9               	incf	dtoa@n+5,f
  2601  052E  1D03               	skipz
  2602  052F  2D34               	goto	u129lld
  2603  0530  0ACA               	incf	dtoa@n+6,f
  2604  0531  1D03               	skipz
  2605  0532  2D34               	goto	u129lld
  2606  0533  0ACB               	incf	dtoa@n+7,f
  2607  0534                     u129lld:
  2608  0534                     l800:	
  2609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 297:     }
  2610                           
  2611                           
  2612                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2613  0534  0021               	movlb	1	; select bank1
  2614  0535  1BA5               	btfsc	(_prec+1)^(0+128),7
  2615  0536  2D38               	goto	u1301
  2616  0537  2D39               	goto	u1300
  2617  0538                     u1301:
  2618  0538  2D3E               	goto	l801
  2619  0539                     u1300:
  2620  0539                     l1786:
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2623  0539  30FD               	movlw	253
  2624  053A  0020               	movlb	0	; select bank0
  2625  053B  05ED               	andwf	_flags,f
  2626  053C  30FF               	movlw	255
  2627  053D  05EE               	andwf	_flags+1,f
  2628  053E                     l801:	
  2629                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 302:     }
  2630                           
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2633  053E  0021               	movlb	1	; select bank1
  2634  053F  0825               	movf	(_prec+1)^(0+128),w
  2635  0540  3A80               	xorlw	128
  2636  0541  0020               	movlb	0	; select bank0
  2637  0542  00B8               	movwf	??_dtoa
  2638  0543  3080               	movlw	128
  2639  0544  0238               	subwf	??_dtoa,w
  2640  0545  1D03               	skipz
  2641  0546  2D4A               	goto	u1315
  2642  0547  3001               	movlw	1
  2643  0548  0021               	movlb	1	; select bank1
  2644  0549  0224               	subwf	_prec^(0+128),w
  2645  054A                     u1315:
  2646  054A  1803               	skipnc
  2647  054B  2D4D               	goto	u1311
  2648  054C  2D4E               	goto	u1310
  2649  054D                     u1311:
  2650  054D  2D54               	goto	l1790
  2651  054E                     u1310:
  2652  054E                     l1788:
  2653  054E  3001               	movlw	1
  2654  054F  0020               	movlb	0	; select bank0
  2655  0550  00BE               	movwf	dtoa@p
  2656  0551  3000               	movlw	0
  2657  0552  00BF               	movwf	dtoa@p+1
  2658  0553  2D5C               	goto	l805
  2659  0554                     l1790:
  2660  0554  0021               	movlb	1	; select bank1
  2661  0555  0825               	movf	(_prec+1)^(0+128),w
  2662  0556  0020               	movlb	0	; select bank0
  2663  0557  00BF               	movwf	dtoa@p+1
  2664  0558  0021               	movlb	1	; select bank1
  2665  0559  0824               	movf	_prec^(0+128),w
  2666  055A  0020               	movlb	0	; select bank0
  2667  055B  00BE               	movwf	dtoa@p
  2668  055C                     l805:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2671  055C  0021               	movlb	1	; select bank1
  2672  055D  0823               	movf	(_width+1)^(0+128),w
  2673  055E  0020               	movlb	0	; select bank0
  2674  055F  00C1               	movwf	dtoa@w+1
  2675  0560  0021               	movlb	1	; select bank1
  2676  0561  0822               	movf	_width^(0+128),w
  2677  0562  0020               	movlb	0	; select bank0
  2678  0563  00C0               	movwf	dtoa@w
  2679  0564                     l1792:
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2682  0564  0842               	movf	dtoa@s,w
  2683  0565  0443               	iorwf	dtoa@s+1,w
  2684  0566  1D03               	btfss	3,2
  2685  0567  2D69               	goto	u1321
  2686  0568  2D6A               	goto	u1320
  2687  0569                     u1321:
  2688  0569  2D6E               	goto	l1796
  2689  056A                     u1320:
  2690  056A                     l1794:
  2691  056A  1D6D               	btfss	_flags,2
  2692  056B  2D6D               	goto	u1331
  2693  056C  2D6E               	goto	u1330
  2694  056D                     u1331:
  2695  056D  2D72               	goto	l806
  2696  056E                     u1330:
  2697  056E                     l1796:
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  2700  056E  30FF               	movlw	255
  2701  056F  07C0               	addwf	dtoa@w,f
  2702  0570  30FF               	movlw	255
  2703  0571  3DC1               	addwfc	dtoa@w+1,f
  2704  0572                     l806:	
  2705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 307:     }
  2706                           
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2709  0572  301F               	movlw	31
  2710  0573  00CC               	movwf	dtoa@i
  2711  0574  3000               	movlw	0
  2712  0575  00CD               	movwf	dtoa@i+1
  2713  0576                     l1798:
  2714                           
  2715                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2716  0576  0021               	movlb	1	; select bank1
  2717  0577  01C7               	clrf	(_dbuf^(0+128)+31)
  2718                           
  2719                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2720  0578  2DE1               	goto	l809
  2721  0579                     l1800:
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  2724  0579  30FF               	movlw	255
  2725  057A  0020               	movlb	0	; select bank0
  2726  057B  07CC               	addwf	dtoa@i,f
  2727  057C  30FF               	movlw	255
  2728  057D  3DCD               	addwfc	dtoa@i+1,f
  2729  057E                     l1802:
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2732  057E  300A               	movlw	10
  2733  057F  00A0               	movwf	___aomod@divisor
  2734  0580  01A1               	clrf	___aomod@divisor+1
  2735  0581  01A2               	clrf	___aomod@divisor+2
  2736  0582  01A3               	clrf	___aomod@divisor+3
  2737  0583  01A4               	clrf	___aomod@divisor+4
  2738  0584  01A5               	clrf	___aomod@divisor+5
  2739  0585  01A6               	clrf	___aomod@divisor+6
  2740  0586  01A7               	clrf	___aomod@divisor+7
  2741  0587  0844               	movf	dtoa@n,w
  2742  0588  00A8               	movwf	___aomod@dividend
  2743  0589  0845               	movf	dtoa@n+1,w
  2744  058A  00A9               	movwf	___aomod@dividend+1
  2745  058B  0846               	movf	dtoa@n+2,w
  2746  058C  00AA               	movwf	___aomod@dividend+2
  2747  058D  0847               	movf	dtoa@n+3,w
  2748  058E  00AB               	movwf	___aomod@dividend+3
  2749  058F  0848               	movf	dtoa@n+4,w
  2750  0590  00AC               	movwf	___aomod@dividend+4
  2751  0591  0849               	movf	dtoa@n+5,w
  2752  0592  00AD               	movwf	___aomod@dividend+5
  2753  0593  084A               	movf	dtoa@n+6,w
  2754  0594  00AE               	movwf	___aomod@dividend+6
  2755  0595  084B               	movf	dtoa@n+7,w
  2756  0596  00AF               	movwf	___aomod@dividend+7
  2757  0597  3183  2300  3184   	fcall	___aomod
  2758  059A  0020               	movlb	0	; select bank0
  2759  059B  0821               	movf	?___aomod+1,w
  2760  059C  00F4               	movwf	abs@a+1
  2761  059D  0820               	movf	?___aomod,w
  2762  059E  00F3               	movwf	abs@a
  2763  059F  318F  2787  3184   	fcall	_abs
  2764  05A2  0873               	movf	?_abs,w
  2765  05A3  3E30               	addlw	48
  2766  05A4  0020               	movlb	0	; select bank0
  2767  05A5  00B8               	movwf	??_dtoa
  2768  05A6  084C               	movf	dtoa@i,w
  2769  05A7  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2770  05A8  0086               	movwf	6
  2771  05A9  0187               	clrf	7
  2772  05AA  0838               	movf	??_dtoa,w
  2773  05AB  0081               	movwf	1
  2774  05AC                     l1804:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  2777  05AC  30FF               	movlw	255
  2778  05AD  07BE               	addwf	dtoa@p,f
  2779  05AE  30FF               	movlw	255
  2780  05AF  3DBF               	addwfc	dtoa@p+1,f
  2781  05B0                     l1806:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  2784  05B0  30FF               	movlw	255
  2785  05B1  07C0               	addwf	dtoa@w,f
  2786  05B2  30FF               	movlw	255
  2787  05B3  3DC1               	addwfc	dtoa@w+1,f
  2788  05B4                     l1808:
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2791  05B4  300A               	movlw	10
  2792  05B5  00A0               	movwf	___aodiv@divisor
  2793  05B6  01A1               	clrf	___aodiv@divisor+1
  2794  05B7  01A2               	clrf	___aodiv@divisor+2
  2795  05B8  01A3               	clrf	___aodiv@divisor+3
  2796  05B9  01A4               	clrf	___aodiv@divisor+4
  2797  05BA  01A5               	clrf	___aodiv@divisor+5
  2798  05BB  01A6               	clrf	___aodiv@divisor+6
  2799  05BC  01A7               	clrf	___aodiv@divisor+7
  2800  05BD  0844               	movf	dtoa@n,w
  2801  05BE  00A8               	movwf	___aodiv@dividend
  2802  05BF  0845               	movf	dtoa@n+1,w
  2803  05C0  00A9               	movwf	___aodiv@dividend+1
  2804  05C1  0846               	movf	dtoa@n+2,w
  2805  05C2  00AA               	movwf	___aodiv@dividend+2
  2806  05C3  0847               	movf	dtoa@n+3,w
  2807  05C4  00AB               	movwf	___aodiv@dividend+3
  2808  05C5  0848               	movf	dtoa@n+4,w
  2809  05C6  00AC               	movwf	___aodiv@dividend+4
  2810  05C7  0849               	movf	dtoa@n+5,w
  2811  05C8  00AD               	movwf	___aodiv@dividend+5
  2812  05C9  084A               	movf	dtoa@n+6,w
  2813  05CA  00AE               	movwf	___aodiv@dividend+6
  2814  05CB  084B               	movf	dtoa@n+7,w
  2815  05CC  00AF               	movwf	___aodiv@dividend+7
  2816  05CD  3183  23EA  3184   	fcall	___aodiv
  2817  05D0  0020               	movlb	0	; select bank0
  2818  05D1  0820               	movf	?___aodiv,w
  2819  05D2  00C4               	movwf	dtoa@n
  2820  05D3  0821               	movf	?___aodiv+1,w
  2821  05D4  00C5               	movwf	dtoa@n+1
  2822  05D5  0822               	movf	?___aodiv+2,w
  2823  05D6  00C6               	movwf	dtoa@n+2
  2824  05D7  0823               	movf	?___aodiv+3,w
  2825  05D8  00C7               	movwf	dtoa@n+3
  2826  05D9  0824               	movf	?___aodiv+4,w
  2827  05DA  00C8               	movwf	dtoa@n+4
  2828  05DB  0825               	movf	?___aodiv+5,w
  2829  05DC  00C9               	movwf	dtoa@n+5
  2830  05DD  0826               	movf	?___aodiv+6,w
  2831  05DE  00CA               	movwf	dtoa@n+6
  2832  05DF  0827               	movf	?___aodiv+7,w
  2833  05E0  00CB               	movwf	dtoa@n+7
  2834  05E1                     l809:	
  2835                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 318:     }
  2836                           
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2839  05E1  0020               	movlb	0	; select bank0
  2840  05E2  084D               	movf	dtoa@i+1,w
  2841  05E3  3A80               	xorlw	128
  2842  05E4  00B8               	movwf	??_dtoa
  2843  05E5  3080               	movlw	128
  2844  05E6  0238               	subwf	??_dtoa,w
  2845  05E7  1D03               	skipz
  2846  05E8  2DEB               	goto	u1345
  2847  05E9  3001               	movlw	1
  2848  05EA  024C               	subwf	dtoa@i,w
  2849  05EB                     u1345:
  2850  05EB  1C03               	skipc
  2851  05EC  2DEE               	goto	u1341
  2852  05ED  2DEF               	goto	u1340
  2853  05EE                     u1341:
  2854  05EE  2E1C               	goto	l1818
  2855  05EF                     u1340:
  2856  05EF                     l1810:
  2857  05EF  0020               	movlb	0	; select bank0
  2858  05F0  0844               	movf	dtoa@n,w
  2859  05F1  0445               	iorwf	dtoa@n+1,w
  2860  05F2  0446               	iorwf	dtoa@n+2,w
  2861  05F3  0447               	iorwf	dtoa@n+3,w
  2862  05F4  0448               	iorwf	dtoa@n+4,w
  2863  05F5  0449               	iorwf	dtoa@n+5,w
  2864  05F6  044A               	iorwf	dtoa@n+6,w
  2865  05F7  044B               	iorwf	dtoa@n+7,w
  2866  05F8  1D03               	skipz
  2867  05F9  2DFB               	goto	u1351
  2868  05FA  2DFC               	goto	u1350
  2869  05FB                     u1351:
  2870  05FB  2D79               	goto	l1800
  2871  05FC                     u1350:
  2872  05FC                     l1812:
  2873  05FC  083F               	movf	dtoa@p+1,w
  2874  05FD  3A80               	xorlw	128
  2875  05FE  00B8               	movwf	??_dtoa
  2876  05FF  3080               	movlw	128
  2877  0600  0238               	subwf	??_dtoa,w
  2878  0601  1D03               	skipz
  2879  0602  2E05               	goto	u1365
  2880  0603  3001               	movlw	1
  2881  0604  023E               	subwf	dtoa@p,w
  2882  0605                     u1365:
  2883  0605  1803               	skipnc
  2884  0606  2E08               	goto	u1361
  2885  0607  2E09               	goto	u1360
  2886  0608                     u1361:
  2887  0608  2D79               	goto	l1800
  2888  0609                     u1360:
  2889  0609                     l1814:
  2890  0609  0020               	movlb	0	; select bank0
  2891  060A  0841               	movf	dtoa@w+1,w
  2892  060B  3A80               	xorlw	128
  2893  060C  00B8               	movwf	??_dtoa
  2894  060D  3080               	movlw	128
  2895  060E  0238               	subwf	??_dtoa,w
  2896  060F  1D03               	skipz
  2897  0610  2E13               	goto	u1375
  2898  0611  3001               	movlw	1
  2899  0612  0240               	subwf	dtoa@w,w
  2900  0613                     u1375:
  2901  0613  1C03               	skipc
  2902  0614  2E16               	goto	u1371
  2903  0615  2E17               	goto	u1370
  2904  0616                     u1371:
  2905  0616  2E1C               	goto	l1818
  2906  0617                     u1370:
  2907  0617                     l1816:
  2908  0617  0020               	movlb	0	; select bank0
  2909  0618  18ED               	btfsc	_flags,1
  2910  0619  2E1B               	goto	u1381
  2911  061A  2E1C               	goto	u1380
  2912  061B                     u1381:
  2913  061B  2D79               	goto	l1800
  2914  061C                     u1380:
  2915  061C                     l1818:
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2918  061C  0020               	movlb	0	; select bank0
  2919  061D  0842               	movf	dtoa@s,w
  2920  061E  0443               	iorwf	dtoa@s+1,w
  2921  061F  1D03               	btfss	3,2
  2922  0620  2E22               	goto	u1391
  2923  0621  2E23               	goto	u1390
  2924  0622                     u1391:
  2925  0622  2E27               	goto	l1822
  2926  0623                     u1390:
  2927  0623                     l1820:
  2928  0623  1D6D               	btfss	_flags,2
  2929  0624  2E26               	goto	u1401
  2930  0625  2E27               	goto	u1400
  2931  0626                     u1401:
  2932  0626  2E42               	goto	l1832
  2933  0627                     u1400:
  2934  0627                     l1822:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  2937  0627  30FF               	movlw	255
  2938  0628  07CC               	addwf	dtoa@i,f
  2939  0629  30FF               	movlw	255
  2940  062A  3DCD               	addwfc	dtoa@i+1,f
  2941  062B                     l1824:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2944  062B  0842               	movf	dtoa@s,w
  2945  062C  0443               	iorwf	dtoa@s+1,w
  2946  062D  1D03               	btfss	3,2
  2947  062E  2E30               	goto	u1411
  2948  062F  2E31               	goto	u1410
  2949  0630                     u1411:
  2950  0630  2E36               	goto	l1828
  2951  0631                     u1410:
  2952  0631                     l1826:
  2953  0631  302B               	movlw	43
  2954  0632  00BB               	movwf	_dtoa$824
  2955  0633  3000               	movlw	0
  2956  0634  00BC               	movwf	_dtoa$824+1
  2957  0635  2E3A               	goto	l1830
  2958  0636                     l1828:
  2959  0636  302D               	movlw	45
  2960  0637  00BB               	movwf	_dtoa$824
  2961  0638  3000               	movlw	0
  2962  0639  00BC               	movwf	_dtoa$824+1
  2963  063A                     l1830:
  2964  063A  083B               	movf	_dtoa$824,w
  2965  063B  00B8               	movwf	??_dtoa
  2966  063C  084C               	movf	dtoa@i,w
  2967  063D  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2968  063E  0086               	movwf	6
  2969  063F  0187               	clrf	7
  2970  0640  0838               	movf	??_dtoa,w
  2971  0641  0081               	movwf	1
  2972  0642                     l1832:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2975  0642  084C               	movf	dtoa@i,w
  2976  0643  3EA8               	addlw	(low (_dbuf| 0))& (0+255)
  2977  0644  00B8               	movwf	??_dtoa
  2978  0645  0838               	movf	??_dtoa,w
  2979  0646  00A4               	movwf	pad@buf
  2980  0647  0841               	movf	dtoa@w+1,w
  2981  0648  00A6               	movwf	pad@p+1
  2982  0649  0840               	movf	dtoa@w,w
  2983  064A  00A5               	movwf	pad@p
  2984  064B  083D               	movf	dtoa@fp,w
  2985  064C  3181  21B9  3184   	fcall	_pad
  2986  064F  0020               	movlb	0	; select bank0
  2987  0650  0825               	movf	?_pad+1,w
  2988  0651  00B1               	movwf	?_dtoa+1
  2989  0652  0824               	movf	?_pad,w
  2990  0653  00B0               	movwf	?_dtoa
  2991  0654                     l823:
  2992  0654  0008               	return
  2993  0655                     __end_of_dtoa:
  2994                           
  2995                           	psect	text5
  2996  01B9                     __ptext5:	
  2997 ;; *************** function _pad *****************
  2998 ;; Defined at:
  2999 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  fp              1    wreg     PTR struct _IO_FILE
  3002 ;;		 -> sprintf@f(10), 
  3003 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  3004 ;;		 -> dbuf(32), 
  3005 ;;  p               2    5[BANK0 ] int 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  3008 ;;		 -> sprintf@f(10), 
  3009 ;;  w               2    9[BANK0 ] int 
  3010 ;;  i               2    7[BANK0 ] int 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  2    4[BANK0 ] int 
  3013 ;; Registers used:
  3014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3020 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3021 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3023 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3024 ;;Total ram usage:        9 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 3
  3027 ;; This function calls:
  3028 ;;		_fputc
  3029 ;;		_fputs
  3030 ;;		_strlen
  3031 ;; This function is called by:
  3032 ;;		_dtoa
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036  01B9                     _pad:	
  3037                           ;psect for function _pad
  3038                           
  3039                           
  3040                           ;incstack = 0
  3041                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3042                           ;pad@fp stored from wreg
  3043  01B9  0020               	movlb	0	; select bank0
  3044  01BA  00AB               	movwf	pad@fp
  3045  01BB                     l1722:
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3048  01BB  1C6D               	btfss	_flags,0
  3049  01BC  29BE               	goto	u1161
  3050  01BD  29BF               	goto	u1160
  3051  01BE                     u1161:
  3052  01BE  29C7               	goto	l1726
  3053  01BF                     u1160:
  3054  01BF                     l1724:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3057  01BF  082B               	movf	pad@fp,w
  3058  01C0  00FC               	movwf	??_pad
  3059  01C1  087C               	movf	??_pad,w
  3060  01C2  00F8               	movwf	fputs@fp
  3061  01C3  0824               	movf	pad@buf,w
  3062  01C4  3180  2033  3181   	fcall	_fputs
  3063  01C7                     l1726:
  3064                           
  3065                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3066  01C7  0020               	movlb	0	; select bank0
  3067  01C8  1BA6               	btfsc	pad@p+1,7
  3068  01C9  29CB               	goto	u1171
  3069  01CA  29CC               	goto	u1170
  3070  01CB                     u1171:
  3071  01CB  29D1               	goto	l1730
  3072  01CC                     u1170:
  3073  01CC                     l1728:
  3074  01CC  0826               	movf	pad@p+1,w
  3075  01CD  00AA               	movwf	pad@w+1
  3076  01CE  0825               	movf	pad@p,w
  3077  01CF  00A9               	movwf	pad@w
  3078  01D0  29D3               	goto	l792
  3079  01D1                     l1730:
  3080  01D1  01A9               	clrf	pad@w
  3081  01D2  01AA               	clrf	pad@w+1
  3082  01D3                     l792:
  3083                           
  3084                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3085  01D3  01A7               	clrf	pad@i
  3086  01D4  01A8               	clrf	pad@i+1
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3089  01D5  29E7               	goto	l1736
  3090  01D6                     l1732:
  3091                           
  3092                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3093  01D6  3020               	movlw	32
  3094  01D7  00F0               	movwf	fputc@c
  3095  01D8  3000               	movlw	0
  3096  01D9  00F1               	movwf	fputc@c+1
  3097  01DA  0020               	movlb	0	; select bank0
  3098  01DB  082B               	movf	pad@fp,w
  3099  01DC  00FC               	movwf	??_pad
  3100  01DD  087C               	movf	??_pad,w
  3101  01DE  00F2               	movwf	fputc@fp
  3102  01DF  3181  2167  3181   	fcall	_fputc
  3103  01E2                     l1734:
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3106  01E2  3001               	movlw	1
  3107  01E3  0020               	movlb	0	; select bank0
  3108  01E4  07A7               	addwf	pad@i,f
  3109  01E5  3000               	movlw	0
  3110  01E6  3DA8               	addwfc	pad@i+1,f
  3111  01E7                     l1736:
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3114  01E7  0828               	movf	pad@i+1,w
  3115  01E8  3A80               	xorlw	128
  3116  01E9  00FC               	movwf	??_pad
  3117  01EA  082A               	movf	pad@w+1,w
  3118  01EB  3A80               	xorlw	128
  3119  01EC  027C               	subwf	??_pad,w
  3120  01ED  1D03               	skipz
  3121  01EE  29F1               	goto	u1185
  3122  01EF  0829               	movf	pad@w,w
  3123  01F0  0227               	subwf	pad@i,w
  3124  01F1                     u1185:
  3125  01F1  1C03               	skipc
  3126  01F2  29F4               	goto	u1181
  3127  01F3  29F5               	goto	u1180
  3128  01F4                     u1181:
  3129  01F4  29D6               	goto	l1732
  3130  01F5                     u1180:
  3131  01F5                     l795:
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3134  01F5  0020               	movlb	0	; select bank0
  3135  01F6  186D               	btfsc	_flags,0
  3136  01F7  29F9               	goto	u1191
  3137  01F8  29FA               	goto	u1190
  3138  01F9                     u1191:
  3139  01F9  2A02               	goto	l1740
  3140  01FA                     u1190:
  3141  01FA                     l1738:
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3144  01FA  082B               	movf	pad@fp,w
  3145  01FB  00FC               	movwf	??_pad
  3146  01FC  087C               	movf	??_pad,w
  3147  01FD  00F8               	movwf	fputs@fp
  3148  01FE  0824               	movf	pad@buf,w
  3149  01FF  3180  2033  3181   	fcall	_fputs
  3150  0202                     l1740:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3153  0202  0020               	movlb	0	; select bank0
  3154  0203  0824               	movf	pad@buf,w
  3155  0204  318F  276E  3181   	fcall	_strlen
  3156  0207  0020               	movlb	0	; select bank0
  3157  0208  0829               	movf	pad@w,w
  3158  0209  0770               	addwf	?_strlen,w
  3159  020A  00A4               	movwf	?_pad
  3160  020B  082A               	movf	pad@w+1,w
  3161  020C  3D71               	addwfc	?_strlen+1,w
  3162  020D  00A5               	movwf	?_pad+1
  3163  020E                     l797:
  3164  020E  0008               	return
  3165  020F                     __end_of_pad:
  3166                           
  3167                           	psect	text6
  3168  0F6E                     __ptext6:	
  3169 ;; *************** function _strlen *****************
  3170 ;; Defined at:
  3171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  s               1    wreg     PTR const unsigned char 
  3174 ;;		 -> dbuf(32), 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  s               1    4[COMMON] PTR const unsigned char 
  3177 ;;		 -> dbuf(32), 
  3178 ;;  a               1    3[COMMON] PTR const unsigned char 
  3179 ;;		 -> dbuf(32), 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  2    0[COMMON] unsigned int 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3192 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3193 ;;Total ram usage:        5 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_pad
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202  0F6E                     _strlen:	
  3203                           ;psect for function _strlen
  3204                           
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3208                           ;strlen@s stored from wreg
  3209  0F6E  00F4               	movwf	strlen@s
  3210  0F6F                     l1614:
  3211  0F6F  0874               	movf	strlen@s,w
  3212  0F70  00F2               	movwf	??_strlen
  3213  0F71  0872               	movf	??_strlen,w
  3214  0F72  00F3               	movwf	strlen@a
  3215  0F73  2F78               	goto	l1618
  3216  0F74                     l1616:
  3217  0F74  3001               	movlw	1
  3218  0F75  00F2               	movwf	??_strlen
  3219  0F76  0872               	movf	??_strlen,w
  3220  0F77  07F4               	addwf	strlen@s,f
  3221  0F78                     l1618:
  3222  0F78  0874               	movf	strlen@s,w
  3223  0F79  0086               	movwf	6
  3224  0F7A  0187               	clrf	7
  3225  0F7B  0801               	movf	1,w
  3226  0F7C  1D03               	btfss	3,2
  3227  0F7D  2F7F               	goto	u861
  3228  0F7E  2F80               	goto	u860
  3229  0F7F                     u861:
  3230  0F7F  2F74               	goto	l1616
  3231  0F80                     u860:
  3232  0F80                     l1620:
  3233  0F80  0873               	movf	strlen@a,w
  3234  0F81  0274               	subwf	strlen@s,w
  3235  0F82  00F0               	movwf	?_strlen
  3236  0F83  01F1               	clrf	?_strlen+1
  3237  0F84  1BF0               	btfsc	?_strlen,7
  3238  0F85  03F1               	decf	?_strlen+1,f
  3239  0F86                     l932:
  3240  0F86  0008               	return
  3241  0F87                     __end_of_strlen:
  3242                           
  3243                           	psect	text7
  3244  0033                     __ptext7:	
  3245 ;; *************** function _fputs *****************
  3246 ;; Defined at:
  3247 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  s               1    wreg     PTR const unsigned char 
  3250 ;;		 -> dbuf(32), 
  3251 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  3252 ;;		 -> sprintf@f(10), 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  3255 ;;		 -> dbuf(32), 
  3256 ;;  i               2    1[BANK0 ] int 
  3257 ;;  c               1    0[BANK0 ] unsigned char 
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  2    8[COMMON] int 
  3260 ;; Registers used:
  3261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3267 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;Total ram usage:        8 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 2
  3274 ;; This function calls:
  3275 ;;		_fputc
  3276 ;; This function is called by:
  3277 ;;		_pad
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281  0033                     _fputs:	
  3282                           ;psect for function _fputs
  3283                           
  3284                           
  3285                           ;incstack = 0
  3286                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3287                           ;fputs@s stored from wreg
  3288  0033  0020               	movlb	0	; select bank0
  3289  0034  00A3               	movwf	fputs@s
  3290  0035                     l1606:
  3291  0035  01A1               	clrf	fputs@i
  3292  0036  01A2               	clrf	fputs@i+1
  3293  0037  284B               	goto	l1612
  3294  0038                     l1608:
  3295  0038  0820               	movf	fputs@c,w
  3296  0039  00F9               	movwf	??_fputs
  3297  003A  01FA               	clrf	??_fputs+1
  3298  003B  0879               	movf	??_fputs,w
  3299  003C  00F0               	movwf	fputc@c
  3300  003D  087A               	movf	??_fputs+1,w
  3301  003E  00F1               	movwf	fputc@c+1
  3302  003F  0878               	movf	fputs@fp,w
  3303  0040  00FB               	movwf	??_fputs+2
  3304  0041  087B               	movf	??_fputs+2,w
  3305  0042  00F2               	movwf	fputc@fp
  3306  0043  3181  2167  3180   	fcall	_fputc
  3307  0046                     l1610:
  3308  0046  3001               	movlw	1
  3309  0047  0020               	movlb	0	; select bank0
  3310  0048  07A1               	addwf	fputs@i,f
  3311  0049  3000               	movlw	0
  3312  004A  3DA2               	addwfc	fputs@i+1,f
  3313  004B                     l1612:
  3314  004B  0821               	movf	fputs@i,w
  3315  004C  0723               	addwf	fputs@s,w
  3316  004D  00F9               	movwf	??_fputs
  3317  004E  0879               	movf	??_fputs,w
  3318  004F  0086               	movwf	6
  3319  0050  0187               	clrf	7
  3320  0051  0801               	movf	1,w
  3321  0052  00FA               	movwf	??_fputs+1
  3322  0053  087A               	movf	??_fputs+1,w
  3323  0054  00A0               	movwf	fputs@c
  3324  0055  0820               	movf	fputs@c,w
  3325  0056  1D03               	btfss	3,2
  3326  0057  2859               	goto	u851
  3327  0058  285A               	goto	u850
  3328  0059                     u851:
  3329  0059  2838               	goto	l1608
  3330  005A                     u850:
  3331  005A                     l923:
  3332  005A  0008               	return
  3333  005B                     __end_of_fputs:
  3334                           
  3335                           	psect	text8
  3336  0167                     __ptext8:	
  3337 ;; *************** function _fputc *****************
  3338 ;; Defined at:
  3339 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  c               2    0[COMMON] int 
  3342 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  3343 ;;		 -> sprintf@f(10), 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  2    0[COMMON] int 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3355 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3357 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3358 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;Total ram usage:        8 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 1
  3362 ;; This function calls:
  3363 ;;		_putch
  3364 ;; This function is called by:
  3365 ;;		_pad
  3366 ;;		_vfpfcnvrt
  3367 ;;		_fputs
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371  0167                     _fputc:	
  3372                           ;psect for function _fputc
  3373                           
  3374  0167                     l1590:	
  3375                           ;incstack = 0
  3376                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3377                           
  3378  0167  0872               	movf	fputc@fp,w
  3379  0168  1903               	btfsc	3,2
  3380  0169  296B               	goto	u811
  3381  016A  296C               	goto	u810
  3382  016B                     u811:
  3383  016B  2971               	goto	l1594
  3384  016C                     u810:
  3385  016C                     l1592:
  3386  016C  0872               	movf	fputc@fp,w
  3387  016D  1D03               	btfss	3,2
  3388  016E  2970               	goto	u821
  3389  016F  2971               	goto	u820
  3390  0170                     u821:
  3391  0170  2976               	goto	l1596
  3392  0171                     u820:
  3393  0171                     l1594:
  3394  0171  0870               	movf	fputc@c,w
  3395  0172  318E  26F2  3181   	fcall	_putch
  3396  0175  29B8               	goto	l915
  3397  0176                     l1596:
  3398  0176  0872               	movf	fputc@fp,w
  3399  0177  3E08               	addlw	8
  3400  0178  0086               	movwf	6
  3401  0179  0187               	clrf	7
  3402  017A  0016               	moviw fsr1++
  3403  017B  0401               	iorwf	1,w
  3404  017C  1903               	btfsc	3,2
  3405  017D  297F               	goto	u831
  3406  017E  2980               	goto	u830
  3407  017F                     u831:
  3408  017F  299E               	goto	l1600
  3409  0180                     u830:
  3410  0180                     l1598:
  3411  0180  0872               	movf	fputc@fp,w
  3412  0181  3E08               	addlw	8
  3413  0182  0086               	movwf	6
  3414  0183  0187               	clrf	7
  3415  0184  3F40               	moviw [0]fsr1
  3416  0185  00F3               	movwf	??_fputc
  3417  0186  3F41               	moviw [1]fsr1
  3418  0187  00F4               	movwf	??_fputc+1
  3419  0188  0872               	movf	fputc@fp,w
  3420  0189  3E02               	addlw	2
  3421  018A  0086               	movwf	6
  3422  018B  0187               	clrf	7
  3423  018C  3F40               	moviw [0]fsr1
  3424  018D  00F5               	movwf	??_fputc+2
  3425  018E  3F41               	moviw [1]fsr1
  3426  018F  00F6               	movwf	??_fputc+3
  3427  0190  0876               	movf	??_fputc+3,w
  3428  0191  3A80               	xorlw	128
  3429  0192  00F7               	movwf	??_fputc+4
  3430  0193  0874               	movf	??_fputc+1,w
  3431  0194  3A80               	xorlw	128
  3432  0195  0277               	subwf	??_fputc+4,w
  3433  0196  1D03               	skipz
  3434  0197  299A               	goto	u845
  3435  0198  0873               	movf	??_fputc,w
  3436  0199  0275               	subwf	??_fputc+2,w
  3437  019A                     u845:
  3438  019A  1803               	skipnc
  3439  019B  299D               	goto	u841
  3440  019C  299E               	goto	u840
  3441  019D                     u841:
  3442  019D  29B8               	goto	l915
  3443  019E                     u840:
  3444  019E                     l1600:
  3445  019E  0870               	movf	fputc@c,w
  3446  019F  00F3               	movwf	??_fputc
  3447  01A0  0872               	movf	fputc@fp,w
  3448  01A1  0086               	movwf	6
  3449  01A2  0187               	clrf	7
  3450  01A3  0872               	movf	fputc@fp,w
  3451  01A4  3E02               	addlw	2
  3452  01A5  0084               	movwf	4
  3453  01A6  0185               	clrf	5
  3454  01A7  0800               	movf	0,w
  3455  01A8  0701               	addwf	1,w
  3456  01A9  00F4               	movwf	??_fputc+1
  3457  01AA  0874               	movf	??_fputc+1,w
  3458  01AB  0086               	movwf	6
  3459  01AC  0187               	clrf	7
  3460  01AD  0873               	movf	??_fputc,w
  3461  01AE  0081               	movwf	1
  3462  01AF                     l1602:
  3463  01AF  0872               	movf	fputc@fp,w
  3464  01B0  3E02               	addlw	2
  3465  01B1  0086               	movwf	6
  3466  01B2  0187               	clrf	7
  3467  01B3  3001               	movlw	1
  3468  01B4  0781               	addwf	1,f
  3469  01B5  3141               	addfsr 1,1
  3470  01B6  1803               	skipnc
  3471  01B7  0A81               	incf	1,f
  3472  01B8                     l915:
  3473  01B8  0008               	return
  3474  01B9                     __end_of_fputc:
  3475                           
  3476                           	psect	text9
  3477  0EF2                     __ptext9:	
  3478 ;; *************** function _putch *****************
  3479 ;; Defined at:
  3480 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  c               1    wreg     unsigned char 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  c               1    0[COMMON] unsigned char 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_fputc
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507  0EF2                     _putch:	
  3508                           ;psect for function _putch
  3509                           
  3510  0EF2                     l926:	
  3511                           ;incstack = 0
  3512                           ; Regs used in _putch: [wreg]
  3513                           
  3514  0EF2  0008               	return
  3515  0EF3                     __end_of_putch:
  3516                           
  3517                           	psect	text10
  3518  0F87                     __ptext10:	
  3519 ;; *************** function _abs *****************
  3520 ;; Defined at:
  3521 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  a               2    3[COMMON] int 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  2    3[COMMON] int 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3537 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3538 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3539 ;;Total ram usage:        4 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_dtoa
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548  0F87                     _abs:	
  3549                           ;psect for function _abs
  3550                           
  3551  0F87                     l1744:	
  3552                           ;incstack = 0
  3553                           ; Regs used in _abs: [wreg+status,2+status,0]
  3554                           
  3555  0F87  0874               	movf	abs@a+1,w
  3556  0F88  3A80               	xorlw	128
  3557  0F89  00F5               	movwf	??_abs
  3558  0F8A  3080               	movlw	128
  3559  0F8B  0275               	subwf	??_abs,w
  3560  0F8C  1D03               	skipz
  3561  0F8D  2F90               	goto	u1205
  3562  0F8E  3001               	movlw	1
  3563  0F8F  0273               	subwf	abs@a,w
  3564  0F90                     u1205:
  3565  0F90  1803               	skipnc
  3566  0F91  2F93               	goto	u1201
  3567  0F92  2F94               	goto	u1200
  3568  0F93                     u1201:
  3569  0F93  2FA0               	goto	l861
  3570  0F94                     u1200:
  3571  0F94                     l1746:
  3572  0F94  0973               	comf	abs@a,w
  3573  0F95  00F5               	movwf	??_abs
  3574  0F96  0974               	comf	abs@a+1,w
  3575  0F97  00F6               	movwf	??_abs+1
  3576  0F98  0AF5               	incf	??_abs,f
  3577  0F99  1903               	skipnz
  3578  0F9A  0AF6               	incf	??_abs+1,f
  3579  0F9B  0875               	movf	??_abs,w
  3580  0F9C  00F3               	movwf	?_abs
  3581  0F9D  0876               	movf	??_abs+1,w
  3582  0F9E  00F4               	movwf	?_abs+1
  3583  0F9F  2FA0               	goto	l864
  3584  0FA0                     l861:
  3585  0FA0                     l864:
  3586  0FA0  0008               	return
  3587  0FA1                     __end_of_abs:
  3588                           
  3589                           	psect	text11
  3590  0300                     __ptext11:	
  3591 ;; *************** function ___aomod *****************
  3592 ;; Defined at:
  3593 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  divisor         8    0[BANK0 ] long long 
  3596 ;;  dividend        8    8[BANK0 ] long long 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  sign            1    2[COMMON] unsigned char 
  3599 ;;  counter         1    1[COMMON] unsigned char 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  8    0[BANK0 ] long long 
  3602 ;; Registers used:
  3603 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3609 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3613 ;;Total ram usage:       19 bytes
  3614 ;; Hardware stack levels used: 1
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_dtoa
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622  0300                     ___aomod:	
  3623                           ;psect for function ___aomod
  3624                           
  3625  0300                     l1692:	
  3626                           ;incstack = 0
  3627                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  3628                           
  3629  0300  01F2               	clrf	___aomod@sign
  3630  0301                     l1694:
  3631  0301  3028               	movlw	low ___aomod@dividend
  3632  0302  0086               	movwf	6
  3633  0303  3000               	movlw	high ___aomod@dividend
  3634  0304  0087               	movwf	7
  3635  0305  3F47               	moviw [7]fsr1
  3636  0306  00F0               	movwf	??___aomod
  3637  0307  1FF0               	btfss	??___aomod,7
  3638  0308  2B0A               	goto	u1061
  3639  0309  2B0B               	goto	u1060
  3640  030A                     u1061:
  3641  030A  2B2C               	goto	l1698
  3642  030B                     u1060:
  3643  030B                     l1696:
  3644  030B  0020               	movlb	0	; select bank0
  3645  030C  09A8               	comf	___aomod@dividend,f
  3646  030D  09A9               	comf	___aomod@dividend+1,f
  3647  030E  09AA               	comf	___aomod@dividend+2,f
  3648  030F  09AB               	comf	___aomod@dividend+3,f
  3649  0310  09AC               	comf	___aomod@dividend+4,f
  3650  0311  09AD               	comf	___aomod@dividend+5,f
  3651  0312  09AE               	comf	___aomod@dividend+6,f
  3652  0313  09AF               	comf	___aomod@dividend+7,f
  3653  0314  0AA8               	incf	___aomod@dividend,f
  3654  0315  1D03               	skipz
  3655  0316  2B2A               	goto	u107lld
  3656  0317  0AA9               	incf	___aomod@dividend+1,f
  3657  0318  1D03               	skipz
  3658  0319  2B2A               	goto	u107lld
  3659  031A  0AAA               	incf	___aomod@dividend+2,f
  3660  031B  1D03               	skipz
  3661  031C  2B2A               	goto	u107lld
  3662  031D  0AAB               	incf	___aomod@dividend+3,f
  3663  031E  1D03               	skipz
  3664  031F  2B2A               	goto	u107lld
  3665  0320  0AAC               	incf	___aomod@dividend+4,f
  3666  0321  1D03               	skipz
  3667  0322  2B2A               	goto	u107lld
  3668  0323  0AAD               	incf	___aomod@dividend+5,f
  3669  0324  1D03               	skipz
  3670  0325  2B2A               	goto	u107lld
  3671  0326  0AAE               	incf	___aomod@dividend+6,f
  3672  0327  1D03               	skipz
  3673  0328  2B2A               	goto	u107lld
  3674  0329  0AAF               	incf	___aomod@dividend+7,f
  3675  032A                     u107lld:
  3676  032A  01F2               	clrf	___aomod@sign
  3677  032B  0AF2               	incf	___aomod@sign,f
  3678  032C                     l1698:
  3679  032C  3020               	movlw	low ___aomod@divisor
  3680  032D  0086               	movwf	6
  3681  032E  3000               	movlw	high ___aomod@divisor
  3682  032F  0087               	movwf	7
  3683  0330  3F47               	moviw [7]fsr1
  3684  0331  00F0               	movwf	??___aomod
  3685  0332  1FF0               	btfss	??___aomod,7
  3686  0333  2B35               	goto	u1081
  3687  0334  2B36               	goto	u1080
  3688  0335                     u1081:
  3689  0335  2B55               	goto	l1702
  3690  0336                     u1080:
  3691  0336                     l1700:
  3692  0336  0020               	movlb	0	; select bank0
  3693  0337  09A0               	comf	___aomod@divisor,f
  3694  0338  09A1               	comf	___aomod@divisor+1,f
  3695  0339  09A2               	comf	___aomod@divisor+2,f
  3696  033A  09A3               	comf	___aomod@divisor+3,f
  3697  033B  09A4               	comf	___aomod@divisor+4,f
  3698  033C  09A5               	comf	___aomod@divisor+5,f
  3699  033D  09A6               	comf	___aomod@divisor+6,f
  3700  033E  09A7               	comf	___aomod@divisor+7,f
  3701  033F  0AA0               	incf	___aomod@divisor,f
  3702  0340  1D03               	skipz
  3703  0341  2B55               	goto	u109lld
  3704  0342  0AA1               	incf	___aomod@divisor+1,f
  3705  0343  1D03               	skipz
  3706  0344  2B55               	goto	u109lld
  3707  0345  0AA2               	incf	___aomod@divisor+2,f
  3708  0346  1D03               	skipz
  3709  0347  2B55               	goto	u109lld
  3710  0348  0AA3               	incf	___aomod@divisor+3,f
  3711  0349  1D03               	skipz
  3712  034A  2B55               	goto	u109lld
  3713  034B  0AA4               	incf	___aomod@divisor+4,f
  3714  034C  1D03               	skipz
  3715  034D  2B55               	goto	u109lld
  3716  034E  0AA5               	incf	___aomod@divisor+5,f
  3717  034F  1D03               	skipz
  3718  0350  2B55               	goto	u109lld
  3719  0351  0AA6               	incf	___aomod@divisor+6,f
  3720  0352  1D03               	skipz
  3721  0353  2B55               	goto	u109lld
  3722  0354  0AA7               	incf	___aomod@divisor+7,f
  3723  0355                     u109lld:
  3724  0355                     l1702:
  3725  0355  0020               	movlb	0	; select bank0
  3726  0356  0820               	movf	___aomod@divisor,w
  3727  0357  0421               	iorwf	___aomod@divisor+1,w
  3728  0358  0422               	iorwf	___aomod@divisor+2,w
  3729  0359  0423               	iorwf	___aomod@divisor+3,w
  3730  035A  0424               	iorwf	___aomod@divisor+4,w
  3731  035B  0425               	iorwf	___aomod@divisor+5,w
  3732  035C  0426               	iorwf	___aomod@divisor+6,w
  3733  035D  0427               	iorwf	___aomod@divisor+7,w
  3734  035E  1903               	skipnz
  3735  035F  2B61               	goto	u1101
  3736  0360  2B62               	goto	u1100
  3737  0361                     u1101:
  3738  0361  2BB5               	goto	l1718
  3739  0362                     u1100:
  3740  0362                     l1704:
  3741  0362  01F1               	clrf	___aomod@counter
  3742  0363  0AF1               	incf	___aomod@counter,f
  3743  0364  2B71               	goto	l1710
  3744  0365                     l1706:
  3745  0365  35A0               	lslf	___aomod@divisor,f
  3746  0366  0DA1               	rlf	___aomod@divisor+1,f
  3747  0367  0DA2               	rlf	___aomod@divisor+2,f
  3748  0368  0DA3               	rlf	___aomod@divisor+3,f
  3749  0369  0DA4               	rlf	___aomod@divisor+4,f
  3750  036A  0DA5               	rlf	___aomod@divisor+5,f
  3751  036B  0DA6               	rlf	___aomod@divisor+6,f
  3752  036C  0DA7               	rlf	___aomod@divisor+7,f
  3753  036D                     l1708:
  3754  036D  3001               	movlw	1
  3755  036E  00F0               	movwf	??___aomod
  3756  036F  0870               	movf	??___aomod,w
  3757  0370  07F1               	addwf	___aomod@counter,f
  3758  0371                     l1710:
  3759  0371  1FA7               	btfss	___aomod@divisor+7,7
  3760  0372  2B74               	goto	u1111
  3761  0373  2B75               	goto	u1110
  3762  0374                     u1111:
  3763  0374  2B65               	goto	l1706
  3764  0375                     u1110:
  3765  0375                     l1712:
  3766  0375  0827               	movf	___aomod@divisor+7,w
  3767  0376  022F               	subwf	___aomod@dividend+7,w
  3768  0377  1D03               	skipz
  3769  0378  2B93               	goto	u1125
  3770  0379  0826               	movf	___aomod@divisor+6,w
  3771  037A  022E               	subwf	___aomod@dividend+6,w
  3772  037B  1D03               	skipz
  3773  037C  2B93               	goto	u1125
  3774  037D  0825               	movf	___aomod@divisor+5,w
  3775  037E  022D               	subwf	___aomod@dividend+5,w
  3776  037F  1D03               	skipz
  3777  0380  2B93               	goto	u1125
  3778  0381  0824               	movf	___aomod@divisor+4,w
  3779  0382  022C               	subwf	___aomod@dividend+4,w
  3780  0383  1D03               	skipz
  3781  0384  2B93               	goto	u1125
  3782  0385  0823               	movf	___aomod@divisor+3,w
  3783  0386  022B               	subwf	___aomod@dividend+3,w
  3784  0387  1D03               	skipz
  3785  0388  2B93               	goto	u1125
  3786  0389  0822               	movf	___aomod@divisor+2,w
  3787  038A  022A               	subwf	___aomod@dividend+2,w
  3788  038B  1D03               	skipz
  3789  038C  2B93               	goto	u1125
  3790  038D  0821               	movf	___aomod@divisor+1,w
  3791  038E  0229               	subwf	___aomod@dividend+1,w
  3792  038F  1D03               	skipz
  3793  0390  2B93               	goto	u1125
  3794  0391  0820               	movf	___aomod@divisor,w
  3795  0392  0228               	subwf	___aomod@dividend,w
  3796  0393                     u1125:
  3797  0393  1C03               	skipc
  3798  0394  2B96               	goto	u1121
  3799  0395  2B97               	goto	u1120
  3800  0396                     u1121:
  3801  0396  2BA7               	goto	l1716
  3802  0397                     u1120:
  3803  0397                     l1714:
  3804  0397  0820               	movf	___aomod@divisor,w
  3805  0398  02A8               	subwf	___aomod@dividend,f
  3806  0399  0821               	movf	___aomod@divisor+1,w
  3807  039A  3BA9               	subwfb	___aomod@dividend+1,f
  3808  039B  0822               	movf	___aomod@divisor+2,w
  3809  039C  3BAA               	subwfb	___aomod@dividend+2,f
  3810  039D  0823               	movf	___aomod@divisor+3,w
  3811  039E  3BAB               	subwfb	___aomod@dividend+3,f
  3812  039F  0824               	movf	___aomod@divisor+4,w
  3813  03A0  3BAC               	subwfb	___aomod@dividend+4,f
  3814  03A1  0825               	movf	___aomod@divisor+5,w
  3815  03A2  3BAD               	subwfb	___aomod@dividend+5,f
  3816  03A3  0826               	movf	___aomod@divisor+6,w
  3817  03A4  3BAE               	subwfb	___aomod@dividend+6,f
  3818  03A5  0827               	movf	___aomod@divisor+7,w
  3819  03A6  3BAF               	subwfb	___aomod@dividend+7,f
  3820  03A7                     l1716:
  3821  03A7  36A7               	lsrf	___aomod@divisor+7,f
  3822  03A8  0CA6               	rrf	___aomod@divisor+6,f
  3823  03A9  0CA5               	rrf	___aomod@divisor+5,f
  3824  03AA  0CA4               	rrf	___aomod@divisor+4,f
  3825  03AB  0CA3               	rrf	___aomod@divisor+3,f
  3826  03AC  0CA2               	rrf	___aomod@divisor+2,f
  3827  03AD  0CA1               	rrf	___aomod@divisor+1,f
  3828  03AE  0CA0               	rrf	___aomod@divisor,f
  3829  03AF  3001               	movlw	1
  3830  03B0  02F1               	subwf	___aomod@counter,f
  3831  03B1  1D03               	btfss	3,2
  3832  03B2  2BB4               	goto	u1131
  3833  03B3  2BB5               	goto	u1130
  3834  03B4                     u1131:
  3835  03B4  2B75               	goto	l1712
  3836  03B5                     u1130:
  3837  03B5                     l1718:
  3838  03B5  0872               	movf	___aomod@sign,w
  3839  03B6  1903               	btfsc	3,2
  3840  03B7  2BB9               	goto	u1141
  3841  03B8  2BBA               	goto	u1140
  3842  03B9                     u1141:
  3843  03B9  2BD8               	goto	l411
  3844  03BA                     u1140:
  3845  03BA                     l1720:
  3846  03BA  09A8               	comf	___aomod@dividend,f
  3847  03BB  09A9               	comf	___aomod@dividend+1,f
  3848  03BC  09AA               	comf	___aomod@dividend+2,f
  3849  03BD  09AB               	comf	___aomod@dividend+3,f
  3850  03BE  09AC               	comf	___aomod@dividend+4,f
  3851  03BF  09AD               	comf	___aomod@dividend+5,f
  3852  03C0  09AE               	comf	___aomod@dividend+6,f
  3853  03C1  09AF               	comf	___aomod@dividend+7,f
  3854  03C2  0AA8               	incf	___aomod@dividend,f
  3855  03C3  1D03               	skipz
  3856  03C4  2BD8               	goto	u115lld
  3857  03C5  0AA9               	incf	___aomod@dividend+1,f
  3858  03C6  1D03               	skipz
  3859  03C7  2BD8               	goto	u115lld
  3860  03C8  0AAA               	incf	___aomod@dividend+2,f
  3861  03C9  1D03               	skipz
  3862  03CA  2BD8               	goto	u115lld
  3863  03CB  0AAB               	incf	___aomod@dividend+3,f
  3864  03CC  1D03               	skipz
  3865  03CD  2BD8               	goto	u115lld
  3866  03CE  0AAC               	incf	___aomod@dividend+4,f
  3867  03CF  1D03               	skipz
  3868  03D0  2BD8               	goto	u115lld
  3869  03D1  0AAD               	incf	___aomod@dividend+5,f
  3870  03D2  1D03               	skipz
  3871  03D3  2BD8               	goto	u115lld
  3872  03D4  0AAE               	incf	___aomod@dividend+6,f
  3873  03D5  1D03               	skipz
  3874  03D6  2BD8               	goto	u115lld
  3875  03D7  0AAF               	incf	___aomod@dividend+7,f
  3876  03D8                     u115lld:
  3877  03D8                     l411:
  3878  03D8  0020               	movlb	0	; select bank0
  3879  03D9  0828               	movf	___aomod@dividend,w
  3880  03DA  00A0               	movwf	?___aomod
  3881  03DB  0829               	movf	___aomod@dividend+1,w
  3882  03DC  00A1               	movwf	?___aomod+1
  3883  03DD  082A               	movf	___aomod@dividend+2,w
  3884  03DE  00A2               	movwf	?___aomod+2
  3885  03DF  082B               	movf	___aomod@dividend+3,w
  3886  03E0  00A3               	movwf	?___aomod+3
  3887  03E1  082C               	movf	___aomod@dividend+4,w
  3888  03E2  00A4               	movwf	?___aomod+4
  3889  03E3  082D               	movf	___aomod@dividend+5,w
  3890  03E4  00A5               	movwf	?___aomod+5
  3891  03E5  082E               	movf	___aomod@dividend+6,w
  3892  03E6  00A6               	movwf	?___aomod+6
  3893  03E7  082F               	movf	___aomod@dividend+7,w
  3894  03E8  00A7               	movwf	?___aomod+7
  3895  03E9                     l412:
  3896  03E9  0008               	return
  3897  03EA                     __end_of___aomod:
  3898                           
  3899                           	psect	text12
  3900  03EA                     __ptext12:	
  3901 ;; *************** function ___aodiv *****************
  3902 ;; Defined at:
  3903 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  divisor         8    0[BANK0 ] long long 
  3906 ;;  dividend        8    8[BANK0 ] long long 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  quotient        8    3[COMMON] long long 
  3909 ;;  sign            1    2[COMMON] unsigned char 
  3910 ;;  counter         1    1[COMMON] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  8    0[BANK0 ] long long 
  3913 ;; Registers used:
  3914 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3920 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3921 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3923 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3924 ;;Total ram usage:       27 bytes
  3925 ;; Hardware stack levels used: 1
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_dtoa
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933  03EA                     ___aodiv:	
  3934                           ;psect for function ___aodiv
  3935                           
  3936  03EA                     l1654:	
  3937                           ;incstack = 0
  3938                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  3939                           
  3940  03EA  01F2               	clrf	___aodiv@sign
  3941  03EB                     l1656:
  3942  03EB  3020               	movlw	low ___aodiv@divisor
  3943  03EC  0086               	movwf	6
  3944  03ED  3000               	movlw	high ___aodiv@divisor
  3945  03EE  0087               	movwf	7
  3946  03EF  3F47               	moviw [7]fsr1
  3947  03F0  00F0               	movwf	??___aodiv
  3948  03F1  1FF0               	btfss	??___aodiv,7
  3949  03F2  2BF4               	goto	u951
  3950  03F3  2BF5               	goto	u950
  3951  03F4                     u951:
  3952  03F4  2C16               	goto	l1660
  3953  03F5                     u950:
  3954  03F5                     l1658:
  3955  03F5  0020               	movlb	0	; select bank0
  3956  03F6  09A0               	comf	___aodiv@divisor,f
  3957  03F7  09A1               	comf	___aodiv@divisor+1,f
  3958  03F8  09A2               	comf	___aodiv@divisor+2,f
  3959  03F9  09A3               	comf	___aodiv@divisor+3,f
  3960  03FA  09A4               	comf	___aodiv@divisor+4,f
  3961  03FB  09A5               	comf	___aodiv@divisor+5,f
  3962  03FC  09A6               	comf	___aodiv@divisor+6,f
  3963  03FD  09A7               	comf	___aodiv@divisor+7,f
  3964  03FE  0AA0               	incf	___aodiv@divisor,f
  3965  03FF  1D03               	skipz
  3966  0400  2C14               	goto	u96lld
  3967  0401  0AA1               	incf	___aodiv@divisor+1,f
  3968  0402  1D03               	skipz
  3969  0403  2C14               	goto	u96lld
  3970  0404  0AA2               	incf	___aodiv@divisor+2,f
  3971  0405  1D03               	skipz
  3972  0406  2C14               	goto	u96lld
  3973  0407  0AA3               	incf	___aodiv@divisor+3,f
  3974  0408  1D03               	skipz
  3975  0409  2C14               	goto	u96lld
  3976  040A  0AA4               	incf	___aodiv@divisor+4,f
  3977  040B  1D03               	skipz
  3978  040C  2C14               	goto	u96lld
  3979  040D  0AA5               	incf	___aodiv@divisor+5,f
  3980  040E  1D03               	skipz
  3981  040F  2C14               	goto	u96lld
  3982  0410  0AA6               	incf	___aodiv@divisor+6,f
  3983  0411  1D03               	skipz
  3984  0412  2C14               	goto	u96lld
  3985  0413  0AA7               	incf	___aodiv@divisor+7,f
  3986  0414                     u96lld:
  3987  0414  01F2               	clrf	___aodiv@sign
  3988  0415  0AF2               	incf	___aodiv@sign,f
  3989  0416                     l1660:
  3990  0416  3028               	movlw	low ___aodiv@dividend
  3991  0417  0086               	movwf	6
  3992  0418  3000               	movlw	high ___aodiv@dividend
  3993  0419  0087               	movwf	7
  3994  041A  3F47               	moviw [7]fsr1
  3995  041B  00F0               	movwf	??___aodiv
  3996  041C  1FF0               	btfss	??___aodiv,7
  3997  041D  2C1F               	goto	u971
  3998  041E  2C20               	goto	u970
  3999  041F                     u971:
  4000  041F  2C43               	goto	l1666
  4001  0420                     u970:
  4002  0420                     l1662:
  4003  0420  0020               	movlb	0	; select bank0
  4004  0421  09A8               	comf	___aodiv@dividend,f
  4005  0422  09A9               	comf	___aodiv@dividend+1,f
  4006  0423  09AA               	comf	___aodiv@dividend+2,f
  4007  0424  09AB               	comf	___aodiv@dividend+3,f
  4008  0425  09AC               	comf	___aodiv@dividend+4,f
  4009  0426  09AD               	comf	___aodiv@dividend+5,f
  4010  0427  09AE               	comf	___aodiv@dividend+6,f
  4011  0428  09AF               	comf	___aodiv@dividend+7,f
  4012  0429  0AA8               	incf	___aodiv@dividend,f
  4013  042A  1D03               	skipz
  4014  042B  2C3F               	goto	u98lld
  4015  042C  0AA9               	incf	___aodiv@dividend+1,f
  4016  042D  1D03               	skipz
  4017  042E  2C3F               	goto	u98lld
  4018  042F  0AAA               	incf	___aodiv@dividend+2,f
  4019  0430  1D03               	skipz
  4020  0431  2C3F               	goto	u98lld
  4021  0432  0AAB               	incf	___aodiv@dividend+3,f
  4022  0433  1D03               	skipz
  4023  0434  2C3F               	goto	u98lld
  4024  0435  0AAC               	incf	___aodiv@dividend+4,f
  4025  0436  1D03               	skipz
  4026  0437  2C3F               	goto	u98lld
  4027  0438  0AAD               	incf	___aodiv@dividend+5,f
  4028  0439  1D03               	skipz
  4029  043A  2C3F               	goto	u98lld
  4030  043B  0AAE               	incf	___aodiv@dividend+6,f
  4031  043C  1D03               	skipz
  4032  043D  2C3F               	goto	u98lld
  4033  043E  0AAF               	incf	___aodiv@dividend+7,f
  4034  043F                     u98lld:
  4035  043F                     l1664:
  4036  043F  3001               	movlw	1
  4037  0440  00F0               	movwf	??___aodiv
  4038  0441  0870               	movf	??___aodiv,w
  4039  0442  06F2               	xorwf	___aodiv@sign,f
  4040  0443                     l1666:
  4041  0443  3073               	movlw	low ___aodiv@quotient
  4042  0444  0086               	movwf	6
  4043  0445  3000               	movlw	high ___aodiv@quotient
  4044  0446  0087               	movwf	7
  4045  0447  3008               	movlw	8
  4046  0448  00F0               	movwf	??___aodiv
  4047  0449  3000               	movlw	0
  4048  044A                     u990:
  4049  044A  001E               	movwi fsr1++
  4050  044B  0BF0               	decfsz	??___aodiv,f
  4051  044C  2C4A               	goto	u990
  4052  044D                     l1668:
  4053  044D  0020               	movlb	0	; select bank0
  4054  044E  0820               	movf	___aodiv@divisor,w
  4055  044F  0421               	iorwf	___aodiv@divisor+1,w
  4056  0450  0422               	iorwf	___aodiv@divisor+2,w
  4057  0451  0423               	iorwf	___aodiv@divisor+3,w
  4058  0452  0424               	iorwf	___aodiv@divisor+4,w
  4059  0453  0425               	iorwf	___aodiv@divisor+5,w
  4060  0454  0426               	iorwf	___aodiv@divisor+6,w
  4061  0455  0427               	iorwf	___aodiv@divisor+7,w
  4062  0456  1903               	skipnz
  4063  0457  2C59               	goto	u1001
  4064  0458  2C5A               	goto	u1000
  4065  0459                     u1001:
  4066  0459  2CB6               	goto	l1688
  4067  045A                     u1000:
  4068  045A                     l1670:
  4069  045A  01F1               	clrf	___aodiv@counter
  4070  045B  0AF1               	incf	___aodiv@counter,f
  4071  045C  2C69               	goto	l1676
  4072  045D                     l1672:
  4073  045D  35A0               	lslf	___aodiv@divisor,f
  4074  045E  0DA1               	rlf	___aodiv@divisor+1,f
  4075  045F  0DA2               	rlf	___aodiv@divisor+2,f
  4076  0460  0DA3               	rlf	___aodiv@divisor+3,f
  4077  0461  0DA4               	rlf	___aodiv@divisor+4,f
  4078  0462  0DA5               	rlf	___aodiv@divisor+5,f
  4079  0463  0DA6               	rlf	___aodiv@divisor+6,f
  4080  0464  0DA7               	rlf	___aodiv@divisor+7,f
  4081  0465                     l1674:
  4082  0465  3001               	movlw	1
  4083  0466  00F0               	movwf	??___aodiv
  4084  0467  0870               	movf	??___aodiv,w
  4085  0468  07F1               	addwf	___aodiv@counter,f
  4086  0469                     l1676:
  4087  0469  1FA7               	btfss	___aodiv@divisor+7,7
  4088  046A  2C6C               	goto	u1011
  4089  046B  2C6D               	goto	u1010
  4090  046C                     u1011:
  4091  046C  2C5D               	goto	l1672
  4092  046D                     u1010:
  4093  046D                     l1678:
  4094  046D  35F3               	lslf	___aodiv@quotient,f
  4095  046E  0DF4               	rlf	___aodiv@quotient+1,f
  4096  046F  0DF5               	rlf	___aodiv@quotient+2,f
  4097  0470  0DF6               	rlf	___aodiv@quotient+3,f
  4098  0471  0DF7               	rlf	___aodiv@quotient+4,f
  4099  0472  0DF8               	rlf	___aodiv@quotient+5,f
  4100  0473  0DF9               	rlf	___aodiv@quotient+6,f
  4101  0474  0DFA               	rlf	___aodiv@quotient+7,f
  4102  0475                     l1680:
  4103  0475  0827               	movf	___aodiv@divisor+7,w
  4104  0476  022F               	subwf	___aodiv@dividend+7,w
  4105  0477  1D03               	skipz
  4106  0478  2C93               	goto	u1025
  4107  0479  0826               	movf	___aodiv@divisor+6,w
  4108  047A  022E               	subwf	___aodiv@dividend+6,w
  4109  047B  1D03               	skipz
  4110  047C  2C93               	goto	u1025
  4111  047D  0825               	movf	___aodiv@divisor+5,w
  4112  047E  022D               	subwf	___aodiv@dividend+5,w
  4113  047F  1D03               	skipz
  4114  0480  2C93               	goto	u1025
  4115  0481  0824               	movf	___aodiv@divisor+4,w
  4116  0482  022C               	subwf	___aodiv@dividend+4,w
  4117  0483  1D03               	skipz
  4118  0484  2C93               	goto	u1025
  4119  0485  0823               	movf	___aodiv@divisor+3,w
  4120  0486  022B               	subwf	___aodiv@dividend+3,w
  4121  0487  1D03               	skipz
  4122  0488  2C93               	goto	u1025
  4123  0489  0822               	movf	___aodiv@divisor+2,w
  4124  048A  022A               	subwf	___aodiv@dividend+2,w
  4125  048B  1D03               	skipz
  4126  048C  2C93               	goto	u1025
  4127  048D  0821               	movf	___aodiv@divisor+1,w
  4128  048E  0229               	subwf	___aodiv@dividend+1,w
  4129  048F  1D03               	skipz
  4130  0490  2C93               	goto	u1025
  4131  0491  0820               	movf	___aodiv@divisor,w
  4132  0492  0228               	subwf	___aodiv@dividend,w
  4133  0493                     u1025:
  4134  0493  1C03               	skipc
  4135  0494  2C96               	goto	u1021
  4136  0495  2C97               	goto	u1020
  4137  0496                     u1021:
  4138  0496  2CA8               	goto	l1686
  4139  0497                     u1020:
  4140  0497                     l1682:
  4141  0497  0820               	movf	___aodiv@divisor,w
  4142  0498  02A8               	subwf	___aodiv@dividend,f
  4143  0499  0821               	movf	___aodiv@divisor+1,w
  4144  049A  3BA9               	subwfb	___aodiv@dividend+1,f
  4145  049B  0822               	movf	___aodiv@divisor+2,w
  4146  049C  3BAA               	subwfb	___aodiv@dividend+2,f
  4147  049D  0823               	movf	___aodiv@divisor+3,w
  4148  049E  3BAB               	subwfb	___aodiv@dividend+3,f
  4149  049F  0824               	movf	___aodiv@divisor+4,w
  4150  04A0  3BAC               	subwfb	___aodiv@dividend+4,f
  4151  04A1  0825               	movf	___aodiv@divisor+5,w
  4152  04A2  3BAD               	subwfb	___aodiv@dividend+5,f
  4153  04A3  0826               	movf	___aodiv@divisor+6,w
  4154  04A4  3BAE               	subwfb	___aodiv@dividend+6,f
  4155  04A5  0827               	movf	___aodiv@divisor+7,w
  4156  04A6  3BAF               	subwfb	___aodiv@dividend+7,f
  4157  04A7                     l1684:
  4158  04A7  1473               	bsf	___aodiv@quotient,0
  4159  04A8                     l1686:
  4160  04A8  36A7               	lsrf	___aodiv@divisor+7,f
  4161  04A9  0CA6               	rrf	___aodiv@divisor+6,f
  4162  04AA  0CA5               	rrf	___aodiv@divisor+5,f
  4163  04AB  0CA4               	rrf	___aodiv@divisor+4,f
  4164  04AC  0CA3               	rrf	___aodiv@divisor+3,f
  4165  04AD  0CA2               	rrf	___aodiv@divisor+2,f
  4166  04AE  0CA1               	rrf	___aodiv@divisor+1,f
  4167  04AF  0CA0               	rrf	___aodiv@divisor,f
  4168  04B0  3001               	movlw	1
  4169  04B1  02F1               	subwf	___aodiv@counter,f
  4170  04B2  1D03               	btfss	3,2
  4171  04B3  2CB5               	goto	u1031
  4172  04B4  2CB6               	goto	u1030
  4173  04B5                     u1031:
  4174  04B5  2C6D               	goto	l1678
  4175  04B6                     u1030:
  4176  04B6                     l1688:
  4177  04B6  0872               	movf	___aodiv@sign,w
  4178  04B7  1903               	btfsc	3,2
  4179  04B8  2CBA               	goto	u1041
  4180  04B9  2CBB               	goto	u1040
  4181  04BA                     u1041:
  4182  04BA  2CD9               	goto	l398
  4183  04BB                     u1040:
  4184  04BB                     l1690:
  4185  04BB  09F3               	comf	___aodiv@quotient,f
  4186  04BC  09F4               	comf	___aodiv@quotient+1,f
  4187  04BD  09F5               	comf	___aodiv@quotient+2,f
  4188  04BE  09F6               	comf	___aodiv@quotient+3,f
  4189  04BF  09F7               	comf	___aodiv@quotient+4,f
  4190  04C0  09F8               	comf	___aodiv@quotient+5,f
  4191  04C1  09F9               	comf	___aodiv@quotient+6,f
  4192  04C2  09FA               	comf	___aodiv@quotient+7,f
  4193  04C3  0AF3               	incf	___aodiv@quotient,f
  4194  04C4  1D03               	skipz
  4195  04C5  2CD9               	goto	u105lld
  4196  04C6  0AF4               	incf	___aodiv@quotient+1,f
  4197  04C7  1D03               	skipz
  4198  04C8  2CD9               	goto	u105lld
  4199  04C9  0AF5               	incf	___aodiv@quotient+2,f
  4200  04CA  1D03               	skipz
  4201  04CB  2CD9               	goto	u105lld
  4202  04CC  0AF6               	incf	___aodiv@quotient+3,f
  4203  04CD  1D03               	skipz
  4204  04CE  2CD9               	goto	u105lld
  4205  04CF  0AF7               	incf	___aodiv@quotient+4,f
  4206  04D0  1D03               	skipz
  4207  04D1  2CD9               	goto	u105lld
  4208  04D2  0AF8               	incf	___aodiv@quotient+5,f
  4209  04D3  1D03               	skipz
  4210  04D4  2CD9               	goto	u105lld
  4211  04D5  0AF9               	incf	___aodiv@quotient+6,f
  4212  04D6  1D03               	skipz
  4213  04D7  2CD9               	goto	u105lld
  4214  04D8  0AFA               	incf	___aodiv@quotient+7,f
  4215  04D9                     u105lld:
  4216  04D9                     l398:
  4217  04D9  0873               	movf	___aodiv@quotient,w
  4218  04DA  0020               	movlb	0	; select bank0
  4219  04DB  00A0               	movwf	?___aodiv
  4220  04DC  0874               	movf	___aodiv@quotient+1,w
  4221  04DD  00A1               	movwf	?___aodiv+1
  4222  04DE  0875               	movf	___aodiv@quotient+2,w
  4223  04DF  00A2               	movwf	?___aodiv+2
  4224  04E0  0876               	movf	___aodiv@quotient+3,w
  4225  04E1  00A3               	movwf	?___aodiv+3
  4226  04E2  0877               	movf	___aodiv@quotient+4,w
  4227  04E3  00A4               	movwf	?___aodiv+4
  4228  04E4  0878               	movf	___aodiv@quotient+5,w
  4229  04E5  00A5               	movwf	?___aodiv+5
  4230  04E6  0879               	movf	___aodiv@quotient+6,w
  4231  04E7  00A6               	movwf	?___aodiv+6
  4232  04E8  087A               	movf	___aodiv@quotient+7,w
  4233  04E9  00A7               	movwf	?___aodiv+7
  4234  04EA                     l399:
  4235  04EA  0008               	return
  4236  04EB                     __end_of___aodiv:
  4237                           
  4238                           	psect	text13
  4239  026C                     __ptext13:	
  4240 ;; *************** function _atoi *****************
  4241 ;; Defined at:
  4242 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  s               2    6[COMMON] PTR const unsigned char 
  4245 ;;		 -> STR_1(13), 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  n               2    2[BANK0 ] int 
  4248 ;;  neg             2    0[BANK0 ] int 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  2    6[COMMON] int 
  4251 ;; Registers used:
  4252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4261 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4262 ;;Total ram usage:        9 bytes
  4263 ;; Hardware stack levels used: 1
  4264 ;; Hardware stack levels required when called: 1
  4265 ;; This function calls:
  4266 ;;		___wmul
  4267 ;;		_isdigit
  4268 ;;		_isspace
  4269 ;; This function is called by:
  4270 ;;		_vfpfcnvrt
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274  026C                     _atoi:	
  4275                           ;psect for function _atoi
  4276                           
  4277  026C                     l1836:	
  4278                           ;incstack = 0
  4279                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4280                           
  4281  026C  0020               	movlb	0	; select bank0
  4282  026D  01A2               	clrf	atoi@n
  4283  026E  01A3               	clrf	atoi@n+1
  4284  026F  01A0               	clrf	atoi@neg
  4285  0270  01A1               	clrf	atoi@neg+1
  4286  0271  2A76               	goto	l1842
  4287  0272                     l1838:
  4288  0272  3001               	movlw	1
  4289  0273  07F6               	addwf	atoi@s,f
  4290  0274  3000               	movlw	0
  4291  0275  3DF7               	addwfc	atoi@s+1,f
  4292  0276                     l1842:
  4293  0276  0876               	movf	atoi@s,w
  4294  0277  0084               	movwf	4
  4295  0278  0877               	movf	atoi@s+1,w
  4296  0279  0085               	movwf	5
  4297  027A  0012               	moviw fsr0++
  4298  027B  3A20               	xorlw	32
  4299  027C  1903               	btfsc	3,2
  4300  027D  2A7F               	goto	u1421
  4301  027E  2A80               	goto	u1420
  4302  027F                     u1421:
  4303  027F  2A72               	goto	l1838
  4304  0280                     u1420:
  4305  0280                     l1844:
  4306  0280  0876               	movf	atoi@s,w
  4307  0281  0084               	movwf	4
  4308  0282  0877               	movf	atoi@s+1,w
  4309  0283  0085               	movwf	5
  4310  0284  0800               	movf	0,w	;code access
  4311  0285  3EF7               	addlw	247
  4312  0286  00F8               	movwf	??_atoi
  4313  0287  30FF               	movlw	255
  4314  0288  1803               	skipnc
  4315  0289  3000               	movlw	0
  4316  028A  00F9               	movwf	??_atoi+1
  4317  028B  3000               	movlw	0
  4318  028C  0279               	subwf	??_atoi+1,w
  4319  028D  3005               	movlw	5
  4320  028E  1903               	skipnz
  4321  028F  0278               	subwf	??_atoi,w
  4322  0290  1C03               	skipc
  4323  0291  2A93               	goto	u1431
  4324  0292  2A94               	goto	u1430
  4325  0293                     u1431:
  4326  0293  2A72               	goto	l1838
  4327  0294                     u1430:
  4328  0294  2A9F               	goto	l1848
  4329  0295                     l1846:
  4330  0295  3001               	movlw	1
  4331  0296  0020               	movlb	0	; select bank0
  4332  0297  00A0               	movwf	atoi@neg
  4333  0298  3000               	movlw	0
  4334  0299  00A1               	movwf	atoi@neg+1
  4335  029A                     l878:
  4336  029A  3001               	movlw	1
  4337  029B  07F6               	addwf	atoi@s,f
  4338  029C  3000               	movlw	0
  4339  029D  3DF7               	addwfc	atoi@s+1,f
  4340  029E  2AD4               	goto	l1856
  4341  029F                     l1848:
  4342  029F  0876               	movf	atoi@s,w
  4343  02A0  0084               	movwf	4
  4344  02A1  0877               	movf	atoi@s+1,w
  4345  02A2  0085               	movwf	5
  4346  02A3  0800               	movf	0,w	;code access
  4347  02A4  00F8               	movwf	??_atoi
  4348  02A5  01F9               	clrf	??_atoi+1
  4349                           
  4350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4351                           ; Switch size 1, requested type "simple"
  4352                           ; Number of cases is 1, Range of values is 0 to 0
  4353                           ; switch strategies available:
  4354                           ; Name         Instructions Cycles
  4355                           ; simple_byte            4     3 (average)
  4356                           ; direct_byte            8     6 (fixed)
  4357                           ; jumptable            260     6 (fixed)
  4358                           ;	Chosen strategy is simple_byte
  4359  02A6  0879               	movf	??_atoi+1,w
  4360  02A7  3A00               	xorlw	0	; case 0
  4361  02A8  1903               	skipnz
  4362  02A9  2AAB               	goto	l2236
  4363  02AA  2AD4               	goto	l1856
  4364  02AB                     l2236:
  4365                           
  4366                           ; Switch size 1, requested type "simple"
  4367                           ; Number of cases is 2, Range of values is 43 to 45
  4368                           ; switch strategies available:
  4369                           ; Name         Instructions Cycles
  4370                           ; simple_byte            7     4 (average)
  4371                           ; direct_byte           15     9 (fixed)
  4372                           ; jumptable            263     9 (fixed)
  4373                           ;	Chosen strategy is simple_byte
  4374  02AB  0878               	movf	??_atoi,w
  4375  02AC  3A2B               	xorlw	43	; case 43
  4376  02AD  1903               	skipnz
  4377  02AE  2A9A               	goto	l878
  4378  02AF  3A06               	xorlw	6	; case 45
  4379  02B0  1903               	skipnz
  4380  02B1  2A95               	goto	l1846
  4381  02B2  2AD4               	goto	l1856
  4382  02B3                     l1850:
  4383  02B3  0876               	movf	atoi@s,w
  4384  02B4  0084               	movwf	4
  4385  02B5  0877               	movf	atoi@s+1,w
  4386  02B6  0085               	movwf	5
  4387  02B7  0800               	movf	0,w	;code access
  4388  02B8  00F8               	movwf	??_atoi
  4389  02B9  0020               	movlb	0	; select bank0
  4390  02BA  0823               	movf	atoi@n+1,w
  4391  02BB  00F1               	movwf	___wmul@multiplier+1
  4392  02BC  0822               	movf	atoi@n,w
  4393  02BD  00F0               	movwf	___wmul@multiplier
  4394  02BE  300A               	movlw	10
  4395  02BF  00F2               	movwf	___wmul@multiplicand
  4396  02C0  3000               	movlw	0
  4397  02C1  00F3               	movwf	___wmul@multiplicand+1
  4398  02C2  318F  27C0  3182   	fcall	___wmul
  4399  02C5  0871               	movf	?___wmul+1,w
  4400  02C6  00FA               	movwf	??_atoi+2
  4401  02C7  0878               	movf	??_atoi,w
  4402  02C8  0270               	subwf	?___wmul,w
  4403  02C9  00F9               	movwf	??_atoi+1
  4404  02CA  1C03               	skipc
  4405  02CB  03FA               	decf	??_atoi+2,f
  4406  02CC  0879               	movf	??_atoi+1,w
  4407  02CD  3E30               	addlw	48
  4408  02CE  0020               	movlb	0	; select bank0
  4409  02CF  00A2               	movwf	atoi@n
  4410  02D0  3000               	movlw	0
  4411  02D1  3D7A               	addwfc	??_atoi+2,w
  4412  02D2  00A3               	movwf	atoi@n+1
  4413  02D3  2A9A               	goto	l878
  4414  02D4                     l1856:
  4415  02D4  0876               	movf	atoi@s,w
  4416  02D5  0084               	movwf	4
  4417  02D6  0877               	movf	atoi@s+1,w
  4418  02D7  0085               	movwf	5
  4419  02D8  0800               	movf	0,w	;code access
  4420  02D9  3ED0               	addlw	208
  4421  02DA  00F8               	movwf	??_atoi
  4422  02DB  30FF               	movlw	255
  4423  02DC  1803               	skipnc
  4424  02DD  3000               	movlw	0
  4425  02DE  00F9               	movwf	??_atoi+1
  4426  02DF  3000               	movlw	0
  4427  02E0  0279               	subwf	??_atoi+1,w
  4428  02E1  300A               	movlw	10
  4429  02E2  1903               	skipnz
  4430  02E3  0278               	subwf	??_atoi,w
  4431  02E4  1C03               	skipc
  4432  02E5  2AE7               	goto	u1441
  4433  02E6  2AE8               	goto	u1440
  4434  02E7                     u1441:
  4435  02E7  2AB3               	goto	l1850
  4436  02E8                     u1440:
  4437  02E8                     l1858:
  4438  02E8  0020               	movlb	0	; select bank0
  4439  02E9  0820               	movf	atoi@neg,w
  4440  02EA  0421               	iorwf	atoi@neg+1,w
  4441  02EB  1D03               	btfss	3,2
  4442  02EC  2AEE               	goto	u1451
  4443  02ED  2AEF               	goto	u1450
  4444  02EE                     u1451:
  4445  02EE  2AFB               	goto	l1862
  4446  02EF                     u1450:
  4447  02EF                     l1860:
  4448  02EF  0922               	comf	atoi@n,w
  4449  02F0  00F8               	movwf	??_atoi
  4450  02F1  0923               	comf	atoi@n+1,w
  4451  02F2  00F9               	movwf	??_atoi+1
  4452  02F3  0AF8               	incf	??_atoi,f
  4453  02F4  1903               	skipnz
  4454  02F5  0AF9               	incf	??_atoi+1,f
  4455  02F6  0878               	movf	??_atoi,w
  4456  02F7  00F6               	movwf	?_atoi
  4457  02F8  0879               	movf	??_atoi+1,w
  4458  02F9  00F7               	movwf	?_atoi+1
  4459  02FA  2AFF               	goto	l889
  4460  02FB                     l1862:
  4461  02FB  0823               	movf	atoi@n+1,w
  4462  02FC  00F7               	movwf	?_atoi+1
  4463  02FD  0822               	movf	atoi@n,w
  4464  02FE  00F6               	movwf	?_atoi
  4465  02FF                     l889:
  4466  02FF  0008               	return
  4467  0300                     __end_of_atoi:
  4468                           
  4469                           	psect	text14
  4470  0FDF                     __ptext14:	
  4471 ;; *************** function _isspace *****************
  4472 ;; Defined at:
  4473 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  c               2    0[COMMON] int 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  2    0[COMMON] int 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4487 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;Total ram usage:        5 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_atoi
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500  0FDF                     _isspace:	
  4501                           ;psect for function _isspace
  4502                           
  4503  0FDF                     l1752:	
  4504                           ;incstack = 0
  4505                           ; Regs used in _isspace: [wreg+status,2+status,0]
  4506                           
  4507  0FDF  01F4               	clrf	_isspace$873
  4508  0FE0  0AF4               	incf	_isspace$873,f
  4509  0FE1                     l1754:
  4510  0FE1  3020               	movlw	32
  4511  0FE2  0670               	xorwf	isspace@c,w
  4512  0FE3  0471               	iorwf	isspace@c+1,w
  4513  0FE4  1903               	btfsc	3,2
  4514  0FE5  2FE7               	goto	u1231
  4515  0FE6  2FE8               	goto	u1230
  4516  0FE7                     u1231:
  4517  0FE7  2FF8               	goto	l1760
  4518  0FE8                     u1230:
  4519  0FE8                     l1756:
  4520  0FE8  0870               	movf	isspace@c,w
  4521  0FE9  3EF7               	addlw	247
  4522  0FEA  00F2               	movwf	??_isspace
  4523  0FEB  30FF               	movlw	255
  4524  0FEC  3D71               	addwfc	isspace@c+1,w
  4525  0FED  00F3               	movwf	??_isspace+1
  4526  0FEE  3000               	movlw	0
  4527  0FEF  0273               	subwf	??_isspace+1,w
  4528  0FF0  3005               	movlw	5
  4529  0FF1  1903               	skipnz
  4530  0FF2  0272               	subwf	??_isspace,w
  4531  0FF3  1C03               	skipc
  4532  0FF4  2FF6               	goto	u1241
  4533  0FF5  2FF7               	goto	u1240
  4534  0FF6                     u1241:
  4535  0FF6  2FF8               	goto	l1760
  4536  0FF7                     u1240:
  4537  0FF7                     l1758:
  4538  0FF7  01F4               	clrf	_isspace$873
  4539  0FF8                     l1760:
  4540  0FF8  0874               	movf	_isspace$873,w
  4541  0FF9  00F2               	movwf	??_isspace
  4542  0FFA  01F3               	clrf	??_isspace+1
  4543  0FFB  0872               	movf	??_isspace,w
  4544  0FFC  00F0               	movwf	?_isspace
  4545  0FFD  0873               	movf	??_isspace+1,w
  4546  0FFE  00F1               	movwf	?_isspace+1
  4547  0FFF                     l900:
  4548  0FFF  0008               	return
  4549  1000                     __end_of_isspace:
  4550                           
  4551                           	psect	text15
  4552  0F56                     __ptext15:	
  4553 ;; *************** function _isdigit *****************
  4554 ;; Defined at:
  4555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  c               2    0[COMMON] int 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  2    0[COMMON] int 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;Total ram usage:        6 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_vfpfcnvrt
  4579 ;;		_atoi
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583  0F56                     _isdigit:	
  4584                           ;psect for function _isdigit
  4585                           
  4586  0F56                     l1748:	
  4587                           ;incstack = 0
  4588                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4589                           
  4590  0F56  0870               	movf	isdigit@c,w
  4591  0F57  3ED0               	addlw	208
  4592  0F58  00F2               	movwf	??_isdigit
  4593  0F59  30FF               	movlw	255
  4594  0F5A  3D71               	addwfc	isdigit@c+1,w
  4595  0F5B  00F3               	movwf	??_isdigit+1
  4596  0F5C  3000               	movlw	0
  4597  0F5D  0273               	subwf	??_isdigit+1,w
  4598  0F5E  300A               	movlw	10
  4599  0F5F  1903               	skipnz
  4600  0F60  0272               	subwf	??_isdigit,w
  4601  0F61  1C03               	skipc
  4602  0F62  2F64               	goto	u1211
  4603  0F63  2F66               	goto	u1210
  4604  0F64                     u1211:
  4605  0F64  3001               	movlw	1
  4606  0F65  2F67               	goto	u1220
  4607  0F66                     u1210:
  4608  0F66  3000               	movlw	0
  4609  0F67                     u1220:
  4610  0F67  00F4               	movwf	??_isdigit+2
  4611  0F68  01F5               	clrf	??_isdigit+3
  4612  0F69  0874               	movf	??_isdigit+2,w
  4613  0F6A  00F0               	movwf	?_isdigit
  4614  0F6B  0875               	movf	??_isdigit+3,w
  4615  0F6C  00F1               	movwf	?_isdigit+1
  4616  0F6D                     l892:
  4617  0F6D  0008               	return
  4618  0F6E                     __end_of_isdigit:
  4619                           
  4620                           	psect	text16
  4621  0FC0                     __ptext16:	
  4622 ;; *************** function ___wmul *****************
  4623 ;; Defined at:
  4624 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  multiplier      2    0[COMMON] unsigned int 
  4627 ;;  multiplicand    2    2[COMMON] unsigned int 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  product         2    4[COMMON] unsigned int 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  2    0[COMMON] unsigned int 
  4632 ;; Registers used:
  4633 ;;		wreg, status,2, status,0
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;Total ram usage:        6 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_atoi
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652  0FC0                     ___wmul:	
  4653                           ;psect for function ___wmul
  4654                           
  4655  0FC0                     l1640:	
  4656                           ;incstack = 0
  4657                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4658                           
  4659  0FC0  01F4               	clrf	___wmul@product
  4660  0FC1  01F5               	clrf	___wmul@product+1
  4661  0FC2                     l1642:
  4662  0FC2  1C70               	btfss	___wmul@multiplier,0
  4663  0FC3  2FC5               	goto	u911
  4664  0FC4  2FC6               	goto	u910
  4665  0FC5                     u911:
  4666  0FC5  2FCA               	goto	l298
  4667  0FC6                     u910:
  4668  0FC6                     l1644:
  4669  0FC6  0872               	movf	___wmul@multiplicand,w
  4670  0FC7  07F4               	addwf	___wmul@product,f
  4671  0FC8  0873               	movf	___wmul@multiplicand+1,w
  4672  0FC9  3DF5               	addwfc	___wmul@product+1,f
  4673  0FCA                     l298:
  4674  0FCA  3001               	movlw	1
  4675  0FCB                     u925:
  4676  0FCB  35F2               	lslf	___wmul@multiplicand,f
  4677  0FCC  0DF3               	rlf	___wmul@multiplicand+1,f
  4678  0FCD  0B89               	decfsz	9,f
  4679  0FCE  2FCB               	goto	u925
  4680  0FCF                     l1646:
  4681  0FCF  3001               	movlw	1
  4682  0FD0                     u935:
  4683  0FD0  36F1               	lsrf	___wmul@multiplier+1,f
  4684  0FD1  0CF0               	rrf	___wmul@multiplier,f
  4685  0FD2  0B89               	decfsz	9,f
  4686  0FD3  2FD0               	goto	u935
  4687  0FD4                     l1648:
  4688  0FD4  0870               	movf	___wmul@multiplier,w
  4689  0FD5  0471               	iorwf	___wmul@multiplier+1,w
  4690  0FD6  1D03               	btfss	3,2
  4691  0FD7  2FD9               	goto	u941
  4692  0FD8  2FDA               	goto	u940
  4693  0FD9                     u941:
  4694  0FD9  2FC2               	goto	l1642
  4695  0FDA                     u940:
  4696  0FDA                     l1650:
  4697  0FDA  0875               	movf	___wmul@product+1,w
  4698  0FDB  00F1               	movwf	?___wmul+1
  4699  0FDC  0874               	movf	___wmul@product,w
  4700  0FDD  00F0               	movwf	?___wmul
  4701  0FDE                     l300:
  4702  0FDE  0008               	return
  4703  0FDF                     __end_of___wmul:
  4704                           
  4705                           	psect	text17
  4706  0FA1                     __ptext17:	
  4707 ;; *************** function _lcd_out *****************
  4708 ;; Defined at:
  4709 ;;		line 156 in file "LCD_LIB.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  row             1    wreg     unsigned char 
  4712 ;;  col             1   11[COMMON] unsigned char 
  4713 ;;  str             1   12[COMMON] PTR unsigned char 
  4714 ;;		 -> txtLCD(20), 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  row             1    0[BANK0 ] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;Total ram usage:        4 bytes
  4731 ;; Hardware stack levels used: 1
  4732 ;; Hardware stack levels required when called: 4
  4733 ;; This function calls:
  4734 ;;		_lcd_set_cursor
  4735 ;;		_lcd_write
  4736 ;; This function is called by:
  4737 ;;		_main
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741  0FA1                     _lcd_out:	
  4742                           ;psect for function _lcd_out
  4743                           
  4744                           
  4745                           ;incstack = 0
  4746                           ; Regs used in _lcd_out: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4747                           ;lcd_out@row stored from wreg
  4748  0FA1  0020               	movlb	0	; select bank0
  4749  0FA2  00A0               	movwf	lcd_out@row
  4750  0FA3                     l2036:
  4751                           
  4752                           ;LCD_LIB.c: 157:     lcd_set_cursor(row,col);
  4753  0FA3  087B               	movf	lcd_out@col,w
  4754  0FA4  00FD               	movwf	??_lcd_out
  4755  0FA5  087D               	movf	??_lcd_out,w
  4756  0FA6  00F7               	movwf	lcd_set_cursor@col
  4757  0FA7  0820               	movf	lcd_out@row,w
  4758  0FA8  3180  20B7  318F   	fcall	_lcd_set_cursor
  4759                           
  4760                           ;LCD_LIB.c: 158:     while(*str){
  4761  0FAB  2FB7               	goto	l2042
  4762  0FAC                     l2038:
  4763                           
  4764                           ;LCD_LIB.c: 159:         lcd_write(*str);
  4765  0FAC  087C               	movf	lcd_out@str,w
  4766  0FAD  0086               	movwf	6
  4767  0FAE  0187               	clrf	7
  4768  0FAF  0801               	movf	1,w
  4769  0FB0  318F  2706  318F   	fcall	_lcd_write
  4770  0FB3                     l2040:
  4771                           
  4772                           ;LCD_LIB.c: 160:         str++;
  4773  0FB3  3001               	movlw	1
  4774  0FB4  00FD               	movwf	??_lcd_out
  4775  0FB5  087D               	movf	??_lcd_out,w
  4776  0FB6  07FC               	addwf	lcd_out@str,f
  4777  0FB7                     l2042:
  4778                           
  4779                           ;LCD_LIB.c: 158:     while(*str){
  4780  0FB7  087C               	movf	lcd_out@str,w
  4781  0FB8  0086               	movwf	6
  4782  0FB9  0187               	clrf	7
  4783  0FBA  0801               	movf	1,w
  4784  0FBB  1D03               	btfss	3,2
  4785  0FBC  2FBE               	goto	u1561
  4786  0FBD  2FBF               	goto	u1560
  4787  0FBE                     u1561:
  4788  0FBE  2FAC               	goto	l2038
  4789  0FBF                     u1560:
  4790  0FBF                     l96:
  4791  0FBF  0008               	return
  4792  0FC0                     __end_of_lcd_out:
  4793                           
  4794                           	psect	text18
  4795  0F06                     __ptext18:	
  4796 ;; *************** function _lcd_write *****************
  4797 ;; Defined at:
  4798 ;;		line 71 in file "LCD_LIB.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  letra           1    wreg     unsigned char 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  letra           1    6[COMMON] unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;Total ram usage:        1 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 2
  4819 ;; This function calls:
  4820 ;;		__send_byte
  4821 ;; This function is called by:
  4822 ;;		_lcd_out
  4823 ;;		_lcd_puts
  4824 ;;		_lcd_custom_char
  4825 ;;		_lcd_char
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829  0F06                     _lcd_write:	
  4830                           ;psect for function _lcd_write
  4831                           
  4832                           
  4833                           ;incstack = 0
  4834                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4835                           ;lcd_write@letra stored from wreg
  4836  0F06  00F6               	movwf	lcd_write@letra
  4837  0F07                     l1962:
  4838                           
  4839                           ;LCD_LIB.c: 72:     _send_byte(letra,1);
  4840  0F07  01F2               	clrf	__send_byte@mode
  4841  0F08  0AF2               	incf	__send_byte@mode,f
  4842  0F09  0876               	movf	lcd_write@letra,w
  4843  0F0A  3180  205B  318F   	fcall	__send_byte
  4844  0F0D                     l36:
  4845  0F0D  0008               	return
  4846  0F0E                     __end_of_lcd_write:
  4847                           
  4848                           	psect	text19
  4849  00B7                     __ptext19:	
  4850 ;; *************** function _lcd_set_cursor *****************
  4851 ;; Defined at:
  4852 ;;		line 84 in file "LCD_LIB.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  row             1    wreg     unsigned char 
  4855 ;;  col             1    7[COMMON] unsigned char 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  row             1   10[COMMON] unsigned char 
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4867 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;Total ram usage:        4 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; Hardware stack levels required when called: 3
  4874 ;; This function calls:
  4875 ;;		_lcd_command
  4876 ;; This function is called by:
  4877 ;;		_lcd_out
  4878 ;;		_lcd_char
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882  00B7                     _lcd_set_cursor:	
  4883                           ;psect for function _lcd_set_cursor
  4884                           
  4885                           
  4886                           ;incstack = 0
  4887                           ; Regs used in _lcd_set_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4888                           ;lcd_set_cursor@row stored from wreg
  4889  00B7  00FA               	movwf	lcd_set_cursor@row
  4890  00B8                     l1964:
  4891                           
  4892                           ;LCD_LIB.c: 86:     switch(row){
  4893  00B8  28D7               	goto	l1976
  4894  00B9                     l1966:
  4895  00B9  0877               	movf	lcd_set_cursor@col,w
  4896  00BA  3E7F               	addlw	127
  4897  00BB  318E  26FF  3180   	fcall	_lcd_command
  4898  00BE  28ED               	goto	l55
  4899  00BF                     l1968:
  4900  00BF  0877               	movf	lcd_set_cursor@col,w
  4901  00C0  3EBF               	addlw	191
  4902  00C1  318E  26FF  3180   	fcall	_lcd_command
  4903  00C4  28ED               	goto	l55
  4904  00C5                     l1970:
  4905  00C5  0877               	movf	lcd_set_cursor@col,w
  4906  00C6  3E93               	addlw	147
  4907  00C7  318E  26FF  3180   	fcall	_lcd_command
  4908  00CA  28ED               	goto	l55
  4909  00CB                     l1972:
  4910  00CB  0877               	movf	lcd_set_cursor@col,w
  4911  00CC  3ED3               	addlw	211
  4912  00CD  318E  26FF  3180   	fcall	_lcd_command
  4913  00D0  28ED               	goto	l55
  4914  00D1                     l1974:
  4915                           
  4916                           ;LCD_LIB.c: 92:             lcd_command(0x80+col-1);
  4917  00D1  0877               	movf	lcd_set_cursor@col,w
  4918  00D2  3E7F               	addlw	127
  4919  00D3  318E  26FF  3180   	fcall	_lcd_command
  4920                           
  4921                           ;LCD_LIB.c: 93:     }
  4922  00D6  28ED               	goto	l55
  4923  00D7                     l1976:
  4924  00D7  087A               	movf	lcd_set_cursor@row,w
  4925  00D8  00F8               	movwf	??_lcd_set_cursor
  4926  00D9  01F9               	clrf	??_lcd_set_cursor+1
  4927                           
  4928                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4929                           ; Switch size 1, requested type "simple"
  4930                           ; Number of cases is 1, Range of values is 0 to 0
  4931                           ; switch strategies available:
  4932                           ; Name         Instructions Cycles
  4933                           ; simple_byte            4     3 (average)
  4934                           ; direct_byte            8     6 (fixed)
  4935                           ; jumptable            260     6 (fixed)
  4936                           ;	Chosen strategy is simple_byte
  4937  00DA  0879               	movf	??_lcd_set_cursor+1,w
  4938  00DB  3A00               	xorlw	0	; case 0
  4939  00DC  1903               	skipnz
  4940  00DD  28DF               	goto	l2238
  4941  00DE  28D1               	goto	l1974
  4942  00DF                     l2238:
  4943                           
  4944                           ; Switch size 1, requested type "simple"
  4945                           ; Number of cases is 4, Range of values is 1 to 4
  4946                           ; switch strategies available:
  4947                           ; Name         Instructions Cycles
  4948                           ; simple_byte           13     7 (average)
  4949                           ; direct_byte           17     9 (fixed)
  4950                           ; jumptable            263     9 (fixed)
  4951                           ;	Chosen strategy is simple_byte
  4952  00DF  0878               	movf	??_lcd_set_cursor,w
  4953  00E0  3A01               	xorlw	1	; case 1
  4954  00E1  1903               	skipnz
  4955  00E2  28B9               	goto	l1966
  4956  00E3  3A03               	xorlw	3	; case 2
  4957  00E4  1903               	skipnz
  4958  00E5  28BF               	goto	l1968
  4959  00E6  3A01               	xorlw	1	; case 3
  4960  00E7  1903               	skipnz
  4961  00E8  28C5               	goto	l1970
  4962  00E9  3A07               	xorlw	7	; case 4
  4963  00EA  1903               	skipnz
  4964  00EB  28CB               	goto	l1972
  4965  00EC  28D1               	goto	l1974
  4966  00ED                     l55:
  4967  00ED  0008               	return
  4968  00EE                     __end_of_lcd_set_cursor:
  4969                           
  4970                           	psect	text20
  4971  020F                     __ptext20:	
  4972 ;; *************** function _lcd_init *****************
  4973 ;; Defined at:
  4974 ;;		line 32 in file "LCD_LIB.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;		None
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      void 
  4981 ;; Registers used:
  4982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4992 ;;Total ram usage:        1 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; Hardware stack levels required when called: 3
  4995 ;; This function calls:
  4996 ;;		__write_nibble
  4997 ;;		_lcd_command
  4998 ;; This function is called by:
  4999 ;;		_main
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003  020F                     _lcd_init:	
  5004                           ;psect for function _lcd_init
  5005                           
  5006  020F                     l1994:	
  5007                           ;incstack = 0
  5008                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5009                           
  5010                           
  5011                           ;LCD_LIB.c: 34:     ANSELD &= ~( (1<<0) |
  5012  020F  300A               	movlw	10
  5013  0210  00F7               	movwf	??_lcd_init
  5014  0211  0877               	movf	??_lcd_init,w
  5015  0212  0023               	movlb	3	; select bank3
  5016  0213  058F               	andwf	15,f	;volatile
  5017                           
  5018                           ;LCD_LIB.c: 41:     TRISD &= ~( (1<<0) |
  5019  0214  300A               	movlw	10
  5020  0215  00F7               	movwf	??_lcd_init
  5021  0216  0877               	movf	??_lcd_init,w
  5022  0217  0021               	movlb	1	; select bank1
  5023  0218  058F               	andwf	15,f	;volatile
  5024                           
  5025                           ;LCD_LIB.c: 48:     LATD &= ~( (1<<0)|
  5026  0219  300A               	movlw	10
  5027  021A  00F7               	movwf	??_lcd_init
  5028  021B  0877               	movf	??_lcd_init,w
  5029  021C  0022               	movlb	2	; select bank2
  5030  021D  058F               	andwf	15,f	;volatile
  5031  021E                     l1996:
  5032                           
  5033                           ;LCD_LIB.c: 55:     _delay((unsigned long)((15)*(8000000UL/4000.0)));
  5034  021E  3027               	movlw	39
  5035  021F  00F7               	movwf	??_lcd_init
  5036  0220  30F5               	movlw	245
  5037  0221                     u1627:
  5038  0221  0B89               	decfsz	9,f
  5039  0222  2A21               	goto	u1627
  5040  0223  0BF7               	decfsz	??_lcd_init,f
  5041  0224  2A21               	goto	u1627
  5042  0225  0000               	nop
  5043  0226                     l1998:
  5044                           
  5045                           ;LCD_LIB.c: 56:     _write_nibble(0x03);
  5046  0226  3003               	movlw	3
  5047  0227  3180  20EE  3182   	fcall	__write_nibble
  5048  022A                     l2000:
  5049                           
  5050                           ;LCD_LIB.c: 57:     _delay((unsigned long)((5)*(8000000UL/4000.0)));
  5051  022A  300D               	movlw	13
  5052  022B  00F7               	movwf	??_lcd_init
  5053  022C  30FC               	movlw	252
  5054  022D                     u1637:
  5055  022D  0B89               	decfsz	9,f
  5056  022E  2A2D               	goto	u1637
  5057  022F  0BF7               	decfsz	??_lcd_init,f
  5058  0230  2A2D               	goto	u1637
  5059  0231                     l2002:
  5060                           
  5061                           ;LCD_LIB.c: 58:     _write_nibble(0x03);
  5062  0231  3003               	movlw	3
  5063  0232  3180  20EE  3182   	fcall	__write_nibble
  5064  0235                     l2004:
  5065                           
  5066                           ;LCD_LIB.c: 59:     _delay((unsigned long)((100)*(8000000UL/4000000.0)));
  5067  0235  3042               	movlw	66
  5068  0236                     u1647:
  5069  0236  0B89               	decfsz	9,f
  5070  0237  2A36               	goto	u1647
  5071  0238  3200               	nop2
  5072  0239                     l2006:
  5073                           
  5074                           ;LCD_LIB.c: 60:     _write_nibble(0x03);
  5075  0239  3003               	movlw	3
  5076  023A  3180  20EE  3182   	fcall	__write_nibble
  5077  023D                     l2008:
  5078                           
  5079                           ;LCD_LIB.c: 61:     _write_nibble(0x02);
  5080  023D  3002               	movlw	2
  5081  023E  3180  20EE  3182   	fcall	__write_nibble
  5082  0241                     l2010:
  5083                           
  5084                           ;LCD_LIB.c: 63:     lcd_command(0x20 | 0x00 | 0x08);
  5085  0241  3028               	movlw	40
  5086  0242  318E  26FF  3182   	fcall	_lcd_command
  5087  0245                     l2012:
  5088                           
  5089                           ;LCD_LIB.c: 64:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  5090  0245  3006               	movlw	6
  5091  0246  00F7               	movwf	??_lcd_init
  5092  0247  3030               	movlw	48
  5093  0248                     u1657:
  5094  0248  0B89               	decfsz	9,f
  5095  0249  2A48               	goto	u1657
  5096  024A  0BF7               	decfsz	??_lcd_init,f
  5097  024B  2A48               	goto	u1657
  5098  024C  3200               	nop2
  5099  024D                     l2014:
  5100                           
  5101                           ;LCD_LIB.c: 65:     _lcd_params = 0x04 | 0x02 | 0x01;
  5102  024D  3007               	movlw	7
  5103  024E  00F7               	movwf	??_lcd_init
  5104  024F  0877               	movf	??_lcd_init,w
  5105  0250  0020               	movlb	0	; select bank0
  5106  0251  00EF               	movwf	__lcd_params
  5107  0252                     l2016:
  5108                           
  5109                           ;LCD_LIB.c: 66:     lcd_command(0x08 | _lcd_params);
  5110  0252  086F               	movf	__lcd_params,w
  5111  0253  3808               	iorlw	8
  5112  0254  318E  26FF  3182   	fcall	_lcd_command
  5113  0257                     l2018:
  5114                           
  5115                           ;LCD_LIB.c: 67:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  5116  0257  3006               	movlw	6
  5117  0258  00F7               	movwf	??_lcd_init
  5118  0259  3030               	movlw	48
  5119  025A                     u1667:
  5120  025A  0B89               	decfsz	9,f
  5121  025B  2A5A               	goto	u1667
  5122  025C  0BF7               	decfsz	??_lcd_init,f
  5123  025D  2A5A               	goto	u1667
  5124  025E  3200               	nop2
  5125  025F                     l2020:
  5126                           
  5127                           ;LCD_LIB.c: 68:     lcd_command(0x01);
  5128  025F  3001               	movlw	1
  5129  0260  318E  26FF  3182   	fcall	_lcd_command
  5130  0263                     l2022:
  5131                           
  5132                           ;LCD_LIB.c: 69:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
  5133  0263  3006               	movlw	6
  5134  0264  00F7               	movwf	??_lcd_init
  5135  0265  3030               	movlw	48
  5136  0266                     u1677:
  5137  0266  0B89               	decfsz	9,f
  5138  0267  2A66               	goto	u1677
  5139  0268  0BF7               	decfsz	??_lcd_init,f
  5140  0269  2A66               	goto	u1677
  5141  026A  3200               	nop2
  5142  026B                     l33:
  5143  026B  0008               	return
  5144  026C                     __end_of_lcd_init:
  5145                           
  5146                           	psect	text21
  5147  0F1D                     __ptext21:	
  5148 ;; *************** function _lcd_disable_cursor *****************
  5149 ;; Defined at:
  5150 ;;		line 132 in file "LCD_LIB.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;		None
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;Total ram usage:        1 bytes
  5169 ;; Hardware stack levels used: 1
  5170 ;; Hardware stack levels required when called: 3
  5171 ;; This function calls:
  5172 ;;		_lcd_command
  5173 ;; This function is called by:
  5174 ;;		_main
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178  0F1D                     _lcd_disable_cursor:	
  5179                           ;psect for function _lcd_disable_cursor
  5180                           
  5181  0F1D                     l2030:	
  5182                           ;incstack = 0
  5183                           ; Regs used in _lcd_disable_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5184                           
  5185                           
  5186                           ;LCD_LIB.c: 133:     _lcd_params &= ~0x02;
  5187  0F1D  30FD               	movlw	253
  5188  0F1E  00F7               	movwf	??_lcd_disable_cursor
  5189  0F1F  0877               	movf	??_lcd_disable_cursor,w
  5190  0F20  0020               	movlb	0	; select bank0
  5191  0F21  05EF               	andwf	__lcd_params,f
  5192  0F22                     l2032:
  5193                           
  5194                           ;LCD_LIB.c: 134:     lcd_command(0x08 | _lcd_params);
  5195  0F22  086F               	movf	__lcd_params,w
  5196  0F23  3808               	iorlw	8
  5197  0F24  318E  26FF  318F   	fcall	_lcd_command
  5198  0F27                     l2034:
  5199                           
  5200                           ;LCD_LIB.c: 135:     _delay((unsigned long)((37)*(8000000UL/4000000.0)));
  5201  0F27  3018               	movlw	24
  5202  0F28                     u1687:
  5203  0F28  0B89               	decfsz	9,f
  5204  0F29  2F28               	goto	u1687
  5205  0F2A  3200               	nop2
  5206  0F2B                     l79:
  5207  0F2B  0008               	return
  5208  0F2C                     __end_of_lcd_disable_cursor:
  5209                           
  5210                           	psect	text22
  5211  0F0E                     __ptext22:	
  5212 ;; *************** function _lcd_disable_blink *****************
  5213 ;; Defined at:
  5214 ;;		line 121 in file "LCD_LIB.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      void 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;Total ram usage:        1 bytes
  5233 ;; Hardware stack levels used: 1
  5234 ;; Hardware stack levels required when called: 3
  5235 ;; This function calls:
  5236 ;;		_lcd_command
  5237 ;; This function is called by:
  5238 ;;		_main
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242  0F0E                     _lcd_disable_blink:	
  5243                           ;psect for function _lcd_disable_blink
  5244                           
  5245  0F0E                     l2024:	
  5246                           ;incstack = 0
  5247                           ; Regs used in _lcd_disable_blink: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5248                           
  5249                           
  5250                           ;LCD_LIB.c: 122:     _lcd_params &= ~0x01;
  5251  0F0E  30FE               	movlw	254
  5252  0F0F  00F7               	movwf	??_lcd_disable_blink
  5253  0F10  0877               	movf	??_lcd_disable_blink,w
  5254  0F11  0020               	movlb	0	; select bank0
  5255  0F12  05EF               	andwf	__lcd_params,f
  5256  0F13                     l2026:
  5257                           
  5258                           ;LCD_LIB.c: 123:     lcd_command(0x08 | _lcd_params);
  5259  0F13  086F               	movf	__lcd_params,w
  5260  0F14  3808               	iorlw	8
  5261  0F15  318E  26FF  318F   	fcall	_lcd_command
  5262  0F18                     l2028:
  5263                           
  5264                           ;LCD_LIB.c: 124:     _delay((unsigned long)((37)*(8000000UL/4000000.0)));
  5265  0F18  3018               	movlw	24
  5266  0F19                     u1697:
  5267  0F19  0B89               	decfsz	9,f
  5268  0F1A  2F19               	goto	u1697
  5269  0F1B  3200               	nop2
  5270  0F1C                     l73:
  5271  0F1C  0008               	return
  5272  0F1D                     __end_of_lcd_disable_blink:
  5273                           
  5274                           	psect	text23
  5275  0EFF                     __ptext23:	
  5276 ;; *************** function _lcd_command *****************
  5277 ;; Defined at:
  5278 ;;		line 74 in file "LCD_LIB.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  cmd             1    wreg     unsigned char 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  cmd             1    6[COMMON] unsigned char 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5295 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5296 ;;Total ram usage:        1 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; Hardware stack levels required when called: 2
  5299 ;; This function calls:
  5300 ;;		__send_byte
  5301 ;; This function is called by:
  5302 ;;		_lcd_init
  5303 ;;		_lcd_set_cursor
  5304 ;;		_lcd_disable_blink
  5305 ;;		_lcd_disable_cursor
  5306 ;;		_lcd_clear
  5307 ;;		_lcd_return_home
  5308 ;;		_lcd_on
  5309 ;;		_lcd_off
  5310 ;;		_lcd_enable_blink
  5311 ;;		_lcd_enable_cursor
  5312 ;;		_lcd_scroll_left
  5313 ;;		_lcd_scroll_right
  5314 ;;		_lcd_custom_char
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318  0EFF                     _lcd_command:	
  5319                           ;psect for function _lcd_command
  5320                           
  5321                           
  5322                           ;incstack = 0
  5323                           ; Regs used in _lcd_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5324                           ;lcd_command@cmd stored from wreg
  5325  0EFF  00F6               	movwf	lcd_command@cmd
  5326  0F00                     l1870:
  5327                           
  5328                           ;LCD_LIB.c: 75:     _send_byte(cmd,0);
  5329  0F00  01F2               	clrf	__send_byte@mode
  5330  0F01  0876               	movf	lcd_command@cmd,w
  5331  0F02  3180  205B  318E   	fcall	__send_byte
  5332  0F05                     l39:
  5333  0F05  0008               	return
  5334  0F06                     __end_of_lcd_command:
  5335                           
  5336                           	psect	text24
  5337  005B                     __ptext24:	
  5338 ;; *************** function __send_byte *****************
  5339 ;; Defined at:
  5340 ;;		line 22 in file "LCD_LIB.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  value           1    wreg     unsigned char 
  5343 ;;  mode            1    2[COMMON] unsigned char 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  value           1    5[COMMON] unsigned char 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5355 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;Total ram usage:        4 bytes
  5360 ;; Hardware stack levels used: 1
  5361 ;; Hardware stack levels required when called: 1
  5362 ;; This function calls:
  5363 ;;		__write_nibble
  5364 ;; This function is called by:
  5365 ;;		_lcd_write
  5366 ;;		_lcd_command
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370  005B                     __send_byte:	
  5371                           ;psect for function __send_byte
  5372                           
  5373                           
  5374                           ;incstack = 0
  5375                           ; Regs used in __send_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5376                           ;__send_byte@value stored from wreg
  5377  005B  00F5               	movwf	__send_byte@value
  5378  005C                     l1764:
  5379                           
  5380                           ;LCD_LIB.c: 24:     switch(mode){
  5381  005C  2866               	goto	l1770
  5382  005D                     l1766:
  5383  005D  30FE               	movlw	254
  5384  005E  00F3               	movwf	??__send_byte
  5385  005F  0873               	movf	??__send_byte,w
  5386  0060  0022               	movlb	2	; select bank2
  5387  0061  058F               	andwf	15,f	;volatile
  5388  0062  2876               	goto	l1772
  5389  0063                     l29:	
  5390                           ;LCD_LIB.c: 26:         case 1: LATD |= (1<<0); break;
  5391                           
  5392  0063  0022               	movlb	2	; select bank2
  5393  0064  140F               	bsf	15,0	;volatile
  5394  0065  2876               	goto	l1772
  5395  0066                     l1770:
  5396  0066  0872               	movf	__send_byte@mode,w
  5397  0067  00F3               	movwf	??__send_byte
  5398  0068  01F4               	clrf	??__send_byte+1
  5399                           
  5400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5401                           ; Switch size 1, requested type "simple"
  5402                           ; Number of cases is 1, Range of values is 0 to 0
  5403                           ; switch strategies available:
  5404                           ; Name         Instructions Cycles
  5405                           ; simple_byte            4     3 (average)
  5406                           ; direct_byte            8     6 (fixed)
  5407                           ; jumptable            260     6 (fixed)
  5408                           ;	Chosen strategy is simple_byte
  5409  0069  0874               	movf	??__send_byte+1,w
  5410  006A  3A00               	xorlw	0	; case 0
  5411  006B  1903               	skipnz
  5412  006C  286E               	goto	l2240
  5413  006D  2876               	goto	l1772
  5414  006E                     l2240:
  5415                           
  5416                           ; Switch size 1, requested type "simple"
  5417                           ; Number of cases is 2, Range of values is 0 to 1
  5418                           ; switch strategies available:
  5419                           ; Name         Instructions Cycles
  5420                           ; simple_byte            7     4 (average)
  5421                           ; direct_byte           10     6 (fixed)
  5422                           ; jumptable            260     6 (fixed)
  5423                           ;	Chosen strategy is simple_byte
  5424  006E  0873               	movf	??__send_byte,w
  5425  006F  3A00               	xorlw	0	; case 0
  5426  0070  1903               	skipnz
  5427  0071  285D               	goto	l1766
  5428  0072  3A01               	xorlw	1	; case 1
  5429  0073  1903               	skipnz
  5430  0074  2863               	goto	l29
  5431  0075  2876               	goto	l1772
  5432  0076                     l1772:
  5433                           
  5434                           ;LCD_LIB.c: 28:     _write_nibble(value>>4);
  5435  0076  0875               	movf	__send_byte@value,w
  5436  0077  00F3               	movwf	??__send_byte
  5437  0078  3004               	movlw	4
  5438  0079                     u1255:
  5439  0079  36F3               	lsrf	??__send_byte,f
  5440  007A  0B89               	decfsz	9,f
  5441  007B  2879               	goto	u1255
  5442  007C  0873               	movf	??__send_byte,w
  5443  007D  3180  20EE  3180   	fcall	__write_nibble
  5444                           
  5445                           ;LCD_LIB.c: 29:     _write_nibble(value&0x0F);
  5446  0080  0875               	movf	__send_byte@value,w
  5447  0081  390F               	andlw	15
  5448  0082  3180  20EE  3180   	fcall	__write_nibble
  5449  0085                     l30:
  5450  0085  0008               	return
  5451  0086                     __end_of__send_byte:
  5452                           
  5453                           	psect	text25
  5454  00EE                     __ptext25:	
  5455 ;; *************** function __write_nibble *****************
  5456 ;; Defined at:
  5457 ;;		line 9 in file "LCD_LIB.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  nibble          1    wreg     unsigned char 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  nibble          1    1[COMMON] unsigned char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;Total ram usage:        2 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		__send_byte
  5481 ;;		_lcd_init
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485  00EE                     __write_nibble:	
  5486                           ;psect for function __write_nibble
  5487                           
  5488                           
  5489                           ;incstack = 0
  5490                           ; Regs used in __write_nibble: [wreg+status,2+status,0]
  5491                           ;__write_nibble@nibble stored from wreg
  5492  00EE  00F1               	movwf	__write_nibble@nibble
  5493  00EF                     l1624:
  5494                           
  5495                           ;LCD_LIB.c: 10:     if( (nibble & 0x01) == 0) LATD &= ~(1<<4); else LATD |= (1<<4);
  5496  00EF  1871               	btfsc	__write_nibble@nibble,0
  5497  00F0  28F2               	goto	u871
  5498  00F1  28F3               	goto	u870
  5499  00F2                     u871:
  5500  00F2  28F9               	goto	l15
  5501  00F3                     u870:
  5502  00F3                     l1626:
  5503  00F3  30EF               	movlw	239
  5504  00F4  00F0               	movwf	??__write_nibble
  5505  00F5  0870               	movf	??__write_nibble,w
  5506  00F6  0022               	movlb	2	; select bank2
  5507  00F7  058F               	andwf	15,f	;volatile
  5508  00F8  28FB               	goto	l16
  5509  00F9                     l15:
  5510  00F9  0022               	movlb	2	; select bank2
  5511  00FA  160F               	bsf	15,4	;volatile
  5512  00FB                     l16:
  5513                           
  5514                           ;LCD_LIB.c: 11:     if( (nibble & 0x02) == 0) LATD &= ~(1<<5); else LATD |= (1<<5);
  5515  00FB  18F1               	btfsc	__write_nibble@nibble,1
  5516  00FC  28FE               	goto	u881
  5517  00FD  28FF               	goto	u880
  5518  00FE                     u881:
  5519  00FE  2904               	goto	l17
  5520  00FF                     u880:
  5521  00FF                     l1628:
  5522  00FF  30DF               	movlw	223
  5523  0100  00F0               	movwf	??__write_nibble
  5524  0101  0870               	movf	??__write_nibble,w
  5525  0102  058F               	andwf	15,f	;volatile
  5526  0103  2905               	goto	l18
  5527  0104                     l17:
  5528  0104  168F               	bsf	15,5	;volatile
  5529  0105                     l18:
  5530                           
  5531                           ;LCD_LIB.c: 12:     if( (nibble & 0x04) == 0) LATD &= ~(1<<6); else LATD |= (1<<6);
  5532  0105  1971               	btfsc	__write_nibble@nibble,2
  5533  0106  2908               	goto	u891
  5534  0107  2909               	goto	u890
  5535  0108                     u891:
  5536  0108  290E               	goto	l19
  5537  0109                     u890:
  5538  0109                     l1630:
  5539  0109  30BF               	movlw	191
  5540  010A  00F0               	movwf	??__write_nibble
  5541  010B  0870               	movf	??__write_nibble,w
  5542  010C  058F               	andwf	15,f	;volatile
  5543  010D  290F               	goto	l20
  5544  010E                     l19:
  5545  010E  170F               	bsf	15,6	;volatile
  5546  010F                     l20:
  5547                           
  5548                           ;LCD_LIB.c: 13:     if( (nibble & 0x08) == 0) LATD &= ~(1<<7); else LATD |= (1<<7);
  5549  010F  19F1               	btfsc	__write_nibble@nibble,3
  5550  0110  2912               	goto	u901
  5551  0111  2913               	goto	u900
  5552  0112                     u901:
  5553  0112  2918               	goto	l21
  5554  0113                     u900:
  5555  0113                     l1632:
  5556  0113  307F               	movlw	127
  5557  0114  00F0               	movwf	??__write_nibble
  5558  0115  0870               	movf	??__write_nibble,w
  5559  0116  058F               	andwf	15,f	;volatile
  5560  0117  2919               	goto	l1634
  5561  0118                     l21:
  5562  0118  178F               	bsf	15,7	;volatile
  5563  0119                     l1634:
  5564                           
  5565                           ;LCD_LIB.c: 15:     LATD &= ~(1<<2);
  5566  0119  30FB               	movlw	251
  5567  011A  00F0               	movwf	??__write_nibble
  5568  011B  0870               	movf	??__write_nibble,w
  5569  011C  058F               	andwf	15,f	;volatile
  5570  011D                     l1636:
  5571                           
  5572                           ;LCD_LIB.c: 16:     LATD |= (1<<2);
  5573  011D  150F               	bsf	15,2	;volatile
  5574                           
  5575                           ;LCD_LIB.c: 17:     LATD &= ~(1<<2);
  5576  011E  30FB               	movlw	251
  5577  011F  00F0               	movwf	??__write_nibble
  5578  0120  0870               	movf	??__write_nibble,w
  5579  0121  058F               	andwf	15,f	;volatile
  5580  0122                     l1638:
  5581                           
  5582                           ;LCD_LIB.c: 19:     _delay((unsigned long)((300)*(8000000UL/4000000.0)));
  5583  0122  30C8               	movlw	200
  5584  0123                     u1707:
  5585  0123  0B89               	decfsz	9,f
  5586  0124  2923               	goto	u1707
  5587  0125                     l23:
  5588  0125  0008               	return
  5589  0126                     __end_of__write_nibble:
  5590                           
  5591                           	psect	text26
  5592  0F40                     __ptext26:	
  5593 ;; *************** function _ADC_Read *****************
  5594 ;; Defined at:
  5595 ;;		line 11 in file "ADC_LIB.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  ch              1    wreg     unsigned char 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  ch              1    3[COMMON] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  2    0[COMMON] int 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5613 ;;Total ram usage:        4 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		_main
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622  0F40                     _ADC_Read:	
  5623                           ;psect for function _ADC_Read
  5624                           
  5625                           
  5626                           ;incstack = 0
  5627                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  5628                           ;ADC_Read@ch stored from wreg
  5629  0F40  00F3               	movwf	ADC_Read@ch
  5630  0F41                     l2052:
  5631                           
  5632                           ;ADC_LIB.c: 12:     ADCON0bits.CHS = ch&0b11111;
  5633  0F41  0873               	movf	ADC_Read@ch,w
  5634  0F42  391F               	andlw	31
  5635  0F43  00F2               	movwf	??_ADC_Read
  5636  0F44  0DF2               	rlf	??_ADC_Read,f
  5637  0F45  0DF2               	rlf	??_ADC_Read,f
  5638  0F46  0021               	movlb	1	; select bank1
  5639  0F47  081D               	movf	29,w	;volatile
  5640  0F48  0672               	xorwf	??_ADC_Read,w
  5641  0F49  3983               	andlw	-125
  5642  0F4A  0672               	xorwf	??_ADC_Read,w
  5643  0F4B  009D               	movwf	29	;volatile
  5644  0F4C                     l2054:
  5645                           
  5646                           ;ADC_LIB.c: 13:     ADCON0bits.GO_nDONE = 1;
  5647  0F4C  149D               	bsf	29,1	;volatile
  5648  0F4D                     l145:	
  5649                           ;ADC_LIB.c: 14:     while(ADCON0bits.GO_nDONE == 1);
  5650                           
  5651  0F4D  189D               	btfsc	29,1	;volatile
  5652  0F4E  2F50               	goto	u1571
  5653  0F4F  2F51               	goto	u1570
  5654  0F50                     u1571:
  5655  0F50  2F4D               	goto	l145
  5656  0F51                     u1570:
  5657  0F51                     l2056:
  5658                           
  5659                           ;ADC_LIB.c: 15:     return (ADRESH<<8 | ADRESL);
  5660  0F51  081C               	movf	28,w	;volatile
  5661  0F52  00F1               	movwf	?_ADC_Read+1
  5662  0F53  081B               	movf	27,w	;volatile
  5663  0F54  00F0               	movwf	?_ADC_Read
  5664  0F55                     l148:
  5665  0F55  0008               	return
  5666  0F56                     __end_of_ADC_Read:
  5667                           
  5668                           	psect	text27
  5669  0004                     __ptext27:	
  5670 ;; *************** function _ADC_Init *****************
  5671 ;; Defined at:
  5672 ;;		line 3 in file "ADC_LIB.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2, status,0
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5690 ;;Total ram usage:        0 bytes
  5691 ;; Hardware stack levels used: 1
  5692 ;; This function calls:
  5693 ;;		Nothing
  5694 ;; This function is called by:
  5695 ;;		_main
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699  0004                     _ADC_Init:	
  5700                           ;psect for function _ADC_Init
  5701                           
  5702  0004                     l2044:	
  5703                           ;incstack = 0
  5704                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
  5705                           
  5706                           
  5707                           ;ADC_LIB.c: 4:     ADCON1bits.ADCS = 0b110;
  5708  0004  0021               	movlb	1	; select bank1
  5709  0005  081E               	movf	30,w	;volatile
  5710  0006  398F               	andlw	-113
  5711  0007  3860               	iorlw	96
  5712  0008  009E               	movwf	30	;volatile
  5713  0009                     l2046:
  5714                           
  5715                           ;ADC_LIB.c: 5:     ADCON1bits.ADNREF = 0;
  5716  0009  111E               	bcf	30,2	;volatile
  5717                           
  5718                           ;ADC_LIB.c: 6:     ADCON1bits.ADPREF = 0b00;
  5719  000A  30FC               	movlw	-4
  5720  000B  059E               	andwf	30,f	;volatile
  5721  000C                     l2048:
  5722                           
  5723                           ;ADC_LIB.c: 7:     ADCON0bits.ADON = 1;
  5724  000C  141D               	bsf	29,0	;volatile
  5725  000D                     l2050:
  5726                           
  5727                           ;ADC_LIB.c: 8:     ADCON1bits.ADFM = 1;
  5728  000D  179E               	bsf	30,7	;volatile
  5729  000E                     l142:
  5730  000E  0008               	return
  5731  000F                     __end_of_ADC_Init:
  5732  007E                     btemp	set	126	;btemp
  5733  007E                     wtemp0	set	126
  5734                           
  5735                           	psect	idloc
  5736                           
  5737                           ;Config register IDLOC0 @ 0x8000
  5738                           ;	unspecified, using default values
  5739  8000                     	org	32768
  5740  8000  3FFF               	dw	16383
  5741                           
  5742                           ;Config register IDLOC1 @ 0x8001
  5743                           ;	unspecified, using default values
  5744  8001                     	org	32769
  5745  8001  3FFF               	dw	16383
  5746                           
  5747                           ;Config register IDLOC2 @ 0x8002
  5748                           ;	unspecified, using default values
  5749  8002                     	org	32770
  5750  8002  3FFF               	dw	16383
  5751                           
  5752                           ;Config register IDLOC3 @ 0x8003
  5753                           ;	unspecified, using default values
  5754  8003                     	org	32771
  5755  8003  3FFF               	dw	16383
  5756                           
  5757                           	psect	config
  5758                           
  5759                           ;Config register CONFIG1 @ 0x8007
  5760                           ;	Oscillator Selection
  5761                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  5762                           ;	Watchdog Timer Enable
  5763                           ;	WDTE = OFF, WDT disabled
  5764                           ;	Power-up Timer Enable
  5765                           ;	PWRTE = OFF, PWRT disabled
  5766                           ;	MCLR Pin Function Select
  5767                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5768                           ;	Flash Program Memory Code Protection
  5769                           ;	CP = OFF, Program memory code protection is disabled
  5770                           ;	Data Memory Code Protection
  5771                           ;	CPD = OFF, Data memory code protection is disabled
  5772                           ;	Brown-out Reset Enable
  5773                           ;	BOREN = OFF, Brown-out Reset disabled
  5774                           ;	Clock Out Enable
  5775                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5776                           ;	Internal/External Switchover
  5777                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5778                           ;	Fail-Safe Clock Monitor Enable
  5779                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5780  8007                     	org	32775
  5781  8007  39E2               	dw	14818
  5782                           
  5783                           ;Config register CONFIG2 @ 0x8008
  5784                           ;	Flash Memory Self-Write Protection
  5785                           ;	WRT = OFF, Write protection off
  5786                           ;	Voltage Regulator Capacitor Enable
  5787                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  5788                           ;	PLL Enable
  5789                           ;	PLLEN = OFF, 4x PLL disabled
  5790                           ;	Stack Overflow/Underflow Reset Enable
  5791                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5792                           ;	Brown-out Reset Voltage Selection
  5793                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5794                           ;	Low-Voltage Programming Enable
  5795                           ;	LVP = ON, Low-voltage programming enabled
  5796  8008                     	org	32776
  5797  8008  3EFF               	dw	16127

Data Sizes:
    Strings     13
    Constant    0
    Data        20
    BSS         43
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      80
    BANK1            80     12      72
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> txtLCD(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S732$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S732$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    lcd_out@str	PTR unsigned char  size(1) Largest target is 20
		 -> txtLCD(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_lcd_out
    _main->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _lcd_out->_lcd_set_cursor
    _lcd_write->__send_byte
    _lcd_set_cursor->_lcd_command
    _lcd_init->_lcd_command
    _lcd_disable_cursor->_lcd_command
    _lcd_disable_blink->_lcd_command
    _lcd_command->__send_byte
    __send_byte->__write_nibble

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9968
                                             76 BANK0      1     1      0
                           _ADC_Init
                           _ADC_Read
                  _lcd_disable_blink
                 _lcd_disable_cursor
                           _lcd_init
                            _lcd_out
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    7693
                                             13 COMMON     1     1      0
                                             72 BANK0      4     0      4
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    7383
                                             64 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    7053
                                             46 BANK0     18    16      2
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1013
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_out                                              4     2      2    1181
                                             11 COMMON     3     1      2
                                              0 BANK0      1     1      0
                     _lcd_set_cursor
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0     328
                                              6 COMMON     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       4     3      1     612
                                              7 COMMON     4     3      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     416
                                              7 COMMON     1     1      0
                      __write_nibble
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_disable_cursor                                   1     1      0     328
                                              7 COMMON     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_disable_blink                                    1     1      0     328
                                              7 COMMON     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          1     1      0     328
                                              6 COMMON     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (3) __send_byte                                           4     3      1     306
                                              2 COMMON     4     3      1
                      __write_nibble
 ---------------------------------------------------------------------------------
 (4) __write_nibble                                        2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _lcd_disable_blink
     _lcd_command
       __send_byte
         __write_nibble
   _lcd_disable_cursor
     _lcd_command
   _lcd_init
     __write_nibble
     _lcd_command
   _lcd_out
     _lcd_set_cursor
       _lcd_command
     _lcd_write
       __send_byte
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      C      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A6      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Oct 05 20:33:30 2023

                        l20 010F                          l21 0118                          l30 0085  
                        l23 0125                          l15 00F9                          l16 00FB  
                        l17 0104                          l33 026B                          l18 0105  
                        l19 010E                          l36 0F0D                          l29 0063  
                        l39 0F05                          l55 00ED                          l73 0F1C  
                        l79 0F2B                          l96 0FBF         ___wmul@multiplicand 0072  
                       l300 0FDE                         l142 000E                         l145 0F4D  
                       l411 03D8                         l148 0F55                         l412 03E9  
                       l800 0534                         l801 053E                         l298 0FCA  
                       l900 0FFF                         l805 055C                         l398 04D9  
                       l806 0572                         l830 067F                         l399 04EA  
                       l823 0654                         l832 0689                         l809 05E1  
                       l833 068B                         l761 0032                         l850 07E5  
                       l834 068D                         l915 01B8                         l923 005A  
                       l835 068F                         l932 0F86                         l861 0FA0  
                       l837 06C0                         l926 0EF2                         l864 0FA0  
                       l792 01D3                         l857 00B6                         l795 01F5  
                       l892 0F6D                         l797 020E                         l878 029A  
                       l889 02FF                         u810 016C                         u811 016B  
                       u900 0113                         u820 0171                         u901 0112  
                       u821 0170                         u910 0FC6                         u830 0180  
                       u911 0FC5                         u831 017F                         u840 019E  
                       u841 019D                         u850 005A                         u851 0059  
                       u940 0FDA                         u860 0F80                         u941 0FD9  
                       u925 0FCB                         u845 019A                         u861 0F7F  
                       u870 00F3                         u950 03F5                         u871 00F2  
                       u935 0FD0                         u951 03F4                         u880 00FF  
                       u881 00FE                         u890 0109                         u970 0420  
                       u891 0108                         u971 041F                         u990 044A  
                       _abs 0F87                         _pad 01B9                         wreg 0009  
           ?_lcd_set_cursor 0077                        l2000 022A                        l2010 0241  
                      l2002 0231                        ?_abs 0073                        l2020 025F  
                      l2012 0245                        l2004 0235                        l2030 0F1D  
                      l2022 0263                        l2014 024D                        l2006 0239  
                      l2024 0F0E                        l2032 0F22                        l2016 0252  
                      l2008 023D                        l2040 0FB3                        l2050 000D  
                      l2026 0F13                        l2034 0F27                        l2018 0257  
                      l2042 0FB7                        l2044 0004                        l2052 0F41  
                      l2028 0F18                        l2036 0FA3                        l2060 0011  
                      l2140 0126                        l2046 0009                        l2054 0F4C  
                      l2038 0FAC                        l2062 0019                        l2150 0150  
                      l2142 012A                        l2048 000C                        l2056 0F51  
                      l2240 006E                        l1600 019E                        l2064 001B  
                      l2152 015B                        l2144 0133                        l1602 01AF  
                      l1610 0046                        l2234 06A9                        l2066 001D  
                      l2146 0136                        l2236 02AB                        l1700 0336  
                      l1612 004B                        l1620 0F80                        l2068 002A  
                      l2148 013F                        l1630 0109                        l2238 00DF  
                      l1710 0371                        l1702 0355                        l1606 0035  
                      l1614 0F6F                        l1632 0113                        l1624 00EF  
                      l1640 0FC0                        l1720 03BA                        l1712 0375  
                      l1704 0362                        l1608 0038                        l1616 0F74  
                      l1800 0579                        l1634 0119                        l1626 00F3  
                      l1650 0FDA                        l1642 0FC2                        l1714 0397  
                      l1706 0365                        l1618 0F78                        l1730 01D1  
                      l1722 01BB                        l1810 05EF                        l1802 057E  
                      l1636 011D                        l1628 00FF                        l1644 0FC6  
                      l1660 0416                        l1716 03A7                        l1708 036D  
                      l1740 0202                        l1732 01D6                        l1724 01BF  
                      l1820 0623                        l1812 05FC                        l1804 05AC  
                      l1900 06C4                        l1638 0122                        l1646 0FCF  
                      l1670 045A                        l1662 0420                        l1654 03EA  
                      l1718 03B5                        l1590 0167                        l1734 01E2  
                      l1726 01C7                        l1830 063A                        l1822 0627  
                      l1814 0609                        l1806 05B0                        l1910 06F2  
                      l1902 06C8                        l1648 0FD4                        l1760 0FF8  
                      l1752 0FDF                        l1680 0475                        l1672 045D  
                      l1664 043F                        l1656 03EB                        l1744 0F87  
                      l1592 016C                        l1736 01E7                        l1728 01CC  
                      l1824 062B                        l1832 0642                        l1816 0617  
                      l1808 05B4                        l1920 0713                        l1912 06F4  
                      l1904 06D9                        l1770 0066                        l1754 0FE1  
                      l1850 02B3                        l1842 0276                        l1690 04BB  
                      l1682 0497                        l1674 0465                        l1666 0443  
                      l1658 03F5                        l1746 0F94                        l1594 0171  
                      l1738 01FA                        l1826 0631                        l1818 061C  
                      l1930 0773                        l1922 072F                        l1906 06E1  
                      l1914 06FB                        l1772 0076                        l1764 005C  
                      l1748 0F56                        l1756 0FE8                        l1860 02EF  
                      l1844 0280                        l1836 026C                        l1684 04A7  
                      l1676 0469                        l1668 044D                        l1692 0300  
                      l1596 0176                        l1828 0636                        l1780 04FD  
                      l1940 07B1                        l1924 0741                        l1916 070B  
                      l1908 06EE                        l1766 005D                        l1870 0F00  
                      l1758 0FF7                        l1862 02FB                        l1846 0295  
                      l1838 0272                        l1686 04A8                        l1678 046D  
                      l1694 0301                        l1598 0180                        l1790 0554  
                      l1782 0510                        l1934 078D                        l1926 0752  
                      l1950 07C2                        l1856 02D4                        l1848 029F  
                      l1688 04B6                        l1696 030B                        l1792 0564  
                      l1784 0516                        l1952 07DB                        l1936 079E  
                      l1944 07B7                        l1928 075A                        l1880 067B  
                      l1872 0657                        l1970 00C5                        l1962 0F07  
                      l1858 02E8                        l1698 032C                        l1794 056A  
                      l1786 0539                        l1778 04ED                        l1946 07BF  
                      l1938 07A6                        l1882 0680                        l1874 0668  
                      l1972 00CB                        l1964 00B8                        l1796 056E  
                      l1788 054E                        l1892 0691                        l1876 0670  
                      l1974 00D1                        l1966 00B9                        l1798 0576  
                      l1878 0676                        l1990 00AE                        l1982 0088  
                      ?_pad 0024                        l1968 00BF                        l1976 00D7  
                      l1896 0696                        l1984 008C                        l1994 020F  
                      l1898 06BA                        l1986 0090                        l1996 021E  
                      l1988 00A4                        l1998 0226                        STR_1 1000  
                      u1000 045A                        u1001 0459                        u1010 046D  
                      u1011 046C                        u1020 0497                        u1100 0362  
                      u1021 0496                        u1101 0361                        u1030 04B6  
                      u1110 0375                        u1031 04B5                        u1111 0374  
                      u1040 04BB                        u1120 0397                        u1200 0F94  
                      u1041 04BA                        u1025 0493                        u1121 0396  
                      u1201 0F93                        u1210 0F66                        u1130 03B5  
                      u1211 0F64                        u1131 03B4                        u1220 0F67  
                      u1140 03BA                        u1060 030B                        u1300 0539  
                      u1141 03B9                        u1125 0393                        u1061 030A  
                      u1205 0F90                        u1301 0538                        u1230 0FE8  
                      u1310 054E                        u1231 0FE7                        u1311 054D  
                      u1240 0FF7                        u1080 0336                        u1160 01BF  
                      u1400 0627                        u1320 056A                        u1241 0FF6  
                      u1081 0335                        u1161 01BE                        u1401 0626  
                      u1321 0569                        u1170 01CC                        u1410 0631  
                      u1330 056E                        u1171 01CB                        u1411 0630  
                      u1331 056D                        u1315 054A                        u1420 0280  
                      u1180 01F5                        u1340 05EF                        u1260 0508  
                      u1500 06F2                        u1421 027F                        u1181 01F4  
                      u1341 05EE                        u1261 0506                        u1501 06F1  
                      u1430 0294                        u1190 01FA                        u1350 05FC  
                      u1270 0509                        u1510 072F                        u1255 0079  
                      u1431 0293                        u1191 01F9                        u1351 05FB  
                      u1511 072E                        u1440 02E8                        u1360 0609  
                      u1280 0516                        u1520 0741                        _LATD 010F  
                      u1441 02E7                        u1185 01F1                        u1361 0608  
                      u1345 05EB                        u1281 0515                        u1521 0740  
                      u1450 02EF                        u1370 0617                        u1530 0752  
                      u1451 02EE                        u1371 0616                        u1531 0751  
                      u1380 061C                        u1540 079E                        u1460 0668  
                      u1381 061B                        u1365 0605                        u1541 079D  
                      u1461 0667                        u1390 0623                        u1470 06C0  
                      u1550 00AE                        u1391 0622                        u1375 0613  
                      u1471 06BF                        u1551 00AD                        u1560 0FBF  
                      u1480 06C4                        u1561 0FBE                        u1481 06C3  
                      u1617 015F                        u1570 0F51                        u1490 06D9  
                      u1571 0F50                        u1707 0123                        u1627 0221  
                      u1491 06D8                        u1637 022D                        u1647 0236  
                      u1657 0248                        u1667 025A                        u1677 0266  
                      u1687 0F28                        u1697 0F19                        abs@a 0073  
                      _dbuf 00A8                        _atoi 026C                        _main 0126  
                      _dtoa 04EB                        _prec 00A4                        _nout 00A0  
                      pad@i 0027                        pad@p 0025                        fsr0h 0005  
                      fsr1h 0007                        indf0 0000                        fsr0l 0004  
                      indf1 0001                        fsr1l 0006                        pad@w 0029  
                      btemp 007E            __end_of_ADC_Init 000F            __end_of_ADC_Read 0F56  
                      start 0002               __write_nibble 00EE                       ??_abs 0075  
                     ??_pad 007C             __end_of___aodiv 04EB                       ?_atoi 0076  
                     ?_main 0070                       ?_dtoa 0030             __end_of___aomod 03EA  
              vfpfcnvrt@fmt 004E                       _TRISD 008F                       u96lld 0414  
                     u98lld 043F             __end_of_lcd_out 0FC0                       _flags 006D  
                     _fputc 0167                       _fputs 0033             __end_of_isdigit 0F6E  
                     atoi@n 0022                       pad@fp 002B                       atoi@s 0076  
                     _width 00A2                       _putch 0EF2                       dtoa@d 0030  
                     dtoa@i 004C                       dtoa@n 0044                       dtoa@p 003E  
                     dtoa@s 0042                       dtoa@w 0040             __end_of_isspace 1000  
                     status 0003                       wtemp0 007E             __end_of_sprintf 0033  
            ?__write_nibble 0070             __initialization 07E6                __end_of_atoi 0300  
              __end_of_main 0167                __end_of_dtoa 0655                      ??_atoi 0078  
                    ??_main 006C                      ??_dtoa 0038              lcd_command@cmd 0076  
                    ?_fputc 0070                      ?_fputs 0078                      _ADRESH 009C  
                    _ADRESL 009B                      ?_putch 0070                      _ANSELD 018F  
                    u105lld 04D9                      u115lld 03D8                      u107lld 032A  
                    u109lld 0355               vfpfcnvrt@done 005D                      u129lld 0534  
              vfprintf@cfmt 0066            __end_of_lcd_init 026C                   ??___aodiv 0070  
                 ??___aomod 0070                      ___wmul 0FC0                      _conver 00A6  
                    pad@buf 0024                      _txtLCD 00C8                      dtoa@fp 003D  
                    _strlen 0F6E                   ??_lcd_out 007D                      fputc@c 0070  
                    fputs@c 0020                      fputs@i 0021                      fputs@s 0023  
                 ??_isdigit 0072                   ?_ADC_Init 0070                   ?_ADC_Read 0070  
                 ??_isspace 0072                      putch@c 0070            __end_of_vfprintf 00B7  
                 ??_sprintf 007D     __end_of__initialization 07FD             ??__write_nibble 0070  
            __pcstackCOMMON 0070                __pidataBANK1 0F2C               __end_of_fputc 01B9  
             __end_of_fputs 005B               __end_of_putch 0EF3            ??_lcd_set_cursor 0078  
                ??_ADC_Init 0070                  ??_ADC_Read 0072                     ??_fputc 0073  
                   ??_fputs 0079                     ??_putch 0070                  __pbssBANK0 006D  
                __pbssBANK1 00A0                  __pmaintext 0126                  __send_byte 005B  
                   ?___wmul 0070                  ADC_Read@ch 0073                     ?_strlen 0070  
         _lcd_disable_blink 0F0E          ?_lcd_disable_blink 0070                   ?_lcd_init 0070  
       ??_lcd_disable_blink 0077                     ___aodiv 03EA                     ___aomod 0300  
         __end_of_lcd_write 0F0E                   ?_vfprintf 0060                     __ptext1 000F  
                   __ptext2 0086                     __ptext3 0655                     __ptext4 04EB  
                   __ptext5 01B9                     __ptext6 0F6E                     __ptext7 0033  
                   __ptext8 0167                     __ptext9 0EF2                     _lcd_out 0FA1  
 __end_of_lcd_disable_blink 0F1D                     _isdigit 0F56                     _isspace 0FDF  
          __send_byte@value 0075                     atoi@neg 0020                     _sprintf 000F  
                   clrloop0 0EF4                  ??_lcd_init 0077        end_of_initialization 07FD  
__end_of_lcd_disable_cursor 0F2C                     fputc@fp 0072                     init_ram 0EF9  
                   fputs@fp 0078                     initloop 0EFA                 ?__send_byte 0072  
         __end_of_vfpfcnvrt 07E6                  ??_vfprintf 0063                     strlen@a 0073  
                   strlen@s 0074                   _TRISAbits 008C              lcd_write@letra 0076  
                lcd_out@col 007B                  lcd_out@row 0020                  lcd_out@str 007C  
             ??_lcd_command 0076                 vfpfcnvrt@ap 004F                 vfpfcnvrt@fp 005F  
               vfpfcnvrt@ll 0055              __end_of___wmul 0FDF              __end_of_strlen 0F87  
       start_initialization 07E6                 __end_of_abs 0FA1                 __end_of_pad 020F  
               __lcd_params 006F       __end_of__write_nibble 0126                 vfprintf@fmt 0060  
                  ??___wmul 0074         __end_of_lcd_command 0F06                 __pdataBANK1 00C8  
                  ??_strlen 0072                   ___latbits 0003               __pcstackBANK0 0020  
             __pcstackBANK1 00DC            ___aodiv@dividend 0028                    ?___aodiv 0020  
                  ?___aomod 0020            ___aodiv@quotient 0073                   _lcd_write 0F06  
                  ?_lcd_out 007B                    ?_isdigit 0070                    _ADC_Init 0004  
                  _ADC_Read 0F40                    ?_isspace 0070                    ?_sprintf 0068  
           __send_byte@mode 0072              ___wmul@product 0074                   clear_ram0 0EF3  
               _lcd_command 0EFF                ??__send_byte 0073          _lcd_disable_cursor 0F1D  
                 _vfpfcnvrt 0655                  _ADCON0bits 009D                  _ADCON1bits 009E  
       ?_lcd_disable_cursor 0070                  ?_lcd_write 0070           ___wmul@multiplier 0070  
        __end_of__send_byte 0086        ??_lcd_disable_cursor 0077                  vfprintf@ap 0062  
                vfprintf@fp 0065                  ?_vfpfcnvrt 004E             ___aodiv@divisor 0020  
           ___aodiv@counter 0071                  _ANSELAbits 018C                  sprintf@fmt 0068  
                  _dtoa$824 003B                    __ptext10 0F87                    __ptext11 0300  
                  __ptext20 020F                    __ptext12 03EA                    __ptext21 0F1D  
                  __ptext13 026C                    __ptext22 0F0E                    __ptext14 0FDF  
                  __ptext23 0EFF                    __ptext15 0F56                    __ptext24 005B  
                  __ptext16 0FC0                    __ptext25 00EE                    __ptext17 0FA1  
                  __ptext26 0F40                    __ptext18 0F06                    __ptext27 0004  
                  __ptext19 00B7                    _lcd_init 020F                    _vfprintf 0086  
               _isspace$873 0074                 ??_lcd_write 0076            ___aomod@dividend 0028  
                  isdigit@c 0070        __write_nibble@nibble 0071              _lcd_set_cursor 00B7  
         lcd_set_cursor@col 0077                   sprintf@ap 00DC           lcd_set_cursor@row 007A  
                  isspace@c 0070             ___aomod@divisor 0020                 ??_vfpfcnvrt 0050  
           ___aomod@counter 0071               __pstringtext1 1000               __pstringtext2 0000  
                  sprintf@f 00DE                    sprintf@s 00DD      __end_of_lcd_set_cursor 00EE  
              ___aodiv@sign 0072                ?_lcd_command 0070                ___aomod@sign 0072  
