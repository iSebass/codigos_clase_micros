

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Oct 05 21:08:00 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text29,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    69                           	dabs	1,0x7E,2
    70  0000                     
    71                           ; Version 2.40
    72                           ; Generated 17/11/2021 GMT
    73                           ; 
    74                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F1939 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001C                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  008C                     	;# 
   138  008D                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0110                     	;# 
   161  0111                     	;# 
   162  0112                     	;# 
   163  0113                     	;# 
   164  0114                     	;# 
   165  0115                     	;# 
   166  0116                     	;# 
   167  0117                     	;# 
   168  0118                     	;# 
   169  0119                     	;# 
   170  011A                     	;# 
   171  011B                     	;# 
   172  011D                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  018F                     	;# 
   176  0190                     	;# 
   177  0191                     	;# 
   178  0191                     	;# 
   179  0192                     	;# 
   180  0193                     	;# 
   181  0193                     	;# 
   182  0193                     	;# 
   183  0194                     	;# 
   184  0195                     	;# 
   185  0196                     	;# 
   186  0199                     	;# 
   187  019A                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019B                     	;# 
   191  019B                     	;# 
   192  019C                     	;# 
   193  019C                     	;# 
   194  019D                     	;# 
   195  019E                     	;# 
   196  019F                     	;# 
   197  020D                     	;# 
   198  0210                     	;# 
   199  0211                     	;# 
   200  0212                     	;# 
   201  0213                     	;# 
   202  0214                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0216                     	;# 
   206  0217                     	;# 
   207  0291                     	;# 
   208  0291                     	;# 
   209  0292                     	;# 
   210  0293                     	;# 
   211  0294                     	;# 
   212  0295                     	;# 
   213  0295                     	;# 
   214  0296                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029B                     	;# 
   220  029C                     	;# 
   221  029C                     	;# 
   222  029D                     	;# 
   223  029E                     	;# 
   224  029F                     	;# 
   225  0311                     	;# 
   226  0311                     	;# 
   227  0312                     	;# 
   228  0313                     	;# 
   229  0314                     	;# 
   230  0315                     	;# 
   231  0315                     	;# 
   232  0316                     	;# 
   233  0318                     	;# 
   234  0318                     	;# 
   235  0319                     	;# 
   236  031A                     	;# 
   237  031C                     	;# 
   238  031C                     	;# 
   239  031D                     	;# 
   240  031E                     	;# 
   241  0394                     	;# 
   242  0395                     	;# 
   243  0396                     	;# 
   244  0415                     	;# 
   245  0416                     	;# 
   246  0417                     	;# 
   247  041C                     	;# 
   248  041D                     	;# 
   249  041E                     	;# 
   250  0791                     	;# 
   251  0792                     	;# 
   252  0793                     	;# 
   253  0794                     	;# 
   254  0795                     	;# 
   255  0798                     	;# 
   256  0799                     	;# 
   257  079A                     	;# 
   258  07A0                     	;# 
   259  07A1                     	;# 
   260  07A2                     	;# 
   261  07A3                     	;# 
   262  07A4                     	;# 
   263  07A5                     	;# 
   264  07A6                     	;# 
   265  07A7                     	;# 
   266  07A8                     	;# 
   267  07A9                     	;# 
   268  07AA                     	;# 
   269  07AB                     	;# 
   270  0FE4                     	;# 
   271  0FE5                     	;# 
   272  0FE6                     	;# 
   273  0FE7                     	;# 
   274  0FE8                     	;# 
   275  0FE9                     	;# 
   276  0FEA                     	;# 
   277  0FEB                     	;# 
   278  0FED                     	;# 
   279  0FEE                     	;# 
   280  0FEF                     	;# 
   281  0000                     	;# 
   282  0001                     	;# 
   283  0002                     	;# 
   284  0003                     	;# 
   285  0004                     	;# 
   286  0005                     	;# 
   287  0006                     	;# 
   288  0007                     	;# 
   289  0008                     	;# 
   290  0009                     	;# 
   291  000A                     	;# 
   292  000B                     	;# 
   293  000C                     	;# 
   294  000D                     	;# 
   295  000E                     	;# 
   296  000F                     	;# 
   297  0010                     	;# 
   298  0011                     	;# 
   299  0012                     	;# 
   300  0013                     	;# 
   301  0015                     	;# 
   302  0016                     	;# 
   303  0016                     	;# 
   304  0017                     	;# 
   305  0018                     	;# 
   306  0019                     	;# 
   307  001A                     	;# 
   308  001B                     	;# 
   309  001C                     	;# 
   310  001E                     	;# 
   311  001F                     	;# 
   312  008C                     	;# 
   313  008D                     	;# 
   314  008E                     	;# 
   315  008F                     	;# 
   316  0090                     	;# 
   317  0091                     	;# 
   318  0092                     	;# 
   319  0093                     	;# 
   320  0095                     	;# 
   321  0096                     	;# 
   322  0097                     	;# 
   323  0098                     	;# 
   324  0099                     	;# 
   325  009A                     	;# 
   326  009B                     	;# 
   327  009B                     	;# 
   328  009C                     	;# 
   329  009D                     	;# 
   330  009E                     	;# 
   331  010C                     	;# 
   332  010D                     	;# 
   333  010E                     	;# 
   334  010F                     	;# 
   335  0110                     	;# 
   336  0111                     	;# 
   337  0112                     	;# 
   338  0113                     	;# 
   339  0114                     	;# 
   340  0115                     	;# 
   341  0116                     	;# 
   342  0117                     	;# 
   343  0118                     	;# 
   344  0119                     	;# 
   345  011A                     	;# 
   346  011B                     	;# 
   347  011D                     	;# 
   348  018C                     	;# 
   349  018D                     	;# 
   350  018F                     	;# 
   351  0190                     	;# 
   352  0191                     	;# 
   353  0191                     	;# 
   354  0192                     	;# 
   355  0193                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0194                     	;# 
   359  0195                     	;# 
   360  0196                     	;# 
   361  0199                     	;# 
   362  019A                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019C                     	;# 
   368  019C                     	;# 
   369  019D                     	;# 
   370  019E                     	;# 
   371  019F                     	;# 
   372  020D                     	;# 
   373  0210                     	;# 
   374  0211                     	;# 
   375  0212                     	;# 
   376  0213                     	;# 
   377  0214                     	;# 
   378  0215                     	;# 
   379  0215                     	;# 
   380  0216                     	;# 
   381  0217                     	;# 
   382  0291                     	;# 
   383  0291                     	;# 
   384  0292                     	;# 
   385  0293                     	;# 
   386  0294                     	;# 
   387  0295                     	;# 
   388  0295                     	;# 
   389  0296                     	;# 
   390  0298                     	;# 
   391  0298                     	;# 
   392  0299                     	;# 
   393  029A                     	;# 
   394  029B                     	;# 
   395  029C                     	;# 
   396  029C                     	;# 
   397  029D                     	;# 
   398  029E                     	;# 
   399  029F                     	;# 
   400  0311                     	;# 
   401  0311                     	;# 
   402  0312                     	;# 
   403  0313                     	;# 
   404  0314                     	;# 
   405  0315                     	;# 
   406  0315                     	;# 
   407  0316                     	;# 
   408  0318                     	;# 
   409  0318                     	;# 
   410  0319                     	;# 
   411  031A                     	;# 
   412  031C                     	;# 
   413  031C                     	;# 
   414  031D                     	;# 
   415  031E                     	;# 
   416  0394                     	;# 
   417  0395                     	;# 
   418  0396                     	;# 
   419  0415                     	;# 
   420  0416                     	;# 
   421  0417                     	;# 
   422  041C                     	;# 
   423  041D                     	;# 
   424  041E                     	;# 
   425  0791                     	;# 
   426  0792                     	;# 
   427  0793                     	;# 
   428  0794                     	;# 
   429  0795                     	;# 
   430  0798                     	;# 
   431  0799                     	;# 
   432  079A                     	;# 
   433  07A0                     	;# 
   434  07A1                     	;# 
   435  07A2                     	;# 
   436  07A3                     	;# 
   437  07A4                     	;# 
   438  07A5                     	;# 
   439  07A6                     	;# 
   440  07A7                     	;# 
   441  07A8                     	;# 
   442  07A9                     	;# 
   443  07AA                     	;# 
   444  07AB                     	;# 
   445  0FE4                     	;# 
   446  0FE5                     	;# 
   447  0FE6                     	;# 
   448  0FE7                     	;# 
   449  0FE8                     	;# 
   450  0FE9                     	;# 
   451  0FEA                     	;# 
   452  0FEB                     	;# 
   453  0FED                     	;# 
   454  0FEE                     	;# 
   455  0FEF                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  000F                     	;# 
   472  0010                     	;# 
   473  0011                     	;# 
   474  0012                     	;# 
   475  0013                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0016                     	;# 
   479  0017                     	;# 
   480  0018                     	;# 
   481  0019                     	;# 
   482  001A                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001E                     	;# 
   486  001F                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  008F                     	;# 
   491  0090                     	;# 
   492  0091                     	;# 
   493  0092                     	;# 
   494  0093                     	;# 
   495  0095                     	;# 
   496  0096                     	;# 
   497  0097                     	;# 
   498  0098                     	;# 
   499  0099                     	;# 
   500  009A                     	;# 
   501  009B                     	;# 
   502  009B                     	;# 
   503  009C                     	;# 
   504  009D                     	;# 
   505  009E                     	;# 
   506  010C                     	;# 
   507  010D                     	;# 
   508  010E                     	;# 
   509  010F                     	;# 
   510  0110                     	;# 
   511  0111                     	;# 
   512  0112                     	;# 
   513  0113                     	;# 
   514  0114                     	;# 
   515  0115                     	;# 
   516  0116                     	;# 
   517  0117                     	;# 
   518  0118                     	;# 
   519  0119                     	;# 
   520  011A                     	;# 
   521  011B                     	;# 
   522  011D                     	;# 
   523  018C                     	;# 
   524  018D                     	;# 
   525  018F                     	;# 
   526  0190                     	;# 
   527  0191                     	;# 
   528  0191                     	;# 
   529  0192                     	;# 
   530  0193                     	;# 
   531  0193                     	;# 
   532  0193                     	;# 
   533  0194                     	;# 
   534  0195                     	;# 
   535  0196                     	;# 
   536  0199                     	;# 
   537  019A                     	;# 
   538  019B                     	;# 
   539  019B                     	;# 
   540  019B                     	;# 
   541  019B                     	;# 
   542  019C                     	;# 
   543  019C                     	;# 
   544  019D                     	;# 
   545  019E                     	;# 
   546  019F                     	;# 
   547  020D                     	;# 
   548  0210                     	;# 
   549  0211                     	;# 
   550  0212                     	;# 
   551  0213                     	;# 
   552  0214                     	;# 
   553  0215                     	;# 
   554  0215                     	;# 
   555  0216                     	;# 
   556  0217                     	;# 
   557  0291                     	;# 
   558  0291                     	;# 
   559  0292                     	;# 
   560  0293                     	;# 
   561  0294                     	;# 
   562  0295                     	;# 
   563  0295                     	;# 
   564  0296                     	;# 
   565  0298                     	;# 
   566  0298                     	;# 
   567  0299                     	;# 
   568  029A                     	;# 
   569  029B                     	;# 
   570  029C                     	;# 
   571  029C                     	;# 
   572  029D                     	;# 
   573  029E                     	;# 
   574  029F                     	;# 
   575  0311                     	;# 
   576  0311                     	;# 
   577  0312                     	;# 
   578  0313                     	;# 
   579  0314                     	;# 
   580  0315                     	;# 
   581  0315                     	;# 
   582  0316                     	;# 
   583  0318                     	;# 
   584  0318                     	;# 
   585  0319                     	;# 
   586  031A                     	;# 
   587  031C                     	;# 
   588  031C                     	;# 
   589  031D                     	;# 
   590  031E                     	;# 
   591  0394                     	;# 
   592  0395                     	;# 
   593  0396                     	;# 
   594  0415                     	;# 
   595  0416                     	;# 
   596  0417                     	;# 
   597  041C                     	;# 
   598  041D                     	;# 
   599  041E                     	;# 
   600  0791                     	;# 
   601  0792                     	;# 
   602  0793                     	;# 
   603  0794                     	;# 
   604  0795                     	;# 
   605  0798                     	;# 
   606  0799                     	;# 
   607  079A                     	;# 
   608  07A0                     	;# 
   609  07A1                     	;# 
   610  07A2                     	;# 
   611  07A3                     	;# 
   612  07A4                     	;# 
   613  07A5                     	;# 
   614  07A6                     	;# 
   615  07A7                     	;# 
   616  07A8                     	;# 
   617  07A9                     	;# 
   618  07AA                     	;# 
   619  07AB                     	;# 
   620  0FE4                     	;# 
   621  0FE5                     	;# 
   622  0FE6                     	;# 
   623  0FE7                     	;# 
   624  0FE8                     	;# 
   625  0FE9                     	;# 
   626  0FEA                     	;# 
   627  0FEB                     	;# 
   628  0FED                     	;# 
   629  0FEE                     	;# 
   630  0FEF                     	;# 
   631  0000                     	;# 
   632  0001                     	;# 
   633  0002                     	;# 
   634  0003                     	;# 
   635  0004                     	;# 
   636  0005                     	;# 
   637  0006                     	;# 
   638  0007                     	;# 
   639  0008                     	;# 
   640  0009                     	;# 
   641  000A                     	;# 
   642  000B                     	;# 
   643  000C                     	;# 
   644  000D                     	;# 
   645  000E                     	;# 
   646  000F                     	;# 
   647  0010                     	;# 
   648  0011                     	;# 
   649  0012                     	;# 
   650  0013                     	;# 
   651  0015                     	;# 
   652  0016                     	;# 
   653  0016                     	;# 
   654  0017                     	;# 
   655  0018                     	;# 
   656  0019                     	;# 
   657  001A                     	;# 
   658  001B                     	;# 
   659  001C                     	;# 
   660  001E                     	;# 
   661  001F                     	;# 
   662  008C                     	;# 
   663  008D                     	;# 
   664  008E                     	;# 
   665  008F                     	;# 
   666  0090                     	;# 
   667  0091                     	;# 
   668  0092                     	;# 
   669  0093                     	;# 
   670  0095                     	;# 
   671  0096                     	;# 
   672  0097                     	;# 
   673  0098                     	;# 
   674  0099                     	;# 
   675  009A                     	;# 
   676  009B                     	;# 
   677  009B                     	;# 
   678  009C                     	;# 
   679  009D                     	;# 
   680  009E                     	;# 
   681  010C                     	;# 
   682  010D                     	;# 
   683  010E                     	;# 
   684  010F                     	;# 
   685  0110                     	;# 
   686  0111                     	;# 
   687  0112                     	;# 
   688  0113                     	;# 
   689  0114                     	;# 
   690  0115                     	;# 
   691  0116                     	;# 
   692  0117                     	;# 
   693  0118                     	;# 
   694  0119                     	;# 
   695  011A                     	;# 
   696  011B                     	;# 
   697  011D                     	;# 
   698  018C                     	;# 
   699  018D                     	;# 
   700  018F                     	;# 
   701  0190                     	;# 
   702  0191                     	;# 
   703  0191                     	;# 
   704  0192                     	;# 
   705  0193                     	;# 
   706  0193                     	;# 
   707  0193                     	;# 
   708  0194                     	;# 
   709  0195                     	;# 
   710  0196                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019B                     	;# 
   716  019B                     	;# 
   717  019C                     	;# 
   718  019C                     	;# 
   719  019D                     	;# 
   720  019E                     	;# 
   721  019F                     	;# 
   722  020D                     	;# 
   723  0210                     	;# 
   724  0211                     	;# 
   725  0212                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0215                     	;# 
   729  0215                     	;# 
   730  0216                     	;# 
   731  0217                     	;# 
   732  0291                     	;# 
   733  0291                     	;# 
   734  0292                     	;# 
   735  0293                     	;# 
   736  0294                     	;# 
   737  0295                     	;# 
   738  0295                     	;# 
   739  0296                     	;# 
   740  0298                     	;# 
   741  0298                     	;# 
   742  0299                     	;# 
   743  029A                     	;# 
   744  029B                     	;# 
   745  029C                     	;# 
   746  029C                     	;# 
   747  029D                     	;# 
   748  029E                     	;# 
   749  029F                     	;# 
   750  0311                     	;# 
   751  0311                     	;# 
   752  0312                     	;# 
   753  0313                     	;# 
   754  0314                     	;# 
   755  0315                     	;# 
   756  0315                     	;# 
   757  0316                     	;# 
   758  0318                     	;# 
   759  0318                     	;# 
   760  0319                     	;# 
   761  031A                     	;# 
   762  031C                     	;# 
   763  031C                     	;# 
   764  031D                     	;# 
   765  031E                     	;# 
   766  0394                     	;# 
   767  0395                     	;# 
   768  0396                     	;# 
   769  0415                     	;# 
   770  0416                     	;# 
   771  0417                     	;# 
   772  041C                     	;# 
   773  041D                     	;# 
   774  041E                     	;# 
   775  0791                     	;# 
   776  0792                     	;# 
   777  0793                     	;# 
   778  0794                     	;# 
   779  0795                     	;# 
   780  0798                     	;# 
   781  0799                     	;# 
   782  079A                     	;# 
   783  07A0                     	;# 
   784  07A1                     	;# 
   785  07A2                     	;# 
   786  07A3                     	;# 
   787  07A4                     	;# 
   788  07A5                     	;# 
   789  07A6                     	;# 
   790  07A7                     	;# 
   791  07A8                     	;# 
   792  07A9                     	;# 
   793  07AA                     	;# 
   794  07AB                     	;# 
   795  0FE4                     	;# 
   796  0FE5                     	;# 
   797  0FE6                     	;# 
   798  0FE7                     	;# 
   799  0FE8                     	;# 
   800  0FE9                     	;# 
   801  0FEA                     	;# 
   802  0FEB                     	;# 
   803  0FED                     	;# 
   804  0FEE                     	;# 
   805  0FEF                     	;# 
   806  0000                     	;# 
   807  0001                     	;# 
   808  0002                     	;# 
   809  0003                     	;# 
   810  0004                     	;# 
   811  0005                     	;# 
   812  0006                     	;# 
   813  0007                     	;# 
   814  0008                     	;# 
   815  0009                     	;# 
   816  000A                     	;# 
   817  000B                     	;# 
   818  000C                     	;# 
   819  000D                     	;# 
   820  000E                     	;# 
   821  000F                     	;# 
   822  0010                     	;# 
   823  0011                     	;# 
   824  0012                     	;# 
   825  0013                     	;# 
   826  0015                     	;# 
   827  0016                     	;# 
   828  0016                     	;# 
   829  0017                     	;# 
   830  0018                     	;# 
   831  0019                     	;# 
   832  001A                     	;# 
   833  001B                     	;# 
   834  001C                     	;# 
   835  001E                     	;# 
   836  001F                     	;# 
   837  008C                     	;# 
   838  008D                     	;# 
   839  008E                     	;# 
   840  008F                     	;# 
   841  0090                     	;# 
   842  0091                     	;# 
   843  0092                     	;# 
   844  0093                     	;# 
   845  0095                     	;# 
   846  0096                     	;# 
   847  0097                     	;# 
   848  0098                     	;# 
   849  0099                     	;# 
   850  009A                     	;# 
   851  009B                     	;# 
   852  009B                     	;# 
   853  009C                     	;# 
   854  009D                     	;# 
   855  009E                     	;# 
   856  010C                     	;# 
   857  010D                     	;# 
   858  010E                     	;# 
   859  010F                     	;# 
   860  0110                     	;# 
   861  0111                     	;# 
   862  0112                     	;# 
   863  0113                     	;# 
   864  0114                     	;# 
   865  0115                     	;# 
   866  0116                     	;# 
   867  0117                     	;# 
   868  0118                     	;# 
   869  0119                     	;# 
   870  011A                     	;# 
   871  011B                     	;# 
   872  011D                     	;# 
   873  018C                     	;# 
   874  018D                     	;# 
   875  018F                     	;# 
   876  0190                     	;# 
   877  0191                     	;# 
   878  0191                     	;# 
   879  0192                     	;# 
   880  0193                     	;# 
   881  0193                     	;# 
   882  0193                     	;# 
   883  0194                     	;# 
   884  0195                     	;# 
   885  0196                     	;# 
   886  0199                     	;# 
   887  019A                     	;# 
   888  019B                     	;# 
   889  019B                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019C                     	;# 
   893  019C                     	;# 
   894  019D                     	;# 
   895  019E                     	;# 
   896  019F                     	;# 
   897  020D                     	;# 
   898  0210                     	;# 
   899  0211                     	;# 
   900  0212                     	;# 
   901  0213                     	;# 
   902  0214                     	;# 
   903  0215                     	;# 
   904  0215                     	;# 
   905  0216                     	;# 
   906  0217                     	;# 
   907  0291                     	;# 
   908  0291                     	;# 
   909  0292                     	;# 
   910  0293                     	;# 
   911  0294                     	;# 
   912  0295                     	;# 
   913  0295                     	;# 
   914  0296                     	;# 
   915  0298                     	;# 
   916  0298                     	;# 
   917  0299                     	;# 
   918  029A                     	;# 
   919  029B                     	;# 
   920  029C                     	;# 
   921  029C                     	;# 
   922  029D                     	;# 
   923  029E                     	;# 
   924  029F                     	;# 
   925  0311                     	;# 
   926  0311                     	;# 
   927  0312                     	;# 
   928  0313                     	;# 
   929  0314                     	;# 
   930  0315                     	;# 
   931  0315                     	;# 
   932  0316                     	;# 
   933  0318                     	;# 
   934  0318                     	;# 
   935  0319                     	;# 
   936  031A                     	;# 
   937  031C                     	;# 
   938  031C                     	;# 
   939  031D                     	;# 
   940  031E                     	;# 
   941  0394                     	;# 
   942  0395                     	;# 
   943  0396                     	;# 
   944  0415                     	;# 
   945  0416                     	;# 
   946  0417                     	;# 
   947  041C                     	;# 
   948  041D                     	;# 
   949  041E                     	;# 
   950  0791                     	;# 
   951  0792                     	;# 
   952  0793                     	;# 
   953  0794                     	;# 
   954  0795                     	;# 
   955  0798                     	;# 
   956  0799                     	;# 
   957  079A                     	;# 
   958  07A0                     	;# 
   959  07A1                     	;# 
   960  07A2                     	;# 
   961  07A3                     	;# 
   962  07A4                     	;# 
   963  07A5                     	;# 
   964  07A6                     	;# 
   965  07A7                     	;# 
   966  07A8                     	;# 
   967  07A9                     	;# 
   968  07AA                     	;# 
   969  07AB                     	;# 
   970  0FE4                     	;# 
   971  0FE5                     	;# 
   972  0FE6                     	;# 
   973  0FE7                     	;# 
   974  0FE8                     	;# 
   975  0FE9                     	;# 
   976  0FEA                     	;# 
   977  0FEB                     	;# 
   978  0FED                     	;# 
   979  0FEE                     	;# 
   980  0FEF                     	;# 
   981                           
   982                           	psect	idataBANK2
   983  1EA8                     __pidataBANK2:
   984                           
   985                           ;initializer for _txtLCD
   986  1EA8  3420               	retlw	32
   987  1EA9  3400               	retlw	0
   988  1EAA  3400               	retlw	0
   989  1EAB  3400               	retlw	0
   990  1EAC  3400               	retlw	0
   991  1EAD  3400               	retlw	0
   992  1EAE  3400               	retlw	0
   993  1EAF  3400               	retlw	0
   994  1EB0  3400               	retlw	0
   995  1EB1  3400               	retlw	0
   996  1EB2  3400               	retlw	0
   997  1EB3  3400               	retlw	0
   998  1EB4  3400               	retlw	0
   999  1EB5  3400               	retlw	0
  1000  1EB6  3400               	retlw	0
  1001  1EB7  3400               	retlw	0
  1002  1EB8  3400               	retlw	0
  1003  1EB9  3400               	retlw	0
  1004  1EBA  3400               	retlw	0
  1005  1EBB  3400               	retlw	0
  1006  009B                     _ADRESL	set	155
  1007  009C                     _ADRESH	set	156
  1008  009D                     _ADCON0bits	set	157
  1009  009E                     _ADCON1bits	set	158
  1010  008C                     _TRISAbits	set	140
  1011  008F                     _TRISD	set	143
  1012  010F                     _LATD	set	271
  1013  018C                     _ANSELAbits	set	396
  1014  018F                     _ANSELD	set	399
  1015                           
  1016                           	psect	stringtext1
  1017  2000                     __pstringtext1:
  1018  2000                     STR_2:
  1019  2000  3454               	retlw	84	;'T'
  1020  2001  3445               	retlw	69	;'E'
  1021  2002  344D               	retlw	77	;'M'
  1022  2003  3450               	retlw	80	;'P'
  1023  2004  343A               	retlw	58	;':'
  1024  2005  3420               	retlw	32	;' '
  1025  2006  3425               	retlw	37	;'%'
  1026  2007  3433               	retlw	51	;'3'
  1027  2008  342E               	retlw	46	;'.'
  1028  2009  3431               	retlw	49	;'1'
  1029  200A  3466               	retlw	102	;'f'
  1030  200B  3400               	retlw	0
  1031                           
  1032                           	psect	stringtext2
  1033  200C                     __pstringtext2:
  1034  200C                     STR_1:
  1035  200C  3450               	retlw	80	;'P'
  1036  200D  344F               	retlw	79	;'O'
  1037  200E  3454               	retlw	84	;'T'
  1038  200F  343A               	retlw	58	;':'
  1039  2010  3420               	retlw	32	;' '
  1040  2011  3425               	retlw	37	;'%'
  1041  2012  3433               	retlw	51	;'3'
  1042  2013  342E               	retlw	46	;'.'
  1043  2014  3431               	retlw	49	;'1'
  1044  2015  3466               	retlw	102	;'f'
  1045  2016  3400               	retlw	0
  1046                           
  1047                           	psect	stringtext3
  1048  2017                     __pstringtext3:
  1049  2017                     STR_3:
  1050  2017  3449               	retlw	73	;'I'
  1051  2018  344E               	retlw	78	;'N'
  1052  2019  3446               	retlw	70	;'F'
  1053  201A  3400               	retlw	0
  1054                           
  1055                           	psect	stringtext4
  1056  201B                     __pstringtext4:
  1057  201B                     STR_7:
  1058  201B  344E               	retlw	78	;'N'
  1059  201C  3441               	retlw	65	;'A'
  1060  201D  344E               	retlw	78	;'N'
  1061  201E  3400               	retlw	0
  1062                           
  1063                           	psect	stringtext5
  1064  201F                     __pstringtext5:
  1065  201F                     STR_4:
  1066  201F  3469               	retlw	105	;'i'
  1067  2020  346E               	retlw	110	;'n'
  1068  2021  3466               	retlw	102	;'f'
  1069  2022  3400               	retlw	0
  1070                           
  1071                           	psect	stringtext6
  1072  2023                     __pstringtext6:
  1073  2023                     STR_8:
  1074  2023  346E               	retlw	110	;'n'
  1075  2024  3461               	retlw	97	;'a'
  1076  2025  346E               	retlw	110	;'n'
  1077  2026  3400               	retlw	0
  1078                           
  1079                           	psect	stringtext7
  1080  2027                     __pstringtext7:
  1081  2027                     STR_11:
  1082  2027  346C               	retlw	108	;'l'
  1083  2028  3466               	retlw	102	;'f'
  1084  2029  3400               	retlw	0
  1085                           
  1086                           	psect	stringtext8
  1087  0000                     __pstringtext8:
  1088  2027                     
  1089                           	psect	cinit
  1090  07D8                     start_initialization:	
  1091                           ; #config settings
  1092                           
  1093  07D8                     __initialization:
  1094                           
  1095                           ; Initialize objects allocated to BANK2
  1096  07D8  30A8               	movlw	low __pidataBANK2
  1097  07D9  0084               	movwf	4
  1098  07DA  309E               	movlw	(high __pidataBANK2)| (0+128)
  1099  07DB  0085               	movwf	5
  1100  07DC  3020               	movlw	low __pdataBANK2
  1101  07DD  0086               	movwf	6
  1102  07DE  3001               	movlw	high __pdataBANK2
  1103  07DF  0087               	movwf	7
  1104  07E0  3014               	movlw	20
  1105  07E1  319E  265F  3187   	fcall	init_ram
  1106                           
  1107                           ; Clear objects allocated to BANK0
  1108  07E4  01EE               	clrf	__pbssBANK0& (0+127)
  1109                           
  1110                           ; Clear objects allocated to BANK1
  1111  07E5  30DF               	movlw	low __pbssBANK1
  1112  07E6  0084               	movwf	4
  1113  07E7  3000               	movlw	high __pbssBANK1
  1114  07E8  0085               	movwf	5
  1115  07E9  300E               	movlw	14
  1116  07EA  319E  2659  3187   	fcall	clear_ram0
  1117                           
  1118                           ; Clear objects allocated to BANK2
  1119  07ED  3034               	movlw	low __pbssBANK2
  1120  07EE  0084               	movwf	4
  1121  07EF  3001               	movlw	high __pbssBANK2
  1122  07F0  0085               	movwf	5
  1123  07F1  300C               	movlw	12
  1124  07F2  319E  2659  3187   	fcall	clear_ram0
  1125                           
  1126                           ; Clear objects allocated to BANK3
  1127  07F5  30A0               	movlw	low __pbssBANK3
  1128  07F6  0084               	movwf	4
  1129  07F7  3001               	movlw	high __pbssBANK3
  1130  07F8  0085               	movwf	5
  1131  07F9  3050               	movlw	80
  1132  07FA  319E  2659  3187   	fcall	clear_ram0
  1133  07FD                     end_of_initialization:	
  1134                           ;End of C runtime variable initialization code
  1135                           
  1136  07FD                     __end_of__initialization:
  1137  07FD  0020               	movlb	0
  1138  07FE  3195  2D6C         	ljmp	_main	;jump to C main() function
  1139                           
  1140                           	psect	bssBANK0
  1141  006E                     __pbssBANK0:
  1142  006E                     __lcd_params:
  1143  006E                     	ds	1
  1144                           
  1145                           	psect	bssBANK1
  1146  00DF                     __pbssBANK1:
  1147  00DF                     _pot:
  1148  00DF                     	ds	4
  1149  00E3                     _nout:
  1150  00E3                     	ds	2
  1151  00E5                     _width:
  1152  00E5                     	ds	2
  1153  00E7                     _prec:
  1154  00E7                     	ds	2
  1155  00E9                     _flags:
  1156  00E9                     	ds	2
  1157  00EB                     _conver:
  1158  00EB                     	ds	2
  1159                           
  1160                           	psect	bssBANK2
  1161  0134                     __pbssBANK2:
  1162  0134                     floorf@F526:
  1163  0134                     	ds	4
  1164  0138                     ___fpclassifyf@F465:
  1165  0138                     	ds	4
  1166  013C                     _temp:
  1167  013C                     	ds	4
  1168                           
  1169                           	psect	dataBANK2
  1170  0120                     __pdataBANK2:
  1171  0120                     _txtLCD:
  1172  0120                     	ds	20
  1173                           
  1174                           	psect	bssBANK3
  1175  01A0                     __pbssBANK3:
  1176  01A0                     _dbuf:
  1177  01A0                     	ds	80
  1178                           
  1179                           	psect	inittext
  1180  1E5F                     init_ram:
  1181  1E5F  00FE               	movwf	btemp
  1182  1E60                     initloop:
  1183  1E60  0012               	moviw fsr0++
  1184  1E61  001E               	movwi fsr1++
  1185  1E62  0BFE               	decfsz	btemp,f
  1186  1E63  2E60               	goto	initloop
  1187  1E64  3400               	retlw	0
  1188                           
  1189                           	psect	clrtext
  1190  1E59                     clear_ram0:	
  1191                           ;	Called with FSR0 containing the base address, and
  1192                           ;	WREG with the size to clear
  1193                           
  1194  1E59  0064               	clrwdt	;clear the watchdog before getting into this loop
  1195  1E5A                     clrloop0:
  1196  1E5A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1197  1E5B  3101               	addfsr 0,1
  1198  1E5C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1199  1E5D  2E5A               	goto	clrloop0	;have we reached the end yet?
  1200  1E5E  3400               	retlw	0	;all done for this memory range, return
  1201                           
  1202                           	psect	cstackBANK1
  1203  00A0                     __pcstackBANK1:
  1204  00A0                     _efgtoa$869:
  1205                           
  1206                           ; 2 bytes @ 0x0
  1207  00A0                     	ds	2
  1208  00A2                     _efgtoa$877:
  1209                           
  1210                           ; 2 bytes @ 0x2
  1211  00A2                     	ds	2
  1212  00A4                     _efgtoa$878:
  1213                           
  1214                           ; 2 bytes @ 0x4
  1215  00A4                     	ds	2
  1216  00A6                     efgtoa@t:
  1217                           
  1218                           ; 2 bytes @ 0x6
  1219  00A6                     	ds	2
  1220  00A8                     efgtoa@pp:
  1221                           
  1222                           ; 2 bytes @ 0x8
  1223  00A8                     	ds	2
  1224  00AA                     efgtoa@ne:
  1225                           
  1226                           ; 2 bytes @ 0xA
  1227  00AA                     	ds	2
  1228  00AC                     efgtoa@m:
  1229                           
  1230                           ; 2 bytes @ 0xC
  1231  00AC                     	ds	2
  1232  00AE                     efgtoa@ou:
  1233                           
  1234                           ; 4 bytes @ 0xE
  1235  00AE                     	ds	4
  1236  00B2                     efgtoa@d:
  1237                           
  1238                           ; 2 bytes @ 0x12
  1239  00B2                     	ds	2
  1240  00B4                     efgtoa@sign:
  1241                           
  1242                           ; 2 bytes @ 0x14
  1243  00B4                     	ds	2
  1244  00B6                     efgtoa@fp:
  1245                           
  1246                           ; 1 bytes @ 0x16
  1247  00B6                     	ds	1
  1248  00B7                     efgtoa@p:
  1249                           
  1250                           ; 2 bytes @ 0x17
  1251  00B7                     	ds	2
  1252  00B9                     efgtoa@w:
  1253                           
  1254                           ; 2 bytes @ 0x19
  1255  00B9                     	ds	2
  1256  00BB                     efgtoa@nmode:
  1257                           
  1258                           ; 1 bytes @ 0x1B
  1259  00BB                     	ds	1
  1260  00BC                     efgtoa@mode:
  1261                           
  1262                           ; 1 bytes @ 0x1C
  1263  00BC                     	ds	1
  1264  00BD                     efgtoa@h:
  1265                           
  1266                           ; 4 bytes @ 0x1D
  1267  00BD                     	ds	4
  1268  00C1                     efgtoa@l:
  1269                           
  1270                           ; 4 bytes @ 0x21
  1271  00C1                     	ds	4
  1272  00C5                     efgtoa@i:
  1273                           
  1274                           ; 2 bytes @ 0x25
  1275  00C5                     	ds	2
  1276  00C7                     efgtoa@g:
  1277                           
  1278                           ; 4 bytes @ 0x27
  1279  00C7                     	ds	4
  1280  00CB                     efgtoa@e:
  1281                           
  1282                           ; 2 bytes @ 0x2B
  1283  00CB                     	ds	2
  1284  00CD                     efgtoa@n:
  1285                           
  1286                           ; 2 bytes @ 0x2D
  1287  00CD                     	ds	2
  1288  00CF                     efgtoa@u:
  1289                           
  1290                           ; 4 bytes @ 0x2F
  1291  00CF                     	ds	4
  1292  00D3                     sprintf@s:
  1293                           
  1294                           ; 1 bytes @ 0x33
  1295  00D3                     	ds	1
  1296  00D4                     sprintf@ap:
  1297                           
  1298                           ; 1 bytes @ 0x34
  1299  00D4                     	ds	1
  1300  00D5                     sprintf@f:
  1301                           
  1302                           ; 10 bytes @ 0x35
  1303  00D5                     	ds	10
  1304                           
  1305                           	psect	cstackCOMMON
  1306  0070                     __pcstackCOMMON:
  1307  0070                     ?___fleq:
  1308  0070                     ?_lcd_command:	
  1309                           ; 1 bit 
  1310                           
  1311  0070                     ?_ADC_Init:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0070                     ??_ADC_Init:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0070                     ?_strcpy:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0070                     ?_putch:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0070                     ??_putch:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0070                     ?__write_nibble:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0070                     ??__write_nibble:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0070                     ?_lcd_init:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0070                     ?_lcd_write:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0070                     ?_lcd_disable_blink:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0070                     ?_lcd_disable_cursor:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0070                     ?_main:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0070                     ?_ADC_Read:	
  1348                           ; 1 bytes @ 0x0
  1349                           
  1350  0070                     ?__Umul8_16:	
  1351                           ; 2 bytes @ 0x0
  1352                           
  1353  0070                     ?_fputc:	
  1354                           ; 2 bytes @ 0x0
  1355                           
  1356  0070                     ?_strlen:	
  1357                           ; 2 bytes @ 0x0
  1358                           
  1359  0070                     ?___fpclassifyf:	
  1360                           ; 2 bytes @ 0x0
  1361                           
  1362  0070                     ?_isupper:	
  1363                           ; 2 bytes @ 0x0
  1364                           
  1365  0070                     ?_isdigit:	
  1366                           ; 2 bytes @ 0x0
  1367                           
  1368  0070                     ?_strncmp:	
  1369                           ; 2 bytes @ 0x0
  1370                           
  1371  0070                     ?_isspace:	
  1372                           ; 2 bytes @ 0x0
  1373                           
  1374  0070                     ?___wmul:	
  1375                           ; 2 bytes @ 0x0
  1376                           
  1377  0070                     ?___awdiv:	
  1378                           ; 2 bytes @ 0x0
  1379                           
  1380  0070                     ?___awmod:	
  1381                           ; 2 bytes @ 0x0
  1382                           
  1383  0070                     ?___flneg:	
  1384                           ; 2 bytes @ 0x0
  1385                           
  1386  0070                     ?___fltol:	
  1387                           ; 4 bytes @ 0x0
  1388                           
  1389  0070                     ?___fladd:	
  1390                           ; 4 bytes @ 0x0
  1391                           
  1392  0070                     ?___fldiv:	
  1393                           ; 4 bytes @ 0x0
  1394                           
  1395  0070                     ?___xxtofl:	
  1396                           ; 4 bytes @ 0x0
  1397                           
  1398  0070                     __Umul8_16@multiplicand:	
  1399                           ; 4 bytes @ 0x0
  1400                           
  1401  0070                     putch@c:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0070                     ___wmul@multiplier:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0070                     ___awdiv@divisor:	
  1408                           ; 2 bytes @ 0x0
  1409                           
  1410  0070                     ___awmod@divisor:	
  1411                           ; 2 bytes @ 0x0
  1412                           
  1413  0070                     isdigit@c:	
  1414                           ; 2 bytes @ 0x0
  1415                           
  1416  0070                     isspace@c:	
  1417                           ; 2 bytes @ 0x0
  1418                           
  1419  0070                     isupper@c:	
  1420                           ; 2 bytes @ 0x0
  1421                           
  1422  0070                     fputc@c:	
  1423                           ; 2 bytes @ 0x0
  1424                           
  1425  0070                     strcpy@src:	
  1426                           ; 2 bytes @ 0x0
  1427                           
  1428  0070                     strncmp@_r:	
  1429                           ; 2 bytes @ 0x0
  1430                           
  1431  0070                     ___fleq@ff1:	
  1432                           ; 2 bytes @ 0x0
  1433                           
  1434  0070                     ___flneg@f1:	
  1435                           ; 4 bytes @ 0x0
  1436                           
  1437  0070                     ___fltol@f1:	
  1438                           ; 4 bytes @ 0x0
  1439                           
  1440  0070                     ___fladd@b:	
  1441                           ; 4 bytes @ 0x0
  1442                           
  1443  0070                     ___fldiv@a:	
  1444                           ; 4 bytes @ 0x0
  1445                           
  1446  0070                     ___xxtofl@val:	
  1447                           ; 4 bytes @ 0x0
  1448                           
  1449  0070                     ___fpclassifyf@x:	
  1450                           ; 4 bytes @ 0x0
  1451                           
  1452                           
  1453                           ; 4 bytes @ 0x0
  1454  0070                     	ds	1
  1455  0071                     __write_nibble@nibble:
  1456                           
  1457                           ; 1 bytes @ 0x1
  1458  0071                     	ds	1
  1459  0072                     ??_ADC_Read:
  1460  0072                     ??__Umul8_16:	
  1461                           ; 1 bytes @ 0x2
  1462                           
  1463  0072                     ??_strlen:	
  1464                           ; 1 bytes @ 0x2
  1465                           
  1466  0072                     ??_isupper:	
  1467                           ; 1 bytes @ 0x2
  1468                           
  1469  0072                     ??_strcpy:	
  1470                           ; 1 bytes @ 0x2
  1471                           
  1472  0072                     ??_isdigit:	
  1473                           ; 1 bytes @ 0x2
  1474                           
  1475  0072                     ??_isspace:	
  1476                           ; 1 bytes @ 0x2
  1477                           
  1478  0072                     ?__send_byte:	
  1479                           ; 1 bytes @ 0x2
  1480                           
  1481  0072                     __send_byte@mode:	
  1482                           ; 1 bytes @ 0x2
  1483                           
  1484  0072                     fputc@fp:	
  1485                           ; 1 bytes @ 0x2
  1486                           
  1487  0072                     ___wmul@multiplicand:	
  1488                           ; 1 bytes @ 0x2
  1489                           
  1490  0072                     ___awdiv@dividend:	
  1491                           ; 2 bytes @ 0x2
  1492                           
  1493  0072                     ___awmod@dividend:	
  1494                           ; 2 bytes @ 0x2
  1495                           
  1496  0072                     strncmp@n:	
  1497                           ; 2 bytes @ 0x2
  1498                           
  1499                           
  1500                           ; 2 bytes @ 0x2
  1501  0072                     	ds	1
  1502  0073                     ??_fputc:
  1503  0073                     ??__send_byte:	
  1504                           ; 1 bytes @ 0x3
  1505                           
  1506  0073                     ADC_Read@ch:	
  1507                           ; 1 bytes @ 0x3
  1508                           
  1509  0073                     strlen@a:	
  1510                           ; 1 bytes @ 0x3
  1511                           
  1512                           
  1513                           ; 1 bytes @ 0x3
  1514  0073                     	ds	1
  1515  0074                     ??___fpclassifyf:
  1516  0074                     ??_strncmp:	
  1517                           ; 1 bytes @ 0x4
  1518                           
  1519  0074                     ??___wmul:	
  1520                           ; 1 bytes @ 0x4
  1521                           
  1522  0074                     ??___awdiv:	
  1523                           ; 1 bytes @ 0x4
  1524                           
  1525  0074                     ??___awmod:	
  1526                           ; 1 bytes @ 0x4
  1527                           
  1528  0074                     ??___flneg:	
  1529                           ; 1 bytes @ 0x4
  1530                           
  1531  0074                     ??___fltol:	
  1532                           ; 1 bytes @ 0x4
  1533                           
  1534  0074                     ??___xxtofl:	
  1535                           ; 1 bytes @ 0x4
  1536                           
  1537  0074                     _isspace$956:	
  1538                           ; 1 bytes @ 0x4
  1539                           
  1540  0074                     strlen@s:	
  1541                           ; 1 bytes @ 0x4
  1542                           
  1543  0074                     ___wmul@product:	
  1544                           ; 1 bytes @ 0x4
  1545                           
  1546  0074                     __Umul8_16@product:	
  1547                           ; 2 bytes @ 0x4
  1548                           
  1549  0074                     strcpy@s:	
  1550                           ; 2 bytes @ 0x4
  1551                           
  1552  0074                     ___fleq@ff2:	
  1553                           ; 2 bytes @ 0x4
  1554                           
  1555  0074                     ___fladd@a:	
  1556                           ; 4 bytes @ 0x4
  1557                           
  1558  0074                     ___fldiv@b:	
  1559                           ; 4 bytes @ 0x4
  1560                           
  1561                           
  1562                           ; 4 bytes @ 0x4
  1563  0074                     	ds	1
  1564  0075                     __send_byte@value:
  1565  0075                     ___awdiv@counter:	
  1566                           ; 1 bytes @ 0x5
  1567                           
  1568  0075                     ___awmod@counter:	
  1569                           ; 1 bytes @ 0x5
  1570                           
  1571  0075                     strncmp@_l:	
  1572                           ; 1 bytes @ 0x5
  1573                           
  1574                           
  1575                           ; 1 bytes @ 0x5
  1576  0075                     	ds	1
  1577  0076                     ??_lcd_command:
  1578  0076                     ??_lcd_write:	
  1579                           ; 1 bytes @ 0x6
  1580                           
  1581  0076                     ?_tolower:	
  1582                           ; 1 bytes @ 0x6
  1583                           
  1584  0076                     ?_atoi:	
  1585                           ; 2 bytes @ 0x6
  1586                           
  1587  0076                     lcd_write@letra:	
  1588                           ; 2 bytes @ 0x6
  1589                           
  1590  0076                     lcd_command@cmd:	
  1591                           ; 1 bytes @ 0x6
  1592                           
  1593  0076                     ___awdiv@sign:	
  1594                           ; 1 bytes @ 0x6
  1595                           
  1596  0076                     ___awmod@sign:	
  1597                           ; 1 bytes @ 0x6
  1598                           
  1599  0076                     strcpy@d:	
  1600                           ; 1 bytes @ 0x6
  1601                           
  1602  0076                     __Umul8_16@word_mpld:	
  1603                           ; 1 bytes @ 0x6
  1604                           
  1605  0076                     atoi@s:	
  1606                           ; 2 bytes @ 0x6
  1607                           
  1608  0076                     strncmp@r:	
  1609                           ; 2 bytes @ 0x6
  1610                           
  1611  0076                     tolower@c:	
  1612                           ; 2 bytes @ 0x6
  1613                           
  1614                           
  1615                           ; 2 bytes @ 0x6
  1616  0076                     	ds	1
  1617  0077                     ??_lcd_init:
  1618  0077                     ?_lcd_set_cursor:	
  1619                           ; 1 bytes @ 0x7
  1620                           
  1621  0077                     ??_lcd_disable_blink:	
  1622                           ; 1 bytes @ 0x7
  1623                           
  1624  0077                     ??_lcd_disable_cursor:	
  1625                           ; 1 bytes @ 0x7
  1626                           
  1627  0077                     lcd_set_cursor@col:	
  1628                           ; 1 bytes @ 0x7
  1629                           
  1630  0077                     strcpy@dest:	
  1631                           ; 1 bytes @ 0x7
  1632                           
  1633  0077                     ___awdiv@quotient:	
  1634                           ; 1 bytes @ 0x7
  1635                           
  1636                           
  1637                           ; 2 bytes @ 0x7
  1638  0077                     	ds	1
  1639  0078                     ??_tolower:
  1640  0078                     ??_atoi:	
  1641                           ; 1 bytes @ 0x8
  1642                           
  1643  0078                     ??_lcd_set_cursor:	
  1644                           ; 1 bytes @ 0x8
  1645                           
  1646  0078                     ??___fleq:	
  1647                           ; 1 bytes @ 0x8
  1648                           
  1649  0078                     ??___fldiv:	
  1650                           ; 1 bytes @ 0x8
  1651                           
  1652  0078                     ?_fputs:	
  1653                           ; 1 bytes @ 0x8
  1654                           
  1655  0078                     ___fladd@signs:	
  1656                           ; 2 bytes @ 0x8
  1657                           
  1658  0078                     __Umul8_16@multiplier:	
  1659                           ; 1 bytes @ 0x8
  1660                           
  1661  0078                     ___xxtofl@sign:	
  1662                           ; 1 bytes @ 0x8
  1663                           
  1664  0078                     fputs@fp:	
  1665                           ; 1 bytes @ 0x8
  1666                           
  1667  0078                     strncmp@l:	
  1668                           ; 1 bytes @ 0x8
  1669                           
  1670                           
  1671                           ; 1 bytes @ 0x8
  1672  0078                     	ds	1
  1673  0079                     ??_fputs:
  1674  0079                     ___fltol@sign1:	
  1675                           ; 1 bytes @ 0x9
  1676                           
  1677  0079                     ___fladd@aexp:	
  1678                           ; 1 bytes @ 0x9
  1679                           
  1680  0079                     ___xxtofl@exp:	
  1681                           ; 1 bytes @ 0x9
  1682                           
  1683                           
  1684                           ; 1 bytes @ 0x9
  1685  0079                     	ds	1
  1686  007A                     lcd_set_cursor@row:
  1687  007A                     ___fltol@exp1:	
  1688                           ; 1 bytes @ 0xA
  1689                           
  1690  007A                     ___fladd@bexp:	
  1691                           ; 1 bytes @ 0xA
  1692                           
  1693  007A                     ___xxtofl@arg:	
  1694                           ; 1 bytes @ 0xA
  1695                           
  1696                           
  1697                           ; 4 bytes @ 0xA
  1698  007A                     	ds	1
  1699  007B                     ?_lcd_out:
  1700  007B                     lcd_out@col:	
  1701                           ; 1 bytes @ 0xB
  1702                           
  1703  007B                     ___fladd@grs:	
  1704                           ; 1 bytes @ 0xB
  1705                           
  1706                           
  1707                           ; 1 bytes @ 0xB
  1708  007B                     	ds	1
  1709  007C                     ??_pad:
  1710  007C                     lcd_out@str:	
  1711                           ; 1 bytes @ 0xC
  1712                           
  1713                           
  1714                           ; 1 bytes @ 0xC
  1715  007C                     	ds	1
  1716  007D                     ??_lcd_out:
  1717                           
  1718                           ; 1 bytes @ 0xD
  1719  007D                     	ds	1
  1720  007E                     ??___flsub:
  1721                           
  1722                           	psect	cstackBANK0
  1723  0020                     __pcstackBANK0:	
  1724                           ; 1 bytes @ 0xE
  1725                           
  1726  0020                     ??___fladd:
  1727  0020                     ?___flmul:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0020                     lcd_out@row:	
  1731                           ; 4 bytes @ 0x0
  1732                           
  1733  0020                     fputs@c:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0020                     ___fpclassifyf@e:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0020                     atoi@neg:	
  1740                           ; 2 bytes @ 0x0
  1741                           
  1742  0020                     ___fldiv@rem:	
  1743                           ; 2 bytes @ 0x0
  1744                           
  1745  0020                     ___flmul@b:	
  1746                           ; 4 bytes @ 0x0
  1747                           
  1748                           
  1749                           ; 4 bytes @ 0x0
  1750  0020                     	ds	1
  1751  0021                     fputs@i:
  1752                           
  1753                           ; 2 bytes @ 0x1
  1754  0021                     	ds	1
  1755  0022                     atoi@n:
  1756  0022                     ___fpclassifyf@u:	
  1757                           ; 2 bytes @ 0x2
  1758                           
  1759                           
  1760                           ; 4 bytes @ 0x2
  1761  0022                     	ds	1
  1762  0023                     fputs@s:
  1763                           
  1764                           ; 1 bytes @ 0x3
  1765  0023                     	ds	1
  1766  0024                     ?_pad:
  1767  0024                     ___fldiv@sign:	
  1768                           ; 2 bytes @ 0x4
  1769                           
  1770  0024                     pad@buf:	
  1771                           ; 1 bytes @ 0x4
  1772                           
  1773  0024                     ___flmul@a:	
  1774                           ; 1 bytes @ 0x4
  1775                           
  1776                           
  1777                           ; 4 bytes @ 0x4
  1778  0024                     	ds	1
  1779  0025                     ___fldiv@new_exp:
  1780  0025                     pad@p:	
  1781                           ; 2 bytes @ 0x5
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x5
  1785  0025                     	ds	2
  1786  0027                     pad@i:
  1787  0027                     ___fldiv@grs:	
  1788                           ; 2 bytes @ 0x7
  1789                           
  1790                           
  1791                           ; 4 bytes @ 0x7
  1792  0027                     	ds	1
  1793  0028                     ??___flmul:
  1794                           
  1795                           ; 1 bytes @ 0x8
  1796  0028                     	ds	1
  1797  0029                     pad@w:
  1798                           
  1799                           ; 2 bytes @ 0x9
  1800  0029                     	ds	2
  1801  002B                     ___fldiv@bexp:
  1802  002B                     pad@fp:	
  1803                           ; 1 bytes @ 0xB
  1804                           
  1805                           
  1806                           ; 1 bytes @ 0xB
  1807  002B                     	ds	1
  1808  002C                     ___fldiv@aexp:
  1809                           
  1810                           ; 1 bytes @ 0xC
  1811  002C                     	ds	1
  1812  002D                     ?_floorf:
  1813  002D                     ___flmul@sign:	
  1814                           ; 4 bytes @ 0xD
  1815                           
  1816  002D                     floorf@x:	
  1817                           ; 1 bytes @ 0xD
  1818                           
  1819                           
  1820                           ; 4 bytes @ 0xD
  1821  002D                     	ds	1
  1822  002E                     ___flmul@grs:
  1823                           
  1824                           ; 4 bytes @ 0xE
  1825  002E                     	ds	3
  1826  0031                     ??_floorf:
  1827                           
  1828                           ; 1 bytes @ 0x11
  1829  0031                     	ds	1
  1830  0032                     ___flmul@aexp:
  1831                           
  1832                           ; 1 bytes @ 0x12
  1833  0032                     	ds	1
  1834  0033                     ___flmul@bexp:
  1835                           
  1836                           ; 1 bytes @ 0x13
  1837  0033                     	ds	1
  1838  0034                     ___flmul@prod:
  1839                           
  1840                           ; 4 bytes @ 0x14
  1841  0034                     	ds	3
  1842  0037                     floorf@m:
  1843                           
  1844                           ; 4 bytes @ 0x17
  1845  0037                     	ds	1
  1846  0038                     ___flmul@temp:
  1847                           
  1848                           ; 2 bytes @ 0x18
  1849  0038                     	ds	2
  1850  003A                     ?___flge:
  1851  003A                     ?___flsub:	
  1852                           ; 1 bit 
  1853                           
  1854  003A                     ___flge@ff1:	
  1855                           ; 4 bytes @ 0x1A
  1856                           
  1857  003A                     ___flsub@a:	
  1858                           ; 4 bytes @ 0x1A
  1859                           
  1860                           
  1861                           ; 4 bytes @ 0x1A
  1862  003A                     	ds	1
  1863  003B                     floorf@e:
  1864                           
  1865                           ; 2 bytes @ 0x1B
  1866  003B                     	ds	2
  1867  003D                     floorf@u:
  1868                           
  1869                           ; 4 bytes @ 0x1D
  1870  003D                     	ds	1
  1871  003E                     ___flge@ff2:
  1872  003E                     ___flsub@b:	
  1873                           ; 4 bytes @ 0x1E
  1874                           
  1875                           
  1876                           ; 4 bytes @ 0x1E
  1877  003E                     	ds	4
  1878  0042                     ??___flge:
  1879                           
  1880                           ; 1 bytes @ 0x22
  1881  0042                     	ds	4
  1882  0046                     ?_efgtoa:
  1883  0046                     efgtoa@f:	
  1884                           ; 2 bytes @ 0x26
  1885                           
  1886                           
  1887                           ; 4 bytes @ 0x26
  1888  0046                     	ds	4
  1889  004A                     efgtoa@c:
  1890                           
  1891                           ; 1 bytes @ 0x2A
  1892  004A                     	ds	1
  1893  004B                     ??_efgtoa:
  1894                           
  1895                           ; 1 bytes @ 0x2B
  1896  004B                     	ds	3
  1897  004E                     ?_vfpfcnvrt:
  1898  004E                     vfpfcnvrt@fmt:	
  1899                           ; 2 bytes @ 0x2E
  1900                           
  1901                           
  1902                           ; 1 bytes @ 0x2E
  1903  004E                     	ds	1
  1904  004F                     vfpfcnvrt@ap:
  1905                           
  1906                           ; 1 bytes @ 0x2F
  1907  004F                     	ds	1
  1908  0050                     ??_vfpfcnvrt:
  1909                           
  1910                           ; 1 bytes @ 0x30
  1911  0050                     	ds	5
  1912  0055                     vfpfcnvrt@f:
  1913                           
  1914                           ; 4 bytes @ 0x35
  1915  0055                     	ds	4
  1916  0059                     vfpfcnvrt@ct:
  1917                           
  1918                           ; 3 bytes @ 0x39
  1919  0059                     	ds	3
  1920  005C                     vfpfcnvrt@c:
  1921                           
  1922                           ; 1 bytes @ 0x3C
  1923  005C                     	ds	1
  1924  005D                     vfpfcnvrt@fp:
  1925                           
  1926                           ; 1 bytes @ 0x3D
  1927  005D                     	ds	1
  1928  005E                     ?_vfprintf:
  1929  005E                     vfprintf@fmt:	
  1930                           ; 2 bytes @ 0x3E
  1931                           
  1932                           
  1933                           ; 2 bytes @ 0x3E
  1934  005E                     	ds	2
  1935  0060                     vfprintf@ap:
  1936                           
  1937                           ; 1 bytes @ 0x40
  1938  0060                     	ds	1
  1939  0061                     ??_vfprintf:
  1940                           
  1941                           ; 1 bytes @ 0x41
  1942  0061                     	ds	2
  1943  0063                     vfprintf@fp:
  1944                           
  1945                           ; 1 bytes @ 0x43
  1946  0063                     	ds	1
  1947  0064                     vfprintf@cfmt:
  1948                           
  1949                           ; 2 bytes @ 0x44
  1950  0064                     	ds	2
  1951  0066                     ?_sprintf:
  1952  0066                     sprintf@fmt:	
  1953                           ; 2 bytes @ 0x46
  1954                           
  1955                           
  1956                           ; 2 bytes @ 0x46
  1957  0066                     	ds	6
  1958  006C                     ??_sprintf:
  1959                           
  1960                           ; 1 bytes @ 0x4C
  1961  006C                     	ds	1
  1962  006D                     ??_main:
  1963                           
  1964                           ; 1 bytes @ 0x4D
  1965  006D                     	ds	1
  1966                           
  1967                           	psect	maintext
  1968  156C                     __pmaintext:	
  1969 ;;
  1970 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1971 ;;
  1972 ;; *************** function _main *****************
  1973 ;; Defined at:
  1974 ;;		line 12 in file "main.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : B1F/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1991 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1992 ;;Total ram usage:        1 bytes
  1993 ;; Hardware stack levels required when called: 8
  1994 ;; This function calls:
  1995 ;;		_ADC_Init
  1996 ;;		_ADC_Read
  1997 ;;		___flmul
  1998 ;;		___xxtofl
  1999 ;;		_lcd_disable_blink
  2000 ;;		_lcd_disable_cursor
  2001 ;;		_lcd_init
  2002 ;;		_lcd_out
  2003 ;;		_sprintf
  2004 ;; This function is called by:
  2005 ;;		Startup code after reset
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009  156C                     _main:	
  2010                           ;psect for function _main
  2011                           
  2012  156C                     l4211:	
  2013                           ;incstack = 0
  2014                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2015                           
  2016                           
  2017                           ;main.c: 14:     ANSELAbits.ANSA0 = 1;
  2018  156C  0023               	movlb	3	; select bank3
  2019  156D  140C               	bsf	12,0	;volatile
  2020                           
  2021                           ;main.c: 15:     TRISAbits.TRISA0 = 1;
  2022  156E  0021               	movlb	1	; select bank1
  2023  156F  140C               	bsf	12,0	;volatile
  2024                           
  2025                           ;main.c: 17:     ANSELAbits.ANSA1 = 1;
  2026  1570  0023               	movlb	3	; select bank3
  2027  1571  148C               	bsf	12,1	;volatile
  2028                           
  2029                           ;main.c: 18:     TRISAbits.TRISA1 = 1;
  2030  1572  0021               	movlb	1	; select bank1
  2031  1573  148C               	bsf	12,1	;volatile
  2032  1574                     l4213:
  2033                           
  2034                           ;main.c: 20:     lcd_init();
  2035  1574  3192  229E  3195   	fcall	_lcd_init
  2036                           
  2037                           ;main.c: 21:     lcd_disable_blink();
  2038  1577  319E  268A  3195   	fcall	_lcd_disable_blink
  2039                           
  2040                           ;main.c: 22:     lcd_disable_cursor();
  2041  157A  319E  2699  3195   	fcall	_lcd_disable_cursor
  2042  157D                     l4215:
  2043                           
  2044                           ;main.c: 23:     ADC_Init();
  2045  157D  319E  2674  3195   	fcall	_ADC_Init
  2046  1580                     l4217:
  2047                           
  2048                           ;main.c: 25:         conver = ADC_Read(0);
  2049  1580  3000               	movlw	0
  2050  1581  319E  26BC  3195   	fcall	_ADC_Read
  2051  1584  0871               	movf	?_ADC_Read+1,w
  2052  1585  0021               	movlb	1	; select bank1
  2053  1586  00EC               	movwf	(_conver+1)^(0+128)
  2054  1587  0870               	movf	?_ADC_Read,w
  2055  1588  00EB               	movwf	_conver^(0+128)
  2056  1589                     l4219:
  2057                           
  2058                           ;main.c: 26:         pot = (5.0/1023.0)*conver;
  2059  1589  303B               	movlw	59
  2060  158A  0020               	movlb	0	; select bank0
  2061  158B  00A3               	movwf	___flmul@b+3
  2062  158C  30A0               	movlw	160
  2063  158D  00A2               	movwf	___flmul@b+2
  2064  158E  3028               	movlw	40
  2065  158F  00A1               	movwf	___flmul@b+1
  2066  1590  300A               	movlw	10
  2067  1591  00A0               	movwf	___flmul@b
  2068  1592  0021               	movlb	1	; select bank1
  2069  1593  086B               	movf	_conver^(0+128),w
  2070  1594  00F0               	movwf	___xxtofl@val
  2071  1595  086C               	movf	(_conver+1)^(0+128),w
  2072  1596  00F1               	movwf	___xxtofl@val+1
  2073  1597  0D89               	rlf	9,f
  2074  1598  3B89               	subwfb	9,f
  2075  1599  0989               	comf	9,f
  2076  159A  00F2               	movwf	___xxtofl@val+2
  2077  159B  00F3               	movwf	___xxtofl@val+3
  2078  159C  3001               	movlw	1
  2079  159D  3180  2025  3195   	fcall	___xxtofl
  2080  15A0  0873               	movf	?___xxtofl+3,w
  2081  15A1  0020               	movlb	0	; select bank0
  2082  15A2  00A7               	movwf	___flmul@a+3
  2083  15A3  0872               	movf	?___xxtofl+2,w
  2084  15A4  00A6               	movwf	___flmul@a+2
  2085  15A5  0871               	movf	?___xxtofl+1,w
  2086  15A6  00A5               	movwf	___flmul@a+1
  2087  15A7  0870               	movf	?___xxtofl,w
  2088  15A8  00A4               	movwf	___flmul@a
  2089  15A9  318B  232B  3195   	fcall	___flmul
  2090  15AC  0020               	movlb	0	; select bank0
  2091  15AD  0823               	movf	?___flmul+3,w
  2092  15AE  0021               	movlb	1	; select bank1
  2093  15AF  00E2               	movwf	(_pot+3)^(0+128)
  2094  15B0  0020               	movlb	0	; select bank0
  2095  15B1  0822               	movf	?___flmul+2,w
  2096  15B2  0021               	movlb	1	; select bank1
  2097  15B3  00E1               	movwf	(_pot+2)^(0+128)
  2098  15B4  0020               	movlb	0	; select bank0
  2099  15B5  0821               	movf	?___flmul+1,w
  2100  15B6  0021               	movlb	1	; select bank1
  2101  15B7  00E0               	movwf	(_pot+1)^(0+128)
  2102  15B8  0020               	movlb	0	; select bank0
  2103  15B9  0820               	movf	?___flmul,w
  2104  15BA  0021               	movlb	1	; select bank1
  2105  15BB  00DF               	movwf	_pot^(0+128)
  2106  15BC                     l4221:
  2107                           
  2108                           ;main.c: 27:         sprintf(txtLCD,"POT: %3.1f", pot);
  2109  15BC  300C               	movlw	low (STR_1| (0+32768))
  2110  15BD  0020               	movlb	0	; select bank0
  2111  15BE  00E6               	movwf	sprintf@fmt
  2112  15BF  30A0               	movlw	high (STR_1| (0+32768))
  2113  15C0  00E7               	movwf	sprintf@fmt+1
  2114  15C1  0021               	movlb	1	; select bank1
  2115  15C2  0862               	movf	(_pot+3)^(0+128),w
  2116  15C3  0020               	movlb	0	; select bank0
  2117  15C4  00EB               	movwf	?_sprintf+5
  2118  15C5  0021               	movlb	1	; select bank1
  2119  15C6  0861               	movf	(_pot+2)^(0+128),w
  2120  15C7  0020               	movlb	0	; select bank0
  2121  15C8  00EA               	movwf	?_sprintf+4
  2122  15C9  0021               	movlb	1	; select bank1
  2123  15CA  0860               	movf	(_pot+1)^(0+128),w
  2124  15CB  0020               	movlb	0	; select bank0
  2125  15CC  00E9               	movwf	?_sprintf+3
  2126  15CD  0021               	movlb	1	; select bank1
  2127  15CE  085F               	movf	_pot^(0+128),w
  2128  15CF  0020               	movlb	0	; select bank0
  2129  15D0  00E8               	movwf	?_sprintf+2
  2130  15D1  3020               	movlw	(low (_txtLCD| (0+256)))& (0+255)
  2131  15D2  3190  2004  3195   	fcall	_sprintf
  2132  15D5                     l4223:
  2133                           
  2134                           ;main.c: 28:         lcd_out(1,1,txtLCD);
  2135  15D5  01FB               	clrf	lcd_out@col
  2136  15D6  0AFB               	incf	lcd_out@col,f
  2137  15D7  3020               	movlw	(low (_txtLCD| (0+256)))& (0+255)
  2138  15D8  0020               	movlb	0	; select bank0
  2139  15D9  00ED               	movwf	??_main
  2140  15DA  086D               	movf	??_main,w
  2141  15DB  00FC               	movwf	lcd_out@str
  2142  15DC  3001               	movlw	1
  2143  15DD  319F  2772  3195   	fcall	_lcd_out
  2144  15E0                     l4225:
  2145                           
  2146                           ;main.c: 30:         conver = ADC_Read(1);
  2147  15E0  3001               	movlw	1
  2148  15E1  319E  26BC  3195   	fcall	_ADC_Read
  2149  15E4  0871               	movf	?_ADC_Read+1,w
  2150  15E5  0021               	movlb	1	; select bank1
  2151  15E6  00EC               	movwf	(_conver+1)^(0+128)
  2152  15E7  0870               	movf	?_ADC_Read,w
  2153  15E8  00EB               	movwf	_conver^(0+128)
  2154  15E9                     l4227:
  2155                           
  2156                           ;main.c: 31:         temp = (150.0/307.0)*conver;
  2157  15E9  303E               	movlw	62
  2158  15EA  0020               	movlb	0	; select bank0
  2159  15EB  00A3               	movwf	___flmul@b+3
  2160  15EC  30FA               	movlw	250
  2161  15ED  00A2               	movwf	___flmul@b+2
  2162  15EE  3029               	movlw	41
  2163  15EF  00A1               	movwf	___flmul@b+1
  2164  15F0  30B2               	movlw	178
  2165  15F1  00A0               	movwf	___flmul@b
  2166  15F2  0021               	movlb	1	; select bank1
  2167  15F3  086B               	movf	_conver^(0+128),w
  2168  15F4  00F0               	movwf	___xxtofl@val
  2169  15F5  086C               	movf	(_conver+1)^(0+128),w
  2170  15F6  00F1               	movwf	___xxtofl@val+1
  2171  15F7  0D89               	rlf	9,f
  2172  15F8  3B89               	subwfb	9,f
  2173  15F9  0989               	comf	9,f
  2174  15FA  00F2               	movwf	___xxtofl@val+2
  2175  15FB  00F3               	movwf	___xxtofl@val+3
  2176  15FC  3001               	movlw	1
  2177  15FD  3180  2025  3195   	fcall	___xxtofl
  2178  1600  0873               	movf	?___xxtofl+3,w
  2179  1601  0020               	movlb	0	; select bank0
  2180  1602  00A7               	movwf	___flmul@a+3
  2181  1603  0872               	movf	?___xxtofl+2,w
  2182  1604  00A6               	movwf	___flmul@a+2
  2183  1605  0871               	movf	?___xxtofl+1,w
  2184  1606  00A5               	movwf	___flmul@a+1
  2185  1607  0870               	movf	?___xxtofl,w
  2186  1608  00A4               	movwf	___flmul@a
  2187  1609  318B  232B  3195   	fcall	___flmul
  2188  160C  0020               	movlb	0	; select bank0
  2189  160D  0823               	movf	?___flmul+3,w
  2190  160E  0022               	movlb	2	; select bank2
  2191  160F  00BF               	movwf	(_temp+3)^(0+256)
  2192  1610  0020               	movlb	0	; select bank0
  2193  1611  0822               	movf	?___flmul+2,w
  2194  1612  0022               	movlb	2	; select bank2
  2195  1613  00BE               	movwf	(_temp+2)^(0+256)
  2196  1614  0020               	movlb	0	; select bank0
  2197  1615  0821               	movf	?___flmul+1,w
  2198  1616  0022               	movlb	2	; select bank2
  2199  1617  00BD               	movwf	(_temp+1)^(0+256)
  2200  1618  0020               	movlb	0	; select bank0
  2201  1619  0820               	movf	?___flmul,w
  2202  161A  0022               	movlb	2	; select bank2
  2203  161B  00BC               	movwf	_temp^(0+256)
  2204  161C                     l4229:
  2205                           
  2206                           ;main.c: 32:         sprintf(txtLCD,"TEMP: %3.1f", temp);
  2207  161C  3000               	movlw	low (STR_2| (0+32768))
  2208  161D  0020               	movlb	0	; select bank0
  2209  161E  00E6               	movwf	sprintf@fmt
  2210  161F  30A0               	movlw	high (STR_2| (0+32768))
  2211  1620  00E7               	movwf	sprintf@fmt+1
  2212  1621  0022               	movlb	2	; select bank2
  2213  1622  083F               	movf	(_temp+3)^(0+256),w
  2214  1623  0020               	movlb	0	; select bank0
  2215  1624  00EB               	movwf	?_sprintf+5
  2216  1625  0022               	movlb	2	; select bank2
  2217  1626  083E               	movf	(_temp+2)^(0+256),w
  2218  1627  0020               	movlb	0	; select bank0
  2219  1628  00EA               	movwf	?_sprintf+4
  2220  1629  0022               	movlb	2	; select bank2
  2221  162A  083D               	movf	(_temp+1)^(0+256),w
  2222  162B  0020               	movlb	0	; select bank0
  2223  162C  00E9               	movwf	?_sprintf+3
  2224  162D  0022               	movlb	2	; select bank2
  2225  162E  083C               	movf	_temp^(0+256),w
  2226  162F  0020               	movlb	0	; select bank0
  2227  1630  00E8               	movwf	?_sprintf+2
  2228  1631  3020               	movlw	(low (_txtLCD| (0+256)))& (0+255)
  2229  1632  3190  2004  3195   	fcall	_sprintf
  2230  1635                     l4231:
  2231                           
  2232                           ;main.c: 33:         lcd_out(2,1,txtLCD);
  2233  1635  01FB               	clrf	lcd_out@col
  2234  1636  0AFB               	incf	lcd_out@col,f
  2235  1637  3020               	movlw	(low (_txtLCD| (0+256)))& (0+255)
  2236  1638  0020               	movlb	0	; select bank0
  2237  1639  00ED               	movwf	??_main
  2238  163A  086D               	movf	??_main,w
  2239  163B  00FC               	movwf	lcd_out@str
  2240  163C  3002               	movlw	2
  2241  163D  319F  2772  3195   	fcall	_lcd_out
  2242  1640                     l4233:
  2243                           
  2244                           ;main.c: 35:         _delay((unsigned long)((10)*(8000000UL/4000.0)));
  2245  1640  301A               	movlw	26
  2246  1641  0020               	movlb	0	; select bank0
  2247  1642  00ED               	movwf	??_main
  2248  1643  30F8               	movlw	248
  2249  1644                     u5517:
  2250  1644  0B89               	decfsz	9,f
  2251  1645  2E44               	goto	u5517
  2252  1646  0BED               	decfsz	??_main,f
  2253  1647  2E44               	goto	u5517
  2254  1648  0000               	nop
  2255  1649  2D80               	goto	l4217
  2256  164A  3180  2802         	ljmp	start
  2257  164C                     __end_of_main:
  2258                           
  2259                           	psect	text1
  2260  1004                     __ptext1:	
  2261 ;; *************** function _sprintf *****************
  2262 ;; Defined at:
  2263 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  s               1    wreg     PTR unsigned char 
  2266 ;;		 -> txtLCD(20), 
  2267 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  2268 ;;		 -> STR_2(12), STR_1(11), 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  s               1   51[BANK1 ] PTR unsigned char 
  2271 ;;		 -> txtLCD(20), 
  2272 ;;  f              10   53[BANK1 ] struct _IO_FILE
  2273 ;;  ret             2    0        int 
  2274 ;;  ap              1   52[BANK1 ] PTR void [1]
  2275 ;;		 -> ?_sprintf(2), 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  2   70[BANK0 ] int 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2285 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2286 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2287 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2288 ;;      Totals:         0       7      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2289 ;;Total ram usage:       19 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 7
  2292 ;; This function calls:
  2293 ;;		_vfprintf
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299  1004                     _sprintf:	
  2300                           ;psect for function _sprintf
  2301                           
  2302                           
  2303                           ;incstack = 0
  2304                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2305                           ;sprintf@s stored from wreg
  2306  1004  0021               	movlb	1	; select bank1
  2307  1005  00D3               	movwf	sprintf@s^(0+128)
  2308  1006                     l4087:
  2309  1006  3068               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2310  1007  0020               	movlb	0	; select bank0
  2311  1008  00EC               	movwf	??_sprintf
  2312  1009  086C               	movf	??_sprintf,w
  2313  100A  0021               	movlb	1	; select bank1
  2314  100B  00D4               	movwf	sprintf@ap^(0+128)
  2315  100C  0853               	movf	sprintf@s^(0+128),w
  2316  100D  0020               	movlb	0	; select bank0
  2317  100E  00EC               	movwf	??_sprintf
  2318  100F  086C               	movf	??_sprintf,w
  2319  1010  0021               	movlb	1	; select bank1
  2320  1011  00D5               	movwf	sprintf@f^(0+128)
  2321  1012                     l4089:
  2322  1012  01D7               	clrf	(sprintf@f^(0+128)+2)
  2323  1013  01D8               	clrf	((sprintf@f+1)^(0+128)+2)
  2324  1014                     l4091:
  2325  1014  01DD               	clrf	(sprintf@f^(0+128)+8)
  2326  1015  01DE               	clrf	((sprintf@f+1)^(0+128)+8)
  2327  1016                     l4093:
  2328  1016  0020               	movlb	0	; select bank0
  2329  1017  0867               	movf	sprintf@fmt+1,w
  2330  1018  00DF               	movwf	vfprintf@fmt+1
  2331  1019  0866               	movf	sprintf@fmt,w
  2332  101A  00DE               	movwf	vfprintf@fmt
  2333  101B  30D4               	movlw	(low (sprintf@ap| 0))& (0+255)
  2334  101C  00EC               	movwf	??_sprintf
  2335  101D  086C               	movf	??_sprintf,w
  2336  101E  00E0               	movwf	vfprintf@ap
  2337  101F  30D5               	movlw	(low (sprintf@f| 0))& (0+255)
  2338  1020  3190  2059  3190   	fcall	_vfprintf
  2339  1023                     l4095:
  2340  1023  0021               	movlb	1	; select bank1
  2341  1024  0857               	movf	(sprintf@f^(0+128)+2),w
  2342  1025  0753               	addwf	sprintf@s^(0+128),w
  2343  1026  0020               	movlb	0	; select bank0
  2344  1027  00EC               	movwf	??_sprintf
  2345  1028  086C               	movf	??_sprintf,w
  2346  1029  0086               	movwf	6
  2347  102A  3001               	movlw	1	; select bank2/3
  2348  102B  0087               	movwf	7
  2349  102C  0181               	clrf	1
  2350  102D                     l765:
  2351  102D  0008               	return
  2352  102E                     __end_of_sprintf:
  2353                           
  2354                           	psect	text2
  2355  1059                     __ptext2:	
  2356 ;; *************** function _vfprintf *****************
  2357 ;; Defined at:
  2358 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  fp              1    wreg     PTR struct _IO_FILE
  2361 ;;		 -> sprintf@f(10), 
  2362 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  2363 ;;		 -> STR_2(12), STR_1(11), 
  2364 ;;  ap              1   64[BANK0 ] PTR PTR void 
  2365 ;;		 -> sprintf@ap(1), 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
  2368 ;;		 -> sprintf@f(10), 
  2369 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  2370 ;;		 -> STR_2(12), STR_1(11), 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2   62[BANK0 ] int 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2380 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2381 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2382 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2383 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;Total ram usage:        8 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 6
  2387 ;; This function calls:
  2388 ;;		_vfpfcnvrt
  2389 ;; This function is called by:
  2390 ;;		_sprintf
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394  1059                     _vfprintf:	
  2395                           ;psect for function _vfprintf
  2396                           
  2397                           
  2398                           ;incstack = 0
  2399                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2400                           ;vfprintf@fp stored from wreg
  2401  1059  0020               	movlb	0	; select bank0
  2402  105A  00E3               	movwf	vfprintf@fp
  2403  105B                     l4009:
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2406  105B  085F               	movf	vfprintf@fmt+1,w
  2407  105C  00E5               	movwf	vfprintf@cfmt+1
  2408  105D  085E               	movf	vfprintf@fmt,w
  2409  105E  00E4               	movwf	vfprintf@cfmt
  2410  105F                     l4011:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2413  105F  0021               	movlb	1	; select bank1
  2414  1060  01E3               	clrf	_nout^(0+128)
  2415  1061  01E4               	clrf	(_nout+1)^(0+128)
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2418  1062  2877               	goto	l4015
  2419  1063                     l4013:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2422  1063  3064               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2423  1064  00E1               	movwf	??_vfprintf
  2424  1065  0861               	movf	??_vfprintf,w
  2425  1066  00CE               	movwf	vfpfcnvrt@fmt
  2426  1067  0860               	movf	vfprintf@ap,w
  2427  1068  00E2               	movwf	??_vfprintf+1
  2428  1069  0862               	movf	??_vfprintf+1,w
  2429  106A  00CF               	movwf	vfpfcnvrt@ap
  2430  106B  0863               	movf	vfprintf@fp,w
  2431  106C  318D  2582  3190   	fcall	_vfpfcnvrt
  2432  106F  0020               	movlb	0	; select bank0
  2433  1070  084E               	movf	?_vfpfcnvrt,w
  2434  1071  0021               	movlb	1	; select bank1
  2435  1072  07E3               	addwf	_nout^(0+128),f
  2436  1073  0020               	movlb	0	; select bank0
  2437  1074  084F               	movf	?_vfpfcnvrt+1,w
  2438  1075  0021               	movlb	1	; select bank1
  2439  1076  3DE4               	addwfc	(_nout+1)^(0+128),f
  2440  1077                     l4015:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2443  1077  0020               	movlb	0	; select bank0
  2444  1078  0864               	movf	vfprintf@cfmt,w
  2445  1079  0084               	movwf	4
  2446  107A  0865               	movf	vfprintf@cfmt+1,w
  2447  107B  0085               	movwf	5
  2448  107C  0012               	moviw fsr0++
  2449  107D  1D03               	btfss	3,2
  2450  107E  2880               	goto	u5311
  2451  107F  2881               	goto	u5310
  2452  1080                     u5311:
  2453  1080  2863               	goto	l4013
  2454  1081                     u5310:
  2455  1081                     l4017:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2458  1081  0021               	movlb	1	; select bank1
  2459  1082  0864               	movf	(_nout+1)^(0+128),w
  2460  1083  0020               	movlb	0	; select bank0
  2461  1084  00DF               	movwf	?_vfprintf+1
  2462  1085  0021               	movlb	1	; select bank1
  2463  1086  0863               	movf	_nout^(0+128),w
  2464  1087  0020               	movlb	0	; select bank0
  2465  1088  00DE               	movwf	?_vfprintf
  2466  1089                     l933:
  2467  1089  0008               	return
  2468  108A                     __end_of_vfprintf:
  2469                           
  2470                           	psect	text3
  2471  0D82                     __ptext3:	
  2472 ;; *************** function _vfpfcnvrt *****************
  2473 ;; Defined at:
  2474 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  fp              1    wreg     PTR struct _IO_FILE
  2477 ;;		 -> sprintf@f(10), 
  2478 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  2479 ;;		 -> vfprintf@cfmt(2), 
  2480 ;;  ap              1   47[BANK0 ] PTR PTR void 
  2481 ;;		 -> sprintf@ap(1), 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  fp              1   61[BANK0 ] PTR struct _IO_FILE
  2484 ;;		 -> sprintf@f(10), 
  2485 ;;  llu             8    0        unsigned long long 
  2486 ;;  ll              8    0        long long 
  2487 ;;  f               4   53[BANK0 ] long long 
  2488 ;;  ct              3   57[BANK0 ] unsigned char [3]
  2489 ;;  vp              2    0        PTR void 
  2490 ;;  i               2    0        int 
  2491 ;;  done            2    0        int 
  2492 ;;  cp              2    0        PTR unsigned char 
  2493 ;;  c               1   60[BANK0 ] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  2   46[BANK0 ] int 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2503 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2504 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2505 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2506 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2507 ;;Total ram usage:       16 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 5
  2510 ;; This function calls:
  2511 ;;		_atoi
  2512 ;;		_efgtoa
  2513 ;;		_fputc
  2514 ;;		_isdigit
  2515 ;;		_isupper
  2516 ;;		_strncmp
  2517 ;;		_tolower
  2518 ;; This function is called by:
  2519 ;;		_vfprintf
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523  0D82                     _vfpfcnvrt:	
  2524                           ;psect for function _vfpfcnvrt
  2525                           
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2529                           ;vfpfcnvrt@fp stored from wreg
  2530  0D82  0020               	movlb	0	; select bank0
  2531  0D83  00DD               	movwf	vfpfcnvrt@fp
  2532  0D84                     l3877:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2535  0D84  084E               	movf	vfpfcnvrt@fmt,w
  2536  0D85  0086               	movwf	6
  2537  0D86  0187               	clrf	7
  2538  0D87  3F40               	moviw [0]fsr1
  2539  0D88  00D0               	movwf	??_vfpfcnvrt
  2540  0D89  3F41               	moviw [1]fsr1
  2541  0D8A  00D1               	movwf	??_vfpfcnvrt+1
  2542  0D8B  0850               	movf	??_vfpfcnvrt,w
  2543  0D8C  0084               	movwf	4
  2544  0D8D  0851               	movf	??_vfpfcnvrt+1,w
  2545  0D8E  0085               	movwf	5
  2546  0D8F  0012               	moviw fsr0++
  2547  0D90  3A25               	xorlw	37
  2548  0D91  1D03               	btfss	3,2
  2549  0D92  2D94               	goto	u5181
  2550  0D93  2D95               	goto	u5180
  2551  0D94                     u5181:
  2552  0D94  2FDC               	goto	l3981
  2553  0D95                     u5180:
  2554  0D95                     l3879:
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2557  0D95  084E               	movf	vfpfcnvrt@fmt,w
  2558  0D96  0086               	movwf	6
  2559  0D97  0187               	clrf	7
  2560  0D98  3001               	movlw	1
  2561  0D99  0781               	addwf	1,f
  2562  0D9A  3141               	addfsr 1,1
  2563  0D9B  1803               	skipnc
  2564  0D9C  0A81               	incf	1,f
  2565  0D9D                     l3881:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2568  0D9D  0021               	movlb	1	; select bank1
  2569  0D9E  01E5               	clrf	_width^(0+128)
  2570  0D9F  01E6               	clrf	(_width+1)^(0+128)
  2571  0DA0  01E9               	clrf	_flags^(0+128)
  2572  0DA1  01EA               	clrf	(_flags+1)^(0+128)
  2573  0DA2                     l3883:
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2576  0DA2  30FF               	movlw	255
  2577  0DA3  00E7               	movwf	_prec^(0+128)
  2578  0DA4  30FF               	movlw	255
  2579  0DA5  00E8               	movwf	(_prec^(0+128)+1)
  2580  0DA6                     l3885:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2583  0DA6  0020               	movlb	0	; select bank0
  2584  0DA7  084E               	movf	vfpfcnvrt@fmt,w
  2585  0DA8  0086               	movwf	6
  2586  0DA9  0187               	clrf	7
  2587  0DAA  3F40               	moviw [0]fsr1
  2588  0DAB  00D0               	movwf	??_vfpfcnvrt
  2589  0DAC  3F41               	moviw [1]fsr1
  2590  0DAD  00D1               	movwf	??_vfpfcnvrt+1
  2591  0DAE  0850               	movf	??_vfpfcnvrt,w
  2592  0DAF  0084               	movwf	4
  2593  0DB0  0851               	movf	??_vfpfcnvrt+1,w
  2594  0DB1  0085               	movwf	5
  2595  0DB2  0012               	moviw fsr0++
  2596  0DB3  3A2A               	xorlw	42
  2597  0DB4  1D03               	btfss	3,2
  2598  0DB5  2DB7               	goto	u5191
  2599  0DB6  2DB8               	goto	u5190
  2600  0DB7                     u5191:
  2601  0DB7  2DD8               	goto	l3897
  2602  0DB8                     u5190:
  2603  0DB8                     l3887:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2606  0DB8  084E               	movf	vfpfcnvrt@fmt,w
  2607  0DB9  0086               	movwf	6
  2608  0DBA  0187               	clrf	7
  2609  0DBB  3001               	movlw	1
  2610  0DBC  0781               	addwf	1,f
  2611  0DBD  3141               	addfsr 1,1
  2612  0DBE  1803               	skipnc
  2613  0DBF  0A81               	incf	1,f
  2614  0DC0                     l3889:
  2615                           
  2616                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2617  0DC0  084F               	movf	vfpfcnvrt@ap,w
  2618  0DC1  0086               	movwf	6
  2619  0DC2  0187               	clrf	7
  2620  0DC3  0801               	movf	1,w
  2621  0DC4  0084               	movwf	4
  2622  0DC5  0185               	clrf	5
  2623  0DC6  3002               	movlw	2
  2624  0DC7  0781               	addwf	1,f
  2625  0DC8  3F00               	moviw [0]fsr0
  2626  0DC9  0021               	movlb	1	; select bank1
  2627  0DCA  00E5               	movwf	_width^(0+128)
  2628  0DCB  3F01               	moviw [1]fsr0
  2629  0DCC  00E6               	movwf	(_width+1)^(0+128)
  2630  0DCD                     l3891:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2633  0DCD  1FE6               	btfss	(_width+1)^(0+128),7
  2634  0DCE  2DD0               	goto	u5201
  2635  0DCF  2DD1               	goto	u5200
  2636  0DD0                     u5201:
  2637  0DD0  2E0C               	goto	l3905
  2638  0DD1                     u5200:
  2639  0DD1                     l3893:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2642  0DD1  1469               	bsf	_flags^(0+128),0
  2643  0DD2                     l3895:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2646  0DD2  09E5               	comf	_width^(0+128),f
  2647  0DD3  09E6               	comf	(_width+1)^(0+128),f
  2648  0DD4  0AE5               	incf	_width^(0+128),f
  2649  0DD5  1903               	skipnz
  2650  0DD6  0AE6               	incf	(_width+1)^(0+128),f
  2651  0DD7  2E0C               	goto	l3905
  2652  0DD8                     l3897:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2655  0DD8  084E               	movf	vfpfcnvrt@fmt,w
  2656  0DD9  0086               	movwf	6
  2657  0DDA  0187               	clrf	7
  2658  0DDB  3F40               	moviw [0]fsr1
  2659  0DDC  00F6               	movwf	atoi@s
  2660  0DDD  3F41               	moviw [1]fsr1
  2661  0DDE  00F7               	movwf	atoi@s+1
  2662  0DDF  3194  24D8  318D   	fcall	_atoi
  2663  0DE2  0877               	movf	?_atoi+1,w
  2664  0DE3  0021               	movlb	1	; select bank1
  2665  0DE4  00E6               	movwf	(_width+1)^(0+128)
  2666  0DE5  0876               	movf	?_atoi,w
  2667  0DE6  00E5               	movwf	_width^(0+128)
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2670  0DE7  2DF0               	goto	l3903
  2671  0DE8                     l3899:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2674  0DE8  084E               	movf	vfpfcnvrt@fmt,w
  2675  0DE9  0086               	movwf	6
  2676  0DEA  0187               	clrf	7
  2677  0DEB  3001               	movlw	1
  2678  0DEC  0781               	addwf	1,f
  2679  0DED  3141               	addfsr 1,1
  2680  0DEE  1803               	skipnc
  2681  0DEF  0A81               	incf	1,f
  2682  0DF0                     l3903:
  2683  0DF0  0020               	movlb	0	; select bank0
  2684  0DF1  084E               	movf	vfpfcnvrt@fmt,w
  2685  0DF2  0086               	movwf	6
  2686  0DF3  0187               	clrf	7
  2687  0DF4  3F40               	moviw [0]fsr1
  2688  0DF5  00D0               	movwf	??_vfpfcnvrt
  2689  0DF6  3F41               	moviw [1]fsr1
  2690  0DF7  00D1               	movwf	??_vfpfcnvrt+1
  2691  0DF8  0850               	movf	??_vfpfcnvrt,w
  2692  0DF9  0084               	movwf	4
  2693  0DFA  0851               	movf	??_vfpfcnvrt+1,w
  2694  0DFB  0085               	movwf	5
  2695  0DFC  0800               	movf	0,w	;code access
  2696  0DFD  3ED0               	addlw	208
  2697  0DFE  00D2               	movwf	??_vfpfcnvrt+2
  2698  0DFF  30FF               	movlw	255
  2699  0E00  1803               	skipnc
  2700  0E01  3000               	movlw	0
  2701  0E02  00D3               	movwf	??_vfpfcnvrt+3
  2702  0E03  3000               	movlw	0
  2703  0E04  0253               	subwf	??_vfpfcnvrt+3,w
  2704  0E05  300A               	movlw	10
  2705  0E06  1903               	skipnz
  2706  0E07  0252               	subwf	??_vfpfcnvrt+2,w
  2707  0E08  1C03               	skipc
  2708  0E09  2E0B               	goto	u5211
  2709  0E0A  2E0C               	goto	u5210
  2710  0E0B                     u5211:
  2711  0E0B  2DE8               	goto	l3899
  2712  0E0C                     u5210:
  2713  0E0C                     l3905:
  2714                           
  2715                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2716  0E0C  0020               	movlb	0	; select bank0
  2717  0E0D  084E               	movf	vfpfcnvrt@fmt,w
  2718  0E0E  0086               	movwf	6
  2719  0E0F  0187               	clrf	7
  2720  0E10  3F40               	moviw [0]fsr1
  2721  0E11  00D0               	movwf	??_vfpfcnvrt
  2722  0E12  3F41               	moviw [1]fsr1
  2723  0E13  00D1               	movwf	??_vfpfcnvrt+1
  2724  0E14  0850               	movf	??_vfpfcnvrt,w
  2725  0E15  0084               	movwf	4
  2726  0E16  0851               	movf	??_vfpfcnvrt+1,w
  2727  0E17  0085               	movwf	5
  2728  0E18  0012               	moviw fsr0++
  2729  0E19  3A2E               	xorlw	46
  2730  0E1A  1D03               	btfss	3,2
  2731  0E1B  2E1D               	goto	u5221
  2732  0E1C  2E1E               	goto	u5220
  2733  0E1D                     u5221:
  2734  0E1D  2E85               	goto	l3925
  2735  0E1E                     u5220:
  2736  0E1E                     l3907:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2739  0E1E  0021               	movlb	1	; select bank1
  2740  0E1F  01E7               	clrf	_prec^(0+128)
  2741  0E20  01E8               	clrf	(_prec+1)^(0+128)
  2742  0E21                     l3909:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2745  0E21  0020               	movlb	0	; select bank0
  2746  0E22  084E               	movf	vfpfcnvrt@fmt,w
  2747  0E23  0086               	movwf	6
  2748  0E24  0187               	clrf	7
  2749  0E25  3001               	movlw	1
  2750  0E26  0781               	addwf	1,f
  2751  0E27  3141               	addfsr 1,1
  2752  0E28  1803               	skipnc
  2753  0E29  0A81               	incf	1,f
  2754  0E2A                     l3911:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2757  0E2A  084E               	movf	vfpfcnvrt@fmt,w
  2758  0E2B  0086               	movwf	6
  2759  0E2C  0187               	clrf	7
  2760  0E2D  3F40               	moviw [0]fsr1
  2761  0E2E  00D0               	movwf	??_vfpfcnvrt
  2762  0E2F  3F41               	moviw [1]fsr1
  2763  0E30  00D1               	movwf	??_vfpfcnvrt+1
  2764  0E31  0850               	movf	??_vfpfcnvrt,w
  2765  0E32  0084               	movwf	4
  2766  0E33  0851               	movf	??_vfpfcnvrt+1,w
  2767  0E34  0085               	movwf	5
  2768  0E35  0012               	moviw fsr0++
  2769  0E36  3A2A               	xorlw	42
  2770  0E37  1D03               	btfss	3,2
  2771  0E38  2E3A               	goto	u5231
  2772  0E39  2E3B               	goto	u5230
  2773  0E3A                     u5231:
  2774  0E3A  2E51               	goto	l3917
  2775  0E3B                     u5230:
  2776  0E3B                     l3913:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2779  0E3B  084E               	movf	vfpfcnvrt@fmt,w
  2780  0E3C  0086               	movwf	6
  2781  0E3D  0187               	clrf	7
  2782  0E3E  3001               	movlw	1
  2783  0E3F  0781               	addwf	1,f
  2784  0E40  3141               	addfsr 1,1
  2785  0E41  1803               	skipnc
  2786  0E42  0A81               	incf	1,f
  2787  0E43                     l3915:
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2790  0E43  084F               	movf	vfpfcnvrt@ap,w
  2791  0E44  0086               	movwf	6
  2792  0E45  0187               	clrf	7
  2793  0E46  0801               	movf	1,w
  2794  0E47  0084               	movwf	4
  2795  0E48  0185               	clrf	5
  2796  0E49  3002               	movlw	2
  2797  0E4A  0781               	addwf	1,f
  2798  0E4B  3F00               	moviw [0]fsr0
  2799  0E4C  0021               	movlb	1	; select bank1
  2800  0E4D  00E7               	movwf	_prec^(0+128)
  2801  0E4E  3F01               	moviw [1]fsr0
  2802  0E4F  00E8               	movwf	(_prec+1)^(0+128)
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2805  0E50  2E85               	goto	l3925
  2806  0E51                     l3917:
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2809  0E51  084E               	movf	vfpfcnvrt@fmt,w
  2810  0E52  0086               	movwf	6
  2811  0E53  0187               	clrf	7
  2812  0E54  3F40               	moviw [0]fsr1
  2813  0E55  00F6               	movwf	atoi@s
  2814  0E56  3F41               	moviw [1]fsr1
  2815  0E57  00F7               	movwf	atoi@s+1
  2816  0E58  3194  24D8  318D   	fcall	_atoi
  2817  0E5B  0877               	movf	?_atoi+1,w
  2818  0E5C  0021               	movlb	1	; select bank1
  2819  0E5D  00E8               	movwf	(_prec+1)^(0+128)
  2820  0E5E  0876               	movf	?_atoi,w
  2821  0E5F  00E7               	movwf	_prec^(0+128)
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2824  0E60  2E69               	goto	l3923
  2825  0E61                     l3919:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2828  0E61  084E               	movf	vfpfcnvrt@fmt,w
  2829  0E62  0086               	movwf	6
  2830  0E63  0187               	clrf	7
  2831  0E64  3001               	movlw	1
  2832  0E65  0781               	addwf	1,f
  2833  0E66  3141               	addfsr 1,1
  2834  0E67  1803               	skipnc
  2835  0E68  0A81               	incf	1,f
  2836  0E69                     l3923:
  2837  0E69  0020               	movlb	0	; select bank0
  2838  0E6A  084E               	movf	vfpfcnvrt@fmt,w
  2839  0E6B  0086               	movwf	6
  2840  0E6C  0187               	clrf	7
  2841  0E6D  3F40               	moviw [0]fsr1
  2842  0E6E  00D0               	movwf	??_vfpfcnvrt
  2843  0E6F  3F41               	moviw [1]fsr1
  2844  0E70  00D1               	movwf	??_vfpfcnvrt+1
  2845  0E71  0850               	movf	??_vfpfcnvrt,w
  2846  0E72  0084               	movwf	4
  2847  0E73  0851               	movf	??_vfpfcnvrt+1,w
  2848  0E74  0085               	movwf	5
  2849  0E75  0800               	movf	0,w	;code access
  2850  0E76  3ED0               	addlw	208
  2851  0E77  00D2               	movwf	??_vfpfcnvrt+2
  2852  0E78  30FF               	movlw	255
  2853  0E79  1803               	skipnc
  2854  0E7A  3000               	movlw	0
  2855  0E7B  00D3               	movwf	??_vfpfcnvrt+3
  2856  0E7C  3000               	movlw	0
  2857  0E7D  0253               	subwf	??_vfpfcnvrt+3,w
  2858  0E7E  300A               	movlw	10
  2859  0E7F  1903               	skipnz
  2860  0E80  0252               	subwf	??_vfpfcnvrt+2,w
  2861  0E81  1C03               	skipc
  2862  0E82  2E84               	goto	u5241
  2863  0E83  2E85               	goto	u5240
  2864  0E84                     u5241:
  2865  0E84  2E61               	goto	l3919
  2866  0E85                     u5240:
  2867  0E85                     l3925:
  2868                           
  2869                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2870  0E85  0020               	movlb	0	; select bank0
  2871  0E86  084E               	movf	vfpfcnvrt@fmt,w
  2872  0E87  0086               	movwf	6
  2873  0E88  0187               	clrf	7
  2874  0E89  3F40               	moviw [0]fsr1
  2875  0E8A  00D0               	movwf	??_vfpfcnvrt
  2876  0E8B  3F41               	moviw [1]fsr1
  2877  0E8C  00D1               	movwf	??_vfpfcnvrt+1
  2878  0E8D  0850               	movf	??_vfpfcnvrt,w
  2879  0E8E  0084               	movwf	4
  2880  0E8F  0851               	movf	??_vfpfcnvrt+1,w
  2881  0E90  0085               	movwf	5
  2882  0E91  0800               	movf	0,w	;code access
  2883  0E92  00D2               	movwf	??_vfpfcnvrt+2
  2884  0E93  01D3               	clrf	??_vfpfcnvrt+3
  2885  0E94  0852               	movf	??_vfpfcnvrt+2,w
  2886  0E95  00F6               	movwf	tolower@c
  2887  0E96  0853               	movf	??_vfpfcnvrt+3,w
  2888  0E97  00F7               	movwf	tolower@c+1
  2889  0E98  319E  26D2  318D   	fcall	_tolower
  2890  0E9B  0876               	movf	?_tolower,w
  2891  0E9C  0020               	movlb	0	; select bank0
  2892  0E9D  00D4               	movwf	??_vfpfcnvrt+4
  2893  0E9E  0854               	movf	??_vfpfcnvrt+4,w
  2894  0E9F  00D9               	movwf	vfpfcnvrt@ct
  2895  0EA0                     l3927:
  2896                           
  2897                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2898  0EA0  0859               	movf	vfpfcnvrt@ct,w
  2899  0EA1  1903               	btfsc	3,2
  2900  0EA2  2EA4               	goto	u5251
  2901  0EA3  2EA5               	goto	u5250
  2902  0EA4                     u5251:
  2903  0EA4  2EE4               	goto	l3935
  2904  0EA5                     u5250:
  2905  0EA5                     l3929:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2908  0EA5  084E               	movf	vfpfcnvrt@fmt,w
  2909  0EA6  0086               	movwf	6
  2910  0EA7  0187               	clrf	7
  2911  0EA8  3F40               	moviw [0]fsr1
  2912  0EA9  00D0               	movwf	??_vfpfcnvrt
  2913  0EAA  3F41               	moviw [1]fsr1
  2914  0EAB  00D1               	movwf	??_vfpfcnvrt+1
  2915  0EAC  3001               	movlw	1
  2916  0EAD  0750               	addwf	??_vfpfcnvrt,w
  2917  0EAE  0084               	movwf	4
  2918  0EAF  0851               	movf	??_vfpfcnvrt+1,w
  2919  0EB0  1803               	skipnc
  2920  0EB1  0A51               	incf	??_vfpfcnvrt+1,w
  2921  0EB2  0085               	movwf	5
  2922  0EB3  0800               	movf	0,w	;code access
  2923  0EB4  00D2               	movwf	??_vfpfcnvrt+2
  2924  0EB5  01D3               	clrf	??_vfpfcnvrt+3
  2925  0EB6  0852               	movf	??_vfpfcnvrt+2,w
  2926  0EB7  00F6               	movwf	tolower@c
  2927  0EB8  0853               	movf	??_vfpfcnvrt+3,w
  2928  0EB9  00F7               	movwf	tolower@c+1
  2929  0EBA  319E  26D2  318D   	fcall	_tolower
  2930  0EBD  0876               	movf	?_tolower,w
  2931  0EBE  0020               	movlb	0	; select bank0
  2932  0EBF  00D4               	movwf	??_vfpfcnvrt+4
  2933  0EC0  0854               	movf	??_vfpfcnvrt+4,w
  2934  0EC1  00DA               	movwf	vfpfcnvrt@ct+1
  2935  0EC2                     l3931:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2938  0EC2  085A               	movf	vfpfcnvrt@ct+1,w
  2939  0EC3  1903               	btfsc	3,2
  2940  0EC4  2EC6               	goto	u5261
  2941  0EC5  2EC7               	goto	u5260
  2942  0EC6                     u5261:
  2943  0EC6  2EE4               	goto	l3935
  2944  0EC7                     u5260:
  2945  0EC7                     l3933:
  2946                           
  2947                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2948  0EC7  084E               	movf	vfpfcnvrt@fmt,w
  2949  0EC8  0086               	movwf	6
  2950  0EC9  0187               	clrf	7
  2951  0ECA  3F40               	moviw [0]fsr1
  2952  0ECB  00D0               	movwf	??_vfpfcnvrt
  2953  0ECC  3F41               	moviw [1]fsr1
  2954  0ECD  00D1               	movwf	??_vfpfcnvrt+1
  2955  0ECE  3002               	movlw	2
  2956  0ECF  0750               	addwf	??_vfpfcnvrt,w
  2957  0ED0  0084               	movwf	4
  2958  0ED1  0851               	movf	??_vfpfcnvrt+1,w
  2959  0ED2  1803               	skipnc
  2960  0ED3  0A51               	incf	??_vfpfcnvrt+1,w
  2961  0ED4  0085               	movwf	5
  2962  0ED5  0800               	movf	0,w	;code access
  2963  0ED6  00D2               	movwf	??_vfpfcnvrt+2
  2964  0ED7  01D3               	clrf	??_vfpfcnvrt+3
  2965  0ED8  0852               	movf	??_vfpfcnvrt+2,w
  2966  0ED9  00F6               	movwf	tolower@c
  2967  0EDA  0853               	movf	??_vfpfcnvrt+3,w
  2968  0EDB  00F7               	movwf	tolower@c+1
  2969  0EDC  319E  26D2  318D   	fcall	_tolower
  2970  0EDF  0876               	movf	?_tolower,w
  2971  0EE0  0020               	movlb	0	; select bank0
  2972  0EE1  00D4               	movwf	??_vfpfcnvrt+4
  2973  0EE2  0854               	movf	??_vfpfcnvrt+4,w
  2974  0EE3  00DB               	movwf	vfpfcnvrt@ct+2
  2975  0EE4                     l3935:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2978  0EE4  3066               	movlw	102
  2979  0EE5  0659               	xorwf	vfpfcnvrt@ct,w
  2980  0EE6  1D03               	btfss	3,2
  2981  0EE7  2EE9               	goto	u5271
  2982  0EE8  2EEA               	goto	u5270
  2983  0EE9                     u5271:
  2984  0EE9  2F27               	goto	l3947
  2985  0EEA                     u5270:
  2986  0EEA                     l3937:
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2989  0EEA  084E               	movf	vfpfcnvrt@fmt,w
  2990  0EEB  0086               	movwf	6
  2991  0EEC  0187               	clrf	7
  2992  0EED  3F40               	moviw [0]fsr1
  2993  0EEE  00D0               	movwf	??_vfpfcnvrt
  2994  0EEF  3F41               	moviw [1]fsr1
  2995  0EF0  00D1               	movwf	??_vfpfcnvrt+1
  2996  0EF1  0850               	movf	??_vfpfcnvrt,w
  2997  0EF2  0084               	movwf	4
  2998  0EF3  0851               	movf	??_vfpfcnvrt+1,w
  2999  0EF4  0085               	movwf	5
  3000  0EF5  0800               	movf	0,w	;code access
  3001  0EF6  00D2               	movwf	??_vfpfcnvrt+2
  3002  0EF7  0852               	movf	??_vfpfcnvrt+2,w
  3003  0EF8  00DC               	movwf	vfpfcnvrt@c
  3004  0EF9                     l3939:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3007  0EF9  084E               	movf	vfpfcnvrt@fmt,w
  3008  0EFA  0086               	movwf	6
  3009  0EFB  0187               	clrf	7
  3010  0EFC  3001               	movlw	1
  3011  0EFD  0781               	addwf	1,f
  3012  0EFE  3141               	addfsr 1,1
  3013  0EFF  1803               	skipnc
  3014  0F00  0A81               	incf	1,f
  3015  0F01                     l3941:
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3018  0F01  084F               	movf	vfpfcnvrt@ap,w
  3019  0F02  0086               	movwf	6
  3020  0F03  0187               	clrf	7
  3021  0F04  0801               	movf	1,w
  3022  0F05  0084               	movwf	4
  3023  0F06  0185               	clrf	5
  3024  0F07  3004               	movlw	4
  3025  0F08  0781               	addwf	1,f
  3026  0F09  3F00               	moviw [0]fsr0
  3027  0F0A  00D5               	movwf	vfpfcnvrt@f
  3028  0F0B  3F01               	moviw [1]fsr0
  3029  0F0C  00D6               	movwf	vfpfcnvrt@f+1
  3030  0F0D  3F02               	moviw [2]fsr0
  3031  0F0E  00D7               	movwf	vfpfcnvrt@f+2
  3032  0F0F  3F03               	moviw [3]fsr0
  3033  0F10  00D8               	movwf	vfpfcnvrt@f+3
  3034  0F11                     l3943:
  3035                           
  3036                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3037  0F11  0858               	movf	vfpfcnvrt@f+3,w
  3038  0F12  00C9               	movwf	efgtoa@f+3
  3039  0F13  0857               	movf	vfpfcnvrt@f+2,w
  3040  0F14  00C8               	movwf	efgtoa@f+2
  3041  0F15  0856               	movf	vfpfcnvrt@f+1,w
  3042  0F16  00C7               	movwf	efgtoa@f+1
  3043  0F17  0855               	movf	vfpfcnvrt@f,w
  3044  0F18  00C6               	movwf	efgtoa@f
  3045  0F19  085C               	movf	vfpfcnvrt@c,w
  3046  0F1A  00D0               	movwf	??_vfpfcnvrt
  3047  0F1B  0850               	movf	??_vfpfcnvrt,w
  3048  0F1C  00CA               	movwf	efgtoa@c
  3049  0F1D  085D               	movf	vfpfcnvrt@fp,w
  3050  0F1E  3180  20D1  318D   	fcall	_efgtoa
  3051  0F21  0020               	movlb	0	; select bank0
  3052  0F22  0847               	movf	?_efgtoa+1,w
  3053  0F23  00CF               	movwf	?_vfpfcnvrt+1
  3054  0F24  0846               	movf	?_efgtoa,w
  3055  0F25  00CE               	movwf	?_vfpfcnvrt
  3056  0F26  2FFF               	goto	l921
  3057  0F27                     l3947:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3060  0F27  3027               	movlw	low (STR_11| (0+32768))
  3061  0F28  00F0               	movwf	strncmp@_r
  3062  0F29  30A0               	movlw	high (STR_11| (0+32768))
  3063  0F2A  00F1               	movwf	strncmp@_r+1
  3064  0F2B  3002               	movlw	2
  3065  0F2C  00F2               	movwf	strncmp@n
  3066  0F2D  3000               	movlw	0
  3067  0F2E  00F3               	movwf	strncmp@n+1
  3068  0F2F  3059               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  3069  0F30  3191  21ED  318D   	fcall	_strncmp
  3070  0F33  0870               	movf	?_strncmp,w
  3071  0F34  0471               	iorwf	?_strncmp+1,w
  3072  0F35  1D03               	btfss	3,2
  3073  0F36  2F38               	goto	u5281
  3074  0F37  2F39               	goto	u5280
  3075  0F38                     u5281:
  3076  0F38  2FA6               	goto	l3965
  3077  0F39                     u5280:
  3078  0F39                     l3949:
  3079                           
  3080                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  3081  0F39  0020               	movlb	0	; select bank0
  3082  0F3A  084E               	movf	vfpfcnvrt@fmt,w
  3083  0F3B  0086               	movwf	6
  3084  0F3C  0187               	clrf	7
  3085  0F3D  3F40               	moviw [0]fsr1
  3086  0F3E  00D0               	movwf	??_vfpfcnvrt
  3087  0F3F  3F41               	moviw [1]fsr1
  3088  0F40  00D1               	movwf	??_vfpfcnvrt+1
  3089  0F41  3001               	movlw	1
  3090  0F42  0750               	addwf	??_vfpfcnvrt,w
  3091  0F43  0084               	movwf	4
  3092  0F44  0851               	movf	??_vfpfcnvrt+1,w
  3093  0F45  1803               	skipnc
  3094  0F46  0A51               	incf	??_vfpfcnvrt+1,w
  3095  0F47  0085               	movwf	5
  3096  0F48  0800               	movf	0,w	;code access
  3097  0F49  00D2               	movwf	??_vfpfcnvrt+2
  3098  0F4A  0852               	movf	??_vfpfcnvrt+2,w
  3099  0F4B  00DC               	movwf	vfpfcnvrt@c
  3100  0F4C                     l3953:	
  3101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 && isupper((int)(*fmt)[0]), ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3102                           
  3103  0F4C  084E               	movf	vfpfcnvrt@fmt,w
  3104  0F4D  0086               	movwf	6
  3105  0F4E  0187               	clrf	7
  3106  0F4F  3F40               	moviw [0]fsr1
  3107  0F50  00D0               	movwf	??_vfpfcnvrt
  3108  0F51  3F41               	moviw [1]fsr1
  3109  0F52  00D1               	movwf	??_vfpfcnvrt+1
  3110  0F53  0850               	movf	??_vfpfcnvrt,w
  3111  0F54  0084               	movwf	4
  3112  0F55  0851               	movf	??_vfpfcnvrt+1,w
  3113  0F56  0085               	movwf	5
  3114  0F57  0800               	movf	0,w	;code access
  3115  0F58  3EBF               	addlw	191
  3116  0F59  00D2               	movwf	??_vfpfcnvrt+2
  3117  0F5A  30FF               	movlw	255
  3118  0F5B  1803               	skipnc
  3119  0F5C  3000               	movlw	0
  3120  0F5D  00D3               	movwf	??_vfpfcnvrt+3
  3121  0F5E  3000               	movlw	0
  3122  0F5F  0253               	subwf	??_vfpfcnvrt+3,w
  3123  0F60  301A               	movlw	26
  3124  0F61  1903               	skipnz
  3125  0F62  0252               	subwf	??_vfpfcnvrt+2,w
  3126  0F63  1803               	skipnc
  3127  0F64  2F66               	goto	u5291
  3128  0F65  2F67               	goto	u5290
  3129  0F66                     u5291:
  3130  0F66  2F78               	goto	l3957
  3131  0F67                     u5290:
  3132  0F67                     l3955:
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3135  0F67  084F               	movf	vfpfcnvrt@ap,w
  3136  0F68  0086               	movwf	6
  3137  0F69  0187               	clrf	7
  3138  0F6A  0801               	movf	1,w
  3139  0F6B  0084               	movwf	4
  3140  0F6C  0185               	clrf	5
  3141  0F6D  3004               	movlw	4
  3142  0F6E  0781               	addwf	1,f
  3143  0F6F  3F00               	moviw [0]fsr0
  3144  0F70  00D5               	movwf	vfpfcnvrt@f
  3145  0F71  3F01               	moviw [1]fsr0
  3146  0F72  00D6               	movwf	vfpfcnvrt@f+1
  3147  0F73  3F02               	moviw [2]fsr0
  3148  0F74  00D7               	movwf	vfpfcnvrt@f+2
  3149  0F75  3F03               	moviw [3]fsr0
  3150  0F76  00D8               	movwf	vfpfcnvrt@f+3
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3153  0F77  2F88               	goto	l3959
  3154  0F78                     l3957:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3157  0F78  084F               	movf	vfpfcnvrt@ap,w
  3158  0F79  0086               	movwf	6
  3159  0F7A  0187               	clrf	7
  3160  0F7B  0801               	movf	1,w
  3161  0F7C  0084               	movwf	4
  3162  0F7D  0185               	clrf	5
  3163  0F7E  3004               	movlw	4
  3164  0F7F  0781               	addwf	1,f
  3165  0F80  3F00               	moviw [0]fsr0
  3166  0F81  00D5               	movwf	vfpfcnvrt@f
  3167  0F82  3F01               	moviw [1]fsr0
  3168  0F83  00D6               	movwf	vfpfcnvrt@f+1
  3169  0F84  3F02               	moviw [2]fsr0
  3170  0F85  00D7               	movwf	vfpfcnvrt@f+2
  3171  0F86  3F03               	moviw [3]fsr0
  3172  0F87  00D8               	movwf	vfpfcnvrt@f+3
  3173  0F88                     l3959:
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3176  0F88  084E               	movf	vfpfcnvrt@fmt,w
  3177  0F89  0086               	movwf	6
  3178  0F8A  0187               	clrf	7
  3179  0F8B  3002               	movlw	2
  3180  0F8C  0781               	addwf	1,f
  3181  0F8D  3141               	addfsr 1,1
  3182  0F8E  1803               	skipnc
  3183  0F8F  0A81               	incf	1,f
  3184  0F90                     l3961:
  3185                           
  3186                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3187  0F90  0858               	movf	vfpfcnvrt@f+3,w
  3188  0F91  00C9               	movwf	efgtoa@f+3
  3189  0F92  0857               	movf	vfpfcnvrt@f+2,w
  3190  0F93  00C8               	movwf	efgtoa@f+2
  3191  0F94  0856               	movf	vfpfcnvrt@f+1,w
  3192  0F95  00C7               	movwf	efgtoa@f+1
  3193  0F96  0855               	movf	vfpfcnvrt@f,w
  3194  0F97  00C6               	movwf	efgtoa@f
  3195  0F98  085C               	movf	vfpfcnvrt@c,w
  3196  0F99  00D0               	movwf	??_vfpfcnvrt
  3197  0F9A  0850               	movf	??_vfpfcnvrt,w
  3198  0F9B  00CA               	movwf	efgtoa@c
  3199  0F9C  085D               	movf	vfpfcnvrt@fp,w
  3200  0F9D  3180  20D1  318D   	fcall	_efgtoa
  3201  0FA0  0020               	movlb	0	; select bank0
  3202  0FA1  0847               	movf	?_efgtoa+1,w
  3203  0FA2  00CF               	movwf	?_vfpfcnvrt+1
  3204  0FA3  0846               	movf	?_efgtoa,w
  3205  0FA4  00CE               	movwf	?_vfpfcnvrt
  3206  0FA5  2FFF               	goto	l921
  3207  0FA6                     l3965:
  3208                           
  3209                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3210  0FA6  0020               	movlb	0	; select bank0
  3211  0FA7  084E               	movf	vfpfcnvrt@fmt,w
  3212  0FA8  0086               	movwf	6
  3213  0FA9  0187               	clrf	7
  3214  0FAA  3F40               	moviw [0]fsr1
  3215  0FAB  00D0               	movwf	??_vfpfcnvrt
  3216  0FAC  3F41               	moviw [1]fsr1
  3217  0FAD  00D1               	movwf	??_vfpfcnvrt+1
  3218  0FAE  0850               	movf	??_vfpfcnvrt,w
  3219  0FAF  0084               	movwf	4
  3220  0FB0  0851               	movf	??_vfpfcnvrt+1,w
  3221  0FB1  0085               	movwf	5
  3222  0FB2  0012               	moviw fsr0++
  3223  0FB3  3A25               	xorlw	37
  3224  0FB4  1D03               	btfss	3,2
  3225  0FB5  2FB7               	goto	u5301
  3226  0FB6  2FB8               	goto	u5300
  3227  0FB7                     u5301:
  3228  0FB7  2FD1               	goto	l3975
  3229  0FB8                     u5300:
  3230  0FB8                     l3967:
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3233  0FB8  084E               	movf	vfpfcnvrt@fmt,w
  3234  0FB9  0086               	movwf	6
  3235  0FBA  0187               	clrf	7
  3236  0FBB  3001               	movlw	1
  3237  0FBC  0781               	addwf	1,f
  3238  0FBD  3141               	addfsr 1,1
  3239  0FBE  1803               	skipnc
  3240  0FBF  0A81               	incf	1,f
  3241  0FC0                     l3969:
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3244  0FC0  3025               	movlw	37
  3245  0FC1  00F0               	movwf	fputc@c
  3246  0FC2  3000               	movlw	0
  3247  0FC3  00F1               	movwf	fputc@c+1
  3248  0FC4  085D               	movf	vfpfcnvrt@fp,w
  3249  0FC5  00D0               	movwf	??_vfpfcnvrt
  3250  0FC6  0850               	movf	??_vfpfcnvrt,w
  3251  0FC7  00F2               	movwf	fputc@fp
  3252  0FC8  3191  219A  318D   	fcall	_fputc
  3253  0FCB                     l3971:
  3254                           
  3255                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3256  0FCB  3001               	movlw	1
  3257  0FCC  0020               	movlb	0	; select bank0
  3258  0FCD  00CE               	movwf	?_vfpfcnvrt
  3259  0FCE  3000               	movlw	0
  3260  0FCF  00CF               	movwf	?_vfpfcnvrt+1
  3261  0FD0  2FFF               	goto	l921
  3262  0FD1                     l3975:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3265  0FD1  084E               	movf	vfpfcnvrt@fmt,w
  3266  0FD2  0086               	movwf	6
  3267  0FD3  0187               	clrf	7
  3268  0FD4  3001               	movlw	1
  3269  0FD5  0781               	addwf	1,f
  3270  0FD6  3141               	addfsr 1,1
  3271  0FD7  1803               	skipnc
  3272  0FD8  0A81               	incf	1,f
  3273  0FD9                     l3977:
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3276  0FD9  01CE               	clrf	?_vfpfcnvrt
  3277  0FDA  01CF               	clrf	?_vfpfcnvrt+1
  3278  0FDB  2FFF               	goto	l921
  3279  0FDC                     l3981:
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3282  0FDC  084E               	movf	vfpfcnvrt@fmt,w
  3283  0FDD  0086               	movwf	6
  3284  0FDE  0187               	clrf	7
  3285  0FDF  3F40               	moviw [0]fsr1
  3286  0FE0  00D0               	movwf	??_vfpfcnvrt
  3287  0FE1  3F41               	moviw [1]fsr1
  3288  0FE2  00D1               	movwf	??_vfpfcnvrt+1
  3289  0FE3  0850               	movf	??_vfpfcnvrt,w
  3290  0FE4  0084               	movwf	4
  3291  0FE5  0851               	movf	??_vfpfcnvrt+1,w
  3292  0FE6  0085               	movwf	5
  3293  0FE7  0800               	movf	0,w	;code access
  3294  0FE8  00D2               	movwf	??_vfpfcnvrt+2
  3295  0FE9  01D3               	clrf	??_vfpfcnvrt+3
  3296  0FEA  0852               	movf	??_vfpfcnvrt+2,w
  3297  0FEB  00F0               	movwf	fputc@c
  3298  0FEC  0853               	movf	??_vfpfcnvrt+3,w
  3299  0FED  00F1               	movwf	fputc@c+1
  3300  0FEE  085D               	movf	vfpfcnvrt@fp,w
  3301  0FEF  00D4               	movwf	??_vfpfcnvrt+4
  3302  0FF0  0854               	movf	??_vfpfcnvrt+4,w
  3303  0FF1  00F2               	movwf	fputc@fp
  3304  0FF2  3191  219A  318D   	fcall	_fputc
  3305  0FF5                     l3983:
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3308  0FF5  0020               	movlb	0	; select bank0
  3309  0FF6  084E               	movf	vfpfcnvrt@fmt,w
  3310  0FF7  0086               	movwf	6
  3311  0FF8  0187               	clrf	7
  3312  0FF9  3001               	movlw	1
  3313  0FFA  0781               	addwf	1,f
  3314  0FFB  3141               	addfsr 1,1
  3315  0FFC  1803               	skipnc
  3316  0FFD  0A81               	incf	1,f
  3317  0FFE  2FCB               	goto	l3971
  3318  0FFF                     l921:
  3319  0FFF  0008               	return
  3320  1000                     __end_of_vfpfcnvrt:
  3321                           
  3322                           	psect	text4
  3323  11ED                     __ptext4:	
  3324 ;; *************** function _strncmp *****************
  3325 ;; Defined at:
  3326 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  _l              1    wreg     PTR const unsigned char 
  3329 ;;		 -> vfpfcnvrt@ct(3), 
  3330 ;;  _r              2    0[COMMON] PTR const unsigned char 
  3331 ;;		 -> STR_13(3), 
  3332 ;;  n               2    2[COMMON] unsigned int 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  _l              1    5[COMMON] PTR const unsigned char 
  3335 ;;		 -> vfpfcnvrt@ct(3), 
  3336 ;;  r               2    6[COMMON] PTR const unsigned char 
  3337 ;;		 -> STR_13(3), 
  3338 ;;  l               1    8[COMMON] PTR const unsigned char 
  3339 ;;		 -> vfpfcnvrt@ct(3), 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2    0[COMMON] int 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3350 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3352 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3353 ;;Total ram usage:        9 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_vfpfcnvrt
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362  11ED                     _strncmp:	
  3363                           ;psect for function _strncmp
  3364                           
  3365                           
  3366                           ;incstack = 0
  3367                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  3368                           ;strncmp@_l stored from wreg
  3369  11ED  00F5               	movwf	strncmp@_l
  3370  11EE                     l3849:
  3371  11EE  0875               	movf	strncmp@_l,w
  3372  11EF  00F4               	movwf	??_strncmp
  3373  11F0  0874               	movf	??_strncmp,w
  3374  11F1  00F8               	movwf	strncmp@l
  3375  11F2  0871               	movf	strncmp@_r+1,w
  3376  11F3  00F7               	movwf	strncmp@r+1
  3377  11F4  0870               	movf	strncmp@_r,w
  3378  11F5  00F6               	movwf	strncmp@r
  3379  11F6                     l3851:
  3380  11F6  3001               	movlw	1
  3381  11F7  02F2               	subwf	strncmp@n,f
  3382  11F8  3000               	movlw	0
  3383  11F9  3BF3               	subwfb	strncmp@n+1,f
  3384  11FA  0A72               	incf	strncmp@n,w
  3385  11FB  1D03               	skipz
  3386  11FC  2A01               	goto	u5131
  3387  11FD  0A73               	incf	strncmp@n+1,w
  3388  11FE  1D03               	btfss	3,2
  3389  11FF  2A01               	goto	u5131
  3390  1200  2A02               	goto	u5130
  3391  1201                     u5131:
  3392  1201  2A11               	goto	l3863
  3393  1202                     u5130:
  3394  1202                     l3853:
  3395  1202  01F0               	clrf	?_strncmp
  3396  1203  01F1               	clrf	?_strncmp+1
  3397  1204  2A44               	goto	l1041
  3398  1205                     l3857:
  3399  1205  3001               	movlw	1
  3400  1206  00F4               	movwf	??_strncmp
  3401  1207  0874               	movf	??_strncmp,w
  3402  1208  07F8               	addwf	strncmp@l,f
  3403  1209                     l3859:
  3404  1209  3001               	movlw	1
  3405  120A  07F6               	addwf	strncmp@r,f
  3406  120B  3000               	movlw	0
  3407  120C  3DF7               	addwfc	strncmp@r+1,f
  3408  120D                     l3861:
  3409  120D  3001               	movlw	1
  3410  120E  02F2               	subwf	strncmp@n,f
  3411  120F  3000               	movlw	0
  3412  1210  3BF3               	subwfb	strncmp@n+1,f
  3413  1211                     l3863:
  3414  1211  0878               	movf	strncmp@l,w
  3415  1212  0086               	movwf	6
  3416  1213  0187               	clrf	7
  3417  1214  0801               	movf	1,w
  3418  1215  1903               	btfsc	3,2
  3419  1216  2A18               	goto	u5141
  3420  1217  2A19               	goto	u5140
  3421  1218                     u5141:
  3422  1218  2A37               	goto	l3871
  3423  1219                     u5140:
  3424  1219                     l3865:
  3425  1219  0876               	movf	strncmp@r,w
  3426  121A  0084               	movwf	4
  3427  121B  0877               	movf	strncmp@r+1,w
  3428  121C  0085               	movwf	5
  3429  121D  0012               	moviw fsr0++
  3430  121E  1903               	btfsc	3,2
  3431  121F  2A21               	goto	u5151
  3432  1220  2A22               	goto	u5150
  3433  1221                     u5151:
  3434  1221  2A37               	goto	l3871
  3435  1222                     u5150:
  3436  1222                     l3867:
  3437  1222  0872               	movf	strncmp@n,w
  3438  1223  0473               	iorwf	strncmp@n+1,w
  3439  1224  1903               	btfsc	3,2
  3440  1225  2A27               	goto	u5161
  3441  1226  2A28               	goto	u5160
  3442  1227                     u5161:
  3443  1227  2A37               	goto	l3871
  3444  1228                     u5160:
  3445  1228                     l3869:
  3446  1228  0876               	movf	strncmp@r,w
  3447  1229  0084               	movwf	4
  3448  122A  0877               	movf	strncmp@r+1,w
  3449  122B  0085               	movwf	5
  3450  122C  0800               	movf	0,w	;code access
  3451  122D  00F4               	movwf	??_strncmp
  3452  122E  0878               	movf	strncmp@l,w
  3453  122F  0086               	movwf	6
  3454  1230  0187               	clrf	7
  3455  1231  0801               	movf	1,w
  3456  1232  0674               	xorwf	??_strncmp,w
  3457  1233  1903               	skipnz
  3458  1234  2A36               	goto	u5171
  3459  1235  2A37               	goto	u5170
  3460  1236                     u5171:
  3461  1236  2A05               	goto	l3857
  3462  1237                     u5170:
  3463  1237                     l3871:
  3464  1237  0878               	movf	strncmp@l,w
  3465  1238  0086               	movwf	6
  3466  1239  0187               	clrf	7
  3467  123A  0876               	movf	strncmp@r,w
  3468  123B  0084               	movwf	4
  3469  123C  0877               	movf	strncmp@r+1,w
  3470  123D  0085               	movwf	5
  3471  123E  0800               	movf	0,w	;code access
  3472  123F  0201               	subwf	1,w
  3473  1240  00F0               	movwf	?_strncmp
  3474  1241  01F1               	clrf	?_strncmp+1
  3475  1242  1C03               	skipc
  3476  1243  03F1               	decf	?_strncmp+1,f
  3477  1244                     l1041:
  3478  1244  0008               	return
  3479  1245                     __end_of_strncmp:
  3480                           
  3481                           	psect	text5
  3482  00D1                     __ptext5:	
  3483 ;; *************** function _efgtoa *****************
  3484 ;; Defined at:
  3485 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  fp              1    wreg     PTR struct _IO_FILE
  3488 ;;		 -> sprintf@f(10), 
  3489 ;;  f               4   38[BANK0 ] PTR struct _IO_FILE
  3490 ;;  c               1   42[BANK0 ] unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  fp              1   22[BANK1 ] PTR struct _IO_FILE
  3493 ;;		 -> sprintf@f(10), 
  3494 ;;  u               4   47[BANK1 ] PTR struct _IO_FILE
  3495 ;;  g               4   39[BANK1 ] PTR struct _IO_FILE
  3496 ;;  l               4   33[BANK1 ] PTR struct _IO_FILE
  3497 ;;  h               4   29[BANK1 ] PTR struct _IO_FILE
  3498 ;;  ou              4   14[BANK1 ] PTR struct _IO_FILE
  3499 ;;  n               2   45[BANK1 ] int 
  3500 ;;  e               2   43[BANK1 ] int 
  3501 ;;  i               2   37[BANK1 ] int 
  3502 ;;  w               2   25[BANK1 ] int 
  3503 ;;  p               2   23[BANK1 ] int 
  3504 ;;  sign            2   20[BANK1 ] int 
  3505 ;;  d               2   18[BANK1 ] int 
  3506 ;;  m               2   12[BANK1 ] int 
  3507 ;;  ne              2   10[BANK1 ] int 
  3508 ;;  pp              2    8[BANK1 ] int 
  3509 ;;  t               2    6[BANK1 ] int 
  3510 ;;  mode            1   28[BANK1 ] unsigned char 
  3511 ;;  nmode           1   27[BANK1 ] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  2   38[BANK0 ] int 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3521 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;      Locals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0
  3523 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3524 ;;      Totals:         0       8      51       0       0       0       0       0       0       0       0       0       
      +0       0
  3525 ;;Total ram usage:       59 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 4
  3528 ;; This function calls:
  3529 ;;		___awdiv
  3530 ;;		___awmod
  3531 ;;		___fladd
  3532 ;;		___fldiv
  3533 ;;		___fleq
  3534 ;;		___flge
  3535 ;;		___flmul
  3536 ;;		___flneg
  3537 ;;		___flsub
  3538 ;;		___fltol
  3539 ;;		___fpclassifyf
  3540 ;;		_floorf
  3541 ;;		_isupper
  3542 ;;		_pad
  3543 ;;		_strcpy
  3544 ;;		_tolower
  3545 ;; This function is called by:
  3546 ;;		_vfpfcnvrt
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550  00D1                     _efgtoa:	
  3551                           ;psect for function _efgtoa
  3552                           
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3556                           ;efgtoa@fp stored from wreg
  3557  00D1  0021               	movlb	1	; select bank1
  3558  00D2  00B6               	movwf	efgtoa@fp^(0+128)
  3559  00D3                     l3517:
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3562  00D3  01B4               	clrf	efgtoa@sign^(0+128)
  3563  00D4  01B5               	clrf	(efgtoa@sign+1)^(0+128)
  3564  00D5                     l3519:
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3567  00D5  0020               	movlb	0	; select bank0
  3568  00D6  0849               	movf	efgtoa@f+3,w
  3569  00D7  0021               	movlb	1	; select bank1
  3570  00D8  00CA               	movwf	(efgtoa@g+3)^(0+128)
  3571  00D9  0020               	movlb	0	; select bank0
  3572  00DA  0848               	movf	efgtoa@f+2,w
  3573  00DB  0021               	movlb	1	; select bank1
  3574  00DC  00C9               	movwf	(efgtoa@g+2)^(0+128)
  3575  00DD  0020               	movlb	0	; select bank0
  3576  00DE  0847               	movf	efgtoa@f+1,w
  3577  00DF  0021               	movlb	1	; select bank1
  3578  00E0  00C8               	movwf	(efgtoa@g+1)^(0+128)
  3579  00E1  0020               	movlb	0	; select bank0
  3580  00E2  0846               	movf	efgtoa@f,w
  3581  00E3  0021               	movlb	1	; select bank1
  3582  00E4  00C7               	movwf	efgtoa@g^(0+128)
  3583  00E5                     l3521:
  3584                           
  3585                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3586  00E5  084A               	movf	(efgtoa@g+3)^(0+128),w
  3587  00E6  0020               	movlb	0	; select bank0
  3588  00E7  00BD               	movwf	___flge@ff1+3
  3589  00E8  0021               	movlb	1	; select bank1
  3590  00E9  0849               	movf	(efgtoa@g+2)^(0+128),w
  3591  00EA  0020               	movlb	0	; select bank0
  3592  00EB  00BC               	movwf	___flge@ff1+2
  3593  00EC  0021               	movlb	1	; select bank1
  3594  00ED  0848               	movf	(efgtoa@g+1)^(0+128),w
  3595  00EE  0020               	movlb	0	; select bank0
  3596  00EF  00BB               	movwf	___flge@ff1+1
  3597  00F0  0021               	movlb	1	; select bank1
  3598  00F1  0847               	movf	efgtoa@g^(0+128),w
  3599  00F2  0020               	movlb	0	; select bank0
  3600  00F3  00BA               	movwf	___flge@ff1
  3601  00F4  3000               	movlw	0
  3602  00F5  00C1               	movwf	___flge@ff2+3
  3603  00F6  3000               	movlw	0
  3604  00F7  00C0               	movwf	___flge@ff2+2
  3605  00F8  3000               	movlw	0
  3606  00F9  00BF               	movwf	___flge@ff2+1
  3607  00FA  3000               	movlw	0
  3608  00FB  00BE               	movwf	___flge@ff2
  3609  00FC  3194  244D  3180   	fcall	___flge
  3610  00FF  1803               	btfsc	3,0
  3611  0100  2902               	goto	u4611
  3612  0101  2903               	goto	u4610
  3613  0102                     u4611:
  3614  0102  291C               	goto	l3527
  3615  0103                     u4610:
  3616  0103                     l3523:
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3619  0103  3001               	movlw	1
  3620  0104  0021               	movlb	1	; select bank1
  3621  0105  00B4               	movwf	efgtoa@sign^(0+128)
  3622  0106  3000               	movlw	0
  3623  0107  00B5               	movwf	(efgtoa@sign^(0+128)+1)
  3624  0108                     l3525:
  3625                           
  3626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3627  0108  084A               	movf	(efgtoa@g+3)^(0+128),w
  3628  0109  00F3               	movwf	___flneg@f1+3
  3629  010A  0849               	movf	(efgtoa@g+2)^(0+128),w
  3630  010B  00F2               	movwf	___flneg@f1+2
  3631  010C  0848               	movf	(efgtoa@g+1)^(0+128),w
  3632  010D  00F1               	movwf	___flneg@f1+1
  3633  010E  0847               	movf	efgtoa@g^(0+128),w
  3634  010F  00F0               	movwf	___flneg@f1
  3635  0110  319E  267F  3180   	fcall	___flneg
  3636  0113  0873               	movf	?___flneg+3,w
  3637  0114  0021               	movlb	1	; select bank1
  3638  0115  00CA               	movwf	(efgtoa@g+3)^(0+128)
  3639  0116  0872               	movf	?___flneg+2,w
  3640  0117  00C9               	movwf	(efgtoa@g+2)^(0+128)
  3641  0118  0871               	movf	?___flneg+1,w
  3642  0119  00C8               	movwf	(efgtoa@g+1)^(0+128)
  3643  011A  0870               	movf	?___flneg,w
  3644  011B  00C7               	movwf	efgtoa@g^(0+128)
  3645  011C                     l3527:
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3648  011C  0021               	movlb	1	; select bank1
  3649  011D  01CD               	clrf	efgtoa@n^(0+128)
  3650  011E  01CE               	clrf	(efgtoa@n+1)^(0+128)
  3651  011F                     l3529:
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3654  011F  0866               	movf	(_width+1)^(0+128),w
  3655  0120  00BA               	movwf	(efgtoa@w+1)^(0+128)
  3656  0121  0865               	movf	_width^(0+128),w
  3657  0122  00B9               	movwf	efgtoa@w^(0+128)
  3658  0123                     l3531:
  3659                           
  3660                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3661  0123  0834               	movf	efgtoa@sign^(0+128),w
  3662  0124  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  3663  0125  1D03               	btfss	3,2
  3664  0126  2928               	goto	u4621
  3665  0127  2929               	goto	u4620
  3666  0128                     u4621:
  3667  0128  292D               	goto	l3535
  3668  0129                     u4620:
  3669  0129                     l3533:
  3670  0129  1D69               	btfss	_flags^(0+128),2
  3671  012A  292C               	goto	u4631
  3672  012B  292D               	goto	u4630
  3673  012C                     u4631:
  3674  012C  294B               	goto	l3547
  3675  012D                     u4630:
  3676  012D                     l3535:
  3677                           
  3678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3679  012D  0834               	movf	efgtoa@sign^(0+128),w
  3680  012E  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  3681  012F  1D03               	btfss	3,2
  3682  0130  2932               	goto	u4641
  3683  0131  2933               	goto	u4640
  3684  0132                     u4641:
  3685  0132  2938               	goto	l3539
  3686  0133                     u4640:
  3687  0133                     l3537:
  3688  0133  302B               	movlw	43
  3689  0134  00A0               	movwf	_efgtoa$869^(0+128)
  3690  0135  3000               	movlw	0
  3691  0136  00A1               	movwf	(_efgtoa$869^(0+128)+1)
  3692  0137  293C               	goto	l3541
  3693  0138                     l3539:
  3694  0138  302D               	movlw	45
  3695  0139  00A0               	movwf	_efgtoa$869^(0+128)
  3696  013A  3000               	movlw	0
  3697  013B  00A1               	movwf	(_efgtoa$869^(0+128)+1)
  3698  013C                     l3541:
  3699  013C  0820               	movf	_efgtoa$869^(0+128),w
  3700  013D  0020               	movlb	0	; select bank0
  3701  013E  00CB               	movwf	??_efgtoa
  3702  013F  084B               	movf	??_efgtoa,w
  3703  0140  0023               	movlb	3	; select bank3
  3704  0141  00A0               	movwf	_dbuf^(0+384)
  3705  0142                     l3543:
  3706                           
  3707                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3708  0142  3001               	movlw	1
  3709  0143  0021               	movlb	1	; select bank1
  3710  0144  07CD               	addwf	efgtoa@n^(0+128),f
  3711  0145  3000               	movlw	0
  3712  0146  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  3713  0147                     l3545:
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  3716  0147  30FF               	movlw	255
  3717  0148  07B9               	addwf	efgtoa@w^(0+128),f
  3718  0149  30FF               	movlw	255
  3719  014A  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  3720  014B                     l3547:
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  3723  014B  084A               	movf	(efgtoa@g+3)^(0+128),w
  3724  014C  00F3               	movwf	___fpclassifyf@x+3
  3725  014D  0849               	movf	(efgtoa@g+2)^(0+128),w
  3726  014E  00F2               	movwf	___fpclassifyf@x+2
  3727  014F  0848               	movf	(efgtoa@g+1)^(0+128),w
  3728  0150  00F1               	movwf	___fpclassifyf@x+1
  3729  0151  0847               	movf	efgtoa@g^(0+128),w
  3730  0152  00F0               	movwf	___fpclassifyf@x
  3731  0153  3193  23CE  3180   	fcall	___fpclassifyf
  3732  0156  0370               	decf	?___fpclassifyf,w
  3733  0157  0471               	iorwf	?___fpclassifyf+1,w
  3734  0158  1D03               	btfss	3,2
  3735  0159  295B               	goto	u4651
  3736  015A  295C               	goto	u4650
  3737  015B                     u4651:
  3738  015B  299F               	goto	l3565
  3739  015C                     u4650:
  3740  015C                     l3553:
  3741  015C  0020               	movlb	0	; select bank0
  3742  015D  084A               	movf	efgtoa@c,w
  3743  015E  3EBF               	addlw	191
  3744  015F  00CB               	movwf	??_efgtoa
  3745  0160  30FF               	movlw	255
  3746  0161  1803               	skipnc
  3747  0162  3000               	movlw	0
  3748  0163  00CC               	movwf	??_efgtoa+1
  3749  0164  3000               	movlw	0
  3750  0165  024C               	subwf	??_efgtoa+1,w
  3751  0166  301A               	movlw	26
  3752  0167  1903               	skipnz
  3753  0168  024B               	subwf	??_efgtoa,w
  3754  0169  1803               	skipnc
  3755  016A  296C               	goto	u4661
  3756  016B  296D               	goto	u4660
  3757  016C                     u4661:
  3758  016C  2978               	goto	l3557
  3759  016D                     u4660:
  3760  016D                     l3555:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3763  016D  3017               	movlw	low (STR_3| (0+32768))
  3764  016E  00F0               	movwf	strcpy@src
  3765  016F  30A0               	movlw	high (STR_3| (0+32768))
  3766  0170  00F1               	movwf	strcpy@src+1
  3767  0171  0021               	movlb	1	; select bank1
  3768  0172  084D               	movf	efgtoa@n^(0+128),w
  3769  0173  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3770  0174  3180  2004  3180   	fcall	_strcpy
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3773  0177  2982               	goto	l3559
  3774  0178                     l3557:
  3775                           
  3776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3777  0178  301F               	movlw	low (STR_4| (0+32768))
  3778  0179  00F0               	movwf	strcpy@src
  3779  017A  30A0               	movlw	high (STR_4| (0+32768))
  3780  017B  00F1               	movwf	strcpy@src+1
  3781  017C  0021               	movlb	1	; select bank1
  3782  017D  084D               	movf	efgtoa@n^(0+128),w
  3783  017E  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3784  017F  3180  2004  3180   	fcall	_strcpy
  3785  0182                     l3559:
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3788  0182  30FD               	movlw	253
  3789  0183  0021               	movlb	1	; select bank1
  3790  0184  07B9               	addwf	efgtoa@w^(0+128),f
  3791  0185  30FF               	movlw	255
  3792  0186  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  3793  0187                     l3561:
  3794                           
  3795                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3796  0187  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3797  0188  0020               	movlb	0	; select bank0
  3798  0189  00CB               	movwf	??_efgtoa
  3799  018A  084B               	movf	??_efgtoa,w
  3800  018B  00A4               	movwf	pad@buf
  3801  018C  0021               	movlb	1	; select bank1
  3802  018D  083A               	movf	(efgtoa@w+1)^(0+128),w
  3803  018E  0020               	movlb	0	; select bank0
  3804  018F  00A6               	movwf	pad@p+1
  3805  0190  0021               	movlb	1	; select bank1
  3806  0191  0839               	movf	efgtoa@w^(0+128),w
  3807  0192  0020               	movlb	0	; select bank0
  3808  0193  00A5               	movwf	pad@p
  3809  0194  0021               	movlb	1	; select bank1
  3810  0195  0836               	movf	efgtoa@fp^(0+128),w
  3811  0196  3192  2245  3180   	fcall	_pad
  3812  0199  0020               	movlb	0	; select bank0
  3813  019A  0825               	movf	?_pad+1,w
  3814  019B  00C7               	movwf	?_efgtoa+1
  3815  019C  0824               	movf	?_pad,w
  3816  019D  00C6               	movwf	?_efgtoa
  3817  019E  2FD7               	goto	l827
  3818  019F                     l3565:
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  3821  019F  0021               	movlb	1	; select bank1
  3822  01A0  084A               	movf	(efgtoa@g+3)^(0+128),w
  3823  01A1  00F3               	movwf	___fpclassifyf@x+3
  3824  01A2  0849               	movf	(efgtoa@g+2)^(0+128),w
  3825  01A3  00F2               	movwf	___fpclassifyf@x+2
  3826  01A4  0848               	movf	(efgtoa@g+1)^(0+128),w
  3827  01A5  00F1               	movwf	___fpclassifyf@x+1
  3828  01A6  0847               	movf	efgtoa@g^(0+128),w
  3829  01A7  00F0               	movwf	___fpclassifyf@x
  3830  01A8  3193  23CE  3180   	fcall	___fpclassifyf
  3831  01AB  0870               	movf	?___fpclassifyf,w
  3832  01AC  0471               	iorwf	?___fpclassifyf+1,w
  3833  01AD  1D03               	btfss	3,2
  3834  01AE  29B0               	goto	u4671
  3835  01AF  29B1               	goto	u4670
  3836  01B0                     u4671:
  3837  01B0  29F4               	goto	l3583
  3838  01B1                     u4670:
  3839  01B1                     l3571:
  3840  01B1  0020               	movlb	0	; select bank0
  3841  01B2  084A               	movf	efgtoa@c,w
  3842  01B3  3EBF               	addlw	191
  3843  01B4  00CB               	movwf	??_efgtoa
  3844  01B5  30FF               	movlw	255
  3845  01B6  1803               	skipnc
  3846  01B7  3000               	movlw	0
  3847  01B8  00CC               	movwf	??_efgtoa+1
  3848  01B9  3000               	movlw	0
  3849  01BA  024C               	subwf	??_efgtoa+1,w
  3850  01BB  301A               	movlw	26
  3851  01BC  1903               	skipnz
  3852  01BD  024B               	subwf	??_efgtoa,w
  3853  01BE  1803               	skipnc
  3854  01BF  29C1               	goto	u4681
  3855  01C0  29C2               	goto	u4680
  3856  01C1                     u4681:
  3857  01C1  29CD               	goto	l3575
  3858  01C2                     u4680:
  3859  01C2                     l3573:
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3862  01C2  301B               	movlw	low (STR_7| (0+32768))
  3863  01C3  00F0               	movwf	strcpy@src
  3864  01C4  30A0               	movlw	high (STR_7| (0+32768))
  3865  01C5  00F1               	movwf	strcpy@src+1
  3866  01C6  0021               	movlb	1	; select bank1
  3867  01C7  084D               	movf	efgtoa@n^(0+128),w
  3868  01C8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3869  01C9  3180  2004  3180   	fcall	_strcpy
  3870                           
  3871                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3872  01CC  29D7               	goto	l3577
  3873  01CD                     l3575:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3876  01CD  3023               	movlw	low (STR_8| (0+32768))
  3877  01CE  00F0               	movwf	strcpy@src
  3878  01CF  30A0               	movlw	high (STR_8| (0+32768))
  3879  01D0  00F1               	movwf	strcpy@src+1
  3880  01D1  0021               	movlb	1	; select bank1
  3881  01D2  084D               	movf	efgtoa@n^(0+128),w
  3882  01D3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3883  01D4  3180  2004  3180   	fcall	_strcpy
  3884  01D7                     l3577:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3887  01D7  30FD               	movlw	253
  3888  01D8  0021               	movlb	1	; select bank1
  3889  01D9  07B9               	addwf	efgtoa@w^(0+128),f
  3890  01DA  30FF               	movlw	255
  3891  01DB  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  3892  01DC                     l3579:
  3893                           
  3894                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3895  01DC  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  3896  01DD  0020               	movlb	0	; select bank0
  3897  01DE  00CB               	movwf	??_efgtoa
  3898  01DF  084B               	movf	??_efgtoa,w
  3899  01E0  00A4               	movwf	pad@buf
  3900  01E1  0021               	movlb	1	; select bank1
  3901  01E2  083A               	movf	(efgtoa@w+1)^(0+128),w
  3902  01E3  0020               	movlb	0	; select bank0
  3903  01E4  00A6               	movwf	pad@p+1
  3904  01E5  0021               	movlb	1	; select bank1
  3905  01E6  0839               	movf	efgtoa@w^(0+128),w
  3906  01E7  0020               	movlb	0	; select bank0
  3907  01E8  00A5               	movwf	pad@p
  3908  01E9  0021               	movlb	1	; select bank1
  3909  01EA  0836               	movf	efgtoa@fp^(0+128),w
  3910  01EB  3192  2245  3180   	fcall	_pad
  3911  01EE  0020               	movlb	0	; select bank0
  3912  01EF  0825               	movf	?_pad+1,w
  3913  01F0  00C7               	movwf	?_efgtoa+1
  3914  01F1  0824               	movf	?_pad,w
  3915  01F2  00C6               	movwf	?_efgtoa
  3916  01F3  2FD7               	goto	l827
  3917  01F4                     l3583:
  3918                           
  3919                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3920  01F4  303F               	movlw	63
  3921  01F5  0021               	movlb	1	; select bank1
  3922  01F6  00D2               	movwf	(efgtoa@u+3)^(0+128)
  3923  01F7  3080               	movlw	128
  3924  01F8  00D1               	movwf	(efgtoa@u+2)^(0+128)
  3925  01F9  3000               	movlw	0
  3926  01FA  00D0               	movwf	(efgtoa@u+1)^(0+128)
  3927  01FB  3000               	movlw	0
  3928  01FC  00CF               	movwf	efgtoa@u^(0+128)
  3929  01FD                     l3585:
  3930                           
  3931                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3932  01FD  01CB               	clrf	efgtoa@e^(0+128)
  3933  01FE  01CC               	clrf	(efgtoa@e+1)^(0+128)
  3934  01FF                     l3587:
  3935                           
  3936                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3937  01FF  084A               	movf	(efgtoa@g+3)^(0+128),w
  3938  0200  00F3               	movwf	___fleq@ff1+3
  3939  0201  0849               	movf	(efgtoa@g+2)^(0+128),w
  3940  0202  00F2               	movwf	___fleq@ff1+2
  3941  0203  0848               	movf	(efgtoa@g+1)^(0+128),w
  3942  0204  00F1               	movwf	___fleq@ff1+1
  3943  0205  0847               	movf	efgtoa@g^(0+128),w
  3944  0206  00F0               	movwf	___fleq@ff1
  3945  0207  3000               	movlw	0
  3946  0208  00F7               	movwf	___fleq@ff2+3
  3947  0209  3000               	movlw	0
  3948  020A  00F6               	movwf	___fleq@ff2+2
  3949  020B  3000               	movlw	0
  3950  020C  00F5               	movwf	___fleq@ff2+1
  3951  020D  3000               	movlw	0
  3952  020E  00F4               	movwf	___fleq@ff2
  3953  020F  3190  20F9  3180   	fcall	___fleq
  3954  0212  1803               	btfsc	3,0
  3955  0213  2A15               	goto	u4691
  3956  0214  2A16               	goto	u4690
  3957  0215                     u4691:
  3958  0215  2ACB               	goto	l3603
  3959  0216                     u4690:
  3960  0216  2A47               	goto	l3595
  3961  0217                     l3591:
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3964  0217  3041               	movlw	65
  3965  0218  0020               	movlb	0	; select bank0
  3966  0219  00A3               	movwf	___flmul@b+3
  3967  021A  3020               	movlw	32
  3968  021B  00A2               	movwf	___flmul@b+2
  3969  021C  3000               	movlw	0
  3970  021D  00A1               	movwf	___flmul@b+1
  3971  021E  3000               	movlw	0
  3972  021F  00A0               	movwf	___flmul@b
  3973  0220  0021               	movlb	1	; select bank1
  3974  0221  0852               	movf	(efgtoa@u+3)^(0+128),w
  3975  0222  0020               	movlb	0	; select bank0
  3976  0223  00A7               	movwf	___flmul@a+3
  3977  0224  0021               	movlb	1	; select bank1
  3978  0225  0851               	movf	(efgtoa@u+2)^(0+128),w
  3979  0226  0020               	movlb	0	; select bank0
  3980  0227  00A6               	movwf	___flmul@a+2
  3981  0228  0021               	movlb	1	; select bank1
  3982  0229  0850               	movf	(efgtoa@u+1)^(0+128),w
  3983  022A  0020               	movlb	0	; select bank0
  3984  022B  00A5               	movwf	___flmul@a+1
  3985  022C  0021               	movlb	1	; select bank1
  3986  022D  084F               	movf	efgtoa@u^(0+128),w
  3987  022E  0020               	movlb	0	; select bank0
  3988  022F  00A4               	movwf	___flmul@a
  3989  0230  318B  232B  3180   	fcall	___flmul
  3990  0233  0020               	movlb	0	; select bank0
  3991  0234  0823               	movf	?___flmul+3,w
  3992  0235  0021               	movlb	1	; select bank1
  3993  0236  00D2               	movwf	(efgtoa@u+3)^(0+128)
  3994  0237  0020               	movlb	0	; select bank0
  3995  0238  0822               	movf	?___flmul+2,w
  3996  0239  0021               	movlb	1	; select bank1
  3997  023A  00D1               	movwf	(efgtoa@u+2)^(0+128)
  3998  023B  0020               	movlb	0	; select bank0
  3999  023C  0821               	movf	?___flmul+1,w
  4000  023D  0021               	movlb	1	; select bank1
  4001  023E  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4002  023F  0020               	movlb	0	; select bank0
  4003  0240  0820               	movf	?___flmul,w
  4004  0241  0021               	movlb	1	; select bank1
  4005  0242  00CF               	movwf	efgtoa@u^(0+128)
  4006  0243                     l3593:
  4007                           
  4008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4009  0243  3001               	movlw	1
  4010  0244  07CB               	addwf	efgtoa@e^(0+128),f
  4011  0245  3000               	movlw	0
  4012  0246  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  4013  0247                     l3595:
  4014                           
  4015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4016  0247  0021               	movlb	1	; select bank1
  4017  0248  084A               	movf	(efgtoa@g+3)^(0+128),w
  4018  0249  0020               	movlb	0	; select bank0
  4019  024A  00BD               	movwf	___flge@ff1+3
  4020  024B  0021               	movlb	1	; select bank1
  4021  024C  0849               	movf	(efgtoa@g+2)^(0+128),w
  4022  024D  0020               	movlb	0	; select bank0
  4023  024E  00BC               	movwf	___flge@ff1+2
  4024  024F  0021               	movlb	1	; select bank1
  4025  0250  0848               	movf	(efgtoa@g+1)^(0+128),w
  4026  0251  0020               	movlb	0	; select bank0
  4027  0252  00BB               	movwf	___flge@ff1+1
  4028  0253  0021               	movlb	1	; select bank1
  4029  0254  0847               	movf	efgtoa@g^(0+128),w
  4030  0255  0020               	movlb	0	; select bank0
  4031  0256  00BA               	movwf	___flge@ff1
  4032  0257  3041               	movlw	65
  4033  0258  00A3               	movwf	___flmul@b+3
  4034  0259  3020               	movlw	32
  4035  025A  00A2               	movwf	___flmul@b+2
  4036  025B  3000               	movlw	0
  4037  025C  00A1               	movwf	___flmul@b+1
  4038  025D  3000               	movlw	0
  4039  025E  00A0               	movwf	___flmul@b
  4040  025F  0021               	movlb	1	; select bank1
  4041  0260  0852               	movf	(efgtoa@u+3)^(0+128),w
  4042  0261  0020               	movlb	0	; select bank0
  4043  0262  00A7               	movwf	___flmul@a+3
  4044  0263  0021               	movlb	1	; select bank1
  4045  0264  0851               	movf	(efgtoa@u+2)^(0+128),w
  4046  0265  0020               	movlb	0	; select bank0
  4047  0266  00A6               	movwf	___flmul@a+2
  4048  0267  0021               	movlb	1	; select bank1
  4049  0268  0850               	movf	(efgtoa@u+1)^(0+128),w
  4050  0269  0020               	movlb	0	; select bank0
  4051  026A  00A5               	movwf	___flmul@a+1
  4052  026B  0021               	movlb	1	; select bank1
  4053  026C  084F               	movf	efgtoa@u^(0+128),w
  4054  026D  0020               	movlb	0	; select bank0
  4055  026E  00A4               	movwf	___flmul@a
  4056  026F  318B  232B  3180   	fcall	___flmul
  4057  0272  0020               	movlb	0	; select bank0
  4058  0273  0823               	movf	?___flmul+3,w
  4059  0274  00C1               	movwf	___flge@ff2+3
  4060  0275  0822               	movf	?___flmul+2,w
  4061  0276  00C0               	movwf	___flge@ff2+2
  4062  0277  0821               	movf	?___flmul+1,w
  4063  0278  00BF               	movwf	___flge@ff2+1
  4064  0279  0820               	movf	?___flmul,w
  4065  027A  00BE               	movwf	___flge@ff2
  4066  027B  3194  244D  3180   	fcall	___flge
  4067  027E  1803               	btfsc	3,0
  4068  027F  2A81               	goto	u4701
  4069  0280  2A82               	goto	u4700
  4070  0281                     u4701:
  4071  0281  2A17               	goto	l3591
  4072  0282                     u4700:
  4073  0282  2AA4               	goto	l3601
  4074  0283                     l3597:
  4075                           
  4076                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4077  0283  3041               	movlw	65
  4078  0284  00F3               	movwf	___fldiv@a+3
  4079  0285  3020               	movlw	32
  4080  0286  00F2               	movwf	___fldiv@a+2
  4081  0287  3000               	movlw	0
  4082  0288  00F1               	movwf	___fldiv@a+1
  4083  0289  3000               	movlw	0
  4084  028A  00F0               	movwf	___fldiv@a
  4085  028B  0021               	movlb	1	; select bank1
  4086  028C  0852               	movf	(efgtoa@u+3)^(0+128),w
  4087  028D  00F7               	movwf	___fldiv@b+3
  4088  028E  0851               	movf	(efgtoa@u+2)^(0+128),w
  4089  028F  00F6               	movwf	___fldiv@b+2
  4090  0290  0850               	movf	(efgtoa@u+1)^(0+128),w
  4091  0291  00F5               	movwf	___fldiv@b+1
  4092  0292  084F               	movf	efgtoa@u^(0+128),w
  4093  0293  00F4               	movwf	___fldiv@b
  4094  0294  3196  264C  3180   	fcall	___fldiv
  4095  0297  0873               	movf	?___fldiv+3,w
  4096  0298  0021               	movlb	1	; select bank1
  4097  0299  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4098  029A  0872               	movf	?___fldiv+2,w
  4099  029B  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4100  029C  0871               	movf	?___fldiv+1,w
  4101  029D  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4102  029E  0870               	movf	?___fldiv,w
  4103  029F  00CF               	movwf	efgtoa@u^(0+128)
  4104  02A0                     l3599:
  4105                           
  4106                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4107  02A0  30FF               	movlw	255
  4108  02A1  07CB               	addwf	efgtoa@e^(0+128),f
  4109  02A2  30FF               	movlw	255
  4110  02A3  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  4111  02A4                     l3601:
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4114  02A4  0021               	movlb	1	; select bank1
  4115  02A5  084A               	movf	(efgtoa@g+3)^(0+128),w
  4116  02A6  0020               	movlb	0	; select bank0
  4117  02A7  00BD               	movwf	___flge@ff1+3
  4118  02A8  0021               	movlb	1	; select bank1
  4119  02A9  0849               	movf	(efgtoa@g+2)^(0+128),w
  4120  02AA  0020               	movlb	0	; select bank0
  4121  02AB  00BC               	movwf	___flge@ff1+2
  4122  02AC  0021               	movlb	1	; select bank1
  4123  02AD  0848               	movf	(efgtoa@g+1)^(0+128),w
  4124  02AE  0020               	movlb	0	; select bank0
  4125  02AF  00BB               	movwf	___flge@ff1+1
  4126  02B0  0021               	movlb	1	; select bank1
  4127  02B1  0847               	movf	efgtoa@g^(0+128),w
  4128  02B2  0020               	movlb	0	; select bank0
  4129  02B3  00BA               	movwf	___flge@ff1
  4130  02B4  0021               	movlb	1	; select bank1
  4131  02B5  0852               	movf	(efgtoa@u+3)^(0+128),w
  4132  02B6  0020               	movlb	0	; select bank0
  4133  02B7  00C1               	movwf	___flge@ff2+3
  4134  02B8  0021               	movlb	1	; select bank1
  4135  02B9  0851               	movf	(efgtoa@u+2)^(0+128),w
  4136  02BA  0020               	movlb	0	; select bank0
  4137  02BB  00C0               	movwf	___flge@ff2+2
  4138  02BC  0021               	movlb	1	; select bank1
  4139  02BD  0850               	movf	(efgtoa@u+1)^(0+128),w
  4140  02BE  0020               	movlb	0	; select bank0
  4141  02BF  00BF               	movwf	___flge@ff2+1
  4142  02C0  0021               	movlb	1	; select bank1
  4143  02C1  084F               	movf	efgtoa@u^(0+128),w
  4144  02C2  0020               	movlb	0	; select bank0
  4145  02C3  00BE               	movwf	___flge@ff2
  4146  02C4  3194  244D  3180   	fcall	___flge
  4147  02C7  1C03               	btfss	3,0
  4148  02C8  2ACA               	goto	u4711
  4149  02C9  2ACB               	goto	u4710
  4150  02CA                     u4711:
  4151  02CA  2A83               	goto	l3597
  4152  02CB                     u4710:
  4153  02CB                     l3603:
  4154                           
  4155                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4156  02CB  0020               	movlb	0	; select bank0
  4157  02CC  084A               	movf	efgtoa@c,w
  4158  02CD  00CB               	movwf	??_efgtoa
  4159  02CE  01CC               	clrf	??_efgtoa+1
  4160  02CF  084B               	movf	??_efgtoa,w
  4161  02D0  00F6               	movwf	tolower@c
  4162  02D1  084C               	movf	??_efgtoa+1,w
  4163  02D2  00F7               	movwf	tolower@c+1
  4164  02D3  319E  26D2  3180   	fcall	_tolower
  4165  02D6  0876               	movf	?_tolower,w
  4166  02D7  0020               	movlb	0	; select bank0
  4167  02D8  00CD               	movwf	??_efgtoa+2
  4168  02D9  084D               	movf	??_efgtoa+2,w
  4169  02DA  0021               	movlb	1	; select bank1
  4170  02DB  00BC               	movwf	efgtoa@mode^(0+128)
  4171  02DC                     l3605:
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4174  02DC  083C               	movf	efgtoa@mode^(0+128),w
  4175  02DD  0020               	movlb	0	; select bank0
  4176  02DE  00CB               	movwf	??_efgtoa
  4177  02DF  084B               	movf	??_efgtoa,w
  4178  02E0  0021               	movlb	1	; select bank1
  4179  02E1  00BB               	movwf	efgtoa@nmode^(0+128)
  4180  02E2                     l3607:
  4181                           
  4182                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4183  02E2  3067               	movlw	103
  4184  02E3  063C               	xorwf	efgtoa@mode^(0+128),w
  4185  02E4  1D03               	btfss	3,2
  4186  02E5  2AE7               	goto	u4721
  4187  02E6  2AE8               	goto	u4720
  4188  02E7                     u4721:
  4189  02E7  2B0D               	goto	l840
  4190  02E8                     u4720:
  4191  02E8                     l3609:
  4192                           
  4193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4194  02E8  0867               	movf	_prec^(0+128),w
  4195  02E9  0468               	iorwf	(_prec+1)^(0+128),w
  4196  02EA  1D03               	btfss	3,2
  4197  02EB  2AED               	goto	u4731
  4198  02EC  2AEE               	goto	u4730
  4199  02ED                     u4731:
  4200  02ED  2AF2               	goto	l841
  4201  02EE                     u4730:
  4202  02EE                     l3611:
  4203                           
  4204                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4205  02EE  3001               	movlw	1
  4206  02EF  00E7               	movwf	_prec^(0+128)
  4207  02F0  3000               	movlw	0
  4208  02F1  00E8               	movwf	(_prec^(0+128)+1)
  4209  02F2                     l841:	
  4210                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 395:   }
  4211                           
  4212                           
  4213                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4214  02F2  0868               	movf	(_prec+1)^(0+128),w
  4215  02F3  3A80               	xorlw	128
  4216  02F4  0020               	movlb	0	; select bank0
  4217  02F5  00CB               	movwf	??_efgtoa
  4218  02F6  3080               	movlw	128
  4219  02F7  024B               	subwf	??_efgtoa,w
  4220  02F8  1D03               	skipz
  4221  02F9  2AFD               	goto	u4745
  4222  02FA  3001               	movlw	1
  4223  02FB  0021               	movlb	1	; select bank1
  4224  02FC  0267               	subwf	_prec^(0+128),w
  4225  02FD                     u4745:
  4226  02FD  1803               	skipnc
  4227  02FE  2B00               	goto	u4741
  4228  02FF  2B01               	goto	u4740
  4229  0300                     u4741:
  4230  0300  2B07               	goto	l3615
  4231  0301                     u4740:
  4232  0301                     l3613:
  4233  0301  3006               	movlw	6
  4234  0302  0021               	movlb	1	; select bank1
  4235  0303  00B7               	movwf	efgtoa@p^(0+128)
  4236  0304  3000               	movlw	0
  4237  0305  00B8               	movwf	(efgtoa@p^(0+128)+1)
  4238  0306  2B12               	goto	l3621
  4239  0307                     l3615:
  4240  0307  0021               	movlb	1	; select bank1
  4241  0308  0868               	movf	(_prec+1)^(0+128),w
  4242  0309  00B8               	movwf	(efgtoa@p+1)^(0+128)
  4243  030A  0867               	movf	_prec^(0+128),w
  4244  030B  00B7               	movwf	efgtoa@p^(0+128)
  4245  030C  2B12               	goto	l3621
  4246  030D                     l840:
  4247                           
  4248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4249  030D  1BE8               	btfsc	(_prec+1)^(0+128),7
  4250  030E  2B10               	goto	u4751
  4251  030F  2B11               	goto	u4750
  4252  0310                     u4751:
  4253  0310  2B01               	goto	l3613
  4254  0311                     u4750:
  4255  0311  2B07               	goto	l3615
  4256  0312                     l3621:
  4257                           
  4258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4259  0312  3067               	movlw	103
  4260  0313  063C               	xorwf	efgtoa@mode^(0+128),w
  4261  0314  1D03               	btfss	3,2
  4262  0315  2B17               	goto	u4761
  4263  0316  2B18               	goto	u4760
  4264  0317                     u4761:
  4265  0317  2B50               	goto	l851
  4266  0318                     u4760:
  4267  0318                     l3623:
  4268                           
  4269                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4270  0318  084C               	movf	(efgtoa@e+1)^(0+128),w
  4271  0319  3A80               	xorlw	128
  4272  031A  0020               	movlb	0	; select bank0
  4273  031B  00CB               	movwf	??_efgtoa
  4274  031C  307F               	movlw	127
  4275  031D  024B               	subwf	??_efgtoa,w
  4276  031E  1D03               	skipz
  4277  031F  2B23               	goto	u4775
  4278  0320  30FC               	movlw	252
  4279  0321  0021               	movlb	1	; select bank1
  4280  0322  024B               	subwf	efgtoa@e^(0+128),w
  4281  0323                     u4775:
  4282  0323  1C03               	skipc
  4283  0324  2B26               	goto	u4771
  4284  0325  2B27               	goto	u4770
  4285  0326                     u4771:
  4286  0326  2B4A               	goto	l3629
  4287  0327                     u4770:
  4288  0327                     l3625:
  4289  0327  0021               	movlb	1	; select bank1
  4290  0328  0837               	movf	efgtoa@p^(0+128),w
  4291  0329  3EFF               	addlw	255
  4292  032A  0020               	movlb	0	; select bank0
  4293  032B  00CB               	movwf	??_efgtoa
  4294  032C  30FF               	movlw	255
  4295  032D  0021               	movlb	1	; select bank1
  4296  032E  3D38               	addwfc	(efgtoa@p+1)^(0+128),w
  4297  032F  0020               	movlb	0	; select bank0
  4298  0330  00CC               	movwf	??_efgtoa+1
  4299  0331  084C               	movf	??_efgtoa+1,w
  4300  0332  3A80               	xorlw	128
  4301  0333  00CD               	movwf	??_efgtoa+2
  4302  0334  0021               	movlb	1	; select bank1
  4303  0335  084C               	movf	(efgtoa@e+1)^(0+128),w
  4304  0336  3A80               	xorlw	128
  4305  0337  0020               	movlb	0	; select bank0
  4306  0338  024D               	subwf	??_efgtoa+2,w
  4307  0339  1D03               	skipz
  4308  033A  2B3F               	goto	u4785
  4309  033B  0021               	movlb	1	; select bank1
  4310  033C  084B               	movf	efgtoa@e^(0+128),w
  4311  033D  0020               	movlb	0	; select bank0
  4312  033E  024B               	subwf	??_efgtoa,w
  4313  033F                     u4785:
  4314  033F  1C03               	skipc
  4315  0340  2B42               	goto	u4781
  4316  0341  2B43               	goto	u4780
  4317  0342                     u4781:
  4318  0342  2B4A               	goto	l3629
  4319  0343                     u4780:
  4320  0343                     l3627:
  4321                           
  4322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4323  0343  3066               	movlw	102
  4324  0344  0020               	movlb	0	; select bank0
  4325  0345  00CB               	movwf	??_efgtoa
  4326  0346  084B               	movf	??_efgtoa,w
  4327  0347  0021               	movlb	1	; select bank1
  4328  0348  00BB               	movwf	efgtoa@nmode^(0+128)
  4329                           
  4330                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4331  0349  2B50               	goto	l851
  4332  034A                     l3629:
  4333                           
  4334                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4335  034A  3065               	movlw	101
  4336  034B  0020               	movlb	0	; select bank0
  4337  034C  00CB               	movwf	??_efgtoa
  4338  034D  084B               	movf	??_efgtoa,w
  4339  034E  0021               	movlb	1	; select bank1
  4340  034F  00BB               	movwf	efgtoa@nmode^(0+128)
  4341  0350                     l851:	
  4342                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 408:     }
  4343                           
  4344                           
  4345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4346  0350  0838               	movf	(efgtoa@p+1)^(0+128),w
  4347  0351  00AD               	movwf	(efgtoa@m+1)^(0+128)
  4348  0352  0837               	movf	efgtoa@p^(0+128),w
  4349  0353  00AC               	movwf	efgtoa@m^(0+128)
  4350  0354                     l3631:
  4351                           
  4352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4353  0354  3067               	movlw	103
  4354  0355  063C               	xorwf	efgtoa@mode^(0+128),w
  4355  0356  1D03               	btfss	3,2
  4356  0357  2B59               	goto	u4791
  4357  0358  2B5A               	goto	u4790
  4358  0359                     u4791:
  4359  0359  2B64               	goto	l3637
  4360  035A                     u4790:
  4361  035A                     l3633:
  4362  035A  3066               	movlw	102
  4363  035B  063B               	xorwf	efgtoa@nmode^(0+128),w
  4364  035C  1D03               	btfss	3,2
  4365  035D  2B5F               	goto	u4801
  4366  035E  2B60               	goto	u4800
  4367  035F                     u4801:
  4368  035F  2B68               	goto	l3639
  4369  0360                     u4800:
  4370  0360                     l3635:
  4371  0360  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  4372  0361  2B63               	goto	u4811
  4373  0362  2B64               	goto	u4810
  4374  0363                     u4811:
  4375  0363  2B68               	goto	l3639
  4376  0364                     u4810:
  4377  0364                     l3637:
  4378                           
  4379                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4380  0364  3001               	movlw	1
  4381  0365  07AC               	addwf	efgtoa@m^(0+128),f
  4382  0366  3000               	movlw	0
  4383  0367  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4384  0368                     l3639:
  4385                           
  4386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4387  0368  3066               	movlw	102
  4388  0369  063B               	xorwf	efgtoa@nmode^(0+128),w
  4389  036A  1D03               	btfss	3,2
  4390  036B  2B6D               	goto	u4821
  4391  036C  2B6E               	goto	u4820
  4392  036D                     u4821:
  4393  036D  2B86               	goto	l3651
  4394  036E                     u4820:
  4395  036E                     l3641:
  4396                           
  4397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4398  036E  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  4399  036F  2B71               	goto	u4831
  4400  0370  2B72               	goto	u4830
  4401  0371                     u4831:
  4402  0371  2B7C               	goto	l3647
  4403  0372                     u4830:
  4404  0372                     l3643:
  4405                           
  4406                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4407  0372  303F               	movlw	63
  4408  0373  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4409  0374  3080               	movlw	128
  4410  0375  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4411  0376  3000               	movlw	0
  4412  0377  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4413  0378  3000               	movlw	0
  4414  0379  00CF               	movwf	efgtoa@u^(0+128)
  4415  037A                     l3645:
  4416                           
  4417                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4418  037A  01CB               	clrf	efgtoa@e^(0+128)
  4419  037B  01CC               	clrf	(efgtoa@e+1)^(0+128)
  4420  037C                     l3647:
  4421                           
  4422                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4423  037C  3067               	movlw	103
  4424  037D  063C               	xorwf	efgtoa@mode^(0+128),w
  4425  037E  1903               	btfsc	3,2
  4426  037F  2B81               	goto	u4841
  4427  0380  2B82               	goto	u4840
  4428  0381                     u4841:
  4429  0381  2B86               	goto	l3651
  4430  0382                     u4840:
  4431  0382                     l3649:
  4432                           
  4433                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4434  0382  084B               	movf	efgtoa@e^(0+128),w
  4435  0383  07AC               	addwf	efgtoa@m^(0+128),f
  4436  0384  084C               	movf	(efgtoa@e+1)^(0+128),w
  4437  0385  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4438  0386                     l3651:
  4439                           
  4440                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4441  0386  01C5               	clrf	efgtoa@i^(0+128)
  4442  0387  01C6               	clrf	(efgtoa@i+1)^(0+128)
  4443  0388                     l3653:
  4444                           
  4445                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4446  0388  084A               	movf	(efgtoa@g+3)^(0+128),w
  4447  0389  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4448  038A  0849               	movf	(efgtoa@g+2)^(0+128),w
  4449  038B  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4450  038C  0848               	movf	(efgtoa@g+1)^(0+128),w
  4451  038D  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4452  038E  0847               	movf	efgtoa@g^(0+128),w
  4453  038F  00BD               	movwf	efgtoa@h^(0+128)
  4454  0390                     l3655:
  4455                           
  4456                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4457  0390  0852               	movf	(efgtoa@u+3)^(0+128),w
  4458  0391  00B1               	movwf	(efgtoa@ou+3)^(0+128)
  4459  0392  0851               	movf	(efgtoa@u+2)^(0+128),w
  4460  0393  00B0               	movwf	(efgtoa@ou+2)^(0+128)
  4461  0394  0850               	movf	(efgtoa@u+1)^(0+128),w
  4462  0395  00AF               	movwf	(efgtoa@ou+1)^(0+128)
  4463  0396  084F               	movf	efgtoa@u^(0+128),w
  4464  0397  00AE               	movwf	efgtoa@ou^(0+128)
  4465                           
  4466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4467  0398  2C47               	goto	l3661
  4468  0399                     l3657:
  4469                           
  4470                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4471  0399  0021               	movlb	1	; select bank1
  4472  039A  0852               	movf	(efgtoa@u+3)^(0+128),w
  4473  039B  00F3               	movwf	___fldiv@a+3
  4474  039C  0851               	movf	(efgtoa@u+2)^(0+128),w
  4475  039D  00F2               	movwf	___fldiv@a+2
  4476  039E  0850               	movf	(efgtoa@u+1)^(0+128),w
  4477  039F  00F1               	movwf	___fldiv@a+1
  4478  03A0  084F               	movf	efgtoa@u^(0+128),w
  4479  03A1  00F0               	movwf	___fldiv@a
  4480  03A2  0840               	movf	(efgtoa@h+3)^(0+128),w
  4481  03A3  00F7               	movwf	___fldiv@b+3
  4482  03A4  083F               	movf	(efgtoa@h+2)^(0+128),w
  4483  03A5  00F6               	movwf	___fldiv@b+2
  4484  03A6  083E               	movf	(efgtoa@h+1)^(0+128),w
  4485  03A7  00F5               	movwf	___fldiv@b+1
  4486  03A8  083D               	movf	efgtoa@h^(0+128),w
  4487  03A9  00F4               	movwf	___fldiv@b
  4488  03AA  3196  264C  3180   	fcall	___fldiv
  4489  03AD  0873               	movf	?___fldiv+3,w
  4490  03AE  0020               	movlb	0	; select bank0
  4491  03AF  00B0               	movwf	floorf@x+3
  4492  03B0  0872               	movf	?___fldiv+2,w
  4493  03B1  00AF               	movwf	floorf@x+2
  4494  03B2  0871               	movf	?___fldiv+1,w
  4495  03B3  00AE               	movwf	floorf@x+1
  4496  03B4  0870               	movf	?___fldiv,w
  4497  03B5  00AD               	movwf	floorf@x
  4498  03B6  3188  2001  3180   	fcall	_floorf
  4499  03B9  0020               	movlb	0	; select bank0
  4500  03BA  0830               	movf	?_floorf+3,w
  4501  03BB  0021               	movlb	1	; select bank1
  4502  03BC  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4503  03BD  0020               	movlb	0	; select bank0
  4504  03BE  082F               	movf	?_floorf+2,w
  4505  03BF  0021               	movlb	1	; select bank1
  4506  03C0  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4507  03C1  0020               	movlb	0	; select bank0
  4508  03C2  082E               	movf	?_floorf+1,w
  4509  03C3  0021               	movlb	1	; select bank1
  4510  03C4  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4511  03C5  0020               	movlb	0	; select bank0
  4512  03C6  082D               	movf	?_floorf,w
  4513  03C7  0021               	movlb	1	; select bank1
  4514  03C8  00C1               	movwf	efgtoa@l^(0+128)
  4515                           
  4516                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4517  03C9  0844               	movf	(efgtoa@l+3)^(0+128),w
  4518  03CA  00F3               	movwf	___fltol@f1+3
  4519  03CB  0843               	movf	(efgtoa@l+2)^(0+128),w
  4520  03CC  00F2               	movwf	___fltol@f1+2
  4521  03CD  0842               	movf	(efgtoa@l+1)^(0+128),w
  4522  03CE  00F1               	movwf	___fltol@f1+1
  4523  03CF  0841               	movf	efgtoa@l^(0+128),w
  4524  03D0  00F0               	movwf	___fltol@f1
  4525  03D1  3193  235A  3180   	fcall	___fltol
  4526  03D4  0871               	movf	?___fltol+1,w
  4527  03D5  0021               	movlb	1	; select bank1
  4528  03D6  00B3               	movwf	(efgtoa@d+1)^(0+128)
  4529  03D7  0870               	movf	?___fltol,w
  4530  03D8  00B2               	movwf	efgtoa@d^(0+128)
  4531                           
  4532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4533  03D9  0844               	movf	(efgtoa@l+3)^(0+128),w
  4534  03DA  0020               	movlb	0	; select bank0
  4535  03DB  00A7               	movwf	___flmul@a+3
  4536  03DC  0021               	movlb	1	; select bank1
  4537  03DD  0843               	movf	(efgtoa@l+2)^(0+128),w
  4538  03DE  0020               	movlb	0	; select bank0
  4539  03DF  00A6               	movwf	___flmul@a+2
  4540  03E0  0021               	movlb	1	; select bank1
  4541  03E1  0842               	movf	(efgtoa@l+1)^(0+128),w
  4542  03E2  0020               	movlb	0	; select bank0
  4543  03E3  00A5               	movwf	___flmul@a+1
  4544  03E4  0021               	movlb	1	; select bank1
  4545  03E5  0841               	movf	efgtoa@l^(0+128),w
  4546  03E6  0020               	movlb	0	; select bank0
  4547  03E7  00A4               	movwf	___flmul@a
  4548  03E8  0021               	movlb	1	; select bank1
  4549  03E9  0852               	movf	(efgtoa@u+3)^(0+128),w
  4550  03EA  0020               	movlb	0	; select bank0
  4551  03EB  00A3               	movwf	___flmul@b+3
  4552  03EC  0021               	movlb	1	; select bank1
  4553  03ED  0851               	movf	(efgtoa@u+2)^(0+128),w
  4554  03EE  0020               	movlb	0	; select bank0
  4555  03EF  00A2               	movwf	___flmul@b+2
  4556  03F0  0021               	movlb	1	; select bank1
  4557  03F1  0850               	movf	(efgtoa@u+1)^(0+128),w
  4558  03F2  0020               	movlb	0	; select bank0
  4559  03F3  00A1               	movwf	___flmul@b+1
  4560  03F4  0021               	movlb	1	; select bank1
  4561  03F5  084F               	movf	efgtoa@u^(0+128),w
  4562  03F6  0020               	movlb	0	; select bank0
  4563  03F7  00A0               	movwf	___flmul@b
  4564  03F8  318B  232B  3180   	fcall	___flmul
  4565  03FB  0020               	movlb	0	; select bank0
  4566  03FC  0823               	movf	?___flmul+3,w
  4567  03FD  00BD               	movwf	___flsub@a+3
  4568  03FE  0822               	movf	?___flmul+2,w
  4569  03FF  00BC               	movwf	___flsub@a+2
  4570  0400  0821               	movf	?___flmul+1,w
  4571  0401  00BB               	movwf	___flsub@a+1
  4572  0402  0820               	movf	?___flmul,w
  4573  0403  00BA               	movwf	___flsub@a
  4574  0404  0021               	movlb	1	; select bank1
  4575  0405  0840               	movf	(efgtoa@h+3)^(0+128),w
  4576  0406  0020               	movlb	0	; select bank0
  4577  0407  00C1               	movwf	___flsub@b+3
  4578  0408  0021               	movlb	1	; select bank1
  4579  0409  083F               	movf	(efgtoa@h+2)^(0+128),w
  4580  040A  0020               	movlb	0	; select bank0
  4581  040B  00C0               	movwf	___flsub@b+2
  4582  040C  0021               	movlb	1	; select bank1
  4583  040D  083E               	movf	(efgtoa@h+1)^(0+128),w
  4584  040E  0020               	movlb	0	; select bank0
  4585  040F  00BF               	movwf	___flsub@b+1
  4586  0410  0021               	movlb	1	; select bank1
  4587  0411  083D               	movf	efgtoa@h^(0+128),w
  4588  0412  0020               	movlb	0	; select bank0
  4589  0413  00BE               	movwf	___flsub@b
  4590  0414  319F  2752  3180   	fcall	___flsub
  4591  0417  0020               	movlb	0	; select bank0
  4592  0418  083D               	movf	?___flsub+3,w
  4593  0419  0021               	movlb	1	; select bank1
  4594  041A  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4595  041B  0020               	movlb	0	; select bank0
  4596  041C  083C               	movf	?___flsub+2,w
  4597  041D  0021               	movlb	1	; select bank1
  4598  041E  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4599  041F  0020               	movlb	0	; select bank0
  4600  0420  083B               	movf	?___flsub+1,w
  4601  0421  0021               	movlb	1	; select bank1
  4602  0422  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4603  0423  0020               	movlb	0	; select bank0
  4604  0424  083A               	movf	?___flsub,w
  4605  0425  0021               	movlb	1	; select bank1
  4606  0426  00BD               	movwf	efgtoa@h^(0+128)
  4607                           
  4608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4609  0427  3041               	movlw	65
  4610  0428  00F3               	movwf	___fldiv@a+3
  4611  0429  3020               	movlw	32
  4612  042A  00F2               	movwf	___fldiv@a+2
  4613  042B  3000               	movlw	0
  4614  042C  00F1               	movwf	___fldiv@a+1
  4615  042D  3000               	movlw	0
  4616  042E  00F0               	movwf	___fldiv@a
  4617  042F  0852               	movf	(efgtoa@u+3)^(0+128),w
  4618  0430  00F7               	movwf	___fldiv@b+3
  4619  0431  0851               	movf	(efgtoa@u+2)^(0+128),w
  4620  0432  00F6               	movwf	___fldiv@b+2
  4621  0433  0850               	movf	(efgtoa@u+1)^(0+128),w
  4622  0434  00F5               	movwf	___fldiv@b+1
  4623  0435  084F               	movf	efgtoa@u^(0+128),w
  4624  0436  00F4               	movwf	___fldiv@b
  4625  0437  3196  264C  3180   	fcall	___fldiv
  4626  043A  0873               	movf	?___fldiv+3,w
  4627  043B  0021               	movlb	1	; select bank1
  4628  043C  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4629  043D  0872               	movf	?___fldiv+2,w
  4630  043E  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4631  043F  0871               	movf	?___fldiv+1,w
  4632  0440  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4633  0441  0870               	movf	?___fldiv,w
  4634  0442  00CF               	movwf	efgtoa@u^(0+128)
  4635  0443                     l3659:
  4636                           
  4637                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4638  0443  3001               	movlw	1
  4639  0444  07C5               	addwf	efgtoa@i^(0+128),f
  4640  0445  3000               	movlw	0
  4641  0446  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  4642  0447                     l3661:
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4645  0447  0846               	movf	(efgtoa@i+1)^(0+128),w
  4646  0448  3A80               	xorlw	128
  4647  0449  0020               	movlb	0	; select bank0
  4648  044A  00CB               	movwf	??_efgtoa
  4649  044B  0021               	movlb	1	; select bank1
  4650  044C  082D               	movf	(efgtoa@m+1)^(0+128),w
  4651  044D  3A80               	xorlw	128
  4652  044E  0020               	movlb	0	; select bank0
  4653  044F  024B               	subwf	??_efgtoa,w
  4654  0450  1D03               	skipz
  4655  0451  2C55               	goto	u4855
  4656  0452  0021               	movlb	1	; select bank1
  4657  0453  082C               	movf	efgtoa@m^(0+128),w
  4658  0454  0245               	subwf	efgtoa@i^(0+128),w
  4659  0455                     u4855:
  4660  0455  1C03               	skipc
  4661  0456  2C58               	goto	u4851
  4662  0457  2C59               	goto	u4850
  4663  0458                     u4851:
  4664  0458  2B99               	goto	l3657
  4665  0459                     u4850:
  4666  0459                     l3663:
  4667                           
  4668                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4669  0459  3040               	movlw	64
  4670  045A  0020               	movlb	0	; select bank0
  4671  045B  00A3               	movwf	___flmul@b+3
  4672  045C  30A0               	movlw	160
  4673  045D  00A2               	movwf	___flmul@b+2
  4674  045E  3000               	movlw	0
  4675  045F  00A1               	movwf	___flmul@b+1
  4676  0460  3000               	movlw	0
  4677  0461  00A0               	movwf	___flmul@b
  4678  0462  0021               	movlb	1	; select bank1
  4679  0463  0852               	movf	(efgtoa@u+3)^(0+128),w
  4680  0464  0020               	movlb	0	; select bank0
  4681  0465  00A7               	movwf	___flmul@a+3
  4682  0466  0021               	movlb	1	; select bank1
  4683  0467  0851               	movf	(efgtoa@u+2)^(0+128),w
  4684  0468  0020               	movlb	0	; select bank0
  4685  0469  00A6               	movwf	___flmul@a+2
  4686  046A  0021               	movlb	1	; select bank1
  4687  046B  0850               	movf	(efgtoa@u+1)^(0+128),w
  4688  046C  0020               	movlb	0	; select bank0
  4689  046D  00A5               	movwf	___flmul@a+1
  4690  046E  0021               	movlb	1	; select bank1
  4691  046F  084F               	movf	efgtoa@u^(0+128),w
  4692  0470  0020               	movlb	0	; select bank0
  4693  0471  00A4               	movwf	___flmul@a
  4694  0472  318B  232B  3180   	fcall	___flmul
  4695  0475  0020               	movlb	0	; select bank0
  4696  0476  0823               	movf	?___flmul+3,w
  4697  0477  0021               	movlb	1	; select bank1
  4698  0478  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4699  0479  0020               	movlb	0	; select bank0
  4700  047A  0822               	movf	?___flmul+2,w
  4701  047B  0021               	movlb	1	; select bank1
  4702  047C  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4703  047D  0020               	movlb	0	; select bank0
  4704  047E  0821               	movf	?___flmul+1,w
  4705  047F  0021               	movlb	1	; select bank1
  4706  0480  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4707  0481  0020               	movlb	0	; select bank0
  4708  0482  0820               	movf	?___flmul,w
  4709  0483  0021               	movlb	1	; select bank1
  4710  0484  00C1               	movwf	efgtoa@l^(0+128)
  4711                           
  4712                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4713  0485  0840               	movf	(efgtoa@h+3)^(0+128),w
  4714  0486  0020               	movlb	0	; select bank0
  4715  0487  00BD               	movwf	___flge@ff1+3
  4716  0488  0021               	movlb	1	; select bank1
  4717  0489  083F               	movf	(efgtoa@h+2)^(0+128),w
  4718  048A  0020               	movlb	0	; select bank0
  4719  048B  00BC               	movwf	___flge@ff1+2
  4720  048C  0021               	movlb	1	; select bank1
  4721  048D  083E               	movf	(efgtoa@h+1)^(0+128),w
  4722  048E  0020               	movlb	0	; select bank0
  4723  048F  00BB               	movwf	___flge@ff1+1
  4724  0490  0021               	movlb	1	; select bank1
  4725  0491  083D               	movf	efgtoa@h^(0+128),w
  4726  0492  0020               	movlb	0	; select bank0
  4727  0493  00BA               	movwf	___flge@ff1
  4728  0494  0021               	movlb	1	; select bank1
  4729  0495  0844               	movf	(efgtoa@l+3)^(0+128),w
  4730  0496  0020               	movlb	0	; select bank0
  4731  0497  00C1               	movwf	___flge@ff2+3
  4732  0498  0021               	movlb	1	; select bank1
  4733  0499  0843               	movf	(efgtoa@l+2)^(0+128),w
  4734  049A  0020               	movlb	0	; select bank0
  4735  049B  00C0               	movwf	___flge@ff2+2
  4736  049C  0021               	movlb	1	; select bank1
  4737  049D  0842               	movf	(efgtoa@l+1)^(0+128),w
  4738  049E  0020               	movlb	0	; select bank0
  4739  049F  00BF               	movwf	___flge@ff2+1
  4740  04A0  0021               	movlb	1	; select bank1
  4741  04A1  0841               	movf	efgtoa@l^(0+128),w
  4742  04A2  0020               	movlb	0	; select bank0
  4743  04A3  00BE               	movwf	___flge@ff2
  4744  04A4  3194  244D  3180   	fcall	___flge
  4745  04A7  1803               	btfsc	3,0
  4746  04A8  2CAA               	goto	u4861
  4747  04A9  2CAB               	goto	u4860
  4748  04AA                     u4861:
  4749  04AA  2CB5               	goto	l3667
  4750  04AB                     u4860:
  4751  04AB                     l3665:
  4752                           
  4753                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4754  04AB  3000               	movlw	0
  4755  04AC  0021               	movlb	1	; select bank1
  4756  04AD  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4757  04AE  3000               	movlw	0
  4758  04AF  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4759  04B0  3000               	movlw	0
  4760  04B1  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4761  04B2  3000               	movlw	0
  4762  04B3  00C1               	movwf	efgtoa@l^(0+128)
  4763                           
  4764                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  4765  04B4  2CDA               	goto	l3673
  4766  04B5                     l3667:
  4767                           
  4768                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4769  04B5  0021               	movlb	1	; select bank1
  4770  04B6  0840               	movf	(efgtoa@h+3)^(0+128),w
  4771  04B7  00F3               	movwf	___fleq@ff1+3
  4772  04B8  083F               	movf	(efgtoa@h+2)^(0+128),w
  4773  04B9  00F2               	movwf	___fleq@ff1+2
  4774  04BA  083E               	movf	(efgtoa@h+1)^(0+128),w
  4775  04BB  00F1               	movwf	___fleq@ff1+1
  4776  04BC  083D               	movf	efgtoa@h^(0+128),w
  4777  04BD  00F0               	movwf	___fleq@ff1
  4778  04BE  0844               	movf	(efgtoa@l+3)^(0+128),w
  4779  04BF  00F7               	movwf	___fleq@ff2+3
  4780  04C0  0843               	movf	(efgtoa@l+2)^(0+128),w
  4781  04C1  00F6               	movwf	___fleq@ff2+2
  4782  04C2  0842               	movf	(efgtoa@l+1)^(0+128),w
  4783  04C3  00F5               	movwf	___fleq@ff2+1
  4784  04C4  0841               	movf	efgtoa@l^(0+128),w
  4785  04C5  00F4               	movwf	___fleq@ff2
  4786  04C6  3190  20F9  3180   	fcall	___fleq
  4787  04C9  1C03               	btfss	3,0
  4788  04CA  2CCC               	goto	u4871
  4789  04CB  2CCD               	goto	u4870
  4790  04CC                     u4871:
  4791  04CC  2CDA               	goto	l3673
  4792  04CD                     u4870:
  4793  04CD                     l3669:
  4794  04CD  0021               	movlb	1	; select bank1
  4795  04CE  1832               	btfsc	efgtoa@d^(0+128),0
  4796  04CF  2CD1               	goto	u4881
  4797  04D0  2CD2               	goto	u4880
  4798  04D1                     u4881:
  4799  04D1  2CDA               	goto	l3673
  4800  04D2                     u4880:
  4801  04D2                     l3671:
  4802                           
  4803                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4804  04D2  3000               	movlw	0
  4805  04D3  00C4               	movwf	(efgtoa@l+3)^(0+128)
  4806  04D4  3000               	movlw	0
  4807  04D5  00C3               	movwf	(efgtoa@l+2)^(0+128)
  4808  04D6  3000               	movlw	0
  4809  04D7  00C2               	movwf	(efgtoa@l+1)^(0+128)
  4810  04D8  3000               	movlw	0
  4811  04D9  00C1               	movwf	efgtoa@l^(0+128)
  4812  04DA                     l3673:
  4813                           
  4814                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4815  04DA  0021               	movlb	1	; select bank1
  4816  04DB  0844               	movf	(efgtoa@l+3)^(0+128),w
  4817  04DC  00F3               	movwf	___fladd@b+3
  4818  04DD  0843               	movf	(efgtoa@l+2)^(0+128),w
  4819  04DE  00F2               	movwf	___fladd@b+2
  4820  04DF  0842               	movf	(efgtoa@l+1)^(0+128),w
  4821  04E0  00F1               	movwf	___fladd@b+1
  4822  04E1  0841               	movf	efgtoa@l^(0+128),w
  4823  04E2  00F0               	movwf	___fladd@b
  4824  04E3  084A               	movf	(efgtoa@g+3)^(0+128),w
  4825  04E4  00F7               	movwf	___fladd@a+3
  4826  04E5  0849               	movf	(efgtoa@g+2)^(0+128),w
  4827  04E6  00F6               	movwf	___fladd@a+2
  4828  04E7  0848               	movf	(efgtoa@g+1)^(0+128),w
  4829  04E8  00F5               	movwf	___fladd@a+1
  4830  04E9  0847               	movf	efgtoa@g^(0+128),w
  4831  04EA  00F4               	movwf	___fladd@a
  4832  04EB  3188  20EC  3180   	fcall	___fladd
  4833  04EE  0873               	movf	?___fladd+3,w
  4834  04EF  0021               	movlb	1	; select bank1
  4835  04F0  00C0               	movwf	(efgtoa@h+3)^(0+128)
  4836  04F1  0872               	movf	?___fladd+2,w
  4837  04F2  00BF               	movwf	(efgtoa@h+2)^(0+128)
  4838  04F3  0871               	movf	?___fladd+1,w
  4839  04F4  00BE               	movwf	(efgtoa@h+1)^(0+128)
  4840  04F5  0870               	movf	?___fladd,w
  4841  04F6  00BD               	movwf	efgtoa@h^(0+128)
  4842  04F7                     l3675:
  4843                           
  4844                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4845  04F7  0840               	movf	(efgtoa@h+3)^(0+128),w
  4846  04F8  0020               	movlb	0	; select bank0
  4847  04F9  00BD               	movwf	___flge@ff1+3
  4848  04FA  0021               	movlb	1	; select bank1
  4849  04FB  083F               	movf	(efgtoa@h+2)^(0+128),w
  4850  04FC  0020               	movlb	0	; select bank0
  4851  04FD  00BC               	movwf	___flge@ff1+2
  4852  04FE  0021               	movlb	1	; select bank1
  4853  04FF  083E               	movf	(efgtoa@h+1)^(0+128),w
  4854  0500  0020               	movlb	0	; select bank0
  4855  0501  00BB               	movwf	___flge@ff1+1
  4856  0502  0021               	movlb	1	; select bank1
  4857  0503  083D               	movf	efgtoa@h^(0+128),w
  4858  0504  0020               	movlb	0	; select bank0
  4859  0505  00BA               	movwf	___flge@ff1
  4860  0506  3041               	movlw	65
  4861  0507  00A3               	movwf	___flmul@b+3
  4862  0508  3020               	movlw	32
  4863  0509  00A2               	movwf	___flmul@b+2
  4864  050A  3000               	movlw	0
  4865  050B  00A1               	movwf	___flmul@b+1
  4866  050C  3000               	movlw	0
  4867  050D  00A0               	movwf	___flmul@b
  4868  050E  0021               	movlb	1	; select bank1
  4869  050F  0831               	movf	(efgtoa@ou+3)^(0+128),w
  4870  0510  0020               	movlb	0	; select bank0
  4871  0511  00A7               	movwf	___flmul@a+3
  4872  0512  0021               	movlb	1	; select bank1
  4873  0513  0830               	movf	(efgtoa@ou+2)^(0+128),w
  4874  0514  0020               	movlb	0	; select bank0
  4875  0515  00A6               	movwf	___flmul@a+2
  4876  0516  0021               	movlb	1	; select bank1
  4877  0517  082F               	movf	(efgtoa@ou+1)^(0+128),w
  4878  0518  0020               	movlb	0	; select bank0
  4879  0519  00A5               	movwf	___flmul@a+1
  4880  051A  0021               	movlb	1	; select bank1
  4881  051B  082E               	movf	efgtoa@ou^(0+128),w
  4882  051C  0020               	movlb	0	; select bank0
  4883  051D  00A4               	movwf	___flmul@a
  4884  051E  318B  232B  3180   	fcall	___flmul
  4885  0521  0020               	movlb	0	; select bank0
  4886  0522  0823               	movf	?___flmul+3,w
  4887  0523  00C1               	movwf	___flge@ff2+3
  4888  0524  0822               	movf	?___flmul+2,w
  4889  0525  00C0               	movwf	___flge@ff2+2
  4890  0526  0821               	movf	?___flmul+1,w
  4891  0527  00BF               	movwf	___flge@ff2+1
  4892  0528  0820               	movf	?___flmul,w
  4893  0529  00BE               	movwf	___flge@ff2
  4894  052A  3194  244D  3180   	fcall	___flge
  4895  052D  1C03               	btfss	3,0
  4896  052E  2D30               	goto	u4891
  4897  052F  2D31               	goto	u4890
  4898  0530                     u4891:
  4899  0530  2D6C               	goto	l866
  4900  0531                     u4890:
  4901  0531                     l3677:
  4902                           
  4903                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  4904  0531  3001               	movlw	1
  4905  0532  0021               	movlb	1	; select bank1
  4906  0533  07CB               	addwf	efgtoa@e^(0+128),f
  4907  0534  3000               	movlw	0
  4908  0535  3DCC               	addwfc	(efgtoa@e+1)^(0+128),f
  4909  0536                     l3679:
  4910                           
  4911                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4912  0536  3041               	movlw	65
  4913  0537  0020               	movlb	0	; select bank0
  4914  0538  00A3               	movwf	___flmul@b+3
  4915  0539  3020               	movlw	32
  4916  053A  00A2               	movwf	___flmul@b+2
  4917  053B  3000               	movlw	0
  4918  053C  00A1               	movwf	___flmul@b+1
  4919  053D  3000               	movlw	0
  4920  053E  00A0               	movwf	___flmul@b
  4921  053F  0021               	movlb	1	; select bank1
  4922  0540  0831               	movf	(efgtoa@ou+3)^(0+128),w
  4923  0541  0020               	movlb	0	; select bank0
  4924  0542  00A7               	movwf	___flmul@a+3
  4925  0543  0021               	movlb	1	; select bank1
  4926  0544  0830               	movf	(efgtoa@ou+2)^(0+128),w
  4927  0545  0020               	movlb	0	; select bank0
  4928  0546  00A6               	movwf	___flmul@a+2
  4929  0547  0021               	movlb	1	; select bank1
  4930  0548  082F               	movf	(efgtoa@ou+1)^(0+128),w
  4931  0549  0020               	movlb	0	; select bank0
  4932  054A  00A5               	movwf	___flmul@a+1
  4933  054B  0021               	movlb	1	; select bank1
  4934  054C  082E               	movf	efgtoa@ou^(0+128),w
  4935  054D  0020               	movlb	0	; select bank0
  4936  054E  00A4               	movwf	___flmul@a
  4937  054F  318B  232B  3180   	fcall	___flmul
  4938  0552  0020               	movlb	0	; select bank0
  4939  0553  0823               	movf	?___flmul+3,w
  4940  0554  0021               	movlb	1	; select bank1
  4941  0555  00B1               	movwf	(efgtoa@ou+3)^(0+128)
  4942  0556  0020               	movlb	0	; select bank0
  4943  0557  0822               	movf	?___flmul+2,w
  4944  0558  0021               	movlb	1	; select bank1
  4945  0559  00B0               	movwf	(efgtoa@ou+2)^(0+128)
  4946  055A  0020               	movlb	0	; select bank0
  4947  055B  0821               	movf	?___flmul+1,w
  4948  055C  0021               	movlb	1	; select bank1
  4949  055D  00AF               	movwf	(efgtoa@ou+1)^(0+128)
  4950  055E  0020               	movlb	0	; select bank0
  4951  055F  0820               	movf	?___flmul,w
  4952  0560  0021               	movlb	1	; select bank1
  4953  0561  00AE               	movwf	efgtoa@ou^(0+128)
  4954  0562                     l3681:
  4955                           
  4956                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4957  0562  3066               	movlw	102
  4958  0563  063B               	xorwf	efgtoa@nmode^(0+128),w
  4959  0564  1D03               	btfss	3,2
  4960  0565  2D67               	goto	u4901
  4961  0566  2D68               	goto	u4900
  4962  0567                     u4901:
  4963  0567  2D6C               	goto	l866
  4964  0568                     u4900:
  4965  0568                     l3683:
  4966                           
  4967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  4968  0568  3001               	movlw	1
  4969  0569  07AC               	addwf	efgtoa@m^(0+128),f
  4970  056A  3000               	movlw	0
  4971  056B  3DAD               	addwfc	(efgtoa@m+1)^(0+128),f
  4972  056C                     l866:	
  4973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 460:  }
  4974                           
  4975                           
  4976                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4977  056C  0021               	movlb	1	; select bank1
  4978  056D  0831               	movf	(efgtoa@ou+3)^(0+128),w
  4979  056E  00D2               	movwf	(efgtoa@u+3)^(0+128)
  4980  056F  0830               	movf	(efgtoa@ou+2)^(0+128),w
  4981  0570  00D1               	movwf	(efgtoa@u+2)^(0+128)
  4982  0571  082F               	movf	(efgtoa@ou+1)^(0+128),w
  4983  0572  00D0               	movwf	(efgtoa@u+1)^(0+128)
  4984  0573  082E               	movf	efgtoa@ou^(0+128),w
  4985  0574  00CF               	movwf	efgtoa@u^(0+128)
  4986  0575                     l3685:
  4987                           
  4988                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4989  0575  3065               	movlw	101
  4990  0576  063B               	xorwf	efgtoa@nmode^(0+128),w
  4991  0577  1903               	btfsc	3,2
  4992  0578  2D7A               	goto	u4911
  4993  0579  2D7B               	goto	u4910
  4994  057A                     u4911:
  4995  057A  2D80               	goto	l3689
  4996  057B                     u4910:
  4997  057B                     l3687:
  4998  057B  084C               	movf	(efgtoa@e+1)^(0+128),w
  4999  057C  00AB               	movwf	(efgtoa@ne+1)^(0+128)
  5000  057D  084B               	movf	efgtoa@e^(0+128),w
  5001  057E  00AA               	movwf	efgtoa@ne^(0+128)
  5002  057F  2D82               	goto	l871
  5003  0580                     l3689:
  5004  0580  01AA               	clrf	efgtoa@ne^(0+128)
  5005  0581  01AB               	clrf	(efgtoa@ne+1)^(0+128)
  5006  0582                     l871:
  5007                           
  5008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5009  0582  01A8               	clrf	efgtoa@pp^(0+128)
  5010  0583  01A9               	clrf	(efgtoa@pp+1)^(0+128)
  5011                           
  5012                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5013  0584  01A6               	clrf	efgtoa@t^(0+128)
  5014  0585  01A7               	clrf	(efgtoa@t+1)^(0+128)
  5015                           
  5016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5017  0586  01C5               	clrf	efgtoa@i^(0+128)
  5018  0587  01C6               	clrf	(efgtoa@i+1)^(0+128)
  5019                           
  5020                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5021  0588  2EAD               	goto	l3739
  5022  0589                     l3691:
  5023                           
  5024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5025  0589  0021               	movlb	1	; select bank1
  5026  058A  0852               	movf	(efgtoa@u+3)^(0+128),w
  5027  058B  00F3               	movwf	___fldiv@a+3
  5028  058C  0851               	movf	(efgtoa@u+2)^(0+128),w
  5029  058D  00F2               	movwf	___fldiv@a+2
  5030  058E  0850               	movf	(efgtoa@u+1)^(0+128),w
  5031  058F  00F1               	movwf	___fldiv@a+1
  5032  0590  084F               	movf	efgtoa@u^(0+128),w
  5033  0591  00F0               	movwf	___fldiv@a
  5034  0592  0840               	movf	(efgtoa@h+3)^(0+128),w
  5035  0593  00F7               	movwf	___fldiv@b+3
  5036  0594  083F               	movf	(efgtoa@h+2)^(0+128),w
  5037  0595  00F6               	movwf	___fldiv@b+2
  5038  0596  083E               	movf	(efgtoa@h+1)^(0+128),w
  5039  0597  00F5               	movwf	___fldiv@b+1
  5040  0598  083D               	movf	efgtoa@h^(0+128),w
  5041  0599  00F4               	movwf	___fldiv@b
  5042  059A  3196  264C  3180   	fcall	___fldiv
  5043  059D  0873               	movf	?___fldiv+3,w
  5044  059E  0020               	movlb	0	; select bank0
  5045  059F  00B0               	movwf	floorf@x+3
  5046  05A0  0872               	movf	?___fldiv+2,w
  5047  05A1  00AF               	movwf	floorf@x+2
  5048  05A2  0871               	movf	?___fldiv+1,w
  5049  05A3  00AE               	movwf	floorf@x+1
  5050  05A4  0870               	movf	?___fldiv,w
  5051  05A5  00AD               	movwf	floorf@x
  5052  05A6  3188  2001  3180   	fcall	_floorf
  5053  05A9  0020               	movlb	0	; select bank0
  5054  05AA  0830               	movf	?_floorf+3,w
  5055  05AB  0021               	movlb	1	; select bank1
  5056  05AC  00C4               	movwf	(efgtoa@l+3)^(0+128)
  5057  05AD  0020               	movlb	0	; select bank0
  5058  05AE  082F               	movf	?_floorf+2,w
  5059  05AF  0021               	movlb	1	; select bank1
  5060  05B0  00C3               	movwf	(efgtoa@l+2)^(0+128)
  5061  05B1  0020               	movlb	0	; select bank0
  5062  05B2  082E               	movf	?_floorf+1,w
  5063  05B3  0021               	movlb	1	; select bank1
  5064  05B4  00C2               	movwf	(efgtoa@l+1)^(0+128)
  5065  05B5  0020               	movlb	0	; select bank0
  5066  05B6  082D               	movf	?_floorf,w
  5067  05B7  0021               	movlb	1	; select bank1
  5068  05B8  00C1               	movwf	efgtoa@l^(0+128)
  5069                           
  5070                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5071  05B9  0844               	movf	(efgtoa@l+3)^(0+128),w
  5072  05BA  00F3               	movwf	___fltol@f1+3
  5073  05BB  0843               	movf	(efgtoa@l+2)^(0+128),w
  5074  05BC  00F2               	movwf	___fltol@f1+2
  5075  05BD  0842               	movf	(efgtoa@l+1)^(0+128),w
  5076  05BE  00F1               	movwf	___fltol@f1+1
  5077  05BF  0841               	movf	efgtoa@l^(0+128),w
  5078  05C0  00F0               	movwf	___fltol@f1
  5079  05C1  3193  235A  3180   	fcall	___fltol
  5080  05C4  0871               	movf	?___fltol+1,w
  5081  05C5  0021               	movlb	1	; select bank1
  5082  05C6  00B3               	movwf	(efgtoa@d+1)^(0+128)
  5083  05C7  0870               	movf	?___fltol,w
  5084  05C8  00B2               	movwf	efgtoa@d^(0+128)
  5085  05C9                     l3693:
  5086                           
  5087                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5088  05C9  1A69               	btfsc	_flags^(0+128),4
  5089  05CA  2DCC               	goto	u4921
  5090  05CB  2DCD               	goto	u4920
  5091  05CC                     u4921:
  5092  05CC  2DE2               	goto	l3703
  5093  05CD                     u4920:
  5094  05CD                     l3695:
  5095  05CD  0832               	movf	efgtoa@d^(0+128),w
  5096  05CE  0433               	iorwf	(efgtoa@d+1)^(0+128),w
  5097  05CF  1D03               	btfss	3,2
  5098  05D0  2DD2               	goto	u4931
  5099  05D1  2DD3               	goto	u4930
  5100  05D2                     u4931:
  5101  05D2  2DE2               	goto	l3703
  5102  05D3                     u4930:
  5103  05D3                     l3697:
  5104  05D3  3067               	movlw	103
  5105  05D4  063C               	xorwf	efgtoa@mode^(0+128),w
  5106  05D5  1D03               	btfss	3,2
  5107  05D6  2DD8               	goto	u4941
  5108  05D7  2DD9               	goto	u4940
  5109  05D8                     u4941:
  5110  05D8  2DE2               	goto	l3703
  5111  05D9                     u4940:
  5112  05D9                     l3699:
  5113  05D9  1FAB               	btfss	(efgtoa@ne+1)^(0+128),7
  5114  05DA  2DDC               	goto	u4951
  5115  05DB  2DDD               	goto	u4950
  5116  05DC                     u4951:
  5117  05DC  2DE2               	goto	l3703
  5118  05DD                     u4950:
  5119  05DD                     l3701:
  5120                           
  5121                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5122  05DD  3001               	movlw	1
  5123  05DE  07A6               	addwf	efgtoa@t^(0+128),f
  5124  05DF  3000               	movlw	0
  5125  05E0  3DA7               	addwfc	(efgtoa@t+1)^(0+128),f
  5126                           
  5127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5128  05E1  2E3B               	goto	l3731
  5129  05E2                     l3703:
  5130                           
  5131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5132  05E2  0828               	movf	efgtoa@pp^(0+128),w
  5133  05E3  0429               	iorwf	(efgtoa@pp+1)^(0+128),w
  5134  05E4  1D03               	btfss	3,2
  5135  05E5  2DE7               	goto	u4961
  5136  05E6  2DE8               	goto	u4960
  5137  05E7                     u4961:
  5138  05E7  2E1F               	goto	l3723
  5139  05E8                     u4960:
  5140  05E8                     l3705:
  5141  05E8  1FAB               	btfss	(efgtoa@ne+1)^(0+128),7
  5142  05E9  2DEB               	goto	u4971
  5143  05EA  2DEC               	goto	u4970
  5144  05EB                     u4971:
  5145  05EB  2E1F               	goto	l3723
  5146  05EC                     u4970:
  5147  05EC                     l3707:
  5148                           
  5149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5150  05EC  302E               	movlw	46
  5151  05ED  0020               	movlb	0	; select bank0
  5152  05EE  00CB               	movwf	??_efgtoa
  5153  05EF  0021               	movlb	1	; select bank1
  5154  05F0  084D               	movf	efgtoa@n^(0+128),w
  5155  05F1  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5156  05F2  0086               	movwf	6
  5157  05F3  3001               	movlw	1	; select bank3/4
  5158  05F4  0087               	movwf	7
  5159  05F5  0020               	movlb	0	; select bank0
  5160  05F6  084B               	movf	??_efgtoa,w
  5161  05F7  0081               	movwf	1
  5162  05F8                     l3709:
  5163  05F8  3001               	movlw	1
  5164  05F9  0021               	movlb	1	; select bank1
  5165  05FA  07CD               	addwf	efgtoa@n^(0+128),f
  5166  05FB  3000               	movlw	0
  5167  05FC  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5168  05FD                     l3711:
  5169                           
  5170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5171  05FD  30FF               	movlw	255
  5172  05FE  07B9               	addwf	efgtoa@w^(0+128),f
  5173  05FF  30FF               	movlw	255
  5174  0600  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5175  0601                     l3713:
  5176                           
  5177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5178  0601  3001               	movlw	1
  5179  0602  00A8               	movwf	efgtoa@pp^(0+128)
  5180  0603  3000               	movlw	0
  5181  0604  00A9               	movwf	(efgtoa@pp^(0+128)+1)
  5182  0605  2E1F               	goto	l3723
  5183  0606                     l3715:
  5184                           
  5185                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5186  0606  3030               	movlw	48
  5187  0607  0020               	movlb	0	; select bank0
  5188  0608  00CB               	movwf	??_efgtoa
  5189  0609  0021               	movlb	1	; select bank1
  5190  060A  084D               	movf	efgtoa@n^(0+128),w
  5191  060B  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5192  060C  0086               	movwf	6
  5193  060D  3001               	movlw	1	; select bank3/4
  5194  060E  0087               	movwf	7
  5195  060F  0020               	movlb	0	; select bank0
  5196  0610  084B               	movf	??_efgtoa,w
  5197  0611  0081               	movwf	1
  5198  0612                     l3717:
  5199  0612  3001               	movlw	1
  5200  0613  0021               	movlb	1	; select bank1
  5201  0614  07CD               	addwf	efgtoa@n^(0+128),f
  5202  0615  3000               	movlw	0
  5203  0616  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5204  0617                     l3719:
  5205                           
  5206                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5207  0617  30FF               	movlw	255
  5208  0618  07B9               	addwf	efgtoa@w^(0+128),f
  5209  0619  30FF               	movlw	255
  5210  061A  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5211  061B                     l3721:
  5212                           
  5213                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5214  061B  30FF               	movlw	255
  5215  061C  07A6               	addwf	efgtoa@t^(0+128),f
  5216  061D  30FF               	movlw	255
  5217  061E  3DA7               	addwfc	(efgtoa@t+1)^(0+128),f
  5218  061F                     l3723:
  5219                           
  5220                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5221  061F  0826               	movf	efgtoa@t^(0+128),w
  5222  0620  0427               	iorwf	(efgtoa@t+1)^(0+128),w
  5223  0621  1D03               	btfss	3,2
  5224  0622  2E24               	goto	u4981
  5225  0623  2E25               	goto	u4980
  5226  0624                     u4981:
  5227  0624  2E06               	goto	l3715
  5228  0625                     u4980:
  5229  0625                     l3725:
  5230                           
  5231                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5232  0625  0832               	movf	efgtoa@d^(0+128),w
  5233  0626  3E30               	addlw	48
  5234  0627  0020               	movlb	0	; select bank0
  5235  0628  00CB               	movwf	??_efgtoa
  5236  0629  0021               	movlb	1	; select bank1
  5237  062A  084D               	movf	efgtoa@n^(0+128),w
  5238  062B  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5239  062C  0086               	movwf	6
  5240  062D  3001               	movlw	1	; select bank3/4
  5241  062E  0087               	movwf	7
  5242  062F  0020               	movlb	0	; select bank0
  5243  0630  084B               	movf	??_efgtoa,w
  5244  0631  0081               	movwf	1
  5245  0632                     l3727:
  5246  0632  3001               	movlw	1
  5247  0633  0021               	movlb	1	; select bank1
  5248  0634  07CD               	addwf	efgtoa@n^(0+128),f
  5249  0635  3000               	movlw	0
  5250  0636  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5251  0637                     l3729:
  5252                           
  5253                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5254  0637  30FF               	movlw	255
  5255  0638  07B9               	addwf	efgtoa@w^(0+128),f
  5256  0639  30FF               	movlw	255
  5257  063A  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5258  063B                     l3731:
  5259                           
  5260                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5261  063B  0844               	movf	(efgtoa@l+3)^(0+128),w
  5262  063C  0020               	movlb	0	; select bank0
  5263  063D  00A7               	movwf	___flmul@a+3
  5264  063E  0021               	movlb	1	; select bank1
  5265  063F  0843               	movf	(efgtoa@l+2)^(0+128),w
  5266  0640  0020               	movlb	0	; select bank0
  5267  0641  00A6               	movwf	___flmul@a+2
  5268  0642  0021               	movlb	1	; select bank1
  5269  0643  0842               	movf	(efgtoa@l+1)^(0+128),w
  5270  0644  0020               	movlb	0	; select bank0
  5271  0645  00A5               	movwf	___flmul@a+1
  5272  0646  0021               	movlb	1	; select bank1
  5273  0647  0841               	movf	efgtoa@l^(0+128),w
  5274  0648  0020               	movlb	0	; select bank0
  5275  0649  00A4               	movwf	___flmul@a
  5276  064A  0021               	movlb	1	; select bank1
  5277  064B  0852               	movf	(efgtoa@u+3)^(0+128),w
  5278  064C  0020               	movlb	0	; select bank0
  5279  064D  00A3               	movwf	___flmul@b+3
  5280  064E  0021               	movlb	1	; select bank1
  5281  064F  0851               	movf	(efgtoa@u+2)^(0+128),w
  5282  0650  0020               	movlb	0	; select bank0
  5283  0651  00A2               	movwf	___flmul@b+2
  5284  0652  0021               	movlb	1	; select bank1
  5285  0653  0850               	movf	(efgtoa@u+1)^(0+128),w
  5286  0654  0020               	movlb	0	; select bank0
  5287  0655  00A1               	movwf	___flmul@b+1
  5288  0656  0021               	movlb	1	; select bank1
  5289  0657  084F               	movf	efgtoa@u^(0+128),w
  5290  0658  0020               	movlb	0	; select bank0
  5291  0659  00A0               	movwf	___flmul@b
  5292  065A  318B  232B  3180   	fcall	___flmul
  5293  065D  0020               	movlb	0	; select bank0
  5294  065E  0823               	movf	?___flmul+3,w
  5295  065F  00BD               	movwf	___flsub@a+3
  5296  0660  0822               	movf	?___flmul+2,w
  5297  0661  00BC               	movwf	___flsub@a+2
  5298  0662  0821               	movf	?___flmul+1,w
  5299  0663  00BB               	movwf	___flsub@a+1
  5300  0664  0820               	movf	?___flmul,w
  5301  0665  00BA               	movwf	___flsub@a
  5302  0666  0021               	movlb	1	; select bank1
  5303  0667  0840               	movf	(efgtoa@h+3)^(0+128),w
  5304  0668  0020               	movlb	0	; select bank0
  5305  0669  00C1               	movwf	___flsub@b+3
  5306  066A  0021               	movlb	1	; select bank1
  5307  066B  083F               	movf	(efgtoa@h+2)^(0+128),w
  5308  066C  0020               	movlb	0	; select bank0
  5309  066D  00C0               	movwf	___flsub@b+2
  5310  066E  0021               	movlb	1	; select bank1
  5311  066F  083E               	movf	(efgtoa@h+1)^(0+128),w
  5312  0670  0020               	movlb	0	; select bank0
  5313  0671  00BF               	movwf	___flsub@b+1
  5314  0672  0021               	movlb	1	; select bank1
  5315  0673  083D               	movf	efgtoa@h^(0+128),w
  5316  0674  0020               	movlb	0	; select bank0
  5317  0675  00BE               	movwf	___flsub@b
  5318  0676  319F  2752  3180   	fcall	___flsub
  5319  0679  0020               	movlb	0	; select bank0
  5320  067A  083D               	movf	?___flsub+3,w
  5321  067B  0021               	movlb	1	; select bank1
  5322  067C  00C0               	movwf	(efgtoa@h+3)^(0+128)
  5323  067D  0020               	movlb	0	; select bank0
  5324  067E  083C               	movf	?___flsub+2,w
  5325  067F  0021               	movlb	1	; select bank1
  5326  0680  00BF               	movwf	(efgtoa@h+2)^(0+128)
  5327  0681  0020               	movlb	0	; select bank0
  5328  0682  083B               	movf	?___flsub+1,w
  5329  0683  0021               	movlb	1	; select bank1
  5330  0684  00BE               	movwf	(efgtoa@h+1)^(0+128)
  5331  0685  0020               	movlb	0	; select bank0
  5332  0686  083A               	movf	?___flsub,w
  5333  0687  0021               	movlb	1	; select bank1
  5334  0688  00BD               	movwf	efgtoa@h^(0+128)
  5335  0689                     l3733:
  5336                           
  5337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5338  0689  3041               	movlw	65
  5339  068A  00F3               	movwf	___fldiv@a+3
  5340  068B  3020               	movlw	32
  5341  068C  00F2               	movwf	___fldiv@a+2
  5342  068D  3000               	movlw	0
  5343  068E  00F1               	movwf	___fldiv@a+1
  5344  068F  3000               	movlw	0
  5345  0690  00F0               	movwf	___fldiv@a
  5346  0691  0852               	movf	(efgtoa@u+3)^(0+128),w
  5347  0692  00F7               	movwf	___fldiv@b+3
  5348  0693  0851               	movf	(efgtoa@u+2)^(0+128),w
  5349  0694  00F6               	movwf	___fldiv@b+2
  5350  0695  0850               	movf	(efgtoa@u+1)^(0+128),w
  5351  0696  00F5               	movwf	___fldiv@b+1
  5352  0697  084F               	movf	efgtoa@u^(0+128),w
  5353  0698  00F4               	movwf	___fldiv@b
  5354  0699  3196  264C  3180   	fcall	___fldiv
  5355  069C  0873               	movf	?___fldiv+3,w
  5356  069D  0021               	movlb	1	; select bank1
  5357  069E  00D2               	movwf	(efgtoa@u+3)^(0+128)
  5358  069F  0872               	movf	?___fldiv+2,w
  5359  06A0  00D1               	movwf	(efgtoa@u+2)^(0+128)
  5360  06A1  0871               	movf	?___fldiv+1,w
  5361  06A2  00D0               	movwf	(efgtoa@u+1)^(0+128)
  5362  06A3  0870               	movf	?___fldiv,w
  5363  06A4  00CF               	movwf	efgtoa@u^(0+128)
  5364  06A5                     l3735:
  5365                           
  5366                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5367  06A5  30FF               	movlw	255
  5368  06A6  07AA               	addwf	efgtoa@ne^(0+128),f
  5369  06A7  30FF               	movlw	255
  5370  06A8  3DAB               	addwfc	(efgtoa@ne+1)^(0+128),f
  5371  06A9                     l3737:
  5372                           
  5373                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5374  06A9  3001               	movlw	1
  5375  06AA  07C5               	addwf	efgtoa@i^(0+128),f
  5376  06AB  3000               	movlw	0
  5377  06AC  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5378  06AD                     l3739:
  5379                           
  5380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5381  06AD  0846               	movf	(efgtoa@i+1)^(0+128),w
  5382  06AE  3A80               	xorlw	128
  5383  06AF  0020               	movlb	0	; select bank0
  5384  06B0  00CB               	movwf	??_efgtoa
  5385  06B1  0021               	movlb	1	; select bank1
  5386  06B2  082D               	movf	(efgtoa@m+1)^(0+128),w
  5387  06B3  3A80               	xorlw	128
  5388  06B4  0020               	movlb	0	; select bank0
  5389  06B5  024B               	subwf	??_efgtoa,w
  5390  06B6  1D03               	skipz
  5391  06B7  2EBB               	goto	u4995
  5392  06B8  0021               	movlb	1	; select bank1
  5393  06B9  082C               	movf	efgtoa@m^(0+128),w
  5394  06BA  0245               	subwf	efgtoa@i^(0+128),w
  5395  06BB                     u4995:
  5396  06BB  1803               	skipnc
  5397  06BC  2EBE               	goto	u4991
  5398  06BD  2EBF               	goto	u4990
  5399  06BE                     u4991:
  5400  06BE  2ECF               	goto	l3743
  5401  06BF                     u4990:
  5402  06BF                     l3741:
  5403  06BF  0021               	movlb	1	; select bank1
  5404  06C0  084E               	movf	(efgtoa@n+1)^(0+128),w
  5405  06C1  3A80               	xorlw	128
  5406  06C2  0020               	movlb	0	; select bank0
  5407  06C3  00CB               	movwf	??_efgtoa
  5408  06C4  3080               	movlw	128
  5409  06C5  024B               	subwf	??_efgtoa,w
  5410  06C6  1D03               	skipz
  5411  06C7  2ECB               	goto	u5005
  5412  06C8  304B               	movlw	75
  5413  06C9  0021               	movlb	1	; select bank1
  5414  06CA  024D               	subwf	efgtoa@n^(0+128),w
  5415  06CB                     u5005:
  5416  06CB  1C03               	skipc
  5417  06CC  2ECE               	goto	u5001
  5418  06CD  2ECF               	goto	u5000
  5419  06CE                     u5001:
  5420  06CE  2D89               	goto	l3691
  5421  06CF                     u5000:
  5422  06CF                     l3743:
  5423                           
  5424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5425  06CF  0021               	movlb	1	; select bank1
  5426  06D0  0828               	movf	efgtoa@pp^(0+128),w
  5427  06D1  0429               	iorwf	(efgtoa@pp+1)^(0+128),w
  5428  06D2  1D03               	btfss	3,2
  5429  06D3  2ED5               	goto	u5011
  5430  06D4  2ED6               	goto	u5010
  5431  06D5                     u5011:
  5432  06D5  2EEB               	goto	l3751
  5433  06D6                     u5010:
  5434  06D6                     l3745:
  5435  06D6  1E69               	btfss	_flags^(0+128),4
  5436  06D7  2ED9               	goto	u5021
  5437  06D8  2EDA               	goto	u5020
  5438  06D9                     u5021:
  5439  06D9  2EEB               	goto	l3751
  5440  06DA                     u5020:
  5441  06DA                     l3747:
  5442                           
  5443                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5444  06DA  302E               	movlw	46
  5445  06DB  0020               	movlb	0	; select bank0
  5446  06DC  00CB               	movwf	??_efgtoa
  5447  06DD  0021               	movlb	1	; select bank1
  5448  06DE  084D               	movf	efgtoa@n^(0+128),w
  5449  06DF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5450  06E0  0086               	movwf	6
  5451  06E1  3001               	movlw	1	; select bank3/4
  5452  06E2  0087               	movwf	7
  5453  06E3  0020               	movlb	0	; select bank0
  5454  06E4  084B               	movf	??_efgtoa,w
  5455  06E5  0081               	movwf	1
  5456  06E6                     l3749:
  5457  06E6  3001               	movlw	1
  5458  06E7  0021               	movlb	1	; select bank1
  5459  06E8  07CD               	addwf	efgtoa@n^(0+128),f
  5460  06E9  3000               	movlw	0
  5461  06EA  3DCE               	addwfc	(efgtoa@n+1)^(0+128),f
  5462  06EB                     l3751:
  5463                           
  5464                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5465  06EB  084D               	movf	efgtoa@n^(0+128),w
  5466  06EC  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5467  06ED  0086               	movwf	6
  5468  06EE  3001               	movlw	1	; select bank3/4
  5469  06EF  0087               	movwf	7
  5470  06F0  0181               	clrf	1
  5471  06F1                     l3753:
  5472                           
  5473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5474  06F1  3065               	movlw	101
  5475  06F2  063B               	xorwf	efgtoa@nmode^(0+128),w
  5476  06F3  1D03               	btfss	3,2
  5477  06F4  2EF6               	goto	u5031
  5478  06F5  2EF7               	goto	u5030
  5479  06F6                     u5031:
  5480  06F6  2FC0               	goto	l3811
  5481  06F7                     u5030:
  5482  06F7                     l3755:
  5483                           
  5484                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5485  06F7  304F               	movlw	79
  5486  06F8  00C5               	movwf	efgtoa@i^(0+128)
  5487  06F9  3000               	movlw	0
  5488  06FA  00C6               	movwf	(efgtoa@i^(0+128)+1)
  5489  06FB                     l3757:
  5490                           
  5491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5492  06FB  0845               	movf	efgtoa@i^(0+128),w
  5493  06FC  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5494  06FD  0086               	movwf	6
  5495  06FE  3001               	movlw	1	; select bank3/4
  5496  06FF  0087               	movwf	7
  5497  0700  0181               	clrf	1
  5498  0701                     l3759:
  5499                           
  5500                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5501  0701  01B4               	clrf	efgtoa@sign^(0+128)
  5502  0702  01B5               	clrf	(efgtoa@sign+1)^(0+128)
  5503  0703                     l3761:
  5504                           
  5505                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5506  0703  1FCC               	btfss	(efgtoa@e+1)^(0+128),7
  5507  0704  2F06               	goto	u5041
  5508  0705  2F07               	goto	u5040
  5509  0706                     u5041:
  5510  0706  2F10               	goto	l3767
  5511  0707                     u5040:
  5512  0707                     l3763:
  5513                           
  5514                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5515  0707  3001               	movlw	1
  5516  0708  00B4               	movwf	efgtoa@sign^(0+128)
  5517  0709  3000               	movlw	0
  5518  070A  00B5               	movwf	(efgtoa@sign^(0+128)+1)
  5519  070B                     l3765:
  5520                           
  5521                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5522  070B  09CB               	comf	efgtoa@e^(0+128),f
  5523  070C  09CC               	comf	(efgtoa@e+1)^(0+128),f
  5524  070D  0ACB               	incf	efgtoa@e^(0+128),f
  5525  070E  1903               	skipnz
  5526  070F  0ACC               	incf	(efgtoa@e+1)^(0+128),f
  5527  0710                     l3767:
  5528                           
  5529                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5530  0710  3002               	movlw	2
  5531  0711  00B7               	movwf	efgtoa@p^(0+128)
  5532  0712  3000               	movlw	0
  5533  0713  00B8               	movwf	(efgtoa@p^(0+128)+1)
  5534                           
  5535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5536  0714  2F4B               	goto	l3779
  5537  0715                     l3769:
  5538                           
  5539                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5540  0715  30FF               	movlw	255
  5541  0716  0021               	movlb	1	; select bank1
  5542  0717  07C5               	addwf	efgtoa@i^(0+128),f
  5543  0718  30FF               	movlw	255
  5544  0719  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5545  071A                     l3771:
  5546                           
  5547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5548  071A  300A               	movlw	10
  5549  071B  00F0               	movwf	___awmod@divisor
  5550  071C  3000               	movlw	0
  5551  071D  00F1               	movwf	___awmod@divisor+1
  5552  071E  084C               	movf	(efgtoa@e+1)^(0+128),w
  5553  071F  00F3               	movwf	___awmod@dividend+1
  5554  0720  084B               	movf	efgtoa@e^(0+128),w
  5555  0721  00F2               	movwf	___awmod@dividend
  5556  0722  3191  2147  3180   	fcall	___awmod
  5557  0725  0870               	movf	?___awmod,w
  5558  0726  3E30               	addlw	48
  5559  0727  0020               	movlb	0	; select bank0
  5560  0728  00CB               	movwf	??_efgtoa
  5561  0729  0021               	movlb	1	; select bank1
  5562  072A  0845               	movf	efgtoa@i^(0+128),w
  5563  072B  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5564  072C  0086               	movwf	6
  5565  072D  3001               	movlw	1	; select bank3/4
  5566  072E  0087               	movwf	7
  5567  072F  0020               	movlb	0	; select bank0
  5568  0730  084B               	movf	??_efgtoa,w
  5569  0731  0081               	movwf	1
  5570  0732                     l3773:
  5571                           
  5572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5573  0732  300A               	movlw	10
  5574  0733  00F0               	movwf	___awdiv@divisor
  5575  0734  3000               	movlw	0
  5576  0735  00F1               	movwf	___awdiv@divisor+1
  5577  0736  0021               	movlb	1	; select bank1
  5578  0737  084C               	movf	(efgtoa@e+1)^(0+128),w
  5579  0738  00F3               	movwf	___awdiv@dividend+1
  5580  0739  084B               	movf	efgtoa@e^(0+128),w
  5581  073A  00F2               	movwf	___awdiv@dividend
  5582  073B  3192  22FB  3180   	fcall	___awdiv
  5583  073E  0871               	movf	?___awdiv+1,w
  5584  073F  0021               	movlb	1	; select bank1
  5585  0740  00CC               	movwf	(efgtoa@e+1)^(0+128)
  5586  0741  0870               	movf	?___awdiv,w
  5587  0742  00CB               	movwf	efgtoa@e^(0+128)
  5588  0743                     l3775:
  5589                           
  5590                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5591  0743  30FF               	movlw	255
  5592  0744  07B7               	addwf	efgtoa@p^(0+128),f
  5593  0745  30FF               	movlw	255
  5594  0746  3DB8               	addwfc	(efgtoa@p+1)^(0+128),f
  5595  0747                     l3777:
  5596                           
  5597                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5598  0747  30FF               	movlw	255
  5599  0748  07B9               	addwf	efgtoa@w^(0+128),f
  5600  0749  30FF               	movlw	255
  5601  074A  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5602  074B                     l3779:
  5603                           
  5604                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5605  074B  084B               	movf	efgtoa@e^(0+128),w
  5606  074C  044C               	iorwf	(efgtoa@e+1)^(0+128),w
  5607  074D  1D03               	btfss	3,2
  5608  074E  2F50               	goto	u5051
  5609  074F  2F51               	goto	u5050
  5610  0750                     u5051:
  5611  0750  2F15               	goto	l3769
  5612  0751                     u5050:
  5613  0751                     l3781:
  5614  0751  0838               	movf	(efgtoa@p+1)^(0+128),w
  5615  0752  3A80               	xorlw	128
  5616  0753  0020               	movlb	0	; select bank0
  5617  0754  00CB               	movwf	??_efgtoa
  5618  0755  3080               	movlw	128
  5619  0756  024B               	subwf	??_efgtoa,w
  5620  0757  1D03               	skipz
  5621  0758  2F5C               	goto	u5065
  5622  0759  3001               	movlw	1
  5623  075A  0021               	movlb	1	; select bank1
  5624  075B  0237               	subwf	efgtoa@p^(0+128),w
  5625  075C                     u5065:
  5626  075C  1803               	skipnc
  5627  075D  2F5F               	goto	u5061
  5628  075E  2F60               	goto	u5060
  5629  075F                     u5061:
  5630  075F  2F15               	goto	l3769
  5631  0760                     u5060:
  5632  0760                     l3783:
  5633                           
  5634                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  5635  0760  30FF               	movlw	255
  5636  0761  0021               	movlb	1	; select bank1
  5637  0762  07C5               	addwf	efgtoa@i^(0+128),f
  5638  0763  30FF               	movlw	255
  5639  0764  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5640  0765                     l3785:
  5641                           
  5642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5643  0765  0834               	movf	efgtoa@sign^(0+128),w
  5644  0766  0435               	iorwf	(efgtoa@sign+1)^(0+128),w
  5645  0767  1D03               	btfss	3,2
  5646  0768  2F6A               	goto	u5071
  5647  0769  2F6B               	goto	u5070
  5648  076A                     u5071:
  5649  076A  2F70               	goto	l3789
  5650  076B                     u5070:
  5651  076B                     l3787:
  5652  076B  302B               	movlw	43
  5653  076C  00A2               	movwf	_efgtoa$877^(0+128)
  5654  076D  3000               	movlw	0
  5655  076E  00A3               	movwf	(_efgtoa$877^(0+128)+1)
  5656  076F  2F74               	goto	l3791
  5657  0770                     l3789:
  5658  0770  302D               	movlw	45
  5659  0771  00A2               	movwf	_efgtoa$877^(0+128)
  5660  0772  3000               	movlw	0
  5661  0773  00A3               	movwf	(_efgtoa$877^(0+128)+1)
  5662  0774                     l3791:
  5663  0774  0822               	movf	_efgtoa$877^(0+128),w
  5664  0775  0020               	movlb	0	; select bank0
  5665  0776  00CB               	movwf	??_efgtoa
  5666  0777  0021               	movlb	1	; select bank1
  5667  0778  0845               	movf	efgtoa@i^(0+128),w
  5668  0779  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5669  077A  0086               	movwf	6
  5670  077B  3001               	movlw	1	; select bank3/4
  5671  077C  0087               	movwf	7
  5672  077D  0020               	movlb	0	; select bank0
  5673  077E  084B               	movf	??_efgtoa,w
  5674  077F  0081               	movwf	1
  5675  0780                     l3793:
  5676                           
  5677                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  5678  0780  30FF               	movlw	255
  5679  0781  0021               	movlb	1	; select bank1
  5680  0782  07B9               	addwf	efgtoa@w^(0+128),f
  5681  0783  30FF               	movlw	255
  5682  0784  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5683  0785                     l3795:
  5684                           
  5685                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  5686  0785  30FF               	movlw	255
  5687  0786  07C5               	addwf	efgtoa@i^(0+128),f
  5688  0787  30FF               	movlw	255
  5689  0788  3DC6               	addwfc	(efgtoa@i+1)^(0+128),f
  5690  0789                     l3799:	
  5691                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 && isupper((int)c), ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5692                           
  5693  0789  0020               	movlb	0	; select bank0
  5694  078A  084A               	movf	efgtoa@c,w
  5695  078B  3EBF               	addlw	191
  5696  078C  00CB               	movwf	??_efgtoa
  5697  078D  30FF               	movlw	255
  5698  078E  1803               	skipnc
  5699  078F  3000               	movlw	0
  5700  0790  00CC               	movwf	??_efgtoa+1
  5701  0791  3000               	movlw	0
  5702  0792  024C               	subwf	??_efgtoa+1,w
  5703  0793  301A               	movlw	26
  5704  0794  1903               	skipnz
  5705  0795  024B               	subwf	??_efgtoa,w
  5706  0796  1C03               	skipc
  5707  0797  2F99               	goto	u5081
  5708  0798  2F9A               	goto	u5080
  5709  0799                     u5081:
  5710  0799  2FA0               	goto	l3803
  5711  079A                     u5080:
  5712  079A                     l3801:
  5713  079A  3065               	movlw	101
  5714  079B  0021               	movlb	1	; select bank1
  5715  079C  00A4               	movwf	_efgtoa$878^(0+128)
  5716  079D  3000               	movlw	0
  5717  079E  00A5               	movwf	(_efgtoa$878^(0+128)+1)
  5718  079F  2FA5               	goto	l3805
  5719  07A0                     l3803:
  5720  07A0  3045               	movlw	69
  5721  07A1  0021               	movlb	1	; select bank1
  5722  07A2  00A4               	movwf	_efgtoa$878^(0+128)
  5723  07A3  3000               	movlw	0
  5724  07A4  00A5               	movwf	(_efgtoa$878^(0+128)+1)
  5725  07A5                     l3805:
  5726  07A5  0824               	movf	_efgtoa$878^(0+128),w
  5727  07A6  0020               	movlb	0	; select bank0
  5728  07A7  00CB               	movwf	??_efgtoa
  5729  07A8  0021               	movlb	1	; select bank1
  5730  07A9  0845               	movf	efgtoa@i^(0+128),w
  5731  07AA  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5732  07AB  0086               	movwf	6
  5733  07AC  3001               	movlw	1	; select bank3/4
  5734  07AD  0087               	movwf	7
  5735  07AE  0020               	movlb	0	; select bank0
  5736  07AF  084B               	movf	??_efgtoa,w
  5737  07B0  0081               	movwf	1
  5738  07B1                     l3807:
  5739                           
  5740                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  5741  07B1  30FF               	movlw	255
  5742  07B2  0021               	movlb	1	; select bank1
  5743  07B3  07B9               	addwf	efgtoa@w^(0+128),f
  5744  07B4  30FF               	movlw	255
  5745  07B5  3DBA               	addwfc	(efgtoa@w+1)^(0+128),f
  5746  07B6                     l3809:
  5747                           
  5748                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5749  07B6  0845               	movf	efgtoa@i^(0+128),w
  5750  07B7  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5751  07B8  00F0               	movwf	strcpy@src
  5752  07B9  3001               	movlw	1
  5753  07BA  00F1               	movwf	strcpy@src+1
  5754  07BB  084D               	movf	efgtoa@n^(0+128),w
  5755  07BC  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5756  07BD  3180  2004  3180   	fcall	_strcpy
  5757  07C0                     l3811:
  5758                           
  5759                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  5760  07C0  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  5761  07C1  0020               	movlb	0	; select bank0
  5762  07C2  00CB               	movwf	??_efgtoa
  5763  07C3  084B               	movf	??_efgtoa,w
  5764  07C4  00A4               	movwf	pad@buf
  5765  07C5  0021               	movlb	1	; select bank1
  5766  07C6  083A               	movf	(efgtoa@w+1)^(0+128),w
  5767  07C7  0020               	movlb	0	; select bank0
  5768  07C8  00A6               	movwf	pad@p+1
  5769  07C9  0021               	movlb	1	; select bank1
  5770  07CA  0839               	movf	efgtoa@w^(0+128),w
  5771  07CB  0020               	movlb	0	; select bank0
  5772  07CC  00A5               	movwf	pad@p
  5773  07CD  0021               	movlb	1	; select bank1
  5774  07CE  0836               	movf	efgtoa@fp^(0+128),w
  5775  07CF  3192  2245  3180   	fcall	_pad
  5776  07D2  0020               	movlb	0	; select bank0
  5777  07D3  0825               	movf	?_pad+1,w
  5778  07D4  00C7               	movwf	?_efgtoa+1
  5779  07D5  0824               	movf	?_pad,w
  5780  07D6  00C6               	movwf	?_efgtoa
  5781  07D7                     l827:
  5782  07D7  0008               	return
  5783  07D8                     __end_of_efgtoa:
  5784                           
  5785                           	psect	text6
  5786  1ED2                     __ptext6:	
  5787 ;; *************** function _tolower *****************
  5788 ;; Defined at:
  5789 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  c               2    6[COMMON] int 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;		None
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  2    6[COMMON] int 
  5796 ;; Registers used:
  5797 ;;		wreg, status,2, status,0
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5807 ;;Total ram usage:        4 bytes
  5808 ;; Hardware stack levels used: 1
  5809 ;; Hardware stack levels required when called: 1
  5810 ;; This function calls:
  5811 ;;		_isupper
  5812 ;; This function is called by:
  5813 ;;		_efgtoa
  5814 ;;		_vfpfcnvrt
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818  1ED2                     _tolower:	
  5819                           ;psect for function _tolower
  5820                           
  5821  1ED2                     l3447:	
  5822                           ;incstack = 0
  5823                           ; Regs used in _tolower: [wreg+status,2+status,0]
  5824                           
  5825  1ED2                     l3451:
  5826  1ED2  0876               	movf	tolower@c,w
  5827  1ED3  3EBF               	addlw	191
  5828  1ED4  00F8               	movwf	??_tolower
  5829  1ED5  30FF               	movlw	255
  5830  1ED6  3D77               	addwfc	tolower@c+1,w
  5831  1ED7  00F9               	movwf	??_tolower+1
  5832  1ED8  3000               	movlw	0
  5833  1ED9  0279               	subwf	??_tolower+1,w
  5834  1EDA  301A               	movlw	26
  5835  1EDB  1903               	skipnz
  5836  1EDC  0278               	subwf	??_tolower,w
  5837  1EDD  1803               	skipnc
  5838  1EDE  2EE0               	goto	u4441
  5839  1EDF  2EE1               	goto	u4440
  5840  1EE0                     u4441:
  5841  1EE0  2EE8               	goto	l1051
  5842  1EE1                     u4440:
  5843  1EE1                     l3453:
  5844  1EE1  3020               	movlw	32
  5845  1EE2  0476               	iorwf	tolower@c,w
  5846  1EE3  00F6               	movwf	?_tolower
  5847  1EE4  3000               	movlw	0
  5848  1EE5  0477               	iorwf	tolower@c+1,w
  5849  1EE6  00F7               	movwf	?_tolower+1
  5850  1EE7  2EE8               	goto	l1054
  5851  1EE8                     l1051:
  5852  1EE8                     l1054:
  5853  1EE8  0008               	return
  5854  1EE9                     __end_of_tolower:
  5855                           
  5856                           	psect	text7
  5857  1F01                     __ptext7:	
  5858 ;; *************** function _isupper *****************
  5859 ;; Defined at:
  5860 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  c               2    0[COMMON] int 
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  2    0[COMMON] int 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;Total ram usage:        6 bytes
  5879 ;; Hardware stack levels used: 1
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_efgtoa
  5884 ;;		_vfpfcnvrt
  5885 ;;		_tolower
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           
  5889  1F01                     _isupper:	
  5890                           ;psect for function _isupper
  5891                           
  5892  1F01                     l2919:	
  5893                           ;incstack = 0
  5894                           ; Regs used in _isupper: [wreg+status,2+status,0]
  5895                           
  5896  1F01  0870               	movf	isupper@c,w
  5897  1F02  3EBF               	addlw	191
  5898  1F03  00F2               	movwf	??_isupper
  5899  1F04  30FF               	movlw	255
  5900  1F05  3D71               	addwfc	isupper@c+1,w
  5901  1F06  00F3               	movwf	??_isupper+1
  5902  1F07  3000               	movlw	0
  5903  1F08  0273               	subwf	??_isupper+1,w
  5904  1F09  301A               	movlw	26
  5905  1F0A  1903               	skipnz
  5906  1F0B  0272               	subwf	??_isupper,w
  5907  1F0C  1C03               	skipc
  5908  1F0D  2F0F               	goto	u3281
  5909  1F0E  2F11               	goto	u3280
  5910  1F0F                     u3281:
  5911  1F0F  3001               	movlw	1
  5912  1F10  2F12               	goto	u3290
  5913  1F11                     u3280:
  5914  1F11  3000               	movlw	0
  5915  1F12                     u3290:
  5916  1F12  00F4               	movwf	??_isupper+2
  5917  1F13  01F5               	clrf	??_isupper+3
  5918  1F14  0874               	movf	??_isupper+2,w
  5919  1F15  00F0               	movwf	?_isupper
  5920  1F16  0875               	movf	??_isupper+3,w
  5921  1F17  00F1               	movwf	?_isupper+1
  5922  1F18                     l999:
  5923  1F18  0008               	return
  5924  1F19                     __end_of_isupper:
  5925                           
  5926                           	psect	text8
  5927  0004                     __ptext8:	
  5928 ;; *************** function _strcpy *****************
  5929 ;; Defined at:
  5930 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  dest            1    wreg     PTR unsigned char 
  5933 ;;		 -> dbuf(80), 
  5934 ;;  src             2    0[COMMON] PTR const unsigned char 
  5935 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5936 ;;		 -> dbuf(80), 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  dest            1    7[COMMON] PTR unsigned char 
  5939 ;;		 -> dbuf(80), 
  5940 ;;  s               2    4[COMMON] PTR const unsigned char 
  5941 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  5942 ;;		 -> dbuf(80), 
  5943 ;;  d               1    6[COMMON] PTR unsigned char 
  5944 ;;		 -> dbuf(80), 
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      PTR unsigned char 
  5947 ;; Registers used:
  5948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5957 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;Total ram usage:        8 bytes
  5959 ;; Hardware stack levels used: 1
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_efgtoa
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967  0004                     _strcpy:	
  5968                           ;psect for function _strcpy
  5969                           
  5970                           
  5971                           ;incstack = 0
  5972                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  5973                           ;strcpy@dest stored from wreg
  5974  0004  00F7               	movwf	strcpy@dest
  5975  0005                     l3443:
  5976  0005  0871               	movf	strcpy@src+1,w
  5977  0006  00F5               	movwf	strcpy@s+1
  5978  0007  0870               	movf	strcpy@src,w
  5979  0008  00F4               	movwf	strcpy@s
  5980  0009  0877               	movf	strcpy@dest,w
  5981  000A  00F2               	movwf	??_strcpy
  5982  000B  0872               	movf	??_strcpy,w
  5983  000C  00F6               	movwf	strcpy@d
  5984  000D                     l3445:
  5985  000D  0876               	movf	strcpy@d,w
  5986  000E  0086               	movwf	6
  5987  000F  3001               	movlw	1	; select bank2/3
  5988  0010  0087               	movwf	7
  5989  0011  0AF6               	incf	strcpy@d,f
  5990  0012  0875               	movf	strcpy@s+1,w
  5991  0013  00F3               	movwf	??_strcpy+1
  5992  0014  0874               	movf	strcpy@s,w
  5993  0015  00F2               	movwf	??_strcpy
  5994  0016  0AF4               	incf	strcpy@s,f
  5995  0017  1903               	skipnz
  5996  0018  0AF5               	incf	strcpy@s+1,f
  5997  0019  0872               	movf	??_strcpy,w
  5998  001A  0084               	movwf	4
  5999  001B  0873               	movf	??_strcpy+1,w
  6000  001C  0085               	movwf	5
  6001  001D  0800               	movf	0,w	;code access
  6002  001E  3FC0               	movwi [0]fsr1
  6003  001F  0889               	movf	9,f
  6004  0020  1D03               	btfss	3,2
  6005  0021  2823               	goto	u4431
  6006  0022  2824               	goto	u4430
  6007  0023                     u4431:
  6008  0023  280D               	goto	l3445
  6009  0024                     u4430:
  6010  0024                     l1031:
  6011  0024  0008               	return
  6012  0025                     __end_of_strcpy:
  6013                           
  6014                           	psect	text9
  6015  1245                     __ptext9:	
  6016 ;; *************** function _pad *****************
  6017 ;; Defined at:
  6018 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  fp              1    wreg     PTR struct _IO_FILE
  6021 ;;		 -> sprintf@f(10), 
  6022 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  6023 ;;		 -> dbuf(80), 
  6024 ;;  p               2    5[BANK0 ] int 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  6027 ;;		 -> sprintf@f(10), 
  6028 ;;  w               2    9[BANK0 ] int 
  6029 ;;  i               2    7[BANK0 ] int 
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  2    4[BANK0 ] int 
  6032 ;; Registers used:
  6033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6039 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6040 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6041 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6042 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;Total ram usage:        9 bytes
  6044 ;; Hardware stack levels used: 1
  6045 ;; Hardware stack levels required when called: 3
  6046 ;; This function calls:
  6047 ;;		_fputc
  6048 ;;		_fputs
  6049 ;;		_strlen
  6050 ;; This function is called by:
  6051 ;;		_efgtoa
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055  1245                     _pad:	
  6056                           ;psect for function _pad
  6057                           
  6058                           
  6059                           ;incstack = 0
  6060                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6061                           ;pad@fp stored from wreg
  6062  1245  0020               	movlb	0	; select bank0
  6063  1246  00AB               	movwf	pad@fp
  6064  1247                     l3397:
  6065                           
  6066                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6067  1247  0021               	movlb	1	; select bank1
  6068  1248  1C69               	btfss	_flags^(0+128),0
  6069  1249  2A4B               	goto	u4311
  6070  124A  2A4C               	goto	u4310
  6071  124B                     u4311:
  6072  124B  2A55               	goto	l3401
  6073  124C                     u4310:
  6074  124C                     l3399:
  6075                           
  6076                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6077  124C  0020               	movlb	0	; select bank0
  6078  124D  082B               	movf	pad@fp,w
  6079  124E  00FC               	movwf	??_pad
  6080  124F  087C               	movf	??_pad,w
  6081  1250  00F8               	movwf	fputs@fp
  6082  1251  0824               	movf	pad@buf,w
  6083  1252  319F  27D7  3192   	fcall	_fputs
  6084  1255                     l3401:
  6085                           
  6086                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6087  1255  0020               	movlb	0	; select bank0
  6088  1256  1BA6               	btfsc	pad@p+1,7
  6089  1257  2A59               	goto	u4321
  6090  1258  2A5A               	goto	u4320
  6091  1259                     u4321:
  6092  1259  2A5F               	goto	l3405
  6093  125A                     u4320:
  6094  125A                     l3403:
  6095  125A  0826               	movf	pad@p+1,w
  6096  125B  00AA               	movwf	pad@w+1
  6097  125C  0825               	movf	pad@p,w
  6098  125D  00A9               	movwf	pad@w
  6099  125E  2A61               	goto	l806
  6100  125F                     l3405:
  6101  125F  01A9               	clrf	pad@w
  6102  1260  01AA               	clrf	pad@w+1
  6103  1261                     l806:
  6104                           
  6105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6106  1261  01A7               	clrf	pad@i
  6107  1262  01A8               	clrf	pad@i+1
  6108                           
  6109                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6110  1263  2A75               	goto	l3411
  6111  1264                     l3407:
  6112                           
  6113                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6114  1264  3020               	movlw	32
  6115  1265  00F0               	movwf	fputc@c
  6116  1266  3000               	movlw	0
  6117  1267  00F1               	movwf	fputc@c+1
  6118  1268  0020               	movlb	0	; select bank0
  6119  1269  082B               	movf	pad@fp,w
  6120  126A  00FC               	movwf	??_pad
  6121  126B  087C               	movf	??_pad,w
  6122  126C  00F2               	movwf	fputc@fp
  6123  126D  3191  219A  3192   	fcall	_fputc
  6124  1270                     l3409:
  6125                           
  6126                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6127  1270  3001               	movlw	1
  6128  1271  0020               	movlb	0	; select bank0
  6129  1272  07A7               	addwf	pad@i,f
  6130  1273  3000               	movlw	0
  6131  1274  3DA8               	addwfc	pad@i+1,f
  6132  1275                     l3411:
  6133                           
  6134                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6135  1275  0828               	movf	pad@i+1,w
  6136  1276  3A80               	xorlw	128
  6137  1277  00FC               	movwf	??_pad
  6138  1278  082A               	movf	pad@w+1,w
  6139  1279  3A80               	xorlw	128
  6140  127A  027C               	subwf	??_pad,w
  6141  127B  1D03               	skipz
  6142  127C  2A7F               	goto	u4335
  6143  127D  0829               	movf	pad@w,w
  6144  127E  0227               	subwf	pad@i,w
  6145  127F                     u4335:
  6146  127F  1C03               	skipc
  6147  1280  2A82               	goto	u4331
  6148  1281  2A83               	goto	u4330
  6149  1282                     u4331:
  6150  1282  2A64               	goto	l3407
  6151  1283                     u4330:
  6152  1283                     l809:
  6153                           
  6154                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6155  1283  0021               	movlb	1	; select bank1
  6156  1284  1869               	btfsc	_flags^(0+128),0
  6157  1285  2A87               	goto	u4341
  6158  1286  2A88               	goto	u4340
  6159  1287                     u4341:
  6160  1287  2A91               	goto	l3415
  6161  1288                     u4340:
  6162  1288                     l3413:
  6163                           
  6164                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6165  1288  0020               	movlb	0	; select bank0
  6166  1289  082B               	movf	pad@fp,w
  6167  128A  00FC               	movwf	??_pad
  6168  128B  087C               	movf	??_pad,w
  6169  128C  00F8               	movwf	fputs@fp
  6170  128D  0824               	movf	pad@buf,w
  6171  128E  319F  27D7  3192   	fcall	_fputs
  6172  1291                     l3415:
  6173                           
  6174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6175  1291  0020               	movlb	0	; select bank0
  6176  1292  0824               	movf	pad@buf,w
  6177  1293  319F  2719  3192   	fcall	_strlen
  6178  1296  0020               	movlb	0	; select bank0
  6179  1297  0829               	movf	pad@w,w
  6180  1298  0770               	addwf	?_strlen,w
  6181  1299  00A4               	movwf	?_pad
  6182  129A  082A               	movf	pad@w+1,w
  6183  129B  3D71               	addwfc	?_strlen+1,w
  6184  129C  00A5               	movwf	?_pad+1
  6185  129D                     l811:
  6186  129D  0008               	return
  6187  129E                     __end_of_pad:
  6188                           
  6189                           	psect	text10
  6190  1F19                     __ptext10:	
  6191 ;; *************** function _strlen *****************
  6192 ;; Defined at:
  6193 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  s               1    wreg     PTR const unsigned char 
  6196 ;;		 -> dbuf(80), 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  s               1    4[COMMON] PTR const unsigned char 
  6199 ;;		 -> dbuf(80), 
  6200 ;;  a               1    3[COMMON] PTR const unsigned char 
  6201 ;;		 -> dbuf(80), 
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  2    0[COMMON] unsigned int 
  6204 ;; Registers used:
  6205 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;Total ram usage:        5 bytes
  6216 ;; Hardware stack levels used: 1
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_pad
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224  1F19                     _strlen:	
  6225                           ;psect for function _strlen
  6226                           
  6227                           
  6228                           ;incstack = 0
  6229                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6230                           ;strlen@s stored from wreg
  6231  1F19  00F4               	movwf	strlen@s
  6232  1F1A                     l2909:
  6233  1F1A  0874               	movf	strlen@s,w
  6234  1F1B  00F2               	movwf	??_strlen
  6235  1F1C  0872               	movf	??_strlen,w
  6236  1F1D  00F3               	movwf	strlen@a
  6237  1F1E  2F23               	goto	l2913
  6238  1F1F                     l2911:
  6239  1F1F  3001               	movlw	1
  6240  1F20  00F2               	movwf	??_strlen
  6241  1F21  0872               	movf	??_strlen,w
  6242  1F22  07F4               	addwf	strlen@s,f
  6243  1F23                     l2913:
  6244  1F23  0874               	movf	strlen@s,w
  6245  1F24  0086               	movwf	6
  6246  1F25  3001               	movlw	1	; select bank2/3
  6247  1F26  0087               	movwf	7
  6248  1F27  0801               	movf	1,w
  6249  1F28  1D03               	btfss	3,2
  6250  1F29  2F2B               	goto	u3271
  6251  1F2A  2F2C               	goto	u3270
  6252  1F2B                     u3271:
  6253  1F2B  2F1F               	goto	l2911
  6254  1F2C                     u3270:
  6255  1F2C                     l2915:
  6256  1F2C  0873               	movf	strlen@a,w
  6257  1F2D  0274               	subwf	strlen@s,w
  6258  1F2E  00F0               	movwf	?_strlen
  6259  1F2F  01F1               	clrf	?_strlen+1
  6260  1F30  1BF0               	btfsc	?_strlen,7
  6261  1F31  03F1               	decf	?_strlen+1,f
  6262  1F32                     l1037:
  6263  1F32  0008               	return
  6264  1F33                     __end_of_strlen:
  6265                           
  6266                           	psect	text11
  6267  1FD7                     __ptext11:	
  6268 ;; *************** function _fputs *****************
  6269 ;; Defined at:
  6270 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  s               1    wreg     PTR const unsigned char 
  6273 ;;		 -> dbuf(80), 
  6274 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  6275 ;;		 -> sprintf@f(10), 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6278 ;;		 -> dbuf(80), 
  6279 ;;  i               2    1[BANK0 ] int 
  6280 ;;  c               1    0[BANK0 ] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  2    8[COMMON] int 
  6283 ;; Registers used:
  6284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6290 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6291 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6292 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6293 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;Total ram usage:        8 bytes
  6295 ;; Hardware stack levels used: 1
  6296 ;; Hardware stack levels required when called: 2
  6297 ;; This function calls:
  6298 ;;		_fputc
  6299 ;; This function is called by:
  6300 ;;		_pad
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304  1FD7                     _fputs:	
  6305                           ;psect for function _fputs
  6306                           
  6307                           
  6308                           ;incstack = 0
  6309                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6310                           ;fputs@s stored from wreg
  6311  1FD7  0020               	movlb	0	; select bank0
  6312  1FD8  00A3               	movwf	fputs@s
  6313  1FD9                     l2901:
  6314  1FD9  01A1               	clrf	fputs@i
  6315  1FDA  01A2               	clrf	fputs@i+1
  6316  1FDB  2FEF               	goto	l2907
  6317  1FDC                     l2903:
  6318  1FDC  0820               	movf	fputs@c,w
  6319  1FDD  00F9               	movwf	??_fputs
  6320  1FDE  01FA               	clrf	??_fputs+1
  6321  1FDF  0879               	movf	??_fputs,w
  6322  1FE0  00F0               	movwf	fputc@c
  6323  1FE1  087A               	movf	??_fputs+1,w
  6324  1FE2  00F1               	movwf	fputc@c+1
  6325  1FE3  0878               	movf	fputs@fp,w
  6326  1FE4  00FB               	movwf	??_fputs+2
  6327  1FE5  087B               	movf	??_fputs+2,w
  6328  1FE6  00F2               	movwf	fputc@fp
  6329  1FE7  3191  219A  319F   	fcall	_fputc
  6330  1FEA                     l2905:
  6331  1FEA  3001               	movlw	1
  6332  1FEB  0020               	movlb	0	; select bank0
  6333  1FEC  07A1               	addwf	fputs@i,f
  6334  1FED  3000               	movlw	0
  6335  1FEE  3DA2               	addwfc	fputs@i+1,f
  6336  1FEF                     l2907:
  6337  1FEF  0821               	movf	fputs@i,w
  6338  1FF0  0723               	addwf	fputs@s,w
  6339  1FF1  00F9               	movwf	??_fputs
  6340  1FF2  0879               	movf	??_fputs,w
  6341  1FF3  0086               	movwf	6
  6342  1FF4  3001               	movlw	1	; select bank2/3
  6343  1FF5  0087               	movwf	7
  6344  1FF6  0801               	movf	1,w
  6345  1FF7  00FA               	movwf	??_fputs+1
  6346  1FF8  087A               	movf	??_fputs+1,w
  6347  1FF9  00A0               	movwf	fputs@c
  6348  1FFA  0820               	movf	fputs@c,w
  6349  1FFB  1D03               	btfss	3,2
  6350  1FFC  2FFE               	goto	u3261
  6351  1FFD  2FFF               	goto	u3260
  6352  1FFE                     u3261:
  6353  1FFE  2FDC               	goto	l2903
  6354  1FFF                     u3260:
  6355  1FFF                     l1022:
  6356  1FFF  0008               	return
  6357  2000                     __end_of_fputs:
  6358                           
  6359                           	psect	text12
  6360  119A                     __ptext12:	
  6361 ;; *************** function _fputc *****************
  6362 ;; Defined at:
  6363 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  c               2    0[COMMON] int 
  6366 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  6367 ;;		 -> sprintf@f(10), 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;		None
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  2    0[COMMON] int 
  6372 ;; Registers used:
  6373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6379 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6381 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6382 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;Total ram usage:        8 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; Hardware stack levels required when called: 1
  6386 ;; This function calls:
  6387 ;;		_putch
  6388 ;; This function is called by:
  6389 ;;		_pad
  6390 ;;		_vfpfcnvrt
  6391 ;;		_fputs
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395  119A                     _fputc:	
  6396                           ;psect for function _fputc
  6397                           
  6398  119A                     l2677:	
  6399                           ;incstack = 0
  6400                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6401                           
  6402  119A  0872               	movf	fputc@fp,w
  6403  119B  1903               	btfsc	3,2
  6404  119C  299E               	goto	u2761
  6405  119D  299F               	goto	u2760
  6406  119E                     u2761:
  6407  119E  29A4               	goto	l2681
  6408  119F                     u2760:
  6409  119F                     l2679:
  6410  119F  0872               	movf	fputc@fp,w
  6411  11A0  1D03               	btfss	3,2
  6412  11A1  29A3               	goto	u2771
  6413  11A2  29A4               	goto	u2770
  6414  11A3                     u2771:
  6415  11A3  29A9               	goto	l2683
  6416  11A4                     u2770:
  6417  11A4                     l2681:
  6418  11A4  0870               	movf	fputc@c,w
  6419  11A5  3188  2000  3191   	fcall	_putch
  6420  11A8  29EC               	goto	l1014
  6421  11A9                     l2683:
  6422  11A9  0872               	movf	fputc@fp,w
  6423  11AA  3E08               	addlw	8
  6424  11AB  0086               	movwf	6
  6425  11AC  0187               	clrf	7
  6426  11AD  0016               	moviw fsr1++
  6427  11AE  0401               	iorwf	1,w
  6428  11AF  1903               	btfsc	3,2
  6429  11B0  29B2               	goto	u2781
  6430  11B1  29B3               	goto	u2780
  6431  11B2                     u2781:
  6432  11B2  29D1               	goto	l2687
  6433  11B3                     u2780:
  6434  11B3                     l2685:
  6435  11B3  0872               	movf	fputc@fp,w
  6436  11B4  3E08               	addlw	8
  6437  11B5  0086               	movwf	6
  6438  11B6  0187               	clrf	7
  6439  11B7  3F40               	moviw [0]fsr1
  6440  11B8  00F3               	movwf	??_fputc
  6441  11B9  3F41               	moviw [1]fsr1
  6442  11BA  00F4               	movwf	??_fputc+1
  6443  11BB  0872               	movf	fputc@fp,w
  6444  11BC  3E02               	addlw	2
  6445  11BD  0086               	movwf	6
  6446  11BE  0187               	clrf	7
  6447  11BF  3F40               	moviw [0]fsr1
  6448  11C0  00F5               	movwf	??_fputc+2
  6449  11C1  3F41               	moviw [1]fsr1
  6450  11C2  00F6               	movwf	??_fputc+3
  6451  11C3  0876               	movf	??_fputc+3,w
  6452  11C4  3A80               	xorlw	128
  6453  11C5  00F7               	movwf	??_fputc+4
  6454  11C6  0874               	movf	??_fputc+1,w
  6455  11C7  3A80               	xorlw	128
  6456  11C8  0277               	subwf	??_fputc+4,w
  6457  11C9  1D03               	skipz
  6458  11CA  29CD               	goto	u2795
  6459  11CB  0873               	movf	??_fputc,w
  6460  11CC  0275               	subwf	??_fputc+2,w
  6461  11CD                     u2795:
  6462  11CD  1803               	skipnc
  6463  11CE  29D0               	goto	u2791
  6464  11CF  29D1               	goto	u2790
  6465  11D0                     u2791:
  6466  11D0  29EC               	goto	l1014
  6467  11D1                     u2790:
  6468  11D1                     l2687:
  6469  11D1  0870               	movf	fputc@c,w
  6470  11D2  00F3               	movwf	??_fputc
  6471  11D3  0872               	movf	fputc@fp,w
  6472  11D4  0086               	movwf	6
  6473  11D5  0187               	clrf	7
  6474  11D6  0872               	movf	fputc@fp,w
  6475  11D7  3E02               	addlw	2
  6476  11D8  0084               	movwf	4
  6477  11D9  0185               	clrf	5
  6478  11DA  0800               	movf	0,w
  6479  11DB  0701               	addwf	1,w
  6480  11DC  00F4               	movwf	??_fputc+1
  6481  11DD  0874               	movf	??_fputc+1,w
  6482  11DE  0086               	movwf	6
  6483  11DF  3001               	movlw	1	; select bank2/3
  6484  11E0  0087               	movwf	7
  6485  11E1  0873               	movf	??_fputc,w
  6486  11E2  0081               	movwf	1
  6487  11E3                     l2689:
  6488  11E3  0872               	movf	fputc@fp,w
  6489  11E4  3E02               	addlw	2
  6490  11E5  0086               	movwf	6
  6491  11E6  0187               	clrf	7
  6492  11E7  3001               	movlw	1
  6493  11E8  0781               	addwf	1,f
  6494  11E9  3141               	addfsr 1,1
  6495  11EA  1803               	skipnc
  6496  11EB  0A81               	incf	1,f
  6497  11EC                     l1014:
  6498  11EC  0008               	return
  6499  11ED                     __end_of_fputc:
  6500                           
  6501                           	psect	text13
  6502  0800                     __ptext13:	
  6503 ;; *************** function _putch *****************
  6504 ;; Defined at:
  6505 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  c               1    wreg     unsigned char 
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;  c               1    0[COMMON] unsigned char 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      void 
  6512 ;; Registers used:
  6513 ;;		wreg
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;Total ram usage:        0 bytes
  6524 ;; Hardware stack levels used: 1
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		_fputc
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532  0800                     _putch:	
  6533                           ;psect for function _putch
  6534                           
  6535  0800                     l1025:	
  6536                           ;incstack = 0
  6537                           ; Regs used in _putch: [wreg]
  6538                           
  6539  0800  0008               	return
  6540  0801                     __end_of_putch:
  6541                           
  6542                           	psect	text14
  6543  0801                     __ptext14:	
  6544 ;; *************** function _floorf *****************
  6545 ;; Defined at:
  6546 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  x               4   13[BANK0 ] float 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;  u               4   29[BANK0 ] struct .
  6551 ;;  m               4   23[BANK0 ] unsigned long 
  6552 ;;  e               2   27[BANK0 ] int 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  4   13[BANK0 ] float 
  6555 ;; Registers used:
  6556 ;;		wreg, status,2, status,0
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6562 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6563 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6564 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6565 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6566 ;;Total ram usage:       20 bytes
  6567 ;; Hardware stack levels used: 1
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_efgtoa
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575  0801                     _floorf:	
  6576                           ;psect for function _floorf
  6577                           
  6578  0801                     l3457:	
  6579                           ;incstack = 0
  6580                           ; Regs used in _floorf: [wreg+status,2+status,0]
  6581                           
  6582  0801  0022               	movlb	2	; select bank2
  6583  0802  0837               	movf	(floorf@F526+3)^(0+256),w
  6584  0803  0020               	movlb	0	; select bank0
  6585  0804  00C0               	movwf	floorf@u+3
  6586  0805  0022               	movlb	2	; select bank2
  6587  0806  0836               	movf	(floorf@F526+2)^(0+256),w
  6588  0807  0020               	movlb	0	; select bank0
  6589  0808  00BF               	movwf	floorf@u+2
  6590  0809  0022               	movlb	2	; select bank2
  6591  080A  0835               	movf	(floorf@F526+1)^(0+256),w
  6592  080B  0020               	movlb	0	; select bank0
  6593  080C  00BE               	movwf	floorf@u+1
  6594  080D  0022               	movlb	2	; select bank2
  6595  080E  0834               	movf	floorf@F526^(0+256),w
  6596  080F  0020               	movlb	0	; select bank0
  6597  0810  00BD               	movwf	floorf@u
  6598  0811  0830               	movf	floorf@x+3,w
  6599  0812  00C0               	movwf	floorf@u+3
  6600  0813  082F               	movf	floorf@x+2,w
  6601  0814  00BF               	movwf	floorf@u+2
  6602  0815  082E               	movf	floorf@x+1,w
  6603  0816  00BE               	movwf	floorf@u+1
  6604  0817  082D               	movf	floorf@x,w
  6605  0818  00BD               	movwf	floorf@u
  6606  0819                     l3459:
  6607  0819  083D               	movf	floorf@u,w
  6608  081A  00B1               	movwf	??_floorf
  6609  081B  083E               	movf	floorf@u+1,w
  6610  081C  00B2               	movwf	??_floorf+1
  6611  081D  083F               	movf	floorf@u+2,w
  6612  081E  00B3               	movwf	??_floorf+2
  6613  081F  0840               	movf	floorf@u+3,w
  6614  0820  00B4               	movwf	??_floorf+3
  6615  0821  3017               	movlw	23
  6616  0822                     u4455:
  6617  0822  36B4               	lsrf	??_floorf+3,f
  6618  0823  0CB3               	rrf	??_floorf+2,f
  6619  0824  0CB2               	rrf	??_floorf+1,f
  6620  0825  0CB1               	rrf	??_floorf,f
  6621  0826                     u4450:
  6622  0826  0B89               	decfsz	9,f
  6623  0827  2822               	goto	u4455
  6624  0828  30FF               	movlw	255
  6625  0829  0531               	andwf	??_floorf,w
  6626  082A  00B5               	movwf	??_floorf+4
  6627  082B  3000               	movlw	0
  6628  082C  0532               	andwf	??_floorf+1,w
  6629  082D  00B6               	movwf	??_floorf+5
  6630  082E  0835               	movf	??_floorf+4,w
  6631  082F  3E81               	addlw	129
  6632  0830  00BB               	movwf	floorf@e
  6633  0831  30FF               	movlw	255
  6634  0832  3D36               	addwfc	??_floorf+5,w
  6635  0833  00BC               	movwf	floorf@e+1
  6636  0834                     l3461:
  6637  0834  083C               	movf	floorf@e+1,w
  6638  0835  3A80               	xorlw	128
  6639  0836  00B1               	movwf	??_floorf
  6640  0837  3080               	movlw	128
  6641  0838  0231               	subwf	??_floorf,w
  6642  0839  1D03               	skipz
  6643  083A  283D               	goto	u4465
  6644  083B  3017               	movlw	23
  6645  083C  023B               	subwf	floorf@e,w
  6646  083D                     u4465:
  6647  083D  1C03               	skipc
  6648  083E  2840               	goto	u4461
  6649  083F  2841               	goto	u4460
  6650  0840                     u4461:
  6651  0840  2842               	goto	l974
  6652  0841                     u4460:
  6653  0841                     l3463:
  6654  0841  28EB               	goto	l975
  6655  0842                     l974:
  6656  0842  0020               	movlb	0	; select bank0
  6657  0843  1BBC               	btfsc	floorf@e+1,7
  6658  0844  2846               	goto	u4471
  6659  0845  2847               	goto	u4470
  6660  0846                     u4471:
  6661  0846  28A4               	goto	l3477
  6662  0847                     u4470:
  6663  0847                     l3465:
  6664  0847  30FF               	movlw	255
  6665  0848  00B1               	movwf	??_floorf
  6666  0849  30FF               	movlw	255
  6667  084A  00B2               	movwf	??_floorf+1
  6668  084B  307F               	movlw	127
  6669  084C  00B3               	movwf	??_floorf+2
  6670  084D  3000               	movlw	0
  6671  084E  00B4               	movwf	??_floorf+3
  6672  084F  0A3B               	incf	floorf@e,w
  6673  0850  2855               	goto	u4480
  6674  0851                     u4485:
  6675  0851  37B4               	asrf	??_floorf+3,f
  6676  0852  0CB3               	rrf	??_floorf+2,f
  6677  0853  0CB2               	rrf	??_floorf+1,f
  6678  0854  0CB1               	rrf	??_floorf,f
  6679  0855                     u4480:
  6680  0855  0B89               	decfsz	9,f
  6681  0856  2851               	goto	u4485
  6682  0857  0834               	movf	??_floorf+3,w
  6683  0858  00BA               	movwf	floorf@m+3
  6684  0859  0833               	movf	??_floorf+2,w
  6685  085A  00B9               	movwf	floorf@m+2
  6686  085B  0832               	movf	??_floorf+1,w
  6687  085C  00B8               	movwf	floorf@m+1
  6688  085D  0831               	movf	??_floorf,w
  6689  085E  00B7               	movwf	floorf@m
  6690  085F                     l3467:
  6691  085F  083D               	movf	floorf@u,w
  6692  0860  0537               	andwf	floorf@m,w
  6693  0861  00B1               	movwf	??_floorf
  6694  0862  083E               	movf	floorf@u+1,w
  6695  0863  0538               	andwf	floorf@m+1,w
  6696  0864  00B2               	movwf	??_floorf+1
  6697  0865  083F               	movf	floorf@u+2,w
  6698  0866  0539               	andwf	floorf@m+2,w
  6699  0867  00B3               	movwf	??_floorf+2
  6700  0868  0840               	movf	floorf@u+3,w
  6701  0869  053A               	andwf	floorf@m+3,w
  6702  086A  00B4               	movwf	??_floorf+3
  6703  086B  0834               	movf	??_floorf+3,w
  6704  086C  0433               	iorwf	??_floorf+2,w
  6705  086D  0432               	iorwf	??_floorf+1,w
  6706  086E  0431               	iorwf	??_floorf,w
  6707  086F  1D03               	skipz
  6708  0870  2872               	goto	u4491
  6709  0871  2873               	goto	u4490
  6710  0872                     u4491:
  6711  0872  2874               	goto	l3471
  6712  0873                     u4490:
  6713  0873  2841               	goto	l3463
  6714  0874                     l3471:
  6715  0874  083D               	movf	floorf@u,w
  6716  0875  00B1               	movwf	??_floorf
  6717  0876  083E               	movf	floorf@u+1,w
  6718  0877  00B2               	movwf	??_floorf+1
  6719  0878  083F               	movf	floorf@u+2,w
  6720  0879  00B3               	movwf	??_floorf+2
  6721  087A  0840               	movf	floorf@u+3,w
  6722  087B  00B4               	movwf	??_floorf+3
  6723  087C  301F               	movlw	31
  6724  087D                     u4505:
  6725  087D  36B4               	lsrf	??_floorf+3,f
  6726  087E  0CB3               	rrf	??_floorf+2,f
  6727  087F  0CB2               	rrf	??_floorf+1,f
  6728  0880  0CB1               	rrf	??_floorf,f
  6729  0881                     u4500:
  6730  0881  0B89               	decfsz	9,f
  6731  0882  287D               	goto	u4505
  6732  0883  0834               	movf	??_floorf+3,w
  6733  0884  0433               	iorwf	??_floorf+2,w
  6734  0885  0432               	iorwf	??_floorf+1,w
  6735  0886  0431               	iorwf	??_floorf,w
  6736  0887  1903               	skipnz
  6737  0888  288A               	goto	u4511
  6738  0889  288B               	goto	u4510
  6739  088A                     u4511:
  6740  088A  2893               	goto	l3475
  6741  088B                     u4510:
  6742  088B                     l3473:
  6743  088B  0837               	movf	floorf@m,w
  6744  088C  07BD               	addwf	floorf@u,f
  6745  088D  0838               	movf	floorf@m+1,w
  6746  088E  3DBE               	addwfc	floorf@u+1,f
  6747  088F  0839               	movf	floorf@m+2,w
  6748  0890  3DBF               	addwfc	floorf@u+2,f
  6749  0891  083A               	movf	floorf@m+3,w
  6750  0892  3DC0               	addwfc	floorf@u+3,f
  6751  0893                     l3475:
  6752  0893  0937               	comf	floorf@m,w
  6753  0894  00B1               	movwf	??_floorf
  6754  0895  0938               	comf	floorf@m+1,w
  6755  0896  00B2               	movwf	??_floorf+1
  6756  0897  0939               	comf	floorf@m+2,w
  6757  0898  00B3               	movwf	??_floorf+2
  6758  0899  093A               	comf	floorf@m+3,w
  6759  089A  00B4               	movwf	??_floorf+3
  6760  089B  0831               	movf	??_floorf,w
  6761  089C  05BD               	andwf	floorf@u,f
  6762  089D  0832               	movf	??_floorf+1,w
  6763  089E  05BE               	andwf	floorf@u+1,f
  6764  089F  0833               	movf	??_floorf+2,w
  6765  08A0  05BF               	andwf	floorf@u+2,f
  6766  08A1  0834               	movf	??_floorf+3,w
  6767  08A2  05C0               	andwf	floorf@u+3,f
  6768  08A3  28E3               	goto	l979
  6769  08A4                     l3477:
  6770  08A4  083D               	movf	floorf@u,w
  6771  08A5  00B1               	movwf	??_floorf
  6772  08A6  083E               	movf	floorf@u+1,w
  6773  08A7  00B2               	movwf	??_floorf+1
  6774  08A8  083F               	movf	floorf@u+2,w
  6775  08A9  00B3               	movwf	??_floorf+2
  6776  08AA  0840               	movf	floorf@u+3,w
  6777  08AB  00B4               	movwf	??_floorf+3
  6778  08AC  301F               	movlw	31
  6779  08AD                     u4525:
  6780  08AD  36B4               	lsrf	??_floorf+3,f
  6781  08AE  0CB3               	rrf	??_floorf+2,f
  6782  08AF  0CB2               	rrf	??_floorf+1,f
  6783  08B0  0CB1               	rrf	??_floorf,f
  6784  08B1                     u4520:
  6785  08B1  0B89               	decfsz	9,f
  6786  08B2  28AD               	goto	u4525
  6787  08B3  0834               	movf	??_floorf+3,w
  6788  08B4  0433               	iorwf	??_floorf+2,w
  6789  08B5  0432               	iorwf	??_floorf+1,w
  6790  08B6  0431               	iorwf	??_floorf,w
  6791  08B7  1D03               	skipz
  6792  08B8  28BA               	goto	u4531
  6793  08B9  28BB               	goto	u4530
  6794  08BA                     u4531:
  6795  08BA  28C4               	goto	l3481
  6796  08BB                     u4530:
  6797  08BB                     l3479:
  6798  08BB  3000               	movlw	0
  6799  08BC  00C0               	movwf	floorf@u+3
  6800  08BD  3000               	movlw	0
  6801  08BE  00BF               	movwf	floorf@u+2
  6802  08BF  3000               	movlw	0
  6803  08C0  00BE               	movwf	floorf@u+1
  6804  08C1  3000               	movlw	0
  6805  08C2  00BD               	movwf	floorf@u
  6806  08C3  28E3               	goto	l979
  6807  08C4                     l3481:
  6808  08C4  083D               	movf	floorf@u,w
  6809  08C5  00B1               	movwf	??_floorf
  6810  08C6  083E               	movf	floorf@u+1,w
  6811  08C7  00B2               	movwf	??_floorf+1
  6812  08C8  083F               	movf	floorf@u+2,w
  6813  08C9  00B3               	movwf	??_floorf+2
  6814  08CA  0840               	movf	floorf@u+3,w
  6815  08CB  00B4               	movwf	??_floorf+3
  6816  08CC  3001               	movlw	1
  6817  08CD                     u4545:
  6818  08CD  35B1               	lslf	??_floorf,f
  6819  08CE  0DB2               	rlf	??_floorf+1,f
  6820  08CF  0DB3               	rlf	??_floorf+2,f
  6821  08D0  0DB4               	rlf	??_floorf+3,f
  6822  08D1                     u4540:
  6823  08D1  0B89               	decfsz	9,f
  6824  08D2  28CD               	goto	u4545
  6825  08D3  0834               	movf	??_floorf+3,w
  6826  08D4  0433               	iorwf	??_floorf+2,w
  6827  08D5  0432               	iorwf	??_floorf+1,w
  6828  08D6  0431               	iorwf	??_floorf,w
  6829  08D7  1903               	skipnz
  6830  08D8  28DA               	goto	u4551
  6831  08D9  28DB               	goto	u4550
  6832  08DA                     u4551:
  6833  08DA  28E3               	goto	l979
  6834  08DB                     u4550:
  6835  08DB                     l3483:
  6836  08DB  30BF               	movlw	191
  6837  08DC  00C0               	movwf	floorf@u+3
  6838  08DD  3080               	movlw	128
  6839  08DE  00BF               	movwf	floorf@u+2
  6840  08DF  3000               	movlw	0
  6841  08E0  00BE               	movwf	floorf@u+1
  6842  08E1  3000               	movlw	0
  6843  08E2  00BD               	movwf	floorf@u
  6844  08E3                     l979:
  6845  08E3  0840               	movf	floorf@u+3,w
  6846  08E4  00B0               	movwf	?_floorf+3
  6847  08E5  083F               	movf	floorf@u+2,w
  6848  08E6  00AF               	movwf	?_floorf+2
  6849  08E7  083E               	movf	floorf@u+1,w
  6850  08E8  00AE               	movwf	?_floorf+1
  6851  08E9  083D               	movf	floorf@u,w
  6852  08EA  00AD               	movwf	?_floorf
  6853  08EB                     l975:
  6854  08EB  0008               	return
  6855  08EC                     __end_of_floorf:
  6856                           
  6857                           	psect	text15
  6858  13CE                     __ptext15:	
  6859 ;; *************** function ___fpclassifyf *****************
  6860 ;; Defined at:
  6861 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  x               4    0[COMMON] float 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;  u               4    2[BANK0 ] struct .
  6866 ;;  e               2    0[BANK0 ] int 
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  2    0[COMMON] int 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6876 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6877 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6878 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6879 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6880 ;;Total ram usage:       16 bytes
  6881 ;; Hardware stack levels used: 1
  6882 ;; This function calls:
  6883 ;;		Nothing
  6884 ;; This function is called by:
  6885 ;;		_efgtoa
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889  13CE                     ___fpclassifyf:	
  6890                           ;psect for function ___fpclassifyf
  6891                           
  6892  13CE                     l3419:	
  6893                           ;incstack = 0
  6894                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  6895                           
  6896  13CE  0022               	movlb	2	; select bank2
  6897  13CF  083B               	movf	(___fpclassifyf@F465+3)^(0+256),w
  6898  13D0  0020               	movlb	0	; select bank0
  6899  13D1  00A5               	movwf	___fpclassifyf@u+3
  6900  13D2  0022               	movlb	2	; select bank2
  6901  13D3  083A               	movf	(___fpclassifyf@F465+2)^(0+256),w
  6902  13D4  0020               	movlb	0	; select bank0
  6903  13D5  00A4               	movwf	___fpclassifyf@u+2
  6904  13D6  0022               	movlb	2	; select bank2
  6905  13D7  0839               	movf	(___fpclassifyf@F465+1)^(0+256),w
  6906  13D8  0020               	movlb	0	; select bank0
  6907  13D9  00A3               	movwf	___fpclassifyf@u+1
  6908  13DA  0022               	movlb	2	; select bank2
  6909  13DB  0838               	movf	___fpclassifyf@F465^(0+256),w
  6910  13DC  0020               	movlb	0	; select bank0
  6911  13DD  00A2               	movwf	___fpclassifyf@u
  6912  13DE  0873               	movf	___fpclassifyf@x+3,w
  6913  13DF  00A5               	movwf	___fpclassifyf@u+3
  6914  13E0  0872               	movf	___fpclassifyf@x+2,w
  6915  13E1  00A4               	movwf	___fpclassifyf@u+2
  6916  13E2  0871               	movf	___fpclassifyf@x+1,w
  6917  13E3  00A3               	movwf	___fpclassifyf@u+1
  6918  13E4  0870               	movf	___fpclassifyf@x,w
  6919  13E5  00A2               	movwf	___fpclassifyf@u
  6920  13E6                     l3421:
  6921  13E6  0822               	movf	___fpclassifyf@u,w
  6922  13E7  00F4               	movwf	??___fpclassifyf
  6923  13E8  0823               	movf	___fpclassifyf@u+1,w
  6924  13E9  00F5               	movwf	??___fpclassifyf+1
  6925  13EA  0824               	movf	___fpclassifyf@u+2,w
  6926  13EB  00F6               	movwf	??___fpclassifyf+2
  6927  13EC  0825               	movf	___fpclassifyf@u+3,w
  6928  13ED  00F7               	movwf	??___fpclassifyf+3
  6929  13EE  3017               	movlw	23
  6930  13EF                     u4355:
  6931  13EF  36F7               	lsrf	??___fpclassifyf+3,f
  6932  13F0  0CF6               	rrf	??___fpclassifyf+2,f
  6933  13F1  0CF5               	rrf	??___fpclassifyf+1,f
  6934  13F2  0CF4               	rrf	??___fpclassifyf,f
  6935  13F3                     u4350:
  6936  13F3  0B89               	decfsz	9,f
  6937  13F4  2BEF               	goto	u4355
  6938  13F5  30FF               	movlw	255
  6939  13F6  0574               	andwf	??___fpclassifyf,w
  6940  13F7  00A0               	movwf	___fpclassifyf@e
  6941  13F8  3000               	movlw	0
  6942  13F9  0575               	andwf	??___fpclassifyf+1,w
  6943  13FA  00A1               	movwf	___fpclassifyf@e+1
  6944  13FB                     l3423:
  6945  13FB  0820               	movf	___fpclassifyf@e,w
  6946  13FC  0421               	iorwf	___fpclassifyf@e+1,w
  6947  13FD  1D03               	btfss	3,2
  6948  13FE  2C00               	goto	u4361
  6949  13FF  2C01               	goto	u4360
  6950  1400                     u4361:
  6951  1400  2C22               	goto	l3433
  6952  1401                     u4360:
  6953  1401                     l3425:
  6954  1401  0822               	movf	___fpclassifyf@u,w
  6955  1402  00F4               	movwf	??___fpclassifyf
  6956  1403  0823               	movf	___fpclassifyf@u+1,w
  6957  1404  00F5               	movwf	??___fpclassifyf+1
  6958  1405  0824               	movf	___fpclassifyf@u+2,w
  6959  1406  00F6               	movwf	??___fpclassifyf+2
  6960  1407  0825               	movf	___fpclassifyf@u+3,w
  6961  1408  00F7               	movwf	??___fpclassifyf+3
  6962  1409  3001               	movlw	1
  6963  140A                     u4375:
  6964  140A  35F4               	lslf	??___fpclassifyf,f
  6965  140B  0DF5               	rlf	??___fpclassifyf+1,f
  6966  140C  0DF6               	rlf	??___fpclassifyf+2,f
  6967  140D  0DF7               	rlf	??___fpclassifyf+3,f
  6968  140E                     u4370:
  6969  140E  0B89               	decfsz	9,f
  6970  140F  2C0A               	goto	u4375
  6971  1410  0877               	movf	??___fpclassifyf+3,w
  6972  1411  0476               	iorwf	??___fpclassifyf+2,w
  6973  1412  0475               	iorwf	??___fpclassifyf+1,w
  6974  1413  0474               	iorwf	??___fpclassifyf,w
  6975  1414  1D03               	skipz
  6976  1415  2C17               	goto	u4381
  6977  1416  2C18               	goto	u4380
  6978  1417                     u4381:
  6979  1417  2C1D               	goto	l3429
  6980  1418                     u4380:
  6981  1418                     l3427:
  6982  1418  3002               	movlw	2
  6983  1419  00F0               	movwf	?___fpclassifyf
  6984  141A  3000               	movlw	0
  6985  141B  00F1               	movwf	?___fpclassifyf+1
  6986  141C  2C4C               	goto	l943
  6987  141D                     l3429:
  6988  141D  3003               	movlw	3
  6989  141E  00F0               	movwf	?___fpclassifyf
  6990  141F  3000               	movlw	0
  6991  1420  00F1               	movwf	?___fpclassifyf+1
  6992  1421  2C4C               	goto	l943
  6993  1422                     l3433:
  6994  1422  0A20               	incf	___fpclassifyf@e,w
  6995  1423  0421               	iorwf	___fpclassifyf@e+1,w
  6996  1424  1D03               	btfss	3,2
  6997  1425  2C27               	goto	u4391
  6998  1426  2C28               	goto	u4390
  6999  1427                     u4391:
  7000  1427  2C48               	goto	l3439
  7001  1428                     u4390:
  7002  1428                     l3435:
  7003  1428  0822               	movf	___fpclassifyf@u,w
  7004  1429  00F4               	movwf	??___fpclassifyf
  7005  142A  0823               	movf	___fpclassifyf@u+1,w
  7006  142B  00F5               	movwf	??___fpclassifyf+1
  7007  142C  0824               	movf	___fpclassifyf@u+2,w
  7008  142D  00F6               	movwf	??___fpclassifyf+2
  7009  142E  0825               	movf	___fpclassifyf@u+3,w
  7010  142F  00F7               	movwf	??___fpclassifyf+3
  7011  1430  3009               	movlw	9
  7012  1431                     u4405:
  7013  1431  35F4               	lslf	??___fpclassifyf,f
  7014  1432  0DF5               	rlf	??___fpclassifyf+1,f
  7015  1433  0DF6               	rlf	??___fpclassifyf+2,f
  7016  1434  0DF7               	rlf	??___fpclassifyf+3,f
  7017  1435                     u4400:
  7018  1435  0B89               	decfsz	9,f
  7019  1436  2C31               	goto	u4405
  7020  1437  0877               	movf	??___fpclassifyf+3,w
  7021  1438  0476               	iorwf	??___fpclassifyf+2,w
  7022  1439  0475               	iorwf	??___fpclassifyf+1,w
  7023  143A  0474               	iorwf	??___fpclassifyf,w
  7024  143B  1903               	skipnz
  7025  143C  2C3E               	goto	u4411
  7026  143D  2C40               	goto	u4410
  7027  143E                     u4411:
  7028  143E  3001               	movlw	1
  7029  143F  2C41               	goto	u4420
  7030  1440                     u4410:
  7031  1440  3000               	movlw	0
  7032  1441                     u4420:
  7033  1441  00F8               	movwf	??___fpclassifyf+4
  7034  1442  01F9               	clrf	??___fpclassifyf+5
  7035  1443  0878               	movf	??___fpclassifyf+4,w
  7036  1444  00F0               	movwf	?___fpclassifyf
  7037  1445  0879               	movf	??___fpclassifyf+5,w
  7038  1446  00F1               	movwf	?___fpclassifyf+1
  7039  1447  2C4C               	goto	l943
  7040  1448                     l3439:
  7041  1448  3004               	movlw	4
  7042  1449  00F0               	movwf	?___fpclassifyf
  7043  144A  3000               	movlw	0
  7044  144B  00F1               	movwf	?___fpclassifyf+1
  7045  144C                     l943:
  7046  144C  0008               	return
  7047  144D                     __end_of___fpclassifyf:
  7048                           
  7049                           	psect	text16
  7050  135A                     __ptext16:	
  7051 ;; *************** function ___fltol *****************
  7052 ;; Defined at:
  7053 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  f1              4    0[COMMON] int 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  exp1            1   10[COMMON] unsigned char 
  7058 ;;  sign1           1    9[COMMON] unsigned char 
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  4    0[COMMON] long 
  7061 ;; Registers used:
  7062 ;;		wreg, status,2, status,0
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7071 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7072 ;;Total ram usage:       11 bytes
  7073 ;; Hardware stack levels used: 1
  7074 ;; This function calls:
  7075 ;;		Nothing
  7076 ;; This function is called by:
  7077 ;;		_efgtoa
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081  135A                     ___fltol:	
  7082                           ;psect for function ___fltol
  7083                           
  7084  135A                     l3075:	
  7085                           ;incstack = 0
  7086                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7087                           
  7088  135A  1003               	clrc
  7089  135B  0D72               	rlf	___fltol@f1+2,w
  7090  135C  0D73               	rlf	___fltol@f1+3,w
  7091  135D  00F4               	movwf	??___fltol
  7092  135E  0874               	movf	??___fltol,w
  7093  135F  00FA               	movwf	___fltol@exp1
  7094  1360  087A               	movf	___fltol@exp1,w
  7095  1361  1D03               	btfss	3,2
  7096  1362  2B64               	goto	u3661
  7097  1363  2B65               	goto	u3660
  7098  1364                     u3661:
  7099  1364  2B6E               	goto	l3081
  7100  1365                     u3660:
  7101  1365                     l3077:
  7102  1365  3000               	movlw	0
  7103  1366  00F3               	movwf	?___fltol+3
  7104  1367  3000               	movlw	0
  7105  1368  00F2               	movwf	?___fltol+2
  7106  1369  3000               	movlw	0
  7107  136A  00F1               	movwf	?___fltol+1
  7108  136B  3000               	movlw	0
  7109  136C  00F0               	movwf	?___fltol
  7110  136D  2BCD               	goto	l496
  7111  136E                     l3081:
  7112  136E  0870               	movf	___fltol@f1,w
  7113  136F  00F4               	movwf	??___fltol
  7114  1370  0871               	movf	___fltol@f1+1,w
  7115  1371  00F5               	movwf	??___fltol+1
  7116  1372  0872               	movf	___fltol@f1+2,w
  7117  1373  00F6               	movwf	??___fltol+2
  7118  1374  0873               	movf	___fltol@f1+3,w
  7119  1375  00F7               	movwf	??___fltol+3
  7120  1376  301F               	movlw	31
  7121  1377                     u3675:
  7122  1377  36F7               	lsrf	??___fltol+3,f
  7123  1378  0CF6               	rrf	??___fltol+2,f
  7124  1379  0CF5               	rrf	??___fltol+1,f
  7125  137A  0CF4               	rrf	??___fltol,f
  7126  137B                     u3670:
  7127  137B  0B89               	decfsz	9,f
  7128  137C  2B77               	goto	u3675
  7129  137D  0874               	movf	??___fltol,w
  7130  137E  00F8               	movwf	??___fltol+4
  7131  137F  0878               	movf	??___fltol+4,w
  7132  1380  00F9               	movwf	___fltol@sign1
  7133  1381                     l3083:
  7134  1381  17F2               	bsf	___fltol@f1+2,7
  7135  1382                     l3085:
  7136  1382  30FF               	movlw	255
  7137  1383  05F0               	andwf	___fltol@f1,f
  7138  1384  30FF               	movlw	255
  7139  1385  05F1               	andwf	___fltol@f1+1,f
  7140  1386  30FF               	movlw	255
  7141  1387  05F2               	andwf	___fltol@f1+2,f
  7142  1388  3000               	movlw	0
  7143  1389  05F3               	andwf	___fltol@f1+3,f
  7144  138A                     l3087:
  7145  138A  3096               	movlw	150
  7146  138B  02FA               	subwf	___fltol@exp1,f
  7147  138C                     l3089:
  7148  138C  1FFA               	btfss	___fltol@exp1,7
  7149  138D  2B8F               	goto	u3681
  7150  138E  2B90               	goto	u3680
  7151  138F                     u3681:
  7152  138F  2BA8               	goto	l3099
  7153  1390                     u3680:
  7154  1390                     l3091:
  7155  1390  087A               	movf	___fltol@exp1,w
  7156  1391  3A80               	xorlw	128
  7157  1392  3E97               	addlw	151
  7158  1393  1803               	skipnc
  7159  1394  2B96               	goto	u3691
  7160  1395  2B97               	goto	u3690
  7161  1396                     u3691:
  7162  1396  2B98               	goto	l3097
  7163  1397                     u3690:
  7164  1397  2B65               	goto	l3077
  7165  1398                     l3097:
  7166  1398  3001               	movlw	1
  7167  1399                     u3705:
  7168  1399  36F3               	lsrf	___fltol@f1+3,f
  7169  139A  0CF2               	rrf	___fltol@f1+2,f
  7170  139B  0CF1               	rrf	___fltol@f1+1,f
  7171  139C  0CF0               	rrf	___fltol@f1,f
  7172  139D  0B89               	decfsz	9,f
  7173  139E  2B99               	goto	u3705
  7174  139F  3001               	movlw	1
  7175  13A0  00F4               	movwf	??___fltol
  7176  13A1  0874               	movf	??___fltol,w
  7177  13A2  07FA               	addwf	___fltol@exp1,f
  7178  13A3  1D03               	btfss	3,2
  7179  13A4  2BA6               	goto	u3711
  7180  13A5  2BA7               	goto	u3710
  7181  13A6                     u3711:
  7182  13A6  2B98               	goto	l3097
  7183  13A7                     u3710:
  7184  13A7  2BBD               	goto	l3107
  7185  13A8                     l3099:
  7186  13A8  3020               	movlw	32
  7187  13A9  027A               	subwf	___fltol@exp1,w
  7188  13AA  1C03               	skipc
  7189  13AB  2BAD               	goto	u3721
  7190  13AC  2BAE               	goto	u3720
  7191  13AD                     u3721:
  7192  13AD  2BB8               	goto	l503
  7193  13AE                     u3720:
  7194  13AE  2B65               	goto	l3077
  7195  13AF                     l3105:
  7196  13AF  3001               	movlw	1
  7197  13B0                     u3735:
  7198  13B0  35F0               	lslf	___fltol@f1,f
  7199  13B1  0DF1               	rlf	___fltol@f1+1,f
  7200  13B2  0DF2               	rlf	___fltol@f1+2,f
  7201  13B3  0DF3               	rlf	___fltol@f1+3,f
  7202  13B4  0B89               	decfsz	9,f
  7203  13B5  2BB0               	goto	u3735
  7204  13B6  3001               	movlw	1
  7205  13B7  02FA               	subwf	___fltol@exp1,f
  7206  13B8                     l503:
  7207  13B8  087A               	movf	___fltol@exp1,w
  7208  13B9  1D03               	btfss	3,2
  7209  13BA  2BBC               	goto	u3741
  7210  13BB  2BBD               	goto	u3740
  7211  13BC                     u3741:
  7212  13BC  2BAF               	goto	l3105
  7213  13BD                     u3740:
  7214  13BD                     l3107:
  7215  13BD  0879               	movf	___fltol@sign1,w
  7216  13BE  1903               	btfsc	3,2
  7217  13BF  2BC1               	goto	u3751
  7218  13C0  2BC2               	goto	u3750
  7219  13C1                     u3751:
  7220  13C1  2BCD               	goto	l506
  7221  13C2                     u3750:
  7222  13C2                     l3109:
  7223  13C2  09F0               	comf	___fltol@f1,f
  7224  13C3  09F1               	comf	___fltol@f1+1,f
  7225  13C4  09F2               	comf	___fltol@f1+2,f
  7226  13C5  09F3               	comf	___fltol@f1+3,f
  7227  13C6  0AF0               	incf	___fltol@f1,f
  7228  13C7  1903               	skipnz
  7229  13C8  0AF1               	incf	___fltol@f1+1,f
  7230  13C9  1903               	skipnz
  7231  13CA  0AF2               	incf	___fltol@f1+2,f
  7232  13CB  1903               	skipnz
  7233  13CC  0AF3               	incf	___fltol@f1+3,f
  7234  13CD                     l506:
  7235  13CD                     l496:
  7236  13CD  0008               	return
  7237  13CE                     __end_of___fltol:
  7238                           
  7239                           	psect	text17
  7240  1F52                     __ptext17:	
  7241 ;; *************** function ___flsub *****************
  7242 ;; Defined at:
  7243 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  a               4   26[BANK0 ] long 
  7246 ;;  b               4   30[BANK0 ] long 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;		None
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  4   26[BANK0 ] long 
  7251 ;; Registers used:
  7252 ;;		wreg, status,2, status,0, pclath, cstack
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7258 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7261 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7262 ;;Total ram usage:        8 bytes
  7263 ;; Hardware stack levels used: 1
  7264 ;; Hardware stack levels required when called: 1
  7265 ;; This function calls:
  7266 ;;		___fladd
  7267 ;; This function is called by:
  7268 ;;		_efgtoa
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272  1F52                     ___flsub:	
  7273                           ;psect for function ___flsub
  7274                           
  7275  1F52                     l3111:	
  7276                           ;incstack = 0
  7277                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  7278                           
  7279  1F52  3080               	movlw	128
  7280  1F53  0020               	movlb	0	; select bank0
  7281  1F54  06BD               	xorwf	___flsub@a+3,f
  7282  1F55                     l3113:
  7283  1F55  0841               	movf	___flsub@b+3,w
  7284  1F56  00F3               	movwf	___fladd@b+3
  7285  1F57  0840               	movf	___flsub@b+2,w
  7286  1F58  00F2               	movwf	___fladd@b+2
  7287  1F59  083F               	movf	___flsub@b+1,w
  7288  1F5A  00F1               	movwf	___fladd@b+1
  7289  1F5B  083E               	movf	___flsub@b,w
  7290  1F5C  00F0               	movwf	___fladd@b
  7291  1F5D  083D               	movf	___flsub@a+3,w
  7292  1F5E  00F7               	movwf	___fladd@a+3
  7293  1F5F  083C               	movf	___flsub@a+2,w
  7294  1F60  00F6               	movwf	___fladd@a+2
  7295  1F61  083B               	movf	___flsub@a+1,w
  7296  1F62  00F5               	movwf	___fladd@a+1
  7297  1F63  083A               	movf	___flsub@a,w
  7298  1F64  00F4               	movwf	___fladd@a
  7299  1F65  3188  20EC  319F   	fcall	___fladd
  7300  1F68  0873               	movf	?___fladd+3,w
  7301  1F69  0020               	movlb	0	; select bank0
  7302  1F6A  00BD               	movwf	?___flsub+3
  7303  1F6B  0872               	movf	?___fladd+2,w
  7304  1F6C  00BC               	movwf	?___flsub+2
  7305  1F6D  0871               	movf	?___fladd+1,w
  7306  1F6E  00BB               	movwf	?___flsub+1
  7307  1F6F  0870               	movf	?___fladd,w
  7308  1F70  00BA               	movwf	?___flsub
  7309  1F71                     l649:
  7310  1F71  0008               	return
  7311  1F72                     __end_of___flsub:
  7312                           
  7313                           	psect	text18
  7314  08EC                     __ptext18:	
  7315 ;; *************** function ___fladd *****************
  7316 ;; Defined at:
  7317 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  b               4    0[COMMON] long 
  7320 ;;  a               4    4[COMMON] long 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  grs             1   11[COMMON] unsigned char 
  7323 ;;  bexp            1   10[COMMON] unsigned char 
  7324 ;;  aexp            1    9[COMMON] unsigned char 
  7325 ;;  signs           1    8[COMMON] unsigned char 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  4    0[COMMON] unsigned char 
  7328 ;; Registers used:
  7329 ;;		wreg, status,2, status,0
  7330 ;; Tracked objects:
  7331 ;;		On entry : 0/0
  7332 ;;		On exit  : 0/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7335 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;Total ram usage:       20 bytes
  7340 ;; Hardware stack levels used: 1
  7341 ;; This function calls:
  7342 ;;		Nothing
  7343 ;; This function is called by:
  7344 ;;		___flsub
  7345 ;;		_efgtoa
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349  08EC                     ___fladd:	
  7350                           ;psect for function ___fladd
  7351                           
  7352  08EC                     l2693:	
  7353                           ;incstack = 0
  7354                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  7355                           
  7356  08EC  0873               	movf	___fladd@b+3,w
  7357  08ED  3980               	andlw	128
  7358  08EE  0020               	movlb	0	; select bank0
  7359  08EF  00A0               	movwf	??___fladd
  7360  08F0  0820               	movf	??___fladd,w
  7361  08F1  00F8               	movwf	___fladd@signs
  7362  08F2                     l2695:
  7363  08F2  3573               	lslf	___fladd@b+3,w
  7364  08F3  00A0               	movwf	??___fladd
  7365  08F4  0820               	movf	??___fladd,w
  7366  08F5  00FA               	movwf	___fladd@bexp
  7367  08F6                     l2697:
  7368  08F6  1FF2               	btfss	___fladd@b+2,7
  7369  08F7  28F9               	goto	u2801
  7370  08F8  28FA               	goto	u2800
  7371  08F9                     u2801:
  7372  08F9  28FB               	goto	l2701
  7373  08FA                     u2800:
  7374  08FA                     l2699:
  7375  08FA  147A               	bsf	___fladd@bexp,0
  7376  08FB                     l2701:
  7377  08FB  087A               	movf	___fladd@bexp,w
  7378  08FC  1903               	btfsc	3,2
  7379  08FD  28FF               	goto	u2811
  7380  08FE  2900               	goto	u2810
  7381  08FF                     u2811:
  7382  08FF  2910               	goto	l2711
  7383  0900                     u2810:
  7384  0900                     l2703:
  7385  0900  0A7A               	incf	___fladd@bexp,w
  7386  0901  1D03               	btfss	3,2
  7387  0902  2904               	goto	u2821
  7388  0903  2905               	goto	u2820
  7389  0904                     u2821:
  7390  0904  290D               	goto	l2707
  7391  0905                     u2820:
  7392  0905                     l2705:
  7393  0905  3000               	movlw	0
  7394  0906  00F3               	movwf	___fladd@b+3
  7395  0907  3000               	movlw	0
  7396  0908  00F2               	movwf	___fladd@b+2
  7397  0909  3000               	movlw	0
  7398  090A  00F1               	movwf	___fladd@b+1
  7399  090B  3000               	movlw	0
  7400  090C  00F0               	movwf	___fladd@b
  7401  090D                     l2707:
  7402  090D  17F2               	bsf	___fladd@b+2,7
  7403  090E                     l2709:
  7404  090E  01F3               	clrf	___fladd@b+3
  7405  090F  2918               	goto	l2713
  7406  0910                     l2711:
  7407  0910  3000               	movlw	0
  7408  0911  00F3               	movwf	___fladd@b+3
  7409  0912  3000               	movlw	0
  7410  0913  00F2               	movwf	___fladd@b+2
  7411  0914  3000               	movlw	0
  7412  0915  00F1               	movwf	___fladd@b+1
  7413  0916  3000               	movlw	0
  7414  0917  00F0               	movwf	___fladd@b
  7415  0918                     l2713:
  7416  0918  0877               	movf	___fladd@a+3,w
  7417  0919  3980               	andlw	128
  7418  091A  00A0               	movwf	??___fladd
  7419  091B  0820               	movf	??___fladd,w
  7420  091C  00F9               	movwf	___fladd@aexp
  7421  091D                     l2715:
  7422  091D  0879               	movf	___fladd@aexp,w
  7423  091E  0678               	xorwf	___fladd@signs,w
  7424  091F  1903               	skipnz
  7425  0920  2922               	goto	u2831
  7426  0921  2923               	goto	u2830
  7427  0922                     u2831:
  7428  0922  2924               	goto	l2719
  7429  0923                     u2830:
  7430  0923                     l2717:
  7431  0923  1778               	bsf	___fladd@signs,6
  7432  0924                     l2719:
  7433  0924  3577               	lslf	___fladd@a+3,w
  7434  0925  00A0               	movwf	??___fladd
  7435  0926  0820               	movf	??___fladd,w
  7436  0927  00F9               	movwf	___fladd@aexp
  7437  0928                     l2721:
  7438  0928  1FF6               	btfss	___fladd@a+2,7
  7439  0929  292B               	goto	u2841
  7440  092A  292C               	goto	u2840
  7441  092B                     u2841:
  7442  092B  292D               	goto	l2725
  7443  092C                     u2840:
  7444  092C                     l2723:
  7445  092C  1479               	bsf	___fladd@aexp,0
  7446  092D                     l2725:
  7447  092D  0879               	movf	___fladd@aexp,w
  7448  092E  1903               	btfsc	3,2
  7449  092F  2931               	goto	u2851
  7450  0930  2932               	goto	u2850
  7451  0931                     u2851:
  7452  0931  2942               	goto	l2735
  7453  0932                     u2850:
  7454  0932                     l2727:
  7455  0932  0A79               	incf	___fladd@aexp,w
  7456  0933  1D03               	btfss	3,2
  7457  0934  2936               	goto	u2861
  7458  0935  2937               	goto	u2860
  7459  0936                     u2861:
  7460  0936  293F               	goto	l2731
  7461  0937                     u2860:
  7462  0937                     l2729:
  7463  0937  3000               	movlw	0
  7464  0938  00F7               	movwf	___fladd@a+3
  7465  0939  3000               	movlw	0
  7466  093A  00F6               	movwf	___fladd@a+2
  7467  093B  3000               	movlw	0
  7468  093C  00F5               	movwf	___fladd@a+1
  7469  093D  3000               	movlw	0
  7470  093E  00F4               	movwf	___fladd@a
  7471  093F                     l2731:
  7472  093F  17F6               	bsf	___fladd@a+2,7
  7473  0940                     l2733:
  7474  0940  01F7               	clrf	___fladd@a+3
  7475  0941  294A               	goto	l603
  7476  0942                     l2735:
  7477  0942  3000               	movlw	0
  7478  0943  00F7               	movwf	___fladd@a+3
  7479  0944  3000               	movlw	0
  7480  0945  00F6               	movwf	___fladd@a+2
  7481  0946  3000               	movlw	0
  7482  0947  00F5               	movwf	___fladd@a+1
  7483  0948  3000               	movlw	0
  7484  0949  00F4               	movwf	___fladd@a
  7485  094A                     l603:
  7486  094A  087A               	movf	___fladd@bexp,w
  7487  094B  0279               	subwf	___fladd@aexp,w
  7488  094C  1803               	skipnc
  7489  094D  294F               	goto	u2871
  7490  094E  2950               	goto	u2870
  7491  094F                     u2871:
  7492  094F  2994               	goto	l2771
  7493  0950                     u2870:
  7494  0950                     l2737:
  7495  0950  1F78               	btfss	___fladd@signs,6
  7496  0951  2953               	goto	u2881
  7497  0952  2954               	goto	u2880
  7498  0953                     u2881:
  7499  0953  2958               	goto	l2741
  7500  0954                     u2880:
  7501  0954                     l2739:
  7502  0954  3080               	movlw	128
  7503  0955  00A0               	movwf	??___fladd
  7504  0956  0820               	movf	??___fladd,w
  7505  0957  06F8               	xorwf	___fladd@signs,f
  7506  0958                     l2741:
  7507  0958  087A               	movf	___fladd@bexp,w
  7508  0959  00A0               	movwf	??___fladd
  7509  095A  0820               	movf	??___fladd,w
  7510  095B  00FB               	movwf	___fladd@grs
  7511  095C                     l2743:
  7512  095C  0879               	movf	___fladd@aexp,w
  7513  095D  00A0               	movwf	??___fladd
  7514  095E  0820               	movf	??___fladd,w
  7515  095F  00FA               	movwf	___fladd@bexp
  7516  0960                     l2745:
  7517  0960  087B               	movf	___fladd@grs,w
  7518  0961  00A0               	movwf	??___fladd
  7519  0962  0820               	movf	??___fladd,w
  7520  0963  00F9               	movwf	___fladd@aexp
  7521  0964                     l2747:
  7522  0964  0870               	movf	___fladd@b,w
  7523  0965  00A0               	movwf	??___fladd
  7524  0966  0820               	movf	??___fladd,w
  7525  0967  00FB               	movwf	___fladd@grs
  7526  0968                     l2749:
  7527  0968  0874               	movf	___fladd@a,w
  7528  0969  00A0               	movwf	??___fladd
  7529  096A  0820               	movf	??___fladd,w
  7530  096B  00F0               	movwf	___fladd@b
  7531  096C                     l2751:
  7532  096C  087B               	movf	___fladd@grs,w
  7533  096D  00A0               	movwf	??___fladd
  7534  096E  0820               	movf	??___fladd,w
  7535  096F  00F4               	movwf	___fladd@a
  7536  0970                     l2753:
  7537  0970  0871               	movf	___fladd@b+1,w
  7538  0971  00A0               	movwf	??___fladd
  7539  0972  0820               	movf	??___fladd,w
  7540  0973  00FB               	movwf	___fladd@grs
  7541  0974                     l2755:
  7542  0974  0875               	movf	___fladd@a+1,w
  7543  0975  00A0               	movwf	??___fladd
  7544  0976  0820               	movf	??___fladd,w
  7545  0977  00F1               	movwf	___fladd@b+1
  7546  0978                     l2757:
  7547  0978  087B               	movf	___fladd@grs,w
  7548  0979  00A0               	movwf	??___fladd
  7549  097A  0820               	movf	??___fladd,w
  7550  097B  00F5               	movwf	___fladd@a+1
  7551  097C                     l2759:
  7552  097C  0872               	movf	___fladd@b+2,w
  7553  097D  00A0               	movwf	??___fladd
  7554  097E  0820               	movf	??___fladd,w
  7555  097F  00FB               	movwf	___fladd@grs
  7556  0980                     l2761:
  7557  0980  0876               	movf	___fladd@a+2,w
  7558  0981  00A0               	movwf	??___fladd
  7559  0982  0820               	movf	??___fladd,w
  7560  0983  00F2               	movwf	___fladd@b+2
  7561  0984                     l2763:
  7562  0984  087B               	movf	___fladd@grs,w
  7563  0985  00A0               	movwf	??___fladd
  7564  0986  0820               	movf	??___fladd,w
  7565  0987  00F6               	movwf	___fladd@a+2
  7566  0988                     l2765:
  7567  0988  0873               	movf	___fladd@b+3,w
  7568  0989  00A0               	movwf	??___fladd
  7569  098A  0820               	movf	??___fladd,w
  7570  098B  00FB               	movwf	___fladd@grs
  7571  098C                     l2767:
  7572  098C  0877               	movf	___fladd@a+3,w
  7573  098D  00A0               	movwf	??___fladd
  7574  098E  0820               	movf	??___fladd,w
  7575  098F  00F3               	movwf	___fladd@b+3
  7576  0990                     l2769:
  7577  0990  087B               	movf	___fladd@grs,w
  7578  0991  00A0               	movwf	??___fladd
  7579  0992  0820               	movf	??___fladd,w
  7580  0993  00F7               	movwf	___fladd@a+3
  7581  0994                     l2771:
  7582  0994  01FB               	clrf	___fladd@grs
  7583  0995                     l2773:
  7584  0995  0879               	movf	___fladd@aexp,w
  7585  0996  00A0               	movwf	??___fladd
  7586  0997  01A1               	clrf	??___fladd+1
  7587  0998  0821               	movf	??___fladd+1,w
  7588  0999  00A3               	movwf	??___fladd+3
  7589  099A  087A               	movf	___fladd@bexp,w
  7590  099B  0220               	subwf	??___fladd,w
  7591  099C  00A2               	movwf	??___fladd+2
  7592  099D  1C03               	skipc
  7593  099E  03A3               	decf	??___fladd+3,f
  7594  099F  0823               	movf	??___fladd+3,w
  7595  09A0  3A80               	xorlw	128
  7596  09A1  00A4               	movwf	??___fladd+4
  7597  09A2  3080               	movlw	128
  7598  09A3  0224               	subwf	??___fladd+4,w
  7599  09A4  1D03               	skipz
  7600  09A5  29A8               	goto	u2895
  7601  09A6  301A               	movlw	26
  7602  09A7  0222               	subwf	??___fladd+2,w
  7603  09A8                     u2895:
  7604  09A8  1C03               	skipc
  7605  09A9  29AB               	goto	u2891
  7606  09AA  29AC               	goto	u2890
  7607  09AB                     u2891:
  7608  09AB  29E6               	goto	l2789
  7609  09AC                     u2890:
  7610  09AC                     l2775:
  7611  09AC  0873               	movf	___fladd@b+3,w
  7612  09AD  0472               	iorwf	___fladd@b+2,w
  7613  09AE  0471               	iorwf	___fladd@b+1,w
  7614  09AF  0470               	iorwf	___fladd@b,w
  7615  09B0  1D03               	skipz
  7616  09B1  29B3               	goto	u2901
  7617  09B2  29B5               	goto	u2900
  7618  09B3                     u2901:
  7619  09B3  3001               	movlw	1
  7620  09B4  29B6               	goto	u2910
  7621  09B5                     u2900:
  7622  09B5  3000               	movlw	0
  7623  09B6                     u2910:
  7624  09B6  0020               	movlb	0	; select bank0
  7625  09B7  00A0               	movwf	??___fladd
  7626  09B8  0820               	movf	??___fladd,w
  7627  09B9  00FB               	movwf	___fladd@grs
  7628  09BA  3000               	movlw	0
  7629  09BB  00F3               	movwf	___fladd@b+3
  7630  09BC  3000               	movlw	0
  7631  09BD  00F2               	movwf	___fladd@b+2
  7632  09BE  3000               	movlw	0
  7633  09BF  00F1               	movwf	___fladd@b+1
  7634  09C0  3000               	movlw	0
  7635  09C1  00F0               	movwf	___fladd@b
  7636  09C2  0879               	movf	___fladd@aexp,w
  7637  09C3  00A0               	movwf	??___fladd
  7638  09C4  0820               	movf	??___fladd,w
  7639  09C5  00FA               	movwf	___fladd@bexp
  7640  09C6  29EC               	goto	l607
  7641  09C7                     l609:
  7642  09C7  1C7B               	btfss	___fladd@grs,0
  7643  09C8  29CA               	goto	u2921
  7644  09C9  29CB               	goto	u2920
  7645  09CA                     u2921:
  7646  09CA  29D2               	goto	l2779
  7647  09CB                     u2920:
  7648  09CB                     l2777:
  7649  09CB  367B               	lsrf	___fladd@grs,w
  7650  09CC  3801               	iorlw	1
  7651  09CD  0020               	movlb	0	; select bank0
  7652  09CE  00A0               	movwf	??___fladd
  7653  09CF  0820               	movf	??___fladd,w
  7654  09D0  00FB               	movwf	___fladd@grs
  7655  09D1  29D4               	goto	l2781
  7656  09D2                     l2779:
  7657  09D2  1003               	clrc
  7658  09D3  0CFB               	rrf	___fladd@grs,f
  7659  09D4                     l2781:
  7660  09D4  1C70               	btfss	___fladd@b,0
  7661  09D5  29D7               	goto	u2931
  7662  09D6  29D8               	goto	u2930
  7663  09D7                     u2931:
  7664  09D7  29D9               	goto	l2785
  7665  09D8                     u2930:
  7666  09D8                     l2783:
  7667  09D8  17FB               	bsf	___fladd@grs,7
  7668  09D9                     l2785:
  7669  09D9  3001               	movlw	1
  7670  09DA  0020               	movlb	0	; select bank0
  7671  09DB  00A0               	movwf	??___fladd
  7672  09DC                     u2945:
  7673  09DC  37F3               	asrf	___fladd@b+3,f
  7674  09DD  0CF2               	rrf	___fladd@b+2,f
  7675  09DE  0CF1               	rrf	___fladd@b+1,f
  7676  09DF  0CF0               	rrf	___fladd@b,f
  7677  09E0  0BA0               	decfsz	??___fladd& (0+127),f
  7678  09E1  29DC               	goto	u2945
  7679  09E2                     l2787:
  7680  09E2  3001               	movlw	1
  7681  09E3  00A0               	movwf	??___fladd
  7682  09E4  0820               	movf	??___fladd,w
  7683  09E5  07FA               	addwf	___fladd@bexp,f
  7684  09E6                     l2789:
  7685  09E6  0879               	movf	___fladd@aexp,w
  7686  09E7  027A               	subwf	___fladd@bexp,w
  7687  09E8  1C03               	skipc
  7688  09E9  29EB               	goto	u2951
  7689  09EA  29EC               	goto	u2950
  7690  09EB                     u2951:
  7691  09EB  29C7               	goto	l609
  7692  09EC                     u2950:
  7693  09EC                     l607:
  7694  09EC  1B78               	btfsc	___fladd@signs,6
  7695  09ED  29EF               	goto	u2961
  7696  09EE  29F0               	goto	u2960
  7697  09EF                     u2961:
  7698  09EF  2A2A               	goto	l2815
  7699  09F0                     u2960:
  7700  09F0                     l2791:
  7701  09F0  087A               	movf	___fladd@bexp,w
  7702  09F1  1D03               	btfss	3,2
  7703  09F2  29F4               	goto	u2971
  7704  09F3  29F5               	goto	u2970
  7705  09F4                     u2971:
  7706  09F4  29FE               	goto	l2797
  7707  09F5                     u2970:
  7708  09F5                     l2793:
  7709  09F5  3000               	movlw	0
  7710  09F6  00F3               	movwf	?___fladd+3
  7711  09F7  3000               	movlw	0
  7712  09F8  00F2               	movwf	?___fladd+2
  7713  09F9  3000               	movlw	0
  7714  09FA  00F1               	movwf	?___fladd+1
  7715  09FB  3000               	movlw	0
  7716  09FC  00F0               	movwf	?___fladd
  7717  09FD  2B2A               	goto	l616
  7718  09FE                     l2797:
  7719  09FE  0874               	movf	___fladd@a,w
  7720  09FF  07F0               	addwf	___fladd@b,f
  7721  0A00  0875               	movf	___fladd@a+1,w
  7722  0A01  3DF1               	addwfc	___fladd@b+1,f
  7723  0A02  0876               	movf	___fladd@a+2,w
  7724  0A03  3DF2               	addwfc	___fladd@b+2,f
  7725  0A04  0877               	movf	___fladd@a+3,w
  7726  0A05  3DF3               	addwfc	___fladd@b+3,f
  7727  0A06                     l2799:
  7728  0A06  1C73               	btfss	___fladd@b+3,0
  7729  0A07  2A09               	goto	u2981
  7730  0A08  2A0A               	goto	u2980
  7731  0A09                     u2981:
  7732  0A09  2AB7               	goto	l2849
  7733  0A0A                     u2980:
  7734  0A0A                     l2801:
  7735  0A0A  1C7B               	btfss	___fladd@grs,0
  7736  0A0B  2A0D               	goto	u2991
  7737  0A0C  2A0E               	goto	u2990
  7738  0A0D                     u2991:
  7739  0A0D  2A15               	goto	l2805
  7740  0A0E                     u2990:
  7741  0A0E                     l2803:
  7742  0A0E  367B               	lsrf	___fladd@grs,w
  7743  0A0F  3801               	iorlw	1
  7744  0A10  0020               	movlb	0	; select bank0
  7745  0A11  00A0               	movwf	??___fladd
  7746  0A12  0820               	movf	??___fladd,w
  7747  0A13  00FB               	movwf	___fladd@grs
  7748  0A14  2A17               	goto	l2807
  7749  0A15                     l2805:
  7750  0A15  1003               	clrc
  7751  0A16  0CFB               	rrf	___fladd@grs,f
  7752  0A17                     l2807:
  7753  0A17  1C70               	btfss	___fladd@b,0
  7754  0A18  2A1A               	goto	u3001
  7755  0A19  2A1B               	goto	u3000
  7756  0A1A                     u3001:
  7757  0A1A  2A1C               	goto	l2811
  7758  0A1B                     u3000:
  7759  0A1B                     l2809:
  7760  0A1B  17FB               	bsf	___fladd@grs,7
  7761  0A1C                     l2811:
  7762  0A1C  3001               	movlw	1
  7763  0A1D  0020               	movlb	0	; select bank0
  7764  0A1E  00A0               	movwf	??___fladd
  7765  0A1F                     u3015:
  7766  0A1F  37F3               	asrf	___fladd@b+3,f
  7767  0A20  0CF2               	rrf	___fladd@b+2,f
  7768  0A21  0CF1               	rrf	___fladd@b+1,f
  7769  0A22  0CF0               	rrf	___fladd@b,f
  7770  0A23  0BA0               	decfsz	??___fladd& (0+127),f
  7771  0A24  2A1F               	goto	u3015
  7772  0A25                     l2813:
  7773  0A25  3001               	movlw	1
  7774  0A26  00A0               	movwf	??___fladd
  7775  0A27  0820               	movf	??___fladd,w
  7776  0A28  07FA               	addwf	___fladd@bexp,f
  7777  0A29  2AB7               	goto	l2849
  7778  0A2A                     l2815:
  7779  0A2A  0873               	movf	___fladd@b+3,w
  7780  0A2B  3A80               	xorlw	128
  7781  0A2C  0020               	movlb	0	; select bank0
  7782  0A2D  00A0               	movwf	??___fladd
  7783  0A2E  0877               	movf	___fladd@a+3,w
  7784  0A2F  3A80               	xorlw	128
  7785  0A30  0220               	subwf	??___fladd,w
  7786  0A31  1D03               	skipz
  7787  0A32  2A3D               	goto	u3023
  7788  0A33  0876               	movf	___fladd@a+2,w
  7789  0A34  0272               	subwf	___fladd@b+2,w
  7790  0A35  1D03               	skipz
  7791  0A36  2A3D               	goto	u3023
  7792  0A37  0875               	movf	___fladd@a+1,w
  7793  0A38  0271               	subwf	___fladd@b+1,w
  7794  0A39  1D03               	skipz
  7795  0A3A  2A3D               	goto	u3023
  7796  0A3B  0874               	movf	___fladd@a,w
  7797  0A3C  0270               	subwf	___fladd@b,w
  7798  0A3D                     u3023:
  7799  0A3D  1803               	skipnc
  7800  0A3E  2A40               	goto	u3021
  7801  0A3F  2A41               	goto	u3020
  7802  0A40                     u3021:
  7803  0A40  2A79               	goto	l2825
  7804  0A41                     u3020:
  7805  0A41                     l2817:
  7806  0A41  30FF               	movlw	255
  7807  0A42  00A0               	movwf	??___fladd
  7808  0A43  30FF               	movlw	255
  7809  0A44  00A1               	movwf	??___fladd+1
  7810  0A45  30FF               	movlw	255
  7811  0A46  00A2               	movwf	??___fladd+2
  7812  0A47  30FF               	movlw	255
  7813  0A48  00A3               	movwf	??___fladd+3
  7814  0A49  0870               	movf	___fladd@b,w
  7815  0A4A  0274               	subwf	___fladd@a,w
  7816  0A4B  00A4               	movwf	??___fladd+4
  7817  0A4C  0871               	movf	___fladd@b+1,w
  7818  0A4D  3B75               	subwfb	___fladd@a+1,w
  7819  0A4E  00A5               	movwf	??___fladd+5
  7820  0A4F  0872               	movf	___fladd@b+2,w
  7821  0A50  3B76               	subwfb	___fladd@a+2,w
  7822  0A51  00A6               	movwf	??___fladd+6
  7823  0A52  0873               	movf	___fladd@b+3,w
  7824  0A53  3B77               	subwfb	___fladd@a+3,w
  7825  0A54  00A7               	movwf	??___fladd+7
  7826  0A55  0824               	movf	??___fladd+4,w
  7827  0A56  07A0               	addwf	??___fladd,f
  7828  0A57  0825               	movf	??___fladd+5,w
  7829  0A58  3DA1               	addwfc	??___fladd+1,f
  7830  0A59  0826               	movf	??___fladd+6,w
  7831  0A5A  3DA2               	addwfc	??___fladd+2,f
  7832  0A5B  0827               	movf	??___fladd+7,w
  7833  0A5C  3DA3               	addwfc	??___fladd+3,f
  7834  0A5D  0823               	movf	??___fladd+3,w
  7835  0A5E  00F3               	movwf	___fladd@b+3
  7836  0A5F  0822               	movf	??___fladd+2,w
  7837  0A60  00F2               	movwf	___fladd@b+2
  7838  0A61  0821               	movf	??___fladd+1,w
  7839  0A62  00F1               	movwf	___fladd@b+1
  7840  0A63  0820               	movf	??___fladd,w
  7841  0A64  00F0               	movwf	___fladd@b
  7842  0A65                     l2819:
  7843  0A65  3080               	movlw	128
  7844  0A66  00A0               	movwf	??___fladd
  7845  0A67  0820               	movf	??___fladd,w
  7846  0A68  06F8               	xorwf	___fladd@signs,f
  7847  0A69  09FB               	comf	___fladd@grs,f
  7848  0A6A  0AFB               	incf	___fladd@grs,f
  7849  0A6B                     l2821:
  7850  0A6B  087B               	movf	___fladd@grs,w
  7851  0A6C  1D03               	btfss	3,2
  7852  0A6D  2A6F               	goto	u3031
  7853  0A6E  2A70               	goto	u3030
  7854  0A6F                     u3031:
  7855  0A6F  2A81               	goto	l624
  7856  0A70                     u3030:
  7857  0A70                     l2823:
  7858  0A70  3001               	movlw	1
  7859  0A71  07F0               	addwf	___fladd@b,f
  7860  0A72  3000               	movlw	0
  7861  0A73  3DF1               	addwfc	___fladd@b+1,f
  7862  0A74  3000               	movlw	0
  7863  0A75  3DF2               	addwfc	___fladd@b+2,f
  7864  0A76  3000               	movlw	0
  7865  0A77  3DF3               	addwfc	___fladd@b+3,f
  7866  0A78  2A81               	goto	l624
  7867  0A79                     l2825:
  7868  0A79  0874               	movf	___fladd@a,w
  7869  0A7A  02F0               	subwf	___fladd@b,f
  7870  0A7B  0875               	movf	___fladd@a+1,w
  7871  0A7C  3BF1               	subwfb	___fladd@b+1,f
  7872  0A7D  0876               	movf	___fladd@a+2,w
  7873  0A7E  3BF2               	subwfb	___fladd@b+2,f
  7874  0A7F  0877               	movf	___fladd@a+3,w
  7875  0A80  3BF3               	subwfb	___fladd@b+3,f
  7876  0A81                     l624:
  7877  0A81  0873               	movf	___fladd@b+3,w
  7878  0A82  0472               	iorwf	___fladd@b+2,w
  7879  0A83  0471               	iorwf	___fladd@b+1,w
  7880  0A84  0470               	iorwf	___fladd@b,w
  7881  0A85  1D03               	skipz
  7882  0A86  2A88               	goto	u3041
  7883  0A87  2A89               	goto	u3040
  7884  0A88                     u3041:
  7885  0A88  2AB3               	goto	l2847
  7886  0A89                     u3040:
  7887  0A89                     l2827:
  7888  0A89  087B               	movf	___fladd@grs,w
  7889  0A8A  1D03               	btfss	3,2
  7890  0A8B  2A8D               	goto	u3051
  7891  0A8C  2A8E               	goto	u3050
  7892  0A8D                     u3051:
  7893  0A8D  2AB3               	goto	l2847
  7894  0A8E                     u3050:
  7895  0A8E                     l2829:
  7896  0A8E  3000               	movlw	0
  7897  0A8F  00F3               	movwf	?___fladd+3
  7898  0A90  3000               	movlw	0
  7899  0A91  00F2               	movwf	?___fladd+2
  7900  0A92  3000               	movlw	0
  7901  0A93  00F1               	movwf	?___fladd+1
  7902  0A94  3000               	movlw	0
  7903  0A95  00F0               	movwf	?___fladd
  7904  0A96  2B2A               	goto	l616
  7905  0A97                     l2833:
  7906  0A97  3001               	movlw	1
  7907  0A98                     u3065:
  7908  0A98  35F0               	lslf	___fladd@b,f
  7909  0A99  0DF1               	rlf	___fladd@b+1,f
  7910  0A9A  0DF2               	rlf	___fladd@b+2,f
  7911  0A9B  0DF3               	rlf	___fladd@b+3,f
  7912  0A9C  0B89               	decfsz	9,f
  7913  0A9D  2A98               	goto	u3065
  7914  0A9E                     l2835:
  7915  0A9E  1FFB               	btfss	___fladd@grs,7
  7916  0A9F  2AA1               	goto	u3071
  7917  0AA0  2AA2               	goto	u3070
  7918  0AA1                     u3071:
  7919  0AA1  2AA3               	goto	l628
  7920  0AA2                     u3070:
  7921  0AA2                     l2837:
  7922  0AA2  1470               	bsf	___fladd@b,0
  7923  0AA3                     l628:
  7924  0AA3  1C7B               	btfss	___fladd@grs,0
  7925  0AA4  2AA6               	goto	u3081
  7926  0AA5  2AA7               	goto	u3080
  7927  0AA6                     u3081:
  7928  0AA6  2AAA               	goto	l2841
  7929  0AA7                     u3080:
  7930  0AA7                     l2839:
  7931  0AA7  1403               	setc
  7932  0AA8  0DFB               	rlf	___fladd@grs,f
  7933  0AA9  2AAC               	goto	l2843
  7934  0AAA                     l2841:
  7935  0AAA  1003               	clrc
  7936  0AAB  0DFB               	rlf	___fladd@grs,f
  7937  0AAC                     l2843:
  7938  0AAC  087A               	movf	___fladd@bexp,w
  7939  0AAD  1903               	btfsc	3,2
  7940  0AAE  2AB0               	goto	u3091
  7941  0AAF  2AB1               	goto	u3090
  7942  0AB0                     u3091:
  7943  0AB0  2AB3               	goto	l2847
  7944  0AB1                     u3090:
  7945  0AB1                     l2845:
  7946  0AB1  3001               	movlw	1
  7947  0AB2  02FA               	subwf	___fladd@bexp,f
  7948  0AB3                     l2847:
  7949  0AB3  1FF2               	btfss	___fladd@b+2,7
  7950  0AB4  2AB6               	goto	u3101
  7951  0AB5  2AB7               	goto	u3100
  7952  0AB6                     u3101:
  7953  0AB6  2A97               	goto	l2833
  7954  0AB7                     u3100:
  7955  0AB7                     l2849:
  7956  0AB7  01F9               	clrf	___fladd@aexp
  7957  0AB8                     l2851:
  7958  0AB8  1FFB               	btfss	___fladd@grs,7
  7959  0AB9  2ABB               	goto	u3111
  7960  0ABA  2ABC               	goto	u3110
  7961  0ABB                     u3111:
  7962  0ABB  2ACA               	goto	l2859
  7963  0ABC                     u3110:
  7964  0ABC                     l2853:
  7965  0ABC  087B               	movf	___fladd@grs,w
  7966  0ABD  397F               	andlw	127
  7967  0ABE  1903               	btfsc	3,2
  7968  0ABF  2AC1               	goto	u3121
  7969  0AC0  2AC2               	goto	u3120
  7970  0AC1                     u3121:
  7971  0AC1  2AC5               	goto	l634
  7972  0AC2                     u3120:
  7973  0AC2                     l2855:
  7974  0AC2  01F9               	clrf	___fladd@aexp
  7975  0AC3  0AF9               	incf	___fladd@aexp,f
  7976  0AC4  2ACA               	goto	l2859
  7977  0AC5                     l634:
  7978  0AC5  1C70               	btfss	___fladd@b,0
  7979  0AC6  2AC8               	goto	u3131
  7980  0AC7  2AC9               	goto	u3130
  7981  0AC8                     u3131:
  7982  0AC8  2ACA               	goto	l2859
  7983  0AC9                     u3130:
  7984  0AC9  2AC2               	goto	l2855
  7985  0ACA                     l2859:
  7986  0ACA  0879               	movf	___fladd@aexp,w
  7987  0ACB  1903               	btfsc	3,2
  7988  0ACC  2ACE               	goto	u3141
  7989  0ACD  2ACF               	goto	u3140
  7990  0ACE                     u3141:
  7991  0ACE  2AFD               	goto	l637
  7992  0ACF                     u3140:
  7993  0ACF                     l2861:
  7994  0ACF  3001               	movlw	1
  7995  0AD0  07F0               	addwf	___fladd@b,f
  7996  0AD1  3000               	movlw	0
  7997  0AD2  3DF1               	addwfc	___fladd@b+1,f
  7998  0AD3  3000               	movlw	0
  7999  0AD4  3DF2               	addwfc	___fladd@b+2,f
  8000  0AD5  3000               	movlw	0
  8001  0AD6  3DF3               	addwfc	___fladd@b+3,f
  8002  0AD7                     l2863:
  8003  0AD7  1C73               	btfss	___fladd@b+3,0
  8004  0AD8  2ADA               	goto	u3151
  8005  0AD9  2ADB               	goto	u3150
  8006  0ADA                     u3151:
  8007  0ADA  2AFD               	goto	l637
  8008  0ADB                     u3150:
  8009  0ADB                     l2865:
  8010  0ADB  0870               	movf	___fladd@b,w
  8011  0ADC  0020               	movlb	0	; select bank0
  8012  0ADD  00A0               	movwf	??___fladd
  8013  0ADE  0871               	movf	___fladd@b+1,w
  8014  0ADF  00A1               	movwf	??___fladd+1
  8015  0AE0  0872               	movf	___fladd@b+2,w
  8016  0AE1  00A2               	movwf	??___fladd+2
  8017  0AE2  0873               	movf	___fladd@b+3,w
  8018  0AE3  00A3               	movwf	??___fladd+3
  8019  0AE4  3001               	movlw	1
  8020  0AE5  00A4               	movwf	??___fladd+4
  8021  0AE6                     u3165:
  8022  0AE6  37A3               	asrf	??___fladd+3,f
  8023  0AE7  0CA2               	rrf	??___fladd+2,f
  8024  0AE8  0CA1               	rrf	??___fladd+1,f
  8025  0AE9  0CA0               	rrf	??___fladd,f
  8026  0AEA                     u3160:
  8027  0AEA  0BA4               	decfsz	??___fladd+4,f
  8028  0AEB  2AE6               	goto	u3165
  8029  0AEC  0823               	movf	??___fladd+3,w
  8030  0AED  00F3               	movwf	___fladd@b+3
  8031  0AEE  0822               	movf	??___fladd+2,w
  8032  0AEF  00F2               	movwf	___fladd@b+2
  8033  0AF0  0821               	movf	??___fladd+1,w
  8034  0AF1  00F1               	movwf	___fladd@b+1
  8035  0AF2  0820               	movf	??___fladd,w
  8036  0AF3  00F0               	movwf	___fladd@b
  8037  0AF4  0A7A               	incf	___fladd@bexp,w
  8038  0AF5  1903               	btfsc	3,2
  8039  0AF6  2AF8               	goto	u3171
  8040  0AF7  2AF9               	goto	u3170
  8041  0AF8                     u3171:
  8042  0AF8  2AFD               	goto	l637
  8043  0AF9                     u3170:
  8044  0AF9                     l2867:
  8045  0AF9  3001               	movlw	1
  8046  0AFA  00A0               	movwf	??___fladd
  8047  0AFB  0820               	movf	??___fladd,w
  8048  0AFC  07FA               	addwf	___fladd@bexp,f
  8049  0AFD                     l637:
  8050  0AFD  0A7A               	incf	___fladd@bexp,w
  8051  0AFE  1903               	btfsc	3,2
  8052  0AFF  2B01               	goto	u3181
  8053  0B00  2B02               	goto	u3180
  8054  0B01                     u3181:
  8055  0B01  2B07               	goto	l2871
  8056  0B02                     u3180:
  8057  0B02                     l2869:
  8058  0B02  087A               	movf	___fladd@bexp,w
  8059  0B03  1D03               	btfss	3,2
  8060  0B04  2B06               	goto	u3191
  8061  0B05  2B07               	goto	u3190
  8062  0B06                     u3191:
  8063  0B06  2B15               	goto	l2877
  8064  0B07                     u3190:
  8065  0B07                     l2871:
  8066  0B07  3000               	movlw	0
  8067  0B08  00F3               	movwf	___fladd@b+3
  8068  0B09  3000               	movlw	0
  8069  0B0A  00F2               	movwf	___fladd@b+2
  8070  0B0B  3000               	movlw	0
  8071  0B0C  00F1               	movwf	___fladd@b+1
  8072  0B0D  3000               	movlw	0
  8073  0B0E  00F0               	movwf	___fladd@b
  8074  0B0F                     l2873:
  8075  0B0F  087A               	movf	___fladd@bexp,w
  8076  0B10  1D03               	btfss	3,2
  8077  0B11  2B13               	goto	u3201
  8078  0B12  2B14               	goto	u3200
  8079  0B13                     u3201:
  8080  0B13  2B15               	goto	l2877
  8081  0B14                     u3200:
  8082  0B14                     l2875:
  8083  0B14  01F8               	clrf	___fladd@signs
  8084  0B15                     l2877:
  8085  0B15  1C7A               	btfss	___fladd@bexp,0
  8086  0B16  2B18               	goto	u3211
  8087  0B17  2B19               	goto	u3210
  8088  0B18                     u3211:
  8089  0B18  2B1B               	goto	l2881
  8090  0B19                     u3210:
  8091  0B19                     l2879:
  8092  0B19  17F2               	bsf	___fladd@b+2,7
  8093  0B1A  2B20               	goto	l645
  8094  0B1B                     l2881:
  8095  0B1B  307F               	movlw	127
  8096  0B1C  0020               	movlb	0	; select bank0
  8097  0B1D  00A0               	movwf	??___fladd
  8098  0B1E  0820               	movf	??___fladd,w
  8099  0B1F  05F2               	andwf	___fladd@b+2,f
  8100  0B20                     l645:
  8101  0B20  367A               	lsrf	___fladd@bexp,w
  8102  0B21  0020               	movlb	0	; select bank0
  8103  0B22  00A0               	movwf	??___fladd
  8104  0B23  0820               	movf	??___fladd,w
  8105  0B24  00F3               	movwf	___fladd@b+3
  8106  0B25                     l2883:
  8107  0B25  1FF8               	btfss	___fladd@signs,7
  8108  0B26  2B28               	goto	u3221
  8109  0B27  2B29               	goto	u3220
  8110  0B28                     u3221:
  8111  0B28  2B2A               	goto	l646
  8112  0B29                     u3220:
  8113  0B29                     l2885:
  8114  0B29  17F3               	bsf	___fladd@b+3,7
  8115  0B2A                     l646:
  8116  0B2A                     l616:
  8117  0B2A  0008               	return
  8118  0B2B                     __end_of___fladd:
  8119                           
  8120                           	psect	text19
  8121  1E7F                     __ptext19:	
  8122 ;; *************** function ___flneg *****************
  8123 ;; Defined at:
  8124 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;  f1              4    0[COMMON] unsigned char 
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;		None
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  4    0[COMMON] unsigned char 
  8131 ;; Registers used:
  8132 ;;		wreg
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8141 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8142 ;;Total ram usage:        4 bytes
  8143 ;; Hardware stack levels used: 1
  8144 ;; This function calls:
  8145 ;;		Nothing
  8146 ;; This function is called by:
  8147 ;;		_efgtoa
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151  1E7F                     ___flneg:	
  8152                           ;psect for function ___flneg
  8153                           
  8154  1E7F                     l3067:	
  8155                           ;incstack = 0
  8156                           ; Regs used in ___flneg: [wreg]
  8157                           
  8158  1E7F  0873               	movf	___flneg@f1+3,w
  8159  1E80  0472               	iorwf	___flneg@f1+2,w
  8160  1E81  0471               	iorwf	___flneg@f1+1,w
  8161  1E82  0470               	iorwf	___flneg@f1,w
  8162  1E83  1903               	skipnz
  8163  1E84  2E86               	goto	u3651
  8164  1E85  2E87               	goto	u3650
  8165  1E86                     u3651:
  8166  1E86  2E89               	goto	l3071
  8167  1E87                     u3650:
  8168  1E87                     l3069:
  8169  1E87  3080               	movlw	128
  8170  1E88  06F3               	xorwf	___flneg@f1+3,f
  8171  1E89                     l3071:
  8172  1E89                     l492:
  8173  1E89  0008               	return
  8174  1E8A                     __end_of___flneg:
  8175                           
  8176                           	psect	text20
  8177  0B2B                     __ptext20:	
  8178 ;; *************** function ___flmul *****************
  8179 ;; Defined at:
  8180 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  b               4    0[BANK0 ] unsigned char 
  8183 ;;  a               4    4[BANK0 ] unsigned char 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  prod            4   20[BANK0 ] struct .
  8186 ;;  grs             4   14[BANK0 ] unsigned long 
  8187 ;;  temp            2   24[BANK0 ] struct .
  8188 ;;  bexp            1   19[BANK0 ] unsigned char 
  8189 ;;  aexp            1   18[BANK0 ] unsigned char 
  8190 ;;  sign            1   13[BANK0 ] unsigned char 
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  4    0[BANK0 ] unsigned char 
  8193 ;; Registers used:
  8194 ;;		wreg, status,2, status,0, pclath, cstack
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8200 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8201 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8204 ;;Total ram usage:       26 bytes
  8205 ;; Hardware stack levels used: 1
  8206 ;; Hardware stack levels required when called: 1
  8207 ;; This function calls:
  8208 ;;		__Umul8_16
  8209 ;; This function is called by:
  8210 ;;		_main
  8211 ;;		_efgtoa
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215  0B2B                     ___flmul:	
  8216                           ;psect for function ___flmul
  8217                           
  8218  0B2B                     l3257:	
  8219                           ;incstack = 0
  8220                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8221                           
  8222  0B2B  0020               	movlb	0	; select bank0
  8223  0B2C  0823               	movf	___flmul@b+3,w
  8224  0B2D  3980               	andlw	128
  8225  0B2E  00A8               	movwf	??___flmul
  8226  0B2F  0828               	movf	??___flmul,w
  8227  0B30  00AD               	movwf	___flmul@sign
  8228  0B31                     l3259:
  8229  0B31  3523               	lslf	___flmul@b+3,w
  8230  0B32  00A8               	movwf	??___flmul
  8231  0B33  0828               	movf	??___flmul,w
  8232  0B34  00B3               	movwf	___flmul@bexp
  8233  0B35                     l3261:
  8234  0B35  1FA2               	btfss	___flmul@b+2,7
  8235  0B36  2B38               	goto	u4051
  8236  0B37  2B39               	goto	u4050
  8237  0B38                     u4051:
  8238  0B38  2B3A               	goto	l3265
  8239  0B39                     u4050:
  8240  0B39                     l3263:
  8241  0B39  1433               	bsf	___flmul@bexp,0
  8242  0B3A                     l3265:
  8243  0B3A  0833               	movf	___flmul@bexp,w
  8244  0B3B  1903               	btfsc	3,2
  8245  0B3C  2B3E               	goto	u4061
  8246  0B3D  2B3F               	goto	u4060
  8247  0B3E                     u4061:
  8248  0B3E  2B4E               	goto	l3273
  8249  0B3F                     u4060:
  8250  0B3F                     l3267:
  8251  0B3F  0A33               	incf	___flmul@bexp,w
  8252  0B40  1D03               	btfss	3,2
  8253  0B41  2B43               	goto	u4071
  8254  0B42  2B44               	goto	u4070
  8255  0B43                     u4071:
  8256  0B43  2B4C               	goto	l3271
  8257  0B44                     u4070:
  8258  0B44                     l3269:
  8259  0B44  3000               	movlw	0
  8260  0B45  00A3               	movwf	___flmul@b+3
  8261  0B46  3000               	movlw	0
  8262  0B47  00A2               	movwf	___flmul@b+2
  8263  0B48  3000               	movlw	0
  8264  0B49  00A1               	movwf	___flmul@b+1
  8265  0B4A  3000               	movlw	0
  8266  0B4B  00A0               	movwf	___flmul@b
  8267  0B4C                     l3271:
  8268  0B4C  17A2               	bsf	___flmul@b+2,7
  8269  0B4D  2B56               	goto	l3275
  8270  0B4E                     l3273:
  8271  0B4E  3000               	movlw	0
  8272  0B4F  00A3               	movwf	___flmul@b+3
  8273  0B50  3000               	movlw	0
  8274  0B51  00A2               	movwf	___flmul@b+2
  8275  0B52  3000               	movlw	0
  8276  0B53  00A1               	movwf	___flmul@b+1
  8277  0B54  3000               	movlw	0
  8278  0B55  00A0               	movwf	___flmul@b
  8279  0B56                     l3275:
  8280  0B56  0827               	movf	___flmul@a+3,w
  8281  0B57  3980               	andlw	128
  8282  0B58  00A8               	movwf	??___flmul
  8283  0B59  0828               	movf	??___flmul,w
  8284  0B5A  06AD               	xorwf	___flmul@sign,f
  8285  0B5B                     l3277:
  8286  0B5B  3527               	lslf	___flmul@a+3,w
  8287  0B5C  00A8               	movwf	??___flmul
  8288  0B5D  0828               	movf	??___flmul,w
  8289  0B5E  00B2               	movwf	___flmul@aexp
  8290  0B5F                     l3279:
  8291  0B5F  1FA6               	btfss	___flmul@a+2,7
  8292  0B60  2B62               	goto	u4081
  8293  0B61  2B63               	goto	u4080
  8294  0B62                     u4081:
  8295  0B62  2B64               	goto	l3283
  8296  0B63                     u4080:
  8297  0B63                     l3281:
  8298  0B63  1432               	bsf	___flmul@aexp,0
  8299  0B64                     l3283:
  8300  0B64  0832               	movf	___flmul@aexp,w
  8301  0B65  1903               	btfsc	3,2
  8302  0B66  2B68               	goto	u4091
  8303  0B67  2B69               	goto	u4090
  8304  0B68                     u4091:
  8305  0B68  2B78               	goto	l3291
  8306  0B69                     u4090:
  8307  0B69                     l3285:
  8308  0B69  0A32               	incf	___flmul@aexp,w
  8309  0B6A  1D03               	btfss	3,2
  8310  0B6B  2B6D               	goto	u4101
  8311  0B6C  2B6E               	goto	u4100
  8312  0B6D                     u4101:
  8313  0B6D  2B76               	goto	l3289
  8314  0B6E                     u4100:
  8315  0B6E                     l3287:
  8316  0B6E  3000               	movlw	0
  8317  0B6F  00A7               	movwf	___flmul@a+3
  8318  0B70  3000               	movlw	0
  8319  0B71  00A6               	movwf	___flmul@a+2
  8320  0B72  3000               	movlw	0
  8321  0B73  00A5               	movwf	___flmul@a+1
  8322  0B74  3000               	movlw	0
  8323  0B75  00A4               	movwf	___flmul@a
  8324  0B76                     l3289:
  8325  0B76  17A6               	bsf	___flmul@a+2,7
  8326  0B77  2B80               	goto	l3293
  8327  0B78                     l3291:
  8328  0B78  3000               	movlw	0
  8329  0B79  00A7               	movwf	___flmul@a+3
  8330  0B7A  3000               	movlw	0
  8331  0B7B  00A6               	movwf	___flmul@a+2
  8332  0B7C  3000               	movlw	0
  8333  0B7D  00A5               	movwf	___flmul@a+1
  8334  0B7E  3000               	movlw	0
  8335  0B7F  00A4               	movwf	___flmul@a
  8336  0B80                     l3293:
  8337  0B80  0832               	movf	___flmul@aexp,w
  8338  0B81  1903               	btfsc	3,2
  8339  0B82  2B84               	goto	u4111
  8340  0B83  2B85               	goto	u4110
  8341  0B84                     u4111:
  8342  0B84  2B8A               	goto	l3297
  8343  0B85                     u4110:
  8344  0B85                     l3295:
  8345  0B85  0833               	movf	___flmul@bexp,w
  8346  0B86  1D03               	btfss	3,2
  8347  0B87  2B89               	goto	u4121
  8348  0B88  2B8A               	goto	u4120
  8349  0B89                     u4121:
  8350  0B89  2B93               	goto	l3301
  8351  0B8A                     u4120:
  8352  0B8A                     l3297:
  8353  0B8A  3000               	movlw	0
  8354  0B8B  00A3               	movwf	?___flmul+3
  8355  0B8C  3000               	movlw	0
  8356  0B8D  00A2               	movwf	?___flmul+2
  8357  0B8E  3000               	movlw	0
  8358  0B8F  00A1               	movwf	?___flmul+1
  8359  0B90  3000               	movlw	0
  8360  0B91  00A0               	movwf	?___flmul
  8361  0B92  2D81               	goto	l699
  8362  0B93                     l3301:
  8363  0B93  0820               	movf	___flmul@b,w
  8364  0B94  00A8               	movwf	??___flmul
  8365  0B95  0828               	movf	??___flmul,w
  8366  0B96  00F0               	movwf	__Umul8_16@multiplicand
  8367  0B97  0826               	movf	___flmul@a+2,w
  8368  0B98  319F  27B4  318B   	fcall	__Umul8_16
  8369  0B9B  0871               	movf	?__Umul8_16+1,w
  8370  0B9C  0020               	movlb	0	; select bank0
  8371  0B9D  00B9               	movwf	___flmul@temp+1
  8372  0B9E  0870               	movf	?__Umul8_16,w
  8373  0B9F  00B8               	movwf	___flmul@temp
  8374  0BA0                     l3303:
  8375  0BA0  0838               	movf	___flmul@temp,w
  8376  0BA1  00A8               	movwf	??___flmul
  8377  0BA2  01A9               	clrf	??___flmul+1
  8378  0BA3  01AA               	clrf	??___flmul+2
  8379  0BA4  01AB               	clrf	??___flmul+3
  8380  0BA5  082B               	movf	??___flmul+3,w
  8381  0BA6  00B1               	movwf	___flmul@grs+3
  8382  0BA7  082A               	movf	??___flmul+2,w
  8383  0BA8  00B0               	movwf	___flmul@grs+2
  8384  0BA9  0829               	movf	??___flmul+1,w
  8385  0BAA  00AF               	movwf	___flmul@grs+1
  8386  0BAB  0828               	movf	??___flmul,w
  8387  0BAC  00AE               	movwf	___flmul@grs
  8388  0BAD                     l3305:
  8389  0BAD  0839               	movf	___flmul@temp+1,w
  8390  0BAE  00A8               	movwf	??___flmul
  8391  0BAF  01A9               	clrf	??___flmul+1
  8392  0BB0  01AA               	clrf	??___flmul+2
  8393  0BB1  01AB               	clrf	??___flmul+3
  8394  0BB2  082B               	movf	??___flmul+3,w
  8395  0BB3  00B7               	movwf	___flmul@prod+3
  8396  0BB4  082A               	movf	??___flmul+2,w
  8397  0BB5  00B6               	movwf	___flmul@prod+2
  8398  0BB6  0829               	movf	??___flmul+1,w
  8399  0BB7  00B5               	movwf	___flmul@prod+1
  8400  0BB8  0828               	movf	??___flmul,w
  8401  0BB9  00B4               	movwf	___flmul@prod
  8402  0BBA  0821               	movf	___flmul@b+1,w
  8403  0BBB  00A8               	movwf	??___flmul
  8404  0BBC  0828               	movf	??___flmul,w
  8405  0BBD  00F0               	movwf	__Umul8_16@multiplicand
  8406  0BBE  0825               	movf	___flmul@a+1,w
  8407  0BBF  319F  27B4  318B   	fcall	__Umul8_16
  8408  0BC2  0871               	movf	?__Umul8_16+1,w
  8409  0BC3  0020               	movlb	0	; select bank0
  8410  0BC4  00B9               	movwf	___flmul@temp+1
  8411  0BC5  0870               	movf	?__Umul8_16,w
  8412  0BC6  00B8               	movwf	___flmul@temp
  8413  0BC7                     l3307:
  8414  0BC7  0838               	movf	___flmul@temp,w
  8415  0BC8  00A8               	movwf	??___flmul
  8416  0BC9  01A9               	clrf	??___flmul+1
  8417  0BCA  01AA               	clrf	??___flmul+2
  8418  0BCB  01AB               	clrf	??___flmul+3
  8419  0BCC  0828               	movf	??___flmul,w
  8420  0BCD  07AE               	addwf	___flmul@grs,f
  8421  0BCE  0829               	movf	??___flmul+1,w
  8422  0BCF  3DAF               	addwfc	___flmul@grs+1,f
  8423  0BD0  082A               	movf	??___flmul+2,w
  8424  0BD1  3DB0               	addwfc	___flmul@grs+2,f
  8425  0BD2  082B               	movf	??___flmul+3,w
  8426  0BD3  3DB1               	addwfc	___flmul@grs+3,f
  8427  0BD4                     l3309:
  8428  0BD4  0839               	movf	___flmul@temp+1,w
  8429  0BD5  00A8               	movwf	??___flmul
  8430  0BD6  01A9               	clrf	??___flmul+1
  8431  0BD7  01AA               	clrf	??___flmul+2
  8432  0BD8  01AB               	clrf	??___flmul+3
  8433  0BD9  0828               	movf	??___flmul,w
  8434  0BDA  07B4               	addwf	___flmul@prod,f
  8435  0BDB  0829               	movf	??___flmul+1,w
  8436  0BDC  3DB5               	addwfc	___flmul@prod+1,f
  8437  0BDD  082A               	movf	??___flmul+2,w
  8438  0BDE  3DB6               	addwfc	___flmul@prod+2,f
  8439  0BDF  082B               	movf	??___flmul+3,w
  8440  0BE0  3DB7               	addwfc	___flmul@prod+3,f
  8441  0BE1  0822               	movf	___flmul@b+2,w
  8442  0BE2  00A8               	movwf	??___flmul
  8443  0BE3  0828               	movf	??___flmul,w
  8444  0BE4  00F0               	movwf	__Umul8_16@multiplicand
  8445  0BE5  0824               	movf	___flmul@a,w
  8446  0BE6  319F  27B4  318B   	fcall	__Umul8_16
  8447  0BE9  0871               	movf	?__Umul8_16+1,w
  8448  0BEA  0020               	movlb	0	; select bank0
  8449  0BEB  00B9               	movwf	___flmul@temp+1
  8450  0BEC  0870               	movf	?__Umul8_16,w
  8451  0BED  00B8               	movwf	___flmul@temp
  8452  0BEE                     l3311:
  8453  0BEE  0838               	movf	___flmul@temp,w
  8454  0BEF  00A8               	movwf	??___flmul
  8455  0BF0  01A9               	clrf	??___flmul+1
  8456  0BF1  01AA               	clrf	??___flmul+2
  8457  0BF2  01AB               	clrf	??___flmul+3
  8458  0BF3  0828               	movf	??___flmul,w
  8459  0BF4  07AE               	addwf	___flmul@grs,f
  8460  0BF5  0829               	movf	??___flmul+1,w
  8461  0BF6  3DAF               	addwfc	___flmul@grs+1,f
  8462  0BF7  082A               	movf	??___flmul+2,w
  8463  0BF8  3DB0               	addwfc	___flmul@grs+2,f
  8464  0BF9  082B               	movf	??___flmul+3,w
  8465  0BFA  3DB1               	addwfc	___flmul@grs+3,f
  8466  0BFB                     l3313:
  8467  0BFB  0839               	movf	___flmul@temp+1,w
  8468  0BFC  00A8               	movwf	??___flmul
  8469  0BFD  01A9               	clrf	??___flmul+1
  8470  0BFE  01AA               	clrf	??___flmul+2
  8471  0BFF  01AB               	clrf	??___flmul+3
  8472  0C00  0828               	movf	??___flmul,w
  8473  0C01  07B4               	addwf	___flmul@prod,f
  8474  0C02  0829               	movf	??___flmul+1,w
  8475  0C03  3DB5               	addwfc	___flmul@prod+1,f
  8476  0C04  082A               	movf	??___flmul+2,w
  8477  0C05  3DB6               	addwfc	___flmul@prod+2,f
  8478  0C06  082B               	movf	??___flmul+3,w
  8479  0C07  3DB7               	addwfc	___flmul@prod+3,f
  8480  0C08                     l3315:
  8481  0C08  3008               	movlw	8
  8482  0C09                     u4135:
  8483  0C09  35AE               	lslf	___flmul@grs,f
  8484  0C0A  0DAF               	rlf	___flmul@grs+1,f
  8485  0C0B  0DB0               	rlf	___flmul@grs+2,f
  8486  0C0C  0DB1               	rlf	___flmul@grs+3,f
  8487  0C0D  0B89               	decfsz	9,f
  8488  0C0E  2C09               	goto	u4135
  8489  0C0F                     l3317:
  8490  0C0F  0821               	movf	___flmul@b+1,w
  8491  0C10  00A8               	movwf	??___flmul
  8492  0C11  0828               	movf	??___flmul,w
  8493  0C12  00F0               	movwf	__Umul8_16@multiplicand
  8494  0C13  0824               	movf	___flmul@a,w
  8495  0C14  319F  27B4  318B   	fcall	__Umul8_16
  8496  0C17  0871               	movf	?__Umul8_16+1,w
  8497  0C18  0020               	movlb	0	; select bank0
  8498  0C19  00B9               	movwf	___flmul@temp+1
  8499  0C1A  0870               	movf	?__Umul8_16,w
  8500  0C1B  00B8               	movwf	___flmul@temp
  8501  0C1C                     l3319:
  8502  0C1C  0838               	movf	___flmul@temp,w
  8503  0C1D  07AE               	addwf	___flmul@grs,f
  8504  0C1E  0839               	movf	___flmul@temp+1,w
  8505  0C1F  3DAF               	addwfc	___flmul@grs+1,f
  8506  0C20  3000               	movlw	0
  8507  0C21  3DB0               	addwfc	___flmul@grs+2,f
  8508  0C22  3DB1               	addwfc	___flmul@grs+3,f
  8509  0C23                     l3321:
  8510  0C23  0820               	movf	___flmul@b,w
  8511  0C24  00A8               	movwf	??___flmul
  8512  0C25  0828               	movf	??___flmul,w
  8513  0C26  00F0               	movwf	__Umul8_16@multiplicand
  8514  0C27  0825               	movf	___flmul@a+1,w
  8515  0C28  319F  27B4  318B   	fcall	__Umul8_16
  8516  0C2B  0871               	movf	?__Umul8_16+1,w
  8517  0C2C  0020               	movlb	0	; select bank0
  8518  0C2D  00B9               	movwf	___flmul@temp+1
  8519  0C2E  0870               	movf	?__Umul8_16,w
  8520  0C2F  00B8               	movwf	___flmul@temp
  8521  0C30                     l3323:
  8522  0C30  0838               	movf	___flmul@temp,w
  8523  0C31  07AE               	addwf	___flmul@grs,f
  8524  0C32  0839               	movf	___flmul@temp+1,w
  8525  0C33  3DAF               	addwfc	___flmul@grs+1,f
  8526  0C34  3000               	movlw	0
  8527  0C35  3DB0               	addwfc	___flmul@grs+2,f
  8528  0C36  3DB1               	addwfc	___flmul@grs+3,f
  8529  0C37                     l3325:
  8530  0C37  3008               	movlw	8
  8531  0C38                     u4145:
  8532  0C38  35AE               	lslf	___flmul@grs,f
  8533  0C39  0DAF               	rlf	___flmul@grs+1,f
  8534  0C3A  0DB0               	rlf	___flmul@grs+2,f
  8535  0C3B  0DB1               	rlf	___flmul@grs+3,f
  8536  0C3C  0B89               	decfsz	9,f
  8537  0C3D  2C38               	goto	u4145
  8538  0C3E  0820               	movf	___flmul@b,w
  8539  0C3F  00A8               	movwf	??___flmul
  8540  0C40  0828               	movf	??___flmul,w
  8541  0C41  00F0               	movwf	__Umul8_16@multiplicand
  8542  0C42  0824               	movf	___flmul@a,w
  8543  0C43  319F  27B4  318B   	fcall	__Umul8_16
  8544  0C46  0871               	movf	?__Umul8_16+1,w
  8545  0C47  0020               	movlb	0	; select bank0
  8546  0C48  00B9               	movwf	___flmul@temp+1
  8547  0C49  0870               	movf	?__Umul8_16,w
  8548  0C4A  00B8               	movwf	___flmul@temp
  8549  0C4B                     l3327:
  8550  0C4B  0838               	movf	___flmul@temp,w
  8551  0C4C  07AE               	addwf	___flmul@grs,f
  8552  0C4D  0839               	movf	___flmul@temp+1,w
  8553  0C4E  3DAF               	addwfc	___flmul@grs+1,f
  8554  0C4F  3000               	movlw	0
  8555  0C50  3DB0               	addwfc	___flmul@grs+2,f
  8556  0C51  3DB1               	addwfc	___flmul@grs+3,f
  8557  0C52                     l3329:
  8558  0C52  0821               	movf	___flmul@b+1,w
  8559  0C53  00A8               	movwf	??___flmul
  8560  0C54  0828               	movf	??___flmul,w
  8561  0C55  00F0               	movwf	__Umul8_16@multiplicand
  8562  0C56  0826               	movf	___flmul@a+2,w
  8563  0C57  319F  27B4  318B   	fcall	__Umul8_16
  8564  0C5A  0871               	movf	?__Umul8_16+1,w
  8565  0C5B  0020               	movlb	0	; select bank0
  8566  0C5C  00B9               	movwf	___flmul@temp+1
  8567  0C5D  0870               	movf	?__Umul8_16,w
  8568  0C5E  00B8               	movwf	___flmul@temp
  8569  0C5F  0838               	movf	___flmul@temp,w
  8570  0C60  07B4               	addwf	___flmul@prod,f
  8571  0C61  0839               	movf	___flmul@temp+1,w
  8572  0C62  3DB5               	addwfc	___flmul@prod+1,f
  8573  0C63  3000               	movlw	0
  8574  0C64  3DB6               	addwfc	___flmul@prod+2,f
  8575  0C65  3DB7               	addwfc	___flmul@prod+3,f
  8576  0C66                     l3331:
  8577  0C66  0822               	movf	___flmul@b+2,w
  8578  0C67  00A8               	movwf	??___flmul
  8579  0C68  0828               	movf	??___flmul,w
  8580  0C69  00F0               	movwf	__Umul8_16@multiplicand
  8581  0C6A  0825               	movf	___flmul@a+1,w
  8582  0C6B  319F  27B4  318B   	fcall	__Umul8_16
  8583  0C6E  0871               	movf	?__Umul8_16+1,w
  8584  0C6F  0020               	movlb	0	; select bank0
  8585  0C70  00B9               	movwf	___flmul@temp+1
  8586  0C71  0870               	movf	?__Umul8_16,w
  8587  0C72  00B8               	movwf	___flmul@temp
  8588  0C73                     l3333:
  8589  0C73  0838               	movf	___flmul@temp,w
  8590  0C74  07B4               	addwf	___flmul@prod,f
  8591  0C75  0839               	movf	___flmul@temp+1,w
  8592  0C76  3DB5               	addwfc	___flmul@prod+1,f
  8593  0C77  3000               	movlw	0
  8594  0C78  3DB6               	addwfc	___flmul@prod+2,f
  8595  0C79  3DB7               	addwfc	___flmul@prod+3,f
  8596  0C7A  0822               	movf	___flmul@b+2,w
  8597  0C7B  00A8               	movwf	??___flmul
  8598  0C7C  0828               	movf	??___flmul,w
  8599  0C7D  00F0               	movwf	__Umul8_16@multiplicand
  8600  0C7E  0826               	movf	___flmul@a+2,w
  8601  0C7F  319F  27B4  318B   	fcall	__Umul8_16
  8602  0C82  0871               	movf	?__Umul8_16+1,w
  8603  0C83  0020               	movlb	0	; select bank0
  8604  0C84  00B9               	movwf	___flmul@temp+1
  8605  0C85  0870               	movf	?__Umul8_16,w
  8606  0C86  00B8               	movwf	___flmul@temp
  8607  0C87                     l3335:
  8608  0C87  0838               	movf	___flmul@temp,w
  8609  0C88  00A8               	movwf	??___flmul
  8610  0C89  0839               	movf	___flmul@temp+1,w
  8611  0C8A  00A9               	movwf	??___flmul+1
  8612  0C8B  01AA               	clrf	??___flmul+2
  8613  0C8C  01AB               	clrf	??___flmul+3
  8614  0C8D  3008               	movlw	8
  8615  0C8E                     u4155:
  8616  0C8E  35A8               	lslf	??___flmul,f
  8617  0C8F  0DA9               	rlf	??___flmul+1,f
  8618  0C90  0DAA               	rlf	??___flmul+2,f
  8619  0C91  0DAB               	rlf	??___flmul+3,f
  8620  0C92                     u4150:
  8621  0C92  0B89               	decfsz	9,f
  8622  0C93  2C8E               	goto	u4155
  8623  0C94  0828               	movf	??___flmul,w
  8624  0C95  07B4               	addwf	___flmul@prod,f
  8625  0C96  0829               	movf	??___flmul+1,w
  8626  0C97  3DB5               	addwfc	___flmul@prod+1,f
  8627  0C98  082A               	movf	??___flmul+2,w
  8628  0C99  3DB6               	addwfc	___flmul@prod+2,f
  8629  0C9A  082B               	movf	??___flmul+3,w
  8630  0C9B  3DB7               	addwfc	___flmul@prod+3,f
  8631  0C9C                     l3337:
  8632  0C9C  082E               	movf	___flmul@grs,w
  8633  0C9D  00A8               	movwf	??___flmul
  8634  0C9E  082F               	movf	___flmul@grs+1,w
  8635  0C9F  00A9               	movwf	??___flmul+1
  8636  0CA0  0830               	movf	___flmul@grs+2,w
  8637  0CA1  00AA               	movwf	??___flmul+2
  8638  0CA2  0831               	movf	___flmul@grs+3,w
  8639  0CA3  00AB               	movwf	??___flmul+3
  8640  0CA4  3018               	movlw	24
  8641  0CA5                     u4165:
  8642  0CA5  36AB               	lsrf	??___flmul+3,f
  8643  0CA6  0CAA               	rrf	??___flmul+2,f
  8644  0CA7  0CA9               	rrf	??___flmul+1,f
  8645  0CA8  0CA8               	rrf	??___flmul,f
  8646  0CA9                     u4160:
  8647  0CA9  0B89               	decfsz	9,f
  8648  0CAA  2CA5               	goto	u4165
  8649  0CAB  0828               	movf	??___flmul,w
  8650  0CAC  07B4               	addwf	___flmul@prod,f
  8651  0CAD  0829               	movf	??___flmul+1,w
  8652  0CAE  3DB5               	addwfc	___flmul@prod+1,f
  8653  0CAF  082A               	movf	??___flmul+2,w
  8654  0CB0  3DB6               	addwfc	___flmul@prod+2,f
  8655  0CB1  082B               	movf	??___flmul+3,w
  8656  0CB2  3DB7               	addwfc	___flmul@prod+3,f
  8657  0CB3                     l3339:
  8658  0CB3  3008               	movlw	8
  8659  0CB4                     u4175:
  8660  0CB4  35AE               	lslf	___flmul@grs,f
  8661  0CB5  0DAF               	rlf	___flmul@grs+1,f
  8662  0CB6  0DB0               	rlf	___flmul@grs+2,f
  8663  0CB7  0DB1               	rlf	___flmul@grs+3,f
  8664  0CB8  0B89               	decfsz	9,f
  8665  0CB9  2CB4               	goto	u4175
  8666  0CBA                     l3341:
  8667  0CBA  0833               	movf	___flmul@bexp,w
  8668  0CBB  0732               	addwf	___flmul@aexp,w
  8669  0CBC  00A8               	movwf	??___flmul
  8670  0CBD  01A9               	clrf	??___flmul+1
  8671  0CBE  0DA9               	rlf	??___flmul+1,f
  8672  0CBF  0828               	movf	??___flmul,w
  8673  0CC0  3E82               	addlw	130
  8674  0CC1  00B8               	movwf	___flmul@temp
  8675  0CC2  30FF               	movlw	255
  8676  0CC3  3D29               	addwfc	??___flmul+1,w
  8677  0CC4  00B9               	movwf	___flmul@temp+1
  8678  0CC5  2CDD               	goto	l3353
  8679  0CC6                     l3343:
  8680  0CC6  3001               	movlw	1
  8681  0CC7                     u4185:
  8682  0CC7  35B4               	lslf	___flmul@prod,f
  8683  0CC8  0DB5               	rlf	___flmul@prod+1,f
  8684  0CC9  0DB6               	rlf	___flmul@prod+2,f
  8685  0CCA  0DB7               	rlf	___flmul@prod+3,f
  8686  0CCB  0B89               	decfsz	9,f
  8687  0CCC  2CC7               	goto	u4185
  8688  0CCD                     l3345:
  8689  0CCD  1FB1               	btfss	___flmul@grs+3,7
  8690  0CCE  2CD0               	goto	u4191
  8691  0CCF  2CD1               	goto	u4190
  8692  0CD0                     u4191:
  8693  0CD0  2CD2               	goto	l3349
  8694  0CD1                     u4190:
  8695  0CD1                     l3347:
  8696  0CD1  1434               	bsf	___flmul@prod,0
  8697  0CD2                     l3349:
  8698  0CD2  3001               	movlw	1
  8699  0CD3                     u4205:
  8700  0CD3  35AE               	lslf	___flmul@grs,f
  8701  0CD4  0DAF               	rlf	___flmul@grs+1,f
  8702  0CD5  0DB0               	rlf	___flmul@grs+2,f
  8703  0CD6  0DB1               	rlf	___flmul@grs+3,f
  8704  0CD7  0B89               	decfsz	9,f
  8705  0CD8  2CD3               	goto	u4205
  8706  0CD9                     l3351:
  8707  0CD9  30FF               	movlw	255
  8708  0CDA  07B8               	addwf	___flmul@temp,f
  8709  0CDB  30FF               	movlw	255
  8710  0CDC  3DB9               	addwfc	___flmul@temp+1,f
  8711  0CDD                     l3353:
  8712  0CDD  1FB6               	btfss	___flmul@prod+2,7
  8713  0CDE  2CE0               	goto	u4211
  8714  0CDF  2CE1               	goto	u4210
  8715  0CE0                     u4211:
  8716  0CE0  2CC6               	goto	l3343
  8717  0CE1                     u4210:
  8718  0CE1                     l3355:
  8719  0CE1  01B2               	clrf	___flmul@aexp
  8720  0CE2                     l3357:
  8721  0CE2  1FB1               	btfss	___flmul@grs+3,7
  8722  0CE3  2CE5               	goto	u4221
  8723  0CE4  2CE6               	goto	u4220
  8724  0CE5                     u4221:
  8725  0CE5  2D02               	goto	l3365
  8726  0CE6                     u4220:
  8727  0CE6                     l3359:
  8728  0CE6  30FF               	movlw	255
  8729  0CE7  052E               	andwf	___flmul@grs,w
  8730  0CE8  00A8               	movwf	??___flmul
  8731  0CE9  30FF               	movlw	255
  8732  0CEA  052F               	andwf	___flmul@grs+1,w
  8733  0CEB  00A9               	movwf	??___flmul+1
  8734  0CEC  30FF               	movlw	255
  8735  0CED  0530               	andwf	___flmul@grs+2,w
  8736  0CEE  00AA               	movwf	??___flmul+2
  8737  0CEF  307F               	movlw	127
  8738  0CF0  0531               	andwf	___flmul@grs+3,w
  8739  0CF1  00AB               	movwf	??___flmul+3
  8740  0CF2  082B               	movf	??___flmul+3,w
  8741  0CF3  042A               	iorwf	??___flmul+2,w
  8742  0CF4  0429               	iorwf	??___flmul+1,w
  8743  0CF5  0428               	iorwf	??___flmul,w
  8744  0CF6  1903               	skipnz
  8745  0CF7  2CF9               	goto	u4231
  8746  0CF8  2CFA               	goto	u4230
  8747  0CF9                     u4231:
  8748  0CF9  2CFD               	goto	l705
  8749  0CFA                     u4230:
  8750  0CFA                     l3361:
  8751  0CFA  01B2               	clrf	___flmul@aexp
  8752  0CFB  0AB2               	incf	___flmul@aexp,f
  8753  0CFC  2D02               	goto	l3365
  8754  0CFD                     l705:
  8755  0CFD  1C34               	btfss	___flmul@prod,0
  8756  0CFE  2D00               	goto	u4241
  8757  0CFF  2D01               	goto	u4240
  8758  0D00                     u4241:
  8759  0D00  2D02               	goto	l3365
  8760  0D01                     u4240:
  8761  0D01  2CFA               	goto	l3361
  8762  0D02                     l3365:
  8763  0D02  0832               	movf	___flmul@aexp,w
  8764  0D03  1903               	btfsc	3,2
  8765  0D04  2D06               	goto	u4251
  8766  0D05  2D07               	goto	u4250
  8767  0D06                     u4251:
  8768  0D06  2D2F               	goto	l3375
  8769  0D07                     u4250:
  8770  0D07                     l3367:
  8771  0D07  3001               	movlw	1
  8772  0D08  07B4               	addwf	___flmul@prod,f
  8773  0D09  3000               	movlw	0
  8774  0D0A  3DB5               	addwfc	___flmul@prod+1,f
  8775  0D0B  3000               	movlw	0
  8776  0D0C  3DB6               	addwfc	___flmul@prod+2,f
  8777  0D0D  3000               	movlw	0
  8778  0D0E  3DB7               	addwfc	___flmul@prod+3,f
  8779  0D0F                     l3369:
  8780  0D0F  1C37               	btfss	___flmul@prod+3,0
  8781  0D10  2D12               	goto	u4261
  8782  0D11  2D13               	goto	u4260
  8783  0D12                     u4261:
  8784  0D12  2D2F               	goto	l3375
  8785  0D13                     u4260:
  8786  0D13                     l3371:
  8787  0D13  0834               	movf	___flmul@prod,w
  8788  0D14  00A8               	movwf	??___flmul
  8789  0D15  0835               	movf	___flmul@prod+1,w
  8790  0D16  00A9               	movwf	??___flmul+1
  8791  0D17  0836               	movf	___flmul@prod+2,w
  8792  0D18  00AA               	movwf	??___flmul+2
  8793  0D19  0837               	movf	___flmul@prod+3,w
  8794  0D1A  00AB               	movwf	??___flmul+3
  8795  0D1B  3001               	movlw	1
  8796  0D1C  00AC               	movwf	??___flmul+4
  8797  0D1D                     u4275:
  8798  0D1D  37AB               	asrf	??___flmul+3,f
  8799  0D1E  0CAA               	rrf	??___flmul+2,f
  8800  0D1F  0CA9               	rrf	??___flmul+1,f
  8801  0D20  0CA8               	rrf	??___flmul,f
  8802  0D21                     u4270:
  8803  0D21  0BAC               	decfsz	??___flmul+4,f
  8804  0D22  2D1D               	goto	u4275
  8805  0D23  082B               	movf	??___flmul+3,w
  8806  0D24  00B7               	movwf	___flmul@prod+3
  8807  0D25  082A               	movf	??___flmul+2,w
  8808  0D26  00B6               	movwf	___flmul@prod+2
  8809  0D27  0829               	movf	??___flmul+1,w
  8810  0D28  00B5               	movwf	___flmul@prod+1
  8811  0D29  0828               	movf	??___flmul,w
  8812  0D2A  00B4               	movwf	___flmul@prod
  8813  0D2B                     l3373:
  8814  0D2B  3001               	movlw	1
  8815  0D2C  07B8               	addwf	___flmul@temp,f
  8816  0D2D  3000               	movlw	0
  8817  0D2E  3DB9               	addwfc	___flmul@temp+1,f
  8818  0D2F                     l3375:
  8819  0D2F  0839               	movf	___flmul@temp+1,w
  8820  0D30  3A80               	xorlw	128
  8821  0D31  00A8               	movwf	??___flmul
  8822  0D32  3080               	movlw	128
  8823  0D33  0228               	subwf	??___flmul,w
  8824  0D34  1D03               	skipz
  8825  0D35  2D38               	goto	u4285
  8826  0D36  30FF               	movlw	255
  8827  0D37  0238               	subwf	___flmul@temp,w
  8828  0D38                     u4285:
  8829  0D38  1C03               	skipc
  8830  0D39  2D3B               	goto	u4281
  8831  0D3A  2D3C               	goto	u4280
  8832  0D3B                     u4281:
  8833  0D3B  2D46               	goto	l3379
  8834  0D3C                     u4280:
  8835  0D3C                     l3377:
  8836  0D3C  307F               	movlw	127
  8837  0D3D  0020               	movlb	0	; select bank0
  8838  0D3E  00B7               	movwf	___flmul@prod+3
  8839  0D3F  3080               	movlw	128
  8840  0D40  00B6               	movwf	___flmul@prod+2
  8841  0D41  3000               	movlw	0
  8842  0D42  00B5               	movwf	___flmul@prod+1
  8843  0D43  3000               	movlw	0
  8844  0D44  00B4               	movwf	___flmul@prod
  8845  0D45  2D75               	goto	l711
  8846  0D46                     l3379:
  8847  0D46  0020               	movlb	0	; select bank0
  8848  0D47  0839               	movf	___flmul@temp+1,w
  8849  0D48  3A80               	xorlw	128
  8850  0D49  00A8               	movwf	??___flmul
  8851  0D4A  3080               	movlw	128
  8852  0D4B  0228               	subwf	??___flmul,w
  8853  0D4C  1D03               	skipz
  8854  0D4D  2D50               	goto	u4295
  8855  0D4E  3001               	movlw	1
  8856  0D4F  0238               	subwf	___flmul@temp,w
  8857  0D50                     u4295:
  8858  0D50  1803               	skipnc
  8859  0D51  2D53               	goto	u4291
  8860  0D52  2D54               	goto	u4290
  8861  0D53                     u4291:
  8862  0D53  2D5F               	goto	l3385
  8863  0D54                     u4290:
  8864  0D54                     l3381:
  8865  0D54  3000               	movlw	0
  8866  0D55  0020               	movlb	0	; select bank0
  8867  0D56  00B7               	movwf	___flmul@prod+3
  8868  0D57  3000               	movlw	0
  8869  0D58  00B6               	movwf	___flmul@prod+2
  8870  0D59  3000               	movlw	0
  8871  0D5A  00B5               	movwf	___flmul@prod+1
  8872  0D5B  3000               	movlw	0
  8873  0D5C  00B4               	movwf	___flmul@prod
  8874  0D5D                     l3383:
  8875  0D5D  01AD               	clrf	___flmul@sign
  8876  0D5E  2D75               	goto	l711
  8877  0D5F                     l3385:
  8878  0D5F  0020               	movlb	0	; select bank0
  8879  0D60  0838               	movf	___flmul@temp,w
  8880  0D61  00A8               	movwf	??___flmul
  8881  0D62  0828               	movf	??___flmul,w
  8882  0D63  00B3               	movwf	___flmul@bexp
  8883  0D64  30FF               	movlw	255
  8884  0D65  05B4               	andwf	___flmul@prod,f
  8885  0D66  30FF               	movlw	255
  8886  0D67  05B5               	andwf	___flmul@prod+1,f
  8887  0D68  307F               	movlw	127
  8888  0D69  05B6               	andwf	___flmul@prod+2,f
  8889  0D6A  3000               	movlw	0
  8890  0D6B  05B7               	andwf	___flmul@prod+3,f
  8891  0D6C                     l3387:
  8892  0D6C  1C33               	btfss	___flmul@bexp,0
  8893  0D6D  2D6F               	goto	u4301
  8894  0D6E  2D70               	goto	u4300
  8895  0D6F                     u4301:
  8896  0D6F  2D71               	goto	l3391
  8897  0D70                     u4300:
  8898  0D70                     l3389:
  8899  0D70  17B6               	bsf	___flmul@prod+2,7
  8900  0D71                     l3391:
  8901  0D71  3633               	lsrf	___flmul@bexp,w
  8902  0D72  00A8               	movwf	??___flmul
  8903  0D73  0828               	movf	??___flmul,w
  8904  0D74  00B7               	movwf	___flmul@prod+3
  8905  0D75                     l711:
  8906  0D75  082D               	movf	___flmul@sign,w
  8907  0D76  00A8               	movwf	??___flmul
  8908  0D77  0828               	movf	??___flmul,w
  8909  0D78  04B7               	iorwf	___flmul@prod+3,f
  8910  0D79                     l3393:
  8911  0D79  0837               	movf	___flmul@prod+3,w
  8912  0D7A  00A3               	movwf	?___flmul+3
  8913  0D7B  0836               	movf	___flmul@prod+2,w
  8914  0D7C  00A2               	movwf	?___flmul+2
  8915  0D7D  0835               	movf	___flmul@prod+1,w
  8916  0D7E  00A1               	movwf	?___flmul+1
  8917  0D7F  0834               	movf	___flmul@prod,w
  8918  0D80  00A0               	movwf	?___flmul
  8919  0D81                     l699:
  8920  0D81  0008               	return
  8921  0D82                     __end_of___flmul:
  8922                           
  8923                           	psect	text21
  8924  1FB4                     __ptext21:	
  8925 ;; *************** function __Umul8_16 *****************
  8926 ;; Defined at:
  8927 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  multiplier      1    wreg     unsigned char 
  8930 ;;  multiplicand    1    0[COMMON] unsigned char 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;  multiplier      1    8[COMMON] unsigned char 
  8933 ;;  word_mpld       2    6[COMMON] unsigned int 
  8934 ;;  product         2    4[COMMON] unsigned int 
  8935 ;; Return value:  Size  Location     Type
  8936 ;;                  2    0[COMMON] unsigned int 
  8937 ;; Registers used:
  8938 ;;		wreg, status,2, status,0
  8939 ;; Tracked objects:
  8940 ;;		On entry : 0/0
  8941 ;;		On exit  : 0/0
  8942 ;;		Unchanged: 0/0
  8943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8945 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8946 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8947 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8948 ;;Total ram usage:        9 bytes
  8949 ;; Hardware stack levels used: 1
  8950 ;; This function calls:
  8951 ;;		Nothing
  8952 ;; This function is called by:
  8953 ;;		___flmul
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957  1FB4                     __Umul8_16:	
  8958                           ;psect for function __Umul8_16
  8959                           
  8960                           
  8961                           ;incstack = 0
  8962                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8963                           ;__Umul8_16@multiplier stored from wreg
  8964  1FB4  00F8               	movwf	__Umul8_16@multiplier
  8965  1FB5                     l2887:
  8966  1FB5  01F4               	clrf	__Umul8_16@product
  8967  1FB6  01F5               	clrf	__Umul8_16@product+1
  8968  1FB7                     l2889:
  8969  1FB7  0870               	movf	__Umul8_16@multiplicand,w
  8970  1FB8  00F2               	movwf	??__Umul8_16
  8971  1FB9  01F3               	clrf	??__Umul8_16+1
  8972  1FBA  0872               	movf	??__Umul8_16,w
  8973  1FBB  00F6               	movwf	__Umul8_16@word_mpld
  8974  1FBC  0873               	movf	??__Umul8_16+1,w
  8975  1FBD  00F7               	movwf	__Umul8_16@word_mpld+1
  8976  1FBE                     l2891:
  8977  1FBE  1C78               	btfss	__Umul8_16@multiplier,0
  8978  1FBF  2FC1               	goto	u3231
  8979  1FC0  2FC2               	goto	u3230
  8980  1FC1                     u3231:
  8981  1FC1  2FC6               	goto	l718
  8982  1FC2                     u3230:
  8983  1FC2                     l2893:
  8984  1FC2  0876               	movf	__Umul8_16@word_mpld,w
  8985  1FC3  07F4               	addwf	__Umul8_16@product,f
  8986  1FC4  0877               	movf	__Umul8_16@word_mpld+1,w
  8987  1FC5  3DF5               	addwfc	__Umul8_16@product+1,f
  8988  1FC6                     l718:
  8989  1FC6  3001               	movlw	1
  8990  1FC7                     u3245:
  8991  1FC7  35F6               	lslf	__Umul8_16@word_mpld,f
  8992  1FC8  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8993  1FC9  0B89               	decfsz	9,f
  8994  1FCA  2FC7               	goto	u3245
  8995  1FCB  1003               	clrc
  8996  1FCC  0CF8               	rrf	__Umul8_16@multiplier,f
  8997  1FCD                     l2895:
  8998  1FCD  0878               	movf	__Umul8_16@multiplier,w
  8999  1FCE  1D03               	btfss	3,2
  9000  1FCF  2FD1               	goto	u3251
  9001  1FD0  2FD2               	goto	u3250
  9002  1FD1                     u3251:
  9003  1FD1  2FBE               	goto	l2891
  9004  1FD2                     u3250:
  9005  1FD2                     l2897:
  9006  1FD2  0875               	movf	__Umul8_16@product+1,w
  9007  1FD3  00F1               	movwf	?__Umul8_16+1
  9008  1FD4  0874               	movf	__Umul8_16@product,w
  9009  1FD5  00F0               	movwf	?__Umul8_16
  9010  1FD6                     l720:
  9011  1FD6  0008               	return
  9012  1FD7                     __end_of__Umul8_16:
  9013                           
  9014                           	psect	text22
  9015  144D                     __ptext22:	
  9016 ;; *************** function ___flge *****************
  9017 ;; Defined at:
  9018 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;  ff1             4   26[BANK0 ] unsigned int 
  9021 ;;  ff2             4   30[BANK0 ] unsigned int 
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;		None
  9024 ;; Return value:  Size  Location     Type
  9025 ;;		None               void
  9026 ;; Registers used:
  9027 ;;		wreg, status,2, status,0
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9033 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;Total ram usage:       12 bytes
  9038 ;; Hardware stack levels used: 1
  9039 ;; This function calls:
  9040 ;;		Nothing
  9041 ;; This function is called by:
  9042 ;;		_efgtoa
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046  144D                     ___flge:	
  9047                           ;psect for function ___flge
  9048                           
  9049  144D                     l3047:	
  9050                           ;incstack = 0
  9051                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9052                           
  9053  144D  3000               	movlw	0
  9054  144E  0020               	movlb	0	; select bank0
  9055  144F  053A               	andwf	___flge@ff1,w
  9056  1450  00C2               	movwf	??___flge
  9057  1451  3000               	movlw	0
  9058  1452  053B               	andwf	___flge@ff1+1,w
  9059  1453  00C3               	movwf	??___flge+1
  9060  1454  3080               	movlw	128
  9061  1455  053C               	andwf	___flge@ff1+2,w
  9062  1456  00C4               	movwf	??___flge+2
  9063  1457  307F               	movlw	127
  9064  1458  053D               	andwf	___flge@ff1+3,w
  9065  1459  00C5               	movwf	??___flge+3
  9066  145A  0845               	movf	??___flge+3,w
  9067  145B  0444               	iorwf	??___flge+2,w
  9068  145C  0443               	iorwf	??___flge+1,w
  9069  145D  0442               	iorwf	??___flge,w
  9070  145E  1D03               	skipz
  9071  145F  2C61               	goto	u3601
  9072  1460  2C62               	goto	u3600
  9073  1461                     u3601:
  9074  1461  2C6A               	goto	l480
  9075  1462                     u3600:
  9076  1462                     l3049:
  9077  1462  3000               	movlw	0
  9078  1463  00BD               	movwf	___flge@ff1+3
  9079  1464  3000               	movlw	0
  9080  1465  00BC               	movwf	___flge@ff1+2
  9081  1466  3000               	movlw	0
  9082  1467  00BB               	movwf	___flge@ff1+1
  9083  1468  3000               	movlw	0
  9084  1469  00BA               	movwf	___flge@ff1
  9085  146A                     l480:
  9086  146A  3000               	movlw	0
  9087  146B  053E               	andwf	___flge@ff2,w
  9088  146C  00C2               	movwf	??___flge
  9089  146D  3000               	movlw	0
  9090  146E  053F               	andwf	___flge@ff2+1,w
  9091  146F  00C3               	movwf	??___flge+1
  9092  1470  3080               	movlw	128
  9093  1471  0540               	andwf	___flge@ff2+2,w
  9094  1472  00C4               	movwf	??___flge+2
  9095  1473  307F               	movlw	127
  9096  1474  0541               	andwf	___flge@ff2+3,w
  9097  1475  00C5               	movwf	??___flge+3
  9098  1476  0845               	movf	??___flge+3,w
  9099  1477  0444               	iorwf	??___flge+2,w
  9100  1478  0443               	iorwf	??___flge+1,w
  9101  1479  0442               	iorwf	??___flge,w
  9102  147A  1D03               	skipz
  9103  147B  2C7D               	goto	u3611
  9104  147C  2C7E               	goto	u3610
  9105  147D                     u3611:
  9106  147D  2C86               	goto	l3053
  9107  147E                     u3610:
  9108  147E                     l3051:
  9109  147E  3000               	movlw	0
  9110  147F  00C1               	movwf	___flge@ff2+3
  9111  1480  3000               	movlw	0
  9112  1481  00C0               	movwf	___flge@ff2+2
  9113  1482  3000               	movlw	0
  9114  1483  00BF               	movwf	___flge@ff2+1
  9115  1484  3000               	movlw	0
  9116  1485  00BE               	movwf	___flge@ff2
  9117  1486                     l3053:
  9118  1486  1FBD               	btfss	___flge@ff1+3,7
  9119  1487  2C89               	goto	u3621
  9120  1488  2C8A               	goto	u3620
  9121  1489                     u3621:
  9122  1489  2CA2               	goto	l3057
  9123  148A                     u3620:
  9124  148A                     l3055:
  9125  148A  3000               	movlw	0
  9126  148B  00C2               	movwf	??___flge
  9127  148C  3000               	movlw	0
  9128  148D  00C3               	movwf	??___flge+1
  9129  148E  3000               	movlw	0
  9130  148F  00C4               	movwf	??___flge+2
  9131  1490  3080               	movlw	128
  9132  1491  00C5               	movwf	??___flge+3
  9133  1492  083A               	movf	___flge@ff1,w
  9134  1493  02C2               	subwf	??___flge,f
  9135  1494  083B               	movf	___flge@ff1+1,w
  9136  1495  3BC3               	subwfb	??___flge+1,f
  9137  1496  083C               	movf	___flge@ff1+2,w
  9138  1497  3BC4               	subwfb	??___flge+2,f
  9139  1498  083D               	movf	___flge@ff1+3,w
  9140  1499  3BC5               	subwfb	??___flge+3,f
  9141  149A  0845               	movf	??___flge+3,w
  9142  149B  00BD               	movwf	___flge@ff1+3
  9143  149C  0844               	movf	??___flge+2,w
  9144  149D  00BC               	movwf	___flge@ff1+2
  9145  149E  0843               	movf	??___flge+1,w
  9146  149F  00BB               	movwf	___flge@ff1+1
  9147  14A0  0842               	movf	??___flge,w
  9148  14A1  00BA               	movwf	___flge@ff1
  9149  14A2                     l3057:
  9150  14A2  1FC1               	btfss	___flge@ff2+3,7
  9151  14A3  2CA5               	goto	u3631
  9152  14A4  2CA6               	goto	u3630
  9153  14A5                     u3631:
  9154  14A5  2CBE               	goto	l483
  9155  14A6                     u3630:
  9156  14A6                     l3059:
  9157  14A6  3000               	movlw	0
  9158  14A7  00C2               	movwf	??___flge
  9159  14A8  3000               	movlw	0
  9160  14A9  00C3               	movwf	??___flge+1
  9161  14AA  3000               	movlw	0
  9162  14AB  00C4               	movwf	??___flge+2
  9163  14AC  3080               	movlw	128
  9164  14AD  00C5               	movwf	??___flge+3
  9165  14AE  083E               	movf	___flge@ff2,w
  9166  14AF  02C2               	subwf	??___flge,f
  9167  14B0  083F               	movf	___flge@ff2+1,w
  9168  14B1  3BC3               	subwfb	??___flge+1,f
  9169  14B2  0840               	movf	___flge@ff2+2,w
  9170  14B3  3BC4               	subwfb	??___flge+2,f
  9171  14B4  0841               	movf	___flge@ff2+3,w
  9172  14B5  3BC5               	subwfb	??___flge+3,f
  9173  14B6  0845               	movf	??___flge+3,w
  9174  14B7  00C1               	movwf	___flge@ff2+3
  9175  14B8  0844               	movf	??___flge+2,w
  9176  14B9  00C0               	movwf	___flge@ff2+2
  9177  14BA  0843               	movf	??___flge+1,w
  9178  14BB  00BF               	movwf	___flge@ff2+1
  9179  14BC  0842               	movf	??___flge,w
  9180  14BD  00BE               	movwf	___flge@ff2
  9181  14BE                     l483:
  9182  14BE  3080               	movlw	128
  9183  14BF  06BD               	xorwf	___flge@ff1+3,f
  9184  14C0  3080               	movlw	128
  9185  14C1  06C1               	xorwf	___flge@ff2+3,f
  9186  14C2  0841               	movf	___flge@ff2+3,w
  9187  14C3  023D               	subwf	___flge@ff1+3,w
  9188  14C4  1D03               	skipz
  9189  14C5  2CD0               	goto	u3645
  9190  14C6  0840               	movf	___flge@ff2+2,w
  9191  14C7  023C               	subwf	___flge@ff1+2,w
  9192  14C8  1D03               	skipz
  9193  14C9  2CD0               	goto	u3645
  9194  14CA  083F               	movf	___flge@ff2+1,w
  9195  14CB  023B               	subwf	___flge@ff1+1,w
  9196  14CC  1D03               	skipz
  9197  14CD  2CD0               	goto	u3645
  9198  14CE  083E               	movf	___flge@ff2,w
  9199  14CF  023A               	subwf	___flge@ff1,w
  9200  14D0                     u3645:
  9201  14D0  1803               	skipnc
  9202  14D1  2CD3               	goto	u3641
  9203  14D2  2CD4               	goto	u3640
  9204  14D3                     u3641:
  9205  14D3  2CD6               	goto	l3063
  9206  14D4                     u3640:
  9207  14D4                     l3061:
  9208  14D4  1003               	clrc
  9209  14D5  2CD7               	goto	l488
  9210  14D6                     l3063:
  9211  14D6  1403               	setc
  9212  14D7                     l488:
  9213  14D7  0008               	return
  9214  14D8                     __end_of___flge:
  9215                           
  9216                           	psect	text23
  9217  10F9                     __ptext23:	
  9218 ;; *************** function ___fleq *****************
  9219 ;; Defined at:
  9220 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;  ff1             4    0[COMMON] unsigned int 
  9223 ;;  ff2             4    4[COMMON] unsigned int 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;		None
  9226 ;; Return value:  Size  Location     Type
  9227 ;;		None               void
  9228 ;; Registers used:
  9229 ;;		wreg, status,2, status,0
  9230 ;; Tracked objects:
  9231 ;;		On entry : 0/0
  9232 ;;		On exit  : 0/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9235 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;Total ram usage:       12 bytes
  9240 ;; Hardware stack levels used: 1
  9241 ;; This function calls:
  9242 ;;		Nothing
  9243 ;; This function is called by:
  9244 ;;		_efgtoa
  9245 ;; This function uses a non-reentrant model
  9246 ;;
  9247                           
  9248  10F9                     ___fleq:	
  9249                           ;psect for function ___fleq
  9250                           
  9251  10F9                     l3035:	
  9252                           ;incstack = 0
  9253                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9254                           
  9255  10F9  3000               	movlw	0
  9256  10FA  0570               	andwf	___fleq@ff1,w
  9257  10FB  00F8               	movwf	??___fleq
  9258  10FC  3000               	movlw	0
  9259  10FD  0571               	andwf	___fleq@ff1+1,w
  9260  10FE  00F9               	movwf	??___fleq+1
  9261  10FF  3080               	movlw	128
  9262  1100  0572               	andwf	___fleq@ff1+2,w
  9263  1101  00FA               	movwf	??___fleq+2
  9264  1102  307F               	movlw	127
  9265  1103  0573               	andwf	___fleq@ff1+3,w
  9266  1104  00FB               	movwf	??___fleq+3
  9267  1105  087B               	movf	??___fleq+3,w
  9268  1106  047A               	iorwf	??___fleq+2,w
  9269  1107  0479               	iorwf	??___fleq+1,w
  9270  1108  0478               	iorwf	??___fleq,w
  9271  1109  1D03               	skipz
  9272  110A  290C               	goto	u3571
  9273  110B  290D               	goto	u3570
  9274  110C                     u3571:
  9275  110C  2915               	goto	l471
  9276  110D                     u3570:
  9277  110D                     l3037:
  9278  110D  3000               	movlw	0
  9279  110E  00F3               	movwf	___fleq@ff1+3
  9280  110F  3000               	movlw	0
  9281  1110  00F2               	movwf	___fleq@ff1+2
  9282  1111  3000               	movlw	0
  9283  1112  00F1               	movwf	___fleq@ff1+1
  9284  1113  3000               	movlw	0
  9285  1114  00F0               	movwf	___fleq@ff1
  9286  1115                     l471:
  9287  1115  3000               	movlw	0
  9288  1116  0574               	andwf	___fleq@ff2,w
  9289  1117  00F8               	movwf	??___fleq
  9290  1118  3000               	movlw	0
  9291  1119  0575               	andwf	___fleq@ff2+1,w
  9292  111A  00F9               	movwf	??___fleq+1
  9293  111B  3080               	movlw	128
  9294  111C  0576               	andwf	___fleq@ff2+2,w
  9295  111D  00FA               	movwf	??___fleq+2
  9296  111E  307F               	movlw	127
  9297  111F  0577               	andwf	___fleq@ff2+3,w
  9298  1120  00FB               	movwf	??___fleq+3
  9299  1121  087B               	movf	??___fleq+3,w
  9300  1122  047A               	iorwf	??___fleq+2,w
  9301  1123  0479               	iorwf	??___fleq+1,w
  9302  1124  0478               	iorwf	??___fleq,w
  9303  1125  1D03               	skipz
  9304  1126  2928               	goto	u3581
  9305  1127  2929               	goto	u3580
  9306  1128                     u3581:
  9307  1128  2931               	goto	l472
  9308  1129                     u3580:
  9309  1129                     l3039:
  9310  1129  3000               	movlw	0
  9311  112A  00F7               	movwf	___fleq@ff2+3
  9312  112B  3000               	movlw	0
  9313  112C  00F6               	movwf	___fleq@ff2+2
  9314  112D  3000               	movlw	0
  9315  112E  00F5               	movwf	___fleq@ff2+1
  9316  112F  3000               	movlw	0
  9317  1130  00F4               	movwf	___fleq@ff2
  9318  1131                     l472:
  9319  1131  0877               	movf	___fleq@ff2+3,w
  9320  1132  0673               	xorwf	___fleq@ff1+3,w
  9321  1133  1D03               	skipz
  9322  1134  293F               	goto	u3595
  9323  1135  0876               	movf	___fleq@ff2+2,w
  9324  1136  0672               	xorwf	___fleq@ff1+2,w
  9325  1137  1D03               	skipz
  9326  1138  293F               	goto	u3595
  9327  1139  0875               	movf	___fleq@ff2+1,w
  9328  113A  0671               	xorwf	___fleq@ff1+1,w
  9329  113B  1D03               	skipz
  9330  113C  293F               	goto	u3595
  9331  113D  0874               	movf	___fleq@ff2,w
  9332  113E  0670               	xorwf	___fleq@ff1,w
  9333  113F                     u3595:
  9334  113F  1903               	skipnz
  9335  1140  2942               	goto	u3591
  9336  1141  2943               	goto	u3590
  9337  1142                     u3591:
  9338  1142  2945               	goto	l3043
  9339  1143                     u3590:
  9340  1143                     l3041:
  9341  1143  1003               	clrc
  9342  1144  2946               	goto	l477
  9343  1145                     l3043:
  9344  1145  1403               	setc
  9345  1146                     l477:
  9346  1146  0008               	return
  9347  1147                     __end_of___fleq:
  9348                           
  9349                           	psect	text24
  9350  164C                     __ptext24:	
  9351 ;; *************** function ___fldiv *****************
  9352 ;; Defined at:
  9353 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;  a               4    0[COMMON] unsigned int 
  9356 ;;  b               4    4[COMMON] unsigned int 
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;  grs             4    7[BANK0 ] unsigned long 
  9359 ;;  rem             4    0[BANK0 ] unsigned long 
  9360 ;;  new_exp         2    5[BANK0 ] int 
  9361 ;;  aexp            1   12[BANK0 ] unsigned char 
  9362 ;;  bexp            1   11[BANK0 ] unsigned char 
  9363 ;;  sign            1    4[BANK0 ] unsigned char 
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  4    0[COMMON] unsigned char 
  9366 ;; Registers used:
  9367 ;;		wreg, status,2, status,0
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9373 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9375 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9376 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9377 ;;Total ram usage:       26 bytes
  9378 ;; Hardware stack levels used: 1
  9379 ;; This function calls:
  9380 ;;		Nothing
  9381 ;; This function is called by:
  9382 ;;		_efgtoa
  9383 ;; This function uses a non-reentrant model
  9384 ;;
  9385                           
  9386  164C                     ___fldiv:	
  9387                           ;psect for function ___fldiv
  9388                           
  9389  164C                     l3117:	
  9390                           ;incstack = 0
  9391                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9392                           
  9393  164C  0877               	movf	___fldiv@b+3,w
  9394  164D  3980               	andlw	128
  9395  164E  00F8               	movwf	??___fldiv
  9396  164F  0878               	movf	??___fldiv,w
  9397  1650  0020               	movlb	0	; select bank0
  9398  1651  00A4               	movwf	___fldiv@sign
  9399  1652                     l3119:
  9400  1652  3577               	lslf	___fldiv@b+3,w
  9401  1653  00F8               	movwf	??___fldiv
  9402  1654  0878               	movf	??___fldiv,w
  9403  1655  00AB               	movwf	___fldiv@bexp
  9404  1656                     l3121:
  9405  1656  1FF6               	btfss	___fldiv@b+2,7
  9406  1657  2E59               	goto	u3761
  9407  1658  2E5A               	goto	u3760
  9408  1659                     u3761:
  9409  1659  2E5B               	goto	l3125
  9410  165A                     u3760:
  9411  165A                     l3123:
  9412  165A  142B               	bsf	___fldiv@bexp,0
  9413  165B                     l3125:
  9414  165B  082B               	movf	___fldiv@bexp,w
  9415  165C  1903               	btfsc	3,2
  9416  165D  2E5F               	goto	u3771
  9417  165E  2E60               	goto	u3770
  9418  165F                     u3771:
  9419  165F  2E70               	goto	l3135
  9420  1660                     u3770:
  9421  1660                     l3127:
  9422  1660  0A2B               	incf	___fldiv@bexp,w
  9423  1661  1D03               	btfss	3,2
  9424  1662  2E64               	goto	u3781
  9425  1663  2E65               	goto	u3780
  9426  1664                     u3781:
  9427  1664  2E6D               	goto	l3131
  9428  1665                     u3780:
  9429  1665                     l3129:
  9430  1665  3000               	movlw	0
  9431  1666  00F7               	movwf	___fldiv@b+3
  9432  1667  3000               	movlw	0
  9433  1668  00F6               	movwf	___fldiv@b+2
  9434  1669  3000               	movlw	0
  9435  166A  00F5               	movwf	___fldiv@b+1
  9436  166B  3000               	movlw	0
  9437  166C  00F4               	movwf	___fldiv@b
  9438  166D                     l3131:
  9439  166D  17F6               	bsf	___fldiv@b+2,7
  9440  166E                     l3133:
  9441  166E  01F7               	clrf	___fldiv@b+3
  9442  166F  2E78               	goto	l3137
  9443  1670                     l3135:
  9444  1670  3000               	movlw	0
  9445  1671  00F7               	movwf	___fldiv@b+3
  9446  1672  3000               	movlw	0
  9447  1673  00F6               	movwf	___fldiv@b+2
  9448  1674  3000               	movlw	0
  9449  1675  00F5               	movwf	___fldiv@b+1
  9450  1676  3000               	movlw	0
  9451  1677  00F4               	movwf	___fldiv@b
  9452  1678                     l3137:
  9453  1678  0873               	movf	___fldiv@a+3,w
  9454  1679  3980               	andlw	128
  9455  167A  00F8               	movwf	??___fldiv
  9456  167B  0878               	movf	??___fldiv,w
  9457  167C  06A4               	xorwf	___fldiv@sign,f
  9458  167D                     l3139:
  9459  167D  3573               	lslf	___fldiv@a+3,w
  9460  167E  00F8               	movwf	??___fldiv
  9461  167F  0878               	movf	??___fldiv,w
  9462  1680  00AC               	movwf	___fldiv@aexp
  9463  1681                     l3141:
  9464  1681  1FF2               	btfss	___fldiv@a+2,7
  9465  1682  2E84               	goto	u3791
  9466  1683  2E85               	goto	u3790
  9467  1684                     u3791:
  9468  1684  2E86               	goto	l3145
  9469  1685                     u3790:
  9470  1685                     l3143:
  9471  1685  142C               	bsf	___fldiv@aexp,0
  9472  1686                     l3145:
  9473  1686  082C               	movf	___fldiv@aexp,w
  9474  1687  1903               	btfsc	3,2
  9475  1688  2E8A               	goto	u3801
  9476  1689  2E8B               	goto	u3800
  9477  168A                     u3801:
  9478  168A  2E9B               	goto	l3155
  9479  168B                     u3800:
  9480  168B                     l3147:
  9481  168B  0A2C               	incf	___fldiv@aexp,w
  9482  168C  1D03               	btfss	3,2
  9483  168D  2E8F               	goto	u3811
  9484  168E  2E90               	goto	u3810
  9485  168F                     u3811:
  9486  168F  2E98               	goto	l3151
  9487  1690                     u3810:
  9488  1690                     l3149:
  9489  1690  3000               	movlw	0
  9490  1691  00F3               	movwf	___fldiv@a+3
  9491  1692  3000               	movlw	0
  9492  1693  00F2               	movwf	___fldiv@a+2
  9493  1694  3000               	movlw	0
  9494  1695  00F1               	movwf	___fldiv@a+1
  9495  1696  3000               	movlw	0
  9496  1697  00F0               	movwf	___fldiv@a
  9497  1698                     l3151:
  9498  1698  17F2               	bsf	___fldiv@a+2,7
  9499  1699                     l3153:
  9500  1699  01F3               	clrf	___fldiv@a+3
  9501  169A  2EA3               	goto	l659
  9502  169B                     l3155:
  9503  169B  3000               	movlw	0
  9504  169C  00F3               	movwf	___fldiv@a+3
  9505  169D  3000               	movlw	0
  9506  169E  00F2               	movwf	___fldiv@a+2
  9507  169F  3000               	movlw	0
  9508  16A0  00F1               	movwf	___fldiv@a+1
  9509  16A1  3000               	movlw	0
  9510  16A2  00F0               	movwf	___fldiv@a
  9511  16A3                     l659:
  9512  16A3  0873               	movf	___fldiv@a+3,w
  9513  16A4  0472               	iorwf	___fldiv@a+2,w
  9514  16A5  0471               	iorwf	___fldiv@a+1,w
  9515  16A6  0470               	iorwf	___fldiv@a,w
  9516  16A7  1D03               	skipz
  9517  16A8  2EAA               	goto	u3821
  9518  16A9  2EAB               	goto	u3820
  9519  16AA                     u3821:
  9520  16AA  2EC4               	goto	l3165
  9521  16AB                     u3820:
  9522  16AB                     l3157:
  9523  16AB  3000               	movlw	0
  9524  16AC  00F7               	movwf	___fldiv@b+3
  9525  16AD  3000               	movlw	0
  9526  16AE  00F6               	movwf	___fldiv@b+2
  9527  16AF  3000               	movlw	0
  9528  16B0  00F5               	movwf	___fldiv@b+1
  9529  16B1  3000               	movlw	0
  9530  16B2  00F4               	movwf	___fldiv@b
  9531  16B3  3080               	movlw	128
  9532  16B4  04F6               	iorwf	___fldiv@b+2,f
  9533  16B5  307F               	movlw	127
  9534  16B6  04F7               	iorwf	___fldiv@b+3,f
  9535  16B7                     l3159:
  9536  16B7  0824               	movf	___fldiv@sign,w
  9537  16B8  00F8               	movwf	??___fldiv
  9538  16B9  0878               	movf	??___fldiv,w
  9539  16BA  04F7               	iorwf	___fldiv@b+3,f
  9540  16BB                     l3161:
  9541  16BB  0877               	movf	___fldiv@b+3,w
  9542  16BC  00F3               	movwf	?___fldiv+3
  9543  16BD  0876               	movf	___fldiv@b+2,w
  9544  16BE  00F2               	movwf	?___fldiv+2
  9545  16BF  0875               	movf	___fldiv@b+1,w
  9546  16C0  00F1               	movwf	?___fldiv+1
  9547  16C1  0874               	movf	___fldiv@b,w
  9548  16C2  00F0               	movwf	?___fldiv
  9549  16C3  2FFF               	goto	l661
  9550  16C4                     l3165:
  9551  16C4  082B               	movf	___fldiv@bexp,w
  9552  16C5  1D03               	btfss	3,2
  9553  16C6  2EC8               	goto	u3831
  9554  16C7  2EC9               	goto	u3830
  9555  16C8                     u3831:
  9556  16C8  2ED2               	goto	l3171
  9557  16C9                     u3830:
  9558  16C9                     l3167:
  9559  16C9  3000               	movlw	0
  9560  16CA  00F3               	movwf	?___fldiv+3
  9561  16CB  3000               	movlw	0
  9562  16CC  00F2               	movwf	?___fldiv+2
  9563  16CD  3000               	movlw	0
  9564  16CE  00F1               	movwf	?___fldiv+1
  9565  16CF  3000               	movlw	0
  9566  16D0  00F0               	movwf	?___fldiv
  9567  16D1  2FFF               	goto	l661
  9568  16D2                     l3171:
  9569  16D2  082B               	movf	___fldiv@bexp,w
  9570  16D3  00F8               	movwf	??___fldiv
  9571  16D4  01F9               	clrf	??___fldiv+1
  9572  16D5  0879               	movf	??___fldiv+1,w
  9573  16D6  00FB               	movwf	??___fldiv+3
  9574  16D7  082C               	movf	___fldiv@aexp,w
  9575  16D8  0278               	subwf	??___fldiv,w
  9576  16D9  00FA               	movwf	??___fldiv+2
  9577  16DA  1C03               	skipc
  9578  16DB  03FB               	decf	??___fldiv+3,f
  9579  16DC  087A               	movf	??___fldiv+2,w
  9580  16DD  3E7F               	addlw	127
  9581  16DE  00A5               	movwf	___fldiv@new_exp
  9582  16DF  3000               	movlw	0
  9583  16E0  3D7B               	addwfc	??___fldiv+3,w
  9584  16E1  00A6               	movwf	___fldiv@new_exp+1
  9585  16E2                     l3173:
  9586  16E2  0877               	movf	___fldiv@b+3,w
  9587  16E3  00A3               	movwf	___fldiv@rem+3
  9588  16E4  0876               	movf	___fldiv@b+2,w
  9589  16E5  00A2               	movwf	___fldiv@rem+2
  9590  16E6  0875               	movf	___fldiv@b+1,w
  9591  16E7  00A1               	movwf	___fldiv@rem+1
  9592  16E8  0874               	movf	___fldiv@b,w
  9593  16E9  00A0               	movwf	___fldiv@rem
  9594  16EA                     l3175:
  9595  16EA  3000               	movlw	0
  9596  16EB  00F7               	movwf	___fldiv@b+3
  9597  16EC  3000               	movlw	0
  9598  16ED  00F6               	movwf	___fldiv@b+2
  9599  16EE  3000               	movlw	0
  9600  16EF  00F5               	movwf	___fldiv@b+1
  9601  16F0  3000               	movlw	0
  9602  16F1  00F4               	movwf	___fldiv@b
  9603  16F2                     l3177:
  9604  16F2  3000               	movlw	0
  9605  16F3  00AA               	movwf	___fldiv@grs+3
  9606  16F4  3000               	movlw	0
  9607  16F5  00A9               	movwf	___fldiv@grs+2
  9608  16F6  3000               	movlw	0
  9609  16F7  00A8               	movwf	___fldiv@grs+1
  9610  16F8  3000               	movlw	0
  9611  16F9  00A7               	movwf	___fldiv@grs
  9612  16FA                     l3179:
  9613  16FA  01AC               	clrf	___fldiv@aexp
  9614  16FB  2F3A               	goto	l3199
  9615  16FC                     l3181:
  9616  16FC  082C               	movf	___fldiv@aexp,w
  9617  16FD  1903               	btfsc	3,2
  9618  16FE  2F00               	goto	u3841
  9619  16FF  2F01               	goto	u3840
  9620  1700                     u3841:
  9621  1700  2F1B               	goto	l3191
  9622  1701                     u3840:
  9623  1701                     l3183:
  9624  1701  3001               	movlw	1
  9625  1702                     u3855:
  9626  1702  35A0               	lslf	___fldiv@rem,f
  9627  1703  0DA1               	rlf	___fldiv@rem+1,f
  9628  1704  0DA2               	rlf	___fldiv@rem+2,f
  9629  1705  0DA3               	rlf	___fldiv@rem+3,f
  9630  1706  0B89               	decfsz	9,f
  9631  1707  2F02               	goto	u3855
  9632  1708  3001               	movlw	1
  9633  1709                     u3865:
  9634  1709  35F4               	lslf	___fldiv@b,f
  9635  170A  0DF5               	rlf	___fldiv@b+1,f
  9636  170B  0DF6               	rlf	___fldiv@b+2,f
  9637  170C  0DF7               	rlf	___fldiv@b+3,f
  9638  170D  0B89               	decfsz	9,f
  9639  170E  2F09               	goto	u3865
  9640  170F                     l3185:
  9641  170F  1FAA               	btfss	___fldiv@grs+3,7
  9642  1710  2F12               	goto	u3871
  9643  1711  2F13               	goto	u3870
  9644  1712                     u3871:
  9645  1712  2F14               	goto	l3189
  9646  1713                     u3870:
  9647  1713                     l3187:
  9648  1713  1474               	bsf	___fldiv@b,0
  9649  1714                     l3189:
  9650  1714  3001               	movlw	1
  9651  1715                     u3885:
  9652  1715  35A7               	lslf	___fldiv@grs,f
  9653  1716  0DA8               	rlf	___fldiv@grs+1,f
  9654  1717  0DA9               	rlf	___fldiv@grs+2,f
  9655  1718  0DAA               	rlf	___fldiv@grs+3,f
  9656  1719  0B89               	decfsz	9,f
  9657  171A  2F15               	goto	u3885
  9658  171B                     l3191:
  9659  171B  0873               	movf	___fldiv@a+3,w
  9660  171C  0223               	subwf	___fldiv@rem+3,w
  9661  171D  1D03               	skipz
  9662  171E  2F29               	goto	u3895
  9663  171F  0872               	movf	___fldiv@a+2,w
  9664  1720  0222               	subwf	___fldiv@rem+2,w
  9665  1721  1D03               	skipz
  9666  1722  2F29               	goto	u3895
  9667  1723  0871               	movf	___fldiv@a+1,w
  9668  1724  0221               	subwf	___fldiv@rem+1,w
  9669  1725  1D03               	skipz
  9670  1726  2F29               	goto	u3895
  9671  1727  0870               	movf	___fldiv@a,w
  9672  1728  0220               	subwf	___fldiv@rem,w
  9673  1729                     u3895:
  9674  1729  1C03               	skipc
  9675  172A  2F2C               	goto	u3891
  9676  172B  2F2D               	goto	u3890
  9677  172C                     u3891:
  9678  172C  2F36               	goto	l3197
  9679  172D                     u3890:
  9680  172D                     l3193:
  9681  172D  172A               	bsf	___fldiv@grs+3,6
  9682  172E                     l3195:
  9683  172E  0870               	movf	___fldiv@a,w
  9684  172F  02A0               	subwf	___fldiv@rem,f
  9685  1730  0871               	movf	___fldiv@a+1,w
  9686  1731  3BA1               	subwfb	___fldiv@rem+1,f
  9687  1732  0872               	movf	___fldiv@a+2,w
  9688  1733  3BA2               	subwfb	___fldiv@rem+2,f
  9689  1734  0873               	movf	___fldiv@a+3,w
  9690  1735  3BA3               	subwfb	___fldiv@rem+3,f
  9691  1736                     l3197:
  9692  1736  3001               	movlw	1
  9693  1737  00F8               	movwf	??___fldiv
  9694  1738  0878               	movf	??___fldiv,w
  9695  1739  07AC               	addwf	___fldiv@aexp,f
  9696  173A                     l3199:
  9697  173A  301A               	movlw	26
  9698  173B  022C               	subwf	___fldiv@aexp,w
  9699  173C  1C03               	skipc
  9700  173D  2F3F               	goto	u3901
  9701  173E  2F40               	goto	u3900
  9702  173F                     u3901:
  9703  173F  2EFC               	goto	l3181
  9704  1740                     u3900:
  9705  1740                     l3201:
  9706  1740  0823               	movf	___fldiv@rem+3,w
  9707  1741  0422               	iorwf	___fldiv@rem+2,w
  9708  1742  0421               	iorwf	___fldiv@rem+1,w
  9709  1743  0420               	iorwf	___fldiv@rem,w
  9710  1744  1903               	skipnz
  9711  1745  2F47               	goto	u3911
  9712  1746  2F48               	goto	u3910
  9713  1747                     u3911:
  9714  1747  2F61               	goto	l3215
  9715  1748                     u3910:
  9716  1748                     l3203:
  9717  1748  1427               	bsf	___fldiv@grs,0
  9718  1749  2F61               	goto	l3215
  9719  174A                     l3205:
  9720  174A  3001               	movlw	1
  9721  174B                     u3925:
  9722  174B  35F4               	lslf	___fldiv@b,f
  9723  174C  0DF5               	rlf	___fldiv@b+1,f
  9724  174D  0DF6               	rlf	___fldiv@b+2,f
  9725  174E  0DF7               	rlf	___fldiv@b+3,f
  9726  174F  0B89               	decfsz	9,f
  9727  1750  2F4B               	goto	u3925
  9728  1751                     l3207:
  9729  1751  1FAA               	btfss	___fldiv@grs+3,7
  9730  1752  2F54               	goto	u3931
  9731  1753  2F55               	goto	u3930
  9732  1754                     u3931:
  9733  1754  2F56               	goto	l3211
  9734  1755                     u3930:
  9735  1755                     l3209:
  9736  1755  1474               	bsf	___fldiv@b,0
  9737  1756                     l3211:
  9738  1756  3001               	movlw	1
  9739  1757                     u3945:
  9740  1757  35A7               	lslf	___fldiv@grs,f
  9741  1758  0DA8               	rlf	___fldiv@grs+1,f
  9742  1759  0DA9               	rlf	___fldiv@grs+2,f
  9743  175A  0DAA               	rlf	___fldiv@grs+3,f
  9744  175B  0B89               	decfsz	9,f
  9745  175C  2F57               	goto	u3945
  9746  175D                     l3213:
  9747  175D  30FF               	movlw	255
  9748  175E  07A5               	addwf	___fldiv@new_exp,f
  9749  175F  30FF               	movlw	255
  9750  1760  3DA6               	addwfc	___fldiv@new_exp+1,f
  9751  1761                     l3215:
  9752  1761  1FF6               	btfss	___fldiv@b+2,7
  9753  1762  2F64               	goto	u3951
  9754  1763  2F65               	goto	u3950
  9755  1764                     u3951:
  9756  1764  2F4A               	goto	l3205
  9757  1765                     u3950:
  9758  1765                     l3217:
  9759  1765  01AC               	clrf	___fldiv@aexp
  9760  1766                     l3219:
  9761  1766  1FAA               	btfss	___fldiv@grs+3,7
  9762  1767  2F69               	goto	u3961
  9763  1768  2F6A               	goto	u3960
  9764  1769                     u3961:
  9765  1769  2F86               	goto	l3227
  9766  176A                     u3960:
  9767  176A                     l3221:
  9768  176A  30FF               	movlw	255
  9769  176B  0527               	andwf	___fldiv@grs,w
  9770  176C  00F8               	movwf	??___fldiv
  9771  176D  30FF               	movlw	255
  9772  176E  0528               	andwf	___fldiv@grs+1,w
  9773  176F  00F9               	movwf	??___fldiv+1
  9774  1770  30FF               	movlw	255
  9775  1771  0529               	andwf	___fldiv@grs+2,w
  9776  1772  00FA               	movwf	??___fldiv+2
  9777  1773  307F               	movlw	127
  9778  1774  052A               	andwf	___fldiv@grs+3,w
  9779  1775  00FB               	movwf	??___fldiv+3
  9780  1776  087B               	movf	??___fldiv+3,w
  9781  1777  047A               	iorwf	??___fldiv+2,w
  9782  1778  0479               	iorwf	??___fldiv+1,w
  9783  1779  0478               	iorwf	??___fldiv,w
  9784  177A  1903               	skipnz
  9785  177B  2F7D               	goto	u3971
  9786  177C  2F7E               	goto	u3970
  9787  177D                     u3971:
  9788  177D  2F81               	goto	l675
  9789  177E                     u3970:
  9790  177E                     l3223:
  9791  177E  01AC               	clrf	___fldiv@aexp
  9792  177F  0AAC               	incf	___fldiv@aexp,f
  9793  1780  2F86               	goto	l3227
  9794  1781                     l675:
  9795  1781  1C74               	btfss	___fldiv@b,0
  9796  1782  2F84               	goto	u3981
  9797  1783  2F85               	goto	u3980
  9798  1784                     u3981:
  9799  1784  2F86               	goto	l3227
  9800  1785                     u3980:
  9801  1785  2F7E               	goto	l3223
  9802  1786                     l3227:
  9803  1786  082C               	movf	___fldiv@aexp,w
  9804  1787  1903               	btfsc	3,2
  9805  1788  2F8A               	goto	u3991
  9806  1789  2F8B               	goto	u3990
  9807  178A                     u3991:
  9808  178A  2FB3               	goto	l3237
  9809  178B                     u3990:
  9810  178B                     l3229:
  9811  178B  3001               	movlw	1
  9812  178C  07F4               	addwf	___fldiv@b,f
  9813  178D  3000               	movlw	0
  9814  178E  3DF5               	addwfc	___fldiv@b+1,f
  9815  178F  3000               	movlw	0
  9816  1790  3DF6               	addwfc	___fldiv@b+2,f
  9817  1791  3000               	movlw	0
  9818  1792  3DF7               	addwfc	___fldiv@b+3,f
  9819  1793                     l3231:
  9820  1793  1C77               	btfss	___fldiv@b+3,0
  9821  1794  2F96               	goto	u4001
  9822  1795  2F97               	goto	u4000
  9823  1796                     u4001:
  9824  1796  2FB3               	goto	l3237
  9825  1797                     u4000:
  9826  1797                     l3233:
  9827  1797  0874               	movf	___fldiv@b,w
  9828  1798  00F8               	movwf	??___fldiv
  9829  1799  0875               	movf	___fldiv@b+1,w
  9830  179A  00F9               	movwf	??___fldiv+1
  9831  179B  0876               	movf	___fldiv@b+2,w
  9832  179C  00FA               	movwf	??___fldiv+2
  9833  179D  0877               	movf	___fldiv@b+3,w
  9834  179E  00FB               	movwf	??___fldiv+3
  9835  179F  3001               	movlw	1
  9836  17A0  00FC               	movwf	??___fldiv+4
  9837  17A1                     u4015:
  9838  17A1  37FB               	asrf	??___fldiv+3,f
  9839  17A2  0CFA               	rrf	??___fldiv+2,f
  9840  17A3  0CF9               	rrf	??___fldiv+1,f
  9841  17A4  0CF8               	rrf	??___fldiv,f
  9842  17A5                     u4010:
  9843  17A5  0BFC               	decfsz	??___fldiv+4,f
  9844  17A6  2FA1               	goto	u4015
  9845  17A7  087B               	movf	??___fldiv+3,w
  9846  17A8  00F7               	movwf	___fldiv@b+3
  9847  17A9  087A               	movf	??___fldiv+2,w
  9848  17AA  00F6               	movwf	___fldiv@b+2
  9849  17AB  0879               	movf	??___fldiv+1,w
  9850  17AC  00F5               	movwf	___fldiv@b+1
  9851  17AD  0878               	movf	??___fldiv,w
  9852  17AE  00F4               	movwf	___fldiv@b
  9853  17AF                     l3235:
  9854  17AF  3001               	movlw	1
  9855  17B0  07A5               	addwf	___fldiv@new_exp,f
  9856  17B1  3000               	movlw	0
  9857  17B2  3DA6               	addwfc	___fldiv@new_exp+1,f
  9858  17B3                     l3237:
  9859  17B3  0826               	movf	___fldiv@new_exp+1,w
  9860  17B4  3A80               	xorlw	128
  9861  17B5  00F8               	movwf	??___fldiv
  9862  17B6  3080               	movlw	128
  9863  17B7  0278               	subwf	??___fldiv,w
  9864  17B8  1D03               	skipz
  9865  17B9  2FBC               	goto	u4025
  9866  17BA  30FF               	movlw	255
  9867  17BB  0225               	subwf	___fldiv@new_exp,w
  9868  17BC                     u4025:
  9869  17BC  1C03               	skipc
  9870  17BD  2FBF               	goto	u4021
  9871  17BE  2FC0               	goto	u4020
  9872  17BF                     u4021:
  9873  17BF  2FCD               	goto	l680
  9874  17C0                     u4020:
  9875  17C0                     l3239:
  9876  17C0  30FF               	movlw	255
  9877  17C1  0020               	movlb	0	; select bank0
  9878  17C2  00A5               	movwf	___fldiv@new_exp
  9879  17C3  3000               	movlw	0
  9880  17C4  00A6               	movwf	___fldiv@new_exp+1
  9881  17C5  3000               	movlw	0
  9882  17C6  00F7               	movwf	___fldiv@b+3
  9883  17C7  3000               	movlw	0
  9884  17C8  00F6               	movwf	___fldiv@b+2
  9885  17C9  3000               	movlw	0
  9886  17CA  00F5               	movwf	___fldiv@b+1
  9887  17CB  3000               	movlw	0
  9888  17CC  00F4               	movwf	___fldiv@b
  9889  17CD                     l680:
  9890  17CD  0020               	movlb	0	; select bank0
  9891  17CE  0826               	movf	___fldiv@new_exp+1,w
  9892  17CF  3A80               	xorlw	128
  9893  17D0  00F8               	movwf	??___fldiv
  9894  17D1  3080               	movlw	128
  9895  17D2  0278               	subwf	??___fldiv,w
  9896  17D3  1D03               	skipz
  9897  17D4  2FD7               	goto	u4035
  9898  17D5  3001               	movlw	1
  9899  17D6  0225               	subwf	___fldiv@new_exp,w
  9900  17D7                     u4035:
  9901  17D7  1803               	skipnc
  9902  17D8  2FDA               	goto	u4031
  9903  17D9  2FDB               	goto	u4030
  9904  17DA                     u4031:
  9905  17DA  2FE7               	goto	l681
  9906  17DB                     u4030:
  9907  17DB                     l3241:
  9908  17DB  0020               	movlb	0	; select bank0
  9909  17DC  01A5               	clrf	___fldiv@new_exp
  9910  17DD  01A6               	clrf	___fldiv@new_exp+1
  9911  17DE                     l3243:
  9912  17DE  3000               	movlw	0
  9913  17DF  00F7               	movwf	___fldiv@b+3
  9914  17E0  3000               	movlw	0
  9915  17E1  00F6               	movwf	___fldiv@b+2
  9916  17E2  3000               	movlw	0
  9917  17E3  00F5               	movwf	___fldiv@b+1
  9918  17E4  3000               	movlw	0
  9919  17E5  00F4               	movwf	___fldiv@b
  9920  17E6                     l3245:
  9921  17E6  01A4               	clrf	___fldiv@sign
  9922  17E7                     l681:
  9923  17E7  0020               	movlb	0	; select bank0
  9924  17E8  0825               	movf	___fldiv@new_exp,w
  9925  17E9  00F8               	movwf	??___fldiv
  9926  17EA  0878               	movf	??___fldiv,w
  9927  17EB  00AB               	movwf	___fldiv@bexp
  9928  17EC                     l3247:
  9929  17EC  1C2B               	btfss	___fldiv@bexp,0
  9930  17ED  2FEF               	goto	u4041
  9931  17EE  2FF0               	goto	u4040
  9932  17EF                     u4041:
  9933  17EF  2FF2               	goto	l3251
  9934  17F0                     u4040:
  9935  17F0                     l3249:
  9936  17F0  17F6               	bsf	___fldiv@b+2,7
  9937  17F1  2FF6               	goto	l683
  9938  17F2                     l3251:
  9939  17F2  307F               	movlw	127
  9940  17F3  00F8               	movwf	??___fldiv
  9941  17F4  0878               	movf	??___fldiv,w
  9942  17F5  05F6               	andwf	___fldiv@b+2,f
  9943  17F6                     l683:
  9944  17F6  362B               	lsrf	___fldiv@bexp,w
  9945  17F7  00F8               	movwf	??___fldiv
  9946  17F8  0878               	movf	??___fldiv,w
  9947  17F9  00F7               	movwf	___fldiv@b+3
  9948  17FA  0824               	movf	___fldiv@sign,w
  9949  17FB  00F8               	movwf	??___fldiv
  9950  17FC  0878               	movf	??___fldiv,w
  9951  17FD  04F7               	iorwf	___fldiv@b+3,f
  9952  17FE  2EBB               	goto	l3161
  9953  17FF                     l661:
  9954  17FF  0008               	return
  9955  1800                     __end_of___fldiv:
  9956                           
  9957                           	psect	text25
  9958  1147                     __ptext25:	
  9959 ;; *************** function ___awmod *****************
  9960 ;; Defined at:
  9961 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;  divisor         2    0[COMMON] int 
  9964 ;;  dividend        2    2[COMMON] int 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;  sign            1    6[COMMON] unsigned char 
  9967 ;;  counter         1    5[COMMON] unsigned char 
  9968 ;; Return value:  Size  Location     Type
  9969 ;;                  2    0[COMMON] int 
  9970 ;; Registers used:
  9971 ;;		wreg, status,2, status,0
  9972 ;; Tracked objects:
  9973 ;;		On entry : 0/0
  9974 ;;		On exit  : 0/0
  9975 ;;		Unchanged: 0/0
  9976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9980 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9981 ;;Total ram usage:        7 bytes
  9982 ;; Hardware stack levels used: 1
  9983 ;; This function calls:
  9984 ;;		Nothing
  9985 ;; This function is called by:
  9986 ;;		_efgtoa
  9987 ;; This function uses a non-reentrant model
  9988 ;;
  9989                           
  9990  1147                     ___awmod:	
  9991                           ;psect for function ___awmod
  9992                           
  9993  1147                     l2997:	
  9994                           ;incstack = 0
  9995                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9996                           
  9997  1147  01F6               	clrf	___awmod@sign
  9998  1148                     l2999:
  9999  1148  1FF3               	btfss	___awmod@dividend+1,7
 10000  1149  294B               	goto	u3481
 10001  114A  294C               	goto	u3480
 10002  114B                     u3481:
 10003  114B  2953               	goto	l3005
 10004  114C                     u3480:
 10005  114C                     l3001:
 10006  114C  09F2               	comf	___awmod@dividend,f
 10007  114D  09F3               	comf	___awmod@dividend+1,f
 10008  114E  0AF2               	incf	___awmod@dividend,f
 10009  114F  1903               	skipnz
 10010  1150  0AF3               	incf	___awmod@dividend+1,f
 10011  1151                     l3003:
 10012  1151  01F6               	clrf	___awmod@sign
 10013  1152  0AF6               	incf	___awmod@sign,f
 10014  1153                     l3005:
 10015  1153  1FF1               	btfss	___awmod@divisor+1,7
 10016  1154  2956               	goto	u3491
 10017  1155  2957               	goto	u3490
 10018  1156                     u3491:
 10019  1156  295C               	goto	l3009
 10020  1157                     u3490:
 10021  1157                     l3007:
 10022  1157  09F0               	comf	___awmod@divisor,f
 10023  1158  09F1               	comf	___awmod@divisor+1,f
 10024  1159  0AF0               	incf	___awmod@divisor,f
 10025  115A  1903               	skipnz
 10026  115B  0AF1               	incf	___awmod@divisor+1,f
 10027  115C                     l3009:
 10028  115C  0870               	movf	___awmod@divisor,w
 10029  115D  0471               	iorwf	___awmod@divisor+1,w
 10030  115E  1903               	btfsc	3,2
 10031  115F  2961               	goto	u3501
 10032  1160  2962               	goto	u3500
 10033  1161                     u3501:
 10034  1161  298B               	goto	l3027
 10035  1162                     u3500:
 10036  1162                     l3011:
 10037  1162  01F5               	clrf	___awmod@counter
 10038  1163  0AF5               	incf	___awmod@counter,f
 10039  1164  296E               	goto	l3017
 10040  1165                     l3013:
 10041  1165  3001               	movlw	1
 10042  1166                     u3515:
 10043  1166  35F0               	lslf	___awmod@divisor,f
 10044  1167  0DF1               	rlf	___awmod@divisor+1,f
 10045  1168  0B89               	decfsz	9,f
 10046  1169  2966               	goto	u3515
 10047  116A                     l3015:
 10048  116A  3001               	movlw	1
 10049  116B  00F4               	movwf	??___awmod
 10050  116C  0874               	movf	??___awmod,w
 10051  116D  07F5               	addwf	___awmod@counter,f
 10052  116E                     l3017:
 10053  116E  1FF1               	btfss	___awmod@divisor+1,7
 10054  116F  2971               	goto	u3521
 10055  1170  2972               	goto	u3520
 10056  1171                     u3521:
 10057  1171  2965               	goto	l3013
 10058  1172                     u3520:
 10059  1172                     l3019:
 10060  1172  0871               	movf	___awmod@divisor+1,w
 10061  1173  0273               	subwf	___awmod@dividend+1,w
 10062  1174  1D03               	skipz
 10063  1175  2978               	goto	u3535
 10064  1176  0870               	movf	___awmod@divisor,w
 10065  1177  0272               	subwf	___awmod@dividend,w
 10066  1178                     u3535:
 10067  1178  1C03               	skipc
 10068  1179  297B               	goto	u3531
 10069  117A  297C               	goto	u3530
 10070  117B                     u3531:
 10071  117B  2980               	goto	l3023
 10072  117C                     u3530:
 10073  117C                     l3021:
 10074  117C  0870               	movf	___awmod@divisor,w
 10075  117D  02F2               	subwf	___awmod@dividend,f
 10076  117E  0871               	movf	___awmod@divisor+1,w
 10077  117F  3BF3               	subwfb	___awmod@dividend+1,f
 10078  1180                     l3023:
 10079  1180  3001               	movlw	1
 10080  1181                     u3545:
 10081  1181  36F1               	lsrf	___awmod@divisor+1,f
 10082  1182  0CF0               	rrf	___awmod@divisor,f
 10083  1183  0B89               	decfsz	9,f
 10084  1184  2981               	goto	u3545
 10085  1185                     l3025:
 10086  1185  3001               	movlw	1
 10087  1186  02F5               	subwf	___awmod@counter,f
 10088  1187  1D03               	btfss	3,2
 10089  1188  298A               	goto	u3551
 10090  1189  298B               	goto	u3550
 10091  118A                     u3551:
 10092  118A  2972               	goto	l3019
 10093  118B                     u3550:
 10094  118B                     l3027:
 10095  118B  0876               	movf	___awmod@sign,w
 10096  118C  1903               	btfsc	3,2
 10097  118D  298F               	goto	u3561
 10098  118E  2990               	goto	u3560
 10099  118F                     u3561:
 10100  118F  2995               	goto	l3031
 10101  1190                     u3560:
 10102  1190                     l3029:
 10103  1190  09F2               	comf	___awmod@dividend,f
 10104  1191  09F3               	comf	___awmod@dividend+1,f
 10105  1192  0AF2               	incf	___awmod@dividend,f
 10106  1193  1903               	skipnz
 10107  1194  0AF3               	incf	___awmod@dividend+1,f
 10108  1195                     l3031:
 10109  1195  0873               	movf	___awmod@dividend+1,w
 10110  1196  00F1               	movwf	?___awmod+1
 10111  1197  0872               	movf	___awmod@dividend,w
 10112  1198  00F0               	movwf	?___awmod
 10113  1199                     l468:
 10114  1199  0008               	return
 10115  119A                     __end_of___awmod:
 10116                           
 10117                           	psect	text26
 10118  12FB                     __ptext26:	
 10119 ;; *************** function ___awdiv *****************
 10120 ;; Defined at:
 10121 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  divisor         2    0[COMMON] int 
 10124 ;;  dividend        2    2[COMMON] int 
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;  quotient        2    7[COMMON] int 
 10127 ;;  sign            1    6[COMMON] unsigned char 
 10128 ;;  counter         1    5[COMMON] unsigned char 
 10129 ;; Return value:  Size  Location     Type
 10130 ;;                  2    0[COMMON] int 
 10131 ;; Registers used:
 10132 ;;		wreg, status,2, status,0
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10141 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;Total ram usage:        9 bytes
 10143 ;; Hardware stack levels used: 1
 10144 ;; This function calls:
 10145 ;;		Nothing
 10146 ;; This function is called by:
 10147 ;;		_efgtoa
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151  12FB                     ___awdiv:	
 10152                           ;psect for function ___awdiv
 10153                           
 10154  12FB                     l2953:	
 10155                           ;incstack = 0
 10156                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10157                           
 10158  12FB  01F6               	clrf	___awdiv@sign
 10159  12FC                     l2955:
 10160  12FC  1FF1               	btfss	___awdiv@divisor+1,7
 10161  12FD  2AFF               	goto	u3381
 10162  12FE  2B00               	goto	u3380
 10163  12FF                     u3381:
 10164  12FF  2B07               	goto	l2961
 10165  1300                     u3380:
 10166  1300                     l2957:
 10167  1300  09F0               	comf	___awdiv@divisor,f
 10168  1301  09F1               	comf	___awdiv@divisor+1,f
 10169  1302  0AF0               	incf	___awdiv@divisor,f
 10170  1303  1903               	skipnz
 10171  1304  0AF1               	incf	___awdiv@divisor+1,f
 10172  1305                     l2959:
 10173  1305  01F6               	clrf	___awdiv@sign
 10174  1306  0AF6               	incf	___awdiv@sign,f
 10175  1307                     l2961:
 10176  1307  1FF3               	btfss	___awdiv@dividend+1,7
 10177  1308  2B0A               	goto	u3391
 10178  1309  2B0B               	goto	u3390
 10179  130A                     u3391:
 10180  130A  2B14               	goto	l2967
 10181  130B                     u3390:
 10182  130B                     l2963:
 10183  130B  09F2               	comf	___awdiv@dividend,f
 10184  130C  09F3               	comf	___awdiv@dividend+1,f
 10185  130D  0AF2               	incf	___awdiv@dividend,f
 10186  130E  1903               	skipnz
 10187  130F  0AF3               	incf	___awdiv@dividend+1,f
 10188  1310                     l2965:
 10189  1310  3001               	movlw	1
 10190  1311  00F4               	movwf	??___awdiv
 10191  1312  0874               	movf	??___awdiv,w
 10192  1313  06F6               	xorwf	___awdiv@sign,f
 10193  1314                     l2967:
 10194  1314  01F7               	clrf	___awdiv@quotient
 10195  1315  01F8               	clrf	___awdiv@quotient+1
 10196  1316                     l2969:
 10197  1316  0870               	movf	___awdiv@divisor,w
 10198  1317  0471               	iorwf	___awdiv@divisor+1,w
 10199  1318  1903               	btfsc	3,2
 10200  1319  2B1B               	goto	u3401
 10201  131A  2B1C               	goto	u3400
 10202  131B                     u3401:
 10203  131B  2B4B               	goto	l2989
 10204  131C                     u3400:
 10205  131C                     l2971:
 10206  131C  01F5               	clrf	___awdiv@counter
 10207  131D  0AF5               	incf	___awdiv@counter,f
 10208  131E  2B28               	goto	l2977
 10209  131F                     l2973:
 10210  131F  3001               	movlw	1
 10211  1320                     u3415:
 10212  1320  35F0               	lslf	___awdiv@divisor,f
 10213  1321  0DF1               	rlf	___awdiv@divisor+1,f
 10214  1322  0B89               	decfsz	9,f
 10215  1323  2B20               	goto	u3415
 10216  1324                     l2975:
 10217  1324  3001               	movlw	1
 10218  1325  00F4               	movwf	??___awdiv
 10219  1326  0874               	movf	??___awdiv,w
 10220  1327  07F5               	addwf	___awdiv@counter,f
 10221  1328                     l2977:
 10222  1328  1FF1               	btfss	___awdiv@divisor+1,7
 10223  1329  2B2B               	goto	u3421
 10224  132A  2B2C               	goto	u3420
 10225  132B                     u3421:
 10226  132B  2B1F               	goto	l2973
 10227  132C                     u3420:
 10228  132C                     l2979:
 10229  132C  3001               	movlw	1
 10230  132D                     u3435:
 10231  132D  35F7               	lslf	___awdiv@quotient,f
 10232  132E  0DF8               	rlf	___awdiv@quotient+1,f
 10233  132F  0B89               	decfsz	9,f
 10234  1330  2B2D               	goto	u3435
 10235  1331  0871               	movf	___awdiv@divisor+1,w
 10236  1332  0273               	subwf	___awdiv@dividend+1,w
 10237  1333  1D03               	skipz
 10238  1334  2B37               	goto	u3445
 10239  1335  0870               	movf	___awdiv@divisor,w
 10240  1336  0272               	subwf	___awdiv@dividend,w
 10241  1337                     u3445:
 10242  1337  1C03               	skipc
 10243  1338  2B3A               	goto	u3441
 10244  1339  2B3B               	goto	u3440
 10245  133A                     u3441:
 10246  133A  2B40               	goto	l2985
 10247  133B                     u3440:
 10248  133B                     l2981:
 10249  133B  0870               	movf	___awdiv@divisor,w
 10250  133C  02F2               	subwf	___awdiv@dividend,f
 10251  133D  0871               	movf	___awdiv@divisor+1,w
 10252  133E  3BF3               	subwfb	___awdiv@dividend+1,f
 10253  133F                     l2983:
 10254  133F  1477               	bsf	___awdiv@quotient,0
 10255  1340                     l2985:
 10256  1340  3001               	movlw	1
 10257  1341                     u3455:
 10258  1341  36F1               	lsrf	___awdiv@divisor+1,f
 10259  1342  0CF0               	rrf	___awdiv@divisor,f
 10260  1343  0B89               	decfsz	9,f
 10261  1344  2B41               	goto	u3455
 10262  1345                     l2987:
 10263  1345  3001               	movlw	1
 10264  1346  02F5               	subwf	___awdiv@counter,f
 10265  1347  1D03               	btfss	3,2
 10266  1348  2B4A               	goto	u3461
 10267  1349  2B4B               	goto	u3460
 10268  134A                     u3461:
 10269  134A  2B2C               	goto	l2979
 10270  134B                     u3460:
 10271  134B                     l2989:
 10272  134B  0876               	movf	___awdiv@sign,w
 10273  134C  1903               	btfsc	3,2
 10274  134D  2B4F               	goto	u3471
 10275  134E  2B50               	goto	u3470
 10276  134F                     u3471:
 10277  134F  2B55               	goto	l2993
 10278  1350                     u3470:
 10279  1350                     l2991:
 10280  1350  09F7               	comf	___awdiv@quotient,f
 10281  1351  09F8               	comf	___awdiv@quotient+1,f
 10282  1352  0AF7               	incf	___awdiv@quotient,f
 10283  1353  1903               	skipnz
 10284  1354  0AF8               	incf	___awdiv@quotient+1,f
 10285  1355                     l2993:
 10286  1355  0878               	movf	___awdiv@quotient+1,w
 10287  1356  00F1               	movwf	?___awdiv+1
 10288  1357  0877               	movf	___awdiv@quotient,w
 10289  1358  00F0               	movwf	?___awdiv
 10290  1359                     l455:
 10291  1359  0008               	return
 10292  135A                     __end_of___awdiv:
 10293                           
 10294                           	psect	text27
 10295  14D8                     __ptext27:	
 10296 ;; *************** function _atoi *****************
 10297 ;; Defined at:
 10298 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  s               2    6[COMMON] PTR const unsigned char 
 10301 ;;		 -> STR_2(12), STR_1(11), 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;  n               2    2[BANK0 ] int 
 10304 ;;  neg             2    0[BANK0 ] int 
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  2    6[COMMON] int 
 10307 ;; Registers used:
 10308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10315 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10316 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10317 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10318 ;;Total ram usage:        9 bytes
 10319 ;; Hardware stack levels used: 1
 10320 ;; Hardware stack levels required when called: 1
 10321 ;; This function calls:
 10322 ;;		___wmul
 10323 ;;		_isdigit
 10324 ;;		_isspace
 10325 ;; This function is called by:
 10326 ;;		_vfpfcnvrt
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330  14D8                     _atoi:	
 10331                           ;psect for function _atoi
 10332                           
 10333  14D8                     l3815:	
 10334                           ;incstack = 0
 10335                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10336                           
 10337  14D8  0020               	movlb	0	; select bank0
 10338  14D9  01A2               	clrf	atoi@n
 10339  14DA  01A3               	clrf	atoi@n+1
 10340  14DB  01A0               	clrf	atoi@neg
 10341  14DC  01A1               	clrf	atoi@neg+1
 10342  14DD  2CE2               	goto	l3821
 10343  14DE                     l3817:
 10344  14DE  3001               	movlw	1
 10345  14DF  07F6               	addwf	atoi@s,f
 10346  14E0  3000               	movlw	0
 10347  14E1  3DF7               	addwfc	atoi@s+1,f
 10348  14E2                     l3821:
 10349  14E2  0876               	movf	atoi@s,w
 10350  14E3  0084               	movwf	4
 10351  14E4  0877               	movf	atoi@s+1,w
 10352  14E5  0085               	movwf	5
 10353  14E6  0012               	moviw fsr0++
 10354  14E7  3A20               	xorlw	32
 10355  14E8  1903               	btfsc	3,2
 10356  14E9  2CEB               	goto	u5091
 10357  14EA  2CEC               	goto	u5090
 10358  14EB                     u5091:
 10359  14EB  2CDE               	goto	l3817
 10360  14EC                     u5090:
 10361  14EC                     l3823:
 10362  14EC  0876               	movf	atoi@s,w
 10363  14ED  0084               	movwf	4
 10364  14EE  0877               	movf	atoi@s+1,w
 10365  14EF  0085               	movwf	5
 10366  14F0  0800               	movf	0,w	;code access
 10367  14F1  3EF7               	addlw	247
 10368  14F2  00F8               	movwf	??_atoi
 10369  14F3  30FF               	movlw	255
 10370  14F4  1803               	skipnc
 10371  14F5  3000               	movlw	0
 10372  14F6  00F9               	movwf	??_atoi+1
 10373  14F7  3000               	movlw	0
 10374  14F8  0279               	subwf	??_atoi+1,w
 10375  14F9  3005               	movlw	5
 10376  14FA  1903               	skipnz
 10377  14FB  0278               	subwf	??_atoi,w
 10378  14FC  1C03               	skipc
 10379  14FD  2CFF               	goto	u5101
 10380  14FE  2D00               	goto	u5100
 10381  14FF                     u5101:
 10382  14FF  2CDE               	goto	l3817
 10383  1500                     u5100:
 10384  1500  2D0B               	goto	l3827
 10385  1501                     l3825:
 10386  1501  3001               	movlw	1
 10387  1502  0020               	movlb	0	; select bank0
 10388  1503  00A0               	movwf	atoi@neg
 10389  1504  3000               	movlw	0
 10390  1505  00A1               	movwf	atoi@neg+1
 10391  1506                     l958:
 10392  1506  3001               	movlw	1
 10393  1507  07F6               	addwf	atoi@s,f
 10394  1508  3000               	movlw	0
 10395  1509  3DF7               	addwfc	atoi@s+1,f
 10396  150A  2D40               	goto	l3835
 10397  150B                     l3827:
 10398  150B  0876               	movf	atoi@s,w
 10399  150C  0084               	movwf	4
 10400  150D  0877               	movf	atoi@s+1,w
 10401  150E  0085               	movwf	5
 10402  150F  0800               	movf	0,w	;code access
 10403  1510  00F8               	movwf	??_atoi
 10404  1511  01F9               	clrf	??_atoi+1
 10405                           
 10406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10407                           ; Switch size 1, requested type "simple"
 10408                           ; Number of cases is 1, Range of values is 0 to 0
 10409                           ; switch strategies available:
 10410                           ; Name         Instructions Cycles
 10411                           ; simple_byte            4     3 (average)
 10412                           ; direct_byte            8     6 (fixed)
 10413                           ; jumptable            260     6 (fixed)
 10414                           ;	Chosen strategy is simple_byte
 10415  1512  0879               	movf	??_atoi+1,w
 10416  1513  3A00               	xorlw	0	; case 0
 10417  1514  1903               	skipnz
 10418  1515  2D17               	goto	l4295
 10419  1516  2D40               	goto	l3835
 10420  1517                     l4295:
 10421                           
 10422                           ; Switch size 1, requested type "simple"
 10423                           ; Number of cases is 2, Range of values is 43 to 45
 10424                           ; switch strategies available:
 10425                           ; Name         Instructions Cycles
 10426                           ; simple_byte            7     4 (average)
 10427                           ; direct_byte           15     9 (fixed)
 10428                           ; jumptable            263     9 (fixed)
 10429                           ;	Chosen strategy is simple_byte
 10430  1517  0878               	movf	??_atoi,w
 10431  1518  3A2B               	xorlw	43	; case 43
 10432  1519  1903               	skipnz
 10433  151A  2D06               	goto	l958
 10434  151B  3A06               	xorlw	6	; case 45
 10435  151C  1903               	skipnz
 10436  151D  2D01               	goto	l3825
 10437  151E  2D40               	goto	l3835
 10438  151F                     l3829:
 10439  151F  0876               	movf	atoi@s,w
 10440  1520  0084               	movwf	4
 10441  1521  0877               	movf	atoi@s+1,w
 10442  1522  0085               	movwf	5
 10443  1523  0800               	movf	0,w	;code access
 10444  1524  00F8               	movwf	??_atoi
 10445  1525  0020               	movlb	0	; select bank0
 10446  1526  0823               	movf	atoi@n+1,w
 10447  1527  00F1               	movwf	___wmul@multiplier+1
 10448  1528  0822               	movf	atoi@n,w
 10449  1529  00F0               	movwf	___wmul@multiplier
 10450  152A  300A               	movlw	10
 10451  152B  00F2               	movwf	___wmul@multiplicand
 10452  152C  3000               	movlw	0
 10453  152D  00F3               	movwf	___wmul@multiplicand+1
 10454  152E  319F  2733  3194   	fcall	___wmul
 10455  1531  0871               	movf	?___wmul+1,w
 10456  1532  00FA               	movwf	??_atoi+2
 10457  1533  0878               	movf	??_atoi,w
 10458  1534  0270               	subwf	?___wmul,w
 10459  1535  00F9               	movwf	??_atoi+1
 10460  1536  1C03               	skipc
 10461  1537  03FA               	decf	??_atoi+2,f
 10462  1538  0879               	movf	??_atoi+1,w
 10463  1539  3E30               	addlw	48
 10464  153A  0020               	movlb	0	; select bank0
 10465  153B  00A2               	movwf	atoi@n
 10466  153C  3000               	movlw	0
 10467  153D  3D7A               	addwfc	??_atoi+2,w
 10468  153E  00A3               	movwf	atoi@n+1
 10469  153F  2D06               	goto	l958
 10470  1540                     l3835:
 10471  1540  0876               	movf	atoi@s,w
 10472  1541  0084               	movwf	4
 10473  1542  0877               	movf	atoi@s+1,w
 10474  1543  0085               	movwf	5
 10475  1544  0800               	movf	0,w	;code access
 10476  1545  3ED0               	addlw	208
 10477  1546  00F8               	movwf	??_atoi
 10478  1547  30FF               	movlw	255
 10479  1548  1803               	skipnc
 10480  1549  3000               	movlw	0
 10481  154A  00F9               	movwf	??_atoi+1
 10482  154B  3000               	movlw	0
 10483  154C  0279               	subwf	??_atoi+1,w
 10484  154D  300A               	movlw	10
 10485  154E  1903               	skipnz
 10486  154F  0278               	subwf	??_atoi,w
 10487  1550  1C03               	skipc
 10488  1551  2D53               	goto	u5111
 10489  1552  2D54               	goto	u5110
 10490  1553                     u5111:
 10491  1553  2D1F               	goto	l3829
 10492  1554                     u5110:
 10493  1554                     l3837:
 10494  1554  0020               	movlb	0	; select bank0
 10495  1555  0820               	movf	atoi@neg,w
 10496  1556  0421               	iorwf	atoi@neg+1,w
 10497  1557  1D03               	btfss	3,2
 10498  1558  2D5A               	goto	u5121
 10499  1559  2D5B               	goto	u5120
 10500  155A                     u5121:
 10501  155A  2D67               	goto	l3841
 10502  155B                     u5120:
 10503  155B                     l3839:
 10504  155B  0922               	comf	atoi@n,w
 10505  155C  00F8               	movwf	??_atoi
 10506  155D  0923               	comf	atoi@n+1,w
 10507  155E  00F9               	movwf	??_atoi+1
 10508  155F  0AF8               	incf	??_atoi,f
 10509  1560  1903               	skipnz
 10510  1561  0AF9               	incf	??_atoi+1,f
 10511  1562  0878               	movf	??_atoi,w
 10512  1563  00F6               	movwf	?_atoi
 10513  1564  0879               	movf	??_atoi+1,w
 10514  1565  00F7               	movwf	?_atoi+1
 10515  1566  2D6B               	goto	l969
 10516  1567                     l3841:
 10517  1567  0823               	movf	atoi@n+1,w
 10518  1568  00F7               	movwf	?_atoi+1
 10519  1569  0822               	movf	atoi@n,w
 10520  156A  00F6               	movwf	?_atoi
 10521  156B                     l969:
 10522  156B  0008               	return
 10523  156C                     __end_of_atoi:
 10524                           
 10525                           	psect	text28
 10526  1F93                     __ptext28:	
 10527 ;; *************** function _isspace *****************
 10528 ;; Defined at:
 10529 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
 10530 ;; Parameters:    Size  Location     Type
 10531 ;;  c               2    0[COMMON] int 
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;		None
 10534 ;; Return value:  Size  Location     Type
 10535 ;;                  2    0[COMMON] int 
 10536 ;; Registers used:
 10537 ;;		wreg, status,2, status,0
 10538 ;; Tracked objects:
 10539 ;;		On entry : 0/0
 10540 ;;		On exit  : 0/0
 10541 ;;		Unchanged: 0/0
 10542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10546 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10547 ;;Total ram usage:        5 bytes
 10548 ;; Hardware stack levels used: 1
 10549 ;; This function calls:
 10550 ;;		Nothing
 10551 ;; This function is called by:
 10552 ;;		_atoi
 10553 ;; This function uses a non-reentrant model
 10554 ;;
 10555                           
 10556  1F93                     _isspace:	
 10557                           ;psect for function _isspace
 10558                           
 10559  1F93                     l3491:	
 10560                           ;incstack = 0
 10561                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10562                           
 10563  1F93  01F4               	clrf	_isspace$956
 10564  1F94  0AF4               	incf	_isspace$956,f
 10565  1F95                     l3493:
 10566  1F95  3020               	movlw	32
 10567  1F96  0670               	xorwf	isspace@c,w
 10568  1F97  0471               	iorwf	isspace@c+1,w
 10569  1F98  1903               	btfsc	3,2
 10570  1F99  2F9B               	goto	u4581
 10571  1F9A  2F9C               	goto	u4580
 10572  1F9B                     u4581:
 10573  1F9B  2FAC               	goto	l3499
 10574  1F9C                     u4580:
 10575  1F9C                     l3495:
 10576  1F9C  0870               	movf	isspace@c,w
 10577  1F9D  3EF7               	addlw	247
 10578  1F9E  00F2               	movwf	??_isspace
 10579  1F9F  30FF               	movlw	255
 10580  1FA0  3D71               	addwfc	isspace@c+1,w
 10581  1FA1  00F3               	movwf	??_isspace+1
 10582  1FA2  3000               	movlw	0
 10583  1FA3  0273               	subwf	??_isspace+1,w
 10584  1FA4  3005               	movlw	5
 10585  1FA5  1903               	skipnz
 10586  1FA6  0272               	subwf	??_isspace,w
 10587  1FA7  1C03               	skipc
 10588  1FA8  2FAA               	goto	u4591
 10589  1FA9  2FAB               	goto	u4590
 10590  1FAA                     u4591:
 10591  1FAA  2FAC               	goto	l3499
 10592  1FAB                     u4590:
 10593  1FAB                     l3497:
 10594  1FAB  01F4               	clrf	_isspace$956
 10595  1FAC                     l3499:
 10596  1FAC  0874               	movf	_isspace$956,w
 10597  1FAD  00F2               	movwf	??_isspace
 10598  1FAE  01F3               	clrf	??_isspace+1
 10599  1FAF  0872               	movf	??_isspace,w
 10600  1FB0  00F0               	movwf	?_isspace
 10601  1FB1  0873               	movf	??_isspace+1,w
 10602  1FB2  00F1               	movwf	?_isspace+1
 10603  1FB3                     l993:
 10604  1FB3  0008               	return
 10605  1FB4                     __end_of_isspace:
 10606                           
 10607                           	psect	text29
 10608  1EE9                     __ptext29:	
 10609 ;; *************** function _isdigit *****************
 10610 ;; Defined at:
 10611 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
 10612 ;; Parameters:    Size  Location     Type
 10613 ;;  c               2    0[COMMON] int 
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;		None
 10616 ;; Return value:  Size  Location     Type
 10617 ;;                  2    0[COMMON] int 
 10618 ;; Registers used:
 10619 ;;		wreg, status,2, status,0
 10620 ;; Tracked objects:
 10621 ;;		On entry : 0/0
 10622 ;;		On exit  : 0/0
 10623 ;;		Unchanged: 0/0
 10624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10628 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10629 ;;Total ram usage:        6 bytes
 10630 ;; Hardware stack levels used: 1
 10631 ;; This function calls:
 10632 ;;		Nothing
 10633 ;; This function is called by:
 10634 ;;		_vfpfcnvrt
 10635 ;;		_atoi
 10636 ;; This function uses a non-reentrant model
 10637 ;;
 10638                           
 10639  1EE9                     _isdigit:	
 10640                           ;psect for function _isdigit
 10641                           
 10642  1EE9                     l3487:	
 10643                           ;incstack = 0
 10644                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10645                           
 10646  1EE9  0870               	movf	isdigit@c,w
 10647  1EEA  3ED0               	addlw	208
 10648  1EEB  00F2               	movwf	??_isdigit
 10649  1EEC  30FF               	movlw	255
 10650  1EED  3D71               	addwfc	isdigit@c+1,w
 10651  1EEE  00F3               	movwf	??_isdigit+1
 10652  1EEF  3000               	movlw	0
 10653  1EF0  0273               	subwf	??_isdigit+1,w
 10654  1EF1  300A               	movlw	10
 10655  1EF2  1903               	skipnz
 10656  1EF3  0272               	subwf	??_isdigit,w
 10657  1EF4  1C03               	skipc
 10658  1EF5  2EF7               	goto	u4561
 10659  1EF6  2EF9               	goto	u4560
 10660  1EF7                     u4561:
 10661  1EF7  3001               	movlw	1
 10662  1EF8  2EFA               	goto	u4570
 10663  1EF9                     u4560:
 10664  1EF9  3000               	movlw	0
 10665  1EFA                     u4570:
 10666  1EFA  00F4               	movwf	??_isdigit+2
 10667  1EFB  01F5               	clrf	??_isdigit+3
 10668  1EFC  0874               	movf	??_isdigit+2,w
 10669  1EFD  00F0               	movwf	?_isdigit
 10670  1EFE  0875               	movf	??_isdigit+3,w
 10671  1EFF  00F1               	movwf	?_isdigit+1
 10672  1F00                     l985:
 10673  1F00  0008               	return
 10674  1F01                     __end_of_isdigit:
 10675                           
 10676                           	psect	text30
 10677  1F33                     __ptext30:	
 10678 ;; *************** function ___wmul *****************
 10679 ;; Defined at:
 10680 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;  multiplier      2    0[COMMON] unsigned int 
 10683 ;;  multiplicand    2    2[COMMON] unsigned int 
 10684 ;; Auto vars:     Size  Location     Type
 10685 ;;  product         2    4[COMMON] unsigned int 
 10686 ;; Return value:  Size  Location     Type
 10687 ;;                  2    0[COMMON] unsigned int 
 10688 ;; Registers used:
 10689 ;;		wreg, status,2, status,0
 10690 ;; Tracked objects:
 10691 ;;		On entry : 0/0
 10692 ;;		On exit  : 0/0
 10693 ;;		Unchanged: 0/0
 10694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10699 ;;Total ram usage:        6 bytes
 10700 ;; Hardware stack levels used: 1
 10701 ;; This function calls:
 10702 ;;		Nothing
 10703 ;; This function is called by:
 10704 ;;		_atoi
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708  1F33                     ___wmul:	
 10709                           ;psect for function ___wmul
 10710                           
 10711  1F33                     l2939:	
 10712                           ;incstack = 0
 10713                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10714                           
 10715  1F33  01F4               	clrf	___wmul@product
 10716  1F34  01F5               	clrf	___wmul@product+1
 10717  1F35                     l2941:
 10718  1F35  1C70               	btfss	___wmul@multiplier,0
 10719  1F36  2F38               	goto	u3341
 10720  1F37  2F39               	goto	u3340
 10721  1F38                     u3341:
 10722  1F38  2F3D               	goto	l302
 10723  1F39                     u3340:
 10724  1F39                     l2943:
 10725  1F39  0872               	movf	___wmul@multiplicand,w
 10726  1F3A  07F4               	addwf	___wmul@product,f
 10727  1F3B  0873               	movf	___wmul@multiplicand+1,w
 10728  1F3C  3DF5               	addwfc	___wmul@product+1,f
 10729  1F3D                     l302:
 10730  1F3D  3001               	movlw	1
 10731  1F3E                     u3355:
 10732  1F3E  35F2               	lslf	___wmul@multiplicand,f
 10733  1F3F  0DF3               	rlf	___wmul@multiplicand+1,f
 10734  1F40  0B89               	decfsz	9,f
 10735  1F41  2F3E               	goto	u3355
 10736  1F42                     l2945:
 10737  1F42  3001               	movlw	1
 10738  1F43                     u3365:
 10739  1F43  36F1               	lsrf	___wmul@multiplier+1,f
 10740  1F44  0CF0               	rrf	___wmul@multiplier,f
 10741  1F45  0B89               	decfsz	9,f
 10742  1F46  2F43               	goto	u3365
 10743  1F47                     l2947:
 10744  1F47  0870               	movf	___wmul@multiplier,w
 10745  1F48  0471               	iorwf	___wmul@multiplier+1,w
 10746  1F49  1D03               	btfss	3,2
 10747  1F4A  2F4C               	goto	u3371
 10748  1F4B  2F4D               	goto	u3370
 10749  1F4C                     u3371:
 10750  1F4C  2F35               	goto	l2941
 10751  1F4D                     u3370:
 10752  1F4D                     l2949:
 10753  1F4D  0875               	movf	___wmul@product+1,w
 10754  1F4E  00F1               	movwf	?___wmul+1
 10755  1F4F  0874               	movf	___wmul@product,w
 10756  1F50  00F0               	movwf	?___wmul
 10757  1F51                     l304:
 10758  1F51  0008               	return
 10759  1F52                     __end_of___wmul:
 10760                           
 10761                           	psect	text31
 10762  1F72                     __ptext31:	
 10763 ;; *************** function _lcd_out *****************
 10764 ;; Defined at:
 10765 ;;		line 156 in file "LCD_LIB.c"
 10766 ;; Parameters:    Size  Location     Type
 10767 ;;  row             1    wreg     unsigned char 
 10768 ;;  col             1   11[COMMON] unsigned char 
 10769 ;;  str             1   12[COMMON] PTR unsigned char 
 10770 ;;		 -> txtLCD(20), 
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;  row             1    0[BANK0 ] unsigned char 
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      void 
 10775 ;; Registers used:
 10776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10783 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10785 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10786 ;;Total ram usage:        4 bytes
 10787 ;; Hardware stack levels used: 1
 10788 ;; Hardware stack levels required when called: 4
 10789 ;; This function calls:
 10790 ;;		_lcd_set_cursor
 10791 ;;		_lcd_write
 10792 ;; This function is called by:
 10793 ;;		_main
 10794 ;; This function uses a non-reentrant model
 10795 ;;
 10796                           
 10797  1F72                     _lcd_out:	
 10798                           ;psect for function _lcd_out
 10799                           
 10800                           
 10801                           ;incstack = 0
 10802                           ; Regs used in _lcd_out: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10803                           ;lcd_out@row stored from wreg
 10804  1F72  0020               	movlb	0	; select bank0
 10805  1F73  00A0               	movwf	lcd_out@row
 10806  1F74                     l4063:
 10807                           
 10808                           ;LCD_LIB.c: 157:     lcd_set_cursor(row,col);
 10809  1F74  087B               	movf	lcd_out@col,w
 10810  1F75  00FD               	movwf	??_lcd_out
 10811  1F76  087D               	movf	??_lcd_out,w
 10812  1F77  00F7               	movwf	lcd_set_cursor@col
 10813  1F78  0820               	movf	lcd_out@row,w
 10814  1F79  3190  208A  319F   	fcall	_lcd_set_cursor
 10815                           
 10816                           ;LCD_LIB.c: 158:     while(*str){
 10817  1F7C  2F89               	goto	l4069
 10818  1F7D                     l4065:
 10819                           
 10820                           ;LCD_LIB.c: 159:         lcd_write(*str);
 10821  1F7D  087C               	movf	lcd_out@str,w
 10822  1F7E  0086               	movwf	6
 10823  1F7F  3001               	movlw	1	; select bank2/3
 10824  1F80  0087               	movwf	7
 10825  1F81  0801               	movf	1,w
 10826  1F82  319E  266C  319F   	fcall	_lcd_write
 10827  1F85                     l4067:
 10828                           
 10829                           ;LCD_LIB.c: 160:         str++;
 10830  1F85  3001               	movlw	1
 10831  1F86  00FD               	movwf	??_lcd_out
 10832  1F87  087D               	movf	??_lcd_out,w
 10833  1F88  07FC               	addwf	lcd_out@str,f
 10834  1F89                     l4069:
 10835                           
 10836                           ;LCD_LIB.c: 158:     while(*str){
 10837  1F89  087C               	movf	lcd_out@str,w
 10838  1F8A  0086               	movwf	6
 10839  1F8B  3001               	movlw	1	; select bank2/3
 10840  1F8C  0087               	movwf	7
 10841  1F8D  0801               	movf	1,w
 10842  1F8E  1D03               	btfss	3,2
 10843  1F8F  2F91               	goto	u5321
 10844  1F90  2F92               	goto	u5320
 10845  1F91                     u5321:
 10846  1F91  2F7D               	goto	l4065
 10847  1F92                     u5320:
 10848  1F92                     l96:
 10849  1F92  0008               	return
 10850  1F93                     __end_of_lcd_out:
 10851                           
 10852                           	psect	text32
 10853  1E6C                     __ptext32:	
 10854 ;; *************** function _lcd_write *****************
 10855 ;; Defined at:
 10856 ;;		line 71 in file "LCD_LIB.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;  letra           1    wreg     unsigned char 
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;  letra           1    6[COMMON] unsigned char 
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  1    wreg      void 
 10863 ;; Registers used:
 10864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;Total ram usage:        1 bytes
 10875 ;; Hardware stack levels used: 1
 10876 ;; Hardware stack levels required when called: 2
 10877 ;; This function calls:
 10878 ;;		__send_byte
 10879 ;; This function is called by:
 10880 ;;		_lcd_out
 10881 ;;		_lcd_puts
 10882 ;;		_lcd_custom_char
 10883 ;;		_lcd_char
 10884 ;; This function uses a non-reentrant model
 10885 ;;
 10886                           
 10887  1E6C                     _lcd_write:	
 10888                           ;psect for function _lcd_write
 10889                           
 10890                           
 10891                           ;incstack = 0
 10892                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10893                           ;lcd_write@letra stored from wreg
 10894  1E6C  00F6               	movwf	lcd_write@letra
 10895  1E6D                     l3989:
 10896                           
 10897                           ;LCD_LIB.c: 72:     _send_byte(letra,1);
 10898  1E6D  01F2               	clrf	__send_byte@mode
 10899  1E6E  0AF2               	incf	__send_byte@mode,f
 10900  1E6F  0876               	movf	lcd_write@letra,w
 10901  1E70  3190  202E  319E   	fcall	__send_byte
 10902  1E73                     l36:
 10903  1E73  0008               	return
 10904  1E74                     __end_of_lcd_write:
 10905                           
 10906                           	psect	text33
 10907  108A                     __ptext33:	
 10908 ;; *************** function _lcd_set_cursor *****************
 10909 ;; Defined at:
 10910 ;;		line 84 in file "LCD_LIB.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;  row             1    wreg     unsigned char 
 10913 ;;  col             1    7[COMMON] unsigned char 
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;  row             1   10[COMMON] unsigned char 
 10916 ;; Return value:  Size  Location     Type
 10917 ;;                  1    wreg      void 
 10918 ;; Registers used:
 10919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10920 ;; Tracked objects:
 10921 ;;		On entry : 0/0
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10925 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;Total ram usage:        4 bytes
 10930 ;; Hardware stack levels used: 1
 10931 ;; Hardware stack levels required when called: 3
 10932 ;; This function calls:
 10933 ;;		_lcd_command
 10934 ;; This function is called by:
 10935 ;;		_lcd_out
 10936 ;;		_lcd_char
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940  108A                     _lcd_set_cursor:	
 10941                           ;psect for function _lcd_set_cursor
 10942                           
 10943                           
 10944                           ;incstack = 0
 10945                           ; Regs used in _lcd_set_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10946                           ;lcd_set_cursor@row stored from wreg
 10947  108A  00FA               	movwf	lcd_set_cursor@row
 10948  108B                     l3991:
 10949                           
 10950                           ;LCD_LIB.c: 86:     switch(row){
 10951  108B  28AA               	goto	l4003
 10952  108C                     l3993:
 10953  108C  0877               	movf	lcd_set_cursor@col,w
 10954  108D  3E7F               	addlw	127
 10955  108E  319E  2665  3190   	fcall	_lcd_command
 10956  1091  28C0               	goto	l55
 10957  1092                     l3995:
 10958  1092  0877               	movf	lcd_set_cursor@col,w
 10959  1093  3EBF               	addlw	191
 10960  1094  319E  2665  3190   	fcall	_lcd_command
 10961  1097  28C0               	goto	l55
 10962  1098                     l3997:
 10963  1098  0877               	movf	lcd_set_cursor@col,w
 10964  1099  3E93               	addlw	147
 10965  109A  319E  2665  3190   	fcall	_lcd_command
 10966  109D  28C0               	goto	l55
 10967  109E                     l3999:
 10968  109E  0877               	movf	lcd_set_cursor@col,w
 10969  109F  3ED3               	addlw	211
 10970  10A0  319E  2665  3190   	fcall	_lcd_command
 10971  10A3  28C0               	goto	l55
 10972  10A4                     l4001:
 10973                           
 10974                           ;LCD_LIB.c: 92:             lcd_command(0x80+col-1);
 10975  10A4  0877               	movf	lcd_set_cursor@col,w
 10976  10A5  3E7F               	addlw	127
 10977  10A6  319E  2665  3190   	fcall	_lcd_command
 10978                           
 10979                           ;LCD_LIB.c: 93:     }
 10980  10A9  28C0               	goto	l55
 10981  10AA                     l4003:
 10982  10AA  087A               	movf	lcd_set_cursor@row,w
 10983  10AB  00F8               	movwf	??_lcd_set_cursor
 10984  10AC  01F9               	clrf	??_lcd_set_cursor+1
 10985                           
 10986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10987                           ; Switch size 1, requested type "simple"
 10988                           ; Number of cases is 1, Range of values is 0 to 0
 10989                           ; switch strategies available:
 10990                           ; Name         Instructions Cycles
 10991                           ; simple_byte            4     3 (average)
 10992                           ; direct_byte            8     6 (fixed)
 10993                           ; jumptable            260     6 (fixed)
 10994                           ;	Chosen strategy is simple_byte
 10995  10AD  0879               	movf	??_lcd_set_cursor+1,w
 10996  10AE  3A00               	xorlw	0	; case 0
 10997  10AF  1903               	skipnz
 10998  10B0  28B2               	goto	l4297
 10999  10B1  28A4               	goto	l4001
 11000  10B2                     l4297:
 11001                           
 11002                           ; Switch size 1, requested type "simple"
 11003                           ; Number of cases is 4, Range of values is 1 to 4
 11004                           ; switch strategies available:
 11005                           ; Name         Instructions Cycles
 11006                           ; simple_byte           13     7 (average)
 11007                           ; direct_byte           17     9 (fixed)
 11008                           ; jumptable            263     9 (fixed)
 11009                           ;	Chosen strategy is simple_byte
 11010  10B2  0878               	movf	??_lcd_set_cursor,w
 11011  10B3  3A01               	xorlw	1	; case 1
 11012  10B4  1903               	skipnz
 11013  10B5  288C               	goto	l3993
 11014  10B6  3A03               	xorlw	3	; case 2
 11015  10B7  1903               	skipnz
 11016  10B8  2892               	goto	l3995
 11017  10B9  3A01               	xorlw	1	; case 3
 11018  10BA  1903               	skipnz
 11019  10BB  2898               	goto	l3997
 11020  10BC  3A07               	xorlw	7	; case 4
 11021  10BD  1903               	skipnz
 11022  10BE  289E               	goto	l3999
 11023  10BF  28A4               	goto	l4001
 11024  10C0                     l55:
 11025  10C0  0008               	return
 11026  10C1                     __end_of_lcd_set_cursor:
 11027                           
 11028                           	psect	text34
 11029  129E                     __ptext34:	
 11030 ;; *************** function _lcd_init *****************
 11031 ;; Defined at:
 11032 ;;		line 32 in file "LCD_LIB.c"
 11033 ;; Parameters:    Size  Location     Type
 11034 ;;		None
 11035 ;; Auto vars:     Size  Location     Type
 11036 ;;		None
 11037 ;; Return value:  Size  Location     Type
 11038 ;;                  1    wreg      void 
 11039 ;; Registers used:
 11040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11041 ;; Tracked objects:
 11042 ;;		On entry : 0/0
 11043 ;;		On exit  : 0/0
 11044 ;;		Unchanged: 0/0
 11045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11050 ;;Total ram usage:        1 bytes
 11051 ;; Hardware stack levels used: 1
 11052 ;; Hardware stack levels required when called: 3
 11053 ;; This function calls:
 11054 ;;		__write_nibble
 11055 ;;		_lcd_command
 11056 ;; This function is called by:
 11057 ;;		_main
 11058 ;; This function uses a non-reentrant model
 11059 ;;
 11060                           
 11061  129E                     _lcd_init:	
 11062                           ;psect for function _lcd_init
 11063                           
 11064  129E                     l4021:	
 11065                           ;incstack = 0
 11066                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11067                           
 11068                           
 11069                           ;LCD_LIB.c: 34:     ANSELD &= ~( (1<<0) |
 11070  129E  300A               	movlw	10
 11071  129F  00F7               	movwf	??_lcd_init
 11072  12A0  0877               	movf	??_lcd_init,w
 11073  12A1  0023               	movlb	3	; select bank3
 11074  12A2  058F               	andwf	15,f	;volatile
 11075                           
 11076                           ;LCD_LIB.c: 41:     TRISD &= ~( (1<<0) |
 11077  12A3  300A               	movlw	10
 11078  12A4  00F7               	movwf	??_lcd_init
 11079  12A5  0877               	movf	??_lcd_init,w
 11080  12A6  0021               	movlb	1	; select bank1
 11081  12A7  058F               	andwf	15,f	;volatile
 11082                           
 11083                           ;LCD_LIB.c: 48:     LATD &= ~( (1<<0)|
 11084  12A8  300A               	movlw	10
 11085  12A9  00F7               	movwf	??_lcd_init
 11086  12AA  0877               	movf	??_lcd_init,w
 11087  12AB  0022               	movlb	2	; select bank2
 11088  12AC  058F               	andwf	15,f	;volatile
 11089  12AD                     l4023:
 11090                           
 11091                           ;LCD_LIB.c: 55:     _delay((unsigned long)((15)*(8000000UL/4000.0)));
 11092  12AD  3027               	movlw	39
 11093  12AE  00F7               	movwf	??_lcd_init
 11094  12AF  30F5               	movlw	245
 11095  12B0                     u5527:
 11096  12B0  0B89               	decfsz	9,f
 11097  12B1  2AB0               	goto	u5527
 11098  12B2  0BF7               	decfsz	??_lcd_init,f
 11099  12B3  2AB0               	goto	u5527
 11100  12B4  0000               	nop
 11101  12B5                     l4025:
 11102                           
 11103                           ;LCD_LIB.c: 56:     _write_nibble(0x03);
 11104  12B5  3003               	movlw	3
 11105  12B6  3190  20C1  3192   	fcall	__write_nibble
 11106  12B9                     l4027:
 11107                           
 11108                           ;LCD_LIB.c: 57:     _delay((unsigned long)((5)*(8000000UL/4000.0)));
 11109  12B9  300D               	movlw	13
 11110  12BA  00F7               	movwf	??_lcd_init
 11111  12BB  30FC               	movlw	252
 11112  12BC                     u5537:
 11113  12BC  0B89               	decfsz	9,f
 11114  12BD  2ABC               	goto	u5537
 11115  12BE  0BF7               	decfsz	??_lcd_init,f
 11116  12BF  2ABC               	goto	u5537
 11117  12C0                     l4029:
 11118                           
 11119                           ;LCD_LIB.c: 58:     _write_nibble(0x03);
 11120  12C0  3003               	movlw	3
 11121  12C1  3190  20C1  3192   	fcall	__write_nibble
 11122  12C4                     l4031:
 11123                           
 11124                           ;LCD_LIB.c: 59:     _delay((unsigned long)((100)*(8000000UL/4000000.0)));
 11125  12C4  3042               	movlw	66
 11126  12C5                     u5547:
 11127  12C5  0B89               	decfsz	9,f
 11128  12C6  2AC5               	goto	u5547
 11129  12C7  3200               	nop2
 11130  12C8                     l4033:
 11131                           
 11132                           ;LCD_LIB.c: 60:     _write_nibble(0x03);
 11133  12C8  3003               	movlw	3
 11134  12C9  3190  20C1  3192   	fcall	__write_nibble
 11135  12CC                     l4035:
 11136                           
 11137                           ;LCD_LIB.c: 61:     _write_nibble(0x02);
 11138  12CC  3002               	movlw	2
 11139  12CD  3190  20C1  3192   	fcall	__write_nibble
 11140  12D0                     l4037:
 11141                           
 11142                           ;LCD_LIB.c: 63:     lcd_command(0x20 | 0x00 | 0x08);
 11143  12D0  3028               	movlw	40
 11144  12D1  319E  2665  3192   	fcall	_lcd_command
 11145  12D4                     l4039:
 11146                           
 11147                           ;LCD_LIB.c: 64:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
 11148  12D4  3006               	movlw	6
 11149  12D5  00F7               	movwf	??_lcd_init
 11150  12D6  3030               	movlw	48
 11151  12D7                     u5557:
 11152  12D7  0B89               	decfsz	9,f
 11153  12D8  2AD7               	goto	u5557
 11154  12D9  0BF7               	decfsz	??_lcd_init,f
 11155  12DA  2AD7               	goto	u5557
 11156  12DB  3200               	nop2
 11157  12DC                     l4041:
 11158                           
 11159                           ;LCD_LIB.c: 65:     _lcd_params = 0x04 | 0x02 | 0x01;
 11160  12DC  3007               	movlw	7
 11161  12DD  00F7               	movwf	??_lcd_init
 11162  12DE  0877               	movf	??_lcd_init,w
 11163  12DF  0020               	movlb	0	; select bank0
 11164  12E0  00EE               	movwf	__lcd_params
 11165  12E1                     l4043:
 11166                           
 11167                           ;LCD_LIB.c: 66:     lcd_command(0x08 | _lcd_params);
 11168  12E1  086E               	movf	__lcd_params,w
 11169  12E2  3808               	iorlw	8
 11170  12E3  319E  2665  3192   	fcall	_lcd_command
 11171  12E6                     l4045:
 11172                           
 11173                           ;LCD_LIB.c: 67:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
 11174  12E6  3006               	movlw	6
 11175  12E7  00F7               	movwf	??_lcd_init
 11176  12E8  3030               	movlw	48
 11177  12E9                     u5567:
 11178  12E9  0B89               	decfsz	9,f
 11179  12EA  2AE9               	goto	u5567
 11180  12EB  0BF7               	decfsz	??_lcd_init,f
 11181  12EC  2AE9               	goto	u5567
 11182  12ED  3200               	nop2
 11183  12EE                     l4047:
 11184                           
 11185                           ;LCD_LIB.c: 68:     lcd_command(0x01);
 11186  12EE  3001               	movlw	1
 11187  12EF  319E  2665  3192   	fcall	_lcd_command
 11188  12F2                     l4049:
 11189                           
 11190                           ;LCD_LIB.c: 69:     _delay((unsigned long)((2)*(8000000UL/4000.0)));
 11191  12F2  3006               	movlw	6
 11192  12F3  00F7               	movwf	??_lcd_init
 11193  12F4  3030               	movlw	48
 11194  12F5                     u5577:
 11195  12F5  0B89               	decfsz	9,f
 11196  12F6  2AF5               	goto	u5577
 11197  12F7  0BF7               	decfsz	??_lcd_init,f
 11198  12F8  2AF5               	goto	u5577
 11199  12F9  3200               	nop2
 11200  12FA                     l33:
 11201  12FA  0008               	return
 11202  12FB                     __end_of_lcd_init:
 11203                           
 11204                           	psect	text35
 11205  1E99                     __ptext35:	
 11206 ;; *************** function _lcd_disable_cursor *****************
 11207 ;; Defined at:
 11208 ;;		line 132 in file "LCD_LIB.c"
 11209 ;; Parameters:    Size  Location     Type
 11210 ;;		None
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;		None
 11213 ;; Return value:  Size  Location     Type
 11214 ;;                  1    wreg      void 
 11215 ;; Registers used:
 11216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11217 ;; Tracked objects:
 11218 ;;		On entry : 0/0
 11219 ;;		On exit  : 0/0
 11220 ;;		Unchanged: 0/0
 11221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11226 ;;Total ram usage:        1 bytes
 11227 ;; Hardware stack levels used: 1
 11228 ;; Hardware stack levels required when called: 3
 11229 ;; This function calls:
 11230 ;;		_lcd_command
 11231 ;; This function is called by:
 11232 ;;		_main
 11233 ;; This function uses a non-reentrant model
 11234 ;;
 11235                           
 11236  1E99                     _lcd_disable_cursor:	
 11237                           ;psect for function _lcd_disable_cursor
 11238                           
 11239  1E99                     l4057:	
 11240                           ;incstack = 0
 11241                           ; Regs used in _lcd_disable_cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11242                           
 11243                           
 11244                           ;LCD_LIB.c: 133:     _lcd_params &= ~0x02;
 11245  1E99  30FD               	movlw	253
 11246  1E9A  00F7               	movwf	??_lcd_disable_cursor
 11247  1E9B  0877               	movf	??_lcd_disable_cursor,w
 11248  1E9C  0020               	movlb	0	; select bank0
 11249  1E9D  05EE               	andwf	__lcd_params,f
 11250  1E9E                     l4059:
 11251                           
 11252                           ;LCD_LIB.c: 134:     lcd_command(0x08 | _lcd_params);
 11253  1E9E  086E               	movf	__lcd_params,w
 11254  1E9F  3808               	iorlw	8
 11255  1EA0  319E  2665  319E   	fcall	_lcd_command
 11256  1EA3                     l4061:
 11257                           
 11258                           ;LCD_LIB.c: 135:     _delay((unsigned long)((37)*(8000000UL/4000000.0)));
 11259  1EA3  3018               	movlw	24
 11260  1EA4                     u5587:
 11261  1EA4  0B89               	decfsz	9,f
 11262  1EA5  2EA4               	goto	u5587
 11263  1EA6  3200               	nop2
 11264  1EA7                     l79:
 11265  1EA7  0008               	return
 11266  1EA8                     __end_of_lcd_disable_cursor:
 11267                           
 11268                           	psect	text36
 11269  1E8A                     __ptext36:	
 11270 ;; *************** function _lcd_disable_blink *****************
 11271 ;; Defined at:
 11272 ;;		line 121 in file "LCD_LIB.c"
 11273 ;; Parameters:    Size  Location     Type
 11274 ;;		None
 11275 ;; Auto vars:     Size  Location     Type
 11276 ;;		None
 11277 ;; Return value:  Size  Location     Type
 11278 ;;                  1    wreg      void 
 11279 ;; Registers used:
 11280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11281 ;; Tracked objects:
 11282 ;;		On entry : 0/0
 11283 ;;		On exit  : 0/0
 11284 ;;		Unchanged: 0/0
 11285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11290 ;;Total ram usage:        1 bytes
 11291 ;; Hardware stack levels used: 1
 11292 ;; Hardware stack levels required when called: 3
 11293 ;; This function calls:
 11294 ;;		_lcd_command
 11295 ;; This function is called by:
 11296 ;;		_main
 11297 ;; This function uses a non-reentrant model
 11298 ;;
 11299                           
 11300  1E8A                     _lcd_disable_blink:	
 11301                           ;psect for function _lcd_disable_blink
 11302                           
 11303  1E8A                     l4051:	
 11304                           ;incstack = 0
 11305                           ; Regs used in _lcd_disable_blink: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11306                           
 11307                           
 11308                           ;LCD_LIB.c: 122:     _lcd_params &= ~0x01;
 11309  1E8A  30FE               	movlw	254
 11310  1E8B  00F7               	movwf	??_lcd_disable_blink
 11311  1E8C  0877               	movf	??_lcd_disable_blink,w
 11312  1E8D  0020               	movlb	0	; select bank0
 11313  1E8E  05EE               	andwf	__lcd_params,f
 11314  1E8F                     l4053:
 11315                           
 11316                           ;LCD_LIB.c: 123:     lcd_command(0x08 | _lcd_params);
 11317  1E8F  086E               	movf	__lcd_params,w
 11318  1E90  3808               	iorlw	8
 11319  1E91  319E  2665  319E   	fcall	_lcd_command
 11320  1E94                     l4055:
 11321                           
 11322                           ;LCD_LIB.c: 124:     _delay((unsigned long)((37)*(8000000UL/4000000.0)));
 11323  1E94  3018               	movlw	24
 11324  1E95                     u5597:
 11325  1E95  0B89               	decfsz	9,f
 11326  1E96  2E95               	goto	u5597
 11327  1E97  3200               	nop2
 11328  1E98                     l73:
 11329  1E98  0008               	return
 11330  1E99                     __end_of_lcd_disable_blink:
 11331                           
 11332                           	psect	text37
 11333  1E65                     __ptext37:	
 11334 ;; *************** function _lcd_command *****************
 11335 ;; Defined at:
 11336 ;;		line 74 in file "LCD_LIB.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;  cmd             1    wreg     unsigned char 
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;  cmd             1    6[COMMON] unsigned char 
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  1    wreg      void 
 11343 ;; Registers used:
 11344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11354 ;;Total ram usage:        1 bytes
 11355 ;; Hardware stack levels used: 1
 11356 ;; Hardware stack levels required when called: 2
 11357 ;; This function calls:
 11358 ;;		__send_byte
 11359 ;; This function is called by:
 11360 ;;		_lcd_init
 11361 ;;		_lcd_set_cursor
 11362 ;;		_lcd_disable_blink
 11363 ;;		_lcd_disable_cursor
 11364 ;;		_lcd_clear
 11365 ;;		_lcd_return_home
 11366 ;;		_lcd_on
 11367 ;;		_lcd_off
 11368 ;;		_lcd_enable_blink
 11369 ;;		_lcd_enable_cursor
 11370 ;;		_lcd_scroll_left
 11371 ;;		_lcd_scroll_right
 11372 ;;		_lcd_custom_char
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376  1E65                     _lcd_command:	
 11377                           ;psect for function _lcd_command
 11378                           
 11379                           
 11380                           ;incstack = 0
 11381                           ; Regs used in _lcd_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11382                           ;lcd_command@cmd stored from wreg
 11383  1E65  00F6               	movwf	lcd_command@cmd
 11384  1E66                     l3875:
 11385                           
 11386                           ;LCD_LIB.c: 75:     _send_byte(cmd,0);
 11387  1E66  01F2               	clrf	__send_byte@mode
 11388  1E67  0876               	movf	lcd_command@cmd,w
 11389  1E68  3190  202E  319E   	fcall	__send_byte
 11390  1E6B                     l39:
 11391  1E6B  0008               	return
 11392  1E6C                     __end_of_lcd_command:
 11393                           
 11394                           	psect	text38
 11395  102E                     __ptext38:	
 11396 ;; *************** function __send_byte *****************
 11397 ;; Defined at:
 11398 ;;		line 22 in file "LCD_LIB.c"
 11399 ;; Parameters:    Size  Location     Type
 11400 ;;  value           1    wreg     unsigned char 
 11401 ;;  mode            1    2[COMMON] unsigned char 
 11402 ;; Auto vars:     Size  Location     Type
 11403 ;;  value           1    5[COMMON] unsigned char 
 11404 ;; Return value:  Size  Location     Type
 11405 ;;                  1    wreg      void 
 11406 ;; Registers used:
 11407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11408 ;; Tracked objects:
 11409 ;;		On entry : 0/0
 11410 ;;		On exit  : 0/0
 11411 ;;		Unchanged: 0/0
 11412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11413 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11417 ;;Total ram usage:        4 bytes
 11418 ;; Hardware stack levels used: 1
 11419 ;; Hardware stack levels required when called: 1
 11420 ;; This function calls:
 11421 ;;		__write_nibble
 11422 ;; This function is called by:
 11423 ;;		_lcd_write
 11424 ;;		_lcd_command
 11425 ;; This function uses a non-reentrant model
 11426 ;;
 11427                           
 11428  102E                     __send_byte:	
 11429                           ;psect for function __send_byte
 11430                           
 11431                           
 11432                           ;incstack = 0
 11433                           ; Regs used in __send_byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11434                           ;__send_byte@value stored from wreg
 11435  102E  00F5               	movwf	__send_byte@value
 11436  102F                     l3503:
 11437                           
 11438                           ;LCD_LIB.c: 24:     switch(mode){
 11439  102F  2839               	goto	l3509
 11440  1030                     l3505:
 11441  1030  30FE               	movlw	254
 11442  1031  00F3               	movwf	??__send_byte
 11443  1032  0873               	movf	??__send_byte,w
 11444  1033  0022               	movlb	2	; select bank2
 11445  1034  058F               	andwf	15,f	;volatile
 11446  1035  2849               	goto	l3511
 11447  1036                     l29:	
 11448                           ;LCD_LIB.c: 26:         case 1: LATD |= (1<<0); break;
 11449                           
 11450  1036  0022               	movlb	2	; select bank2
 11451  1037  140F               	bsf	15,0	;volatile
 11452  1038  2849               	goto	l3511
 11453  1039                     l3509:
 11454  1039  0872               	movf	__send_byte@mode,w
 11455  103A  00F3               	movwf	??__send_byte
 11456  103B  01F4               	clrf	??__send_byte+1
 11457                           
 11458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11459                           ; Switch size 1, requested type "simple"
 11460                           ; Number of cases is 1, Range of values is 0 to 0
 11461                           ; switch strategies available:
 11462                           ; Name         Instructions Cycles
 11463                           ; simple_byte            4     3 (average)
 11464                           ; direct_byte            8     6 (fixed)
 11465                           ; jumptable            260     6 (fixed)
 11466                           ;	Chosen strategy is simple_byte
 11467  103C  0874               	movf	??__send_byte+1,w
 11468  103D  3A00               	xorlw	0	; case 0
 11469  103E  1903               	skipnz
 11470  103F  2841               	goto	l4299
 11471  1040  2849               	goto	l3511
 11472  1041                     l4299:
 11473                           
 11474                           ; Switch size 1, requested type "simple"
 11475                           ; Number of cases is 2, Range of values is 0 to 1
 11476                           ; switch strategies available:
 11477                           ; Name         Instructions Cycles
 11478                           ; simple_byte            7     4 (average)
 11479                           ; direct_byte           10     6 (fixed)
 11480                           ; jumptable            260     6 (fixed)
 11481                           ;	Chosen strategy is simple_byte
 11482  1041  0873               	movf	??__send_byte,w
 11483  1042  3A00               	xorlw	0	; case 0
 11484  1043  1903               	skipnz
 11485  1044  2830               	goto	l3505
 11486  1045  3A01               	xorlw	1	; case 1
 11487  1046  1903               	skipnz
 11488  1047  2836               	goto	l29
 11489  1048  2849               	goto	l3511
 11490  1049                     l3511:
 11491                           
 11492                           ;LCD_LIB.c: 28:     _write_nibble(value>>4);
 11493  1049  0875               	movf	__send_byte@value,w
 11494  104A  00F3               	movwf	??__send_byte
 11495  104B  3004               	movlw	4
 11496  104C                     u4605:
 11497  104C  36F3               	lsrf	??__send_byte,f
 11498  104D  0B89               	decfsz	9,f
 11499  104E  284C               	goto	u4605
 11500  104F  0873               	movf	??__send_byte,w
 11501  1050  3190  20C1  3190   	fcall	__write_nibble
 11502                           
 11503                           ;LCD_LIB.c: 29:     _write_nibble(value&0x0F);
 11504  1053  0875               	movf	__send_byte@value,w
 11505  1054  390F               	andlw	15
 11506  1055  3190  20C1  3190   	fcall	__write_nibble
 11507  1058                     l30:
 11508  1058  0008               	return
 11509  1059                     __end_of__send_byte:
 11510                           
 11511                           	psect	text39
 11512  10C1                     __ptext39:	
 11513 ;; *************** function __write_nibble *****************
 11514 ;; Defined at:
 11515 ;;		line 9 in file "LCD_LIB.c"
 11516 ;; Parameters:    Size  Location     Type
 11517 ;;  nibble          1    wreg     unsigned char 
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;  nibble          1    1[COMMON] unsigned char 
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      void 
 11522 ;; Registers used:
 11523 ;;		wreg, status,2, status,0
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11533 ;;Total ram usage:        2 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; This function calls:
 11536 ;;		Nothing
 11537 ;; This function is called by:
 11538 ;;		__send_byte
 11539 ;;		_lcd_init
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543  10C1                     __write_nibble:	
 11544                           ;psect for function __write_nibble
 11545                           
 11546                           
 11547                           ;incstack = 0
 11548                           ; Regs used in __write_nibble: [wreg+status,2+status,0]
 11549                           ;__write_nibble@nibble stored from wreg
 11550  10C1  00F1               	movwf	__write_nibble@nibble
 11551  10C2                     l2923:
 11552                           
 11553                           ;LCD_LIB.c: 10:     if( (nibble & 0x01) == 0) LATD &= ~(1<<4); else LATD |= (1<<4);
 11554  10C2  1871               	btfsc	__write_nibble@nibble,0
 11555  10C3  28C5               	goto	u3301
 11556  10C4  28C6               	goto	u3300
 11557  10C5                     u3301:
 11558  10C5  28CC               	goto	l15
 11559  10C6                     u3300:
 11560  10C6                     l2925:
 11561  10C6  30EF               	movlw	239
 11562  10C7  00F0               	movwf	??__write_nibble
 11563  10C8  0870               	movf	??__write_nibble,w
 11564  10C9  0022               	movlb	2	; select bank2
 11565  10CA  058F               	andwf	15,f	;volatile
 11566  10CB  28CE               	goto	l16
 11567  10CC                     l15:
 11568  10CC  0022               	movlb	2	; select bank2
 11569  10CD  160F               	bsf	15,4	;volatile
 11570  10CE                     l16:
 11571                           
 11572                           ;LCD_LIB.c: 11:     if( (nibble & 0x02) == 0) LATD &= ~(1<<5); else LATD |= (1<<5);
 11573  10CE  18F1               	btfsc	__write_nibble@nibble,1
 11574  10CF  28D1               	goto	u3311
 11575  10D0  28D2               	goto	u3310
 11576  10D1                     u3311:
 11577  10D1  28D7               	goto	l17
 11578  10D2                     u3310:
 11579  10D2                     l2927:
 11580  10D2  30DF               	movlw	223
 11581  10D3  00F0               	movwf	??__write_nibble
 11582  10D4  0870               	movf	??__write_nibble,w
 11583  10D5  058F               	andwf	15,f	;volatile
 11584  10D6  28D8               	goto	l18
 11585  10D7                     l17:
 11586  10D7  168F               	bsf	15,5	;volatile
 11587  10D8                     l18:
 11588                           
 11589                           ;LCD_LIB.c: 12:     if( (nibble & 0x04) == 0) LATD &= ~(1<<6); else LATD |= (1<<6);
 11590  10D8  1971               	btfsc	__write_nibble@nibble,2
 11591  10D9  28DB               	goto	u3321
 11592  10DA  28DC               	goto	u3320
 11593  10DB                     u3321:
 11594  10DB  28E1               	goto	l19
 11595  10DC                     u3320:
 11596  10DC                     l2929:
 11597  10DC  30BF               	movlw	191
 11598  10DD  00F0               	movwf	??__write_nibble
 11599  10DE  0870               	movf	??__write_nibble,w
 11600  10DF  058F               	andwf	15,f	;volatile
 11601  10E0  28E2               	goto	l20
 11602  10E1                     l19:
 11603  10E1  170F               	bsf	15,6	;volatile
 11604  10E2                     l20:
 11605                           
 11606                           ;LCD_LIB.c: 13:     if( (nibble & 0x08) == 0) LATD &= ~(1<<7); else LATD |= (1<<7);
 11607  10E2  19F1               	btfsc	__write_nibble@nibble,3
 11608  10E3  28E5               	goto	u3331
 11609  10E4  28E6               	goto	u3330
 11610  10E5                     u3331:
 11611  10E5  28EB               	goto	l21
 11612  10E6                     u3330:
 11613  10E6                     l2931:
 11614  10E6  307F               	movlw	127
 11615  10E7  00F0               	movwf	??__write_nibble
 11616  10E8  0870               	movf	??__write_nibble,w
 11617  10E9  058F               	andwf	15,f	;volatile
 11618  10EA  28EC               	goto	l2933
 11619  10EB                     l21:
 11620  10EB  178F               	bsf	15,7	;volatile
 11621  10EC                     l2933:
 11622                           
 11623                           ;LCD_LIB.c: 15:     LATD &= ~(1<<2);
 11624  10EC  30FB               	movlw	251
 11625  10ED  00F0               	movwf	??__write_nibble
 11626  10EE  0870               	movf	??__write_nibble,w
 11627  10EF  058F               	andwf	15,f	;volatile
 11628  10F0                     l2935:
 11629                           
 11630                           ;LCD_LIB.c: 16:     LATD |= (1<<2);
 11631  10F0  150F               	bsf	15,2	;volatile
 11632                           
 11633                           ;LCD_LIB.c: 17:     LATD &= ~(1<<2);
 11634  10F1  30FB               	movlw	251
 11635  10F2  00F0               	movwf	??__write_nibble
 11636  10F3  0870               	movf	??__write_nibble,w
 11637  10F4  058F               	andwf	15,f	;volatile
 11638  10F5                     l2937:
 11639                           
 11640                           ;LCD_LIB.c: 19:     _delay((unsigned long)((300)*(8000000UL/4000000.0)));
 11641  10F5  30C8               	movlw	200
 11642  10F6                     u5607:
 11643  10F6  0B89               	decfsz	9,f
 11644  10F7  28F6               	goto	u5607
 11645  10F8                     l23:
 11646  10F8  0008               	return
 11647  10F9                     __end_of__write_nibble:
 11648                           
 11649                           	psect	text40
 11650  0025                     __ptext40:	
 11651 ;; *************** function ___xxtofl *****************
 11652 ;; Defined at:
 11653 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
 11654 ;; Parameters:    Size  Location     Type
 11655 ;;  sign            1    wreg     unsigned char 
 11656 ;;  val             4    0[COMMON] long 
 11657 ;; Auto vars:     Size  Location     Type
 11658 ;;  sign            1    8[COMMON] unsigned char 
 11659 ;;  arg             4   10[COMMON] unsigned long 
 11660 ;;  exp             1    9[COMMON] unsigned char 
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  4    0[COMMON] unsigned char 
 11663 ;; Registers used:
 11664 ;;		wreg, status,2, status,0
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11671 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11672 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;Total ram usage:       14 bytes
 11675 ;; Hardware stack levels used: 1
 11676 ;; This function calls:
 11677 ;;		Nothing
 11678 ;; This function is called by:
 11679 ;;		_main
 11680 ;; This function uses a non-reentrant model
 11681 ;;
 11682                           
 11683  0025                     ___xxtofl:	
 11684                           ;psect for function ___xxtofl
 11685                           
 11686                           
 11687                           ;incstack = 0
 11688                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11689                           ;___xxtofl@sign stored from wreg
 11690  0025  00F8               	movwf	___xxtofl@sign
 11691  0026                     l4099:
 11692  0026  0878               	movf	___xxtofl@sign,w
 11693  0027  1903               	btfsc	3,2
 11694  0028  282A               	goto	u5341
 11695  0029  282B               	goto	u5340
 11696  002A                     u5341:
 11697  002A  283F               	goto	l4105
 11698  002B                     u5340:
 11699  002B                     l4101:
 11700  002B  1FF3               	btfss	___xxtofl@val+3,7
 11701  002C  282E               	goto	u5351
 11702  002D  282F               	goto	u5350
 11703  002E                     u5351:
 11704  002E  283F               	goto	l4105
 11705  002F                     u5350:
 11706  002F                     l4103:
 11707  002F  0970               	comf	___xxtofl@val,w
 11708  0030  00FA               	movwf	___xxtofl@arg
 11709  0031  0971               	comf	___xxtofl@val+1,w
 11710  0032  00FB               	movwf	___xxtofl@arg+1
 11711  0033  0972               	comf	___xxtofl@val+2,w
 11712  0034  00FC               	movwf	___xxtofl@arg+2
 11713  0035  0973               	comf	___xxtofl@val+3,w
 11714  0036  00FD               	movwf	___xxtofl@arg+3
 11715  0037  0AFA               	incf	___xxtofl@arg,f
 11716  0038  1903               	skipnz
 11717  0039  0AFB               	incf	___xxtofl@arg+1,f
 11718  003A  1903               	skipnz
 11719  003B  0AFC               	incf	___xxtofl@arg+2,f
 11720  003C  1903               	skipnz
 11721  003D  0AFD               	incf	___xxtofl@arg+3,f
 11722  003E  2847               	goto	l743
 11723  003F                     l4105:
 11724  003F  0873               	movf	___xxtofl@val+3,w
 11725  0040  00FD               	movwf	___xxtofl@arg+3
 11726  0041  0872               	movf	___xxtofl@val+2,w
 11727  0042  00FC               	movwf	___xxtofl@arg+2
 11728  0043  0871               	movf	___xxtofl@val+1,w
 11729  0044  00FB               	movwf	___xxtofl@arg+1
 11730  0045  0870               	movf	___xxtofl@val,w
 11731  0046  00FA               	movwf	___xxtofl@arg
 11732  0047                     l743:
 11733  0047  0873               	movf	___xxtofl@val+3,w
 11734  0048  0472               	iorwf	___xxtofl@val+2,w
 11735  0049  0471               	iorwf	___xxtofl@val+1,w
 11736  004A  0470               	iorwf	___xxtofl@val,w
 11737  004B  1D03               	skipz
 11738  004C  284E               	goto	u5361
 11739  004D  284F               	goto	u5360
 11740  004E                     u5361:
 11741  004E  2858               	goto	l4111
 11742  004F                     u5360:
 11743  004F                     l4107:
 11744  004F  3000               	movlw	0
 11745  0050  00F3               	movwf	?___xxtofl+3
 11746  0051  3000               	movlw	0
 11747  0052  00F2               	movwf	?___xxtofl+2
 11748  0053  3000               	movlw	0
 11749  0054  00F1               	movwf	?___xxtofl+1
 11750  0055  3000               	movlw	0
 11751  0056  00F0               	movwf	?___xxtofl
 11752  0057  28D0               	goto	l745
 11753  0058                     l4111:
 11754  0058  3096               	movlw	150
 11755  0059  00F4               	movwf	??___xxtofl
 11756  005A  0874               	movf	??___xxtofl,w
 11757  005B  00F9               	movwf	___xxtofl@exp
 11758  005C  2868               	goto	l4115
 11759  005D                     l4113:
 11760  005D  3001               	movlw	1
 11761  005E  00F4               	movwf	??___xxtofl
 11762  005F  0874               	movf	??___xxtofl,w
 11763  0060  07F9               	addwf	___xxtofl@exp,f
 11764  0061  3001               	movlw	1
 11765  0062                     u5375:
 11766  0062  36FD               	lsrf	___xxtofl@arg+3,f
 11767  0063  0CFC               	rrf	___xxtofl@arg+2,f
 11768  0064  0CFB               	rrf	___xxtofl@arg+1,f
 11769  0065  0CFA               	rrf	___xxtofl@arg,f
 11770  0066  0B89               	decfsz	9,f
 11771  0067  2862               	goto	u5375
 11772  0068                     l4115:
 11773  0068  30FE               	movlw	254
 11774  0069  057D               	andwf	___xxtofl@arg+3,w
 11775  006A  1D03               	btfss	3,2
 11776  006B  286D               	goto	u5381
 11777  006C  286E               	goto	u5380
 11778  006D                     u5381:
 11779  006D  285D               	goto	l4113
 11780  006E                     u5380:
 11781  006E  2882               	goto	l749
 11782  006F                     l4117:
 11783  006F  3001               	movlw	1
 11784  0070  00F4               	movwf	??___xxtofl
 11785  0071  0874               	movf	??___xxtofl,w
 11786  0072  07F9               	addwf	___xxtofl@exp,f
 11787  0073                     l4119:
 11788  0073  3001               	movlw	1
 11789  0074  07FA               	addwf	___xxtofl@arg,f
 11790  0075  3000               	movlw	0
 11791  0076  3DFB               	addwfc	___xxtofl@arg+1,f
 11792  0077  3000               	movlw	0
 11793  0078  3DFC               	addwfc	___xxtofl@arg+2,f
 11794  0079  3000               	movlw	0
 11795  007A  3DFD               	addwfc	___xxtofl@arg+3,f
 11796  007B                     l4121:
 11797  007B  3001               	movlw	1
 11798  007C                     u5395:
 11799  007C  36FD               	lsrf	___xxtofl@arg+3,f
 11800  007D  0CFC               	rrf	___xxtofl@arg+2,f
 11801  007E  0CFB               	rrf	___xxtofl@arg+1,f
 11802  007F  0CFA               	rrf	___xxtofl@arg,f
 11803  0080  0B89               	decfsz	9,f
 11804  0081  287C               	goto	u5395
 11805  0082                     l749:
 11806  0082  30FF               	movlw	255
 11807  0083  057D               	andwf	___xxtofl@arg+3,w
 11808  0084  1D03               	btfss	3,2
 11809  0085  2887               	goto	u5401
 11810  0086  2888               	goto	u5400
 11811  0087                     u5401:
 11812  0087  286F               	goto	l4117
 11813  0088                     u5400:
 11814  0088  2892               	goto	l4125
 11815  0089                     l4123:
 11816  0089  3001               	movlw	1
 11817  008A  02F9               	subwf	___xxtofl@exp,f
 11818  008B  3001               	movlw	1
 11819  008C                     u5415:
 11820  008C  35FA               	lslf	___xxtofl@arg,f
 11821  008D  0DFB               	rlf	___xxtofl@arg+1,f
 11822  008E  0DFC               	rlf	___xxtofl@arg+2,f
 11823  008F  0DFD               	rlf	___xxtofl@arg+3,f
 11824  0090  0B89               	decfsz	9,f
 11825  0091  288C               	goto	u5415
 11826  0092                     l4125:
 11827  0092  1BFC               	btfsc	___xxtofl@arg+2,7
 11828  0093  2895               	goto	u5421
 11829  0094  2896               	goto	u5420
 11830  0095                     u5421:
 11831  0095  289C               	goto	l756
 11832  0096                     u5420:
 11833  0096                     l4127:
 11834  0096  3002               	movlw	2
 11835  0097  0279               	subwf	___xxtofl@exp,w
 11836  0098  1803               	skipnc
 11837  0099  289B               	goto	u5431
 11838  009A  289C               	goto	u5430
 11839  009B                     u5431:
 11840  009B  2889               	goto	l4123
 11841  009C                     u5430:
 11842  009C                     l756:
 11843  009C  1879               	btfsc	___xxtofl@exp,0
 11844  009D  289F               	goto	u5441
 11845  009E  28A0               	goto	u5440
 11846  009F                     u5441:
 11847  009F  28A8               	goto	l757
 11848  00A0                     u5440:
 11849  00A0                     l4129:
 11850  00A0  30FF               	movlw	255
 11851  00A1  05FA               	andwf	___xxtofl@arg,f
 11852  00A2  30FF               	movlw	255
 11853  00A3  05FB               	andwf	___xxtofl@arg+1,f
 11854  00A4  307F               	movlw	127
 11855  00A5  05FC               	andwf	___xxtofl@arg+2,f
 11856  00A6  30FF               	movlw	255
 11857  00A7  05FD               	andwf	___xxtofl@arg+3,f
 11858  00A8                     l757:
 11859  00A8  1003               	clrc
 11860  00A9  0CF9               	rrf	___xxtofl@exp,f
 11861  00AA                     l4131:
 11862  00AA  0879               	movf	___xxtofl@exp,w
 11863  00AB  00F4               	movwf	??___xxtofl
 11864  00AC  01F5               	clrf	??___xxtofl+1
 11865  00AD  01F6               	clrf	??___xxtofl+2
 11866  00AE  01F7               	clrf	??___xxtofl+3
 11867  00AF  3018               	movlw	24
 11868  00B0                     u5455:
 11869  00B0  35F4               	lslf	??___xxtofl,f
 11870  00B1  0DF5               	rlf	??___xxtofl+1,f
 11871  00B2  0DF6               	rlf	??___xxtofl+2,f
 11872  00B3  0DF7               	rlf	??___xxtofl+3,f
 11873  00B4                     u5450:
 11874  00B4  0B89               	decfsz	9,f
 11875  00B5  28B0               	goto	u5455
 11876  00B6  0874               	movf	??___xxtofl,w
 11877  00B7  04FA               	iorwf	___xxtofl@arg,f
 11878  00B8  0875               	movf	??___xxtofl+1,w
 11879  00B9  04FB               	iorwf	___xxtofl@arg+1,f
 11880  00BA  0876               	movf	??___xxtofl+2,w
 11881  00BB  04FC               	iorwf	___xxtofl@arg+2,f
 11882  00BC  0877               	movf	??___xxtofl+3,w
 11883  00BD  04FD               	iorwf	___xxtofl@arg+3,f
 11884  00BE                     l4133:
 11885  00BE  0878               	movf	___xxtofl@sign,w
 11886  00BF  1903               	btfsc	3,2
 11887  00C0  28C2               	goto	u5461
 11888  00C1  28C3               	goto	u5460
 11889  00C2                     u5461:
 11890  00C2  28C8               	goto	l4139
 11891  00C3                     u5460:
 11892  00C3                     l4135:
 11893  00C3  1FF3               	btfss	___xxtofl@val+3,7
 11894  00C4  28C6               	goto	u5471
 11895  00C5  28C7               	goto	u5470
 11896  00C6                     u5471:
 11897  00C6  28C8               	goto	l4139
 11898  00C7                     u5470:
 11899  00C7                     l4137:
 11900  00C7  17FD               	bsf	___xxtofl@arg+3,7
 11901  00C8                     l4139:
 11902  00C8  087D               	movf	___xxtofl@arg+3,w
 11903  00C9  00F3               	movwf	?___xxtofl+3
 11904  00CA  087C               	movf	___xxtofl@arg+2,w
 11905  00CB  00F2               	movwf	?___xxtofl+2
 11906  00CC  087B               	movf	___xxtofl@arg+1,w
 11907  00CD  00F1               	movwf	?___xxtofl+1
 11908  00CE  087A               	movf	___xxtofl@arg,w
 11909  00CF  00F0               	movwf	?___xxtofl
 11910  00D0                     l745:
 11911  00D0  0008               	return
 11912  00D1                     __end_of___xxtofl:
 11913                           
 11914                           	psect	text41
 11915  1EBC                     __ptext41:	
 11916 ;; *************** function _ADC_Read *****************
 11917 ;; Defined at:
 11918 ;;		line 11 in file "ADC_LIB.c"
 11919 ;; Parameters:    Size  Location     Type
 11920 ;;  ch              1    wreg     unsigned char 
 11921 ;; Auto vars:     Size  Location     Type
 11922 ;;  ch              1    3[COMMON] unsigned char 
 11923 ;; Return value:  Size  Location     Type
 11924 ;;                  2    0[COMMON] int 
 11925 ;; Registers used:
 11926 ;;		wreg, status,2, status,0
 11927 ;; Tracked objects:
 11928 ;;		On entry : 0/0
 11929 ;;		On exit  : 0/0
 11930 ;;		Unchanged: 0/0
 11931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;Total ram usage:        4 bytes
 11937 ;; Hardware stack levels used: 1
 11938 ;; This function calls:
 11939 ;;		Nothing
 11940 ;; This function is called by:
 11941 ;;		_main
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945  1EBC                     _ADC_Read:	
 11946                           ;psect for function _ADC_Read
 11947                           
 11948                           
 11949                           ;incstack = 0
 11950                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
 11951                           ;ADC_Read@ch stored from wreg
 11952  1EBC  00F3               	movwf	ADC_Read@ch
 11953  1EBD                     l4079:
 11954                           
 11955                           ;ADC_LIB.c: 12:     ADCON0bits.CHS = ch&0b11111;
 11956  1EBD  0873               	movf	ADC_Read@ch,w
 11957  1EBE  391F               	andlw	31
 11958  1EBF  00F2               	movwf	??_ADC_Read
 11959  1EC0  0DF2               	rlf	??_ADC_Read,f
 11960  1EC1  0DF2               	rlf	??_ADC_Read,f
 11961  1EC2  0021               	movlb	1	; select bank1
 11962  1EC3  081D               	movf	29,w	;volatile
 11963  1EC4  0672               	xorwf	??_ADC_Read,w
 11964  1EC5  3983               	andlw	-125
 11965  1EC6  0672               	xorwf	??_ADC_Read,w
 11966  1EC7  009D               	movwf	29	;volatile
 11967  1EC8                     l4081:
 11968                           
 11969                           ;ADC_LIB.c: 13:     ADCON0bits.GO_nDONE = 1;
 11970  1EC8  149D               	bsf	29,1	;volatile
 11971  1EC9                     l149:	
 11972                           ;ADC_LIB.c: 14:     while(ADCON0bits.GO_nDONE == 1);
 11973                           
 11974  1EC9  189D               	btfsc	29,1	;volatile
 11975  1ECA  2ECC               	goto	u5331
 11976  1ECB  2ECD               	goto	u5330
 11977  1ECC                     u5331:
 11978  1ECC  2EC9               	goto	l149
 11979  1ECD                     u5330:
 11980  1ECD                     l4083:
 11981                           
 11982                           ;ADC_LIB.c: 15:     return (ADRESH<<8 | ADRESL);
 11983  1ECD  081C               	movf	28,w	;volatile
 11984  1ECE  00F1               	movwf	?_ADC_Read+1
 11985  1ECF  081B               	movf	27,w	;volatile
 11986  1ED0  00F0               	movwf	?_ADC_Read
 11987  1ED1                     l152:
 11988  1ED1  0008               	return
 11989  1ED2                     __end_of_ADC_Read:
 11990                           
 11991                           	psect	text42
 11992  1E74                     __ptext42:	
 11993 ;; *************** function _ADC_Init *****************
 11994 ;; Defined at:
 11995 ;;		line 3 in file "ADC_LIB.c"
 11996 ;; Parameters:    Size  Location     Type
 11997 ;;		None
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;		None
 12000 ;; Return value:  Size  Location     Type
 12001 ;;                  1    wreg      void 
 12002 ;; Registers used:
 12003 ;;		wreg, status,2, status,0
 12004 ;; Tracked objects:
 12005 ;;		On entry : 0/0
 12006 ;;		On exit  : 0/0
 12007 ;;		Unchanged: 0/0
 12008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12013 ;;Total ram usage:        0 bytes
 12014 ;; Hardware stack levels used: 1
 12015 ;; This function calls:
 12016 ;;		Nothing
 12017 ;; This function is called by:
 12018 ;;		_main
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022  1E74                     _ADC_Init:	
 12023                           ;psect for function _ADC_Init
 12024                           
 12025  1E74                     l4071:	
 12026                           ;incstack = 0
 12027                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
 12028                           
 12029                           
 12030                           ;ADC_LIB.c: 4:     ADCON1bits.ADCS = 0b110;
 12031  1E74  0021               	movlb	1	; select bank1
 12032  1E75  081E               	movf	30,w	;volatile
 12033  1E76  398F               	andlw	-113
 12034  1E77  3860               	iorlw	96
 12035  1E78  009E               	movwf	30	;volatile
 12036  1E79                     l4073:
 12037                           
 12038                           ;ADC_LIB.c: 5:     ADCON1bits.ADNREF = 0;
 12039  1E79  111E               	bcf	30,2	;volatile
 12040                           
 12041                           ;ADC_LIB.c: 6:     ADCON1bits.ADPREF = 0b00;
 12042  1E7A  30FC               	movlw	-4
 12043  1E7B  059E               	andwf	30,f	;volatile
 12044  1E7C                     l4075:
 12045                           
 12046                           ;ADC_LIB.c: 7:     ADCON0bits.ADON = 1;
 12047  1E7C  141D               	bsf	29,0	;volatile
 12048  1E7D                     l4077:
 12049                           
 12050                           ;ADC_LIB.c: 8:     ADCON1bits.ADFM = 1;
 12051  1E7D  179E               	bsf	30,7	;volatile
 12052  1E7E                     l146:
 12053  1E7E  0008               	return
 12054  1E7F                     __end_of_ADC_Init:
 12055  007E                     btemp	set	126	;btemp
 12056  007E                     wtemp0	set	126
 12057                           
 12058                           	psect	idloc
 12059                           
 12060                           ;Config register IDLOC0 @ 0x8000
 12061                           ;	unspecified, using default values
 12062  8000                     	org	32768
 12063  8000  3FFF               	dw	16383
 12064                           
 12065                           ;Config register IDLOC1 @ 0x8001
 12066                           ;	unspecified, using default values
 12067  8001                     	org	32769
 12068  8001  3FFF               	dw	16383
 12069                           
 12070                           ;Config register IDLOC2 @ 0x8002
 12071                           ;	unspecified, using default values
 12072  8002                     	org	32770
 12073  8002  3FFF               	dw	16383
 12074                           
 12075                           ;Config register IDLOC3 @ 0x8003
 12076                           ;	unspecified, using default values
 12077  8003                     	org	32771
 12078  8003  3FFF               	dw	16383
 12079                           
 12080                           	psect	config
 12081                           
 12082                           ;Config register CONFIG1 @ 0x8007
 12083                           ;	Oscillator Selection
 12084                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
 12085                           ;	Watchdog Timer Enable
 12086                           ;	WDTE = OFF, WDT disabled
 12087                           ;	Power-up Timer Enable
 12088                           ;	PWRTE = OFF, PWRT disabled
 12089                           ;	MCLR Pin Function Select
 12090                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 12091                           ;	Flash Program Memory Code Protection
 12092                           ;	CP = OFF, Program memory code protection is disabled
 12093                           ;	Data Memory Code Protection
 12094                           ;	CPD = OFF, Data memory code protection is disabled
 12095                           ;	Brown-out Reset Enable
 12096                           ;	BOREN = OFF, Brown-out Reset disabled
 12097                           ;	Clock Out Enable
 12098                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 12099                           ;	Internal/External Switchover
 12100                           ;	IESO = ON, Internal/External Switchover mode is enabled
 12101                           ;	Fail-Safe Clock Monitor Enable
 12102                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 12103  8007                     	org	32775
 12104  8007  39E2               	dw	14818
 12105                           
 12106                           ;Config register CONFIG2 @ 0x8008
 12107                           ;	Flash Memory Self-Write Protection
 12108                           ;	WRT = OFF, Write protection off
 12109                           ;	Voltage Regulator Capacitor Enable
 12110                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
 12111                           ;	PLL Enable
 12112                           ;	PLLEN = OFF, 4x PLL disabled
 12113                           ;	Stack Overflow/Underflow Reset Enable
 12114                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 12115                           ;	Brown-out Reset Voltage Selection
 12116                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 12117                           ;	Low-Voltage Programming Enable
 12118                           ;	LVP = ON, Low-voltage programming enabled
 12119  8008                     	org	32776
 12120  8008  3EFF               	dw	16127

Data Sizes:
    Strings     42
    Constant    0
    Data        20
    BSS         107
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     63      77
    BANK2            80      0      32
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 10
		 -> sprintf@f(BANK1[10]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> txtLCD(BANK2[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S735$source	PTR const unsigned char  size(1) Largest target is 0

    f...source	PTR const unsigned char  size(1) Largest target is 0

    S735$buffer	PTR unsigned char  size(1) Largest target is 0

    f...buffer	PTR unsigned char  size(1) Largest target is 0

    lcd_out@str	PTR unsigned char  size(1) Largest target is 20
		 -> txtLCD(BANK2[20]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _main->_lcd_out
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flmul->___xxtofl
    _atoi->___wmul
    _atoi->_isdigit
    _lcd_out->_lcd_set_cursor
    _lcd_write->__send_byte
    _lcd_set_cursor->_lcd_command
    _lcd_init->_lcd_command
    _lcd_disable_cursor->_lcd_command
    _lcd_disable_blink->_lcd_command
    _lcd_command->__send_byte
    __send_byte->__write_nibble

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   34486
                                             77 BANK0      1     1      0
                           _ADC_Init
                           _ADC_Read
                            ___flmul
                           ___xxtofl
                  _lcd_disable_blink
                 _lcd_disable_cursor
                           _lcd_init
                            _lcd_out
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   27952
                                             70 BANK0      7     1      6
                                             51 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   27527
                                             62 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2   27190
                                             46 BANK0     16    14      2
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              59    54      5   21806
                                             38 BANK0      8     3      5
                                              0 BANK1     51    51      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              4     2      2     920
                                              6 COMMON     4     2      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2907
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2637
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3633
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1881
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1165
                                              6 COMMON     5     3      2
                                              0 BANK0      4     4      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_out                                              4     2      2    1333
                                             11 COMMON     3     1      2
                                              0 BANK0      1     1      0
                     _lcd_set_cursor
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0     328
                                              6 COMMON     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       4     3      1     612
                                              7 COMMON     4     3      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     416
                                              7 COMMON     1     1      0
                      __write_nibble
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_disable_cursor                                   1     1      0     328
                                              7 COMMON     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_disable_blink                                    1     1      0     328
                                              7 COMMON     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          1     1      0     328
                                              6 COMMON     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (3) __send_byte                                           4     3      1     306
                                              2 COMMON     4     3      1
                      __write_nibble
 ---------------------------------------------------------------------------------
 (4) __write_nibble                                        2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___xxtofl
   _lcd_disable_blink
     _lcd_command
       __send_byte
         __write_nibble
   _lcd_disable_cursor
     _lcd_command
   _lcd_init
     __write_nibble
     _lcd_command
   _lcd_out
     _lcd_set_cursor
       _lcd_command
     _lcd_write
       __send_byte
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3F      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Oct 05 21:08:00 2023

              ___fldiv@aexp 002C                ___fldiv@bexp 002B                ___fldiv@sign 0024  
                        l20 10E2                          l21 10EB                          l30 1058  
                        l23 10F8                          l15 10CC                          l16 10CE  
                        l17 10D7                          l33 12FA                          l18 10D8  
                        l19 10E1                          l36 1E73                          l29 1036  
                        l39 1E6B                          l55 10C0                          l73 1E98  
                        l79 1EA7                          l96 1F92                ___awdiv@sign 0076  
       ___wmul@multiplicand 0072         __Umul8_16@word_mpld 0076                         l302 1F3D  
                       l152 1ED1                         l304 1F51                         l146 1E7E  
                       l149 1EC9                         l503 13B8                         l506 13CD  
                       l603 094A                         l455 1359                         l471 1115  
                       l711 0D75                         l607 09EC                         l472 1131  
                       l480 146A                         l720 1FD6                         l624 0A81  
                       l616 0B2A                         l705 0CFD                         l609 09C7  
                       l634 0AC5                         l483 14BE                         l811 129D  
                       l468 1199                         l492 1E89                         l628 0AA3  
                       l661 17FF                         l477 1146                         l645 0B20  
                       l637 0AFD                         l718 1FC6                         l646 0B2A  
                       l806 1261                         l743 0047                         l680 17CD  
                       l488 14D7                         l496 13CD                         l840 030D  
                       l745 00D0                         l681 17E7                         l649 1F71  
                       l809 1283                         l841 02F2                         l921 0FFF  
                       l683 17F6                         l675 1781                         l659 16A3  
                       l851 0350                         l827 07D7                         l756 009C  
                       l757 00A8                         l749 0082                         l933 1089  
                       l765 102D                         l943 144C                         l871 0582  
                       l866 056C                         l699 0D81                         l958 1506  
                       l974 0842                         l975 08EB                         l985 1F00  
                       l993 1FB3                         l969 156B                         l979 08E3  
                       l999 1F18                         _pad 1245                         _pot 00DF  
              ___awmod@sign 0076                         wreg 0009                ___flmul@aexp 0032  
              ___flmul@bexp 0033                ___flmul@sign 002D                ___flmul@temp 0038  
              ___flmul@prod 0034             ?_lcd_set_cursor 0077                ___fltol@exp1 007A  
                      l1014 11EC                        l1022 1FFF                        l1031 0024  
                      l1025 0800                        l1041 1244                        l1051 1EE8  
                      l1037 1F32                        l1054 1EE8                        l3001 114C  
                      l3011 1162                        l3003 1151                        l3021 117C  
                      l3013 1165                        l3005 1153                        l3031 1195  
                      l3023 1180                        l3015 116A                        l3007 1157  
                      l3111 1F52                        l4001 10A4                        l3025 1185  
                      l3017 116E                        l3009 115C                        l3201 1740  
                      l3121 1656                        l3041 1143                        l3113 1F55  
                      l3105 13AF                        l4003 10AA                        l3019 1172  
                      l3027 118B                        l3211 1756                        l3203 1748  
                      l3131 166D                        l3123 165A                        l3043 1145  
                      l3035 10F9                        l3051 147E                        l3107 13BD  
                      l4011 105F                        l4101 002B                        l4021 129E  
                      l3029 1190                        l3221 176A                        l3213 175D  
                      l3205 174A                        l3141 1681                        l3133 166E  
                      l3125 165B                        l3117 164C                        l3037 110D  
                      l3061 14D4                        l3053 1486                        l3301 0B93  
                      l3109 13C2                        l4013 1063                        l4111 0058  
                      l4103 002F                        l4031 12C4                        l4023 12AD  
                      l3231 1793                        l3223 177E                        l3207 1751  
                      l3215 1761                        l3151 1698                        l3143 1685  
                      l3127 1660                        l3135 1670                        l3119 1652  
                      l3039 1129                        l3063 14D6                        l3055 148A  
                      l3047 144D                        l3311 0BEE                        l3303 0BA0  
                      l3071 1E89                        l4015 1077                        l4121 007B  
                      l4113 005D                        l4105 003F                        l4041 12DC  
                      l4033 12C8                        l4025 12B5                        l3241 17DB  
                      l3233 1797                        l3217 1765                        l3209 1755  
                      l3161 16BB                        l3153 1699                        l3145 1686  
                      l3137 1678                        l3129 1665                        l3057 14A2  
                      l3049 1462                        l3321 0C23                        l3313 0BFB  
                      l3305 0BAD                        l3081 136E                        l3401 1255  
                      l4017 1081                        l4009 105B                        l4131 00AA  
                      l4123 0089                        l4115 0068                        l4107 004F  
                      l4051 1E8A                        l4043 12E1                        l4035 12CC  
                      l4027 12B9                        l3251 17F2                        l3243 17DE  
                      l3235 17AF                        l3227 1786                        l3219 1766  
                      l3171 16D2                        l3147 168B                        l3155 169B  
                      l3139 167D                        l3059 14A6                        l3331 0C66  
                      l3323 0C30                        l3315 0C08                        l3307 0BC7  
                      l3067 1E7F                        l3091 1390                        l3083 1381  
                      l3075 135A                        l3411 1275                        l3403 125A  
                      l4211 156C                        l4133 00BE                        l4125 0092  
                      l4117 006F                        l4053 1E8F                        l4061 1EA3  
                      l4045 12E6                        l4037 12D0                        l4029 12C0  
                      l3245 17E6                        l3229 178B                        l3237 17B3  
                      l3181 16FC                        l3173 16E2                        l3157 16AB  
                      l3165 16C4                        l3149 1690                        l3341 0CBA  
                      l3333 0C73                        l3325 0C37                        l3317 0C0F  
                      l3309 0BD4                        l3261 0B35                        l3069 1E87  
                      l2701 08FB                        l3085 1382                        l3077 1365  
                      l3421 13E6                        l3413 1288                        l3405 125F  
                      l4221 15BC                        l4213 1574                        l4071 1E74  
                      l4135 00C3                        l4127 0096                        l4119 0073  
                      l3511 1049                        l3503 102F                        l4055 1E94  
                      l4047 12EE                        l4039 12D4                        l4063 1F74  
                      l3247 17EC                        l3239 17C0                        l3183 1701  
                      l3191 171B                        l3175 16EA                        l3167 16C9  
                      l3159 16B7                        l3351 0CD9                        l3343 0CC6  
                      l3335 0C87                        l3327 0C4B                        l3319 0C1C  
                      l3271 0B4C                        l3263 0B39                        l2703 0900  
                      l2711 0910                        l3087 138A                        l3423 13FB  
                      l3415 1291                        l3407 1264                        l4231 1635  
                      l4223 15D5                        l4215 157D                        l4073 1E79  
                      l4081 1EC8                        l4137 00C7                        l4129 00A0  
                      l3505 1030                        l4057 1E99                        l4049 12F2  
                      l4065 1F7D                        l3249 17F0                        l3193 172D  
                      l3185 170F                        l3177 16F2                        l3361 0CFA  
                      l3345 0CCD                        l3353 0CDD                        l3337 0C9C  
                      l3329 0C52                        l3281 0B63                        l3273 0B4E  
                      l3265 0B3A                        l3257 0B2B                        l2801 0A0A  
                      l2721 0928                        l2713 0918                        l2705 0905  
                      l3097 1398                        l3089 138C                        l3425 1401  
                      l3433 1422                        l3409 1270                        l3601 02A4  
                      l3521 00E5                        l4233 1640                        l4225 15E0  
                      l4217 1580                        l4075 1E7C                        l4083 1ECD  
                      l4139 00C8                        l4059 1E9E                        l4067 1F85  
                      l3195 172E                        l3187 1713                        l3179 16FA  
                      l3371 0D13                        l3355 0CE1                        l3347 0CD1  
                      l3339 0CB3                        l3291 0B78                        l3283 0B64  
                      l3275 0B56                        l3267 0B3F                        l3259 0B31  
                      l2811 0A1C                        l2803 0A0E                        l2731 093F  
                      l2723 092C                        l2715 091D                        l2707 090D  
                      l3099 13A8                        l3435 1428                        l3427 1418  
                      l3419 13CE                        l3443 0005                        l3451 1ED2  
                      l3611 02EE                        l3603 02CB                        l3531 0123  
                      l3523 0103                        l4091 1014                        l4227 15E9  
                      l4219 1589                        l4077 1E7D                        l3509 1039  
                      l4069 1F89                        l3197 1736                        l3189 1714  
                      l3381 0D54                        l3373 0D2B                        l3365 0D02  
                      l3357 0CE2                        l3349 0CD2                        l3293 0B80  
                      l3285 0B69                        l3277 0B5B                        l3269 0B44  
                      l2821 0A6B                        l2813 0A25                        l2805 0A15  
                      l2741 0958                        l2733 0940                        l2725 092D  
                      l2717 0923                        l2709 090E                        l3429 141D  
                      l3461 0834                        l2901 1FD9                        l3445 000D  
                      l3453 1EE1                        l3701 05DD                        l3621 0312  
                      l3613 0301                        l3605 02DC                        l3541 013C  
                      l3533 0129                        l3525 0108                        l3517 00D3  
                      l4093 1016                        l4229 161C                        l4079 1EBD  
                      l3199 173A                        l3391 0D71                        l3383 0D5D  
                      l3367 0D07                        l3375 0D2F                        l3359 0CE6  
                      l3295 0B85                        l3287 0B6E                        l3279 0B5F  
                      l2823 0A70                        l2807 0A17                        l2815 0A2A  
                      l2751 096C                        l2743 095C                        l2727 0932  
                      l2735 0942                        l2719 0924                        l3439 1448  
                      l3471 0874                        l3463 0841                        l2903 1FDC  
                      l2911 1F1F                        l3447 1ED2                        l3711 05FD  
                      l3703 05E2                        l3631 0354                        l3623 0318  
                      l3615 0307                        l3607 02E2                        l3543 0142  
                      l3535 012D                        l3527 011C                        l3519 00D5  
                      l4095 1023                        l4087 1006                        l3393 0D79  
                      l3385 0D5F                        l3377 0D3C                        l3369 0D0F  
                      l3297 0B8A                        l3289 0B76                        l2841 0AAA  
                      l2833 0A97                        l2817 0A41                        l2825 0A79  
                      l2809 0A1B                        l2761 0980                        l2753 0970  
                      l2745 0960                        l2737 0950                        l2729 0937  
                      l3481 08C4                        l3473 088B                        l3465 0847  
                      l3457 0801                        l2681 11A4                        l2905 1FEA  
                      l2913 1F23                        l3801 079A                        l3721 061B  
                      l3713 0601                        l3705 05E8                        l3641 036E  
                      l3633 035A                        l3625 0327                        l3609 02E8  
                      l3561 0187                        l3553 015C                        l3545 0147  
                      l3537 0133                        l3529 011F                        l4089 1012  
                      l4099 0026                        l2931 10E6                        l2923 10C2  
                      l3491 1F93                        l3387 0D6C                        l3379 0D46  
                      l2851 0AB8                        l2843 0AAC                        l2835 0A9E  
                      l2827 0A89                        l2819 0A65                        l2763 0984  
                      l2755 0974                        l2747 0964                        l2739 0954  
                      l2771 0994                        l3483 08DB                        l3475 0893  
                      l3467 085F                        l3459 0819                        l2683 11A9  
                      l2907 1FEF                        l2915 1F2C                        l3803 07A0  
                      l3811 07C0                        l3715 0606                        l3707 05EC  
                      l3723 061F                        l3731 063B                        l3643 0372  
                      l3651 0386                        l3635 0360                        l3627 0343  
                      l3571 01B1                        l3555 016D                        l3539 0138  
                      l3547 014B                        l2933 10EC                        l2925 10C6  
                      l2941 1F35                        l3493 1F95                        l3821 14E2  
                      l3389 0D70                        l2861 0ACF                        l2853 0ABC  
                      l2845 0AB1                        l2837 0AA2                        l2829 0A8E  
                      l2781 09D4                        l2773 0995                        l2765 0988  
                      l2757 0978                        l2749 0968                        l2693 08EC  
                      l3477 08A4                        l2685 11B3                        l2677 119A  
                      l2909 1F1A                        l3397 1247                        l3805 07A5  
                      l3741 06BF                        l3733 0689                        l3725 0625  
                      l3717 0612                        l3709 05F8                        l3661 0447  
                      l3653 0388                        l3645 037A                        l3637 0364  
                      l3629 034A                        l3573 01C2                        l3557 0178  
                      l3565 019F                        ?_pad 0024                        l2935 10F0  
                      l2927 10D2                        l2943 1F39                        l3487 1EE9  
                      l3495 1F9C                        l4295 1517                        l3823 14EC  
                      l3815 14D8                        l2871 0B07                        l2863 0AD7  
                      l2855 0AC2                        l2839 0AA7                        l2847 0AB3  
                      l2791 09F0                        l2783 09D8                        l2775 09AC  
                      l2767 098C                        l2759 097C                        l2695 08F2  
                      l3479 08BB                        l2687 11D1                        l2679 119F  
                      l3399 124C                        l2919 1F01                        l3807 07B1  
                      l3751 06EB                        l3743 06CF                        l3735 06A5  
                      l3727 0632                        l3719 0617                        l3671 04D2  
                      l3663 0459                        l3655 0390                        l3647 037C  
                      l3639 0368                        l3591 0217                        l3575 01CD  
                      l3583 01F4                        l3559 0182                        l3911 0E2A  
                      l3903 0DF0                        l2937 10F5                        l2929 10DC  
                      l4297 10B2                        l2945 1F42                        l3497 1FAB  
                      l3841 1567                        l3825 1501                        l3817 14DE  
                      l2961 1307                        l2953 12FB                        l2881 0B1B  
                      l2873 0B0F                        l2865 0ADB                        l2849 0AB7  
                      l2793 09F5                        l2785 09D9                        l2777 09CB  
                      l2769 0990                        l2697 08F6                        l2689 11E3  
                      l3809 07B6                        l3761 0703                        l3753 06F1  
                      l3745 06D6                        l3737 06A9                        l3729 0637  
                      l3681 0562                        l3673 04DA                        l3665 04AB  
                      l3657 0399                        l3649 0382                        l3593 0243  
                      l3585 01FD                        l3577 01D7                        l3913 0E3B  
                      l3905 0E0C                        l4299 1041                        l2947 1F47  
                      l2939 1F33                        l3499 1FAC                        l3835 1540  
                      l3827 150B                        l2971 131C                        l2963 130B  
                      l2955 12FC                        l2891 1FBE                        l2883 0B25  
                      l2875 0B14                        l2867 0AF9                        l2859 0ACA  
                      l2787 09E2                        l2779 09D2                        l2699 08FA  
                      l3771 071A                        l3763 0707                        l3755 06F7  
                      l3747 06DA                        l3691 0589                        l3739 06AD  
                      l3683 0568                        l3675 04F7                        l3667 04B5  
                      l3659 0443                        l3595 0247                        l3587 01FF  
                      l3579 01DC                        l3851 11F6                        l3931 0EC2  
                      l3923 0E69                        l3915 0E43                        l3907 0E1E  
                      l2949 1F4D                        l3837 1554                        l3829 151F  
                      l2981 133B                        l2973 131F                        l2965 1310  
                      l2957 1300                        l2893 1FC2                        l2885 0B29  
                      l2877 0B15                        l2869 0B02                        l2797 09FE  
                      l2789 09E6                        l3781 0751                        l3773 0732  
                      l3765 070B                        l3757 06FB                        l3749 06E6  
                      l3693 05C9                        l3685 0575                        l3677 0531  
                      l3669 04CD                        l3597 0283                        l3861 120D  
                      l3853 1202                        l3941 0F01                        l3933 0EC7  
                      l3917 0E51                        l3909 0E21                        l3925 0E85  
                      l3839 155B                        l2991 1350                        l2983 133F  
                      l2975 1324                        l2967 1314                        l2959 1305  
                      l2895 1FCD                        l2887 1FB5                        l2879 0B19  
                      l2799 0A06                        l3791 0774                        l3783 0760  
                      l3775 0743                        l3767 0710                        l3759 0701  
                      l3695 05CD                        l3687 057B                        l3679 0536  
                      l3599 02A0                        l3871 1237                        l3863 1211  
                      l3943 0F11                        l3935 0EE4                        l3927 0EA0  
                      l3919 0E61                        l2993 1355                        l2985 1340  
                      l2977 1328                        l2969 1316                        l2897 1FD2  
                      l2889 1FB7                        l3793 0780                        l3785 0765  
                      l3777 0747                        l3769 0715                        l3697 05D3  
                      l3689 0580                        l3865 1219                        l3857 1205  
                      l3849 11EE                        l3961 0F90                        l3953 0F4C  
                      l3937 0EEA                        l3929 0EA5                        l3881 0D9D  
                      l3875 1E66                        l2987 1345                        l2979 132C  
                      l3795 0785                        l3787 076B                        l3779 074B  
                      l3699 05D9                        l3867 1222                        l3859 1209  
                      l3971 0FCB                        l3955 0F67                        l3939 0EF9  
                      l3947 0F27                        l3891 0DCD                        l3883 0DA2  
                      l2989 134B                        l2997 1147                        l3789 0770  
                      l3869 1228                        l3957 0F78                        l3949 0F39  
                      l3965 0FA6                        l3893 0DD1                        l3885 0DA6  
                      l3981 0FDC                        l3877 0D84                        l3991 108B  
                      l2999 1148                        l3799 0789                        l3983 0FF5  
                      l3967 0FB8                        l3975 0FD1                        l3959 0F88  
                      l3895 0DD2                        l3887 0DB8                        l3879 0D95  
                      l3993 108C                        l3977 0FD9                        l3969 0FC0  
                      l3889 0DC0                        l3897 0DD8                        l3995 1092  
                      l3899 0DE8                        l3997 1098                        l3989 1E6D  
                      l3999 109E                        STR_1 200C                        STR_2 2000  
                      STR_3 2017                        STR_4 201F                        STR_7 201B  
                      STR_8 2023                        u3000 0A1B                        u3001 0A1A  
                      u3100 0AB7                        u3020 0A41                        u3101 0AB6  
                      u3021 0A40                        u3110 0ABC                        u3030 0A70  
                      u3111 0ABB                        u3031 0A6F                        u3023 0A3D  
                      u3015 0A1F                        u4000 1797                        u3200 0B14  
                      u3120 0AC2                        u3040 0A89                        _LATD 010F  
                      u4001 1796                        u3201 0B13                        u3121 0AC1  
                      u3041 0A88                        u4010 17A5                        u3210 0B19  
                      u3130 0AC9                        u3050 0A8E                        u3211 0B18  
                      u3131 0AC8                        u3051 0A8D                        u3300 10C6  
                      u4020 17C0                        u4100 0B6E                        u3220 0B29  
                      u3140 0ACF                        u3301 10C5                        u4021 17BF  
                      u4101 0B6D                        u3221 0B28                        u3141 0ACE  
                      u3310 10D2                        u4030 17DB                        u3230 1FC2  
                      u4110 0B85                        u3150 0ADB                        u3070 0AA2  
                      u3311 10D1                        u4031 17DA                        u4015 17A1  
                      u3231 1FC1                        u4111 0B84                        u3151 0ADA  
                      u3071 0AA1                        u3320 10DC                        u3400 131C  
                      u4040 17F0                        u4120 0B8A                        u3160 0AEA  
                      u3080 0AA7                        u5000 06CF                        u3321 10DB  
                      u3401 131B                        u4041 17EF                        u4025 17BC  
                      u4121 0B89                        u3081 0AA6                        u3065 0A98  
                      u5001 06CE                        u3330 10E6                        u3250 1FD2  
                      u4210 0CE1                        u4050 0B39                        u3170 0AF9  
                      u3090 0AB1                        u5010 06D6                        u3331 10E5  
                      u4035 17D7                        u3251 1FD1                        u4211 0CE0  
                      u4051 0B38                        u3171 0AF8                        u3091 0AB0  
                      u5011 06D5                        u3340 1F39                        u5100 1500  
                      u3420 132C                        u3500 1162                        u4300 0D70  
                      u4220 0CE6                        u4060 0B3F                        u3180 0B02  
                      u3260 1FFF                        u5020 06DA                        u3341 1F38  
                      u5101 14FF                        u3421 132B                        u3501 1161  
                      u3245 1FC7                        u4301 0D6F                        u4221 0CE5  
                      u4205 0CD3                        u4061 0B3E                        u3181 0B01  
                      u3165 0AE6                        u3261 1FFE                        u5021 06D9  
                      u5005 06CB                        u5110 1554                        u4230 0CFA  
                      u4150 0C92                        u4070 0B44                        u3190 0B07  
                      u3270 1F2C                        u4310 124C                        u5030 06F7  
                      u5111 1553                        u3415 1320                        u4231 0CF9  
                      u4135 0C09                        u4071 0B43                        u3191 0B06  
                      u3271 1F2B                        u4311 124B                        u5031 06F6  
                      u5120 155B                        u3440 133B                        u3520 1172  
                      u3600 1462                        u4240 0D01                        u4160 0CA9  
                      u4080 0B63                        u2800 08FA                        u4400 1435  
                      u4320 125A                        u3280 1F11                        u5040 0707  
                      u5200 0DD1                        u5121 155A                        u3441 133A  
                      u3521 1171                        u3601 1461                        u4241 0D00  
                      u4145 0C38                        u4081 0B62                        u2801 08F9  
                      u4321 1259                        u3281 1F0F                        u5041 0706  
                      u5201 0DD0                        u3370 1F4D                        u3530 117C  
                      u3610 147E                        u4250 0D07                        u4090 0B69  
                      u2810 0900                        u4410 1440                        u4330 1283  
                      u3290 1F12                        u5050 0751                        u5130 1202  
                      u5210 0E0C                        u3371 1F4C                        u3355 1F3E  
                      u3435 132D                        u3531 117B                        u3515 1166  
                      u3611 147D                        u4251 0D06                        u4155 0C8E  
                      u4091 0B68                        u2811 08FF                        u4411 143E  
                      u4331 1282                        u5051 0750                        u5131 1201  
                      u5211 0E0B                        u3460 134B                        u3380 1300  
                      u3620 148A                        u4260 0D13                        u2900 09B5  
                      u2820 0905                        u4420 1441                        u4500 0881  
                      u4340 1288                        u5060 0760                        u5140 1219  
                      u5300 0FB8                        u5220 0E1E                        u3365 1F43  
                      u3461 134A                        u3445 1337                        u3381 12FF  
                      u3621 1489                        u4261 0D12                        u4165 0CA5  
                      u2901 09B3                        u2821 0904                        u4405 1431  
                      u4341 1287                        u5061 075F                        u5141 1218  
                      u5301 0FB7                        u5221 0E1D                        u3470 1350  
                      u3390 130B                        u3550 118B                        u3630 14A6  
                      u4270 0D21                        u4190 0CD1                        u2910 09B6  
                      u2830 0923                        u3710 13A7                        u4350 13F3  
                      u4510 088B                        u4430 0024                        u5070 076B  
                      u5150 1222                        u5230 0E3B                        u5310 1081  
                      u3471 134F                        u3455 1341                        u3391 130A  
                      u3551 118A                        u3535 1178                        u3631 14A5  
                      u4191 0CD0                        u4175 0CB4                        u2831 0922  
                      u3711 13A6                        u4511 088A                        u4335 127F  
                      u4431 0023                        u5071 076A                        u5151 1221  
                      u5231 0E3A                        u5311 1080                        u5400 0088  
                      u5320 1F92                        u3560 1190                        u3480 114C  
                      u3800 168B                        u3640 14D4                        u4280 0D3C  
                      u2920 09CB                        u2840 092C                        u3720 13AE  
                      u4360 1401                        u4520 08B1                        u2760 119F  
                      u4440 1EE1                        u5080 079A                        u5160 1228  
                      u5240 0E85                        u5401 0087                        u5321 1F91  
                      u3561 118F                        u3545 1181                        u3481 114B  
                      u3801 168A                        u3641 14D3                        u4281 0D3B  
                      u4185 0CC7                        u2921 09CA                        u2841 092B  
                      u3721 13AD                        u3705 1399                        u4361 1400  
                      u4505 087D                        u2761 119E                        u4441 1EE0  
                      u5081 0799                        u5065 075C                        u5161 1227  
                      u5241 0E84                        u5330 1ECD                        u5090 14EC  
                      u3490 1157                        u3810 1690                        u3570 110D  
                      u4290 0D54                        u3650 1E87                        u2930 09D8  
                      u2850 0932                        u4370 140E                        u4530 08BB  
                      u4450 0826                        u2770 11A4                        u4610 0103  
                      u5170 1237                        u5250 0EA5                        u5331 1ECC  
                      u5091 14EB                        u3491 1156                        u3811 168F  
                      u3571 110C                        u4291 0D53                        u4275 0D1D  
                      u3651 1E86                        u2931 09D7                        u2851 0931  
                      u4355 13EF                        u4531 08BA                        u2771 11A3  
                      u4611 0102                        u5171 1236                        u5251 0EA4  
                      u5420 0096                        u5340 002B                        u3900 1740  
                      u3820 16AB                        u3580 1129                        u2860 0937  
                      u3740 13BD                        u3660 1365                        u4380 1418  
                      u4540 08D1                        u4460 0841                        u2780 11B3  
                      u4700 0282                        u4620 0129                        u5260 0EC7  
                      u5180 0D95                        u5421 0095                        u5341 002A  
                      u4605 104C                        u3901 173F                        u3821 16AA  
                      u3581 1128                        u3645 14D0                        u4285 0D38  
                      u2861 0936                        u3741 13BC                        u3661 1364  
                      u4381 1417                        u4525 08AD                        u4461 0840  
                      u2781 11B2                        u4701 0281                        u4621 0128  
                      u5261 0EC6                        u5181 0D94                        u5430 009C  
                      u5350 002F                        u3910 1748                        u3830 16C9  
                      u3590 1143                        u2950 09EC                        u2870 0950  
                      u3750 13C2                        u3670 137B                        u4390 1428  
                      u4550 08DB                        u4470 0847                        u2790 11D1  
                      u4710 02CB                        u4630 012D                        u5270 0EEA  
                      u5190 0DB8                        u5431 009B                        u5415 008C  
                      u5351 002E                        u3911 1747                        u3831 16C8  
                      u3591 1142                        u4295 0D50                        u2951 09EB  
                      u2871 094F                        u3751 13C1                        u3735 13B0  
                      u4391 1427                        u4375 140A                        u4551 08DA  
                      u4471 0846                        u4455 0822                        u2791 11D0  
                      u4711 02CA                        u4631 012C                        u5271 0EE9  
                      u5191 0DB7                        u5440 00A0                        u5360 004F  
                      u4560 1EF9                        u3840 1701                        u3760 165A  
                      u2960 09F0                        u2880 0954                        u3680 1390  
                      u4480 0855                        u4800 0360                        u4720 02E8  
                      u4640 0133                        u5280 0F39                        u5441 009F  
                      u5361 004E                        u4561 1EF7                        u3841 1700  
                      u3761 1659                        u2961 09EF                        u2945 09DC  
                      u2881 0953                        u3681 138F                        u4545 08CD  
                      u4465 083D                        u4801 035F                        u4721 02E7  
                      u4641 0132                        u5281 0F38                        u5450 00B4  
                      u4570 1EFA                        u3930 1755                        u3770 1660  
                      u2970 09F5                        u2890 09AC                        u3690 1397  
                      u4490 0873                        u4810 0364                        u4730 02EE  
                      u4650 015C                        u5290 0F67                        u3931 1754  
                      u3771 165F                        u3595 113F                        u2971 09F4  
                      u2891 09AB                        u3691 1396                        u3675 1377  
                      u4491 0872                        u2795 11CD                        u4811 0363  
                      u4731 02ED                        u4651 015B                        u5291 0F66  
                      u5460 00C3                        u5380 006E                        u4580 1F9C  
                      u3780 1665                        u2980 0A0A                        u4900 0568  
                      u4820 036E                        u4740 0301                        u4660 016D  
                      u5461 00C2                        u5381 006D                        u4581 1F9B  
                      u3925 174B                        u3781 1664                        u2981 0A09  
                      u4485 0851                        u4901 0567                        u4821 036D  
                      u4741 0300                        u4661 016C                        u5517 1644  
                      u5470 00C7                        u4590 1FAB                        u3950 1765  
                      u3870 1713                        u3790 1685                        u2990 0A0E  
                      u4910 057B                        u4830 0372                        u4750 0311  
                      u4670 01B1                        u5471 00C6                        u5455 00B0  
                      u5375 0062                        u5607 10F6                        u5527 12B0  
                      u4591 1FAA                        u3951 1764                        u3871 1712  
                      u3855 1702                        u3791 1684                        u2991 0A0D  
                      u2895 09A8                        u4911 057A                        u4831 0371  
                      u4751 0310                        u4671 01B0                        u3960 176A  
                      u4920 05CD                        u4840 0382                        u4760 0318  
                      u4680 01C2                        u5537 12BC                        u3961 1769  
                      u3945 1757                        u3865 1709                        u4921 05CC  
                      u4841 0381                        u4761 0317                        u4745 02FD  
                      u4681 01C1                        u3970 177E                        u3890 172D  
                      u4930 05D3                        u4850 0459                        u4770 0327  
                      u4690 0216                        u5395 007C                        u5547 12C5  
                      u3971 177D                        u3891 172C                        u4931 05D2  
                      u4851 0458                        u4771 0326                        u4691 0215  
                      u3980 1785                        u4940 05D9                        u4860 04AB  
                      u4780 0343                        u5557 12D7                        u3981 1784  
                      u3885 1715                        u4941 05D8                        u4861 04AA  
                      u4781 0342                        u3990 178B                        u4950 05DD  
                      u4870 04CD                        u4790 035A                        u5567 12E9  
                      u3991 178A                        u3895 1729                        u4951 05DC  
                      u4871 04CC                        u4855 0455                        u4791 0359  
                      u4775 0323                        u4960 05E8                        u4880 04D2  
                      u5577 12F5                        u4961 05E7                        u4881 04D1  
                      u4785 033F                        u4970 05EC                        u4890 0531  
                      u5587 1EA4                        u4971 05EB                        u4891 0530  
                      u4980 0625                        u5597 1E95                        u4981 0624  
                      u4990 06BF                        u4991 06BE                        u4995 06BB  
                      _dbuf 01A0                        _atoi 14D8                        _main 156C  
                      _prec 00E7                        _temp 013C                        _nout 00E3  
                      pad@i 0027                        pad@p 0025                        fsr0h 0005  
                      fsr1h 0007                        indf0 0000                        fsr0l 0004  
                      indf1 0001                        fsr1l 0006                        pad@w 0029  
                      btemp 007E            __end_of_ADC_Init 1E7F            __end_of_ADC_Read 1ED2  
             ___fpclassifyf 13CE                        start 0002             ___fldiv@new_exp 0025  
             __write_nibble 10C1                       ??_pad 007C               ___fltol@sign1 0079  
                     ?_atoi 0076             __end_of___fladd 0B2B                       ?_main 0070  
           __end_of___fldiv 1800             __end_of___awdiv 135A             __end_of___flneg 1E8A  
                     STR_11 2027                       STR_13 2027             __end_of___awmod 119A  
           __end_of___flmul 0D82             __end_of___flsub 1F72             __end_of___fltol 13CE  
           ___awdiv@divisor 0070             ___awdiv@counter 0075                vfpfcnvrt@fmt 004E  
                     _TRISD 008F             __end_of_lcd_out 1F93                       _flags 00E9  
                     _fputc 119A                       _fputs 1FD7             __end_of_isdigit 1F01  
                     atoi@n 0022                       pad@fp 002B                       atoi@s 0076  
                     _width 00E5                       _putch 0800             __end_of_isspace 1FB4  
           __end_of_isupper 1F19                       status 0003                       wtemp0 007E  
           __end_of_sprintf 102E              ?___fpclassifyf 0070             __end_of_tolower 1EE9  
           __end_of_strncmp 1245              ?__write_nibble 0070             __initialization 07D8  
              __end_of_atoi 156C                __end_of_main 164C                      ??_atoi 0078  
                    ??_main 006D              lcd_command@cmd 0076                      ?_fputc 0070  
                    ?_fputs 0078                      _ADRESH 009C                      _ADRESL 009B  
          ___awdiv@dividend 0072                      ?_putch 0070                      _ANSELD 018F  
          __end_of___xxtofl 00D1                vfprintf@cfmt 0064            __end_of_lcd_init 12FB  
                    ___flge 144D                      ___fleq 10F9                   ??___fladd 0020  
                    ___wmul 1F33                   ??___fldiv 0078                   ??___awdiv 0074  
                 ??___flneg 0074                   ??___awmod 0074                   ??___flmul 0028  
                 ??___flsub 007E                   ??___fltol 0074                      _efgtoa 00D1  
                    _conver 00EB                      _floorf 0801            ___awdiv@quotient 0077  
           ___awmod@divisor 0070             ___awmod@counter 0075                      pad@buf 0024  
                    _txtLCD 0120                      _strcpy 0004                      _strlen 1F19  
                 ??_lcd_out 007D                      fputc@c 0070                      fputs@c 0020  
                    fputs@i 0021                      fputs@s 0023                   ??_isdigit 0072  
           ___fpclassifyf@e 0020                   ?_ADC_Init 0070             ___fpclassifyf@u 0022  
                 ?_ADC_Read 0070             ___fpclassifyf@x 0070                   ??_isspace 0072  
                 ??_isupper 0072                      putch@c 0070            __end_of_vfprintf 108A  
                 ??_sprintf 006C                   ??_tolower 0078                   ??_strncmp 0074  
                ___flge@ff1 003A                  ___flge@ff2 003E             ??___fpclassifyf 0074  
              ___xxtofl@arg 007A                ___xxtofl@exp 0079                ___xxtofl@val 0070  
                ___fleq@ff1 0070                  ___fleq@ff2 0074     __end_of__initialization 07FD  
           ??__write_nibble 0070                  ___flneg@f1 0070                  ___fltol@f1 0070  
            __pcstackCOMMON 0070                __pidataBANK2 1EA8               __end_of_fputc 11ED  
             __end_of_fputs 2000               __end_of_putch 0801            ??_lcd_set_cursor 0078  
                ??_ADC_Init 0070                  ??_ADC_Read 0072                     ??_fputc 0073  
                   ??_fputs 0079                     ??_putch 0070                  __pbssBANK0 006E  
                __pbssBANK1 00DF                  __pbssBANK2 0134                  __pbssBANK3 01A0  
         __end_of__Umul8_16 1FD7                  _efgtoa$877 00A2                  _efgtoa$869 00A0  
                _efgtoa$878 00A4                  __pmaintext 156C                  __send_byte 102E  
                   ?___flge 003A                     ?___fleq 0070                     ?___wmul 0070  
                   ?_efgtoa 0046                     ?_floorf 002D                  ADC_Read@ch 0073  
                   ?_strcpy 0070                     ?_strlen 0070                   ?___xxtofl 0070  
         _lcd_disable_blink 1E8A          ?_lcd_disable_blink 0070                   ?_lcd_init 0070  
       ??_lcd_disable_blink 0077                     ___fladd 08EC                     ___fldiv 164C  
                   ___awdiv 12FB                     ___flneg 1E7F                     ___awmod 1147  
                   ___flmul 0B2B                     ___flsub 1F52                     ___fltol 135A  
         __end_of_lcd_write 1E74                   ?_vfprintf 005E                     __ptext1 1004  
                   __ptext2 1059                     __ptext3 0D82                     __ptext4 11ED  
                   __ptext5 00D1                     __ptext6 1ED2                     __ptext7 1F01  
                   __ptext8 0004                     __ptext9 1245                     _lcd_out 1F72  
 __end_of_lcd_disable_blink 1E99                     _isdigit 1EE9                  ??___xxtofl 0074  
          ___awmod@dividend 0072                     _isspace 1F93            __send_byte@value 0075  
                   _isupper 1F01                     efgtoa@c 004A                     efgtoa@d 00B2  
                   efgtoa@e 00CB                     efgtoa@f 0046                     efgtoa@g 00C7  
                   efgtoa@h 00BD                     efgtoa@i 00C5                     efgtoa@l 00C1  
                   efgtoa@m 00AC                     efgtoa@n 00CD                     efgtoa@p 00B7  
                   efgtoa@t 00A6                     efgtoa@u 00CF                     efgtoa@w 00B9  
                   atoi@neg 0020                     _sprintf 1004                     _tolower 1ED2  
                   clrloop0 1E5A                  ??_lcd_init 0077                     _strncmp 11ED  
      end_of_initialization 07FD  __end_of_lcd_disable_cursor 1EA8                     floorf@e 003B  
                   floorf@m 0037                     floorf@u 003D                     floorf@x 002D  
                   fputc@fp 0072                     init_ram 1E5F                     fputs@fp 0078  
                   initloop 1E60                 ?__send_byte 0072           __end_of_vfpfcnvrt 1000  
                efgtoa@mode 00BC                  efgtoa@sign 00B4                  ??_vfprintf 0061  
                   strcpy@d 0076                     strlen@a 0073                     strcpy@s 0074  
                   strlen@s 0074                 ___fladd@grs 007B               ___xxtofl@sign 0078  
                 _TRISAbits 008C                 ___fldiv@grs 0027                 ___fldiv@rem 0020  
            lcd_write@letra 0076                 ___flmul@grs 002E                  lcd_out@col 007B  
                lcd_out@row 0020                  lcd_out@str 007C               ??_lcd_command 0076  
            __end_of___flge 14D8              __end_of___fleq 1147                 vfpfcnvrt@ap 004F  
               vfpfcnvrt@ct 0059                 vfpfcnvrt@fp 005D              __end_of___wmul 1F52  
            __end_of_efgtoa 07D8              __end_of_floorf 08EC                  floorf@F526 0134  
            __end_of_strcpy 0025              __end_of_strlen 1F33         start_initialization 07D8  
               __end_of_pad 129E                 __lcd_params 006E       __end_of___fpclassifyf 144D  
     __end_of__write_nibble 10F9                 vfprintf@fmt 005E                    ??___flge 0042  
                  ??___fleq 0078                    ??___wmul 0074         __end_of_lcd_command 1E6C  
                  ??_efgtoa 004B                   __Umul8_16 1FB4                 __pdataBANK2 0120  
                  ??_floorf 0031                    ??_strcpy 0072                    ??_strlen 0072  
                 ___fladd@a 0074                   ___fladd@b 0070                   ___fldiv@a 0070  
                 ___fldiv@b 0074                   ___flmul@a 0024                   ___flmul@b 0020  
                 ___flsub@a 003A                   ___flsub@b 003E                   ___latbits 0003  
             __pcstackBANK0 0020               __pcstackBANK1 00A0                    ?___fladd 0070  
                  ?___fldiv 0070                    ?___awdiv 0070                    ?___flneg 0070  
                  ?___awmod 0070                    ?___flmul 0020                    ?___flsub 003A  
                  ?___fltol 0070                  ?__Umul8_16 0070                   _lcd_write 1E6C  
                  ?_lcd_out 007B                    ?_isdigit 0070                    _ADC_Init 1E74  
                  _ADC_Read 1EBC                    ?_isspace 0070                    ?_isupper 0070  
                  ?_sprintf 0066                    ?_tolower 0076                    ?_strncmp 0070  
           __send_byte@mode 0072              ___wmul@product 0074                   clear_ram0 1E59  
               _lcd_command 1E65                ??__send_byte 0073          _lcd_disable_cursor 1E99  
                 _vfpfcnvrt 0D82                  _ADCON0bits 009D                  _ADCON1bits 009E  
       ?_lcd_disable_cursor 0070                  ?_lcd_write 0070           ___wmul@multiplier 0070  
                vfpfcnvrt@c 005C                  vfpfcnvrt@f 0055          __end_of__send_byte 1059  
      ??_lcd_disable_cursor 0077                  vfprintf@ap 0060                  vfprintf@fp 0063  
               ??__Umul8_16 0072                  ?_vfpfcnvrt 004E                  _ANSELAbits 018C  
        ___fpclassifyf@F465 0138                  sprintf@fmt 0066                    ___xxtofl 0025  
                  __ptext10 1F19                    __ptext11 1FD7                    __ptext20 0B2B  
                  __ptext12 119A                    __ptext21 1FB4                    __ptext13 0800  
                  __ptext30 1F33                    __ptext22 144D                    __ptext14 0801  
                  __ptext31 1F72                    __ptext23 10F9                    __ptext15 13CE  
                  __ptext40 0025                    __ptext32 1E6C                    __ptext24 164C  
                  __ptext16 135A                    __ptext41 1EBC                    __ptext33 108A  
                  __ptext25 1147                    __ptext17 1F52                    __ptext42 1E74  
                  __ptext34 129E                    __ptext26 12FB                    __ptext18 08EC  
                  __ptext35 1E99                    __ptext27 14D8                    __ptext19 1E7F  
                  __ptext36 1E8A                    __ptext28 1F93                    __ptext37 1E65  
                  __ptext29 1EE9                    __ptext38 102E                    __ptext39 10C1  
                  _lcd_init 129E                  strcpy@dest 0077                    efgtoa@fp 00B6  
                  efgtoa@ne 00AA                    efgtoa@pp 00A8                    efgtoa@ou 00AE  
                  _vfprintf 1059                 _isspace$956 0074                 ??_lcd_write 0076  
                  isdigit@c 0070        __write_nibble@nibble 0071              _lcd_set_cursor 108A  
         lcd_set_cursor@col 0077                   sprintf@ap 00D4           lcd_set_cursor@row 007A  
                  isspace@c 0070                   strcpy@src 0070                    isupper@c 0070  
                 strncmp@_l 0075                   strncmp@_r 0070                 efgtoa@nmode 00BB  
               ??_vfpfcnvrt 0050               __pstringtext1 2000               __pstringtext2 200C  
             __pstringtext3 2017               __pstringtext4 201B               __pstringtext5 201F  
             __pstringtext6 2023               __pstringtext7 2027               __pstringtext8 0000  
    __Umul8_16@multiplicand 0070                    sprintf@f 00D5                    tolower@c 0076  
                  sprintf@s 00D3                    strncmp@l 0078                    strncmp@n 0072  
                  strncmp@r 0076      __end_of_lcd_set_cursor 10C1               ___fladd@signs 0078  
              ___fladd@aexp 0079                ___fladd@bexp 007A        __Umul8_16@multiplier 0078  
              ?_lcd_command 0070           __Umul8_16@product 0074  
