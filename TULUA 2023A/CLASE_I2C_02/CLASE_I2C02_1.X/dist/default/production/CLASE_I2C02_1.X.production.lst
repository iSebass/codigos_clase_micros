

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat May 27 20:06:04 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,inline,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,inline,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,inline,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,inline,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 2.40
    76                           ; Generated 17/11/2021 GMT
    77                           ; 
    78                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F1939 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  008F                     	;# 
   145  0090                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0093                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009B                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0110                     	;# 
   165  0111                     	;# 
   166  0112                     	;# 
   167  0113                     	;# 
   168  0114                     	;# 
   169  0115                     	;# 
   170  0116                     	;# 
   171  0117                     	;# 
   172  0118                     	;# 
   173  0119                     	;# 
   174  011A                     	;# 
   175  011B                     	;# 
   176  011D                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  018F                     	;# 
   180  0190                     	;# 
   181  0191                     	;# 
   182  0191                     	;# 
   183  0192                     	;# 
   184  0193                     	;# 
   185  0193                     	;# 
   186  0193                     	;# 
   187  0194                     	;# 
   188  0195                     	;# 
   189  0196                     	;# 
   190  0199                     	;# 
   191  019A                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019C                     	;# 
   197  019C                     	;# 
   198  019D                     	;# 
   199  019E                     	;# 
   200  019F                     	;# 
   201  020D                     	;# 
   202  0210                     	;# 
   203  0211                     	;# 
   204  0212                     	;# 
   205  0213                     	;# 
   206  0214                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0216                     	;# 
   210  0217                     	;# 
   211  0291                     	;# 
   212  0291                     	;# 
   213  0292                     	;# 
   214  0293                     	;# 
   215  0294                     	;# 
   216  0295                     	;# 
   217  0295                     	;# 
   218  0296                     	;# 
   219  0298                     	;# 
   220  0298                     	;# 
   221  0299                     	;# 
   222  029A                     	;# 
   223  029B                     	;# 
   224  029C                     	;# 
   225  029C                     	;# 
   226  029D                     	;# 
   227  029E                     	;# 
   228  029F                     	;# 
   229  0311                     	;# 
   230  0311                     	;# 
   231  0312                     	;# 
   232  0313                     	;# 
   233  0314                     	;# 
   234  0315                     	;# 
   235  0315                     	;# 
   236  0316                     	;# 
   237  0318                     	;# 
   238  0318                     	;# 
   239  0319                     	;# 
   240  031A                     	;# 
   241  031C                     	;# 
   242  031C                     	;# 
   243  031D                     	;# 
   244  031E                     	;# 
   245  0394                     	;# 
   246  0395                     	;# 
   247  0396                     	;# 
   248  0415                     	;# 
   249  0416                     	;# 
   250  0417                     	;# 
   251  041C                     	;# 
   252  041D                     	;# 
   253  041E                     	;# 
   254  0791                     	;# 
   255  0792                     	;# 
   256  0793                     	;# 
   257  0794                     	;# 
   258  0795                     	;# 
   259  0798                     	;# 
   260  0799                     	;# 
   261  079A                     	;# 
   262  07A0                     	;# 
   263  07A1                     	;# 
   264  07A2                     	;# 
   265  07A3                     	;# 
   266  07A4                     	;# 
   267  07A5                     	;# 
   268  07A6                     	;# 
   269  07A7                     	;# 
   270  07A8                     	;# 
   271  07A9                     	;# 
   272  07AA                     	;# 
   273  07AB                     	;# 
   274  0FE4                     	;# 
   275  0FE5                     	;# 
   276  0FE6                     	;# 
   277  0FE7                     	;# 
   278  0FE8                     	;# 
   279  0FE9                     	;# 
   280  0FEA                     	;# 
   281  0FEB                     	;# 
   282  0FED                     	;# 
   283  0FEE                     	;# 
   284  0FEF                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  008C                     	;# 
   317  008D                     	;# 
   318  008E                     	;# 
   319  008F                     	;# 
   320  0090                     	;# 
   321  0091                     	;# 
   322  0092                     	;# 
   323  0093                     	;# 
   324  0095                     	;# 
   325  0096                     	;# 
   326  0097                     	;# 
   327  0098                     	;# 
   328  0099                     	;# 
   329  009A                     	;# 
   330  009B                     	;# 
   331  009B                     	;# 
   332  009C                     	;# 
   333  009D                     	;# 
   334  009E                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  010F                     	;# 
   339  0110                     	;# 
   340  0111                     	;# 
   341  0112                     	;# 
   342  0113                     	;# 
   343  0114                     	;# 
   344  0115                     	;# 
   345  0116                     	;# 
   346  0117                     	;# 
   347  0118                     	;# 
   348  0119                     	;# 
   349  011A                     	;# 
   350  011B                     	;# 
   351  011D                     	;# 
   352  018C                     	;# 
   353  018D                     	;# 
   354  018F                     	;# 
   355  0190                     	;# 
   356  0191                     	;# 
   357  0191                     	;# 
   358  0192                     	;# 
   359  0193                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0194                     	;# 
   363  0195                     	;# 
   364  0196                     	;# 
   365  0199                     	;# 
   366  019A                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019C                     	;# 
   372  019C                     	;# 
   373  019D                     	;# 
   374  019E                     	;# 
   375  019F                     	;# 
   376  020D                     	;# 
   377  0210                     	;# 
   378  0211                     	;# 
   379  0212                     	;# 
   380  0213                     	;# 
   381  0214                     	;# 
   382  0215                     	;# 
   383  0215                     	;# 
   384  0216                     	;# 
   385  0217                     	;# 
   386  0291                     	;# 
   387  0291                     	;# 
   388  0292                     	;# 
   389  0293                     	;# 
   390  0294                     	;# 
   391  0295                     	;# 
   392  0295                     	;# 
   393  0296                     	;# 
   394  0298                     	;# 
   395  0298                     	;# 
   396  0299                     	;# 
   397  029A                     	;# 
   398  029B                     	;# 
   399  029C                     	;# 
   400  029C                     	;# 
   401  029D                     	;# 
   402  029E                     	;# 
   403  029F                     	;# 
   404  0311                     	;# 
   405  0311                     	;# 
   406  0312                     	;# 
   407  0313                     	;# 
   408  0314                     	;# 
   409  0315                     	;# 
   410  0315                     	;# 
   411  0316                     	;# 
   412  0318                     	;# 
   413  0318                     	;# 
   414  0319                     	;# 
   415  031A                     	;# 
   416  031C                     	;# 
   417  031C                     	;# 
   418  031D                     	;# 
   419  031E                     	;# 
   420  0394                     	;# 
   421  0395                     	;# 
   422  0396                     	;# 
   423  0415                     	;# 
   424  0416                     	;# 
   425  0417                     	;# 
   426  041C                     	;# 
   427  041D                     	;# 
   428  041E                     	;# 
   429  0791                     	;# 
   430  0792                     	;# 
   431  0793                     	;# 
   432  0794                     	;# 
   433  0795                     	;# 
   434  0798                     	;# 
   435  0799                     	;# 
   436  079A                     	;# 
   437  07A0                     	;# 
   438  07A1                     	;# 
   439  07A2                     	;# 
   440  07A3                     	;# 
   441  07A4                     	;# 
   442  07A5                     	;# 
   443  07A6                     	;# 
   444  07A7                     	;# 
   445  07A8                     	;# 
   446  07A9                     	;# 
   447  07AA                     	;# 
   448  07AB                     	;# 
   449  0FE4                     	;# 
   450  0FE5                     	;# 
   451  0FE6                     	;# 
   452  0FE7                     	;# 
   453  0FE8                     	;# 
   454  0FE9                     	;# 
   455  0FEA                     	;# 
   456  0FEB                     	;# 
   457  0FED                     	;# 
   458  0FEE                     	;# 
   459  0FEF                     	;# 
   460  0000                     	;# 
   461  0001                     	;# 
   462  0002                     	;# 
   463  0003                     	;# 
   464  0004                     	;# 
   465  0005                     	;# 
   466  0006                     	;# 
   467  0007                     	;# 
   468  0008                     	;# 
   469  0009                     	;# 
   470  000A                     	;# 
   471  000B                     	;# 
   472  000C                     	;# 
   473  000D                     	;# 
   474  000E                     	;# 
   475  000F                     	;# 
   476  0010                     	;# 
   477  0011                     	;# 
   478  0012                     	;# 
   479  0013                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0016                     	;# 
   483  0017                     	;# 
   484  0018                     	;# 
   485  0019                     	;# 
   486  001A                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001E                     	;# 
   490  001F                     	;# 
   491  008C                     	;# 
   492  008D                     	;# 
   493  008E                     	;# 
   494  008F                     	;# 
   495  0090                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0093                     	;# 
   499  0095                     	;# 
   500  0096                     	;# 
   501  0097                     	;# 
   502  0098                     	;# 
   503  0099                     	;# 
   504  009A                     	;# 
   505  009B                     	;# 
   506  009B                     	;# 
   507  009C                     	;# 
   508  009D                     	;# 
   509  009E                     	;# 
   510  010C                     	;# 
   511  010D                     	;# 
   512  010E                     	;# 
   513  010F                     	;# 
   514  0110                     	;# 
   515  0111                     	;# 
   516  0112                     	;# 
   517  0113                     	;# 
   518  0114                     	;# 
   519  0115                     	;# 
   520  0116                     	;# 
   521  0117                     	;# 
   522  0118                     	;# 
   523  0119                     	;# 
   524  011A                     	;# 
   525  011B                     	;# 
   526  011D                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529  018F                     	;# 
   530  0190                     	;# 
   531  0191                     	;# 
   532  0191                     	;# 
   533  0192                     	;# 
   534  0193                     	;# 
   535  0193                     	;# 
   536  0193                     	;# 
   537  0194                     	;# 
   538  0195                     	;# 
   539  0196                     	;# 
   540  0199                     	;# 
   541  019A                     	;# 
   542  019B                     	;# 
   543  019B                     	;# 
   544  019B                     	;# 
   545  019B                     	;# 
   546  019C                     	;# 
   547  019C                     	;# 
   548  019D                     	;# 
   549  019E                     	;# 
   550  019F                     	;# 
   551  020D                     	;# 
   552  0210                     	;# 
   553  0211                     	;# 
   554  0212                     	;# 
   555  0213                     	;# 
   556  0214                     	;# 
   557  0215                     	;# 
   558  0215                     	;# 
   559  0216                     	;# 
   560  0217                     	;# 
   561  0291                     	;# 
   562  0291                     	;# 
   563  0292                     	;# 
   564  0293                     	;# 
   565  0294                     	;# 
   566  0295                     	;# 
   567  0295                     	;# 
   568  0296                     	;# 
   569  0298                     	;# 
   570  0298                     	;# 
   571  0299                     	;# 
   572  029A                     	;# 
   573  029B                     	;# 
   574  029C                     	;# 
   575  029C                     	;# 
   576  029D                     	;# 
   577  029E                     	;# 
   578  029F                     	;# 
   579  0311                     	;# 
   580  0311                     	;# 
   581  0312                     	;# 
   582  0313                     	;# 
   583  0314                     	;# 
   584  0315                     	;# 
   585  0315                     	;# 
   586  0316                     	;# 
   587  0318                     	;# 
   588  0318                     	;# 
   589  0319                     	;# 
   590  031A                     	;# 
   591  031C                     	;# 
   592  031C                     	;# 
   593  031D                     	;# 
   594  031E                     	;# 
   595  0394                     	;# 
   596  0395                     	;# 
   597  0396                     	;# 
   598  0415                     	;# 
   599  0416                     	;# 
   600  0417                     	;# 
   601  041C                     	;# 
   602  041D                     	;# 
   603  041E                     	;# 
   604  0791                     	;# 
   605  0792                     	;# 
   606  0793                     	;# 
   607  0794                     	;# 
   608  0795                     	;# 
   609  0798                     	;# 
   610  0799                     	;# 
   611  079A                     	;# 
   612  07A0                     	;# 
   613  07A1                     	;# 
   614  07A2                     	;# 
   615  07A3                     	;# 
   616  07A4                     	;# 
   617  07A5                     	;# 
   618  07A6                     	;# 
   619  07A7                     	;# 
   620  07A8                     	;# 
   621  07A9                     	;# 
   622  07AA                     	;# 
   623  07AB                     	;# 
   624  0FE4                     	;# 
   625  0FE5                     	;# 
   626  0FE6                     	;# 
   627  0FE7                     	;# 
   628  0FE8                     	;# 
   629  0FE9                     	;# 
   630  0FEA                     	;# 
   631  0FEB                     	;# 
   632  0FED                     	;# 
   633  0FEE                     	;# 
   634  0FEF                     	;# 
   635  0000                     	;# 
   636  0001                     	;# 
   637  0002                     	;# 
   638  0003                     	;# 
   639  0004                     	;# 
   640  0005                     	;# 
   641  0006                     	;# 
   642  0007                     	;# 
   643  0008                     	;# 
   644  0009                     	;# 
   645  000A                     	;# 
   646  000B                     	;# 
   647  000C                     	;# 
   648  000D                     	;# 
   649  000E                     	;# 
   650  000F                     	;# 
   651  0010                     	;# 
   652  0011                     	;# 
   653  0012                     	;# 
   654  0013                     	;# 
   655  0015                     	;# 
   656  0016                     	;# 
   657  0016                     	;# 
   658  0017                     	;# 
   659  0018                     	;# 
   660  0019                     	;# 
   661  001A                     	;# 
   662  001B                     	;# 
   663  001C                     	;# 
   664  001E                     	;# 
   665  001F                     	;# 
   666  008C                     	;# 
   667  008D                     	;# 
   668  008E                     	;# 
   669  008F                     	;# 
   670  0090                     	;# 
   671  0091                     	;# 
   672  0092                     	;# 
   673  0093                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0097                     	;# 
   677  0098                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009B                     	;# 
   682  009C                     	;# 
   683  009D                     	;# 
   684  009E                     	;# 
   685  010C                     	;# 
   686  010D                     	;# 
   687  010E                     	;# 
   688  010F                     	;# 
   689  0110                     	;# 
   690  0111                     	;# 
   691  0112                     	;# 
   692  0113                     	;# 
   693  0114                     	;# 
   694  0115                     	;# 
   695  0116                     	;# 
   696  0117                     	;# 
   697  0118                     	;# 
   698  0119                     	;# 
   699  011A                     	;# 
   700  011B                     	;# 
   701  011D                     	;# 
   702  018C                     	;# 
   703  018D                     	;# 
   704  018F                     	;# 
   705  0190                     	;# 
   706  0191                     	;# 
   707  0191                     	;# 
   708  0192                     	;# 
   709  0193                     	;# 
   710  0193                     	;# 
   711  0193                     	;# 
   712  0194                     	;# 
   713  0195                     	;# 
   714  0196                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019C                     	;# 
   722  019C                     	;# 
   723  019D                     	;# 
   724  019E                     	;# 
   725  019F                     	;# 
   726  020D                     	;# 
   727  0210                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0216                     	;# 
   735  0217                     	;# 
   736  0291                     	;# 
   737  0291                     	;# 
   738  0292                     	;# 
   739  0293                     	;# 
   740  0294                     	;# 
   741  0295                     	;# 
   742  0295                     	;# 
   743  0296                     	;# 
   744  0298                     	;# 
   745  0298                     	;# 
   746  0299                     	;# 
   747  029A                     	;# 
   748  029B                     	;# 
   749  029C                     	;# 
   750  029C                     	;# 
   751  029D                     	;# 
   752  029E                     	;# 
   753  029F                     	;# 
   754  0311                     	;# 
   755  0311                     	;# 
   756  0312                     	;# 
   757  0313                     	;# 
   758  0314                     	;# 
   759  0315                     	;# 
   760  0315                     	;# 
   761  0316                     	;# 
   762  0318                     	;# 
   763  0318                     	;# 
   764  0319                     	;# 
   765  031A                     	;# 
   766  031C                     	;# 
   767  031C                     	;# 
   768  031D                     	;# 
   769  031E                     	;# 
   770  0394                     	;# 
   771  0395                     	;# 
   772  0396                     	;# 
   773  0415                     	;# 
   774  0416                     	;# 
   775  0417                     	;# 
   776  041C                     	;# 
   777  041D                     	;# 
   778  041E                     	;# 
   779  0791                     	;# 
   780  0792                     	;# 
   781  0793                     	;# 
   782  0794                     	;# 
   783  0795                     	;# 
   784  0798                     	;# 
   785  0799                     	;# 
   786  079A                     	;# 
   787  07A0                     	;# 
   788  07A1                     	;# 
   789  07A2                     	;# 
   790  07A3                     	;# 
   791  07A4                     	;# 
   792  07A5                     	;# 
   793  07A6                     	;# 
   794  07A7                     	;# 
   795  07A8                     	;# 
   796  07A9                     	;# 
   797  07AA                     	;# 
   798  07AB                     	;# 
   799  0FE4                     	;# 
   800  0FE5                     	;# 
   801  0FE6                     	;# 
   802  0FE7                     	;# 
   803  0FE8                     	;# 
   804  0FE9                     	;# 
   805  0FEA                     	;# 
   806  0FEB                     	;# 
   807  0FED                     	;# 
   808  0FEE                     	;# 
   809  0FEF                     	;# 
   810  0000                     	;# 
   811  0001                     	;# 
   812  0002                     	;# 
   813  0003                     	;# 
   814  0004                     	;# 
   815  0005                     	;# 
   816  0006                     	;# 
   817  0007                     	;# 
   818  0008                     	;# 
   819  0009                     	;# 
   820  000A                     	;# 
   821  000B                     	;# 
   822  000C                     	;# 
   823  000D                     	;# 
   824  000E                     	;# 
   825  000F                     	;# 
   826  0010                     	;# 
   827  0011                     	;# 
   828  0012                     	;# 
   829  0013                     	;# 
   830  0015                     	;# 
   831  0016                     	;# 
   832  0016                     	;# 
   833  0017                     	;# 
   834  0018                     	;# 
   835  0019                     	;# 
   836  001A                     	;# 
   837  001B                     	;# 
   838  001C                     	;# 
   839  001E                     	;# 
   840  001F                     	;# 
   841  008C                     	;# 
   842  008D                     	;# 
   843  008E                     	;# 
   844  008F                     	;# 
   845  0090                     	;# 
   846  0091                     	;# 
   847  0092                     	;# 
   848  0093                     	;# 
   849  0095                     	;# 
   850  0096                     	;# 
   851  0097                     	;# 
   852  0098                     	;# 
   853  0099                     	;# 
   854  009A                     	;# 
   855  009B                     	;# 
   856  009B                     	;# 
   857  009C                     	;# 
   858  009D                     	;# 
   859  009E                     	;# 
   860  010C                     	;# 
   861  010D                     	;# 
   862  010E                     	;# 
   863  010F                     	;# 
   864  0110                     	;# 
   865  0111                     	;# 
   866  0112                     	;# 
   867  0113                     	;# 
   868  0114                     	;# 
   869  0115                     	;# 
   870  0116                     	;# 
   871  0117                     	;# 
   872  0118                     	;# 
   873  0119                     	;# 
   874  011A                     	;# 
   875  011B                     	;# 
   876  011D                     	;# 
   877  018C                     	;# 
   878  018D                     	;# 
   879  018F                     	;# 
   880  0190                     	;# 
   881  0191                     	;# 
   882  0191                     	;# 
   883  0192                     	;# 
   884  0193                     	;# 
   885  0193                     	;# 
   886  0193                     	;# 
   887  0194                     	;# 
   888  0195                     	;# 
   889  0196                     	;# 
   890  0199                     	;# 
   891  019A                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019C                     	;# 
   897  019C                     	;# 
   898  019D                     	;# 
   899  019E                     	;# 
   900  019F                     	;# 
   901  020D                     	;# 
   902  0210                     	;# 
   903  0211                     	;# 
   904  0212                     	;# 
   905  0213                     	;# 
   906  0214                     	;# 
   907  0215                     	;# 
   908  0215                     	;# 
   909  0216                     	;# 
   910  0217                     	;# 
   911  0291                     	;# 
   912  0291                     	;# 
   913  0292                     	;# 
   914  0293                     	;# 
   915  0294                     	;# 
   916  0295                     	;# 
   917  0295                     	;# 
   918  0296                     	;# 
   919  0298                     	;# 
   920  0298                     	;# 
   921  0299                     	;# 
   922  029A                     	;# 
   923  029B                     	;# 
   924  029C                     	;# 
   925  029C                     	;# 
   926  029D                     	;# 
   927  029E                     	;# 
   928  029F                     	;# 
   929  0311                     	;# 
   930  0311                     	;# 
   931  0312                     	;# 
   932  0313                     	;# 
   933  0314                     	;# 
   934  0315                     	;# 
   935  0315                     	;# 
   936  0316                     	;# 
   937  0318                     	;# 
   938  0318                     	;# 
   939  0319                     	;# 
   940  031A                     	;# 
   941  031C                     	;# 
   942  031C                     	;# 
   943  031D                     	;# 
   944  031E                     	;# 
   945  0394                     	;# 
   946  0395                     	;# 
   947  0396                     	;# 
   948  0415                     	;# 
   949  0416                     	;# 
   950  0417                     	;# 
   951  041C                     	;# 
   952  041D                     	;# 
   953  041E                     	;# 
   954  0791                     	;# 
   955  0792                     	;# 
   956  0793                     	;# 
   957  0794                     	;# 
   958  0795                     	;# 
   959  0798                     	;# 
   960  0799                     	;# 
   961  079A                     	;# 
   962  07A0                     	;# 
   963  07A1                     	;# 
   964  07A2                     	;# 
   965  07A3                     	;# 
   966  07A4                     	;# 
   967  07A5                     	;# 
   968  07A6                     	;# 
   969  07A7                     	;# 
   970  07A8                     	;# 
   971  07A9                     	;# 
   972  07AA                     	;# 
   973  07AB                     	;# 
   974  0FE4                     	;# 
   975  0FE5                     	;# 
   976  0FE6                     	;# 
   977  0FE7                     	;# 
   978  0FE8                     	;# 
   979  0FE9                     	;# 
   980  0FEA                     	;# 
   981  0FEB                     	;# 
   982  0FED                     	;# 
   983  0FEE                     	;# 
   984  0FEF                     	;# 
   985  0000                     	;# 
   986  0001                     	;# 
   987  0002                     	;# 
   988  0003                     	;# 
   989  0004                     	;# 
   990  0005                     	;# 
   991  0006                     	;# 
   992  0007                     	;# 
   993  0008                     	;# 
   994  0009                     	;# 
   995  000A                     	;# 
   996  000B                     	;# 
   997  000C                     	;# 
   998  000D                     	;# 
   999  000E                     	;# 
  1000  000F                     	;# 
  1001  0010                     	;# 
  1002  0011                     	;# 
  1003  0012                     	;# 
  1004  0013                     	;# 
  1005  0015                     	;# 
  1006  0016                     	;# 
  1007  0016                     	;# 
  1008  0017                     	;# 
  1009  0018                     	;# 
  1010  0019                     	;# 
  1011  001A                     	;# 
  1012  001B                     	;# 
  1013  001C                     	;# 
  1014  001E                     	;# 
  1015  001F                     	;# 
  1016  008C                     	;# 
  1017  008D                     	;# 
  1018  008E                     	;# 
  1019  008F                     	;# 
  1020  0090                     	;# 
  1021  0091                     	;# 
  1022  0092                     	;# 
  1023  0093                     	;# 
  1024  0095                     	;# 
  1025  0096                     	;# 
  1026  0097                     	;# 
  1027  0098                     	;# 
  1028  0099                     	;# 
  1029  009A                     	;# 
  1030  009B                     	;# 
  1031  009B                     	;# 
  1032  009C                     	;# 
  1033  009D                     	;# 
  1034  009E                     	;# 
  1035  010C                     	;# 
  1036  010D                     	;# 
  1037  010E                     	;# 
  1038  010F                     	;# 
  1039  0110                     	;# 
  1040  0111                     	;# 
  1041  0112                     	;# 
  1042  0113                     	;# 
  1043  0114                     	;# 
  1044  0115                     	;# 
  1045  0116                     	;# 
  1046  0117                     	;# 
  1047  0118                     	;# 
  1048  0119                     	;# 
  1049  011A                     	;# 
  1050  011B                     	;# 
  1051  011D                     	;# 
  1052  018C                     	;# 
  1053  018D                     	;# 
  1054  018F                     	;# 
  1055  0190                     	;# 
  1056  0191                     	;# 
  1057  0191                     	;# 
  1058  0192                     	;# 
  1059  0193                     	;# 
  1060  0193                     	;# 
  1061  0193                     	;# 
  1062  0194                     	;# 
  1063  0195                     	;# 
  1064  0196                     	;# 
  1065  0199                     	;# 
  1066  019A                     	;# 
  1067  019B                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019C                     	;# 
  1072  019C                     	;# 
  1073  019D                     	;# 
  1074  019E                     	;# 
  1075  019F                     	;# 
  1076  020D                     	;# 
  1077  0210                     	;# 
  1078  0211                     	;# 
  1079  0212                     	;# 
  1080  0213                     	;# 
  1081  0214                     	;# 
  1082  0215                     	;# 
  1083  0215                     	;# 
  1084  0216                     	;# 
  1085  0217                     	;# 
  1086  0291                     	;# 
  1087  0291                     	;# 
  1088  0292                     	;# 
  1089  0293                     	;# 
  1090  0294                     	;# 
  1091  0295                     	;# 
  1092  0295                     	;# 
  1093  0296                     	;# 
  1094  0298                     	;# 
  1095  0298                     	;# 
  1096  0299                     	;# 
  1097  029A                     	;# 
  1098  029B                     	;# 
  1099  029C                     	;# 
  1100  029C                     	;# 
  1101  029D                     	;# 
  1102  029E                     	;# 
  1103  029F                     	;# 
  1104  0311                     	;# 
  1105  0311                     	;# 
  1106  0312                     	;# 
  1107  0313                     	;# 
  1108  0314                     	;# 
  1109  0315                     	;# 
  1110  0315                     	;# 
  1111  0316                     	;# 
  1112  0318                     	;# 
  1113  0318                     	;# 
  1114  0319                     	;# 
  1115  031A                     	;# 
  1116  031C                     	;# 
  1117  031C                     	;# 
  1118  031D                     	;# 
  1119  031E                     	;# 
  1120  0394                     	;# 
  1121  0395                     	;# 
  1122  0396                     	;# 
  1123  0415                     	;# 
  1124  0416                     	;# 
  1125  0417                     	;# 
  1126  041C                     	;# 
  1127  041D                     	;# 
  1128  041E                     	;# 
  1129  0791                     	;# 
  1130  0792                     	;# 
  1131  0793                     	;# 
  1132  0794                     	;# 
  1133  0795                     	;# 
  1134  0798                     	;# 
  1135  0799                     	;# 
  1136  079A                     	;# 
  1137  07A0                     	;# 
  1138  07A1                     	;# 
  1139  07A2                     	;# 
  1140  07A3                     	;# 
  1141  07A4                     	;# 
  1142  07A5                     	;# 
  1143  07A6                     	;# 
  1144  07A7                     	;# 
  1145  07A8                     	;# 
  1146  07A9                     	;# 
  1147  07AA                     	;# 
  1148  07AB                     	;# 
  1149  0FE4                     	;# 
  1150  0FE5                     	;# 
  1151  0FE6                     	;# 
  1152  0FE7                     	;# 
  1153  0FE8                     	;# 
  1154  0FE9                     	;# 
  1155  0FEA                     	;# 
  1156  0FEB                     	;# 
  1157  0FED                     	;# 
  1158  0FEE                     	;# 
  1159  0FEF                     	;# 
  1160                           
  1161                           	psect	idataBANK0
  1162  03FE                     __pidataBANK0:
  1163                           
  1164                           ;initializer for i2c_lcd_set_cursor@local_mem
  1165  03FE  3400               	retlw	0
  1166  03FF  3440               	retlw	64
  1167  0400  3414               	retlw	20
  1168  0401  3454               	retlw	84
  1169                           
  1170                           	psect	stringtext1
  1171  0800                     __pstringtext1:
  1172  0800                     _i2c_fsmStateTable:
  1173  0800  3407               	retlw	low _I2C_DO_IDLE
  1174  0801  3404               	retlw	high _I2C_DO_IDLE
  1175  0802  3463               	retlw	low _I2C_DO_SEND_ADR_READ
  1176  0803  3404               	retlw	high _I2C_DO_SEND_ADR_READ
  1177  0804  3452               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1178  0805  3404               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1179  0806  3490               	retlw	low _I2C_DO_TX
  1180  0807  3407               	retlw	high _I2C_DO_TX
  1181  0808  34FD               	retlw	low _I2C_DO_RX
  1182  0809  3406               	retlw	high _I2C_DO_RX
  1183  080A  344B               	retlw	low _I2C_DO_RCEN
  1184  080B  3404               	retlw	high _I2C_DO_RCEN
  1185  080C  3433               	retlw	low _I2C_DO_TX_EMPTY
  1186  080D  3406               	retlw	high _I2C_DO_TX_EMPTY
  1187  080E  340C               	retlw	low _I2C_DO_SEND_RESTART_READ
  1188  080F  3404               	retlw	high _I2C_DO_SEND_RESTART_READ
  1189  0810  3411               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1190  0811  3404               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1191  0812  3416               	retlw	low _I2C_DO_SEND_RESTART
  1192  0813  3404               	retlw	high _I2C_DO_SEND_RESTART
  1193  0814  341B               	retlw	low _I2C_DO_SEND_STOP
  1194  0815  3404               	retlw	high _I2C_DO_SEND_STOP
  1195  0816  3420               	retlw	low _I2C_DO_RX_ACK
  1196  0817  3404               	retlw	high _I2C_DO_RX_ACK
  1197  0818  3425               	retlw	low _I2C_DO_RX_NACK_STOP
  1198  0819  3404               	retlw	high _I2C_DO_RX_NACK_STOP
  1199  081A  342A               	retlw	low _I2C_DO_RX_NACK_RESTART
  1200  081B  3404               	retlw	high _I2C_DO_RX_NACK_RESTART
  1201  081C  342F               	retlw	low _I2C_DO_RESET
  1202  081D  3404               	retlw	high _I2C_DO_RESET
  1203  081E  3407               	retlw	low _I2C_DO_ADDRESS_NACK
  1204  081F  3406               	retlw	high _I2C_DO_ADDRESS_NACK
  1205  0820                     __end_of_i2c_fsmStateTable:
  1206  0011                     _PIR1bits	set	17
  1207  0012                     _PIR2bits	set	18
  1208  0097                     _WDTCON	set	151
  1209  0098                     _OSCTUNE	set	152
  1210  0099                     _OSCCON	set	153
  1211  0091                     _PIE1bits	set	145
  1212  0095                     _OPTION_REGbits	set	149
  1213  008F                     _TRISD	set	143
  1214  008E                     _TRISC	set	142
  1215  008D                     _TRISB	set	141
  1216  008C                     _TRISA	set	140
  1217  0090                     _TRISE	set	144
  1218  04D6                     _PLLR	set	1238
  1219  0116                     _BORCON	set	278
  1220  011D                     _APFCON	set	285
  1221  010E                     _LATC	set	270
  1222  010D                     _LATB	set	269
  1223  010C                     _LATA	set	268
  1224  010F                     _LATD	set	271
  1225  0110                     _LATE	set	272
  1226  018C                     _ANSELA	set	396
  1227  0190                     _ANSELE	set	400
  1228  018D                     _ANSELB	set	397
  1229  018F                     _ANSELD	set	399
  1230  0214                     _SSPSTATbits	set	532
  1231  0216                     _SSPCON2bits	set	534
  1232  0211                     _SSPBUF	set	529
  1233  0215                     _SSPCON1bits	set	533
  1234  0212                     _SSPADD	set	530
  1235  0216                     _SSPCON2	set	534
  1236  0215                     _SSPCON1	set	533
  1237  0214                     _SSPSTAT	set	532
  1238  020D                     _WPUB	set	525
  1239  0210                     _WPUE	set	528
  1240                           
  1241                           	psect	cinit
  1242  07E5                     start_initialization:	
  1243                           ; #config settings
  1244                           
  1245  07E5                     __initialization:
  1246                           
  1247                           ; Initialize objects allocated to BANK0
  1248  07E5  3183  23FE  3187   	fcall	__pidataBANK0	;fetch initializer
  1249  07E8  00CB               	movwf	__pdataBANK0& (0+127)
  1250  07E9  3183  23FF  3187   	fcall	__pidataBANK0+1	;fetch initializer
  1251  07EC  00CC               	movwf	(__pdataBANK0+1)& (0+127)
  1252  07ED  3184  2400  3187   	fcall	__pidataBANK0+2	;fetch initializer
  1253  07F0  00CD               	movwf	(__pdataBANK0+2)& (0+127)
  1254  07F1  3184  2401  3187   	fcall	__pidataBANK0+3	;fetch initializer
  1255  07F4  00CE               	movwf	(__pdataBANK0+3)& (0+127)
  1256                           
  1257                           ; Clear objects allocated to BANK0
  1258  07F5  3020               	movlw	low __pbssBANK0
  1259  07F6  0084               	movwf	4
  1260  07F7  3000               	movlw	high __pbssBANK0
  1261  07F8  0085               	movwf	5
  1262  07F9  301F               	movlw	31
  1263  07FA  3184  2445  3187   	fcall	clear_ram0
  1264  07FD                     end_of_initialization:	
  1265                           ;End of C runtime variable initialization code
  1266                           
  1267  07FD                     __end_of__initialization:
  1268  07FD  0020               	movlb	0
  1269  07FE  3184  2C6C         	ljmp	_main	;jump to C main() function
  1270                           
  1271                           	psect	bssBANK0
  1272  0020                     __pbssBANK0:
  1273  0020                     _I2C_Status:
  1274  0020                     	ds	29
  1275  003D                     _paramsLCD:
  1276  003D                     	ds	1
  1277  003E                     _statusLED:
  1278  003E                     	ds	1
  1279                           
  1280                           	psect	dataBANK0
  1281  004B                     __pdataBANK0:
  1282  004B                     i2c_lcd_set_cursor@local_mem:
  1283  004B                     	ds	4
  1284                           
  1285                           	psect	clrtext
  1286  0445                     clear_ram0:	
  1287                           ;	Called with FSR0 containing the base address, and
  1288                           ;	WREG with the size to clear
  1289                           
  1290  0445  0064               	clrwdt	;clear the watchdog before getting into this loop
  1291  0446                     clrloop0:
  1292  0446  0180               	clrf	0	;clear RAM location pointed to by FSR
  1293  0447  3101               	addfsr 0,1
  1294  0448  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1295  0449  2C46               	goto	clrloop0	;have we reached the end yet?
  1296  044A  3400               	retlw	0	;all done for this memory range, return
  1297                           
  1298                           	psect	cstackCOMMON
  1299  0070                     __pcstackCOMMON:
  1300  0070                     ?_I2C_DO_IDLE:
  1301  0070                     ??_I2C_DO_IDLE:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ?_I2C_DO_SEND_ADR_READ:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ??_I2C_DO_SEND_ADR_READ:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  0070                     ?_I2C_DO_TX:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ?_I2C_DO_RX:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ??_I2C_DO_RX:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ?_I2C_DO_RCEN:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ??_I2C_DO_RCEN:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     ?_I2C_DO_TX_EMPTY:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     ??_I2C_DO_TX_EMPTY:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0070                     ?_I2C_DO_SEND_RESTART:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ??_I2C_DO_SEND_RESTART:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_I2C_DO_SEND_STOP:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ??_I2C_DO_SEND_STOP:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_I2C_DO_RX_ACK:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ??_I2C_DO_RX_ACK:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ?_I2C_DO_RX_NACK_STOP:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ??_I2C_DO_RX_NACK_STOP:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ?_I2C_DO_RESET:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ??_I2C_DO_RESET:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ?_I2C_DO_ADDRESS_NACK:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ??_I2C_DO_ADDRESS_NACK:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_I2C_MasterClearIrq:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ??_I2C_MasterClearIrq:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?_I2C_MasterOpen:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ??_I2C_MasterOpen:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ?_I2C_MasterDisableIrq:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ??_I2C_MasterDisableIrq:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ?_I2C_MasterClose:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ??_I2C_MasterClose:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ?_I2C_MasterStart:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ??_I2C_MasterStart:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ?_I2C_Poller:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_I2C_SetCallback:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ?_I2C_MasterWaitForEvent:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ??_I2C_MasterWaitForEvent:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ?_I2C_MasterFsm:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0070                     ?_I2C_MasterIsNack:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     ??_I2C_MasterIsNack:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     ?_I2C_MasterSendTxData:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ??_I2C_MasterSendTxData:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ?_I2C_MasterGetRxData:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     ??_I2C_MasterGetRxData:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?_I2C_MasterSendAck:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0070                     ??_I2C_MasterSendAck:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0070                     ?_I2C_MasterStartRx:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ??_I2C_MasterStartRx:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     ?_I2C_MasterSetIrq:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0070                     ??_I2C_MasterSetIrq:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     ?_I2C_MasterEnableRestart:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0070                     ??_I2C_MasterEnableRestart:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475  0070                     ?_I2C_MasterStop:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ??_I2C_MasterStop:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ?_I2C_MasterSendNack:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ??_I2C_MasterSendNack:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     ?_SYSTEM_Initialize:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  0070                     ??_SYSTEM_Initialize:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493  0070                     ?_i2c_lcd_init:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_OSCILLATOR_Initialize:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ??_OSCILLATOR_Initialize:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_WDT_Initialize:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ??_WDT_Initialize:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_PIN_MANAGER_Initialize:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ??_PIN_MANAGER_Initialize:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_I2C_Initialize:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ??_I2C_Initialize:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_I2C_Open:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ??_I2C_Open:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ?_I2C_Close:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ??_I2C_Close:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_I2C_MasterOperation:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_I2C_MasterWrite:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_I2C_SetBuffer:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_main:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_PCF_Wr:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_sendCMD:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     I2C_MasterSendTxData@data:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     I2C_SetBuffer@bufferSize:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     I2C_SetCallback@cb:	
  1557                           ; 2 bytes @ 0x0
  1558                           
  1559                           
  1560                           ; 2 bytes @ 0x0
  1561  0070                     	ds	1
  1562  0071                     ??_I2C_DO_SEND_ADR_WRITE:
  1563  0071                     ??_I2C_DO_TX:	
  1564                           ; 1 bytes @ 0x1
  1565                           
  1566  0071                     I2C_Open@address:	
  1567                           ; 1 bytes @ 0x1
  1568                           
  1569  0071                     I2C_Close@returnValue:	
  1570                           ; 1 bytes @ 0x1
  1571                           
  1572                           
  1573                           ; 1 bytes @ 0x1
  1574  0071                     	ds	1
  1575  0072                     ??_I2C_SetBuffer:
  1576  0072                     I2C_Open@returnValue:	
  1577                           ; 1 bytes @ 0x2
  1578                           
  1579  0072                     I2C_SetCallback@ptr:	
  1580                           ; 1 bytes @ 0x2
  1581                           
  1582                           
  1583                           ; 1 bytes @ 0x2
  1584  0072                     	ds	1
  1585  0073                     ??_I2C_SetCallback:
  1586  0073                     I2C_SetBuffer@buffer:	
  1587                           ; 1 bytes @ 0x3
  1588                           
  1589                           
  1590                           ; 1 bytes @ 0x3
  1591  0073                     	ds	1
  1592  0074                     ??_I2C_MasterFsm:
  1593  0074                     I2C_SetCallback@idx:	
  1594                           ; 1 bytes @ 0x4
  1595                           
  1596                           
  1597                           ; 1 bytes @ 0x4
  1598  0074                     	ds	1
  1599  0075                     ?_I2C_SetDataCompleteCallback:
  1600  0075                     ?_I2C_SetAddressNackCallback:	
  1601                           ; 1 bytes @ 0x5
  1602                           
  1603  0075                     I2C_SetDataCompleteCallback@cb:	
  1604                           ; 1 bytes @ 0x5
  1605                           
  1606  0075                     I2C_SetAddressNackCallback@cb:	
  1607                           ; 2 bytes @ 0x5
  1608                           
  1609                           
  1610                           ; 2 bytes @ 0x5
  1611  0075                     	ds	2
  1612  0077                     ??_I2C_Poller:
  1613  0077                     ??_I2C_MasterOperation:	
  1614                           ; 1 bytes @ 0x7
  1615                           
  1616  0077                     I2C_SetDataCompleteCallback@ptr:	
  1617                           ; 1 bytes @ 0x7
  1618                           
  1619  0077                     I2C_SetAddressNackCallback@ptr:	
  1620                           ; 1 bytes @ 0x7
  1621                           
  1622                           
  1623                           ; 1 bytes @ 0x7
  1624  0077                     	ds	1
  1625  0078                     ??_I2C_SetDataCompleteCallback:
  1626  0078                     ??_I2C_SetAddressNackCallback:	
  1627                           ; 1 bytes @ 0x8
  1628                           
  1629  0078                     I2C_MasterOperation@read:	
  1630                           ; 1 bytes @ 0x8
  1631                           
  1632                           
  1633                           ; 1 bytes @ 0x8
  1634  0078                     	ds	1
  1635  0079                     ?_I2C_CallbackReturnStop:
  1636  0079                     ?_I2C_CallbackReturnReset:	
  1637                           ; 1 bytes @ 0x9
  1638                           
  1639  0079                     ?_rd1RegCompleteHandler:	
  1640                           ; 1 bytes @ 0x9
  1641                           
  1642  0079                     ?_rd2RegCompleteHandler:	
  1643                           ; 1 bytes @ 0x9
  1644                           
  1645  0079                     ?_wr1RegCompleteHandler:	
  1646                           ; 1 bytes @ 0x9
  1647                           
  1648  0079                     ?_wr2RegCompleteHandler:	
  1649                           ; 1 bytes @ 0x9
  1650                           
  1651  0079                     ?_rdBlkRegCompleteHandler:	
  1652                           ; 1 bytes @ 0x9
  1653                           
  1654  0079                     I2C_MasterOperation@returnValue:	
  1655                           ; 1 bytes @ 0x9
  1656                           
  1657  0079                     I2C_CallbackReturnStop@funPtr:	
  1658                           ; 1 bytes @ 0x9
  1659                           
  1660  0079                     I2C_CallbackReturnReset@funPtr:	
  1661                           ; 1 bytes @ 0x9
  1662                           
  1663  0079                     rd1RegCompleteHandler@ptr:	
  1664                           ; 1 bytes @ 0x9
  1665                           
  1666  0079                     rd2RegCompleteHandler@ptr:	
  1667                           ; 1 bytes @ 0x9
  1668                           
  1669  0079                     wr1RegCompleteHandler@ptr:	
  1670                           ; 1 bytes @ 0x9
  1671                           
  1672  0079                     wr2RegCompleteHandler@ptr:	
  1673                           ; 1 bytes @ 0x9
  1674                           
  1675  0079                     rdBlkRegCompleteHandler@ptr:	
  1676                           ; 1 bytes @ 0x9
  1677                           
  1678                           
  1679                           ; 1 bytes @ 0x9
  1680  0079                     	ds	1
  1681  007A                     ??_I2C_CallbackReturnStop:
  1682  007A                     ??_I2C_CallbackReturnReset:	
  1683                           ; 1 bytes @ 0xA
  1684                           
  1685  007A                     ??_rd1RegCompleteHandler:	
  1686                           ; 1 bytes @ 0xA
  1687                           
  1688  007A                     ??_rd2RegCompleteHandler:	
  1689                           ; 1 bytes @ 0xA
  1690                           
  1691  007A                     ??_wr1RegCompleteHandler:	
  1692                           ; 1 bytes @ 0xA
  1693                           
  1694  007A                     ??_wr2RegCompleteHandler:	
  1695                           ; 1 bytes @ 0xA
  1696                           
  1697  007A                     ??_rdBlkRegCompleteHandler:	
  1698                           ; 1 bytes @ 0xA
  1699                           
  1700  007A                     ??_I2C_MasterWrite:	
  1701                           ; 1 bytes @ 0xA
  1702                           
  1703  007A                     ?_I2C_Write1ByteRegister:	
  1704                           ; 1 bytes @ 0xA
  1705                           
  1706  007A                     I2C_Write1ByteRegister@reg:	
  1707                           ; 1 bytes @ 0xA
  1708                           
  1709                           
  1710                           ; 1 bytes @ 0xA
  1711  007A                     	ds	1
  1712  007B                     I2C_Write1ByteRegister@data:
  1713                           
  1714                           ; 1 bytes @ 0xB
  1715  007B                     	ds	1
  1716  007C                     ??_I2C_Write1ByteRegister:
  1717                           
  1718                           ; 1 bytes @ 0xC
  1719  007C                     	ds	1
  1720  007D                     I2C_Write1ByteRegister@address:
  1721                           
  1722                           ; 1 bytes @ 0xD
  1723  007D                     	ds	1
  1724  007E                     ??_main:
  1725                           
  1726                           	psect	cstackBANK0
  1727  003F                     __pcstackBANK0:	
  1728                           ; 1 bytes @ 0xE
  1729                           
  1730  003F                     ??_PCF_Wr:
  1731                           
  1732                           ; 1 bytes @ 0x0
  1733  003F                     	ds	1
  1734  0040                     PCF_Wr@dato:
  1735                           
  1736                           ; 1 bytes @ 0x1
  1737  0040                     	ds	1
  1738  0041                     ?_loadPCF:
  1739  0041                     loadPCF@mode:	
  1740                           ; 1 bytes @ 0x2
  1741                           
  1742                           
  1743                           ; 1 bytes @ 0x2
  1744  0041                     	ds	1
  1745  0042                     ??_loadPCF:
  1746                           
  1747                           ; 1 bytes @ 0x3
  1748  0042                     	ds	2
  1749  0044                     loadPCF@dato:
  1750                           
  1751                           ; 1 bytes @ 0x5
  1752  0044                     	ds	1
  1753  0045                     ??_sendCMD:
  1754                           
  1755                           ; 1 bytes @ 0x6
  1756  0045                     	ds	2
  1757  0047                     sendCMD@NibbleH:
  1758                           
  1759                           ; 1 bytes @ 0x8
  1760  0047                     	ds	1
  1761  0048                     sendCMD@NibbleL:
  1762                           
  1763                           ; 1 bytes @ 0x9
  1764  0048                     	ds	1
  1765  0049                     sendCMD@cmd:
  1766                           
  1767                           ; 1 bytes @ 0xA
  1768  0049                     	ds	1
  1769  004A                     ??_i2c_lcd_init:
  1770                           
  1771                           ; 1 bytes @ 0xB
  1772  004A                     	ds	1
  1773                           
  1774                           	psect	maintext
  1775  046C                     __pmaintext:	
  1776 ;;
  1777 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1778 ;;
  1779 ;; *************** function _main *****************
  1780 ;; Defined at:
  1781 ;;		line 4 in file "main.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : B1F/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1799 ;;Total ram usage:        0 bytes
  1800 ;; Hardware stack levels required when called: 13
  1801 ;; This function calls:
  1802 ;;		_SYSTEM_Initialize
  1803 ;;		_i2c_lcd_init
  1804 ;; This function is called by:
  1805 ;;		Startup code after reset
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809  046C                     _main:	
  1810                           ;psect for function _main
  1811                           
  1812  046C                     l2628:	
  1813                           ;incstack = 0
  1814                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1815                           
  1816                           
  1817                           ;main.c: 7:     SYSTEM_Initialize();
  1818  046C  3184  2481  3184   	fcall	_SYSTEM_Initialize
  1819  046F                     l2630:
  1820                           
  1821                           ;main.c: 9:     i2c_lcd_init();
  1822  046F  3187  2743  3184   	fcall	_i2c_lcd_init
  1823  0472                     l476:	
  1824                           ;main.c: 11:     while (1){
  1825                           
  1826  0472                     l477:	
  1827                           ;main.c: 13:     }
  1828                           
  1829  0472  2C72               	goto	l476
  1830  0473  3180  2802         	ljmp	start
  1831  0475                     __end_of_main:
  1832                           
  1833                           	psect	text1
  1834  0743                     __ptext1:	
  1835 ;; *************** function _i2c_lcd_init *****************
  1836 ;; Defined at:
  1837 ;;		line 47 in file "LCD_I2C.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;Total ram usage:        1 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 12
  1858 ;; This function calls:
  1859 ;;		_PCF_Wr
  1860 ;;		_sendCMD
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866  0743                     _i2c_lcd_init:	
  1867                           ;psect for function _i2c_lcd_init
  1868                           
  1869  0743                     l2488:	
  1870                           ;incstack = 0
  1871                           ; Regs used in _i2c_lcd_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1872                           
  1873                           
  1874                           ;LCD_I2C.c: 49:     PCF_Wr(0x00);
  1875  0743  3000               	movlw	0
  1876  0744  3184  24C2  3187   	fcall	_PCF_Wr
  1877  0747                     l2490:
  1878                           
  1879                           ;LCD_I2C.c: 50:     _delay((unsigned long)((15)*(32000000/4000.0)));
  1880  0747  309C               	movlw	156
  1881  0748  0020               	movlb	0	; select bank0
  1882  0749  00CA               	movwf	??_i2c_lcd_init
  1883  074A  30D7               	movlw	215
  1884  074B                     u707:
  1885  074B  0B89               	decfsz	9,f
  1886  074C  2F4B               	goto	u707
  1887  074D  0BCA               	decfsz	??_i2c_lcd_init,f
  1888  074E  2F4B               	goto	u707
  1889  074F                     l2492:
  1890                           
  1891                           ;LCD_I2C.c: 51:     sendCMD(0x03);
  1892  074F  3003               	movlw	3
  1893  0750  3185  2575  3187   	fcall	_sendCMD
  1894                           
  1895                           ;LCD_I2C.c: 52:     _delay((unsigned long)((4100)*(32000000/4000000.0)));
  1896  0753  302B               	movlw	43
  1897  0754  0020               	movlb	0	; select bank0
  1898  0755  00CA               	movwf	??_i2c_lcd_init
  1899  0756  3097               	movlw	151
  1900  0757                     u717:
  1901  0757  0B89               	decfsz	9,f
  1902  0758  2F57               	goto	u717
  1903  0759  0BCA               	decfsz	??_i2c_lcd_init,f
  1904  075A  2F57               	goto	u717
  1905  075B  3200               	nop2
  1906  075C                     l2494:
  1907                           
  1908                           ;LCD_I2C.c: 53:     sendCMD(0x03);
  1909  075C  3003               	movlw	3
  1910  075D  3185  2575  3187   	fcall	_sendCMD
  1911  0760                     l2496:
  1912                           
  1913                           ;LCD_I2C.c: 54:     _delay((unsigned long)((100)*(32000000/4000000.0)));
  1914  0760  30A0               	movlw	160
  1915  0761                     u727:
  1916  0761  3200               	nop2
  1917  0762  0B89               	decfsz	9,f
  1918  0763  2F61               	goto	u727
  1919                           
  1920                           ;LCD_I2C.c: 55:     sendCMD(0x03);
  1921  0764  3003               	movlw	3
  1922  0765  3185  2575  3187   	fcall	_sendCMD
  1923                           
  1924                           ;LCD_I2C.c: 56:     sendCMD(0x02);
  1925  0768  3002               	movlw	2
  1926  0769  3185  2575  3187   	fcall	_sendCMD
  1927                           
  1928                           ;LCD_I2C.c: 58:     sendCMD(0x20 | 0x00 | 0x08 | 0x00);
  1929  076C  3028               	movlw	40
  1930  076D  3185  2575  3187   	fcall	_sendCMD
  1931  0770                     l2498:
  1932                           
  1933                           ;LCD_I2C.c: 59:     _delay((unsigned long)((37)*(32000000/4000000.0)));
  1934  0770  3062               	movlw	98
  1935  0771                     u737:
  1936  0771  0B89               	decfsz	9,f
  1937  0772  2F71               	goto	u737
  1938  0773  3200               	nop2
  1939  0774                     l2500:
  1940                           
  1941                           ;LCD_I2C.c: 61:     paramsLCD = 0x04 | 0x02 | 0x01;
  1942  0774  3007               	movlw	7
  1943  0775  0020               	movlb	0	; select bank0
  1944  0776  00CA               	movwf	??_i2c_lcd_init
  1945  0777  084A               	movf	??_i2c_lcd_init,w
  1946  0778  00BD               	movwf	_paramsLCD
  1947                           
  1948                           ;LCD_I2C.c: 62:     sendCMD(0x08 | paramsLCD);
  1949  0779  083D               	movf	_paramsLCD,w
  1950  077A  3808               	iorlw	8
  1951  077B  3185  2575  3187   	fcall	_sendCMD
  1952  077E                     l2502:
  1953                           
  1954                           ;LCD_I2C.c: 63:     _delay((unsigned long)((37)*(32000000/4000000.0)));
  1955  077E  3062               	movlw	98
  1956  077F                     u747:
  1957  077F  0B89               	decfsz	9,f
  1958  0780  2F7F               	goto	u747
  1959  0781  3200               	nop2
  1960  0782                     l2504:
  1961                           
  1962                           ;LCD_I2C.c: 65:     sendCMD(0x01);
  1963  0782  3001               	movlw	1
  1964  0783  3185  2575  3187   	fcall	_sendCMD
  1965                           
  1966                           ;LCD_I2C.c: 66:     _delay((unsigned long)((2)*(32000000/4000.0)));
  1967  0786  3015               	movlw	21
  1968  0787  0020               	movlb	0	; select bank0
  1969  0788  00CA               	movwf	??_i2c_lcd_init
  1970  0789  30C6               	movlw	198
  1971  078A                     u757:
  1972  078A  0B89               	decfsz	9,f
  1973  078B  2F8A               	goto	u757
  1974  078C  0BCA               	decfsz	??_i2c_lcd_init,f
  1975  078D  2F8A               	goto	u757
  1976  078E  0000               	nop
  1977  078F                     l536:
  1978  078F  0008               	return
  1979  0790                     __end_of_i2c_lcd_init:
  1980                           
  1981                           	psect	text2
  1982  0575                     __ptext2:	
  1983 ;; *************** function _sendCMD *****************
  1984 ;; Defined at:
  1985 ;;		line 39 in file "LCD_I2C.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  cmd             1    wreg     unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  cmd             1   10[BANK0 ] unsigned char 
  1990 ;;  NibbleL         1    9[BANK0 ] unsigned char 
  1991 ;;  NibbleH         1    8[BANK0 ] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2002 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2003 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2004 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2005 ;;Total ram usage:        5 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 11
  2008 ;; This function calls:
  2009 ;;		_loadPCF
  2010 ;; This function is called by:
  2011 ;;		_i2c_lcd_init
  2012 ;;		_i2c_lcd_command
  2013 ;;		_i2c_lcd_set_cursor
  2014 ;;		_i2c_lcd_backlight_on
  2015 ;;		_i2c_lcd_backlight_off
  2016 ;;		_i2c_lcd_clear
  2017 ;;		_i2c_lcd_return_home
  2018 ;;		_i2c_lcd_enable_blink
  2019 ;;		_i2c_lcd_disable_blink
  2020 ;;		_i2c_lcd_enable_cursor
  2021 ;;		_i2c_lcd_disable_cursor
  2022 ;;		_i2c_lcd_on
  2023 ;;		_i2c_lcd_off
  2024 ;;		_i2c_lcd_scroll_left
  2025 ;;		_i2c_lcd_scroll_right
  2026 ;;		_i2c_lcd_custom_char
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030  0575                     _sendCMD:	
  2031                           ;psect for function _sendCMD
  2032                           
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _sendCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2036                           ;sendCMD@cmd stored from wreg
  2037  0575  0020               	movlb	0	; select bank0
  2038  0576  00C9               	movwf	sendCMD@cmd
  2039  0577                     l2476:
  2040                           
  2041                           ;LCD_I2C.c: 40:      uint8_t NibbleH, NibbleL;;LCD_I2C.c: 41:      NibbleH = cmd & 0xF0;
  2042  0577  0849               	movf	sendCMD@cmd,w
  2043  0578  39F0               	andlw	240
  2044  0579  00C5               	movwf	??_sendCMD
  2045  057A  0845               	movf	??_sendCMD,w
  2046  057B  00C7               	movwf	sendCMD@NibbleH
  2047  057C                     l2478:
  2048                           
  2049                           ;LCD_I2C.c: 42:      NibbleL = (cmd & 0x0F)<<4;
  2050  057C  0849               	movf	sendCMD@cmd,w
  2051  057D  390F               	andlw	15
  2052  057E  00C5               	movwf	??_sendCMD
  2053  057F  3003               	movlw	3
  2054  0580                     u525:
  2055  0580  35C5               	lslf	??_sendCMD,f
  2056  0581  3EFF               	addlw	-1
  2057  0582  1D03               	skipz
  2058  0583  2D80               	goto	u525
  2059  0584  3545               	lslf	??_sendCMD,w
  2060  0585  00C6               	movwf	??_sendCMD+1
  2061  0586  0846               	movf	??_sendCMD+1,w
  2062  0587  00C8               	movwf	sendCMD@NibbleL
  2063  0588                     l2480:
  2064                           
  2065                           ;LCD_I2C.c: 43:      loadPCF(NibbleH,0);
  2066  0588  01C1               	clrf	loadPCF@mode
  2067  0589  0847               	movf	sendCMD@NibbleH,w
  2068  058A  3186  2692  3185   	fcall	_loadPCF
  2069  058D                     l2482:
  2070                           
  2071                           ;LCD_I2C.c: 44:      loadPCF(NibbleL,0);
  2072  058D  0020               	movlb	0	; select bank0
  2073  058E  01C1               	clrf	loadPCF@mode
  2074  058F  0848               	movf	sendCMD@NibbleL,w
  2075  0590  3186  2692  3185   	fcall	_loadPCF
  2076  0593                     l533:
  2077  0593  0008               	return
  2078  0594                     __end_of_sendCMD:
  2079                           
  2080                           	psect	text3
  2081  0692                     __ptext3:	
  2082 ;; *************** function _loadPCF *****************
  2083 ;; Defined at:
  2084 ;;		line 15 in file "LCD_I2C.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  dato            1    wreg     unsigned char 
  2087 ;;  mode            1    2[BANK0 ] unsigned char 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  dato            1    5[BANK0 ] unsigned char 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2099 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2100 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2101 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2102 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2103 ;;Total ram usage:        4 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 10
  2106 ;; This function calls:
  2107 ;;		_PCF_Wr
  2108 ;; This function is called by:
  2109 ;;		_sendCMD
  2110 ;;		_sendDATA
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114  0692                     _loadPCF:	
  2115                           ;psect for function _loadPCF
  2116                           
  2117                           
  2118                           ;incstack = 0
  2119                           ; Regs used in _loadPCF: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2120                           ;loadPCF@dato stored from wreg
  2121  0692  0020               	movlb	0	; select bank0
  2122  0693  00C4               	movwf	loadPCF@dato
  2123  0694                     l2450:
  2124                           
  2125                           ;LCD_I2C.c: 17:     switch(mode){
  2126  0694  2E9C               	goto	l2458
  2127  0695                     l2452:
  2128  0695  1444               	bsf	loadPCF@dato,0
  2129  0696  2EAC               	goto	l2460
  2130  0697                     l2454:
  2131  0697  30FE               	movlw	254
  2132  0698  00C2               	movwf	??_loadPCF
  2133  0699  0842               	movf	??_loadPCF,w
  2134  069A  05C4               	andwf	loadPCF@dato,f
  2135  069B  2EAC               	goto	l2460
  2136  069C                     l2458:
  2137  069C  0841               	movf	loadPCF@mode,w
  2138  069D  00C2               	movwf	??_loadPCF
  2139  069E  01C3               	clrf	??_loadPCF+1
  2140                           
  2141                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2142                           ; Switch size 1, requested type "simple"
  2143                           ; Number of cases is 1, Range of values is 0 to 0
  2144                           ; switch strategies available:
  2145                           ; Name         Instructions Cycles
  2146                           ; simple_byte            4     3 (average)
  2147                           ; direct_byte            8     6 (fixed)
  2148                           ; jumptable            260     6 (fixed)
  2149                           ;	Chosen strategy is simple_byte
  2150  069F  0843               	movf	??_loadPCF+1,w
  2151  06A0  3A00               	xorlw	0	; case 0
  2152  06A1  1903               	skipnz
  2153  06A2  2EA4               	goto	l2834
  2154  06A3  2EAC               	goto	l2460
  2155  06A4                     l2834:
  2156                           
  2157                           ; Switch size 1, requested type "simple"
  2158                           ; Number of cases is 2, Range of values is 0 to 1
  2159                           ; switch strategies available:
  2160                           ; Name         Instructions Cycles
  2161                           ; simple_byte            7     4 (average)
  2162                           ; direct_byte           10     6 (fixed)
  2163                           ; jumptable            260     6 (fixed)
  2164                           ;	Chosen strategy is simple_byte
  2165  06A4  0842               	movf	??_loadPCF,w
  2166  06A5  3A00               	xorlw	0	; case 0
  2167  06A6  1903               	skipnz
  2168  06A7  2E97               	goto	l2454
  2169  06A8  3A01               	xorlw	1	; case 1
  2170  06A9  1903               	skipnz
  2171  06AA  2E95               	goto	l2452
  2172  06AB  2EAC               	goto	l2460
  2173  06AC                     l2460:
  2174                           
  2175                           ;LCD_I2C.c: 23:     PCF_Wr(dato);
  2176  06AC  0844               	movf	loadPCF@dato,w
  2177  06AD  3184  24C2  3186   	fcall	_PCF_Wr
  2178  06B0                     l2462:
  2179                           
  2180                           ;LCD_I2C.c: 24:     dato |= (1<<2);
  2181  06B0  0020               	movlb	0	; select bank0
  2182  06B1  1544               	bsf	loadPCF@dato,2
  2183                           
  2184                           ;LCD_I2C.c: 25:     PCF_Wr(dato);
  2185  06B2  0844               	movf	loadPCF@dato,w
  2186  06B3  3184  24C2  3186   	fcall	_PCF_Wr
  2187  06B6                     l2464:
  2188                           
  2189                           ;LCD_I2C.c: 26:     dato &= ~(1<<2);
  2190  06B6  30FB               	movlw	251
  2191  06B7  0020               	movlb	0	; select bank0
  2192  06B8  00C2               	movwf	??_loadPCF
  2193  06B9  0842               	movf	??_loadPCF,w
  2194  06BA  05C4               	andwf	loadPCF@dato,f
  2195  06BB                     l2466:
  2196                           
  2197                           ;LCD_I2C.c: 27:     PCF_Wr(dato);
  2198  06BB  0844               	movf	loadPCF@dato,w
  2199  06BC  3184  24C2  3186   	fcall	_PCF_Wr
  2200  06BF                     l2468:
  2201                           
  2202                           ;LCD_I2C.c: 29:     _delay((unsigned long)((30)*(32000000/4000000.0)));
  2203  06BF  3050               	movlw	80
  2204  06C0                     u767:
  2205  06C0  0B89               	decfsz	9,f
  2206  06C1  2EC0               	goto	u767
  2207  06C2                     l527:
  2208  06C2  0008               	return
  2209  06C3                     __end_of_loadPCF:
  2210                           
  2211                           	psect	text4
  2212  04C2                     __ptext4:	
  2213 ;; *************** function _PCF_Wr *****************
  2214 ;; Defined at:
  2215 ;;		line 11 in file "LCD_I2C.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  dato            1    wreg     unsigned char 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  dato            1    1[BANK0 ] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2230 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2231 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;Total ram usage:        2 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 9
  2236 ;; This function calls:
  2237 ;;		_I2C_Write1ByteRegister
  2238 ;; This function is called by:
  2239 ;;		_loadPCF
  2240 ;;		_i2c_lcd_init
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244  04C2                     _PCF_Wr:	
  2245                           ;psect for function _PCF_Wr
  2246                           
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _PCF_Wr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2250                           ;PCF_Wr@dato stored from wreg
  2251  04C2  0020               	movlb	0	; select bank0
  2252  04C3  00C0               	movwf	PCF_Wr@dato
  2253  04C4                     l2448:
  2254                           
  2255                           ;LCD_I2C.c: 12:     I2C_Write1ByteRegister(0b0100000 | 0b111, 0,dato|statusLED );
  2256  04C4  01FA               	clrf	I2C_Write1ByteRegister@reg
  2257  04C5  0840               	movf	PCF_Wr@dato,w
  2258  04C6  043E               	iorwf	_statusLED,w
  2259  04C7  00BF               	movwf	??_PCF_Wr
  2260  04C8  083F               	movf	??_PCF_Wr,w
  2261  04C9  00FB               	movwf	I2C_Write1ByteRegister@data
  2262  04CA  3027               	movlw	39
  2263  04CB  3186  2662  3184   	fcall	_I2C_Write1ByteRegister
  2264  04CE                     l520:
  2265  04CE  0008               	return
  2266  04CF                     __end_of_PCF_Wr:
  2267                           
  2268                           	psect	text5
  2269  0662                     __ptext5:	
  2270 ;; *************** function _I2C_Write1ByteRegister *****************
  2271 ;; Defined at:
  2272 ;;		line 667 in file "mcc_generated_files/i2c_master.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  address         1    wreg     unsigned char 
  2275 ;;  reg             1   10[COMMON] unsigned char 
  2276 ;;  data            1   11[COMMON] unsigned char 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  address         1   13[COMMON] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2290 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2291 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2292 ;;Total ram usage:        4 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; Hardware stack levels required when called: 8
  2295 ;; This function calls:
  2296 ;;		_I2C_Close
  2297 ;;		_I2C_MasterWrite
  2298 ;;		_I2C_Open
  2299 ;;		_I2C_SetAddressNackCallback
  2300 ;;		_I2C_SetBuffer
  2301 ;;		_I2C_SetDataCompleteCallback
  2302 ;; This function is called by:
  2303 ;;		_PCF_Wr
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307  0662                     _I2C_Write1ByteRegister:	
  2308                           ;psect for function _I2C_Write1ByteRegister
  2309                           
  2310                           
  2311                           ;incstack = 0
  2312                           ; Regs used in _I2C_Write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2313                           ;I2C_Write1ByteRegister@address stored from wreg
  2314  0662  00FD               	movwf	I2C_Write1ByteRegister@address
  2315  0663                     l2434:
  2316  0663                     l2436:	
  2317                           ;mcc_generated_files/i2c_master.c: 667: void I2C_Write1ByteRegister(i2c_address_t addres
      +                          s, uint8_t reg, uint8_t data);mcc_generated_files/i2c_master.c: 668: {;mcc_generated_fil
      +                          es/i2c_master.c: 669:     while(!I2C_Open(address));
  2318                           
  2319  0663  087D               	movf	I2C_Write1ByteRegister@address,w
  2320  0664  3186  26C3  3186   	fcall	_I2C_Open
  2321  0667  3A00               	xorlw	0
  2322  0668  1903               	skipnz
  2323  0669  2E6B               	goto	u501
  2324  066A  2E6C               	goto	u500
  2325  066B                     u501:
  2326  066B  2E63               	goto	l2436
  2327  066C                     u500:
  2328  066C                     l2438:
  2329                           
  2330                           ;mcc_generated_files/i2c_master.c: 670:     I2C_SetDataCompleteCallback(wr1RegCompleteHa
      +                          ndler,&data);
  2331  066C  3012               	movlw	low _wr1RegCompleteHandler
  2332  066D  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  2333  066E  3005               	movlw	high _wr1RegCompleteHandler
  2334  066F  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  2335  0670  307B               	movlw	(low (I2C_Write1ByteRegister@data| 0))& (0+255)
  2336  0671  00FC               	movwf	??_I2C_Write1ByteRegister
  2337  0672  087C               	movf	??_I2C_Write1ByteRegister,w
  2338  0673  00F7               	movwf	I2C_SetDataCompleteCallback@ptr
  2339  0674  3184  248E  3186   	fcall	_I2C_SetDataCompleteCallback
  2340  0677                     l2440:
  2341                           
  2342                           ;mcc_generated_files/i2c_master.c: 671:     I2C_SetBuffer(&reg,1);
  2343  0677  3001               	movlw	1
  2344  0678  00F0               	movwf	I2C_SetBuffer@bufferSize
  2345  0679  3000               	movlw	0
  2346  067A  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  2347  067B  307A               	movlw	(low (I2C_Write1ByteRegister@reg| 0))& (0+255)
  2348  067C  3184  24CF  3186   	fcall	_I2C_SetBuffer
  2349  067F                     l2442:
  2350                           
  2351                           ;mcc_generated_files/i2c_master.c: 672:     I2C_SetAddressNackCallback(((void*)0),((void
      +                          *)0));
  2352  067F  3000               	movlw	0
  2353  0680  00F5               	movwf	I2C_SetAddressNackCallback@cb
  2354  0681  00F6               	movwf	I2C_SetAddressNackCallback@cb+1
  2355  0682  01F7               	clrf	I2C_SetAddressNackCallback@ptr
  2356  0683  3184  24B5  3186   	fcall	_I2C_SetAddressNackCallback
  2357  0686                     l2444:
  2358                           
  2359                           ;mcc_generated_files/i2c_master.c: 673:     I2C_MasterWrite();
  2360  0686  3184  2434  3186   	fcall	_I2C_MasterWrite
  2361  0689                     l2446:	
  2362                           ;mcc_generated_files/i2c_master.c: 674:     while(I2C_BUSY == I2C_Close());
  2363                           
  2364  0689  3185  253B  3186   	fcall	_I2C_Close
  2365  068C  3A01               	xorlw	1
  2366  068D  1903               	skipnz
  2367  068E  2E90               	goto	u511
  2368  068F  2E91               	goto	u510
  2369  0690                     u511:
  2370  0690  2E89               	goto	l2446
  2371  0691                     u510:
  2372  0691                     l416:
  2373  0691  0008               	return
  2374  0692                     __end_of_I2C_Write1ByteRegister:
  2375                           
  2376                           	psect	text6
  2377  04B5                     __ptext6:	
  2378 ;; *************** function _I2C_SetAddressNackCallback *****************
  2379 ;; Defined at:
  2380 ;;		line 242 in file "mcc_generated_files/i2c_master.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  2383 ;;		 -> Absolute function(1), 
  2384 ;;  ptr             1    7[COMMON] PTR void 
  2385 ;;		 -> NULL(0), 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2397 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2399 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2400 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2401 ;;Total ram usage:        4 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 1
  2404 ;; This function calls:
  2405 ;;		_I2C_SetCallback
  2406 ;; This function is called by:
  2407 ;;		_I2C_Write1ByteRegister
  2408 ;;		_I2C_Read1ByteRegister
  2409 ;;		_I2C_Read2ByteRegister
  2410 ;;		_I2C_Write2ByteRegister
  2411 ;;		_I2C_WriteNBytes
  2412 ;;		_I2C_ReadDataBlock
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416  04B5                     _I2C_SetAddressNackCallback:	
  2417                           ;psect for function _I2C_SetAddressNackCallback
  2418                           
  2419  04B5                     l2432:	
  2420                           ;incstack = 0
  2421                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2422                           
  2423                           
  2424                           ;mcc_generated_files/i2c_master.c: 242: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 243: {;mcc_generated_files/i2c_master.c:
      +                           244:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  2425  04B5  0876               	movf	I2C_SetAddressNackCallback@cb+1,w
  2426  04B6  00F1               	movwf	I2C_SetCallback@cb+1
  2427  04B7  0875               	movf	I2C_SetAddressNackCallback@cb,w
  2428  04B8  00F0               	movwf	I2C_SetCallback@cb
  2429  04B9  0877               	movf	I2C_SetAddressNackCallback@ptr,w
  2430  04BA  00F8               	movwf	??_I2C_SetAddressNackCallback
  2431  04BB  0878               	movf	??_I2C_SetAddressNackCallback,w
  2432  04BC  00F2               	movwf	I2C_SetCallback@ptr
  2433  04BD  3002               	movlw	2
  2434  04BE  3185  25B6  3184   	fcall	_I2C_SetCallback
  2435  04C1                     l195:
  2436  04C1  0008               	return
  2437  04C2                     __end_of_I2C_SetAddressNackCallback:
  2438                           
  2439                           	psect	text7
  2440  06C3                     __ptext7:	
  2441 ;; *************** function _I2C_Open *****************
  2442 ;; Defined at:
  2443 ;;		line 135 in file "mcc_generated_files/i2c_master.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  address         1    wreg     unsigned char 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  address         1    1[COMMON] unsigned char 
  2448 ;;  returnValue     1    2[COMMON] enum E355
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      enum E355
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2461 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;Total ram usage:        3 bytes
  2463 ;; Hardware stack levels used: 1
  2464 ;; Hardware stack levels required when called: 1
  2465 ;; This function calls:
  2466 ;;		_I2C_MasterClearIrq
  2467 ;;		_I2C_MasterOpen
  2468 ;; This function is called by:
  2469 ;;		_I2C_Write1ByteRegister
  2470 ;;		_I2C_Read1ByteRegister
  2471 ;;		_I2C_Read2ByteRegister
  2472 ;;		_I2C_Write2ByteRegister
  2473 ;;		_I2C_WriteNBytes
  2474 ;;		_I2C_ReadNBytes
  2475 ;;		_I2C_ReadDataBlock
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479  06C3                     _I2C_Open:	
  2480                           ;psect for function _I2C_Open
  2481                           
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  2485                           ;I2C_Open@address stored from wreg
  2486  06C3  00F1               	movwf	I2C_Open@address
  2487  06C4                     l2378:
  2488                           
  2489                           ;mcc_generated_files/i2c_master.c: 135: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 136: {;mcc_generated_files/i2c_master.c: 137:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  2490  06C4  01F2               	clrf	I2C_Open@returnValue
  2491  06C5  0AF2               	incf	I2C_Open@returnValue,f
  2492                           
  2493                           ;mcc_generated_files/i2c_master.c: 139:     if(!I2C_Status.inUse)
  2494  06C6  0020               	movlb	0	; select bank0
  2495  06C7  193C               	btfsc	_I2C_Status+28,2
  2496  06C8  2ECA               	goto	u481
  2497  06C9  2ECB               	goto	u480
  2498  06CA                     u481:
  2499  06CA  2EFB               	goto	l162
  2500  06CB                     u480:
  2501  06CB                     l2380:
  2502                           
  2503                           ;mcc_generated_files/i2c_master.c: 140:     {;mcc_generated_files/i2c_master.c: 141:    
      +                               I2C_Status.address = address;
  2504  06CB  0871               	movf	I2C_Open@address,w
  2505  06CC  00F0               	movwf	??_I2C_Open
  2506  06CD  0870               	movf	??_I2C_Open,w
  2507  06CE  00B6               	movwf	_I2C_Status+22
  2508  06CF                     l2382:
  2509                           
  2510                           ;mcc_generated_files/i2c_master.c: 142:         I2C_Status.busy = 0;
  2511  06CF  10BC               	bcf	_I2C_Status+28,1
  2512  06D0                     l2384:
  2513                           
  2514                           ;mcc_generated_files/i2c_master.c: 143:         I2C_Status.inUse = 1;
  2515  06D0  153C               	bsf	_I2C_Status+28,2
  2516  06D1                     l2386:
  2517                           
  2518                           ;mcc_generated_files/i2c_master.c: 144:         I2C_Status.addressNackCheck = 0;
  2519  06D1  103C               	bcf	_I2C_Status+28,0
  2520                           
  2521                           ;mcc_generated_files/i2c_master.c: 145:         I2C_Status.state = I2C_RESET;
  2522  06D2  300E               	movlw	14
  2523  06D3  00F0               	movwf	??_I2C_Open
  2524  06D4  0870               	movf	??_I2C_Open,w
  2525  06D5  00BA               	movwf	_I2C_Status+26
  2526                           
  2527                           ;mcc_generated_files/i2c_master.c: 146:         I2C_Status.time_out_value = 500;
  2528  06D6  30F4               	movlw	244
  2529  06D7  00B4               	movwf	_I2C_Status+20
  2530  06D8  3001               	movlw	1
  2531  06D9  00B5               	movwf	_I2C_Status+21
  2532  06DA                     l2388:
  2533                           
  2534                           ;mcc_generated_files/i2c_master.c: 147:         I2C_Status.bufferFree = 1;
  2535  06DA  15BC               	bsf	_I2C_Status+28,3
  2536                           
  2537                           ;mcc_generated_files/i2c_master.c: 150:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  2538  06DB  30D3               	movlw	low _I2C_CallbackReturnStop
  2539  06DC  00A0               	movwf	_I2C_Status
  2540  06DD  3003               	movlw	high _I2C_CallbackReturnStop
  2541  06DE  00A1               	movwf	_I2C_Status+1
  2542  06DF                     l2390:
  2543                           
  2544                           ;mcc_generated_files/i2c_master.c: 151:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  2545  06DF  01AC               	clrf	low ((_I2C_Status| 0+12))
  2546  06E0                     l2392:
  2547                           
  2548                           ;mcc_generated_files/i2c_master.c: 152:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  2549  06E0  30D3               	movlw	low _I2C_CallbackReturnStop
  2550  06E1  00A2               	movwf	low ((_I2C_Status| 0+2))
  2551  06E2  3003               	movlw	high _I2C_CallbackReturnStop
  2552  06E3  00A3               	movwf	(low ((_I2C_Status| 0+2))+1)
  2553                           
  2554                           ;mcc_generated_files/i2c_master.c: 153:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  2555  06E4  01AD               	clrf	low ((_I2C_Status| 0+13))
  2556  06E5                     l2394:
  2557                           
  2558                           ;mcc_generated_files/i2c_master.c: 154:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  2559  06E5  30D3               	movlw	low _I2C_CallbackReturnStop
  2560  06E6  00A4               	movwf	low ((_I2C_Status| 0+4))
  2561  06E7  3003               	movlw	high _I2C_CallbackReturnStop
  2562  06E8  00A5               	movwf	(low ((_I2C_Status| 0+4))+1)
  2563  06E9                     l2396:
  2564                           
  2565                           ;mcc_generated_files/i2c_master.c: 155:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  2566  06E9  01AE               	clrf	low ((_I2C_Status| 0+14))
  2567                           
  2568                           ;mcc_generated_files/i2c_master.c: 156:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  2569  06EA  30D3               	movlw	low _I2C_CallbackReturnStop
  2570  06EB  00A6               	movwf	low ((_I2C_Status| 0+6))
  2571  06EC  3003               	movlw	high _I2C_CallbackReturnStop
  2572  06ED  00A7               	movwf	(low ((_I2C_Status| 0+6))+1)
  2573  06EE                     l2398:
  2574                           
  2575                           ;mcc_generated_files/i2c_master.c: 157:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  2576  06EE  01AF               	clrf	low ((_I2C_Status| 0+15))
  2577  06EF                     l2400:
  2578                           
  2579                           ;mcc_generated_files/i2c_master.c: 158:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  2580  06EF  30D5               	movlw	low _I2C_CallbackReturnReset
  2581  06F0  00A8               	movwf	low ((_I2C_Status| 0+8))
  2582  06F1  3003               	movlw	high _I2C_CallbackReturnReset
  2583  06F2  00A9               	movwf	(low ((_I2C_Status| 0+8))+1)
  2584                           
  2585                           ;mcc_generated_files/i2c_master.c: 159:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  2586  06F3  01B0               	clrf	low ((_I2C_Status| 0+16))
  2587  06F4                     l2402:
  2588                           
  2589                           ;mcc_generated_files/i2c_master.c: 161:         I2C_MasterClearIrq();
  2590  06F4  3183  23D7  3186   	fcall	_I2C_MasterClearIrq
  2591  06F7                     l2404:
  2592                           
  2593                           ;mcc_generated_files/i2c_master.c: 162:         I2C_MasterOpen();
  2594  06F7  3184  24A8  3186   	fcall	_I2C_MasterOpen
  2595  06FA                     l2406:
  2596                           
  2597                           ;mcc_generated_files/i2c_master.c: 163:         returnValue = I2C_NOERR;
  2598  06FA  01F2               	clrf	I2C_Open@returnValue
  2599  06FB                     l162:	
  2600                           ;mcc_generated_files/i2c_master.c: 164:     }
  2601                           
  2602                           
  2603                           ;mcc_generated_files/i2c_master.c: 165:     return returnValue;
  2604  06FB  0872               	movf	I2C_Open@returnValue,w
  2605  06FC                     l163:
  2606  06FC  0008               	return
  2607  06FD                     __end_of_I2C_Open:
  2608                           
  2609                           	psect	text8
  2610  04A8                     __ptext8:	
  2611 ;; *************** function _I2C_MasterOpen *****************
  2612 ;; Defined at:
  2613 ;;		line 502 in file "mcc_generated_files/i2c_master.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      _Bool 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2631 ;;Total ram usage:        0 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_I2C_Open
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640  04A8                     _I2C_MasterOpen:	
  2641                           ;psect for function _I2C_MasterOpen
  2642                           
  2643  04A8                     l2342:	
  2644                           ;incstack = 0
  2645                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  2646                           
  2647                           
  2648                           ;mcc_generated_files/i2c_master.c: 504:     if(!SSPCON1bits.SSPEN)
  2649  04A8  0024               	movlb	4	; select bank4
  2650  04A9  1A95               	btfsc	21,5	;volatile
  2651  04AA  2CAC               	goto	u451
  2652  04AB  2CAD               	goto	u450
  2653  04AC                     u451:
  2654  04AC  2CB4               	goto	l328
  2655  04AD                     u450:
  2656  04AD                     l2344:
  2657                           
  2658                           ;mcc_generated_files/i2c_master.c: 505:     {;mcc_generated_files/i2c_master.c: 506:    
      +                               SSPSTAT = 0x00;
  2659  04AD  0194               	clrf	20	;volatile
  2660  04AE                     l2346:
  2661                           
  2662                           ;mcc_generated_files/i2c_master.c: 507:         SSPCON1 = 0x08;
  2663  04AE  3008               	movlw	8
  2664  04AF  0095               	movwf	21	;volatile
  2665  04B0                     l2348:
  2666                           
  2667                           ;mcc_generated_files/i2c_master.c: 508:         SSPCON2 = 0x00;
  2668  04B0  0196               	clrf	22	;volatile
  2669                           
  2670                           ;mcc_generated_files/i2c_master.c: 509:         SSPADD = 0x4F;
  2671  04B1  304F               	movlw	79
  2672  04B2  0092               	movwf	18	;volatile
  2673  04B3                     l2350:
  2674                           
  2675                           ;mcc_generated_files/i2c_master.c: 510:         SSPCON1bits.SSPEN = 1;
  2676  04B3  1695               	bsf	21,5	;volatile
  2677  04B4                     l328:
  2678  04B4  0008               	return
  2679  04B5                     __end_of_I2C_MasterOpen:
  2680                           
  2681                           	psect	text9
  2682  0434                     __ptext9:	
  2683 ;; *************** function _I2C_MasterWrite *****************
  2684 ;; Defined at:
  2685 ;;		line 210 in file "mcc_generated_files/i2c_master.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      enum E355
  2692 ;; Registers used:
  2693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; Hardware stack levels required when called: 7
  2706 ;; This function calls:
  2707 ;;		_I2C_MasterOperation
  2708 ;; This function is called by:
  2709 ;;		_I2C_Write1ByteRegister
  2710 ;;		_I2C_Read1ByteRegister
  2711 ;;		_I2C_Read2ByteRegister
  2712 ;;		_I2C_Write2ByteRegister
  2713 ;;		_I2C_WriteNBytes
  2714 ;;		_I2C_ReadDataBlock
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718  0434                     _I2C_MasterWrite:	
  2719                           ;psect for function _I2C_MasterWrite
  2720                           
  2721  0434                     l2428:	
  2722                           ;incstack = 0
  2723                           ; Regs used in _I2C_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2724                           
  2725                           
  2726                           ;mcc_generated_files/i2c_master.c: 212:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  2727  0434  3000               	movlw	0
  2728  0435  3185  2557  3184   	fcall	_I2C_MasterOperation
  2729  0438                     l179:
  2730  0438  0008               	return
  2731  0439                     __end_of_I2C_MasterWrite:
  2732                           
  2733                           	psect	text10
  2734  0557                     __ptext10:	
  2735 ;; *************** function _I2C_MasterOperation *****************
  2736 ;; Defined at:
  2737 ;;		line 183 in file "mcc_generated_files/i2c_master.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  read            1    wreg     _Bool 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  read            1    8[COMMON] _Bool 
  2742 ;;  returnValue     1    9[COMMON] enum E355
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      enum E355
  2745 ;; Registers used:
  2746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;Total ram usage:        3 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 6
  2759 ;; This function calls:
  2760 ;;		_I2C_MasterStart
  2761 ;;		_I2C_Poller
  2762 ;; This function is called by:
  2763 ;;		_I2C_MasterWrite
  2764 ;;		_I2C_MasterRead
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768  0557                     _I2C_MasterOperation:	
  2769                           ;psect for function _I2C_MasterOperation
  2770                           
  2771                           
  2772                           ;incstack = 0
  2773                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2774                           ;I2C_MasterOperation@read stored from wreg
  2775  0557  00F8               	movwf	I2C_MasterOperation@read
  2776  0558                     l2358:
  2777                           
  2778                           ;mcc_generated_files/i2c_master.c: 183: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 184: {;mcc_generated_files/i2c_master.c: 185:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  2779  0558  01F9               	clrf	I2C_MasterOperation@returnValue
  2780  0559  0AF9               	incf	I2C_MasterOperation@returnValue,f
  2781                           
  2782                           ;mcc_generated_files/i2c_master.c: 186:     if(!I2C_Status.busy)
  2783  055A  0020               	movlb	0	; select bank0
  2784  055B  18BC               	btfsc	_I2C_Status+28,1
  2785  055C  2D5E               	goto	u461
  2786  055D  2D5F               	goto	u460
  2787  055E                     u461:
  2788  055E  2D73               	goto	l2374
  2789  055F                     u460:
  2790  055F                     l2360:
  2791                           
  2792                           ;mcc_generated_files/i2c_master.c: 187:     {;mcc_generated_files/i2c_master.c: 188:    
      +                               I2C_Status.busy = 1;
  2793  055F  14BC               	bsf	_I2C_Status+28,1
  2794  0560                     l2362:
  2795                           
  2796                           ;mcc_generated_files/i2c_master.c: 189:         returnValue = I2C_NOERR;
  2797  0560  01F9               	clrf	I2C_MasterOperation@returnValue
  2798  0561                     l2364:
  2799                           
  2800                           ;mcc_generated_files/i2c_master.c: 191:         if(read)
  2801  0561  0878               	movf	I2C_MasterOperation@read,w
  2802  0562  1903               	btfsc	3,2
  2803  0563  2D65               	goto	u471
  2804  0564  2D66               	goto	u470
  2805  0565                     u471:
  2806  0565  2D69               	goto	l2368
  2807  0566                     u470:
  2808  0566                     l2366:
  2809                           
  2810                           ;mcc_generated_files/i2c_master.c: 192:         {;mcc_generated_files/i2c_master.c: 193:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  2811  0566  01BA               	clrf	_I2C_Status+26
  2812  0567  0ABA               	incf	_I2C_Status+26,f
  2813                           
  2814                           ;mcc_generated_files/i2c_master.c: 194:         }
  2815  0568  2D6D               	goto	l2370
  2816  0569                     l2368:
  2817                           
  2818                           ;mcc_generated_files/i2c_master.c: 196:         {;mcc_generated_files/i2c_master.c: 197:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  2819  0569  3002               	movlw	2
  2820  056A  00F7               	movwf	??_I2C_MasterOperation
  2821  056B  0877               	movf	??_I2C_MasterOperation,w
  2822  056C  00BA               	movwf	_I2C_Status+26
  2823  056D                     l2370:
  2824                           
  2825                           ;mcc_generated_files/i2c_master.c: 199:         I2C_MasterStart();
  2826  056D  3183  23E0  3185   	fcall	_I2C_MasterStart
  2827  0570                     l2372:
  2828                           
  2829                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Poller();
  2830  0570  3184  249B  3185   	fcall	_I2C_Poller
  2831  0573                     l2374:
  2832                           
  2833                           ;mcc_generated_files/i2c_master.c: 202:     return returnValue;
  2834  0573  0879               	movf	I2C_MasterOperation@returnValue,w
  2835  0574                     l173:
  2836  0574  0008               	return
  2837  0575                     __end_of_I2C_MasterOperation:
  2838                           
  2839                           	psect	text11
  2840  049B                     __ptext11:	
  2841 ;; *************** function _I2C_Poller *****************
  2842 ;; Defined at:
  2843 ;;		line 271 in file "mcc_generated_files/i2c_master.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2861 ;;Total ram usage:        0 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 5
  2864 ;; This function calls:
  2865 ;;		_I2C_MasterFsm
  2866 ;;		_I2C_MasterWaitForEvent
  2867 ;; This function is called by:
  2868 ;;		_I2C_MasterOperation
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872  049B                     _I2C_Poller:	
  2873                           ;psect for function _I2C_Poller
  2874                           
  2875  049B                     l2334:	
  2876                           ;incstack = 0
  2877                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2878                           
  2879                           
  2880                           ;mcc_generated_files/i2c_master.c: 273:     while(I2C_Status.busy)
  2881  049B  2CA2               	goto	l2340
  2882  049C                     l2336:
  2883                           
  2884                           ;mcc_generated_files/i2c_master.c: 274:     {;mcc_generated_files/i2c_master.c: 275:    
      +                               I2C_MasterWaitForEvent();
  2885  049C  3184  243F  3184   	fcall	_I2C_MasterWaitForEvent
  2886  049F                     l2338:
  2887                           
  2888                           ;mcc_generated_files/i2c_master.c: 276:         I2C_MasterFsm();
  2889  049F  3185  25DC  3184   	fcall	_I2C_MasterFsm
  2890  04A2                     l2340:
  2891                           
  2892                           ;mcc_generated_files/i2c_master.c: 273:     while(I2C_Status.busy)
  2893  04A2  0020               	movlb	0	; select bank0
  2894  04A3  18BC               	btfsc	_I2C_Status+28,1
  2895  04A4  2CA6               	goto	u441
  2896  04A5  2CA7               	goto	u440
  2897  04A6                     u441:
  2898  04A6  2C9C               	goto	l2336
  2899  04A7                     u440:
  2900  04A7                     l212:
  2901  04A7  0008               	return
  2902  04A8                     __end_of_I2C_Poller:
  2903                           
  2904                           	psect	text12
  2905  043F                     __ptext12:	
  2906 ;; *************** function _I2C_MasterWaitForEvent *****************
  2907 ;; Defined at:
  2908 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		None
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_I2C_Poller
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935  043F                     _I2C_MasterWaitForEvent:	
  2936                           ;psect for function _I2C_MasterWaitForEvent
  2937                           
  2938  043F                     l385:	
  2939                           ;incstack = 0
  2940                           ; Regs used in _I2C_MasterWaitForEvent: []
  2941                           ;mcc_generated_files/i2c_master.c: 611:     while(1)
  2942                           
  2943                           
  2944                           ;mcc_generated_files/i2c_master.c: 612:     {;mcc_generated_files/i2c_master.c: 613:    
      +                               if(PIR1bits.SSPIF)
  2945  043F  0020               	movlb	0	; select bank0
  2946  0440  1D91               	btfss	17,3	;volatile
  2947  0441  2C43               	goto	u411
  2948  0442  2C44               	goto	u410
  2949  0443                     u411:
  2950  0443  2C3F               	goto	l385
  2951  0444                     u410:
  2952  0444                     l389:
  2953  0444  0008               	return
  2954  0445                     __end_of_I2C_MasterWaitForEvent:
  2955                           
  2956                           	psect	text13
  2957  05DC                     __ptext13:	
  2958 ;; *************** function _I2C_MasterFsm *****************
  2959 ;; Defined at:
  2960 ;;		line 280 in file "mcc_generated_files/i2c_master.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2977 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2978 ;;Total ram usage:        3 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 4
  2981 ;; This function calls:
  2982 ;;		_I2C_DO_ADDRESS_NACK
  2983 ;;		_I2C_DO_IDLE
  2984 ;;		_I2C_DO_RCEN
  2985 ;;		_I2C_DO_RESET
  2986 ;;		_I2C_DO_RX
  2987 ;;		_I2C_DO_RX_ACK
  2988 ;;		_I2C_DO_RX_NACK_RESTART
  2989 ;;		_I2C_DO_RX_NACK_STOP
  2990 ;;		_I2C_DO_SEND_ADR_READ
  2991 ;;		_I2C_DO_SEND_ADR_WRITE
  2992 ;;		_I2C_DO_SEND_RESTART
  2993 ;;		_I2C_DO_SEND_RESTART_READ
  2994 ;;		_I2C_DO_SEND_RESTART_WRITE
  2995 ;;		_I2C_DO_SEND_STOP
  2996 ;;		_I2C_DO_TX
  2997 ;;		_I2C_DO_TX_EMPTY
  2998 ;;		_I2C_MasterClearIrq
  2999 ;;		_I2C_MasterIsNack
  3000 ;; This function is called by:
  3001 ;;		_I2C_Poller
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005  05DC                     _I2C_MasterFsm:	
  3006                           ;psect for function _I2C_MasterFsm
  3007                           
  3008  05DC                     l2322:	
  3009                           ;incstack = 0
  3010                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3011                           
  3012                           
  3013                           ;mcc_generated_files/i2c_master.c: 282:     I2C_MasterClearIrq();
  3014  05DC  3183  23D7  3185   	fcall	_I2C_MasterClearIrq
  3015  05DF                     l2324:
  3016                           
  3017                           ;mcc_generated_files/i2c_master.c: 284:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  3018  05DF  0020               	movlb	0	; select bank0
  3019  05E0  1C3C               	btfss	_I2C_Status+28,0
  3020  05E1  2DE3               	goto	u421
  3021  05E2  2DE4               	goto	u420
  3022  05E3                     u421:
  3023  05E3  2DF1               	goto	l2330
  3024  05E4                     u420:
  3025  05E4                     l2326:
  3026  05E4  3184  2439  3185   	fcall	_I2C_MasterIsNack
  3027  05E7  3A00               	xorlw	0
  3028  05E8  1903               	skipnz
  3029  05E9  2DEB               	goto	u431
  3030  05EA  2DEC               	goto	u430
  3031  05EB                     u431:
  3032  05EB  2DF1               	goto	l2330
  3033  05EC                     u430:
  3034  05EC                     l2328:
  3035                           
  3036                           ;mcc_generated_files/i2c_master.c: 285:     {;mcc_generated_files/i2c_master.c: 286:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  3037  05EC  300F               	movlw	15
  3038  05ED  00F4               	movwf	??_I2C_MasterFsm
  3039  05EE  0874               	movf	??_I2C_MasterFsm,w
  3040  05EF  0020               	movlb	0	; select bank0
  3041  05F0  00BA               	movwf	_I2C_Status+26
  3042  05F1                     l2330:
  3043                           
  3044                           ;mcc_generated_files/i2c_master.c: 288:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  3045  05F1  0020               	movlb	0	; select bank0
  3046  05F2  083A               	movf	_I2C_Status+26,w
  3047  05F3  00F4               	movwf	??_I2C_MasterFsm
  3048  05F4  01F5               	clrf	??_I2C_MasterFsm+1
  3049  05F5  35F4               	lslf	??_I2C_MasterFsm,f
  3050  05F6  0DF5               	rlf	??_I2C_MasterFsm+1,f
  3051  05F7  3000               	movlw	low (_i2c_fsmStateTable| (0+32768))
  3052  05F8  0774               	addwf	??_I2C_MasterFsm,w
  3053  05F9  0084               	movwf	4
  3054  05FA  3088               	movlw	high (_i2c_fsmStateTable| (0+32768))
  3055  05FB  3D75               	addwfc	??_I2C_MasterFsm+1,w
  3056  05FC  0085               	movwf	5
  3057  05FD  3F01               	moviw [1]fsr0
  3058  05FE  008A               	movwf	10
  3059  05FF  3F00               	moviw [0]fsr0
  3060  0600  000A               	callw
  3061  0601  3185               	pagesel	$
  3062  0602  00F6               	movwf	??_I2C_MasterFsm+2
  3063  0603  0876               	movf	??_I2C_MasterFsm+2,w
  3064  0604  0020               	movlb	0	; select bank0
  3065  0605  00BA               	movwf	_I2C_Status+26
  3066  0606                     l216:
  3067  0606  0008               	return
  3068  0607                     __end_of_I2C_MasterFsm:
  3069                           
  3070                           	psect	text14
  3071  0607                     __ptext14:	
  3072 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  3073 ;; Defined at:
  3074 ;;		line 459 in file "mcc_generated_files/i2c_master.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      enum E3368
  3081 ;; Registers used:
  3082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3091 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3092 ;;Total ram usage:        3 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 3
  3095 ;; This function calls:
  3096 ;;		Absolute function
  3097 ;;		_I2C_CallbackReturnReset
  3098 ;;		_I2C_CallbackReturnStop
  3099 ;;		_I2C_DO_SEND_RESTART
  3100 ;;		_I2C_DO_SEND_STOP
  3101 ;;		_rd1RegCompleteHandler
  3102 ;;		_rd2RegCompleteHandler
  3103 ;;		_rdBlkRegCompleteHandler
  3104 ;;		_wr1RegCompleteHandler
  3105 ;;		_wr2RegCompleteHandler
  3106 ;; This function is called by:
  3107 ;;		_I2C_MasterFsm
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111  0607                     _I2C_DO_ADDRESS_NACK:	
  3112                           ;psect for function _I2C_DO_ADDRESS_NACK
  3113                           
  3114  0607                     l2300:	
  3115                           ;incstack = 0
  3116                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3117                           
  3118                           
  3119                           ;mcc_generated_files/i2c_master.c: 461:     I2C_Status.addressNackCheck = 0;
  3120  0607  0020               	movlb	0	; select bank0
  3121  0608  103C               	bcf	_I2C_Status+28,0
  3122  0609                     l2302:
  3123                           
  3124                           ;mcc_generated_files/i2c_master.c: 462:     I2C_Status.error = I2C_FAIL;
  3125  0609  3002               	movlw	2
  3126  060A  00F0               	movwf	??_I2C_DO_ADDRESS_NACK
  3127  060B  0870               	movf	??_I2C_DO_ADDRESS_NACK,w
  3128  060C  00BB               	movwf	_I2C_Status+27
  3129                           
  3130                           ;mcc_generated_files/i2c_master.c: 463:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  3131  060D  2E16               	goto	l2314
  3132  060E                     l2304:
  3133                           
  3134                           ;mcc_generated_files/i2c_master.c: 467:             return I2C_DO_SEND_RESTART();
  3135  060E  3184  2416  3186   	fcall	_I2C_DO_SEND_RESTART
  3136  0611  2E32               	goto	l307
  3137  0612                     l2308:
  3138                           
  3139                           ;mcc_generated_files/i2c_master.c: 469:             return I2C_DO_SEND_STOP();
  3140  0612  3184  241B  3186   	fcall	_I2C_DO_SEND_STOP
  3141  0615  2E32               	goto	l307
  3142  0616                     l2314:
  3143  0616  082E               	movf	low ((_I2C_Status| 0+14)),w
  3144  0617  00F0               	movwf	??_I2C_DO_ADDRESS_NACK
  3145  0618  0870               	movf	??_I2C_DO_ADDRESS_NACK,w
  3146  0619  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  3147  061A  3004               	movlw	4
  3148  061B  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3149  061C  0086               	movwf	6
  3150  061D  0187               	clrf	7
  3151  061E  3F41               	moviw [1]fsr1
  3152  061F  008A               	movwf	10
  3153  0620  3F40               	moviw [0]fsr1
  3154  0621  000A               	callw
  3155  0622  3186               	pagesel	$
  3156  0623  00F1               	movwf	??_I2C_DO_ADDRESS_NACK+1
  3157  0624  01F2               	clrf	??_I2C_DO_ADDRESS_NACK+2
  3158                           
  3159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3160                           ; Switch size 1, requested type "simple"
  3161                           ; Number of cases is 1, Range of values is 0 to 0
  3162                           ; switch strategies available:
  3163                           ; Name         Instructions Cycles
  3164                           ; simple_byte            4     3 (average)
  3165                           ; direct_byte            8     6 (fixed)
  3166                           ; jumptable            260     6 (fixed)
  3167                           ;	Chosen strategy is simple_byte
  3168  0625  0872               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  3169  0626  3A00               	xorlw	0	; case 0
  3170  0627  1903               	skipnz
  3171  0628  2E2A               	goto	l2836
  3172  0629  2E12               	goto	l2308
  3173  062A                     l2836:
  3174                           
  3175                           ; Switch size 1, requested type "simple"
  3176                           ; Number of cases is 2, Range of values is 2 to 3
  3177                           ; switch strategies available:
  3178                           ; Name         Instructions Cycles
  3179                           ; simple_byte            7     4 (average)
  3180                           ; direct_byte           13     9 (fixed)
  3181                           ; jumptable            263     9 (fixed)
  3182                           ;	Chosen strategy is simple_byte
  3183  062A  0871               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  3184  062B  3A02               	xorlw	2	; case 2
  3185  062C  1903               	skipnz
  3186  062D  2E0E               	goto	l2304
  3187  062E  3A01               	xorlw	1	; case 3
  3188  062F  1903               	skipnz
  3189  0630  2E0E               	goto	l2304
  3190  0631  2E12               	goto	l2308
  3191  0632                     l307:
  3192  0632  0008               	return
  3193  0633                     __end_of_I2C_DO_ADDRESS_NACK:
  3194                           
  3195                           	psect	text15
  3196  042F                     __ptext15:	
  3197 ;; *************** function _I2C_DO_RESET *****************
  3198 ;; Defined at:
  3199 ;;		line 453 in file "mcc_generated_files/i2c_master.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      enum E3368
  3206 ;; Registers used:
  3207 ;;		wreg, status,2
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3217 ;;Total ram usage:        0 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; This function calls:
  3220 ;;		Nothing
  3221 ;; This function is called by:
  3222 ;;		_I2C_MasterFsm
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226  042F                     _I2C_DO_RESET:	
  3227                           ;psect for function _I2C_DO_RESET
  3228                           
  3229  042F                     l2292:	
  3230                           ;incstack = 0
  3231                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  3232                           
  3233                           
  3234                           ;mcc_generated_files/i2c_master.c: 455:     I2C_Status.busy = 0;
  3235  042F  0020               	movlb	0	; select bank0
  3236  0430  10BC               	bcf	_I2C_Status+28,1
  3237  0431                     l2294:
  3238                           
  3239                           ;mcc_generated_files/i2c_master.c: 456:     I2C_Status.error = I2C_NOERR;
  3240  0431  01BB               	clrf	_I2C_Status+27
  3241  0432                     l2296:
  3242                           
  3243                           ;mcc_generated_files/i2c_master.c: 457:     return I2C_RESET;
  3244  0432  300E               	movlw	14
  3245  0433                     l301:
  3246  0433  0008               	return
  3247  0434                     __end_of_I2C_DO_RESET:
  3248                           
  3249                           	psect	text16
  3250  042A                     __ptext16:	
  3251 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  3252 ;; Defined at:
  3253 ;;		line 447 in file "mcc_generated_files/i2c_master.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      enum E3368
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, pclath, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;Total ram usage:        0 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 1
  3274 ;; This function calls:
  3275 ;;		_I2C_MasterSendNack
  3276 ;; This function is called by:
  3277 ;;		_I2C_DO_RX
  3278 ;;		_I2C_MasterFsm
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282  042A                     _I2C_DO_RX_NACK_RESTART:	
  3283                           ;psect for function _I2C_DO_RX_NACK_RESTART
  3284                           
  3285  042A                     l2096:	
  3286                           ;incstack = 0
  3287                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3288                           
  3289                           
  3290                           ;mcc_generated_files/i2c_master.c: 449:     I2C_MasterSendNack();
  3291  042A  3183  23F6  3184   	fcall	_I2C_MasterSendNack
  3292  042D                     l2098:
  3293                           
  3294                           ;mcc_generated_files/i2c_master.c: 450:     return I2C_SEND_RESTART;
  3295  042D  3009               	movlw	9
  3296  042E                     l298:
  3297  042E  0008               	return
  3298  042F                     __end_of_I2C_DO_RX_NACK_RESTART:
  3299                           
  3300                           	psect	text17
  3301  0425                     __ptext17:	
  3302 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  3303 ;; Defined at:
  3304 ;;		line 441 in file "mcc_generated_files/i2c_master.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;		None
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      enum E3368
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0, pclath, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;Total ram usage:        0 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 1
  3325 ;; This function calls:
  3326 ;;		_I2C_MasterSendNack
  3327 ;; This function is called by:
  3328 ;;		_I2C_DO_RX
  3329 ;;		_I2C_MasterFsm
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333  0425                     _I2C_DO_RX_NACK_STOP:	
  3334                           ;psect for function _I2C_DO_RX_NACK_STOP
  3335                           
  3336  0425                     l2102:	
  3337                           ;incstack = 0
  3338                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  3339                           
  3340                           
  3341                           ;mcc_generated_files/i2c_master.c: 443:     I2C_MasterSendNack();
  3342  0425  3183  23F6  3184   	fcall	_I2C_MasterSendNack
  3343  0428                     l2104:
  3344                           
  3345                           ;mcc_generated_files/i2c_master.c: 444:     return I2C_SEND_STOP;
  3346  0428  300A               	movlw	10
  3347  0429                     l295:
  3348  0429  0008               	return
  3349  042A                     __end_of_I2C_DO_RX_NACK_STOP:
  3350                           
  3351                           	psect	text18
  3352  0420                     __ptext18:	
  3353 ;; *************** function _I2C_DO_RX_ACK *****************
  3354 ;; Defined at:
  3355 ;;		line 434 in file "mcc_generated_files/i2c_master.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;		None
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      enum E3368
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0, pclath, cstack
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3373 ;;Total ram usage:        0 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 1
  3376 ;; This function calls:
  3377 ;;		_I2C_MasterSendAck
  3378 ;; This function is called by:
  3379 ;;		_I2C_MasterFsm
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383  0420                     _I2C_DO_RX_ACK:	
  3384                           ;psect for function _I2C_DO_RX_ACK
  3385                           
  3386  0420                     l2286:	
  3387                           ;incstack = 0
  3388                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  3389                           
  3390                           
  3391                           ;mcc_generated_files/i2c_master.c: 436:     I2C_MasterSendAck();
  3392  0420  3183  23FA  3184   	fcall	_I2C_MasterSendAck
  3393  0423                     l2288:
  3394                           
  3395                           ;mcc_generated_files/i2c_master.c: 437:     return I2C_RCEN;
  3396  0423  3005               	movlw	5
  3397  0424                     l292:
  3398  0424  0008               	return
  3399  0425                     __end_of_I2C_DO_RX_ACK:
  3400                           
  3401                           	psect	text19
  3402  041B                     __ptext19:	
  3403 ;; *************** function _I2C_DO_SEND_STOP *****************
  3404 ;; Defined at:
  3405 ;;		line 428 in file "mcc_generated_files/i2c_master.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      enum E3368
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, pclath, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3423 ;;Total ram usage:        0 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 1
  3426 ;; This function calls:
  3427 ;;		_I2C_MasterStop
  3428 ;; This function is called by:
  3429 ;;		_I2C_DO_TX
  3430 ;;		_I2C_DO_TX_EMPTY
  3431 ;;		_I2C_DO_ADDRESS_NACK
  3432 ;;		_I2C_MasterFsm
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436  041B                     _I2C_DO_SEND_STOP:	
  3437                           ;psect for function _I2C_DO_SEND_STOP
  3438                           
  3439  041B                     l2084:	
  3440                           ;incstack = 0
  3441                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  3442                           
  3443                           
  3444                           ;mcc_generated_files/i2c_master.c: 430:     I2C_MasterStop();
  3445  041B  3183  23E6  3184   	fcall	_I2C_MasterStop
  3446  041E                     l2086:
  3447                           
  3448                           ;mcc_generated_files/i2c_master.c: 431:     return I2C_IDLE;
  3449  041E  3000               	movlw	0
  3450  041F                     l289:
  3451  041F  0008               	return
  3452  0420                     __end_of_I2C_DO_SEND_STOP:
  3453                           
  3454                           	psect	text20
  3455  0416                     __ptext20:	
  3456 ;; *************** function _I2C_DO_SEND_RESTART *****************
  3457 ;; Defined at:
  3458 ;;		line 422 in file "mcc_generated_files/i2c_master.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      enum E3368
  3465 ;; Registers used:
  3466 ;;		wreg, status,2, status,0, pclath, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3476 ;;Total ram usage:        0 bytes
  3477 ;; Hardware stack levels used: 1
  3478 ;; Hardware stack levels required when called: 1
  3479 ;; This function calls:
  3480 ;;		_I2C_MasterEnableRestart
  3481 ;; This function is called by:
  3482 ;;		_I2C_DO_TX_EMPTY
  3483 ;;		_I2C_DO_ADDRESS_NACK
  3484 ;;		_I2C_MasterFsm
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488  0416                     _I2C_DO_SEND_RESTART:	
  3489                           ;psect for function _I2C_DO_SEND_RESTART
  3490                           
  3491  0416                     l2110:	
  3492                           ;incstack = 0
  3493                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  3494                           
  3495                           
  3496                           ;mcc_generated_files/i2c_master.c: 424:     I2C_MasterEnableRestart();
  3497  0416  3183  23E3  3184   	fcall	_I2C_MasterEnableRestart
  3498  0419                     l2112:
  3499                           
  3500                           ;mcc_generated_files/i2c_master.c: 425:     return I2C_SEND_ADR_READ;
  3501  0419  3001               	movlw	1
  3502  041A                     l286:
  3503  041A  0008               	return
  3504  041B                     __end_of_I2C_DO_SEND_RESTART:
  3505                           
  3506                           	psect	text21
  3507  0411                     __ptext21:	
  3508 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  3509 ;; Defined at:
  3510 ;;		line 415 in file "mcc_generated_files/i2c_master.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      enum E3368
  3517 ;; Registers used:
  3518 ;;		wreg, status,2, status,0, pclath, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3528 ;;Total ram usage:        0 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; Hardware stack levels required when called: 1
  3531 ;; This function calls:
  3532 ;;		_I2C_MasterEnableRestart
  3533 ;; This function is called by:
  3534 ;;		_I2C_DO_TX
  3535 ;;		_I2C_MasterFsm
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539  0411                     _I2C_DO_SEND_RESTART_WRITE:	
  3540                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  3541                           
  3542  0411                     l2078:	
  3543                           ;incstack = 0
  3544                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  3545                           
  3546                           
  3547                           ;mcc_generated_files/i2c_master.c: 417:     I2C_MasterEnableRestart();
  3548  0411  3183  23E3  3184   	fcall	_I2C_MasterEnableRestart
  3549  0414                     l2080:
  3550                           
  3551                           ;mcc_generated_files/i2c_master.c: 418:     return I2C_SEND_ADR_WRITE;
  3552  0414  3002               	movlw	2
  3553  0415                     l283:
  3554  0415  0008               	return
  3555  0416                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  3556                           
  3557                           	psect	text22
  3558  040C                     __ptext22:	
  3559 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  3560 ;; Defined at:
  3561 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      enum E3368
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0, pclath, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3579 ;;Total ram usage:        0 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; Hardware stack levels required when called: 1
  3582 ;; This function calls:
  3583 ;;		_I2C_MasterEnableRestart
  3584 ;; This function is called by:
  3585 ;;		_I2C_DO_TX
  3586 ;;		_I2C_MasterFsm
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590  040C                     _I2C_DO_SEND_RESTART_READ:	
  3591                           ;psect for function _I2C_DO_SEND_RESTART_READ
  3592                           
  3593  040C                     l2072:	
  3594                           ;incstack = 0
  3595                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  3596                           
  3597                           
  3598                           ;mcc_generated_files/i2c_master.c: 411:     I2C_MasterEnableRestart();
  3599  040C  3183  23E3  3184   	fcall	_I2C_MasterEnableRestart
  3600  040F                     l2074:
  3601                           
  3602                           ;mcc_generated_files/i2c_master.c: 412:     return I2C_SEND_ADR_READ;
  3603  040F  3001               	movlw	1
  3604  0410                     l280:
  3605  0410  0008               	return
  3606  0411                     __end_of_I2C_DO_SEND_RESTART_READ:
  3607                           
  3608                           	psect	text23
  3609  044B                     __ptext23:	
  3610 ;; *************** function _I2C_DO_RCEN *****************
  3611 ;; Defined at:
  3612 ;;		line 361 in file "mcc_generated_files/i2c_master.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      enum E3368
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0, pclath, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3630 ;;Total ram usage:        0 bytes
  3631 ;; Hardware stack levels used: 1
  3632 ;; Hardware stack levels required when called: 1
  3633 ;; This function calls:
  3634 ;;		_I2C_MasterStartRx
  3635 ;; This function is called by:
  3636 ;;		_I2C_MasterFsm
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640  044B                     _I2C_DO_RCEN:	
  3641                           ;psect for function _I2C_DO_RCEN
  3642                           
  3643  044B                     l2254:	
  3644                           ;incstack = 0
  3645                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  3646                           
  3647                           
  3648                           ;mcc_generated_files/i2c_master.c: 363:     I2C_Status.addressNackCheck = 0;
  3649  044B  0020               	movlb	0	; select bank0
  3650  044C  103C               	bcf	_I2C_Status+28,0
  3651  044D                     l2256:
  3652                           
  3653                           ;mcc_generated_files/i2c_master.c: 364:     I2C_MasterStartRx();
  3654  044D  3183  23E9  3184   	fcall	_I2C_MasterStartRx
  3655  0450                     l2258:
  3656                           
  3657                           ;mcc_generated_files/i2c_master.c: 365:     return I2C_RX;
  3658  0450  3004               	movlw	4
  3659  0451                     l256:
  3660  0451  0008               	return
  3661  0452                     __end_of_I2C_DO_RCEN:
  3662                           
  3663                           	psect	text24
  3664  06FD                     __ptext24:	
  3665 ;; *************** function _I2C_DO_RX *****************
  3666 ;; Defined at:
  3667 ;;		line 337 in file "mcc_generated_files/i2c_master.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      enum E3368
  3674 ;; Registers used:
  3675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;Total ram usage:        3 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; Hardware stack levels required when called: 3
  3688 ;; This function calls:
  3689 ;;		Absolute function
  3690 ;;		_I2C_CallbackReturnReset
  3691 ;;		_I2C_CallbackReturnStop
  3692 ;;		_I2C_DO_RX_NACK_RESTART
  3693 ;;		_I2C_DO_RX_NACK_STOP
  3694 ;;		_I2C_MasterGetRxData
  3695 ;;		_I2C_MasterSendAck
  3696 ;;		_rd1RegCompleteHandler
  3697 ;;		_rd2RegCompleteHandler
  3698 ;;		_rdBlkRegCompleteHandler
  3699 ;;		_wr1RegCompleteHandler
  3700 ;;		_wr2RegCompleteHandler
  3701 ;; This function is called by:
  3702 ;;		_I2C_MasterFsm
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706  06FD                     _I2C_DO_RX:	
  3707                           ;psect for function _I2C_DO_RX
  3708                           
  3709  06FD                     l2224:	
  3710                           ;incstack = 0
  3711                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3712                           
  3713                           
  3714                           ;mcc_generated_files/i2c_master.c: 339:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  3715  06FD  3183  23EC  3186   	fcall	_I2C_MasterGetRxData
  3716  0700  00F0               	movwf	??_I2C_DO_RX
  3717  0701  0020               	movlb	0	; select bank0
  3718  0702  0837               	movf	low ((_I2C_Status| 0+23)),w
  3719  0703  0086               	movwf	6
  3720  0704  0187               	clrf	7
  3721  0705  0870               	movf	??_I2C_DO_RX,w
  3722  0706  0081               	movwf	1
  3723  0707                     l2226:
  3724  0707  3001               	movlw	1
  3725  0708  00F0               	movwf	??_I2C_DO_RX
  3726  0709  0870               	movf	??_I2C_DO_RX,w
  3727  070A  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  3728  070B                     l2228:
  3729                           
  3730                           ;mcc_generated_files/i2c_master.c: 340:     if(--I2C_Status.data_length)
  3731  070B  3001               	movlw	1
  3732  070C  02B8               	subwf	_I2C_Status+24,f
  3733  070D  3000               	movlw	0
  3734  070E  3BB9               	subwfb	_I2C_Status+25,f
  3735  070F  0838               	movf	_I2C_Status+24,w
  3736  0710  0439               	iorwf	_I2C_Status+25,w
  3737  0711  1903               	btfsc	3,2
  3738  0712  2F14               	goto	u401
  3739  0713  2F15               	goto	u400
  3740  0714                     u401:
  3741  0714  2F1A               	goto	l244
  3742  0715                     u400:
  3743  0715                     l2230:
  3744                           
  3745                           ;mcc_generated_files/i2c_master.c: 341:     {;mcc_generated_files/i2c_master.c: 342:    
      +                               I2C_MasterSendAck();
  3746  0715  3183  23FA  3186   	fcall	_I2C_MasterSendAck
  3747  0718                     l2232:
  3748                           
  3749                           ;mcc_generated_files/i2c_master.c: 343:         return I2C_RCEN;
  3750  0718  3005               	movlw	5
  3751  0719  2F42               	goto	l245
  3752  071A                     l244:	
  3753                           ;mcc_generated_files/i2c_master.c: 345:     else
  3754                           
  3755                           
  3756                           ;mcc_generated_files/i2c_master.c: 346:     {;mcc_generated_files/i2c_master.c: 347:    
      +                               I2C_Status.bufferFree = 1;
  3757  071A  15BC               	bsf	_I2C_Status+28,3
  3758                           
  3759                           ;mcc_generated_files/i2c_master.c: 348:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  3760  071B  2F24               	goto	l2248
  3761  071C                     l2238:
  3762                           
  3763                           ;mcc_generated_files/i2c_master.c: 352:                 return I2C_DO_RX_NACK_RESTART();
  3764  071C  3184  242A  3186   	fcall	_I2C_DO_RX_NACK_RESTART
  3765  071F  2F42               	goto	l245
  3766  0720                     l2242:
  3767                           
  3768                           ;mcc_generated_files/i2c_master.c: 356:                 return I2C_DO_RX_NACK_STOP();
  3769  0720  3184  2425  3186   	fcall	_I2C_DO_RX_NACK_STOP
  3770  0723  2F42               	goto	l245
  3771  0724                     l2248:
  3772  0724  082C               	movf	low ((_I2C_Status| 0+12)),w
  3773  0725  00F0               	movwf	??_I2C_DO_RX
  3774  0726  0870               	movf	??_I2C_DO_RX,w
  3775  0727  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  3776  0728  0821               	movf	_I2C_Status+1,w
  3777  0729  008A               	movwf	10
  3778  072A  0820               	movf	_I2C_Status,w
  3779  072B  000A               	callw
  3780  072C  3186               	pagesel	$
  3781  072D  00F1               	movwf	??_I2C_DO_RX+1
  3782  072E  01F2               	clrf	??_I2C_DO_RX+2
  3783                           
  3784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3785                           ; Switch size 1, requested type "simple"
  3786                           ; Number of cases is 1, Range of values is 0 to 0
  3787                           ; switch strategies available:
  3788                           ; Name         Instructions Cycles
  3789                           ; simple_byte            4     3 (average)
  3790                           ; direct_byte            8     6 (fixed)
  3791                           ; jumptable            260     6 (fixed)
  3792                           ;	Chosen strategy is simple_byte
  3793  072F  0872               	movf	??_I2C_DO_RX+2,w
  3794  0730  3A00               	xorlw	0	; case 0
  3795  0731  1903               	skipnz
  3796  0732  2F34               	goto	l2838
  3797  0733  2F20               	goto	l2242
  3798  0734                     l2838:
  3799                           
  3800                           ; Switch size 1, requested type "simple"
  3801                           ; Number of cases is 4, Range of values is 1 to 4
  3802                           ; switch strategies available:
  3803                           ; Name         Instructions Cycles
  3804                           ; simple_byte           13     7 (average)
  3805                           ; direct_byte           17     9 (fixed)
  3806                           ; jumptable            263     9 (fixed)
  3807                           ;	Chosen strategy is simple_byte
  3808  0734  0871               	movf	??_I2C_DO_RX+1,w
  3809  0735  3A01               	xorlw	1	; case 1
  3810  0736  1903               	skipnz
  3811  0737  2F20               	goto	l2242
  3812  0738  3A03               	xorlw	3	; case 2
  3813  0739  1903               	skipnz
  3814  073A  2F1C               	goto	l2238
  3815  073B  3A01               	xorlw	1	; case 3
  3816  073C  1903               	skipnz
  3817  073D  2F1C               	goto	l2238
  3818  073E  3A07               	xorlw	7	; case 4
  3819  073F  1903               	skipnz
  3820  0740  2F20               	goto	l2242
  3821  0741  2F20               	goto	l2242
  3822  0742                     l245:
  3823  0742  0008               	return
  3824  0743                     __end_of_I2C_DO_RX:
  3825                           
  3826                           	psect	text25
  3827  0790                     __ptext25:	
  3828 ;; *************** function _I2C_DO_TX *****************
  3829 ;; Defined at:
  3830 ;;		line 313 in file "mcc_generated_files/i2c_master.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      enum E3368
  3837 ;; Registers used:
  3838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3847 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;Total ram usage:        3 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 3
  3851 ;; This function calls:
  3852 ;;		Absolute function
  3853 ;;		_I2C_CallbackReturnReset
  3854 ;;		_I2C_CallbackReturnStop
  3855 ;;		_I2C_DO_SEND_RESTART_READ
  3856 ;;		_I2C_DO_SEND_RESTART_WRITE
  3857 ;;		_I2C_DO_SEND_STOP
  3858 ;;		_I2C_MasterIsNack
  3859 ;;		_I2C_MasterSendTxData
  3860 ;;		_rd1RegCompleteHandler
  3861 ;;		_rd2RegCompleteHandler
  3862 ;;		_rdBlkRegCompleteHandler
  3863 ;;		_wr1RegCompleteHandler
  3864 ;;		_wr2RegCompleteHandler
  3865 ;; This function is called by:
  3866 ;;		_I2C_MasterFsm
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870  0790                     _I2C_DO_TX:	
  3871                           ;psect for function _I2C_DO_TX
  3872                           
  3873  0790                     l2190:	
  3874                           ;incstack = 0
  3875                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3876                           
  3877                           
  3878                           ;mcc_generated_files/i2c_master.c: 315:     if(I2C_MasterIsNack())
  3879  0790  3184  2439  3187   	fcall	_I2C_MasterIsNack
  3880  0793  3A00               	xorlw	0
  3881  0794  1903               	skipnz
  3882  0795  2F97               	goto	u381
  3883  0796  2F98               	goto	u380
  3884  0797                     u381:
  3885  0797  2FC8               	goto	l228
  3886  0798                     u380:
  3887  0798  2FA5               	goto	l2208
  3888  0799                     l2194:
  3889                           
  3890                           ;mcc_generated_files/i2c_master.c: 320:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  3891  0799  3184  240C  3187   	fcall	_I2C_DO_SEND_RESTART_READ
  3892  079C  2FE4               	goto	l231
  3893  079D                     l2198:
  3894                           
  3895                           ;mcc_generated_files/i2c_master.c: 322:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  3896  079D  3184  2411  3187   	fcall	_I2C_DO_SEND_RESTART_WRITE
  3897  07A0  2FE4               	goto	l231
  3898  07A1                     l2202:
  3899                           
  3900                           ;mcc_generated_files/i2c_master.c: 326:                 return I2C_DO_SEND_STOP();
  3901  07A1  3184  241B  3187   	fcall	_I2C_DO_SEND_STOP
  3902  07A4  2FE4               	goto	l231
  3903  07A5                     l2208:
  3904  07A5  0020               	movlb	0	; select bank0
  3905  07A6  082F               	movf	low ((_I2C_Status| 0+15)),w
  3906  07A7  00F1               	movwf	??_I2C_DO_TX
  3907  07A8  0871               	movf	??_I2C_DO_TX,w
  3908  07A9  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  3909  07AA  3006               	movlw	6
  3910  07AB  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3911  07AC  0086               	movwf	6
  3912  07AD  0187               	clrf	7
  3913  07AE  3F41               	moviw [1]fsr1
  3914  07AF  008A               	movwf	10
  3915  07B0  3F40               	moviw [0]fsr1
  3916  07B1  000A               	callw
  3917  07B2  3187               	pagesel	$
  3918  07B3  00F2               	movwf	??_I2C_DO_TX+1
  3919  07B4  01F3               	clrf	??_I2C_DO_TX+2
  3920                           
  3921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3922                           ; Switch size 1, requested type "simple"
  3923                           ; Number of cases is 1, Range of values is 0 to 0
  3924                           ; switch strategies available:
  3925                           ; Name         Instructions Cycles
  3926                           ; simple_byte            4     3 (average)
  3927                           ; direct_byte            8     6 (fixed)
  3928                           ; jumptable            260     6 (fixed)
  3929                           ;	Chosen strategy is simple_byte
  3930  07B5  0873               	movf	??_I2C_DO_TX+2,w
  3931  07B6  3A00               	xorlw	0	; case 0
  3932  07B7  1903               	skipnz
  3933  07B8  2FBA               	goto	l2840
  3934  07B9  2FA1               	goto	l2202
  3935  07BA                     l2840:
  3936                           
  3937                           ; Switch size 1, requested type "simple"
  3938                           ; Number of cases is 4, Range of values is 1 to 4
  3939                           ; switch strategies available:
  3940                           ; Name         Instructions Cycles
  3941                           ; simple_byte           13     7 (average)
  3942                           ; direct_byte           17     9 (fixed)
  3943                           ; jumptable            263     9 (fixed)
  3944                           ;	Chosen strategy is simple_byte
  3945  07BA  0872               	movf	??_I2C_DO_TX+1,w
  3946  07BB  3A01               	xorlw	1	; case 1
  3947  07BC  1903               	skipnz
  3948  07BD  2FA1               	goto	l2202
  3949  07BE  3A03               	xorlw	3	; case 2
  3950  07BF  1903               	skipnz
  3951  07C0  2F99               	goto	l2194
  3952  07C1  3A01               	xorlw	1	; case 3
  3953  07C2  1903               	skipnz
  3954  07C3  2F9D               	goto	l2198
  3955  07C4  3A07               	xorlw	7	; case 4
  3956  07C5  1903               	skipnz
  3957  07C6  2FA1               	goto	l2202
  3958  07C7  2FA1               	goto	l2202
  3959  07C8                     l228:	
  3960                           ;mcc_generated_files/i2c_master.c: 329:     else
  3961                           
  3962                           
  3963                           ;mcc_generated_files/i2c_master.c: 330:     {;mcc_generated_files/i2c_master.c: 331:    
      +                               I2C_Status.addressNackCheck = 0;
  3964  07C8  0020               	movlb	0	; select bank0
  3965  07C9  103C               	bcf	_I2C_Status+28,0
  3966  07CA                     l2210:
  3967                           
  3968                           ;mcc_generated_files/i2c_master.c: 332:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  3969  07CA  3017               	movlw	23
  3970  07CB  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  3971  07CC  0086               	movwf	6
  3972  07CD  0187               	clrf	7
  3973  07CE  3F40               	moviw [0]fsr1
  3974  07CF  0084               	movwf	4
  3975  07D0  0185               	clrf	5
  3976  07D1  0A81               	incf	1,f
  3977  07D2  0800               	movf	0,w
  3978  07D3  3184  2402  3187   	fcall	_I2C_MasterSendTxData
  3979  07D6                     l2212:
  3980                           
  3981                           ;mcc_generated_files/i2c_master.c: 333:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  3982  07D6  3001               	movlw	1
  3983  07D7  0020               	movlb	0	; select bank0
  3984  07D8  02B8               	subwf	_I2C_Status+24,f
  3985  07D9  3000               	movlw	0
  3986  07DA  3BB9               	subwfb	_I2C_Status+25,f
  3987  07DB  0838               	movf	_I2C_Status+24,w
  3988  07DC  0439               	iorwf	_I2C_Status+25,w
  3989  07DD  1D03               	btfss	3,2
  3990  07DE  2FE0               	goto	u391
  3991  07DF  2FE1               	goto	u390
  3992  07E0                     u391:
  3993  07E0  2FE3               	goto	l2216
  3994  07E1                     u390:
  3995  07E1                     l2214:
  3996  07E1  3006               	movlw	6
  3997  07E2  2FE4               	goto	l231
  3998  07E3                     l2216:
  3999  07E3  3003               	movlw	3
  4000  07E4                     l231:
  4001  07E4  0008               	return
  4002  07E5                     __end_of_I2C_DO_TX:
  4003                           
  4004                           	psect	text26
  4005  0452                     __ptext26:	
  4006 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  4007 ;; Defined at:
  4008 ;;		line 306 in file "mcc_generated_files/i2c_master.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;		None
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;		None
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      enum E3368
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0, pclath, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;Total ram usage:        0 bytes
  4027 ;; Hardware stack levels used: 1
  4028 ;; Hardware stack levels required when called: 1
  4029 ;; This function calls:
  4030 ;;		_I2C_MasterSendTxData
  4031 ;; This function is called by:
  4032 ;;		_I2C_MasterFsm
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036  0452                     _I2C_DO_SEND_ADR_WRITE:	
  4037                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  4038                           
  4039  0452                     l2182:	
  4040                           ;incstack = 0
  4041                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  4042                           
  4043                           
  4044                           ;mcc_generated_files/i2c_master.c: 308:     I2C_Status.addressNackCheck = 1;
  4045  0452  0020               	movlb	0	; select bank0
  4046  0453  143C               	bsf	_I2C_Status+28,0
  4047  0454                     l2184:
  4048                           
  4049                           ;mcc_generated_files/i2c_master.c: 309:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  4050  0454  3536               	lslf	_I2C_Status+22,w
  4051  0455  3184  2402  3184   	fcall	_I2C_MasterSendTxData
  4052  0458                     l2186:
  4053                           
  4054                           ;mcc_generated_files/i2c_master.c: 310:     return I2C_TX;
  4055  0458  3003               	movlw	3
  4056  0459                     l225:
  4057  0459  0008               	return
  4058  045A                     __end_of_I2C_DO_SEND_ADR_WRITE:
  4059                           
  4060                           	psect	text27
  4061  0463                     __ptext27:	
  4062 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  4063 ;; Defined at:
  4064 ;;		line 299 in file "mcc_generated_files/i2c_master.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;		None
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      enum E3368
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0, pclath, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4082 ;;Total ram usage:        0 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 1
  4085 ;; This function calls:
  4086 ;;		_I2C_MasterSendTxData
  4087 ;; This function is called by:
  4088 ;;		_I2C_MasterFsm
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092  0463                     _I2C_DO_SEND_ADR_READ:	
  4093                           ;psect for function _I2C_DO_SEND_ADR_READ
  4094                           
  4095  0463                     l2174:	
  4096                           ;incstack = 0
  4097                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  4098                           
  4099                           
  4100                           ;mcc_generated_files/i2c_master.c: 301:     I2C_Status.addressNackCheck = 1;
  4101  0463  0020               	movlb	0	; select bank0
  4102  0464  143C               	bsf	_I2C_Status+28,0
  4103  0465                     l2176:
  4104                           
  4105                           ;mcc_generated_files/i2c_master.c: 302:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  4106  0465  1403               	setc
  4107  0466  0D36               	rlf	_I2C_Status+22,w
  4108  0467  3184  2402  3184   	fcall	_I2C_MasterSendTxData
  4109  046A                     l2178:
  4110                           
  4111                           ;mcc_generated_files/i2c_master.c: 303:     return I2C_RCEN;
  4112  046A  3005               	movlw	5
  4113  046B                     l222:
  4114  046B  0008               	return
  4115  046C                     __end_of_I2C_DO_SEND_ADR_READ:
  4116                           
  4117                           	psect	text28
  4118  0407                     __ptext28:	
  4119 ;; *************** function _I2C_DO_IDLE *****************
  4120 ;; Defined at:
  4121 ;;		line 292 in file "mcc_generated_files/i2c_master.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      enum E3368
  4128 ;; Registers used:
  4129 ;;		wreg, status,2
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used: 1
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_I2C_MasterFsm
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148  0407                     _I2C_DO_IDLE:	
  4149                           ;psect for function _I2C_DO_IDLE
  4150                           
  4151  0407                     l2166:	
  4152                           ;incstack = 0
  4153                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  4154                           
  4155                           
  4156                           ;mcc_generated_files/i2c_master.c: 294:     I2C_Status.busy = 0;
  4157  0407  0020               	movlb	0	; select bank0
  4158  0408  10BC               	bcf	_I2C_Status+28,1
  4159  0409                     l2168:
  4160                           
  4161                           ;mcc_generated_files/i2c_master.c: 295:     I2C_Status.error = I2C_NOERR;
  4162  0409  01BB               	clrf	_I2C_Status+27
  4163  040A                     l2170:
  4164                           
  4165                           ;mcc_generated_files/i2c_master.c: 296:     return I2C_RESET;
  4166  040A  300E               	movlw	14
  4167  040B                     l219:
  4168  040B  0008               	return
  4169  040C                     __end_of_I2C_DO_IDLE:
  4170                           
  4171                           	psect	text29
  4172  0633                     __ptext29:	
  4173 ;; *************** function _I2C_DO_TX_EMPTY *****************
  4174 ;; Defined at:
  4175 ;;		line 368 in file "mcc_generated_files/i2c_master.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;		None
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      enum E3368
  4182 ;; Registers used:
  4183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4192 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;Total ram usage:        3 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; Hardware stack levels required when called: 3
  4196 ;; This function calls:
  4197 ;;		Absolute function
  4198 ;;		_I2C_CallbackReturnReset
  4199 ;;		_I2C_CallbackReturnStop
  4200 ;;		_I2C_DO_SEND_RESTART
  4201 ;;		_I2C_DO_SEND_STOP
  4202 ;;		_I2C_MasterSetIrq
  4203 ;;		_rd1RegCompleteHandler
  4204 ;;		_rd2RegCompleteHandler
  4205 ;;		_rdBlkRegCompleteHandler
  4206 ;;		_wr1RegCompleteHandler
  4207 ;;		_wr2RegCompleteHandler
  4208 ;; This function is called by:
  4209 ;;		_I2C_MasterFsm
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213  0633                     _I2C_DO_TX_EMPTY:	
  4214                           ;psect for function _I2C_DO_TX_EMPTY
  4215                           
  4216  0633                     l2262:	
  4217                           ;incstack = 0
  4218                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4219                           
  4220                           
  4221                           ;mcc_generated_files/i2c_master.c: 370:     I2C_Status.bufferFree = 1;
  4222  0633  0020               	movlb	0	; select bank0
  4223  0634  15BC               	bsf	_I2C_Status+28,3
  4224                           
  4225                           ;mcc_generated_files/i2c_master.c: 371:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  4226  0635  2E43               	goto	l2280
  4227  0636                     l2264:
  4228                           
  4229                           ;mcc_generated_files/i2c_master.c: 375:             return I2C_DO_SEND_RESTART();
  4230  0636  3184  2416  3186   	fcall	_I2C_DO_SEND_RESTART
  4231  0639  2E61               	goto	l262
  4232  063A                     l2268:
  4233                           
  4234                           ;mcc_generated_files/i2c_master.c: 377:             I2C_MasterSetIrq();
  4235  063A  3183  23EF  3186   	fcall	_I2C_MasterSetIrq
  4236  063D                     l2270:
  4237                           
  4238                           ;mcc_generated_files/i2c_master.c: 378:             return I2C_TX;
  4239  063D  3003               	movlw	3
  4240  063E  2E61               	goto	l262
  4241  063F                     l2274:
  4242                           
  4243                           ;mcc_generated_files/i2c_master.c: 381:             return I2C_DO_SEND_STOP();
  4244  063F  3184  241B  3186   	fcall	_I2C_DO_SEND_STOP
  4245  0642  2E61               	goto	l262
  4246  0643                     l2280:
  4247  0643  082C               	movf	low ((_I2C_Status| 0+12)),w
  4248  0644  00F0               	movwf	??_I2C_DO_TX_EMPTY
  4249  0645  0870               	movf	??_I2C_DO_TX_EMPTY,w
  4250  0646  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  4251  0647  0821               	movf	_I2C_Status+1,w
  4252  0648  008A               	movwf	10
  4253  0649  0820               	movf	_I2C_Status,w
  4254  064A  000A               	callw
  4255  064B  3186               	pagesel	$
  4256  064C  00F1               	movwf	??_I2C_DO_TX_EMPTY+1
  4257  064D  01F2               	clrf	??_I2C_DO_TX_EMPTY+2
  4258                           
  4259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4260                           ; Switch size 1, requested type "simple"
  4261                           ; Number of cases is 1, Range of values is 0 to 0
  4262                           ; switch strategies available:
  4263                           ; Name         Instructions Cycles
  4264                           ; simple_byte            4     3 (average)
  4265                           ; direct_byte            8     6 (fixed)
  4266                           ; jumptable            260     6 (fixed)
  4267                           ;	Chosen strategy is simple_byte
  4268  064E  0872               	movf	??_I2C_DO_TX_EMPTY+2,w
  4269  064F  3A00               	xorlw	0	; case 0
  4270  0650  1903               	skipnz
  4271  0651  2E53               	goto	l2842
  4272  0652  2E3F               	goto	l2274
  4273  0653                     l2842:
  4274                           
  4275                           ; Switch size 1, requested type "simple"
  4276                           ; Number of cases is 4, Range of values is 1 to 4
  4277                           ; switch strategies available:
  4278                           ; Name         Instructions Cycles
  4279                           ; simple_byte           13     7 (average)
  4280                           ; direct_byte           17     9 (fixed)
  4281                           ; jumptable            263     9 (fixed)
  4282                           ;	Chosen strategy is simple_byte
  4283  0653  0871               	movf	??_I2C_DO_TX_EMPTY+1,w
  4284  0654  3A01               	xorlw	1	; case 1
  4285  0655  1903               	skipnz
  4286  0656  2E3F               	goto	l2274
  4287  0657  3A03               	xorlw	3	; case 2
  4288  0658  1903               	skipnz
  4289  0659  2E36               	goto	l2264
  4290  065A  3A01               	xorlw	1	; case 3
  4291  065B  1903               	skipnz
  4292  065C  2E36               	goto	l2264
  4293  065D  3A07               	xorlw	7	; case 4
  4294  065E  1903               	skipnz
  4295  065F  2E3A               	goto	l2268
  4296  0660  2E3F               	goto	l2274
  4297  0661                     l262:
  4298  0661  0008               	return
  4299  0662                     __end_of_I2C_DO_TX_EMPTY:
  4300                           
  4301                           	psect	text30
  4302  03EF                     __ptext30:	
  4303 ;; *************** function _I2C_MasterSetIrq *****************
  4304 ;; Defined at:
  4305 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		None
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;Total ram usage:        0 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_I2C_DO_TX_EMPTY
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332  03EF                     _I2C_MasterSetIrq:	
  4333                           ;psect for function _I2C_MasterSetIrq
  4334                           
  4335  03EF                     l2116:	
  4336                           ;incstack = 0
  4337                           ; Regs used in _I2C_MasterSetIrq: []
  4338                           
  4339                           
  4340                           ;mcc_generated_files/i2c_master.c: 606:     PIR1bits.SSPIF = 1;
  4341  03EF  0020               	movlb	0	; select bank0
  4342  03F0  1591               	bsf	17,3	;volatile
  4343  03F1                     l382:
  4344  03F1  0008               	return
  4345  03F2                     __end_of_I2C_MasterSetIrq:
  4346                           
  4347                           	psect	text31
  4348  0439                     __ptext31:	
  4349 ;; *************** function _I2C_MasterIsNack *****************
  4350 ;; Defined at:
  4351 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      _Bool 
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4369 ;;Total ram usage:        0 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_I2C_MasterFsm
  4375 ;;		_I2C_DO_TX
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379  0439                     _I2C_MasterIsNack:	
  4380                           ;psect for function _I2C_MasterIsNack
  4381                           
  4382  0439                     l2066:	
  4383                           ;incstack = 0
  4384                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  4385                           
  4386                           
  4387                           ;mcc_generated_files/i2c_master.c: 559:     return SSPCON2bits.ACKSTAT;
  4388  0439  0024               	movlb	4	; select bank4
  4389  043A  0E16               	swapf	22,w	;volatile
  4390  043B  0C89               	rrf	9,f
  4391  043C  0C89               	rrf	9,f
  4392  043D  3901               	andlw	1
  4393  043E                     l355:
  4394  043E  0008               	return
  4395  043F                     __end_of_I2C_MasterIsNack:
  4396                           
  4397                           	psect	text32
  4398  0402                     __ptext32:	
  4399 ;; *************** function _I2C_MasterSendTxData *****************
  4400 ;; Defined at:
  4401 ;;		line 527 in file "mcc_generated_files/i2c_master.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  data            1    wreg     unsigned char 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  data            1    0[COMMON] unsigned char 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;Total ram usage:        1 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_I2C_DO_SEND_ADR_READ
  4425 ;;		_I2C_DO_SEND_ADR_WRITE
  4426 ;;		_I2C_DO_TX
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430  0402                     _I2C_MasterSendTxData:	
  4431                           ;psect for function _I2C_MasterSendTxData
  4432                           
  4433                           
  4434                           ;incstack = 0
  4435                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  4436                           ;I2C_MasterSendTxData@data stored from wreg
  4437  0402  00F0               	movwf	I2C_MasterSendTxData@data
  4438  0403                     l2070:
  4439                           
  4440                           ;mcc_generated_files/i2c_master.c: 527: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 528: {;mcc_generated_files/i2c_
      +                          master.c: 529:     SSPBUF = data;
  4441  0403  0870               	movf	I2C_MasterSendTxData@data,w
  4442  0404  0024               	movlb	4	; select bank4
  4443  0405  0091               	movwf	17	;volatile
  4444  0406                     l337:
  4445  0406  0008               	return
  4446  0407                     __end_of_I2C_MasterSendTxData:
  4447                           
  4448                           	psect	text33
  4449  03FA                     __ptext33:	
  4450 ;; *************** function _I2C_MasterSendAck *****************
  4451 ;; Defined at:
  4452 ;;		line 562 in file "mcc_generated_files/i2c_master.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;		None
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;		None
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  1    wreg      void 
  4459 ;; Registers used:
  4460 ;;		None
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;Total ram usage:        0 bytes
  4471 ;; Hardware stack levels used: 1
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_I2C_DO_RX
  4476 ;;		_I2C_DO_RX_ACK
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480  03FA                     _I2C_MasterSendAck:	
  4481                           ;psect for function _I2C_MasterSendAck
  4482                           
  4483  03FA                     l2094:	
  4484                           ;incstack = 0
  4485                           ; Regs used in _I2C_MasterSendAck: []
  4486                           
  4487                           
  4488                           ;mcc_generated_files/i2c_master.c: 564:     SSPCON2bits.ACKDT = 0;
  4489  03FA  0024               	movlb	4	; select bank4
  4490  03FB  1296               	bcf	22,5	;volatile
  4491                           
  4492                           ;mcc_generated_files/i2c_master.c: 565:     SSPCON2bits.ACKEN = 1;
  4493  03FC  1616               	bsf	22,4	;volatile
  4494  03FD                     l358:
  4495  03FD  0008               	return
  4496  03FE                     __end_of_I2C_MasterSendAck:
  4497                           
  4498                           	psect	text34
  4499  03EC                     __ptext34:	
  4500 ;; *************** function _I2C_MasterGetRxData *****************
  4501 ;; Defined at:
  4502 ;;		line 522 in file "mcc_generated_files/i2c_master.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;		None
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;		None
  4507 ;; Return value:  Size  Location     Type
  4508 ;;                  1    wreg      unsigned char 
  4509 ;; Registers used:
  4510 ;;		wreg
  4511 ;; Tracked objects:
  4512 ;;		On entry : 0/0
  4513 ;;		On exit  : 0/0
  4514 ;;		Unchanged: 0/0
  4515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4520 ;;Total ram usage:        0 bytes
  4521 ;; Hardware stack levels used: 1
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_I2C_DO_RX
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529  03EC                     _I2C_MasterGetRxData:	
  4530                           ;psect for function _I2C_MasterGetRxData
  4531                           
  4532  03EC                     l2090:	
  4533                           ;incstack = 0
  4534                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  4535                           
  4536                           
  4537                           ;mcc_generated_files/i2c_master.c: 524:     return SSPBUF;
  4538  03EC  0024               	movlb	4	; select bank4
  4539  03ED  0811               	movf	17,w	;volatile
  4540  03EE                     l334:
  4541  03EE  0008               	return
  4542  03EF                     __end_of_I2C_MasterGetRxData:
  4543                           
  4544                           	psect	text35
  4545  03F6                     __ptext35:	
  4546 ;; *************** function _I2C_MasterSendNack *****************
  4547 ;; Defined at:
  4548 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;		None
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;		None
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		None
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4566 ;;Total ram usage:        0 bytes
  4567 ;; Hardware stack levels used: 1
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_I2C_DO_RX_NACK_STOP
  4572 ;;		_I2C_DO_RX_NACK_RESTART
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576  03F6                     _I2C_MasterSendNack:	
  4577                           ;psect for function _I2C_MasterSendNack
  4578                           
  4579  03F6                     l2064:	
  4580                           ;incstack = 0
  4581                           ; Regs used in _I2C_MasterSendNack: []
  4582                           
  4583                           
  4584                           ;mcc_generated_files/i2c_master.c: 570:     SSPCON2bits.ACKDT = 1;
  4585  03F6  0024               	movlb	4	; select bank4
  4586  03F7  1696               	bsf	22,5	;volatile
  4587                           
  4588                           ;mcc_generated_files/i2c_master.c: 571:     SSPCON2bits.ACKEN = 1;
  4589  03F8  1616               	bsf	22,4	;volatile
  4590  03F9                     l361:
  4591  03F9  0008               	return
  4592  03FA                     __end_of_I2C_MasterSendNack:
  4593                           
  4594                           	psect	text36
  4595  03E9                     __ptext36:	
  4596 ;; *************** function _I2C_MasterStartRx *****************
  4597 ;; Defined at:
  4598 ;;		line 542 in file "mcc_generated_files/i2c_master.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		None
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_I2C_DO_RCEN
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625  03E9                     _I2C_MasterStartRx:	
  4626                           ;psect for function _I2C_MasterStartRx
  4627                           
  4628  03E9                     l2108:	
  4629                           ;incstack = 0
  4630                           ; Regs used in _I2C_MasterStartRx: []
  4631                           
  4632                           
  4633                           ;mcc_generated_files/i2c_master.c: 544:     SSPCON2bits.RCEN = 1;
  4634  03E9  0024               	movlb	4	; select bank4
  4635  03EA  1596               	bsf	22,3	;volatile
  4636  03EB                     l346:
  4637  03EB  0008               	return
  4638  03EC                     __end_of_I2C_MasterStartRx:
  4639                           
  4640                           	psect	text37
  4641  0523                     __ptext37:	
  4642 ;; *************** function _rdBlkRegCompleteHandler *****************
  4643 ;; Defined at:
  4644 ;;		line 746 in file "mcc_generated_files/i2c_master.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  ptr             1    9[COMMON] PTR void 
  4647 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4648 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      enum E360
  4653 ;; Registers used:
  4654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4660 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;Total ram usage:        1 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; Hardware stack levels required when called: 2
  4667 ;; This function calls:
  4668 ;;		_I2C_SetBuffer
  4669 ;;		_I2C_SetDataCompleteCallback
  4670 ;; This function is called by:
  4671 ;;		_I2C_ReadDataBlock
  4672 ;;		_I2C_DO_TX
  4673 ;;		_I2C_DO_RX
  4674 ;;		_I2C_DO_TX_EMPTY
  4675 ;;		_I2C_DO_ADDRESS_NACK
  4676 ;;		_I2C_DO_RX_EMPTY
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680  0523                     _rdBlkRegCompleteHandler:	
  4681                           ;psect for function _rdBlkRegCompleteHandler
  4682                           
  4683  0523                     l2158:	
  4684                           ;incstack = 0
  4685                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4686                           
  4687                           
  4688                           ;mcc_generated_files/i2c_master.c: 746: static i2c_operations_t rdBlkRegCompleteHandler(
      +                          void *ptr);mcc_generated_files/i2c_master.c: 747: {;mcc_generated_files/i2c_master.c: 74
      +                          8:     I2C_SetBuffer(((i2c_buffer_t *)ptr)->data,((i2c_buffer_t*)ptr)->len);
  4689  0523  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  4690  0524  0086               	movwf	6
  4691  0525  0187               	clrf	7
  4692  0526  3F40               	moviw [0]fsr1
  4693  0527  00F0               	movwf	I2C_SetBuffer@bufferSize
  4694  0528  3F41               	moviw [1]fsr1
  4695  0529  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  4696  052A  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  4697  052B  3E02               	addlw	2
  4698  052C  0086               	movwf	6
  4699  052D  0187               	clrf	7
  4700  052E  0801               	movf	1,w
  4701  052F  3184  24CF  3185   	fcall	_I2C_SetBuffer
  4702                           
  4703                           ;mcc_generated_files/i2c_master.c: 749:     I2C_SetDataCompleteCallback(((void*)0),((voi
      +                          d*)0));
  4704  0532  3000               	movlw	0
  4705  0533  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  4706  0534  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  4707  0535  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  4708  0536  3184  248E  3185   	fcall	_I2C_SetDataCompleteCallback
  4709  0539                     l2160:
  4710                           
  4711                           ;mcc_generated_files/i2c_master.c: 750:     return I2C_RESTART_READ;
  4712  0539  3002               	movlw	2
  4713  053A                     l467:
  4714  053A  0008               	return
  4715  053B                     __end_of_rdBlkRegCompleteHandler:
  4716                           
  4717                           	psect	text38
  4718  0512                     __ptext38:	
  4719 ;; *************** function _wr1RegCompleteHandler *****************
  4720 ;; Defined at:
  4721 ;;		line 732 in file "mcc_generated_files/i2c_master.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  ptr             1    9[COMMON] PTR void 
  4724 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4725 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      enum E360
  4730 ;; Registers used:
  4731 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4737 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;Total ram usage:        1 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 2
  4744 ;; This function calls:
  4745 ;;		_I2C_SetBuffer
  4746 ;;		_I2C_SetDataCompleteCallback
  4747 ;; This function is called by:
  4748 ;;		_I2C_Write1ByteRegister
  4749 ;;		_I2C_DO_TX
  4750 ;;		_I2C_DO_RX
  4751 ;;		_I2C_DO_TX_EMPTY
  4752 ;;		_I2C_DO_ADDRESS_NACK
  4753 ;;		_I2C_DO_RX_EMPTY
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757  0512                     _wr1RegCompleteHandler:	
  4758                           ;psect for function _wr1RegCompleteHandler
  4759                           
  4760  0512                     l2142:	
  4761                           ;incstack = 0
  4762                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4763                           
  4764                           
  4765                           ;mcc_generated_files/i2c_master.c: 732: static i2c_operations_t wr1RegCompleteHandler(vo
      +                          id *ptr);mcc_generated_files/i2c_master.c: 733: {;mcc_generated_files/i2c_master.c: 734:
      +                               I2C_SetBuffer(ptr,1);
  4766  0512  3001               	movlw	1
  4767  0513  00F0               	movwf	I2C_SetBuffer@bufferSize
  4768  0514  3000               	movlw	0
  4769  0515  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  4770  0516  0879               	movf	wr1RegCompleteHandler@ptr,w
  4771  0517  3184  24CF  3185   	fcall	_I2C_SetBuffer
  4772  051A                     l2144:
  4773                           
  4774                           ;mcc_generated_files/i2c_master.c: 735:     I2C_SetDataCompleteCallback(((void*)0),((voi
      +                          d*)0));
  4775  051A  3000               	movlw	0
  4776  051B  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  4777  051C  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  4778  051D  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  4779  051E  3184  248E  3185   	fcall	_I2C_SetDataCompleteCallback
  4780  0521                     l2146:
  4781                           
  4782                           ;mcc_generated_files/i2c_master.c: 736:     return I2C_CONTINUE;
  4783  0521  3004               	movlw	4
  4784  0522                     l461:
  4785  0522  0008               	return
  4786  0523                     __end_of_wr1RegCompleteHandler:
  4787                           
  4788                           	psect	text39
  4789  0501                     __ptext39:	
  4790 ;; *************** function _rd2RegCompleteHandler *****************
  4791 ;; Defined at:
  4792 ;;		line 725 in file "mcc_generated_files/i2c_master.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;  ptr             1    9[COMMON] PTR void 
  4795 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4796 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;		None
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      enum E360
  4801 ;; Registers used:
  4802 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4808 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;Total ram usage:        1 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; Hardware stack levels required when called: 2
  4815 ;; This function calls:
  4816 ;;		_I2C_SetBuffer
  4817 ;;		_I2C_SetDataCompleteCallback
  4818 ;; This function is called by:
  4819 ;;		_I2C_Read2ByteRegister
  4820 ;;		_I2C_DO_TX
  4821 ;;		_I2C_DO_RX
  4822 ;;		_I2C_DO_TX_EMPTY
  4823 ;;		_I2C_DO_ADDRESS_NACK
  4824 ;;		_I2C_DO_RX_EMPTY
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828  0501                     _rd2RegCompleteHandler:	
  4829                           ;psect for function _rd2RegCompleteHandler
  4830                           
  4831  0501                     l2134:	
  4832                           ;incstack = 0
  4833                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4834                           
  4835                           
  4836                           ;mcc_generated_files/i2c_master.c: 725: static i2c_operations_t rd2RegCompleteHandler(vo
      +                          id *ptr);mcc_generated_files/i2c_master.c: 726: {;mcc_generated_files/i2c_master.c: 727:
      +                               I2C_SetBuffer(ptr,2);
  4837  0501  3002               	movlw	2
  4838  0502  00F0               	movwf	I2C_SetBuffer@bufferSize
  4839  0503  3000               	movlw	0
  4840  0504  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  4841  0505  0879               	movf	rd2RegCompleteHandler@ptr,w
  4842  0506  3184  24CF  3185   	fcall	_I2C_SetBuffer
  4843  0509                     l2136:
  4844                           
  4845                           ;mcc_generated_files/i2c_master.c: 728:     I2C_SetDataCompleteCallback(((void*)0),((voi
      +                          d*)0));
  4846  0509  3000               	movlw	0
  4847  050A  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  4848  050B  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  4849  050C  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  4850  050D  3184  248E  3185   	fcall	_I2C_SetDataCompleteCallback
  4851  0510                     l2138:
  4852                           
  4853                           ;mcc_generated_files/i2c_master.c: 729:     return I2C_RESTART_READ;
  4854  0510  3002               	movlw	2
  4855  0511                     l458:
  4856  0511  0008               	return
  4857  0512                     __end_of_rd2RegCompleteHandler:
  4858                           
  4859                           	psect	text40
  4860  04F0                     __ptext40:	
  4861 ;; *************** function _rd1RegCompleteHandler *****************
  4862 ;; Defined at:
  4863 ;;		line 718 in file "mcc_generated_files/i2c_master.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  ptr             1    9[COMMON] PTR void 
  4866 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4867 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      enum E360
  4872 ;; Registers used:
  4873 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4879 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;Total ram usage:        1 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; Hardware stack levels required when called: 2
  4886 ;; This function calls:
  4887 ;;		_I2C_SetBuffer
  4888 ;;		_I2C_SetDataCompleteCallback
  4889 ;; This function is called by:
  4890 ;;		_I2C_Read1ByteRegister
  4891 ;;		_I2C_DO_TX
  4892 ;;		_I2C_DO_RX
  4893 ;;		_I2C_DO_TX_EMPTY
  4894 ;;		_I2C_DO_ADDRESS_NACK
  4895 ;;		_I2C_DO_RX_EMPTY
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899  04F0                     _rd1RegCompleteHandler:	
  4900                           ;psect for function _rd1RegCompleteHandler
  4901                           
  4902  04F0                     l2126:	
  4903                           ;incstack = 0
  4904                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4905                           
  4906                           
  4907                           ;mcc_generated_files/i2c_master.c: 718: static i2c_operations_t rd1RegCompleteHandler(vo
      +                          id *ptr);mcc_generated_files/i2c_master.c: 719: {;mcc_generated_files/i2c_master.c: 720:
      +                               I2C_SetBuffer(ptr,1);
  4908  04F0  3001               	movlw	1
  4909  04F1  00F0               	movwf	I2C_SetBuffer@bufferSize
  4910  04F2  3000               	movlw	0
  4911  04F3  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  4912  04F4  0879               	movf	rd1RegCompleteHandler@ptr,w
  4913  04F5  3184  24CF  3184   	fcall	_I2C_SetBuffer
  4914  04F8                     l2128:
  4915                           
  4916                           ;mcc_generated_files/i2c_master.c: 721:     I2C_SetDataCompleteCallback(((void*)0),((voi
      +                          d*)0));
  4917  04F8  3000               	movlw	0
  4918  04F9  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  4919  04FA  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  4920  04FB  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  4921  04FC  3184  248E  3184   	fcall	_I2C_SetDataCompleteCallback
  4922  04FF                     l2130:
  4923                           
  4924                           ;mcc_generated_files/i2c_master.c: 722:     return I2C_RESTART_READ;
  4925  04FF  3002               	movlw	2
  4926  0500                     l455:
  4927  0500  0008               	return
  4928  0501                     __end_of_rd1RegCompleteHandler:
  4929                           
  4930                           	psect	text41
  4931  03D5                     __ptext41:	
  4932 ;; *************** function _I2C_CallbackReturnReset *****************
  4933 ;; Defined at:
  4934 ;;		line 484 in file "mcc_generated_files/i2c_master.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  funPtr          1    9[COMMON] PTR void 
  4937 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4938 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      enum E360
  4943 ;; Registers used:
  4944 ;;		wreg
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4950 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4954 ;;Total ram usage:        1 bytes
  4955 ;; Hardware stack levels used: 1
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_I2C_Open
  4960 ;;		_I2C_DO_TX
  4961 ;;		_I2C_DO_RX
  4962 ;;		_I2C_DO_TX_EMPTY
  4963 ;;		_I2C_DO_ADDRESS_NACK
  4964 ;;		_I2C_DO_RX_EMPTY
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968  03D5                     _I2C_CallbackReturnReset:	
  4969                           ;psect for function _I2C_CallbackReturnReset
  4970                           
  4971  03D5                     l2122:	
  4972                           ;incstack = 0
  4973                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  4974                           
  4975                           
  4976                           ;mcc_generated_files/i2c_master.c: 484: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 485: {;mcc_generated_files/i2c_master.c: 486:  
      +                             return I2C_RESET_LINK;
  4977  03D5  3005               	movlw	5
  4978  03D6                     l318:
  4979  03D6  0008               	return
  4980  03D7                     __end_of_I2C_CallbackReturnReset:
  4981                           
  4982                           	psect	text42
  4983  03D3                     __ptext42:	
  4984 ;; *************** function _I2C_CallbackReturnStop *****************
  4985 ;; Defined at:
  4986 ;;		line 479 in file "mcc_generated_files/i2c_master.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  funPtr          1    9[COMMON] PTR void 
  4989 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  4990 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      enum E360
  4995 ;; Registers used:
  4996 ;;		wreg
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5002 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5006 ;;Total ram usage:        1 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_I2C_Open
  5012 ;;		_I2C_SetCallback
  5013 ;;		_I2C_DO_TX
  5014 ;;		_I2C_DO_RX
  5015 ;;		_I2C_DO_TX_EMPTY
  5016 ;;		_I2C_DO_ADDRESS_NACK
  5017 ;;		_I2C_DO_RX_EMPTY
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021  03D3                     _I2C_CallbackReturnStop:	
  5022                           ;psect for function _I2C_CallbackReturnStop
  5023                           
  5024  03D3                     l2118:	
  5025                           ;incstack = 0
  5026                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  5027                           
  5028                           
  5029                           ;mcc_generated_files/i2c_master.c: 479: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 480: {;mcc_generated_files/i2c_master.c: 481:   
      +                            return I2C_STOP;
  5030  03D3  3001               	movlw	1
  5031  03D4                     l315:
  5032  03D4  0008               	return
  5033  03D5                     __end_of_I2C_CallbackReturnStop:
  5034                           
  5035                           	psect	text43
  5036  04DF                     __ptext43:	
  5037 ;; *************** function _wr2RegCompleteHandler *****************
  5038 ;; Defined at:
  5039 ;;		line 739 in file "mcc_generated_files/i2c_master.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  ptr             1    9[COMMON] PTR void 
  5042 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5043 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      enum E360
  5048 ;; Registers used:
  5049 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5055 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5059 ;;Total ram usage:        1 bytes
  5060 ;; Hardware stack levels used: 1
  5061 ;; Hardware stack levels required when called: 2
  5062 ;; This function calls:
  5063 ;;		_I2C_SetBuffer
  5064 ;;		_I2C_SetDataCompleteCallback
  5065 ;; This function is called by:
  5066 ;;		_I2C_Write2ByteRegister
  5067 ;;		_I2C_DO_TX
  5068 ;;		_I2C_DO_RX
  5069 ;;		_I2C_DO_TX_EMPTY
  5070 ;;		_I2C_DO_ADDRESS_NACK
  5071 ;;		_I2C_DO_RX_EMPTY
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075  04DF                     _wr2RegCompleteHandler:	
  5076                           ;psect for function _wr2RegCompleteHandler
  5077                           
  5078  04DF                     l2150:	
  5079                           ;incstack = 0
  5080                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5081                           
  5082                           
  5083                           ;mcc_generated_files/i2c_master.c: 739: static i2c_operations_t wr2RegCompleteHandler(vo
      +                          id *ptr);mcc_generated_files/i2c_master.c: 740: {;mcc_generated_files/i2c_master.c: 741:
      +                               I2C_SetBuffer(ptr,2);
  5084  04DF  3002               	movlw	2
  5085  04E0  00F0               	movwf	I2C_SetBuffer@bufferSize
  5086  04E1  3000               	movlw	0
  5087  04E2  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  5088  04E3  0879               	movf	wr2RegCompleteHandler@ptr,w
  5089  04E4  3184  24CF  3184   	fcall	_I2C_SetBuffer
  5090  04E7                     l2152:
  5091                           
  5092                           ;mcc_generated_files/i2c_master.c: 742:     I2C_SetDataCompleteCallback(((void*)0),((voi
      +                          d*)0));
  5093  04E7  3000               	movlw	0
  5094  04E8  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  5095  04E9  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  5096  04EA  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  5097  04EB  3184  248E  3184   	fcall	_I2C_SetDataCompleteCallback
  5098  04EE                     l2154:
  5099                           
  5100                           ;mcc_generated_files/i2c_master.c: 743:     return I2C_CONTINUE;
  5101  04EE  3004               	movlw	4
  5102  04EF                     l464:
  5103  04EF  0008               	return
  5104  04F0                     __end_of_wr2RegCompleteHandler:
  5105                           
  5106                           	psect	text44
  5107  048E                     __ptext44:	
  5108 ;; *************** function _I2C_SetDataCompleteCallback *****************
  5109 ;; Defined at:
  5110 ;;		line 232 in file "mcc_generated_files/i2c_master.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  5113 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  5114 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
  5115 ;;  ptr             1    7[COMMON] PTR void 
  5116 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5117 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;		None
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      void 
  5122 ;; Registers used:
  5123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5129 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;Total ram usage:        4 bytes
  5134 ;; Hardware stack levels used: 1
  5135 ;; Hardware stack levels required when called: 1
  5136 ;; This function calls:
  5137 ;;		_I2C_SetCallback
  5138 ;; This function is called by:
  5139 ;;		_I2C_Write1ByteRegister
  5140 ;;		_rd1RegCompleteHandler
  5141 ;;		_rd2RegCompleteHandler
  5142 ;;		_wr1RegCompleteHandler
  5143 ;;		_wr2RegCompleteHandler
  5144 ;;		_rdBlkRegCompleteHandler
  5145 ;;		_I2C_Read1ByteRegister
  5146 ;;		_I2C_Read2ByteRegister
  5147 ;;		_I2C_Write2ByteRegister
  5148 ;;		_I2C_ReadDataBlock
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152  048E                     _I2C_SetDataCompleteCallback:	
  5153                           ;psect for function _I2C_SetDataCompleteCallback
  5154                           
  5155  048E                     l2058:	
  5156                           ;incstack = 0
  5157                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  5158                           
  5159                           
  5160                           ;mcc_generated_files/i2c_master.c: 232: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 233: {;mcc_generated_files/i2c_master.c
      +                          : 234:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  5161  048E  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  5162  048F  00F1               	movwf	I2C_SetCallback@cb+1
  5163  0490  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  5164  0491  00F0               	movwf	I2C_SetCallback@cb
  5165  0492  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  5166  0493  00F8               	movwf	??_I2C_SetDataCompleteCallback
  5167  0494  0878               	movf	??_I2C_SetDataCompleteCallback,w
  5168  0495  00F2               	movwf	I2C_SetCallback@ptr
  5169  0496  3000               	movlw	0
  5170  0497  3185  25B6  3184   	fcall	_I2C_SetCallback
  5171  049A                     l189:
  5172  049A  0008               	return
  5173  049B                     __end_of_I2C_SetDataCompleteCallback:
  5174                           
  5175                           	psect	text45
  5176  05B6                     __ptext45:	
  5177 ;; *************** function _I2C_SetCallback *****************
  5178 ;; Defined at:
  5179 ;;		line 257 in file "mcc_generated_files/i2c_master.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  idx             1    wreg     enum E3386
  5182 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  5183 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  5184 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
  5185 ;;  ptr             1    2[COMMON] PTR void 
  5186 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  5187 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  idx             1    4[COMMON] enum E3386
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  1    wreg      void 
  5192 ;; Registers used:
  5193 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5199 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5202 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5203 ;;Total ram usage:        5 bytes
  5204 ;; Hardware stack levels used: 1
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_I2C_SetDataCompleteCallback
  5209 ;;		_I2C_SetAddressNackCallback
  5210 ;;		_I2C_SetWriteCollisionCallback
  5211 ;;		_I2C_SetDataNackCallback
  5212 ;;		_I2C_SetTimeoutCallback
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216  05B6                     _I2C_SetCallback:	
  5217                           ;psect for function _I2C_SetCallback
  5218                           
  5219                           
  5220                           ;incstack = 0
  5221                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  5222                           ;I2C_SetCallback@idx stored from wreg
  5223  05B6  00F4               	movwf	I2C_SetCallback@idx
  5224  05B7                     l2046:
  5225                           
  5226                           ;mcc_generated_files/i2c_master.c: 257: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 258: {;mcc_generate
      +                          d_files/i2c_master.c: 259:     if(cb)
  5227  05B7  0870               	movf	I2C_SetCallback@cb,w
  5228  05B8  0471               	iorwf	I2C_SetCallback@cb+1,w
  5229  05B9  1903               	btfsc	3,2
  5230  05BA  2DBC               	goto	u361
  5231  05BB  2DBD               	goto	u360
  5232  05BC                     u361:
  5233  05BC  2DCE               	goto	l2050
  5234  05BD                     u360:
  5235  05BD                     l2048:
  5236                           
  5237                           ;mcc_generated_files/i2c_master.c: 260:     {;mcc_generated_files/i2c_master.c: 261:    
      +                               I2C_Status.callbackTable[idx] = cb;
  5238  05BD  3574               	lslf	I2C_SetCallback@idx,w
  5239  05BE  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5240  05BF  0086               	movwf	6
  5241  05C0  0187               	clrf	7
  5242  05C1  0870               	movf	I2C_SetCallback@cb,w
  5243  05C2  3FC0               	movwi [0]fsr1
  5244  05C3  0871               	movf	I2C_SetCallback@cb+1,w
  5245  05C4  3FC1               	movwi [1]fsr1
  5246                           
  5247                           ;mcc_generated_files/i2c_master.c: 262:         I2C_Status.callbackPayload[idx] = ptr;
  5248  05C5  0872               	movf	I2C_SetCallback@ptr,w
  5249  05C6  00F3               	movwf	??_I2C_SetCallback
  5250  05C7  0874               	movf	I2C_SetCallback@idx,w
  5251  05C8  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  5252  05C9  0086               	movwf	6
  5253  05CA  0187               	clrf	7
  5254  05CB  0873               	movf	??_I2C_SetCallback,w
  5255  05CC  0081               	movwf	1
  5256                           
  5257                           ;mcc_generated_files/i2c_master.c: 263:     }
  5258  05CD  2DDB               	goto	l206
  5259  05CE                     l2050:
  5260                           
  5261                           ;mcc_generated_files/i2c_master.c: 265:     {;mcc_generated_files/i2c_master.c: 266:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  5262  05CE  3574               	lslf	I2C_SetCallback@idx,w
  5263  05CF  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5264  05D0  0086               	movwf	6
  5265  05D1  0187               	clrf	7
  5266  05D2  30D3               	movlw	low _I2C_CallbackReturnStop
  5267  05D3  3FC0               	movwi [0]fsr1
  5268  05D4  3003               	movlw	high _I2C_CallbackReturnStop
  5269  05D5  3FC1               	movwi [1]fsr1
  5270                           
  5271                           ;mcc_generated_files/i2c_master.c: 267:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  5272  05D6  0874               	movf	I2C_SetCallback@idx,w
  5273  05D7  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  5274  05D8  0086               	movwf	6
  5275  05D9  0187               	clrf	7
  5276  05DA  0181               	clrf	1
  5277  05DB                     l206:
  5278  05DB  0008               	return
  5279  05DC                     __end_of_I2C_SetCallback:
  5280                           
  5281                           	psect	text46
  5282  04CF                     __ptext46:	
  5283 ;; *************** function _I2C_SetBuffer *****************
  5284 ;; Defined at:
  5285 ;;		line 222 in file "mcc_generated_files/i2c_master.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  buffer          1    wreg     PTR void 
  5288 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
  5289 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), 
  5290 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  5291 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0
      +), 
  5292 ;;  bufferSize      2    0[COMMON] unsigned int 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  buffer          1    3[COMMON] PTR void 
  5295 ;;		 -> I2C_Read1ByteRegister@returnValue.data(2), I2C_Read2ByteRegister@returnValue.data(2), I2C_Write1ByteRegister@dat
      +a.data(2), I2C_Write2ByteRegister@data.data(2), 
  5296 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), bufferBlock.data(2), I2C_Write2ByteRegister@reg(1), 
  5297 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
  5298 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0
      +), 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		wreg
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;Total ram usage:        4 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_I2C_Write1ByteRegister
  5318 ;;		_rd1RegCompleteHandler
  5319 ;;		_rd2RegCompleteHandler
  5320 ;;		_wr1RegCompleteHandler
  5321 ;;		_wr2RegCompleteHandler
  5322 ;;		_rdBlkRegCompleteHandler
  5323 ;;		_I2C_Read1ByteRegister
  5324 ;;		_I2C_Read2ByteRegister
  5325 ;;		_I2C_Write2ByteRegister
  5326 ;;		_I2C_WriteNBytes
  5327 ;;		_I2C_ReadNBytes
  5328 ;;		_I2C_ReadDataBlock
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332  04CF                     _I2C_SetBuffer:	
  5333                           ;psect for function _I2C_SetBuffer
  5334                           
  5335                           
  5336                           ;incstack = 0
  5337                           ; Regs used in _I2C_SetBuffer: [wreg]
  5338                           ;I2C_SetBuffer@buffer stored from wreg
  5339  04CF  00F3               	movwf	I2C_SetBuffer@buffer
  5340  04D0                     l2052:
  5341                           
  5342                           ;mcc_generated_files/i2c_master.c: 222: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 223: {;mcc_generated_files/i2c_master.c: 224:     
      +                          if(I2C_Status.bufferFree)
  5343  04D0  0020               	movlb	0	; select bank0
  5344  04D1  1DBC               	btfss	_I2C_Status+28,3
  5345  04D2  2CD4               	goto	u371
  5346  04D3  2CD5               	goto	u370
  5347  04D4                     u371:
  5348  04D4  2CDE               	goto	l186
  5349  04D5                     u370:
  5350  04D5                     l2054:
  5351                           
  5352                           ;mcc_generated_files/i2c_master.c: 225:     {;mcc_generated_files/i2c_master.c: 226:    
      +                               I2C_Status.data_ptr = buffer;
  5353  04D5  0873               	movf	I2C_SetBuffer@buffer,w
  5354  04D6  00F2               	movwf	??_I2C_SetBuffer
  5355  04D7  0872               	movf	??_I2C_SetBuffer,w
  5356  04D8  00B7               	movwf	low ((_I2C_Status| 0+23))
  5357                           
  5358                           ;mcc_generated_files/i2c_master.c: 227:         I2C_Status.data_length = bufferSize;
  5359  04D9  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  5360  04DA  00B9               	movwf	_I2C_Status+25
  5361  04DB  0870               	movf	I2C_SetBuffer@bufferSize,w
  5362  04DC  00B8               	movwf	_I2C_Status+24
  5363  04DD                     l2056:
  5364                           
  5365                           ;mcc_generated_files/i2c_master.c: 228:         I2C_Status.bufferFree = 0;
  5366  04DD  11BC               	bcf	_I2C_Status+28,3
  5367  04DE                     l186:
  5368  04DE  0008               	return
  5369  04DF                     __end_of_I2C_SetBuffer:
  5370                           
  5371                           	psect	text47
  5372  03E6                     __ptext47:	
  5373 ;; *************** function _I2C_MasterStop *****************
  5374 ;; Defined at:
  5375 ;;		line 552 in file "mcc_generated_files/i2c_master.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;		None
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		None
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5393 ;;Total ram usage:        0 bytes
  5394 ;; Hardware stack levels used: 1
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_I2C_DO_SEND_STOP
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402  03E6                     _I2C_MasterStop:	
  5403                           ;psect for function _I2C_MasterStop
  5404                           
  5405  03E6                     l2062:	
  5406                           ;incstack = 0
  5407                           ; Regs used in _I2C_MasterStop: []
  5408                           
  5409                           
  5410                           ;mcc_generated_files/i2c_master.c: 554:     SSPCON2bits.PEN = 1;
  5411  03E6  0024               	movlb	4	; select bank4
  5412  03E7  1516               	bsf	22,2	;volatile
  5413  03E8                     l352:
  5414  03E8  0008               	return
  5415  03E9                     __end_of_I2C_MasterStop:
  5416                           
  5417                           	psect	text48
  5418  03E3                     __ptext48:	
  5419 ;; *************** function _I2C_MasterEnableRestart *****************
  5420 ;; Defined at:
  5421 ;;		line 532 in file "mcc_generated_files/i2c_master.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;		None
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;		None
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  1    wreg      void 
  5428 ;; Registers used:
  5429 ;;		None
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5439 ;;Total ram usage:        0 bytes
  5440 ;; Hardware stack levels used: 1
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_I2C_DO_SEND_RESTART_READ
  5445 ;;		_I2C_DO_SEND_RESTART_WRITE
  5446 ;;		_I2C_DO_SEND_RESTART
  5447 ;;		_I2C_DO_RX_EMPTY
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451  03E3                     _I2C_MasterEnableRestart:	
  5452                           ;psect for function _I2C_MasterEnableRestart
  5453                           
  5454  03E3                     l2060:	
  5455                           ;incstack = 0
  5456                           ; Regs used in _I2C_MasterEnableRestart: []
  5457                           
  5458                           
  5459                           ;mcc_generated_files/i2c_master.c: 534:     SSPCON2bits.RSEN = 1;
  5460  03E3  0024               	movlb	4	; select bank4
  5461  03E4  1496               	bsf	22,1	;volatile
  5462  03E5                     l340:
  5463  03E5  0008               	return
  5464  03E6                     __end_of_I2C_MasterEnableRestart:
  5465                           
  5466                           	psect	text49
  5467  03E0                     __ptext49:	
  5468 ;; *************** function _I2C_MasterStart *****************
  5469 ;; Defined at:
  5470 ;;		line 547 in file "mcc_generated_files/i2c_master.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		None
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;Total ram usage:        0 bytes
  5489 ;; Hardware stack levels used: 1
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_I2C_MasterOperation
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497  03E0                     _I2C_MasterStart:	
  5498                           ;psect for function _I2C_MasterStart
  5499                           
  5500  03E0                     l2332:	
  5501                           ;incstack = 0
  5502                           ; Regs used in _I2C_MasterStart: []
  5503                           
  5504                           
  5505                           ;mcc_generated_files/i2c_master.c: 549:     SSPCON2bits.SEN = 1;
  5506  03E0  0024               	movlb	4	; select bank4
  5507  03E1  1416               	bsf	22,0	;volatile
  5508  03E2                     l349:
  5509  03E2  0008               	return
  5510  03E3                     __end_of_I2C_MasterStart:
  5511                           
  5512                           	psect	text50
  5513  053B                     __ptext50:	
  5514 ;; *************** function _I2C_Close *****************
  5515 ;; Defined at:
  5516 ;;		line 168 in file "mcc_generated_files/i2c_master.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;		None
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;  returnValue     1    1[COMMON] enum E355
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      enum E355
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0, pclath, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5533 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5534 ;;Total ram usage:        2 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; Hardware stack levels required when called: 1
  5537 ;; This function calls:
  5538 ;;		_I2C_MasterClearIrq
  5539 ;;		_I2C_MasterClose
  5540 ;;		_I2C_MasterDisableIrq
  5541 ;; This function is called by:
  5542 ;;		_I2C_Write1ByteRegister
  5543 ;;		_I2C_Read1ByteRegister
  5544 ;;		_I2C_Read2ByteRegister
  5545 ;;		_I2C_Write2ByteRegister
  5546 ;;		_I2C_WriteNBytes
  5547 ;;		_I2C_ReadNBytes
  5548 ;;		_I2C_ReadDataBlock
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552  053B                     _I2C_Close:	
  5553                           ;psect for function _I2C_Close
  5554                           
  5555  053B                     l2410:	
  5556                           ;incstack = 0
  5557                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  5558                           
  5559                           
  5560                           ;mcc_generated_files/i2c_master.c: 170:     i2c_error_t returnValue = I2C_BUSY;
  5561  053B  01F1               	clrf	I2C_Close@returnValue
  5562  053C  0AF1               	incf	I2C_Close@returnValue,f
  5563                           
  5564                           ;mcc_generated_files/i2c_master.c: 171:     if(!I2C_Status.busy)
  5565  053D  0020               	movlb	0	; select bank0
  5566  053E  18BC               	btfsc	_I2C_Status+28,1
  5567  053F  2D41               	goto	u491
  5568  0540  2D42               	goto	u490
  5569  0541                     u491:
  5570  0541  2D55               	goto	l2424
  5571  0542                     u490:
  5572  0542                     l2412:
  5573                           
  5574                           ;mcc_generated_files/i2c_master.c: 172:     {;mcc_generated_files/i2c_master.c: 173:    
      +                               I2C_Status.inUse = 0;
  5575  0542  113C               	bcf	_I2C_Status+28,2
  5576  0543                     l2414:
  5577                           
  5578                           ;mcc_generated_files/i2c_master.c: 174:         I2C_Status.address = 0xff;
  5579  0543  30FF               	movlw	255
  5580  0544  00F0               	movwf	??_I2C_Close
  5581  0545  0870               	movf	??_I2C_Close,w
  5582  0546  00B6               	movwf	_I2C_Status+22
  5583  0547                     l2416:
  5584                           
  5585                           ;mcc_generated_files/i2c_master.c: 175:         I2C_MasterClearIrq();
  5586  0547  3183  23D7  3185   	fcall	_I2C_MasterClearIrq
  5587  054A                     l2418:
  5588                           
  5589                           ;mcc_generated_files/i2c_master.c: 176:         I2C_MasterDisableIrq();
  5590  054A  3183  23DD  3185   	fcall	_I2C_MasterDisableIrq
  5591  054D                     l2420:
  5592                           
  5593                           ;mcc_generated_files/i2c_master.c: 177:         I2C_MasterClose();
  5594  054D  3183  23DA  3185   	fcall	_I2C_MasterClose
  5595  0550                     l2422:
  5596                           
  5597                           ;mcc_generated_files/i2c_master.c: 178:         returnValue = I2C_Status.error;
  5598  0550  0020               	movlb	0	; select bank0
  5599  0551  083B               	movf	_I2C_Status+27,w
  5600  0552  00F0               	movwf	??_I2C_Close
  5601  0553  0870               	movf	??_I2C_Close,w
  5602  0554  00F1               	movwf	I2C_Close@returnValue
  5603  0555                     l2424:
  5604                           
  5605                           ;mcc_generated_files/i2c_master.c: 180:     return returnValue;
  5606  0555  0871               	movf	I2C_Close@returnValue,w
  5607  0556                     l167:
  5608  0556  0008               	return
  5609  0557                     __end_of_I2C_Close:
  5610                           
  5611                           	psect	text51
  5612  03DD                     __ptext51:	
  5613 ;; *************** function _I2C_MasterDisableIrq *****************
  5614 ;; Defined at:
  5615 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;		None
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;		None
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		None
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;Total ram usage:        0 bytes
  5634 ;; Hardware stack levels used: 1
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_I2C_Close
  5639 ;;		_I2C_SetTimeOut
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643  03DD                     _I2C_MasterDisableIrq:	
  5644                           ;psect for function _I2C_MasterDisableIrq
  5645                           
  5646  03DD                     l2354:	
  5647                           ;incstack = 0
  5648                           ; Regs used in _I2C_MasterDisableIrq: []
  5649                           
  5650                           
  5651                           ;mcc_generated_files/i2c_master.c: 596:     PIE1bits.SSPIE = 0;
  5652  03DD  0021               	movlb	1	; select bank1
  5653  03DE  1191               	bcf	17,3	;volatile
  5654  03DF                     l376:
  5655  03DF  0008               	return
  5656  03E0                     __end_of_I2C_MasterDisableIrq:
  5657                           
  5658                           	psect	text52
  5659  03DA                     __ptext52:	
  5660 ;; *************** function _I2C_MasterClose *****************
  5661 ;; Defined at:
  5662 ;;		line 516 in file "mcc_generated_files/i2c_master.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;		None
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		None
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;Total ram usage:        0 bytes
  5681 ;; Hardware stack levels used: 1
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_I2C_Close
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689  03DA                     _I2C_MasterClose:	
  5690                           ;psect for function _I2C_MasterClose
  5691                           
  5692  03DA                     l2356:	
  5693                           ;incstack = 0
  5694                           ; Regs used in _I2C_MasterClose: []
  5695                           
  5696                           
  5697                           ;mcc_generated_files/i2c_master.c: 519:     SSPCON1bits.SSPEN = 0;
  5698  03DA  0024               	movlb	4	; select bank4
  5699  03DB  1295               	bcf	21,5	;volatile
  5700  03DC                     l331:
  5701  03DC  0008               	return
  5702  03DD                     __end_of_I2C_MasterClose:
  5703                           
  5704                           	psect	text53
  5705  03D7                     __ptext53:	
  5706 ;; *************** function _I2C_MasterClearIrq *****************
  5707 ;; Defined at:
  5708 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      void 
  5715 ;; Registers used:
  5716 ;;		None
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5726 ;;Total ram usage:        0 bytes
  5727 ;; Hardware stack levels used: 1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_I2C_Open
  5732 ;;		_I2C_Close
  5733 ;;		_I2C_MasterFsm
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737  03D7                     _I2C_MasterClearIrq:	
  5738                           ;psect for function _I2C_MasterClearIrq
  5739                           
  5740  03D7                     l2164:	
  5741                           ;incstack = 0
  5742                           ; Regs used in _I2C_MasterClearIrq: []
  5743                           
  5744                           
  5745                           ;mcc_generated_files/i2c_master.c: 601:     PIR1bits.SSPIF = 0;
  5746  03D7  0020               	movlb	0	; select bank0
  5747  03D8  1191               	bcf	17,3	;volatile
  5748  03D9                     l379:
  5749  03D9  0008               	return
  5750  03DA                     __end_of_I2C_MasterClearIrq:
  5751                           
  5752                           	psect	text54
  5753  0481                     __ptext54:	
  5754 ;; *************** function _SYSTEM_Initialize *****************
  5755 ;; Defined at:
  5756 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0, pclath, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;Total ram usage:        0 bytes
  5775 ;; Hardware stack levels used: 1
  5776 ;; Hardware stack levels required when called: 1
  5777 ;; This function calls:
  5778 ;;		_I2C_Initialize
  5779 ;;		_OSCILLATOR_Initialize
  5780 ;;		_PIN_MANAGER_Initialize
  5781 ;;		_WDT_Initialize
  5782 ;; This function is called by:
  5783 ;;		_main
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787  0481                     _SYSTEM_Initialize:	
  5788                           ;psect for function _SYSTEM_Initialize
  5789                           
  5790  0481                     l1686:	
  5791                           ;incstack = 0
  5792                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5793                           
  5794                           
  5795                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  5796  0481  3184  245A  3184   	fcall	_I2C_Initialize
  5797                           
  5798                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5799  0484  3185  2594  3184   	fcall	_PIN_MANAGER_Initialize
  5800                           
  5801                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5802  0487  3184  2475  3184   	fcall	_OSCILLATOR_Initialize
  5803                           
  5804                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  5805  048A  3183  23F2  3184   	fcall	_WDT_Initialize
  5806  048D                     l500:
  5807  048D  0008               	return
  5808  048E                     __end_of_SYSTEM_Initialize:
  5809                           
  5810                           	psect	text55
  5811  03F2                     __ptext55:	
  5812 ;; *************** function _WDT_Initialize *****************
  5813 ;; Defined at:
  5814 ;;		line 73 in file "mcc_generated_files/mcc.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;Total ram usage:        0 bytes
  5833 ;; Hardware stack levels used: 1
  5834 ;; This function calls:
  5835 ;;		Nothing
  5836 ;; This function is called by:
  5837 ;;		_SYSTEM_Initialize
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841  03F2                     _WDT_Initialize:	
  5842                           ;psect for function _WDT_Initialize
  5843                           
  5844  03F2                     l1672:	
  5845                           ;incstack = 0
  5846                           ; Regs used in _WDT_Initialize: [wreg]
  5847                           
  5848                           
  5849                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  5850  03F2  3016               	movlw	22
  5851  03F3  0021               	movlb	1	; select bank1
  5852  03F4  0097               	movwf	23	;volatile
  5853  03F5                     l509:
  5854  03F5  0008               	return
  5855  03F6                     __end_of_WDT_Initialize:
  5856                           
  5857                           	psect	text56
  5858  0594                     __ptext56:	
  5859 ;; *************** function _PIN_MANAGER_Initialize *****************
  5860 ;; Defined at:
  5861 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;		None
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;		None
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      void 
  5868 ;; Registers used:
  5869 ;;		wreg, status,2
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;Total ram usage:        0 bytes
  5880 ;; Hardware stack levels used: 1
  5881 ;; This function calls:
  5882 ;;		Nothing
  5883 ;; This function is called by:
  5884 ;;		_SYSTEM_Initialize
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888  0594                     _PIN_MANAGER_Initialize:	
  5889                           ;psect for function _PIN_MANAGER_Initialize
  5890                           
  5891  0594                     l1630:	
  5892                           ;incstack = 0
  5893                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5894                           
  5895                           
  5896                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5897  0594  0022               	movlb	2	; select bank2
  5898  0595  0190               	clrf	16	;volatile
  5899                           
  5900                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5901  0596  018F               	clrf	15	;volatile
  5902                           
  5903                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5904  0597  018C               	clrf	12	;volatile
  5905                           
  5906                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5907  0598  018D               	clrf	13	;volatile
  5908                           
  5909                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5910  0599  018E               	clrf	14	;volatile
  5911  059A                     l1632:
  5912                           
  5913                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x0F;
  5914  059A  300F               	movlw	15
  5915  059B  0021               	movlb	1	; select bank1
  5916  059C  0090               	movwf	16	;volatile
  5917  059D                     l1634:
  5918                           
  5919                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  5920  059D  30FF               	movlw	255
  5921  059E  008C               	movwf	12	;volatile
  5922  059F                     l1636:
  5923                           
  5924                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  5925  059F  30FF               	movlw	255
  5926  05A0  008D               	movwf	13	;volatile
  5927  05A1                     l1638:
  5928                           
  5929                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  5930  05A1  30FF               	movlw	255
  5931  05A2  008E               	movwf	14	;volatile
  5932  05A3                     l1640:
  5933                           
  5934                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  5935  05A3  30FF               	movlw	255
  5936  05A4  008F               	movwf	15	;volatile
  5937  05A5                     l1642:
  5938                           
  5939                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  5940  05A5  30FF               	movlw	255
  5941  05A6  0023               	movlb	3	; select bank3
  5942  05A7  008F               	movwf	15	;volatile
  5943  05A8                     l1644:
  5944                           
  5945                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x3F;
  5946  05A8  303F               	movlw	63
  5947  05A9  008D               	movwf	13	;volatile
  5948  05AA                     l1646:
  5949                           
  5950                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x07;
  5951  05AA  3007               	movlw	7
  5952  05AB  0090               	movwf	16	;volatile
  5953  05AC                     l1648:
  5954                           
  5955                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x3F;
  5956  05AC  303F               	movlw	63
  5957  05AD  008C               	movwf	12	;volatile
  5958  05AE                     l1650:
  5959                           
  5960                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  5961  05AE  0024               	movlb	4	; select bank4
  5962  05AF  0190               	clrf	16	;volatile
  5963  05B0                     l1652:
  5964                           
  5965                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  5966  05B0  018D               	clrf	13	;volatile
  5967  05B1                     l1654:
  5968                           
  5969                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  5970  05B1  0021               	movlb	1	; select bank1
  5971  05B2  1795               	bsf	21,7	;volatile
  5972  05B3                     l1656:
  5973                           
  5974                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  5975  05B3  0022               	movlb	2	; select bank2
  5976  05B4  019D               	clrf	29	;volatile
  5977  05B5                     l39:
  5978  05B5  0008               	return
  5979  05B6                     __end_of_PIN_MANAGER_Initialize:
  5980                           
  5981                           	psect	text57
  5982  0475                     __ptext57:	
  5983 ;; *************** function _OSCILLATOR_Initialize *****************
  5984 ;; Defined at:
  5985 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;		None
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      void 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;Total ram usage:        0 bytes
  6004 ;; Hardware stack levels used: 1
  6005 ;; This function calls:
  6006 ;;		Nothing
  6007 ;; This function is called by:
  6008 ;;		_SYSTEM_Initialize
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012  0475                     _OSCILLATOR_Initialize:	
  6013                           ;psect for function _OSCILLATOR_Initialize
  6014                           
  6015  0475                     l1666:	
  6016                           ;incstack = 0
  6017                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6018                           
  6019                           
  6020                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  6021  0475  3070               	movlw	112
  6022  0476  0021               	movlb	1	; select bank1
  6023  0477  0099               	movwf	25	;volatile
  6024  0478                     l1668:
  6025                           
  6026                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  6027  0478  0198               	clrf	24	;volatile
  6028  0479                     l1670:
  6029                           
  6030                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  6031  0479  0022               	movlb	2	; select bank2
  6032  047A  0196               	clrf	22	;volatile
  6033  047B                     l503:	
  6034                           ;mcc_generated_files/mcc.c: 69:     {;mcc_generated_files/mcc.c: 70:     }
  6035                           
  6036                           
  6037                           ;mcc_generated_files/mcc.c: 68:     while(PLLR == 0)
  6038  047B  0021               	movlb	1	; select bank1
  6039  047C  1F1A               	btfss	26,6	;volatile
  6040  047D  2C7F               	goto	u171
  6041  047E  2C80               	goto	u170
  6042  047F                     u171:
  6043  047F  2C7B               	goto	l503
  6044  0480                     u170:
  6045  0480                     l506:
  6046  0480  0008               	return
  6047  0481                     __end_of_OSCILLATOR_Initialize:
  6048                           
  6049                           	psect	text58
  6050  045A                     __ptext58:	
  6051 ;; *************** function _I2C_Initialize *****************
  6052 ;; Defined at:
  6053 ;;		line 126 in file "mcc_generated_files/i2c_master.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;		None
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;		None
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      void 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6071 ;;Total ram usage:        0 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_SYSTEM_Initialize
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080  045A                     _I2C_Initialize:	
  6081                           ;psect for function _I2C_Initialize
  6082                           
  6083  045A                     l1658:	
  6084                           ;incstack = 0
  6085                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  6086                           
  6087                           
  6088                           ;mcc_generated_files/i2c_master.c: 128:     SSPSTAT = 0x00;
  6089  045A  0024               	movlb	4	; select bank4
  6090  045B  0194               	clrf	20	;volatile
  6091  045C                     l1660:
  6092                           
  6093                           ;mcc_generated_files/i2c_master.c: 129:     SSPCON1 = 0x08;
  6094  045C  3008               	movlw	8
  6095  045D  0095               	movwf	21	;volatile
  6096  045E                     l1662:
  6097                           
  6098                           ;mcc_generated_files/i2c_master.c: 130:     SSPCON2 = 0x00;
  6099  045E  0196               	clrf	22	;volatile
  6100                           
  6101                           ;mcc_generated_files/i2c_master.c: 131:     SSPADD = 0x4F;
  6102  045F  304F               	movlw	79
  6103  0460  0092               	movwf	18	;volatile
  6104  0461                     l1664:
  6105                           
  6106                           ;mcc_generated_files/i2c_master.c: 132:     SSPCON1bits.SSPEN = 0;
  6107  0461  1295               	bcf	21,5	;volatile
  6108  0462                     l159:
  6109  0462  0008               	return
  6110  0463                     __end_of_I2C_Initialize:
  6111  007E                     btemp	set	126	;btemp
  6112  007E                     wtemp0	set	126
  6113                           
  6114                           	psect	idloc
  6115                           
  6116                           ;Config register IDLOC0 @ 0x8000
  6117                           ;	unspecified, using default values
  6118  8000                     	org	32768
  6119  8000  3FFF               	dw	16383
  6120                           
  6121                           ;Config register IDLOC1 @ 0x8001
  6122                           ;	unspecified, using default values
  6123  8001                     	org	32769
  6124  8001  3FFF               	dw	16383
  6125                           
  6126                           ;Config register IDLOC2 @ 0x8002
  6127                           ;	unspecified, using default values
  6128  8002                     	org	32770
  6129  8002  3FFF               	dw	16383
  6130                           
  6131                           ;Config register IDLOC3 @ 0x8003
  6132                           ;	unspecified, using default values
  6133  8003                     	org	32771
  6134  8003  3FFF               	dw	16383
  6135                           
  6136                           	psect	config
  6137                           
  6138                           ;Config register CONFIG1 @ 0x8007
  6139                           ;	Oscillator Selection
  6140                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6141                           ;	Watchdog Timer Enable
  6142                           ;	WDTE = OFF, WDT disabled
  6143                           ;	Power-up Timer Enable
  6144                           ;	PWRTE = OFF, PWRT disabled
  6145                           ;	MCLR Pin Function Select
  6146                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6147                           ;	Flash Program Memory Code Protection
  6148                           ;	CP = OFF, Program memory code protection is disabled
  6149                           ;	Data Memory Code Protection
  6150                           ;	CPD = OFF, Data memory code protection is disabled
  6151                           ;	Brown-out Reset Enable
  6152                           ;	BOREN = ON, Brown-out Reset enabled
  6153                           ;	Clock Out Enable
  6154                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6155                           ;	Internal/External Switchover
  6156                           ;	IESO = ON, Internal/External Switchover mode is enabled
  6157                           ;	Fail-Safe Clock Monitor Enable
  6158                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6159  8007                     	org	32775
  6160  8007  3FE4               	dw	16356
  6161                           
  6162                           ;Config register CONFIG2 @ 0x8008
  6163                           ;	Flash Memory Self-Write Protection
  6164                           ;	WRT = OFF, Write protection off
  6165                           ;	Voltage Regulator Capacitor Enable
  6166                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  6167                           ;	PLL Enable
  6168                           ;	PLLEN = ON, 4x PLL enabled
  6169                           ;	Stack Overflow/Underflow Reset Enable
  6170                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6171                           ;	Brown-out Reset Voltage Selection
  6172                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6173                           ;	Low-Voltage Programming Enable
  6174                           ;	LVP = ON, Low-voltage programming enabled
  6175  8008                     	org	32776
  6176  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        4
    BSS         31
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      47
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$1606$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$1611	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$1606	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_MasterFsm$1605	const PTR FTN()enum E3368 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S174$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S495$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S174$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue.data(COMMON[2]), I2C_Read2ByteRegister@returnValue.data(COMMON[2]), I2C_Write1ByteRegister@data.data(COMMON[2]), I2C_Write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), bufferBlock.data(COMMON[2]), I2C_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S174$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S174$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    i2c_fsmStateTable	const PTR FTN()enum E3368[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 


Critical Paths under _main in COMMON

    _PCF_Wr->_I2C_Write1ByteRegister
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _main in BANK0

    _main->_i2c_lcd_init
    _i2c_lcd_init->_sendCMD
    _sendCMD->_loadPCF
    _loadPCF->_PCF_Wr

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  169122
                  _SYSTEM_Initialize
                       _i2c_lcd_init
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_init                                         1     1      0  169122
                                             11 BANK0      1     1      0
                             _PCF_Wr
                            _sendCMD
 ---------------------------------------------------------------------------------
 (2) _sendCMD                                              5     5      0   84804
                                              6 BANK0      5     5      0
                            _loadPCF
 ---------------------------------------------------------------------------------
 (3) _loadPCF                                              4     3      1   84714
                                              2 BANK0      4     3      1
                             _PCF_Wr
 ---------------------------------------------------------------------------------
 (4) _PCF_Wr                                               2     2      0   84318
                                              0 BANK0      2     2      0
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (5) _I2C_Write1ByteRegister                               4     2      2   84296
                                             10 COMMON     4     2      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetAddressNackCallback                           4     1      3    1870
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_Open                                             3     3      0      46
                                              0 COMMON     3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWrite                                      0     0      0   78300
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterOperation                                  3     3      0   78300
                                              7 COMMON     3     3      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (8) _I2C_Poller                                           0     0      0   78254
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterFsm                                        3     3      0   78254
                                              4 COMMON     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_TX_EMPTY                                     3     3      0   19547
                                              0 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_TX                                           3     3      0   19569
                                              1 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX                                           3     3      0   19547
                                              0 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_ADDRESS_NACK                                 3     3      0   19547
                                              0 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             1     0      1    4139
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (7) _I2C_SetCallback                                      5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (6) _I2C_SetBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_CallbackReturnStop                              1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _I2C_CallbackReturnReset                             1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_Close                                            2     2      0      24
                                              0 COMMON     2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _i2c_lcd_init
     _PCF_Wr
       _I2C_Write1ByteRegister
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                 _I2C_DO_RX_NACK_STOP *
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                   _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
         _I2C_SetDataCompleteCallback
     _sendCMD
       _loadPCF
         _PCF_Wr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      2F       5       58.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat May 27 20:06:04 2023

             ??_I2C_DO_SEND_ADR_READ 0070              ??_I2C_DO_SEND_ADR_WRITE 0071  
                        _SSPSTATbits 0214                                   l39 05B5  
              ??_I2C_DO_SEND_RESTART 0070                                  l212 04A7  
                                l301 0433                                  l206 05DB  
                                l222 046B                                  l231 07E4  
                                l216 0606                                  l225 0459  
                                l162 06FB                                  l331 03DC  
                                l315 03D4                                  l219 040B  
                                l307 0632                                  l163 06FC  
                                l500 048D                                  l340 03E5  
                                l228 07C8                                  l244 071A  
                                l245 0742                                  l173 0574  
                                l318 03D6                                  l334 03EE  
                                l262 0661                                  l159 0462  
                                l503 047B                                  l167 0556  
                                l352 03E8                                  l256 0451  
                                l280 0410                                  l328 04B4  
                                l416 0691                                  l520 04CE  
                                l361 03F9                                  l337 0406  
                                l506 0480                                  l186 04DE  
                                l346 03EB                                  l355 043E  
                                l283 0415                                  l179 0438  
                                l195 04C1                                  l292 0424  
                                l509 03F5                                  l349 03E2  
                                l189 049A                                  l461 0522  
                                l533 0593                                  l358 03FD  
                                l382 03F1                                  l286 041A  
                                l455 0500                                  l295 0429  
                                l527 06C2                                  l376 03DF  
                                l464 04EF                                  l536 078F  
                                l289 041F                                  l385 043F  
                                l458 0511                                  l298 042E  
                                l379 03D9                                  l467 053A  
                                l476 0472                                  l389 0444  
                                l477 0472                                  u400 0715  
                                u401 0714                                  u170 0480  
                                u410 0444                                  u171 047F  
                                u411 0443                                  u420 05E4  
                                u500 066C                                  u421 05E3  
                                u501 066B                                  u430 05EC  
                                u510 0691                                  u431 05EB  
                                u511 0690                                  u360 05BD  
                                u440 04A7                                  u361 05BC  
                                u441 04A6                                  u370 04D5  
                                u450 04AD                                  u371 04D4  
                                u451 04AC                                  u380 0798  
                                u460 055F                                  u381 0797  
                                u461 055E                                  u525 0580  
                                u390 07E1                                  u470 0566  
                                u391 07E0                                  u471 0565  
                                u480 06CB                                  u481 06CA  
                                u490 0542                                  u491 0541  
                                u707 074B                                  u717 0757  
                                u727 0761                                  u737 0771  
                                u747 077F                                  u757 078A  
                                u767 06C0               _I2C_MasterWaitForEvent 043F  
                                wreg 0009         ??_I2C_SetAddressNackCallback 0078  
             _I2C_Write1ByteRegister 0662             ??_I2C_CallbackReturnStop 007A  
                       _I2C_DO_RESET 042F              ??_rd2RegCompleteHandler 007A  
                               l2110 0416                                 l2102 0425  
                               l2112 0419                                 l2104 0428  
                               l2050 05CE                                 l2122 03D5  
                               l2130 04FF                                 l2210 07CA  
                               l2202 07A1                                 l2060 03E3  
                               l2052 04D0                                 l2108 03E9  
                               l2116 03EF                                 l2212 07D6  
                               l2300 0607                                 l2062 03E6  
                               l2054 04D5                                 l2046 05B7  
                               l2150 04DF                                 l2118 03D3  
                               l2126 04F0                                 l2134 0501  
                               l2142 0512                                 l2070 0403  
                               l2214 07E1                                 l2230 0715  
                               l2302 0609                                 l2056 04DD  
                               l2048 05BD                                 l2152 04E7  
                               l2128 04F8                                 l2136 0509  
                               l2144 051A                                 l2160 0539  
                               l2064 03F6                                 l2216 07E3  
                               l2208 07A5                                 l2232 0718  
                               l2224 06FD                                 l2072 040C  
                               l2080 0414                                 l2304 060E  
                               l2400 06EF                                 l2410 053B  
                               l2058 048E                                 l2154 04EE  
                               l2138 0510                                 l2146 0521  
                               l2090 03EC                                 l2066 0439  
                               l2170 040A                                 l2242 0720  
                               l2226 0707                                 l2074 040F  
                               l2314 0616                                 l2330 05F1  
                               l2322 05DC                                 l2402 06F4  
                               l2164 03D7                                 l2420 054D  
                               l2412 0542                                 l2332 03E0  
                               l2228 070B                                 l2084 041B  
                               l2308 0612                                 l2324 05DF  
                               l2340 04A2                                 l2404 06F7  
                               l2500 0774                                 l1630 0594  
                               l2422 0550                                 l2414 0543  
                               l2158 0523                                 l2094 03FA  
                               l2270 063D                                 l2262 0633  
                               l2166 0407                                 l2174 0463  
                               l2182 0452                                 l2190 0790  
                               l2238 071C                                 l2254 044B  
                               l2078 0411                                 l2086 041E  
                               l2326 05E4                                 l2334 049B  
                               l2350 04B3                                 l2342 04A8  
                               l2406 06FA                                 l2502 077E  
                               l1640 05A3                                 l1632 059A  
                               l2416 0547                                 l2424 0555  
                               l2264 0636                                 l2280 0643  
                               l2168 0409                                 l2176 0465  
                               l2184 0454                                 l2248 0724  
                               l2256 044D                                 l2096 042A  
                               l2328 05EC                                 l2336 049C  
                               l2360 055F                                 l2344 04AD  
                               l2432 04B5                                 l2440 0677  
                               l2504 0782                                 l1650 05AE  
                               l1642 05A5                                 l1634 059D  
                               l2354 03DD                                 l2418 054A  
                               l2274 063F                                 l2178 046A  
                               l2186 0458                                 l2194 0799  
                               l2258 0450                                 l2098 042D  
                               l2338 049F                                 l2370 056D  
                               l2362 0560                                 l2346 04AE  
                               l2442 067F                                 l2434 0663  
                               l2450 0694                                 l1660 045C  
                               l1652 05B0                                 l1644 05A8  
                               l1636 059F                                 l2356 03DA  
                               l2268 063A                                 l2292 042F  
                               l2372 0570                                 l2364 0561  
                               l2428 0434                                 l2348 04B0  
                               l2380 06CB                                 l2444 0686  
                               l2436 0663                                 l2460 06AC  
                               l2452 0695                                 l1662 045E  
                               l1670 0479                                 l1654 05B1  
                               l1646 05AA                                 l1638 05A1  
                               l2198 079D                                 l2286 0420  
                               l2294 0431                                 l2366 0566  
                               l2374 0573                                 l2358 0558  
                               l2390 06DF                                 l2382 06CF  
                               l2446 0689                                 l2438 066C  
                               l2462 06B0                                 l2454 0697  
                               l2630 046F                                 l1664 0461  
                               l1656 05B3                                 l1648 05AC  
                               l1672 03F2                                 l2288 0423  
                               l2296 0432                                 l2368 0569  
                               l2392 06E0                                 l2384 06D0  
                               l2448 04C4                                 l2464 06B6  
                               l2480 0588                                 l1658 045A  
                               l1666 0475                                 l2394 06E5  
                               l2386 06D1                                 l2378 06C4  
                               l2466 06BB                                 l2458 069C  
                               l2482 058D                                 l2490 0747  
                               l1668 0478                                 l2396 06E9  
                               l2388 06DA                                 l2468 06BF  
                               l2476 0577                                 l2492 074F  
                               l2628 046C                                 l1686 0481  
                               l2398 06EE                                 l2478 057C  
                               l2494 075C                                 l2840 07BA  
                               l2496 0760                                 l2488 0743  
                               l2842 0653                                 l2834 06A4  
                               l2498 0770                                 l2836 062A  
                               l2838 0734                        ?_i2c_lcd_init 0070  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATD 010F  
                               _LATE 0110                                 _PLLR 04D6  
                               _WPUB 020D                                 _WPUE 0210  
            ??_wr2RegCompleteHandler 007A                                 _main 046C  
           ?_I2C_CallbackReturnReset 0079                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                     __end_of_I2C_Open 06FD  
                               btemp 007E                       sendCMD@NibbleH 0047  
                     sendCMD@NibbleL 0048                                 start 0002  
                   ?_I2C_MasterClose 0070                     ?_I2C_MasterStart 0070  
                      _I2C_DO_RX_ACK 0420                     ?_I2C_MasterWrite 0070  
      __end_of_OSCILLATOR_Initialize 0481                                ?_main 0070  
                  ??_I2C_DO_TX_EMPTY 0070                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TRISD 008F                                _TRISE 0090  
                        loadPCF@dato 0044                    __end_of_I2C_DO_RX 0743  
                  __end_of_I2C_DO_TX 07E5                          loadPCF@mode 0041  
                    __end_of_loadPCF 06C3                       _WDT_Initialize 03F2  
                  __end_of_I2C_Close 0557                       ??_i2c_lcd_init 004A  
                    __end_of_sendCMD 0594       I2C_MasterOperation@returnValue 0079  
            _I2C_MasterEnableRestart 03E3                                pclath 000A  
                   ?_I2C_SetCallback 0070         I2C_SetAddressNackCallback@cb 0075  
                              status 0003                                wtemp0 007E  
                  ?_I2C_DO_SEND_STOP 0070                   ??_I2C_DO_SEND_STOP 0070  
                    __initialization 07E5                         __end_of_main 0475  
          ?_I2C_DO_SEND_RESTART_READ 0070                       ?_I2C_DO_RX_ACK 0070  
                             ??_main 007E                    ?_I2C_MasterIsNack 0070  
                  ?_I2C_MasterSetIrq 0070                   ??_I2C_MasterIsNack 0070  
             __end_of_WDT_Initialize 03F6                   ??_I2C_MasterSetIrq 0070  
    __end_of_I2C_CallbackReturnReset 03D7                               _APFCON 011D  
      I2C_SetDataCompleteCallback@cb 0075                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELD 018F  
                             _ANSELE 0190                               _BORCON 0116  
                       ??_I2C_Poller 0077                               _PCF_Wr 04C2  
                             _OSCCON 0099                               _WDTCON 0097  
                             _SSPADD 0212                               _SSPBUF 0211  
                _I2C_MasterGetRxData 03EC                        _I2C_MasterFsm 05DC  
                  I2C_SetCallback@cb 0070                        _I2C_SetBuffer 04CF  
                 __end_of_I2C_Poller 04A8         __end_of_I2C_MasterDisableIrq 03E0  
                          ??_loadPCF 0042                  _I2C_DO_ADDRESS_NACK 0607  
               ?_I2C_MasterGetRxData 0070                            ?_I2C_Open 0070  
                          ??_sendCMD 0045   __end_of_I2C_SetAddressNackCallback 04C2  
         _I2C_SetAddressNackCallback 04B5                      ?_WDT_Initialize 0070  
          ??_I2C_MasterEnableRestart 0070                    _SYSTEM_Initialize 0481  
            __end_of__initialization 07FD                  _I2C_MasterOperation 0557  
                 ?_SYSTEM_Initialize 0070                 ?_I2C_DO_ADDRESS_NACK 0070  
            _rdBlkRegCompleteHandler 0523                       __pcstackCOMMON 0070  
                     ?_I2C_MasterFsm 0070                      ??_I2C_DO_RX_ACK 0070  
                       __pidataBANK0 03FE               _I2C_CallbackReturnStop 03D3  
                ??_SYSTEM_Initialize 0070                 __end_of_i2c_lcd_init 0790  
                     ?_I2C_SetBuffer 0070              ?_I2C_MasterWaitForEvent 0070  
      __end_of_I2C_DO_SEND_ADR_WRITE 045A           ?_I2C_DO_SEND_RESTART_WRITE 0070  
               ?_I2C_MasterOperation 0070                ??_I2C_MasterGetRxData 0070  
            ?_I2C_Write1ByteRegister 007A                       _OPTION_REGbits 0095  
                         ??_I2C_Open 0070           __end_of_I2C_MasterClearIrq 03DA  
          __end_of_SYSTEM_Initialize 048E                    _I2C_MasterSendAck 03FA  
                         __pbssBANK0 0020                        ??_I2C_DO_IDLE 0070  
                            ?_PCF_Wr 0070                        ??_I2C_DO_RCEN 0070  
      __end_of_rd2RegCompleteHandler 0512         __end_of_I2C_MasterSendTxData 0407  
                 ?_I2C_MasterSendAck 0070                    _I2C_MasterStartRx 03E9  
              ??_I2C_DO_ADDRESS_NACK 0070        __end_of_wr2RegCompleteHandler 04F0  
                _I2C_DO_RX_NACK_STOP 0425                _rd1RegCompleteHandler 04F0  
                 ?_I2C_MasterStartRx 0070           __end_of_I2C_MasterSendNack 03FA  
              _wr1RegCompleteHandler 0512                           __pmaintext 046C  
                ??_I2C_MasterSendAck 0070             rd1RegCompleteHandler@ptr 0079  
        __end_of_I2C_DO_SEND_RESTART 041B                      _I2C_DO_TX_EMPTY 0633  
                I2C_SetBuffer@buffer 0073       __end_of_I2C_MasterWaitForEvent 0445  
                ??_I2C_MasterStartRx 0070                ??_I2C_MasterOperation 0077  
     I2C_SetDataCompleteCallback@ptr 0077       __end_of_I2C_Write1ByteRegister 0692  
           ??_I2C_DO_RX_NACK_RESTART 0070    __end_of_I2C_DO_SEND_RESTART_WRITE 0416  
               ?_I2C_DO_RX_NACK_STOP 0070            __end_of_I2C_MasterSendAck 03FE  
                            _OSCTUNE 0098                              _SSPCON1 0215  
                            _SSPCON2 0216                              _SSPSTAT 0214  
          __end_of_I2C_MasterStartRx 03EC                 I2C_Close@returnValue 0071  
       ?_I2C_SetDataCompleteCallback 0075                            _I2C_DO_RX 06FD  
                          _I2C_DO_TX 0790     __end_of_I2C_DO_SEND_RESTART_READ 0411  
                          _I2C_Close 053B            ??_rdBlkRegCompleteHandler 007A  
               _I2C_MasterDisableIrq 03DD                      ??_I2C_MasterFsm 0074  
                __end_of_I2C_DO_IDLE 040C                  __end_of_I2C_DO_RCEN 0452  
                    ??_I2C_SetBuffer 0072              I2C_SetBuffer@bufferSize 0070  
                     _I2C_MasterOpen 04A8                       _I2C_MasterStop 03E6  
                     _I2C_Initialize 045A                              __ptext1 0743  
                            __ptext2 0575                              __ptext3 0692  
                            __ptext4 04C2                              __ptext5 0662  
                            __ptext6 04B5                              __ptext7 06C3  
                            __ptext8 04A8                              __ptext9 0434  
              ??_I2C_DO_RX_NACK_STOP 0070                              _loadPCF 0692  
              _OSCILLATOR_Initialize 0475                              _sendCMD 0575  
                 I2C_SetCallback@idx 0074             ??_PIN_MANAGER_Initialize 0070  
      I2C_CallbackReturnReset@funPtr 0079                   I2C_SetCallback@ptr 0072  
           wr1RegCompleteHandler@ptr 0079            I2C_Write1ByteRegister@reg 007A  
                            clrloop0 0446                 end_of_initialization 07FD  
                         ?_I2C_DO_RX 0070                           ?_I2C_DO_TX 0070  
                         ?_I2C_Close 0070               ?_rd1RegCompleteHandler 0079  
            __end_of_I2C_DO_TX_EMPTY 0662                ?_I2C_MasterDisableIrq 0070  
             ?_wr1RegCompleteHandler 0079               __end_of_I2C_MasterOpen 04B5  
             __end_of_I2C_MasterStop 03E9               __end_of_I2C_Initialize 0463  
                   ??_WDT_Initialize 0070      __end_of_rdBlkRegCompleteHandler 053B  
               _I2C_MasterSendTxData 0402          ?_I2C_SetAddressNackCallback 0075  
                       _i2c_lcd_init 0743                          _I2C_DO_IDLE 0407  
                        _I2C_DO_RCEN 044B           rdBlkRegCompleteHandler@ptr 0079  
      I2C_Write1ByteRegister@address 007D                       __end_of_PCF_Wr 04CF  
        i2c_lcd_set_cursor@local_mem 004B              ?_I2C_CallbackReturnStop 0079  
           _I2C_DO_SEND_RESTART_READ 040C         I2C_CallbackReturnStop@funPtr 0079  
                    ?_I2C_MasterOpen 0070                      ?_I2C_MasterStop 0070  
                    ?_I2C_Initialize 0070              _I2C_CallbackReturnReset 03D5  
              ?_I2C_MasterSendTxData 0070               ?_OSCILLATOR_Initialize 0070  
        ??_I2C_DO_SEND_RESTART_WRITE 0070                  start_initialization 07E5  
                      ?_I2C_DO_RESET 0070                          ??_I2C_DO_RX 0070  
                        ??_I2C_DO_TX 0071                    ??_I2C_MasterClose 0070  
                           ??_PCF_Wr 003F               ??_I2C_MasterDisableIrq 0070  
                        ??_I2C_Close 0070                    ??_I2C_MasterStart 0070  
                  ??_I2C_MasterWrite 007A       __end_of_I2C_CallbackReturnStop 03D5  
             _I2C_DO_RX_NACK_RESTART 042A                     ?_I2C_DO_TX_EMPTY 0070  
                 _I2C_MasterClearIrq 03D7                  ?_I2C_MasterClearIrq 0070  
        __end_of_I2C_MasterGetRxData 03EF                          __pdataBANK0 004B  
              __end_of_I2C_DO_RX_ACK 0425                           PCF_Wr@dato 0040  
                   _I2C_DO_SEND_STOP 041B                    ??_I2C_SetCallback 0073  
                I2C_Open@returnValue 0072                   _I2C_MasterSendNack 03F6  
           ?_I2C_MasterEnableRestart 0070                    _i2c_fsmStateTable 0800  
              _I2C_DO_SEND_ADR_WRITE 0452                           sendCMD@cmd 0049  
                          ___latbits 0003                        __pcstackBANK0 003F  
                     ??_I2C_DO_RESET 0070                  ?_I2C_MasterSendNack 0070  
       __end_of_I2C_DO_SEND_ADR_READ 046C                 ??_I2C_MasterClearIrq 0070  
        __end_of_I2C_DO_ADDRESS_NACK 0633                     _I2C_MasterIsNack 0439  
          _I2C_DO_SEND_RESTART_WRITE 0411                     _I2C_MasterSetIrq 03EF  
              _rd2RegCompleteHandler 0501               _PIN_MANAGER_Initialize 0594  
              _wr2RegCompleteHandler 04DF            ??_I2C_CallbackReturnReset 007A  
        __end_of_I2C_MasterOperation 0575                 ??_I2C_MasterSendNack 0070  
           rd2RegCompleteHandler@ptr 0079               ??_I2C_MasterSendTxData 0070  
          __end_of_i2c_fsmStateTable 0820                             ?_loadPCF 0041  
            I2C_MasterOperation@read 0078                             _I2C_Open 06C3  
                           ?_sendCMD 0070              ??_rd1RegCompleteHandler 007A  
                          _paramsLCD 003D              ??_wr1RegCompleteHandler 007A  
                          clear_ram0 0445                             _PIE1bits 0091  
                           _PIR1bits 0011                             _PIR2bits 0012  
              __end_of_I2C_MasterFsm 0607          __end_of_I2C_DO_RX_NACK_STOP 042A  
    __end_of_I2C_MasterEnableRestart 03E6                __end_of_I2C_SetBuffer 04DF  
             ?_I2C_DO_SEND_ADR_WRITE 0070                            _statusLED 003E  
           I2C_MasterSendTxData@data 0070             wr2RegCompleteHandler@ptr 0079  
         ??_I2C_DO_SEND_RESTART_READ 0070             ?_rdBlkRegCompleteHandler 0079  
                         _I2C_Poller 049B                           _I2C_Status 0020  
                       ?_I2C_DO_IDLE 0070                         ?_I2C_DO_RCEN 0070  
             ?_rd2RegCompleteHandler 0079                     ??_I2C_MasterOpen 0070  
             ?_wr2RegCompleteHandler 0079                     ??_I2C_MasterStop 0070  
           ??_I2C_MasterWaitForEvent 0070                     ??_I2C_Initialize 0070  
               __end_of_I2C_DO_RESET 0434             ??_I2C_Write1ByteRegister 007C  
            ??_OSCILLATOR_Initialize 0070                 _I2C_DO_SEND_ADR_READ 0463  
                    _I2C_MasterClose 03DA        I2C_SetAddressNackCallback@ptr 0077  
                    I2C_Open@address 0071                      _I2C_MasterStart 03E0  
                    _I2C_MasterWrite 0434                             __ptext10 0557  
                           __ptext11 049B                             __ptext20 0416  
                           __ptext12 043F                             __ptext21 0411  
                           __ptext13 05DC                             __ptext30 03EF  
                           __ptext22 040C                             __ptext14 0607  
                           __ptext31 0439                             __ptext23 044B  
                           __ptext15 042F                             __ptext40 04F0  
                           __ptext32 0402                             __ptext24 06FD  
                           __ptext16 042A                             __ptext41 03D5  
                           __ptext33 03FA                             __ptext25 0790  
                           __ptext17 0425                             __ptext50 053B  
                           __ptext42 03D3                             __ptext34 03EC  
                           __ptext26 0452                             __ptext18 0420  
                           __ptext51 03DD                             __ptext43 04DF  
                           __ptext35 03F6                             __ptext27 0463  
                           __ptext19 041B                             __ptext52 03DA  
                           __ptext44 048E                             __ptext36 03E9  
                           __ptext28 0407                             __ptext53 03D7  
                           __ptext45 05B6                             __ptext37 0523  
                           __ptext29 0633                             __ptext54 0481  
                           __ptext46 04CF                             __ptext38 0512  
                           __ptext55 03F2                             __ptext47 03E6  
                           __ptext39 0501                             __ptext56 0594  
                           __ptext48 03E3                             __ptext57 0475  
                           __ptext49 03E0                             __ptext58 045A  
__end_of_I2C_SetDataCompleteCallback 049B          _I2C_SetDataCompleteCallback 048E  
            ?_I2C_DO_RX_NACK_RESTART 0070             __end_of_I2C_DO_SEND_STOP 0420  
                    _I2C_SetCallback 05B6        ??_I2C_SetDataCompleteCallback 0078  
         I2C_Write1ByteRegister@data 007B                ?_I2C_DO_SEND_ADR_READ 0070  
           __end_of_I2C_MasterIsNack 043F             __end_of_I2C_MasterSetIrq 03F2  
     __end_of_I2C_DO_RX_NACK_RESTART 042F                          ?_I2C_Poller 0070  
            ?_PIN_MANAGER_Initialize 0070                  _I2C_DO_SEND_RESTART 0416  
            __end_of_I2C_MasterClose 03DD              __end_of_I2C_MasterStart 03E3  
            __end_of_I2C_MasterWrite 0439                        __pstringtext1 0800  
               ?_I2C_DO_SEND_RESTART 0070                          _SSPCON1bits 0215  
                        _SSPCON2bits 0216              __end_of_I2C_SetCallback 05DC  
     __end_of_PIN_MANAGER_Initialize 05B6        __end_of_rd1RegCompleteHandler 0501  
      __end_of_wr1RegCompleteHandler 0523  
