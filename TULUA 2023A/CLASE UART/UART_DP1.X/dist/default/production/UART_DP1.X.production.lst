

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Apr 01 21:52:21 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F1939 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0110                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0113                     	;# 
   129  0114                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0118                     	;# 
   134  0119                     	;# 
   135  011A                     	;# 
   136  011B                     	;# 
   137  011D                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  018F                     	;# 
   141  0190                     	;# 
   142  0191                     	;# 
   143  0191                     	;# 
   144  0192                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0194                     	;# 
   149  0195                     	;# 
   150  0196                     	;# 
   151  0199                     	;# 
   152  019A                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019C                     	;# 
   158  019C                     	;# 
   159  019D                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  020D                     	;# 
   163  0210                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0213                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0217                     	;# 
   172  0291                     	;# 
   173  0291                     	;# 
   174  0292                     	;# 
   175  0293                     	;# 
   176  0294                     	;# 
   177  0295                     	;# 
   178  0295                     	;# 
   179  0296                     	;# 
   180  0298                     	;# 
   181  0298                     	;# 
   182  0299                     	;# 
   183  029A                     	;# 
   184  029B                     	;# 
   185  029C                     	;# 
   186  029C                     	;# 
   187  029D                     	;# 
   188  029E                     	;# 
   189  029F                     	;# 
   190  0311                     	;# 
   191  0311                     	;# 
   192  0312                     	;# 
   193  0313                     	;# 
   194  0314                     	;# 
   195  0315                     	;# 
   196  0315                     	;# 
   197  0316                     	;# 
   198  0318                     	;# 
   199  0318                     	;# 
   200  0319                     	;# 
   201  031A                     	;# 
   202  031C                     	;# 
   203  031C                     	;# 
   204  031D                     	;# 
   205  031E                     	;# 
   206  0394                     	;# 
   207  0395                     	;# 
   208  0396                     	;# 
   209  0415                     	;# 
   210  0416                     	;# 
   211  0417                     	;# 
   212  041C                     	;# 
   213  041D                     	;# 
   214  041E                     	;# 
   215  0791                     	;# 
   216  0792                     	;# 
   217  0793                     	;# 
   218  0794                     	;# 
   219  0795                     	;# 
   220  0798                     	;# 
   221  0799                     	;# 
   222  079A                     	;# 
   223  07A0                     	;# 
   224  07A1                     	;# 
   225  07A2                     	;# 
   226  07A3                     	;# 
   227  07A4                     	;# 
   228  07A5                     	;# 
   229  07A6                     	;# 
   230  07A7                     	;# 
   231  07A8                     	;# 
   232  07A9                     	;# 
   233  07AA                     	;# 
   234  07AB                     	;# 
   235  0FE4                     	;# 
   236  0FE5                     	;# 
   237  0FE6                     	;# 
   238  0FE7                     	;# 
   239  0FE8                     	;# 
   240  0FE9                     	;# 
   241  0FEA                     	;# 
   242  0FEB                     	;# 
   243  0FED                     	;# 
   244  0FEE                     	;# 
   245  0FEF                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0110                     	;# 
   301  0111                     	;# 
   302  0112                     	;# 
   303  0113                     	;# 
   304  0114                     	;# 
   305  0115                     	;# 
   306  0116                     	;# 
   307  0117                     	;# 
   308  0118                     	;# 
   309  0119                     	;# 
   310  011A                     	;# 
   311  011B                     	;# 
   312  011D                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  018F                     	;# 
   316  0190                     	;# 
   317  0191                     	;# 
   318  0191                     	;# 
   319  0192                     	;# 
   320  0193                     	;# 
   321  0193                     	;# 
   322  0193                     	;# 
   323  0194                     	;# 
   324  0195                     	;# 
   325  0196                     	;# 
   326  0199                     	;# 
   327  019A                     	;# 
   328  019B                     	;# 
   329  019B                     	;# 
   330  019B                     	;# 
   331  019B                     	;# 
   332  019C                     	;# 
   333  019C                     	;# 
   334  019D                     	;# 
   335  019E                     	;# 
   336  019F                     	;# 
   337  020D                     	;# 
   338  0210                     	;# 
   339  0211                     	;# 
   340  0212                     	;# 
   341  0213                     	;# 
   342  0214                     	;# 
   343  0215                     	;# 
   344  0215                     	;# 
   345  0216                     	;# 
   346  0217                     	;# 
   347  0291                     	;# 
   348  0291                     	;# 
   349  0292                     	;# 
   350  0293                     	;# 
   351  0294                     	;# 
   352  0295                     	;# 
   353  0295                     	;# 
   354  0296                     	;# 
   355  0298                     	;# 
   356  0298                     	;# 
   357  0299                     	;# 
   358  029A                     	;# 
   359  029B                     	;# 
   360  029C                     	;# 
   361  029C                     	;# 
   362  029D                     	;# 
   363  029E                     	;# 
   364  029F                     	;# 
   365  0311                     	;# 
   366  0311                     	;# 
   367  0312                     	;# 
   368  0313                     	;# 
   369  0314                     	;# 
   370  0315                     	;# 
   371  0315                     	;# 
   372  0316                     	;# 
   373  0318                     	;# 
   374  0318                     	;# 
   375  0319                     	;# 
   376  031A                     	;# 
   377  031C                     	;# 
   378  031C                     	;# 
   379  031D                     	;# 
   380  031E                     	;# 
   381  0394                     	;# 
   382  0395                     	;# 
   383  0396                     	;# 
   384  0415                     	;# 
   385  0416                     	;# 
   386  0417                     	;# 
   387  041C                     	;# 
   388  041D                     	;# 
   389  041E                     	;# 
   390  0791                     	;# 
   391  0792                     	;# 
   392  0793                     	;# 
   393  0794                     	;# 
   394  0795                     	;# 
   395  0798                     	;# 
   396  0799                     	;# 
   397  079A                     	;# 
   398  07A0                     	;# 
   399  07A1                     	;# 
   400  07A2                     	;# 
   401  07A3                     	;# 
   402  07A4                     	;# 
   403  07A5                     	;# 
   404  07A6                     	;# 
   405  07A7                     	;# 
   406  07A8                     	;# 
   407  07A9                     	;# 
   408  07AA                     	;# 
   409  07AB                     	;# 
   410  0FE4                     	;# 
   411  0FE5                     	;# 
   412  0FE6                     	;# 
   413  0FE7                     	;# 
   414  0FE8                     	;# 
   415  0FE9                     	;# 
   416  0FEA                     	;# 
   417  0FEB                     	;# 
   418  0FED                     	;# 
   419  0FEE                     	;# 
   420  0FEF                     	;# 
   421  0000                     	;# 
   422  0001                     	;# 
   423  0002                     	;# 
   424  0003                     	;# 
   425  0004                     	;# 
   426  0005                     	;# 
   427  0006                     	;# 
   428  0007                     	;# 
   429  0008                     	;# 
   430  0009                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0015                     	;# 
   442  0016                     	;# 
   443  0016                     	;# 
   444  0017                     	;# 
   445  0018                     	;# 
   446  0019                     	;# 
   447  001A                     	;# 
   448  001B                     	;# 
   449  001C                     	;# 
   450  001E                     	;# 
   451  001F                     	;# 
   452  008C                     	;# 
   453  008D                     	;# 
   454  008E                     	;# 
   455  008F                     	;# 
   456  0090                     	;# 
   457  0091                     	;# 
   458  0092                     	;# 
   459  0093                     	;# 
   460  0095                     	;# 
   461  0096                     	;# 
   462  0097                     	;# 
   463  0098                     	;# 
   464  0099                     	;# 
   465  009A                     	;# 
   466  009B                     	;# 
   467  009B                     	;# 
   468  009C                     	;# 
   469  009D                     	;# 
   470  009E                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  010F                     	;# 
   475  0110                     	;# 
   476  0111                     	;# 
   477  0112                     	;# 
   478  0113                     	;# 
   479  0114                     	;# 
   480  0115                     	;# 
   481  0116                     	;# 
   482  0117                     	;# 
   483  0118                     	;# 
   484  0119                     	;# 
   485  011A                     	;# 
   486  011B                     	;# 
   487  011D                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  018F                     	;# 
   491  0190                     	;# 
   492  0191                     	;# 
   493  0191                     	;# 
   494  0192                     	;# 
   495  0193                     	;# 
   496  0193                     	;# 
   497  0193                     	;# 
   498  0194                     	;# 
   499  0195                     	;# 
   500  0196                     	;# 
   501  0199                     	;# 
   502  019A                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019B                     	;# 
   506  019B                     	;# 
   507  019C                     	;# 
   508  019C                     	;# 
   509  019D                     	;# 
   510  019E                     	;# 
   511  019F                     	;# 
   512  020D                     	;# 
   513  0210                     	;# 
   514  0211                     	;# 
   515  0212                     	;# 
   516  0213                     	;# 
   517  0214                     	;# 
   518  0215                     	;# 
   519  0215                     	;# 
   520  0216                     	;# 
   521  0217                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0294                     	;# 
   527  0295                     	;# 
   528  0295                     	;# 
   529  0296                     	;# 
   530  0298                     	;# 
   531  0298                     	;# 
   532  0299                     	;# 
   533  029A                     	;# 
   534  029B                     	;# 
   535  029C                     	;# 
   536  029C                     	;# 
   537  029D                     	;# 
   538  029E                     	;# 
   539  029F                     	;# 
   540  0311                     	;# 
   541  0311                     	;# 
   542  0312                     	;# 
   543  0313                     	;# 
   544  0314                     	;# 
   545  0315                     	;# 
   546  0315                     	;# 
   547  0316                     	;# 
   548  0318                     	;# 
   549  0318                     	;# 
   550  0319                     	;# 
   551  031A                     	;# 
   552  031C                     	;# 
   553  031C                     	;# 
   554  031D                     	;# 
   555  031E                     	;# 
   556  0394                     	;# 
   557  0395                     	;# 
   558  0396                     	;# 
   559  0415                     	;# 
   560  0416                     	;# 
   561  0417                     	;# 
   562  041C                     	;# 
   563  041D                     	;# 
   564  041E                     	;# 
   565  0791                     	;# 
   566  0792                     	;# 
   567  0793                     	;# 
   568  0794                     	;# 
   569  0795                     	;# 
   570  0798                     	;# 
   571  0799                     	;# 
   572  079A                     	;# 
   573  07A0                     	;# 
   574  07A1                     	;# 
   575  07A2                     	;# 
   576  07A3                     	;# 
   577  07A4                     	;# 
   578  07A5                     	;# 
   579  07A6                     	;# 
   580  07A7                     	;# 
   581  07A8                     	;# 
   582  07A9                     	;# 
   583  07AA                     	;# 
   584  07AB                     	;# 
   585  0FE4                     	;# 
   586  0FE5                     	;# 
   587  0FE6                     	;# 
   588  0FE7                     	;# 
   589  0FE8                     	;# 
   590  0FE9                     	;# 
   591  0FEA                     	;# 
   592  0FEB                     	;# 
   593  0FED                     	;# 
   594  0FEE                     	;# 
   595  0FEF                     	;# 
   596  0000                     	;# 
   597  0001                     	;# 
   598  0002                     	;# 
   599  0003                     	;# 
   600  0004                     	;# 
   601  0005                     	;# 
   602  0006                     	;# 
   603  0007                     	;# 
   604  0008                     	;# 
   605  0009                     	;# 
   606  000A                     	;# 
   607  000B                     	;# 
   608  000C                     	;# 
   609  000D                     	;# 
   610  000E                     	;# 
   611  000F                     	;# 
   612  0010                     	;# 
   613  0011                     	;# 
   614  0012                     	;# 
   615  0013                     	;# 
   616  0015                     	;# 
   617  0016                     	;# 
   618  0016                     	;# 
   619  0017                     	;# 
   620  0018                     	;# 
   621  0019                     	;# 
   622  001A                     	;# 
   623  001B                     	;# 
   624  001C                     	;# 
   625  001E                     	;# 
   626  001F                     	;# 
   627  008C                     	;# 
   628  008D                     	;# 
   629  008E                     	;# 
   630  008F                     	;# 
   631  0090                     	;# 
   632  0091                     	;# 
   633  0092                     	;# 
   634  0093                     	;# 
   635  0095                     	;# 
   636  0096                     	;# 
   637  0097                     	;# 
   638  0098                     	;# 
   639  0099                     	;# 
   640  009A                     	;# 
   641  009B                     	;# 
   642  009B                     	;# 
   643  009C                     	;# 
   644  009D                     	;# 
   645  009E                     	;# 
   646  010C                     	;# 
   647  010D                     	;# 
   648  010E                     	;# 
   649  010F                     	;# 
   650  0110                     	;# 
   651  0111                     	;# 
   652  0112                     	;# 
   653  0113                     	;# 
   654  0114                     	;# 
   655  0115                     	;# 
   656  0116                     	;# 
   657  0117                     	;# 
   658  0118                     	;# 
   659  0119                     	;# 
   660  011A                     	;# 
   661  011B                     	;# 
   662  011D                     	;# 
   663  018C                     	;# 
   664  018D                     	;# 
   665  018F                     	;# 
   666  0190                     	;# 
   667  0191                     	;# 
   668  0191                     	;# 
   669  0192                     	;# 
   670  0193                     	;# 
   671  0193                     	;# 
   672  0193                     	;# 
   673  0194                     	;# 
   674  0195                     	;# 
   675  0196                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019B                     	;# 
   679  019B                     	;# 
   680  019B                     	;# 
   681  019B                     	;# 
   682  019C                     	;# 
   683  019C                     	;# 
   684  019D                     	;# 
   685  019E                     	;# 
   686  019F                     	;# 
   687  020D                     	;# 
   688  0210                     	;# 
   689  0211                     	;# 
   690  0212                     	;# 
   691  0213                     	;# 
   692  0214                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0216                     	;# 
   696  0217                     	;# 
   697  0291                     	;# 
   698  0291                     	;# 
   699  0292                     	;# 
   700  0293                     	;# 
   701  0294                     	;# 
   702  0295                     	;# 
   703  0295                     	;# 
   704  0296                     	;# 
   705  0298                     	;# 
   706  0298                     	;# 
   707  0299                     	;# 
   708  029A                     	;# 
   709  029B                     	;# 
   710  029C                     	;# 
   711  029C                     	;# 
   712  029D                     	;# 
   713  029E                     	;# 
   714  029F                     	;# 
   715  0311                     	;# 
   716  0311                     	;# 
   717  0312                     	;# 
   718  0313                     	;# 
   719  0314                     	;# 
   720  0315                     	;# 
   721  0315                     	;# 
   722  0316                     	;# 
   723  0318                     	;# 
   724  0318                     	;# 
   725  0319                     	;# 
   726  031A                     	;# 
   727  031C                     	;# 
   728  031C                     	;# 
   729  031D                     	;# 
   730  031E                     	;# 
   731  0394                     	;# 
   732  0395                     	;# 
   733  0396                     	;# 
   734  0415                     	;# 
   735  0416                     	;# 
   736  0417                     	;# 
   737  041C                     	;# 
   738  041D                     	;# 
   739  041E                     	;# 
   740  0791                     	;# 
   741  0792                     	;# 
   742  0793                     	;# 
   743  0794                     	;# 
   744  0795                     	;# 
   745  0798                     	;# 
   746  0799                     	;# 
   747  079A                     	;# 
   748  07A0                     	;# 
   749  07A1                     	;# 
   750  07A2                     	;# 
   751  07A3                     	;# 
   752  07A4                     	;# 
   753  07A5                     	;# 
   754  07A6                     	;# 
   755  07A7                     	;# 
   756  07A8                     	;# 
   757  07A9                     	;# 
   758  07AA                     	;# 
   759  07AB                     	;# 
   760  0FE4                     	;# 
   761  0FE5                     	;# 
   762  0FE6                     	;# 
   763  0FE7                     	;# 
   764  0FE8                     	;# 
   765  0FE9                     	;# 
   766  0FEA                     	;# 
   767  0FEB                     	;# 
   768  0FED                     	;# 
   769  0FEE                     	;# 
   770  0FEF                     	;# 
   771  0000                     	;# 
   772  0001                     	;# 
   773  0002                     	;# 
   774  0003                     	;# 
   775  0004                     	;# 
   776  0005                     	;# 
   777  0006                     	;# 
   778  0007                     	;# 
   779  0008                     	;# 
   780  0009                     	;# 
   781  000A                     	;# 
   782  000B                     	;# 
   783  000C                     	;# 
   784  000D                     	;# 
   785  000E                     	;# 
   786  000F                     	;# 
   787  0010                     	;# 
   788  0011                     	;# 
   789  0012                     	;# 
   790  0013                     	;# 
   791  0015                     	;# 
   792  0016                     	;# 
   793  0016                     	;# 
   794  0017                     	;# 
   795  0018                     	;# 
   796  0019                     	;# 
   797  001A                     	;# 
   798  001B                     	;# 
   799  001C                     	;# 
   800  001E                     	;# 
   801  001F                     	;# 
   802  008C                     	;# 
   803  008D                     	;# 
   804  008E                     	;# 
   805  008F                     	;# 
   806  0090                     	;# 
   807  0091                     	;# 
   808  0092                     	;# 
   809  0093                     	;# 
   810  0095                     	;# 
   811  0096                     	;# 
   812  0097                     	;# 
   813  0098                     	;# 
   814  0099                     	;# 
   815  009A                     	;# 
   816  009B                     	;# 
   817  009B                     	;# 
   818  009C                     	;# 
   819  009D                     	;# 
   820  009E                     	;# 
   821  010C                     	;# 
   822  010D                     	;# 
   823  010E                     	;# 
   824  010F                     	;# 
   825  0110                     	;# 
   826  0111                     	;# 
   827  0112                     	;# 
   828  0113                     	;# 
   829  0114                     	;# 
   830  0115                     	;# 
   831  0116                     	;# 
   832  0117                     	;# 
   833  0118                     	;# 
   834  0119                     	;# 
   835  011A                     	;# 
   836  011B                     	;# 
   837  011D                     	;# 
   838  018C                     	;# 
   839  018D                     	;# 
   840  018F                     	;# 
   841  0190                     	;# 
   842  0191                     	;# 
   843  0191                     	;# 
   844  0192                     	;# 
   845  0193                     	;# 
   846  0193                     	;# 
   847  0193                     	;# 
   848  0194                     	;# 
   849  0195                     	;# 
   850  0196                     	;# 
   851  0199                     	;# 
   852  019A                     	;# 
   853  019B                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019B                     	;# 
   857  019C                     	;# 
   858  019C                     	;# 
   859  019D                     	;# 
   860  019E                     	;# 
   861  019F                     	;# 
   862  020D                     	;# 
   863  0210                     	;# 
   864  0211                     	;# 
   865  0212                     	;# 
   866  0213                     	;# 
   867  0214                     	;# 
   868  0215                     	;# 
   869  0215                     	;# 
   870  0216                     	;# 
   871  0217                     	;# 
   872  0291                     	;# 
   873  0291                     	;# 
   874  0292                     	;# 
   875  0293                     	;# 
   876  0294                     	;# 
   877  0295                     	;# 
   878  0295                     	;# 
   879  0296                     	;# 
   880  0298                     	;# 
   881  0298                     	;# 
   882  0299                     	;# 
   883  029A                     	;# 
   884  029B                     	;# 
   885  029C                     	;# 
   886  029C                     	;# 
   887  029D                     	;# 
   888  029E                     	;# 
   889  029F                     	;# 
   890  0311                     	;# 
   891  0311                     	;# 
   892  0312                     	;# 
   893  0313                     	;# 
   894  0314                     	;# 
   895  0315                     	;# 
   896  0315                     	;# 
   897  0316                     	;# 
   898  0318                     	;# 
   899  0318                     	;# 
   900  0319                     	;# 
   901  031A                     	;# 
   902  031C                     	;# 
   903  031C                     	;# 
   904  031D                     	;# 
   905  031E                     	;# 
   906  0394                     	;# 
   907  0395                     	;# 
   908  0396                     	;# 
   909  0415                     	;# 
   910  0416                     	;# 
   911  0417                     	;# 
   912  041C                     	;# 
   913  041D                     	;# 
   914  041E                     	;# 
   915  0791                     	;# 
   916  0792                     	;# 
   917  0793                     	;# 
   918  0794                     	;# 
   919  0795                     	;# 
   920  0798                     	;# 
   921  0799                     	;# 
   922  079A                     	;# 
   923  07A0                     	;# 
   924  07A1                     	;# 
   925  07A2                     	;# 
   926  07A3                     	;# 
   927  07A4                     	;# 
   928  07A5                     	;# 
   929  07A6                     	;# 
   930  07A7                     	;# 
   931  07A8                     	;# 
   932  07A9                     	;# 
   933  07AA                     	;# 
   934  07AB                     	;# 
   935  0FE4                     	;# 
   936  0FE5                     	;# 
   937  0FE6                     	;# 
   938  0FE7                     	;# 
   939  0FE8                     	;# 
   940  0FE9                     	;# 
   941  0FEA                     	;# 
   942  0FEB                     	;# 
   943  0FED                     	;# 
   944  0FEE                     	;# 
   945  0FEF                     	;# 
   946                           
   947 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
   948  0000                     
   949 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
   950  0000                     
   951 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
   952  000D                     _PORTBbits	set	13
   953  0011                     _PIR1bits	set	17
   954  0095                     _OPTION_REGbits	set	149
   955  008F                     _TRISD	set	143
   956  008E                     _TRISC	set	142
   957  008D                     _TRISB	set	141
   958  008C                     _TRISA	set	140
   959  0090                     _TRISE	set	144
   960  0097                     _WDTCON	set	151
   961  0098                     _OSCTUNE	set	152
   962  0099                     _OSCCON	set	153
   963  04D6                     _PLLR	set	1238
   964  011D                     _APFCON	set	285
   965  010E                     _LATC	set	270
   966  010D                     _LATB	set	269
   967  010C                     _LATA	set	268
   968  010F                     _LATD	set	271
   969  0110                     _LATE	set	272
   970  0116                     _BORCON	set	278
   971  019A                     _TXREG	set	410
   972  0199                     _RCREG	set	409
   973  019D                     _RCSTAbits	set	413
   974  019E                     _TXSTAbits	set	414
   975  019C                     _SPBRGH	set	412
   976  019B                     _SPBRGL	set	411
   977  019E                     _TXSTA	set	414
   978  019D                     _RCSTA	set	413
   979  019F                     _BAUDCON	set	415
   980  018C                     _ANSELA	set	396
   981  0190                     _ANSELE	set	400
   982  018D                     _ANSELB	set	397
   983  018F                     _ANSELD	set	399
   984  020D                     _WPUB	set	525
   985  0210                     _WPUE	set	528
   986                           
   987                           	psect	stringtext1
   988  0800                     __pstringtext1:
   989  0800                     STR_2:
   990  0800  342A               	retlw	42	;'*'
   991  0801  3462               	retlw	98	;'b'
   992  0802  3474               	retlw	116	;'t'
   993  0803  346E               	retlw	110	;'n'
   994  0804  3441               	retlw	65	;'A'
   995  0805  343D               	retlw	61	;'='
   996  0806  346F               	retlw	111	;'o'
   997  0807  3466               	retlw	102	;'f'
   998  0808  3466               	retlw	102	;'f'
   999  0809  3423               	retlw	35	;'#'
  1000  080A  3400               	retlw	0
  1001                           
  1002                           	psect	stringtext2
  1003  080B                     __pstringtext2:
  1004  080B                     STR_4:
  1005  080B  342A               	retlw	42	;'*'
  1006  080C  3462               	retlw	98	;'b'
  1007  080D  3474               	retlw	116	;'t'
  1008  080E  346E               	retlw	110	;'n'
  1009  080F  3442               	retlw	66	;'B'
  1010  0810  343D               	retlw	61	;'='
  1011  0811  346F               	retlw	111	;'o'
  1012  0812  3466               	retlw	102	;'f'
  1013  0813  3466               	retlw	102	;'f'
  1014  0814  3423               	retlw	35	;'#'
  1015  0815  3400               	retlw	0
  1016                           
  1017                           	psect	stringtext3
  1018  0816                     __pstringtext3:
  1019  0816                     STR_6:
  1020  0816  342A               	retlw	42	;'*'
  1021  0817  3462               	retlw	98	;'b'
  1022  0818  3474               	retlw	116	;'t'
  1023  0819  346E               	retlw	110	;'n'
  1024  081A  3443               	retlw	67	;'C'
  1025  081B  343D               	retlw	61	;'='
  1026  081C  346F               	retlw	111	;'o'
  1027  081D  3466               	retlw	102	;'f'
  1028  081E  3466               	retlw	102	;'f'
  1029  081F  3423               	retlw	35	;'#'
  1030  0820  3400               	retlw	0
  1031                           
  1032                           	psect	stringtext4
  1033  0821                     __pstringtext4:
  1034  0821                     STR_1:
  1035  0821  342A               	retlw	42	;'*'
  1036  0822  3462               	retlw	98	;'b'
  1037  0823  3474               	retlw	116	;'t'
  1038  0824  346E               	retlw	110	;'n'
  1039  0825  3441               	retlw	65	;'A'
  1040  0826  343D               	retlw	61	;'='
  1041  0827  346F               	retlw	111	;'o'
  1042  0828  346E               	retlw	110	;'n'
  1043  0829  3423               	retlw	35	;'#'
  1044  082A  3400               	retlw	0
  1045                           
  1046                           	psect	stringtext5
  1047  082B                     __pstringtext5:
  1048  082B                     STR_3:
  1049  082B  342A               	retlw	42	;'*'
  1050  082C  3462               	retlw	98	;'b'
  1051  082D  3474               	retlw	116	;'t'
  1052  082E  346E               	retlw	110	;'n'
  1053  082F  3442               	retlw	66	;'B'
  1054  0830  343D               	retlw	61	;'='
  1055  0831  346F               	retlw	111	;'o'
  1056  0832  346E               	retlw	110	;'n'
  1057  0833  3423               	retlw	35	;'#'
  1058  0834  3400               	retlw	0
  1059                           
  1060                           	psect	stringtext6
  1061  0835                     __pstringtext6:
  1062  0835                     STR_5:
  1063  0835  342A               	retlw	42	;'*'
  1064  0836  3462               	retlw	98	;'b'
  1065  0837  3474               	retlw	116	;'t'
  1066  0838  346E               	retlw	110	;'n'
  1067  0839  3443               	retlw	67	;'C'
  1068  083A  343D               	retlw	61	;'='
  1069  083B  346F               	retlw	111	;'o'
  1070  083C  346E               	retlw	110	;'n'
  1071  083D  3423               	retlw	35	;'#'
  1072  083E  3400               	retlw	0
  1073                           
  1074                           	psect	stringtext7
  1075  0000                     __pstringtext7:
  1076                           
  1077                           	psect	cinit
  1078  07F5                     start_initialization:	
  1079                           ; #config settings
  1080                           
  1081  07F5                     __initialization:
  1082                           
  1083                           ; Clear objects allocated to BANK0
  1084  07F5  3020               	movlw	low __pbssBANK0
  1085  07F6  0084               	movwf	4
  1086  07F7  3000               	movlw	high __pbssBANK0
  1087  07F8  0085               	movwf	5
  1088  07F9  303B               	movlw	59
  1089  07FA  3185  25BD  3187   	fcall	clear_ram0
  1090  07FD                     end_of_initialization:	
  1091                           ;End of C runtime variable initialization code
  1092                           
  1093  07FD                     __end_of__initialization:
  1094  07FD  0020               	movlb	0
  1095  07FE  3187  2F43         	ljmp	_main	;jump to C main() function
  1096                           
  1097                           	psect	bssBANK0
  1098  0020                     __pbssBANK0:
  1099  0020                     _dbuf:
  1100  0020                     	ds	32
  1101  0040                     _nout:
  1102  0040                     	ds	2
  1103  0042                     _width:
  1104  0042                     	ds	2
  1105  0044                     _prec:
  1106  0044                     	ds	2
  1107  0046                     _flags:
  1108  0046                     	ds	2
  1109  0048                     _oldValueC:
  1110  0048                     	ds	2
  1111  004A                     _oldValueB:
  1112  004A                     	ds	2
  1113  004C                     _oldValueA:
  1114  004C                     	ds	2
  1115  004E                     _statusBTNC:
  1116  004E                     	ds	2
  1117  0050                     _statusBTNB:
  1118  0050                     	ds	2
  1119  0052                     _statusBTNA:
  1120  0052                     	ds	2
  1121  0054                     _EUSART_ErrorHandler:
  1122  0054                     	ds	2
  1123  0056                     _EUSART_OverrunErrorHandler:
  1124  0056                     	ds	2
  1125  0058                     _EUSART_FramingErrorHandler:
  1126  0058                     	ds	2
  1127  005A                     _eusartRxLastError:
  1128  005A                     	ds	1
  1129                           
  1130                           	psect	clrtext
  1131  05BD                     clear_ram0:	
  1132                           ;	Called with FSR0 containing the base address, and
  1133                           ;	WREG with the size to clear
  1134                           
  1135  05BD  0064               	clrwdt	;clear the watchdog before getting into this loop
  1136  05BE                     clrloop0:
  1137  05BE  0180               	clrf	0	;clear RAM location pointed to by FSR
  1138  05BF  3101               	addfsr 0,1
  1139  05C0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1140  05C1  2DBE               	goto	clrloop0	;have we reached the end yet?
  1141  05C2  3400               	retlw	0	;all done for this memory range, return
  1142                           
  1143                           	psect	cstackCOMMON
  1144  0070                     __pcstackCOMMON:
  1145  0070                     ?_PIN_MANAGER_Initialize:
  1146  0070                     ??_PIN_MANAGER_Initialize:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?_OSCILLATOR_Initialize:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ??_OSCILLATOR_Initialize:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_WDT_Initialize:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ??_WDT_Initialize:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_EUSART_Initialize:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_EUSART_SetFramingErrorHandler:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_EUSART_SetErrorHandler:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_SYSTEM_Initialize:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_EUSART_Write:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ??_EUSART_Write:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_putch:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ?_main:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     EUSART_Write@txData:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1195                           ; 2 bytes @ 0x0
  1196                           
  1197  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1198                           ; 2 bytes @ 0x0
  1199                           
  1200                           
  1201                           ; 2 bytes @ 0x0
  1202  0070                     	ds	1
  1203  0071                     ??_putch:
  1204  0071                     ?_EUSART_Text:	
  1205                           ; 1 bytes @ 0x1
  1206                           
  1207  0071                     putch@txData:	
  1208                           ; 1 bytes @ 0x1
  1209                           
  1210  0071                     EUSART_Text@texto:	
  1211                           ; 1 bytes @ 0x1
  1212                           
  1213                           
  1214                           ; 2 bytes @ 0x1
  1215  0071                     	ds	1
  1216  0072                     ??_EUSART_Initialize:
  1217  0072                     ??_EUSART_SetFramingErrorHandler:	
  1218                           ; 1 bytes @ 0x2
  1219                           
  1220  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1221                           ; 1 bytes @ 0x2
  1222                           
  1223  0072                     ??_EUSART_SetErrorHandler:	
  1224                           ; 1 bytes @ 0x2
  1225                           
  1226  0072                     ??_SYSTEM_Initialize:	
  1227                           ; 1 bytes @ 0x2
  1228                           
  1229  0072                     ?_fputc:	
  1230                           ; 1 bytes @ 0x2
  1231                           
  1232  0072                     fputc@c:	
  1233                           ; 2 bytes @ 0x2
  1234                           
  1235                           
  1236                           ; 2 bytes @ 0x2
  1237  0072                     	ds	1
  1238  0073                     ??_EUSART_Text:
  1239                           
  1240                           ; 1 bytes @ 0x3
  1241  0073                     	ds	1
  1242  0074                     fputc@fp:
  1243                           
  1244                           ; 1 bytes @ 0x4
  1245  0074                     	ds	1
  1246  0075                     ??_fputc:
  1247                           
  1248                           ; 1 bytes @ 0x5
  1249  0075                     	ds	5
  1250  007A                     ?_vfpfcnvrt:
  1251  007A                     vfpfcnvrt@fmt:	
  1252                           ; 2 bytes @ 0xA
  1253                           
  1254                           
  1255                           ; 1 bytes @ 0xA
  1256  007A                     	ds	1
  1257  007B                     vfpfcnvrt@ap:
  1258                           
  1259                           ; 1 bytes @ 0xB
  1260  007B                     	ds	1
  1261  007C                     vfpfcnvrt@fp:
  1262                           
  1263                           ; 1 bytes @ 0xC
  1264  007C                     	ds	1
  1265  007D                     ??_printf:
  1266                           
  1267                           ; 1 bytes @ 0xD
  1268  007D                     	ds	1
  1269                           
  1270                           	psect	cstackBANK0
  1271  005B                     __pcstackBANK0:
  1272  005B                     ??_vfpfcnvrt:
  1273                           
  1274                           ; 1 bytes @ 0x0
  1275  005B                     	ds	5
  1276  0060                     ?_vfprintf:
  1277  0060                     vfprintf@fmt:	
  1278                           ; 2 bytes @ 0x5
  1279                           
  1280                           
  1281                           ; 2 bytes @ 0x5
  1282  0060                     	ds	2
  1283  0062                     vfprintf@ap:
  1284                           
  1285                           ; 1 bytes @ 0x7
  1286  0062                     	ds	1
  1287  0063                     ??_vfprintf:
  1288                           
  1289                           ; 1 bytes @ 0x8
  1290  0063                     	ds	2
  1291  0065                     vfprintf@fp:
  1292                           
  1293                           ; 1 bytes @ 0xA
  1294  0065                     	ds	1
  1295  0066                     vfprintf@cfmt:
  1296                           
  1297                           ; 2 bytes @ 0xB
  1298  0066                     	ds	2
  1299  0068                     ?_printf:
  1300  0068                     printf@fmt:	
  1301                           ; 2 bytes @ 0xD
  1302                           
  1303                           
  1304                           ; 2 bytes @ 0xD
  1305  0068                     	ds	2
  1306  006A                     printf@ap:
  1307                           
  1308                           ; 1 bytes @ 0xF
  1309  006A                     	ds	1
  1310  006B                     ??_main:
  1311                           
  1312                           ; 1 bytes @ 0x10
  1313  006B                     	ds	2
  1314                           
  1315                           	psect	maintext
  1316  0743                     __pmaintext:	
  1317 ;;
  1318 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1319 ;;
  1320 ;; *************** function _main *****************
  1321 ;; Defined at:
  1322 ;;		line 6 in file "main.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : B1F/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1339 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1340 ;;Total ram usage:        2 bytes
  1341 ;; Hardware stack levels required when called: 6
  1342 ;; This function calls:
  1343 ;;		_EUSART_Text
  1344 ;;		_SYSTEM_Initialize
  1345 ;;		_printf
  1346 ;; This function is called by:
  1347 ;;		Startup code after reset
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351  0743                     _main:	
  1352                           ;psect for function _main
  1353                           
  1354  0743                     l1259:	
  1355                           ;incstack = 0
  1356                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1357                           
  1358                           
  1359                           ;main.c: 9:     SYSTEM_Initialize();
  1360  0743  3185  25D9  3187   	fcall	_SYSTEM_Initialize
  1361  0746                     l1261:
  1362                           
  1363                           ;main.c: 11:     oldValueA = PORTBbits.RB0;
  1364  0746  0020               	movlb	0	; select bank0
  1365  0747  080D               	movf	13,w	;volatile
  1366  0748  3901               	andlw	1
  1367  0749  00EB               	movwf	??_main
  1368  074A  01EC               	clrf	??_main+1
  1369  074B  086B               	movf	??_main,w
  1370  074C  00CC               	movwf	_oldValueA
  1371  074D  086C               	movf	??_main+1,w
  1372  074E  00CD               	movwf	_oldValueA+1
  1373  074F                     l1263:
  1374                           
  1375                           ;main.c: 12:     oldValueB = PORTBbits.RB1;
  1376  074F  0C0D               	rrf	13,w	;volatile
  1377  0750  3901               	andlw	1
  1378  0751  00EB               	movwf	??_main
  1379  0752  01EC               	clrf	??_main+1
  1380  0753  086B               	movf	??_main,w
  1381  0754  00CA               	movwf	_oldValueB
  1382  0755  086C               	movf	??_main+1,w
  1383  0756  00CB               	movwf	_oldValueB+1
  1384  0757                     l1265:
  1385                           
  1386                           ;main.c: 13:     oldValueC = PORTBbits.RB2;
  1387  0757  0C0D               	rrf	13,w	;volatile
  1388  0758  0C89               	rrf	9,f
  1389  0759  3901               	andlw	1
  1390  075A  00EB               	movwf	??_main
  1391  075B  01EC               	clrf	??_main+1
  1392  075C  086B               	movf	??_main,w
  1393  075D  00C8               	movwf	_oldValueC
  1394  075E  086C               	movf	??_main+1,w
  1395  075F  00C9               	movwf	_oldValueC+1
  1396  0760                     l1267:
  1397                           
  1398                           ;main.c: 17:     {;main.c: 18:         statusBTNA = PORTBbits.RB0;
  1399  0760  0020               	movlb	0	; select bank0
  1400  0761  080D               	movf	13,w	;volatile
  1401  0762  3901               	andlw	1
  1402  0763  00EB               	movwf	??_main
  1403  0764  01EC               	clrf	??_main+1
  1404  0765  086B               	movf	??_main,w
  1405  0766  00D2               	movwf	_statusBTNA
  1406  0767  086C               	movf	??_main+1,w
  1407  0768  00D3               	movwf	_statusBTNA+1
  1408  0769                     l1269:
  1409                           
  1410                           ;main.c: 19:         statusBTNB = PORTBbits.RB1;
  1411  0769  0C0D               	rrf	13,w	;volatile
  1412  076A  3901               	andlw	1
  1413  076B  00EB               	movwf	??_main
  1414  076C  01EC               	clrf	??_main+1
  1415  076D  086B               	movf	??_main,w
  1416  076E  00D0               	movwf	_statusBTNB
  1417  076F  086C               	movf	??_main+1,w
  1418  0770  00D1               	movwf	_statusBTNB+1
  1419  0771                     l1271:
  1420                           
  1421                           ;main.c: 20:         statusBTNC = PORTBbits.RB2;
  1422  0771  0C0D               	rrf	13,w	;volatile
  1423  0772  0C89               	rrf	9,f
  1424  0773  3901               	andlw	1
  1425  0774  00EB               	movwf	??_main
  1426  0775  01EC               	clrf	??_main+1
  1427  0776  086B               	movf	??_main,w
  1428  0777  00CE               	movwf	_statusBTNC
  1429  0778  086C               	movf	??_main+1,w
  1430  0779  00CF               	movwf	_statusBTNC+1
  1431  077A                     l1273:
  1432                           
  1433                           ;main.c: 22:         if( statusBTNA != oldValueA ){
  1434  077A  084D               	movf	_oldValueA+1,w
  1435  077B  0653               	xorwf	_statusBTNA+1,w
  1436  077C  1D03               	skipz
  1437  077D  2F80               	goto	u335
  1438  077E  084C               	movf	_oldValueA,w
  1439  077F  0652               	xorwf	_statusBTNA,w
  1440  0780                     u335:
  1441  0780  1903               	skipnz
  1442  0781  2F83               	goto	u331
  1443  0782  2F84               	goto	u330
  1444  0783                     u331:
  1445  0783  2F9D               	goto	l1283
  1446  0784                     u330:
  1447  0784                     l1275:
  1448                           
  1449                           ;main.c: 23:             oldValueA = statusBTNA;
  1450  0784  0853               	movf	_statusBTNA+1,w
  1451  0785  00CD               	movwf	_oldValueA+1
  1452  0786  0852               	movf	_statusBTNA,w
  1453  0787  00CC               	movwf	_oldValueA
  1454  0788                     l1277:
  1455                           
  1456                           ;main.c: 24:             if(statusBTNA == 0){
  1457  0788  0852               	movf	_statusBTNA,w
  1458  0789  0453               	iorwf	_statusBTNA+1,w
  1459  078A  1D03               	btfss	3,2
  1460  078B  2F8D               	goto	u341
  1461  078C  2F8E               	goto	u340
  1462  078D                     u341:
  1463  078D  2F96               	goto	l1281
  1464  078E                     u340:
  1465  078E                     l1279:
  1466                           
  1467                           ;main.c: 25:                 EUSART_Text("*btnA=on#");
  1468  078E  3021               	movlw	low (STR_1| (0+32768))
  1469  078F  00F1               	movwf	EUSART_Text@texto
  1470  0790  3088               	movlw	high (STR_1| (0+32768))
  1471  0791  00F2               	movwf	EUSART_Text@texto+1
  1472  0792  3186  261A  3187   	fcall	_EUSART_Text
  1473                           
  1474                           ;main.c: 26:             }
  1475  0795  2F9D               	goto	l1283
  1476  0796                     l1281:
  1477                           
  1478                           ;main.c: 28:                  EUSART_Text("*btnA=off#");
  1479  0796  3000               	movlw	low (STR_2| (0+32768))
  1480  0797  00F1               	movwf	EUSART_Text@texto
  1481  0798  3088               	movlw	high (STR_2| (0+32768))
  1482  0799  00F2               	movwf	EUSART_Text@texto+1
  1483  079A  3186  261A  3187   	fcall	_EUSART_Text
  1484  079D                     l1283:
  1485                           
  1486                           ;main.c: 31:         if( statusBTNB != oldValueB ){
  1487  079D  0020               	movlb	0	; select bank0
  1488  079E  084B               	movf	_oldValueB+1,w
  1489  079F  0651               	xorwf	_statusBTNB+1,w
  1490  07A0  1D03               	skipz
  1491  07A1  2FA4               	goto	u355
  1492  07A2  084A               	movf	_oldValueB,w
  1493  07A3  0650               	xorwf	_statusBTNB,w
  1494  07A4                     u355:
  1495  07A4  1903               	skipnz
  1496  07A5  2FA7               	goto	u351
  1497  07A6  2FA8               	goto	u350
  1498  07A7                     u351:
  1499  07A7  2FC1               	goto	l1293
  1500  07A8                     u350:
  1501  07A8                     l1285:
  1502                           
  1503                           ;main.c: 32:             oldValueB = statusBTNB;
  1504  07A8  0851               	movf	_statusBTNB+1,w
  1505  07A9  00CB               	movwf	_oldValueB+1
  1506  07AA  0850               	movf	_statusBTNB,w
  1507  07AB  00CA               	movwf	_oldValueB
  1508  07AC                     l1287:
  1509                           
  1510                           ;main.c: 33:             if(statusBTNB == 0){
  1511  07AC  0850               	movf	_statusBTNB,w
  1512  07AD  0451               	iorwf	_statusBTNB+1,w
  1513  07AE  1D03               	btfss	3,2
  1514  07AF  2FB1               	goto	u361
  1515  07B0  2FB2               	goto	u360
  1516  07B1                     u361:
  1517  07B1  2FBA               	goto	l1291
  1518  07B2                     u360:
  1519  07B2                     l1289:
  1520                           
  1521                           ;main.c: 34:                 printf("*btnB=on#");
  1522  07B2  302B               	movlw	low (STR_3| (0+32768))
  1523  07B3  00E8               	movwf	printf@fmt
  1524  07B4  3088               	movlw	high (STR_3| (0+32768))
  1525  07B5  00E9               	movwf	printf@fmt+1
  1526  07B6  3185  25E6  3187   	fcall	_printf
  1527                           
  1528                           ;main.c: 35:             }
  1529  07B9  2FC1               	goto	l1293
  1530  07BA                     l1291:
  1531                           
  1532                           ;main.c: 37:                  printf("*btnB=off#");
  1533  07BA  300B               	movlw	low (STR_4| (0+32768))
  1534  07BB  00E8               	movwf	printf@fmt
  1535  07BC  3088               	movlw	high (STR_4| (0+32768))
  1536  07BD  00E9               	movwf	printf@fmt+1
  1537  07BE  3185  25E6  3187   	fcall	_printf
  1538  07C1                     l1293:
  1539                           
  1540                           ;main.c: 40:         if( statusBTNC != oldValueC ){
  1541  07C1  0020               	movlb	0	; select bank0
  1542  07C2  0849               	movf	_oldValueC+1,w
  1543  07C3  064F               	xorwf	_statusBTNC+1,w
  1544  07C4  1D03               	skipz
  1545  07C5  2FC8               	goto	u375
  1546  07C6  0848               	movf	_oldValueC,w
  1547  07C7  064E               	xorwf	_statusBTNC,w
  1548  07C8                     u375:
  1549  07C8  1903               	skipnz
  1550  07C9  2FCB               	goto	u371
  1551  07CA  2FCC               	goto	u370
  1552  07CB                     u371:
  1553  07CB  2FE5               	goto	l1303
  1554  07CC                     u370:
  1555  07CC                     l1295:
  1556                           
  1557                           ;main.c: 41:             oldValueC = statusBTNC;
  1558  07CC  084F               	movf	_statusBTNC+1,w
  1559  07CD  00C9               	movwf	_oldValueC+1
  1560  07CE  084E               	movf	_statusBTNC,w
  1561  07CF  00C8               	movwf	_oldValueC
  1562  07D0                     l1297:
  1563                           
  1564                           ;main.c: 42:             if(statusBTNC == 0){
  1565  07D0  084E               	movf	_statusBTNC,w
  1566  07D1  044F               	iorwf	_statusBTNC+1,w
  1567  07D2  1D03               	btfss	3,2
  1568  07D3  2FD5               	goto	u381
  1569  07D4  2FD6               	goto	u380
  1570  07D5                     u381:
  1571  07D5  2FDE               	goto	l1301
  1572  07D6                     u380:
  1573  07D6                     l1299:
  1574                           
  1575                           ;main.c: 43:                  printf("*btnC=on#");
  1576  07D6  3035               	movlw	low (STR_5| (0+32768))
  1577  07D7  00E8               	movwf	printf@fmt
  1578  07D8  3088               	movlw	high (STR_5| (0+32768))
  1579  07D9  00E9               	movwf	printf@fmt+1
  1580  07DA  3185  25E6  3187   	fcall	_printf
  1581                           
  1582                           ;main.c: 44:             }
  1583  07DD  2FE5               	goto	l1303
  1584  07DE                     l1301:
  1585                           
  1586                           ;main.c: 46:                  printf("*btnC=off#");
  1587  07DE  3016               	movlw	low (STR_6| (0+32768))
  1588  07DF  00E8               	movwf	printf@fmt
  1589  07E0  3088               	movlw	high (STR_6| (0+32768))
  1590  07E1  00E9               	movwf	printf@fmt+1
  1591  07E2  3185  25E6  3187   	fcall	_printf
  1592  07E5                     l1303:
  1593                           
  1594                           ;main.c: 49:         _delay((unsigned long)((300)*(32000000/4000.0)));
  1595  07E5  300D               	movlw	13
  1596  07E6  0020               	movlb	0	; select bank0
  1597  07E7  00EC               	movwf	??_main+1
  1598  07E8  302D               	movlw	45
  1599  07E9  00EB               	movwf	??_main
  1600  07EA  30D7               	movlw	215
  1601  07EB                     u397:
  1602  07EB  0B89               	decfsz	9,f
  1603  07EC  2FEB               	goto	u397
  1604  07ED  0BEB               	decfsz	??_main,f
  1605  07EE  2FEB               	goto	u397
  1606  07EF  0BEC               	decfsz	??_main+1,f
  1607  07F0  2FEB               	goto	u397
  1608  07F1  3200               	nop2
  1609  07F2  2F60               	goto	l1267
  1610  07F3  3180  2802         	ljmp	start
  1611  07F5                     __end_of_main:
  1612                           
  1613                           	psect	text1
  1614  05E6                     __ptext1:	
  1615 ;; *************** function _printf *****************
  1616 ;; Defined at:
  1617 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  fmt             2   13[BANK0 ] PTR const unsigned char 
  1620 ;;		 -> STR_6(11), STR_5(10), STR_4(11), STR_3(10), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  ret             2    0        int 
  1623 ;;  ap              1   15[BANK0 ] PTR void [1]
  1624 ;;		 -> ?_printf(2), 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  2   13[BANK0 ] int 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1637 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1638 ;;Total ram usage:        4 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 5
  1641 ;; This function calls:
  1642 ;;		_vfprintf
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648  05E6                     _printf:	
  1649                           ;psect for function _printf
  1650                           
  1651  05E6                     l1249:	
  1652                           ;incstack = 0
  1653                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1654                           
  1655  05E6  306A               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1656  05E7  00FD               	movwf	??_printf
  1657  05E8  087D               	movf	??_printf,w
  1658  05E9  0020               	movlb	0	; select bank0
  1659  05EA  00EA               	movwf	printf@ap
  1660  05EB                     l1251:
  1661  05EB  0869               	movf	printf@fmt+1,w
  1662  05EC  00E1               	movwf	vfprintf@fmt+1
  1663  05ED  0868               	movf	printf@fmt,w
  1664  05EE  00E0               	movwf	vfprintf@fmt
  1665  05EF  306A               	movlw	(low (printf@ap| 0))& (0+255)
  1666  05F0  00FD               	movwf	??_printf
  1667  05F1  087D               	movf	??_printf,w
  1668  05F2  00E2               	movwf	vfprintf@ap
  1669  05F3  3000               	movlw	0
  1670  05F4  3186  2660  3185   	fcall	_vfprintf
  1671  05F7                     l826:
  1672  05F7  0008               	return
  1673  05F8                     __end_of_printf:
  1674                           
  1675                           	psect	text2
  1676  0660                     __ptext2:	
  1677 ;; *************** function _vfprintf *****************
  1678 ;; Defined at:
  1679 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  fp              1    wreg     PTR struct _IO_FILE
  1682 ;;		 -> NULL(0), 
  1683 ;;  fmt             2    5[BANK0 ] PTR const unsigned char 
  1684 ;;		 -> STR_6(11), STR_5(10), STR_4(11), STR_3(10), 
  1685 ;;  ap              1    7[BANK0 ] PTR PTR void 
  1686 ;;		 -> printf@ap(1), 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  1689 ;;		 -> NULL(0), 
  1690 ;;  cfmt            2   11[BANK0 ] PTR unsigned char 
  1691 ;;		 -> STR_6(11), STR_5(10), STR_4(11), STR_3(10), 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  2    5[BANK0 ] int 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1701 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1702 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1703 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1704 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1705 ;;Total ram usage:        8 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 4
  1708 ;; This function calls:
  1709 ;;		_vfpfcnvrt
  1710 ;; This function is called by:
  1711 ;;		_printf
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715  0660                     _vfprintf:	
  1716                           ;psect for function _vfprintf
  1717                           
  1718                           
  1719                           ;incstack = 0
  1720                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1721                           ;vfprintf@fp stored from wreg
  1722  0660  0020               	movlb	0	; select bank0
  1723  0661  00E5               	movwf	vfprintf@fp
  1724  0662                     l1213:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1727  0662  0861               	movf	vfprintf@fmt+1,w
  1728  0663  00E7               	movwf	vfprintf@cfmt+1
  1729  0664  0860               	movf	vfprintf@fmt,w
  1730  0665  00E6               	movwf	vfprintf@cfmt
  1731  0666                     l1215:
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1734  0666  01C0               	clrf	_nout
  1735  0667  01C1               	clrf	_nout+1
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1738  0668  2E7A               	goto	l1219
  1739  0669                     l1217:
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1742  0669  3066               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1743  066A  00E3               	movwf	??_vfprintf
  1744  066B  0863               	movf	??_vfprintf,w
  1745  066C  00FA               	movwf	vfpfcnvrt@fmt
  1746  066D  0862               	movf	vfprintf@ap,w
  1747  066E  00E4               	movwf	??_vfprintf+1
  1748  066F  0864               	movf	??_vfprintf+1,w
  1749  0670  00FB               	movwf	vfpfcnvrt@ap
  1750  0671  0865               	movf	vfprintf@fp,w
  1751  0672  3186  26C9  3186   	fcall	_vfpfcnvrt
  1752  0675  087A               	movf	?_vfpfcnvrt,w
  1753  0676  0020               	movlb	0	; select bank0
  1754  0677  07C0               	addwf	_nout,f
  1755  0678  087B               	movf	?_vfpfcnvrt+1,w
  1756  0679  3DC1               	addwfc	_nout+1,f
  1757  067A                     l1219:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1760  067A  0866               	movf	vfprintf@cfmt,w
  1761  067B  0084               	movwf	4
  1762  067C  0867               	movf	vfprintf@cfmt+1,w
  1763  067D  0085               	movwf	5
  1764  067E  0012               	moviw fsr0++
  1765  067F  1D03               	btfss	3,2
  1766  0680  2E82               	goto	u291
  1767  0681  2E83               	goto	u290
  1768  0682                     u291:
  1769  0682  2E69               	goto	l1217
  1770  0683                     u290:
  1771  0683                     l1221:
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1774  0683  0841               	movf	_nout+1,w
  1775  0684  00E1               	movwf	?_vfprintf+1
  1776  0685  0840               	movf	_nout,w
  1777  0686  00E0               	movwf	?_vfprintf
  1778  0687                     l865:
  1779  0687  0008               	return
  1780  0688                     __end_of_vfprintf:
  1781                           
  1782                           	psect	text3
  1783  06C9                     __ptext3:	
  1784 ;; *************** function _vfpfcnvrt *****************
  1785 ;; Defined at:
  1786 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  fp              1    wreg     PTR struct _IO_FILE
  1789 ;;		 -> NULL(0), 
  1790 ;;  fmt             1   10[COMMON] PTR PTR unsigned char 
  1791 ;;		 -> vfprintf@cfmt(2), 
  1792 ;;  ap              1   11[COMMON] PTR PTR void 
  1793 ;;		 -> printf@ap(1), 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  fp              1   12[COMMON] PTR struct _IO_FILE
  1796 ;;		 -> NULL(0), 
  1797 ;;  llu             8    0        unsigned long long 
  1798 ;;  ll              8    0        long long 
  1799 ;;  f               4    0        long long 
  1800 ;;  ct              3    0        unsigned char [3]
  1801 ;;  vp              2    0        PTR void 
  1802 ;;  i               2    0        int 
  1803 ;;  done            2    0        int 
  1804 ;;  cp              2    0        PTR unsigned char 
  1805 ;;  c               1    0        unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  2   10[COMMON] int 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1817 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1818 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1819 ;;Total ram usage:        8 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 3
  1822 ;; This function calls:
  1823 ;;		_fputc
  1824 ;; This function is called by:
  1825 ;;		_vfprintf
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829  06C9                     _vfpfcnvrt:	
  1830                           ;psect for function _vfpfcnvrt
  1831                           
  1832                           
  1833                           ;incstack = 0
  1834                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1835                           ;vfpfcnvrt@fp stored from wreg
  1836  06C9  00FC               	movwf	vfpfcnvrt@fp
  1837  06CA                     l1135:
  1838                           
  1839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1840  06CA  087A               	movf	vfpfcnvrt@fmt,w
  1841  06CB  0086               	movwf	6
  1842  06CC  0187               	clrf	7
  1843  06CD  3F40               	moviw [0]fsr1
  1844  06CE  0020               	movlb	0	; select bank0
  1845  06CF  00DB               	movwf	??_vfpfcnvrt
  1846  06D0  3F41               	moviw [1]fsr1
  1847  06D1  00DC               	movwf	??_vfpfcnvrt+1
  1848  06D2  085B               	movf	??_vfpfcnvrt,w
  1849  06D3  0084               	movwf	4
  1850  06D4  085C               	movf	??_vfpfcnvrt+1,w
  1851  06D5  0085               	movwf	5
  1852  06D6  0012               	moviw fsr0++
  1853  06D7  3A25               	xorlw	37
  1854  06D8  1D03               	btfss	3,2
  1855  06D9  2EDB               	goto	u261
  1856  06DA  2EDC               	goto	u260
  1857  06DB                     u261:
  1858  06DB  2F20               	goto	l1159
  1859  06DC                     u260:
  1860  06DC                     l1137:
  1861                           
  1862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1863  06DC  087A               	movf	vfpfcnvrt@fmt,w
  1864  06DD  0086               	movwf	6
  1865  06DE  0187               	clrf	7
  1866  06DF  3001               	movlw	1
  1867  06E0  0781               	addwf	1,f
  1868  06E1  3141               	addfsr 1,1
  1869  06E2  1803               	skipnc
  1870  06E3  0A81               	incf	1,f
  1871  06E4                     l1139:
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1874  06E4  01C2               	clrf	_width
  1875  06E5  01C3               	clrf	_width+1
  1876  06E6  01C6               	clrf	_flags
  1877  06E7  01C7               	clrf	_flags+1
  1878  06E8                     l1141:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1881  06E8  30FF               	movlw	255
  1882  06E9  00C4               	movwf	_prec
  1883  06EA  30FF               	movlw	255
  1884  06EB  00C5               	movwf	_prec+1
  1885  06EC                     l1143:
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1888  06EC  087A               	movf	vfpfcnvrt@fmt,w
  1889  06ED  0086               	movwf	6
  1890  06EE  0187               	clrf	7
  1891  06EF  3F40               	moviw [0]fsr1
  1892  06F0  00DB               	movwf	??_vfpfcnvrt
  1893  06F1  3F41               	moviw [1]fsr1
  1894  06F2  00DC               	movwf	??_vfpfcnvrt+1
  1895  06F3  085B               	movf	??_vfpfcnvrt,w
  1896  06F4  0084               	movwf	4
  1897  06F5  085C               	movf	??_vfpfcnvrt+1,w
  1898  06F6  0085               	movwf	5
  1899  06F7  0012               	moviw fsr0++
  1900  06F8  3A25               	xorlw	37
  1901  06F9  1D03               	btfss	3,2
  1902  06FA  2EFC               	goto	u271
  1903  06FB  2EFD               	goto	u270
  1904  06FC                     u271:
  1905  06FC  2F15               	goto	l1153
  1906  06FD                     u270:
  1907  06FD                     l1145:
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1910  06FD  087A               	movf	vfpfcnvrt@fmt,w
  1911  06FE  0086               	movwf	6
  1912  06FF  0187               	clrf	7
  1913  0700  3001               	movlw	1
  1914  0701  0781               	addwf	1,f
  1915  0702  3141               	addfsr 1,1
  1916  0703  1803               	skipnc
  1917  0704  0A81               	incf	1,f
  1918  0705                     l1147:
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1921  0705  3025               	movlw	37
  1922  0706  00F2               	movwf	fputc@c
  1923  0707  3000               	movlw	0
  1924  0708  00F3               	movwf	fputc@c+1
  1925  0709  087C               	movf	vfpfcnvrt@fp,w
  1926  070A  00DB               	movwf	??_vfpfcnvrt
  1927  070B  085B               	movf	??_vfpfcnvrt,w
  1928  070C  00F4               	movwf	fputc@fp
  1929  070D  3186  2688  3186   	fcall	_fputc
  1930  0710                     l1149:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1933  0710  3001               	movlw	1
  1934  0711  00FA               	movwf	?_vfpfcnvrt
  1935  0712  3000               	movlw	0
  1936  0713  00FB               	movwf	?_vfpfcnvrt+1
  1937  0714  2F42               	goto	l859
  1938  0715                     l1153:
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1941  0715  087A               	movf	vfpfcnvrt@fmt,w
  1942  0716  0086               	movwf	6
  1943  0717  0187               	clrf	7
  1944  0718  3001               	movlw	1
  1945  0719  0781               	addwf	1,f
  1946  071A  3141               	addfsr 1,1
  1947  071B  1803               	skipnc
  1948  071C  0A81               	incf	1,f
  1949  071D                     l1155:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1952  071D  01FA               	clrf	?_vfpfcnvrt
  1953  071E  01FB               	clrf	?_vfpfcnvrt+1
  1954  071F  2F42               	goto	l859
  1955  0720                     l1159:
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1958  0720  087A               	movf	vfpfcnvrt@fmt,w
  1959  0721  0086               	movwf	6
  1960  0722  0187               	clrf	7
  1961  0723  3F40               	moviw [0]fsr1
  1962  0724  00DB               	movwf	??_vfpfcnvrt
  1963  0725  3F41               	moviw [1]fsr1
  1964  0726  00DC               	movwf	??_vfpfcnvrt+1
  1965  0727  085B               	movf	??_vfpfcnvrt,w
  1966  0728  0084               	movwf	4
  1967  0729  085C               	movf	??_vfpfcnvrt+1,w
  1968  072A  0085               	movwf	5
  1969  072B  0800               	movf	0,w	;code access
  1970  072C  00DD               	movwf	??_vfpfcnvrt+2
  1971  072D  01DE               	clrf	??_vfpfcnvrt+3
  1972  072E  085D               	movf	??_vfpfcnvrt+2,w
  1973  072F  00F2               	movwf	fputc@c
  1974  0730  085E               	movf	??_vfpfcnvrt+3,w
  1975  0731  00F3               	movwf	fputc@c+1
  1976  0732  087C               	movf	vfpfcnvrt@fp,w
  1977  0733  00DF               	movwf	??_vfpfcnvrt+4
  1978  0734  085F               	movf	??_vfpfcnvrt+4,w
  1979  0735  00F4               	movwf	fputc@fp
  1980  0736  3186  2688  3186   	fcall	_fputc
  1981  0739                     l1161:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1984  0739  087A               	movf	vfpfcnvrt@fmt,w
  1985  073A  0086               	movwf	6
  1986  073B  0187               	clrf	7
  1987  073C  3001               	movlw	1
  1988  073D  0781               	addwf	1,f
  1989  073E  3141               	addfsr 1,1
  1990  073F  1803               	skipnc
  1991  0740  0A81               	incf	1,f
  1992  0741  2F10               	goto	l1149
  1993  0742                     l859:
  1994  0742  0008               	return
  1995  0743                     __end_of_vfpfcnvrt:
  1996                           
  1997                           	psect	text4
  1998  0688                     __ptext4:	
  1999 ;; *************** function _fputc *****************
  2000 ;; Defined at:
  2001 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  c               2    2[COMMON] int 
  2004 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  2005 ;;		 -> NULL(0), 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  2    2[COMMON] int 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2017 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2019 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2020 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2021 ;;Total ram usage:        8 bytes
  2022 ;; Hardware stack levels used: 1
  2023 ;; Hardware stack levels required when called: 2
  2024 ;; This function calls:
  2025 ;;		_putch
  2026 ;; This function is called by:
  2027 ;;		_vfpfcnvrt
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031  0688                     _fputc:	
  2032                           ;psect for function _fputc
  2033                           
  2034  0688                     l1115:	
  2035                           ;incstack = 0
  2036                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2037                           
  2038  0688  0874               	movf	fputc@fp,w
  2039  0689  1903               	btfsc	3,2
  2040  068A  2E8C               	goto	u221
  2041  068B  2E8D               	goto	u220
  2042  068C                     u221:
  2043  068C  2E92               	goto	l1119
  2044  068D                     u220:
  2045  068D                     l1117:
  2046  068D  0874               	movf	fputc@fp,w
  2047  068E  1D03               	btfss	3,2
  2048  068F  2E91               	goto	u231
  2049  0690  2E92               	goto	u230
  2050  0691                     u231:
  2051  0691  2E97               	goto	l1121
  2052  0692                     u230:
  2053  0692                     l1119:
  2054  0692  0872               	movf	fputc@c,w
  2055  0693  3185  25B7  3186   	fcall	_putch
  2056  0696  2EC8               	goto	l877
  2057  0697                     l1121:
  2058  0697  0874               	movf	fputc@fp,w
  2059  0698  3E08               	addlw	8
  2060  0699  0086               	movwf	6
  2061  069A  0187               	clrf	7
  2062  069B  0016               	moviw fsr1++
  2063  069C  0401               	iorwf	1,w
  2064  069D  1903               	btfsc	3,2
  2065  069E  2EA0               	goto	u241
  2066  069F  2EA1               	goto	u240
  2067  06A0                     u241:
  2068  06A0  2EBF               	goto	l1125
  2069  06A1                     u240:
  2070  06A1                     l1123:
  2071  06A1  0874               	movf	fputc@fp,w
  2072  06A2  3E08               	addlw	8
  2073  06A3  0086               	movwf	6
  2074  06A4  0187               	clrf	7
  2075  06A5  3F40               	moviw [0]fsr1
  2076  06A6  00F5               	movwf	??_fputc
  2077  06A7  3F41               	moviw [1]fsr1
  2078  06A8  00F6               	movwf	??_fputc+1
  2079  06A9  0874               	movf	fputc@fp,w
  2080  06AA  3E02               	addlw	2
  2081  06AB  0086               	movwf	6
  2082  06AC  0187               	clrf	7
  2083  06AD  3F40               	moviw [0]fsr1
  2084  06AE  00F7               	movwf	??_fputc+2
  2085  06AF  3F41               	moviw [1]fsr1
  2086  06B0  00F8               	movwf	??_fputc+3
  2087  06B1  0878               	movf	??_fputc+3,w
  2088  06B2  3A80               	xorlw	128
  2089  06B3  00F9               	movwf	??_fputc+4
  2090  06B4  0876               	movf	??_fputc+1,w
  2091  06B5  3A80               	xorlw	128
  2092  06B6  0279               	subwf	??_fputc+4,w
  2093  06B7  1D03               	skipz
  2094  06B8  2EBB               	goto	u255
  2095  06B9  0875               	movf	??_fputc,w
  2096  06BA  0277               	subwf	??_fputc+2,w
  2097  06BB                     u255:
  2098  06BB  1803               	skipnc
  2099  06BC  2EBE               	goto	u251
  2100  06BD  2EBF               	goto	u250
  2101  06BE                     u251:
  2102  06BE  2EC8               	goto	l877
  2103  06BF                     u250:
  2104  06BF                     l1125:
  2105  06BF  0874               	movf	fputc@fp,w
  2106  06C0  3E02               	addlw	2
  2107  06C1  0086               	movwf	6
  2108  06C2  0187               	clrf	7
  2109  06C3  3001               	movlw	1
  2110  06C4  0781               	addwf	1,f
  2111  06C5  3141               	addfsr 1,1
  2112  06C6  1803               	skipnc
  2113  06C7  0A81               	incf	1,f
  2114  06C8                     l877:
  2115  06C8  0008               	return
  2116  06C9                     __end_of_fputc:
  2117                           
  2118                           	psect	text5
  2119  05B7                     __ptext5:	
  2120 ;; *************** function _putch *****************
  2121 ;; Defined at:
  2122 ;;		line 146 in file "mcc_generated_files/eusart.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  txData          1    wreg     unsigned char 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  txData          1    1[COMMON] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;Total ram usage:        1 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 1
  2143 ;; This function calls:
  2144 ;;		_EUSART_Write
  2145 ;; This function is called by:
  2146 ;;		_fputc
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150  05B7                     _putch:	
  2151                           ;psect for function _putch
  2152                           
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  2156                           ;putch@txData stored from wreg
  2157  05B7  00F1               	movwf	putch@txData
  2158  05B8                     l1113:
  2159                           
  2160                           ;mcc_generated_files/eusart.c: 146: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 147: {;mcc_generated_files/eusart.c: 148:     EUSART_Write(txData);
  2161  05B8  0871               	movf	putch@txData,w
  2162  05B9  3185  25C3  3185   	fcall	_EUSART_Write
  2163  05BC                     l150:
  2164  05BC  0008               	return
  2165  05BD                     __end_of_putch:
  2166                           
  2167                           	psect	text6
  2168  05D9                     __ptext6:	
  2169 ;; *************** function _SYSTEM_Initialize *****************
  2170 ;; Defined at:
  2171 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0, pclath, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2189 ;;Total ram usage:        0 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; Hardware stack levels required when called: 2
  2192 ;; This function calls:
  2193 ;;		_EUSART_Initialize
  2194 ;;		_OSCILLATOR_Initialize
  2195 ;;		_PIN_MANAGER_Initialize
  2196 ;;		_WDT_Initialize
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202  05D9                     _SYSTEM_Initialize:	
  2203                           ;psect for function _SYSTEM_Initialize
  2204                           
  2205  05D9                     l1225:	
  2206                           ;incstack = 0
  2207                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2208                           
  2209                           
  2210                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2211  05D9  3185  25F8  3185   	fcall	_PIN_MANAGER_Initialize
  2212                           
  2213                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2214  05DC  3185  25CD  3185   	fcall	_OSCILLATOR_Initialize
  2215                           
  2216                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2217  05DF  3185  25A1  3185   	fcall	_WDT_Initialize
  2218                           
  2219                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  2220  05E2  3186  263D  3185   	fcall	_EUSART_Initialize
  2221  05E5                     l21:
  2222  05E5  0008               	return
  2223  05E6                     __end_of_SYSTEM_Initialize:
  2224                           
  2225                           	psect	text7
  2226  05A1                     __ptext7:	
  2227 ;; *************** function _WDT_Initialize *****************
  2228 ;; Defined at:
  2229 ;;		line 73 in file "mcc_generated_files/mcc.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_SYSTEM_Initialize
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256  05A1                     _WDT_Initialize:	
  2257                           ;psect for function _WDT_Initialize
  2258                           
  2259  05A1                     l1201:	
  2260                           ;incstack = 0
  2261                           ; Regs used in _WDT_Initialize: [wreg]
  2262                           
  2263                           
  2264                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  2265  05A1  3016               	movlw	22
  2266  05A2  0021               	movlb	1	; select bank1
  2267  05A3  0097               	movwf	23	;volatile
  2268  05A4                     l30:
  2269  05A4  0008               	return
  2270  05A5                     __end_of_WDT_Initialize:
  2271                           
  2272                           	psect	text8
  2273  05F8                     __ptext8:	
  2274 ;; *************** function _PIN_MANAGER_Initialize *****************
  2275 ;; Defined at:
  2276 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_SYSTEM_Initialize
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303  05F8                     _PIN_MANAGER_Initialize:	
  2304                           ;psect for function _PIN_MANAGER_Initialize
  2305                           
  2306  05F8                     l1167:	
  2307                           ;incstack = 0
  2308                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2309                           
  2310                           
  2311                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2312  05F8  0022               	movlb	2	; select bank2
  2313  05F9  0190               	clrf	16	;volatile
  2314                           
  2315                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2316  05FA  018F               	clrf	15	;volatile
  2317                           
  2318                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2319  05FB  018C               	clrf	12	;volatile
  2320                           
  2321                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2322  05FC  018D               	clrf	13	;volatile
  2323                           
  2324                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2325  05FD  018E               	clrf	14	;volatile
  2326  05FE                     l1169:
  2327                           
  2328                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x0F;
  2329  05FE  300F               	movlw	15
  2330  05FF  0021               	movlb	1	; select bank1
  2331  0600  0090               	movwf	16	;volatile
  2332  0601                     l1171:
  2333                           
  2334                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  2335  0601  30FF               	movlw	255
  2336  0602  008C               	movwf	12	;volatile
  2337  0603                     l1173:
  2338                           
  2339                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  2340  0603  30FF               	movlw	255
  2341  0604  008D               	movwf	13	;volatile
  2342  0605                     l1175:
  2343                           
  2344                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  2345  0605  30BF               	movlw	191
  2346  0606  008E               	movwf	14	;volatile
  2347  0607                     l1177:
  2348                           
  2349                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  2350  0607  30FF               	movlw	255
  2351  0608  008F               	movwf	15	;volatile
  2352  0609                     l1179:
  2353                           
  2354                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  2355  0609  30FF               	movlw	255
  2356  060A  0023               	movlb	3	; select bank3
  2357  060B  008F               	movwf	15	;volatile
  2358  060C                     l1181:
  2359                           
  2360                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x38;
  2361  060C  3038               	movlw	56
  2362  060D  008D               	movwf	13	;volatile
  2363  060E                     l1183:
  2364                           
  2365                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x07;
  2366  060E  3007               	movlw	7
  2367  060F  0090               	movwf	16	;volatile
  2368  0610                     l1185:
  2369                           
  2370                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x3F;
  2371  0610  303F               	movlw	63
  2372  0611  008C               	movwf	12	;volatile
  2373  0612                     l1187:
  2374                           
  2375                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  2376  0612  0024               	movlb	4	; select bank4
  2377  0613  0190               	clrf	16	;volatile
  2378  0614                     l1189:
  2379                           
  2380                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  2381  0614  018D               	clrf	13	;volatile
  2382  0615                     l1191:
  2383                           
  2384                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  2385  0615  0021               	movlb	1	; select bank1
  2386  0616  1795               	bsf	21,7	;volatile
  2387  0617                     l1193:
  2388                           
  2389                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  2390  0617  0022               	movlb	2	; select bank2
  2391  0618  019D               	clrf	29	;volatile
  2392  0619                     l69:
  2393  0619  0008               	return
  2394  061A                     __end_of_PIN_MANAGER_Initialize:
  2395                           
  2396                           	psect	text9
  2397  05CD                     __ptext9:	
  2398 ;; *************** function _OSCILLATOR_Initialize *****************
  2399 ;; Defined at:
  2400 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_SYSTEM_Initialize
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427  05CD                     _OSCILLATOR_Initialize:	
  2428                           ;psect for function _OSCILLATOR_Initialize
  2429                           
  2430  05CD                     l1195:	
  2431                           ;incstack = 0
  2432                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2433                           
  2434                           
  2435                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  2436  05CD  3070               	movlw	112
  2437  05CE  0021               	movlb	1	; select bank1
  2438  05CF  0099               	movwf	25	;volatile
  2439  05D0                     l1197:
  2440                           
  2441                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  2442  05D0  0198               	clrf	24	;volatile
  2443  05D1                     l1199:
  2444                           
  2445                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  2446  05D1  0022               	movlb	2	; select bank2
  2447  05D2  0196               	clrf	22	;volatile
  2448  05D3                     l24:	
  2449                           ;mcc_generated_files/mcc.c: 69:     {;mcc_generated_files/mcc.c: 70:     }
  2450                           
  2451                           
  2452                           ;mcc_generated_files/mcc.c: 68:     while(PLLR == 0)
  2453  05D3  0021               	movlb	1	; select bank1
  2454  05D4  1F1A               	btfss	26,6	;volatile
  2455  05D5  2DD7               	goto	u281
  2456  05D6  2DD8               	goto	u280
  2457  05D7                     u281:
  2458  05D7  2DD3               	goto	l24
  2459  05D8                     u280:
  2460  05D8                     l27:
  2461  05D8  0008               	return
  2462  05D9                     __end_of_OSCILLATOR_Initialize:
  2463                           
  2464                           	psect	text10
  2465  063D                     __ptext10:	
  2466 ;; *************** function _EUSART_Initialize *****************
  2467 ;; Defined at:
  2468 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0, pclath, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2486 ;;Total ram usage:        0 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 1
  2489 ;; This function calls:
  2490 ;;		_EUSART_SetErrorHandler
  2491 ;;		_EUSART_SetFramingErrorHandler
  2492 ;;		_EUSART_SetOverrunErrorHandler
  2493 ;; This function is called by:
  2494 ;;		_SYSTEM_Initialize
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498  063D                     _EUSART_Initialize:	
  2499                           ;psect for function _EUSART_Initialize
  2500                           
  2501  063D                     l1203:	
  2502                           ;incstack = 0
  2503                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2504                           
  2505                           
  2506                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  2507  063D  3008               	movlw	8
  2508  063E  0023               	movlb	3	; select bank3
  2509  063F  009F               	movwf	31	;volatile
  2510                           
  2511                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  2512  0640  3090               	movlw	144
  2513  0641  009D               	movwf	29	;volatile
  2514                           
  2515                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  2516  0642  3024               	movlw	36
  2517  0643  009E               	movwf	30	;volatile
  2518                           
  2519                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x40;
  2520  0644  3040               	movlw	64
  2521  0645  009B               	movwf	27	;volatile
  2522                           
  2523                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x03;
  2524  0646  3003               	movlw	3
  2525  0647  009C               	movwf	28	;volatile
  2526  0648                     l1205:
  2527                           
  2528                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2529  0648  3000               	movlw	0
  2530  0649  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  2531  064A  3000               	movlw	0
  2532  064B  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  2533  064C  3185  25AB  3186   	fcall	_EUSART_SetFramingErrorHandler
  2534  064F                     l1207:
  2535                           
  2536                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2537  064F  3000               	movlw	0
  2538  0650  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  2539  0651  3000               	movlw	0
  2540  0652  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  2541  0653  3185  25B1  3186   	fcall	_EUSART_SetOverrunErrorHandler
  2542  0656                     l1209:
  2543                           
  2544                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2545  0656  3000               	movlw	0
  2546  0657  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  2547  0658  3000               	movlw	0
  2548  0659  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  2549  065A  3185  25A5  3186   	fcall	_EUSART_SetErrorHandler
  2550  065D                     l1211:
  2551                           
  2552                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  2553  065D  0020               	movlb	0	; select bank0
  2554  065E  01DA               	clrf	_eusartRxLastError	;volatile
  2555  065F                     l117:
  2556  065F  0008               	return
  2557  0660                     __end_of_EUSART_Initialize:
  2558                           
  2559                           	psect	text11
  2560  05B1                     __ptext11:	
  2561 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2562 ;; Defined at:
  2563 ;;		line 170 in file "mcc_generated_files/eusart.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2566 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2582 ;;Total ram usage:        2 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_EUSART_Initialize
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591  05B1                     _EUSART_SetOverrunErrorHandler:	
  2592                           ;psect for function _EUSART_SetOverrunErrorHandler
  2593                           
  2594  05B1                     l1131:	
  2595                           ;incstack = 0
  2596                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  2597                           
  2598                           
  2599                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
  2600  05B1  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  2601  05B2  0020               	movlb	0	; select bank0
  2602  05B3  00D7               	movwf	_EUSART_OverrunErrorHandler+1
  2603  05B4  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  2604  05B5  00D6               	movwf	_EUSART_OverrunErrorHandler
  2605  05B6                     l165:
  2606  05B6  0008               	return
  2607  05B7                     __end_of_EUSART_SetOverrunErrorHandler:
  2608                           
  2609                           	psect	text12
  2610  05AB                     __ptext12:	
  2611 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2612 ;; Defined at:
  2613 ;;		line 166 in file "mcc_generated_files/eusart.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2616 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2632 ;;Total ram usage:        2 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; This function calls:
  2635 ;;		Nothing
  2636 ;; This function is called by:
  2637 ;;		_EUSART_Initialize
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641  05AB                     _EUSART_SetFramingErrorHandler:	
  2642                           ;psect for function _EUSART_SetFramingErrorHandler
  2643                           
  2644  05AB                     l1129:	
  2645                           ;incstack = 0
  2646                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  2647                           
  2648                           
  2649                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
  2650  05AB  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  2651  05AC  0020               	movlb	0	; select bank0
  2652  05AD  00D9               	movwf	_EUSART_FramingErrorHandler+1
  2653  05AE  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  2654  05AF  00D8               	movwf	_EUSART_FramingErrorHandler
  2655  05B0                     l162:
  2656  05B0  0008               	return
  2657  05B1                     __end_of_EUSART_SetFramingErrorHandler:
  2658                           
  2659                           	psect	text13
  2660  05A5                     __ptext13:	
  2661 ;; *************** function _EUSART_SetErrorHandler *****************
  2662 ;; Defined at:
  2663 ;;		line 174 in file "mcc_generated_files/eusart.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  2666 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2682 ;;Total ram usage:        2 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_EUSART_Initialize
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691  05A5                     _EUSART_SetErrorHandler:	
  2692                           ;psect for function _EUSART_SetErrorHandler
  2693                           
  2694  05A5                     l1133:	
  2695                           ;incstack = 0
  2696                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  2697                           
  2698                           
  2699                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
  2700  05A5  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  2701  05A6  0020               	movlb	0	; select bank0
  2702  05A7  00D5               	movwf	_EUSART_ErrorHandler+1
  2703  05A8  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  2704  05A9  00D4               	movwf	_EUSART_ErrorHandler
  2705  05AA                     l168:
  2706  05AA  0008               	return
  2707  05AB                     __end_of_EUSART_SetErrorHandler:
  2708                           
  2709                           	psect	text14
  2710  061A                     __ptext14:	
  2711 ;; *************** function _EUSART_Text *****************
  2712 ;; Defined at:
  2713 ;;		line 178 in file "mcc_generated_files/eusart.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  texto           2    1[COMMON] PTR unsigned char 
  2716 ;;		 -> STR_2(11), STR_1(10), 
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;		None
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2728 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2731 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2732 ;;Total ram usage:        4 bytes
  2733 ;; Hardware stack levels used: 1
  2734 ;; Hardware stack levels required when called: 1
  2735 ;; This function calls:
  2736 ;;		_EUSART_Write
  2737 ;; This function is called by:
  2738 ;;		_main
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742  061A                     _EUSART_Text:	
  2743                           ;psect for function _EUSART_Text
  2744                           
  2745  061A                     l1239:	
  2746                           ;incstack = 0
  2747                           ; Regs used in _EUSART_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2748                           
  2749                           
  2750                           ;mcc_generated_files/eusart.c: 179:     while(*texto){
  2751  061A  2E33               	goto	l1247
  2752  061B                     l1241:
  2753                           
  2754                           ;mcc_generated_files/eusart.c: 180:         EUSART_Write(*texto);
  2755  061B  0871               	movf	EUSART_Text@texto,w
  2756  061C  0084               	movwf	4
  2757  061D  0872               	movf	EUSART_Text@texto+1,w
  2758  061E  0085               	movwf	5
  2759  061F  0800               	movf	0,w	;code access
  2760  0620  3185  25C3  3186   	fcall	_EUSART_Write
  2761  0623                     l1243:
  2762                           
  2763                           ;mcc_generated_files/eusart.c: 181:         texto++;
  2764  0623  3001               	movlw	1
  2765  0624  07F1               	addwf	EUSART_Text@texto,f
  2766  0625  3000               	movlw	0
  2767  0626  3DF2               	addwfc	EUSART_Text@texto+1,f
  2768  0627                     l1245:
  2769                           
  2770                           ;mcc_generated_files/eusart.c: 182:         _delay((unsigned long)((50)*(32000000UL/4000
      +                          .0)));
  2771  0627  3003               	movlw	3
  2772  0628  00F4               	movwf	??_EUSART_Text+1
  2773  0629  3008               	movlw	8
  2774  062A  00F3               	movwf	??_EUSART_Text
  2775  062B  3077               	movlw	119
  2776  062C                     u407:
  2777  062C  0B89               	decfsz	9,f
  2778  062D  2E2C               	goto	u407
  2779  062E  0BF3               	decfsz	??_EUSART_Text,f
  2780  062F  2E2C               	goto	u407
  2781  0630  0BF4               	decfsz	??_EUSART_Text+1,f
  2782  0631  2E2C               	goto	u407
  2783  0632  0000               	nop
  2784  0633                     l1247:
  2785                           
  2786                           ;mcc_generated_files/eusart.c: 179:     while(*texto){
  2787  0633  0871               	movf	EUSART_Text@texto,w
  2788  0634  0084               	movwf	4
  2789  0635  0872               	movf	EUSART_Text@texto+1,w
  2790  0636  0085               	movwf	5
  2791  0637  0012               	moviw fsr0++
  2792  0638  1D03               	btfss	3,2
  2793  0639  2E3B               	goto	u321
  2794  063A  2E3C               	goto	u320
  2795  063B                     u321:
  2796  063B  2E1B               	goto	l1241
  2797  063C                     u320:
  2798  063C                     l174:
  2799  063C  0008               	return
  2800  063D                     __end_of_EUSART_Text:
  2801                           
  2802                           	psect	text15
  2803  05C3                     __ptext15:	
  2804 ;; *************** function _EUSART_Write *****************
  2805 ;; Defined at:
  2806 ;;		line 132 in file "mcc_generated_files/eusart.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  txData          1    wreg     unsigned char 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  txData          1    0[COMMON] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2824 ;;Total ram usage:        1 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_putch
  2830 ;;		_EUSART_Text
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834  05C3                     _EUSART_Write:	
  2835                           ;psect for function _EUSART_Write
  2836                           
  2837                           
  2838                           ;incstack = 0
  2839                           ; Regs used in _EUSART_Write: [wreg]
  2840                           ;EUSART_Write@txData stored from wreg
  2841  05C3  00F0               	movwf	EUSART_Write@txData
  2842  05C4                     l1109:
  2843  05C4                     l141:	
  2844                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  2845                           
  2846                           
  2847                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  2848  05C4  0020               	movlb	0	; select bank0
  2849  05C5  1E11               	btfss	17,4	;volatile
  2850  05C6  2DC8               	goto	u211
  2851  05C7  2DC9               	goto	u210
  2852  05C8                     u211:
  2853  05C8  2DC4               	goto	l141
  2854  05C9                     u210:
  2855  05C9                     l1111:
  2856                           
  2857                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  2858  05C9  0870               	movf	EUSART_Write@txData,w
  2859  05CA  0023               	movlb	3	; select bank3
  2860  05CB  009A               	movwf	26	;volatile
  2861  05CC                     l144:
  2862  05CC  0008               	return
  2863  05CD                     __end_of_EUSART_Write:
  2864  007E                     btemp	set	126	;btemp
  2865  007E                     wtemp0	set	126
  2866                           
  2867                           	psect	idloc
  2868                           
  2869                           ;Config register IDLOC0 @ 0x8000
  2870                           ;	unspecified, using default values
  2871  8000                     	org	32768
  2872  8000  3FFF               	dw	16383
  2873                           
  2874                           ;Config register IDLOC1 @ 0x8001
  2875                           ;	unspecified, using default values
  2876  8001                     	org	32769
  2877  8001  3FFF               	dw	16383
  2878                           
  2879                           ;Config register IDLOC2 @ 0x8002
  2880                           ;	unspecified, using default values
  2881  8002                     	org	32770
  2882  8002  3FFF               	dw	16383
  2883                           
  2884                           ;Config register IDLOC3 @ 0x8003
  2885                           ;	unspecified, using default values
  2886  8003                     	org	32771
  2887  8003  3FFF               	dw	16383
  2888                           
  2889                           	psect	config
  2890                           
  2891                           ;Config register CONFIG1 @ 0x8007
  2892                           ;	Oscillator Selection
  2893                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  2894                           ;	Watchdog Timer Enable
  2895                           ;	WDTE = OFF, WDT disabled
  2896                           ;	Power-up Timer Enable
  2897                           ;	PWRTE = OFF, PWRT disabled
  2898                           ;	MCLR Pin Function Select
  2899                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2900                           ;	Flash Program Memory Code Protection
  2901                           ;	CP = OFF, Program memory code protection is disabled
  2902                           ;	Data Memory Code Protection
  2903                           ;	CPD = OFF, Data memory code protection is disabled
  2904                           ;	Brown-out Reset Enable
  2905                           ;	BOREN = ON, Brown-out Reset enabled
  2906                           ;	Clock Out Enable
  2907                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2908                           ;	Internal/External Switchover
  2909                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2910                           ;	Fail-Safe Clock Monitor Enable
  2911                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2912  8007                     	org	32775
  2913  8007  3FE4               	dw	16356
  2914                           
  2915                           ;Config register CONFIG2 @ 0x8008
  2916                           ;	Flash Memory Self-Write Protection
  2917                           ;	WRT = OFF, Write protection off
  2918                           ;	Voltage Regulator Capacitor Enable
  2919                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2920                           ;	PLL Enable
  2921                           ;	PLLEN = ON, 4x PLL enabled
  2922                           ;	Stack Overflow/Underflow Reset Enable
  2923                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  2924                           ;	Brown-out Reset Voltage Selection
  2925                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  2926                           ;	Low-Voltage Programming Enable
  2927                           ;	LVP = ON, Low-voltage programming enabled
  2928  8008                     	org	32776
  2929  8008  3FFF               	dw	16383

Data Sizes:
    Strings     63
    Constant    0
    Data        0
    BSS         59
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      77
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    S814$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S814$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[10]), STR_4(CODE[11]), STR_3(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[10]), STR_4(CODE[11]), STR_3(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[11]), STR_5(CODE[10]), STR_4(CODE[11]), STR_3(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_Text@texto	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[10]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _main->_printf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Text->_EUSART_Write

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2353
                                             16 BANK0      2     2      0
                        _EUSART_Text
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    1840
                                             13 COMMON     1     1      0
                                             13 BANK0      3     1      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    1484
                                              5 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    1160
                                             10 COMMON     3     1      2
                                              0 BANK0      5     5      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     760
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Text                                          4     2      2     219
                                              1 COMMON     4     2      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Text
     _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      4D       5       96.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Apr 01 21:52:21 2023

                                           l21 05E5                                             l30 05A4  
                                           l24 05D3                                             l27 05D8  
                                           l69 0619                                            l141 05C4  
                                          l117 065F                                            l150 05BC  
                                          l144 05CC                                            l162 05B0  
                                          l165 05B6                                            l174 063C  
                                          l168 05AA                                            l826 05F7  
                                          l865 0687                                            l859 0742  
                                          l877 06C8                                            u210 05C9  
                                          u211 05C8                                            u220 068D  
                                          u221 068C                                            u230 0692  
                                          u231 0691                                            u320 063C  
                                          u240 06A1                                            u321 063B  
                                          u241 06A0                                            u250 06BF  
                                          u330 0784                                            u251 06BE  
                                          u331 0783                                            u260 06DC  
                                          u340 078E                                            u261 06DB  
                                          u341 078D                                            u270 06FD  
                                          u350 07A8                                            u407 062C  
                                          u255 06BB                                            u271 06FC  
                                          u351 07A7                                            u335 0780  
                                          u280 05D8                                            u360 07B2  
                                          u281 05D7                                            u361 07B1  
                                          u290 0683                                            u370 07CC  
                                          u291 0682                                            u371 07CB  
                                          u355 07A4                                            u380 07D6  
                                          u381 07D5                                            u375 07C8  
                                          u397 07EB                 ?_EUSART_SetFramingErrorHandler 0070  
                                          wreg 0009                                   ?_EUSART_Text 0071  
                                         l1111 05C9                                           l1201 05A1  
                                         l1113 05B8                                           l1121 0697  
                                         l1131 05B1                                           l1211 065D  
                                         l1203 063D                                           l1123 06A1  
                                         l1115 0688                                           l1109 05C4  
                                         l1133 05A5                                           l1205 0648  
                                         l1125 06BF                                           l1117 068D  
                                         l1141 06E8                                           l1221 0683  
                                         l1213 0662                                           l1301 07DE  
                                         l1207 064F                                           l1119 0692  
                                         l1143 06EC                                           l1135 06CA  
                                         l1215 0666                                           l1303 07E5  
                                         l1241 061B                                           l1129 05AB  
                                         l1209 0656                                           l1225 05D9  
                                         l1161 0739                                           l1145 06FD  
                                         l1153 0715                                           l1137 06DC  
                                         l1217 0669                                           l1243 0623  
                                         l1171 0601                                           l1155 071D  
                                         l1147 0705                                           l1139 06E4  
                                         l1219 067A                                           l1251 05EB  
                                         l1245 0627                                           l1181 060C  
                                         l1173 0603                                           l1149 0710  
                                         l1261 0746                                           l1247 0633  
                                         l1239 061A                                           l1191 0615  
                                         l1183 060E                                           l1175 0605  
                                         l1167 05F8                                           l1159 0720  
                                         l1271 0771                                           l1263 074F  
                                         l1193 0617                                           l1185 0610  
                                         l1177 0607                                           l1169 05FE  
                                         l1249 05E6                                           l1281 0796  
                                         l1273 077A                                           l1265 0757  
                                         l1195 05CD                                           l1187 0612  
                                         l1179 0609                                           l1291 07BA  
                                         l1275 0784                                           l1283 079D  
                                         l1267 0760                                           l1259 0743  
                                         l1197 05D0                                           l1189 0614  
                                         l1285 07A8                                           l1293 07C1  
                                         l1277 0788                                           l1269 0769  
                                         l1199 05D1                                           l1295 07CC  
                                         l1287 07AC                                           l1279 078E  
                                         l1297 07D0                                           l1289 07B2  
                                         l1299 07D6                                           STR_1 0821  
                                         STR_2 0800                                           STR_3 082B  
                                         STR_4 080B                                           STR_5 0835  
                                         STR_6 0816                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         _LATD 010F                                           _LATE 0110  
                                         _PLLR 04D6                                           _WPUB 020D  
                                         _WPUE 0210                                           _dbuf 0020  
                                         _main 0743                                           _prec 0044  
                                         _nout 0040                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0002                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 05D9                                          ?_main 0070  
                                        _RCREG 0199                                          _RCSTA 019D  
                                 vfpfcnvrt@fmt 007A                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISD 008F                                          _TRISE 0090  
                                        _TXREG 019A                                          _TXSTA 019E  
                                        _flags 0046                                 _WDT_Initialize 05A1  
                                        _fputc 0688                                          _width 0042  
                                        _putch 05B7                                          status 0003  
                                        wtemp0 007E                                __initialization 07F5  
                                 __end_of_main 07F5                                 ??_EUSART_Write 0070  
                                       ??_main 006B                         __end_of_WDT_Initialize 05A5  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 0056  
                                       ?_fputc 0072                                         _APFCON 011D  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELD 018F  
                                       _ANSELE 0190                                         _BORCON 0116  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                 vfprintf@cfmt 0066                                         _printf 05E6  
                                       fputc@c 0072                                ?_WDT_Initialize 0070  
                             __end_of_vfprintf 0688                              _SYSTEM_Initialize 05D9  
                      __end_of__initialization 07FD                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0072  
                                __end_of_fputc 06C9                                  __end_of_putch 05BD  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                                      ??_fputc 0075                      __end_of_SYSTEM_Initialize 05E6  
                                      ??_putch 0071                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 05CD                                     __pmaintext 0743  
                                      _BAUDCON 019F                                        ?_printf 0068  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0072  
                                    ?_vfprintf 0060                                        __ptext1 05E6  
                                      __ptext2 0660                                        __ptext3 06C9  
                                      __ptext4 0688                                        __ptext5 05B7  
                                      __ptext6 05D9                                        __ptext7 05A1  
                                      __ptext8 05F8                                        __ptext9 05CD  
                        _OSCILLATOR_Initialize 05CD                       ??_PIN_MANAGER_Initialize 0070  
                                      clrloop0 05BE                           end_of_initialization 07FD  
        __end_of_EUSART_SetOverrunErrorHandler 05B7                  _EUSART_SetOverrunErrorHandler 05B1  
                                      fputc@fp 0074                              _EUSART_Initialize 063D  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0743  
                                    _RCSTAbits 019D                                     ??_vfprintf 0063  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
                                    _PORTBbits 000D                                     _statusBTNA 0052  
                                   _statusBTNB 0050                                     _statusBTNC 004E  
                    __end_of_EUSART_Initialize 0660                                      _TXSTAbits 019E  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 007B  
                                  vfpfcnvrt@fp 007C                                   _EUSART_Write 05C3  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_printf 05F8  
                          start_initialization 07F5                                  ??_EUSART_Text 0073  
                                  putch@txData 0071                 ?_EUSART_SetOverrunErrorHandler 0070  
                                  vfprintf@fmt 0060                     _EUSART_FramingErrorHandler 0058  
                       _EUSART_SetErrorHandler 05A5                                       ??_printf 007D  
                                    ___latbits 0003                                  __pcstackBANK0 005B  
                          __end_of_EUSART_Text 063D                         _PIN_MANAGER_Initialize 05F8  
                             EUSART_Text@texto 0071                                      _oldValueA 004C  
                                    _oldValueB 004A                                      _oldValueC 0048  
       EUSART_SetErrorHandler@interruptHandler 0070                                      clear_ram0 05BD  
                            _eusartRxLastError 005A                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072              _EUSART_DefaultOverrunErrorHandler 0000  
                                    _vfpfcnvrt 06C9                                    _EUSART_Text 061A  
                                   vfprintf@ap 0062                                     vfprintf@fp 0065  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 0054  
                                   ?_vfpfcnvrt 007A                                       __ptext10 063D  
                                     __ptext11 05B1                                       __ptext12 05AB  
                                     __ptext13 05A5                                       __ptext14 061A  
                                     __ptext15 05C3                        ?_EUSART_SetErrorHandler 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 0070                                       _vfprintf 0660  
                                    printf@fmt 0068          __end_of_EUSART_SetFramingErrorHandler 05B1  
                _EUSART_SetFramingErrorHandler 05AB                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 05AB                                       printf@ap 006A  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                    ??_vfpfcnvrt 005B  
                                __pstringtext1 0800                                  __pstringtext2 080B  
                                __pstringtext3 0816                                  __pstringtext4 0821  
                                __pstringtext5 082B                                  __pstringtext6 0835  
                                __pstringtext7 0000                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 061A  
